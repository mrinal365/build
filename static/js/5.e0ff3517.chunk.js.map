{"version":3,"sources":["../node_modules/react-slick/lib/utils/innerSliderUtils.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/enquire.js/src/Util.js","../node_modules/react-slick/lib/index.js","../node_modules/react-slick/lib/slider.js","../node_modules/react-slick/lib/inner-slider.js","../node_modules/react-slick/lib/initial-state.js","../node_modules/lodash.debounce/index.js","../node_modules/react-slick/lib/track.js","../node_modules/react-slick/lib/dots.js","../node_modules/react-slick/lib/arrows.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/json2mq/index.js","../node_modules/string-convert/camel2hyphen.js","../node_modules/react-slick/lib/default-props.js","../node_modules/enquire.js/src/index.js","../node_modules/enquire.js/src/MediaQueryDispatch.js","../node_modules/enquire.js/src/MediaQuery.js","../node_modules/enquire.js/src/QueryHandler.js","../node_modules/lottie-react/build/index.umd.js","../node_modules/lottie-web/build/player/lottie.js","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","../node_modules/react-jvectormap/build/index.js","../node_modules/react-bootstrap/esm/Spinner.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormFileInput.js","../node_modules/react-bootstrap/esm/FormFileLabel.js","../node_modules/react-bootstrap/esm/FormFile.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js"],"names":["Object","defineProperty","exports","value","checkSpecKeys","checkNavigable","changeSlide","canUseDOM","canGoNext","clamp","swipeStart","swipeMove","swipeEnd","slidesOnRight","slidesOnLeft","slideHandler","siblingDirection","safePreventDefault","lazyStartIndex","lazySlidesOnRight","lazySlidesOnLeft","lazyEndIndex","keyHandler","initializedState","getWidth","getTrackLeft","getTrackCSS","getTrackAnimateCSS","getTotalSlides","getSwipeDirection","getSlideCount","getRequiredLazySlides","getPreClones","getPostClones","getOnDemandLazySlides","getNavigableIndexes","getHeight","extractObject","obj","_react","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","number","lowerBound","upperBound","Math","max","min","event","includes","_reactName","preventDefault","spec","onDemandSlides","startIndex","endIndex","slideIndex","lazyLoadedList","indexOf","requiredSlides","currentSlide","centerMode","floor","slidesToShow","parseInt","centerPadding","elem","offsetWidth","offsetHeight","touchObject","xDist","yDist","r","swipeAngle","verticalSwiping","undefined","startX","curX","startY","curY","atan2","round","PI","abs","canGo","infinite","slideCount","newObject","slideWidth","Children","count","children","listNode","listRef","listWidth","ceil","trackNode","trackRef","node","trackWidth","vertical","centerPaddingAdj","slice","slideHeight","querySelector","listHeight","initialSlide","rtl","slidesToLoad","state","concat","autoplaying","autoplay","waitForAnimate","animating","fade","index","lazyLoad","slidesToScroll","useCSS","finalSlide","animationLeft","finalLeft","animationSlide","nextState","targetSlide","trackStyle","left","swipeLeft","options","indexOffset","previousInt","slideOffset","previousTargetSlide","message","direction","Number","e","accessibility","tagName","match","keyCode","swipe","draggable","type","dragging","touches","pageX","clientX","pageY","clientY","scrolling","swipeToSlide","edgeFriction","edgeDragged","onEdge","swiped","swiping","swipeEvent","curLeft","swipeLength","sqrt","pow","verticalSwipeLength","positionOffset","dotCount","swipeDirection","touchSwipeLength","touchThreshold","onSwipe","minSwipe","newSlide","activeSlide","currentLeft","breakpoint","counter","indexes","navigables","prevNavigable","n","centerOffset","swipedSlide","slickList","slides","querySelectorAll","Array","from","every","slide","offsetTop","offsetLeft","currentIndex","dataset","keysArray","reduce","hasOwnProperty","console","error","trackHeight","trackChildren","style","opacity","transition","WebkitTransition","useTransform","WebkitTransform","transform","msTransform","width","height","window","addEventListener","attachEvent","marginTop","marginLeft","speed","cssEase","unslick","targetLeft","variableWidth","slidesToOffset","targetSlideIndex","trackElem","childNodes","_ref","right","_ref2","document","createElement","default","_len","validators","_key","allPropTypes","_len2","args","_key2","validator","result","_createChainableTypeChecker2","_createChainableTypeChecker","module","isFunction","isArray","prototype","toString","each","collection","fn","_default","_typeof","Symbol","iterator","constructor","_interopRequireDefault","_innerSlider","_json2mq","_defaultProps","_innerSliderUtils","_extends","assign","call","this","_defineProperties","props","descriptor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","self","TypeError","_assertThisInitialized","ReferenceError","getPrototypeOf","enquire","Slider","_React$Component","subClass","superClass","create","_inherits","Constructor","protoProps","staticProps","_super","_this","instance","_classCallCheck","ref","innerSlider","slickPrev","slickNext","dontAnimate","slickGoTo","pause","autoPlay","_responsiveMediaHandlers","query","handler","register","_this2","responsive","breakpoints","map","breakpt","sort","x","y","bQuery","minWidth","maxWidth","media","setState","unregister","settings","newProps","_this3","resp","toArray","child","trim","rows","slidesPerRow","warn","newChildren","currentWidth","j","row","k","cloneElement","tabIndex","display","className","InnerSlider","innerSliderRefHandler","Component","_initialState","_lodash","_classnames","_track","_dots","_arrows","_resizeObserverPolyfill","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","list","track","adaptiveHeight","onInit","prevState","onLazyLoad","updateState","adaptHeight","lazyLoadTimer","setInterval","progressiveLazyLoad","ro","onWindowResized","callbackTimers","setTimeout","observe","onfocus","pauseOnFocus","onSlideFocus","onblur","onSlideBlur","animationEndCallback","clearTimeout","clearInterval","timer","removeEventListener","detachEvent","autoplayTimer","disconnect","prevProps","checkImagesLoad","onReInit","setTrackStyle","didPropsChange","debouncedResize","cancel","resizeWindow","isTrackMounted","callback","updatedState","_trackWidth","_trackLeft","childrenWidths","preClones","postClones","_i","_i2","_trackStyle","childrenCount","trackLeft","images","imagesCount","loadedCount","image","onclick","prevClickHandler","parentNode","focus","onload","onerror","onLazyLoadError","_index","_this$props","asNavFor","beforeChange","afterChange","_slideHandler","asNavForIndex","firstBatch","focusOnSelect","nodes","clickable","stopPropagation","dir","ontouchmove","returnValue","disableBodyScroll","triggerSlideHandler","enableBodyScroll","isNaN","nextIndex","playType","play","autoplaySpeed","pauseType","dots","prevArrow","nextArrow","trackProps","pauseOnHover","onMouseEnter","onTrackOver","onMouseLeave","onTrackLeave","onMouseOver","selectHandler","dotProps","pauseOnDotsHover","clickHandler","onDotsLeave","onDotsOver","Dots","arrowProps","arrows","PrevArrow","NextArrow","verticalHeightStyle","centerPaddingStyle","padding","listStyle","touchMove","listProps","onClick","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","touchEnd","onTouchCancel","onKeyDown","innerSliderProps","listRefHandler","Track","trackRefHandler","ssrState","ssrInit","_i3","_Object$keys","currentDirection","initialized","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","freeGlobal","global","freeSelf","root","Function","objectToString","nativeMax","nativeMin","now","Date","isObject","toNumber","isObjectLike","isSymbol","other","replace","isBinary","test","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","thisArg","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","flush","getSlideClasses","slickActive","slickCenter","slickCloned","getKey","fallbackKey","renderSlides","preCloneSlides","postCloneSlides","childOnClickOptions","childStyle","position","top","getSlideStyle","slideClass","slideClasses","outline","preCloneNo","reverse","_React$PureComponent","mouseEvents","handleRef","PureComponent","_rightBound","rightBound","_leftBound","leftBound","dotOptions","bind","customPaging","appendDots","dotsClass","_createClass","prevClasses","prevHandler","prevArrowProps","customProps","_React$PureComponent2","_super2","nextClasses","nextHandler","nextArrowProps","MapShim","Map","getIndex","arr","some","entry","class_1","__entries__","get","set","delete","entries","splice","has","clear","ctx","_a","isBrowser","global$1","requestAnimationFrame$1","requestAnimationFrame","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","_b","propertyName","getInstance","instance_","defineConfigurable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","size","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","vertPad","bottom","boxSizing","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","WeakMap","ResizeObserver","method","camel2hyphen","obj2mq","mq","features","feature","isDimension","q","str","toLowerCase","easing","MediaQueryDispatch","MediaQuery","Util","matchMedia","Error","queries","browserIsIncapable","matches","shouldDegrade","isUnconditional","addHandler","removeHandler","QueryHandler","handlers","mql","listener","currentTarget","assess","addListener","constuctor","qh","on","h","equals","destroy","removeListener","action","deferSetup","setup","initialised","off","unmatch","lottie","React","_interopDefaultLegacy","lottie__default","React__default","_objectSpread2","_slicedToArray","_arrayWithHoles","_s","_e","_arr","_n","_d","next","done","err","_iterableToArrayLimit","minLen","_arrayLikeToArray","name","_unsupportedIterableToArray","_nonIterableRest","len","arr2","_excluded$1","useLottie","animationData","loop","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","lottieRef","renderer","assetsPath","rendererSettings","rest","_useState2","useState","animationLoaded","setAnimationLoaded","animationInstanceRef","useRef","animationContainer","useEffect","onUnmount","forcedConfigs","current","config","container","loadAnimation","currentRawFrame","setSegment","resetSegments","listeners","deregisterList","deregister","View","stop","setSpeed","goToAndStop","isFrame","goToAndPlay","setDirection","playSegments","segments","forceFlag","setSubframe","useSubFrames","getDuration","inFrames","animationContainerRef","animationItem","useInitInteractivity","wrapperRef","mode","actions","wrapper","assignedSegment","scrollHandler","currentPercent","_container$getBoundin","getBoundingClientRect","innerHeight","getContainerVisibility","find","visibility","frames","frameToGo","firstFrame","isPaused","scrollModeHandler","handleCursor","_x","_y","pos","cursorX","cursorY","_container$getBoundin2","getContainerCursorPosition","_ref3","xPercent","yPercent","mouseMoveHandler","ev","mouseOutHandler","cursorModeHandler","useLottieInteractivity","_ref4","lottieObj","_excluded","_c","interactivity","lottieProps","_useLottie","factory","navigator","svgNS","locationHref","_useWebWorker","initialDefaultFrame","setWebWorker","flag","getWebWorker","setLocationHref","getLocationHref","createTag","extendPrototype","sources","destination","sourcePrototype","attr","getDescriptor","prop","createProxyFunction","ProxyFunction","audioControllerFactory","AudioController","audioFactory","audios","_volume","_isMuted","addAudio","audio","resume","setRate","rateValue","createAudio","assetPath","Howl","src","isPlaying","seek","playing","rate","setVolume","setAudioFactory","_updateVolume","mute","unmute","getVolume","volume","createTypedArray","createRegularArray","Uint8ClampedArray","Float32Array","Int16Array","createSizedArray","_typeof$6","subframeEnabled","expressionsPlugin","idPrefix$1","isSafari","userAgent","_shouldRoundValues","bmPow","bmSqrt","bmFloor","bmMax","bmMin","BMMath","ProjectInterface$1","propertyNames","random","val","absArr","defaultCurveSegments","degToRads","roundCorner","roundValues","bmRnd","styleDiv","element","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","currentTime","totalTime","frameMultiplier","BMCompleteEvent","BMCompleteLoopEvent","totalLoops","currentLoop","BMSegmentStartEvent","totalFrames","BMDestroyEvent","BMRenderFrameErrorEvent","nativeError","BMConfigErrorEvent","BMAnimationConfigErrorEvent","createElementID","_count","HSVtoRGB","s","v","g","b","f","t","RGBtoHSV","d","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","rgbToHex","hex","colorMap","setSubframeEnabled","getSubframeEnabled","setExpressionsPlugin","getExpressionsPlugin","setDefaultCurveSegments","getDefaultCurveSegments","setIdPrefix","getIdPrefix","createNS","createElementNS","_typeof$5","dataManager","workerFn","workerInstance","_counterId","processes","workerProxy","onmessage","postMessage","path","data","_workerSelf","setupWorker","Worker","Blob","blob","url","URL","createObjectURL","createWorker","completeLayers","layers","comps","layerData","jLen","kLen","completed","tt","td","hasMask","maskProps","masksProperties","pt","convertPathsToAbsoluteValues","ty","findCompLayers","refId","completeShapes","shapes","a","id","comp","findComp","__used","JSON","parse","stringify","ks","it","checkVersion","minimum","animVersionString","animVersion","split","checkText","minimumVersion","updateTextLayer","textLayer","documentData","iterateLayers","assets","checkChars","chars","charData","ip","op","st","sr","sk","sa","checkPathProperties","pathData","checkColors","iterateShapes","c","checkShapes","completeClosingShapes","closed","cl","moduleOb","__complete","completeChars","dataFunctionManager","assetLoader","formatResponse","xhr","contentTypeHeader","getResponseHeader","responseType","response","responseText","load","fullPath","errorCallback","XMLHttpRequest","onreadystatechange","readyState","status","open","send","completeData","payload","animation","process","onError","createProcess","processId","location","origin","pathname","loadData","completeAnimation","anim","ImagePreloader","proxyImage","canvas","getContext","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","loadedFootagesCount","totalFootages","imagesLoadedCb","footageLoaded","getAssetsPath","assetData","originalPath","imagePath","u","testImageLoaded","img","intervalId","_imageLoaded","createFootageData","ob","footageData","_footageLoaded","ImagePreloaderFactory","loadAssets","cb","_createImageData","setAssetsPath","setPath","loadedImages","loadedFootages","getAsset","createImgData","crossOrigin","createImageData","setAttributeNS","_elementHelper","append","appendChild","setCacheType","elementHelper","BaseEvent","triggerEvent","eventName","_cbs","callbacks","markerParser","parsePayloadLines","line","lines","keysCount","_markers","markers","_marker","markerData","tm","duration","dr","cm","_","__","ProjectInterface","registerComposition","compositions","_thisProjectFunction","nm","prepareFrame","xt","currentFrame","compInterface","renderers","registerRenderer","getRenderer","_typeof$4","AnimationItem","isLoaded","frameRate","frameMult","playSpeed","playDirection","playCount","animationID","timeCompleted","segmentPos","isSubframeEnabled","_idle","_completedLoop","projectInterface","imagePreloader","audioController","configAnimation","onSetupError","onSegmentComplete","drawnFrameEvent","setParams","params","animType","RendererClass","globalData","defs","setProjectInterface","autoloadSegments","setupAnimation","lastIndexOf","substr","fileName","trigger","setData","wrapperAttributes","getNamedItem","prerender","includeLayers","newLayers","fonts","fontManager","addChars","addFonts","initExpressions","loadNextSegment","segment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","animData","fr","searchExtraCompositions","updaFrameModifier","waitForFontsLoaded","triggerConfigError","rendererType","initItems","gotoFrame","resize","updateContainerSize","renderFrame","triggerRenderFrameError","togglePause","setCurrentRawFrameValue","getMarkerData","markerName","marker","numValue","frameModifier","advanceTime","nextValue","_isComplete","checkSegments","adjustSegment","init","end","pendingFrame","getPath","getAssetData","hide","show","updateDocumentData","getElementByPath","animationManager","registeredAnimations","initTime","playingAnimationsNum","_stopped","_isFrozen","removeElement","animItem","subtractPlayingCount","registerAnimation","addPlayingCount","activate","nowTime","elapsedTime","first","searchAnimations","standalone","animElements","getElementsByClassName","lenAnims","setAttribute","body","getElementsByTagName","innerText","div","freeze","unfreeze","getRegisteredAnimations","animations","BezierFactory","beziers","bezEasing","BezierEasing","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","points","_p","_mSampleValues","_precomputed","mX1","mY1","mX2","mY2","_precompute","_getTForX","_calcSampleValues","aX","mSampleValues","intervalStart","currentSample","kSplineTableSize","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","pooling","poolFactory","initialLength","_create","_release","_length","_maxLength","pool","newElement","release","bezierLengthPool","addedLength","percents","lengths","segmentsLengthPool","totalLength","bezFunction","math","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","getBezierLength","pt1","pt2","pt3","pt4","ptCoord","perc","ptDistance","curveSegments","point","lastPoint","lengthData","BezierData","segmentLength","PointData","partial","partialLength","buildBezierData","storedData","bezierName","bezierData","getDistancePerc","initPos","lengthPos","lPerc","bezierSegmentPoints","getSegmentsLength","shapeData","segmentsLength","pathV","pathO","pathI","getNewSegment","startPerc","endPerc","t0","t1","u0","u1","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","getPointInSegment","percent","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","bez","PropertyFactory","initFrame","mathAbs","interpolateValue","frameNum","caching","newValue","offsetTime","propType","pv","keyData","nextKeyData","keyframeMetadata","fnc","iterationIndex","lastIndex","keyframes","keyframesMetadata","endValue","nextKeyTime","keyTime","to","ti","ind","__fnct","getBezierEasing","segmentPerc","distanceInLine","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","out","quat","qx","qy","qz","qw","heading","attitude","asin","bank","quaternionToEuler","omega","cosom","sinom","scale0","scale1","ax","ay","az","aw","bx","by","bz","bw","acos","sin","slerp","createQuaternion","values","c1","cos","c2","c3","s1","s2","s3","getValueAtCurrentTime","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","_mdf","processEffectsSequence","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","addDynamicProperty","ValueProperty","vel","getValue","MultiDimensionalProperty","KeyframedValueProperty","KeyframedMultidimensionalProperty","arrLen","getProp","DynamicPropertyContainer","dynamicProperties","_isAnimated","iterateDynamicProperties","initDynamicPropertyContainer","pointPool","ShapePath","setPathData","setLength","doubleArrayLength","setXYAt","setTripleAt","vX","vY","oX","oY","iX","iY","newPath","vertices","outPoints","inPoints","cnt","shapePool","shapePath","clone","shape","cloned","ShapeCollection","addShape","releaseShapes","shapeCollectionPool","newShapeCollection","shapeCollection","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","paths","localShapeCollection","shape1","shape2","shapesEqual","ShapeProperty","reset","KeyframedShapeProperty","EllShapeProperty","cPoint","EllShapePropertyFactory","convertEllToPath","p0","p1","s0","_cw","_v","StarShapeProperty","StarShapePropertyFactory","sy","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","or","os","rad","roundness","perimSegment","numPts","angle","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","RectShapeProperty","RectShapePropertyFactory","convertRectToPath","v0","v1","Matrix","_cos","_sin","_tan","tan","_rnd","rotate","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","skew","skewFromAxis","scale","sz","setTransform","l","m","translate","tx","tz","a2","b2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_identityCalculated","a1","b1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","isIdentity","_identity","matr","cloneFromProps","applyToPoint","z","applyToX","applyToY","applyToZ","getInverseMatrix","determinant","inverseMatrix","inversePoint","applyToPointArray","inversePoints","pts","retPts","applyToTriplePoints","p4","p5","p12","p13","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","_typeof$3","setLocation","href","setSubframeRendering","setPrefix","prefix","setQuality","inBrowser","installPlugin","plugin","getFactory","checkReady","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","useWebWorker","setIDPrefix","__getFactory","version","scripts","myScript","bodymovin","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","TrimModifier","PuckerAndBloatModifier","initModifierProperties","addShapeToModifier","setAsAnimated","processKeys","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","processShapes","shapePaths","totalShapeLength","edges","newShapesData","addShapes","lastShape","pop","addPaths","newPaths","addSegment","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","amount","processPath","centerPoint","pathLength","clonedPath","TransformPropertyFactory","defaultVector","TransformProperty","pre","appliedTransformations","px","py","pz","rx","ry","rz","_isDirty","applyToMatrix","mat","forceRender","precalculateMatrix","autoOriented","v2","getValueAtTime","autoOrient","_addDynamicProperty","getTransformProperty","RepeaterModifier","RoundCornersModifier","getFontProperties","fontData","fStyle","fWeight","weight","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","cont","hasReloaded","copies","group","ix","reloadShapes","elems","transformData","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","rd","currentV","currentI","currentO","closerV","distance","newPosPerc","FontManager","emptyChar","w","combinedCharacters","surrogateModifiers","zeroWidthJoiner","setUpNode","font","family","fontFamily","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","familyArray","enabledFamilies","join","trimFontOptions","parent","createHelper","def","helper","engine","fontProps","tHelper","fFamily","textContent","fClass","tCanvasHelper","OffscreenCanvas","measureText","text","getComputedTextLength","Font","typekitLoaded","_warned","setIsLoadedBinded","setIsLoaded","checkLoadedFontsBinded","checkLoadedFonts","isModifier","firstCharCode","secondCharCode","sum","isZeroWidthJoiner","isCombinedCharacter","_char3","found","ch","cache","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","loaded","monoCase","sansCase","fPath","fOrigin","rel","sc","getCharData","_char","charCodeAt","getFontByName","fName","_char2","fontName","doubleSize","singleSize","removeChild","RenderableElement","initRenderable","isInRange","hidden","isTransparent","renderableComponents","addRenderableComponent","component","removeRenderableComponent","prepareRenderableFrame","num","checkLayerLimits","checkTransparency","finalTransform","mProp","renderConfig","hideOnTransparent","renderRenderable","sourceRectAtTime","getLayerSize","textData","MaskManagerInterface","MaskInterface","mask","_mask","_data","maskManager","_masksInterfaces","viewData","ExpressionPropertyInterface","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","property","getVelocityAtTime","numKeys","valueProp","valueAtTime","speedAtTime","getSpeedAtTime","velocityAtTime","propertyGroup","defaultGetter","UnidimensionalPropertyInterface","arrValue","MultidimensionalPropertyInterface","TransformExpressionInterface","_thisFunction","rotation","xRotation","yRotation","xPosition","yPosition","zPosition","anchorPoint","_px","_py","_pz","_transformFactory","LayerExpressionInterface","getMatrix","toWorldMat","_elem","toWorldVec","applyPoint","toWorld","fromWorldVec","invertPoint","fromWorld","hierarchy","fromComp","sampleImage","transformInterface","_thisLayerFunction","shapeInterface","effect","textInterface","toComp","anchorPointDescriptor","hasParent","layerInterface","anchor_point","active","startTime","inPoint","outPoint","_name","registerMaskInterface","registerEffectsInterface","effects","propertyGroupFactory","interfaceFunction","parentPropertyGroup","PropertyInterface","EffectsExpressionInterface","createGroupInterface","groupInterface","ef","mn","effectElements","_propertyGroup","createValueInterface","numProperties","np","enabled","en","expressionProperty","setGroupProperty","createEffectsInterface","effectsManager","effectsData","CompExpressionInterface","layer","pixelAspect","compSize","frameDuration","displayStartTime","numLayers","ShapePathInterface","view","propertyIndex","ShapeExpressionInterface","iterateElements","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","gradientFillInterfaceFactory","content","interfaces","transformInterfaceFactory","cix","contentsInterfaceFactory","startPoint","endPoint","_dashPropertyGroup","dashOb","addPropertyToDashOb","dataProps","strokeWidth","dash","start","skewAxis","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","TextExpressionInterface","_sourceText","sourceText","textProperty","stringValue","currentData","_prevValue","String","getBlendMode","blendModeEnums","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","EffectsManager","effectItem","GroupEffect","BaseElement","FrameElement","_typeof$2","eff","checkMasks","effectsInterface","shapesData","itemsData","setBlendMode","blendModeValue","bm","baseElement","layerElement","initBaseData","layerId","getType","prepareProperties","isVisible","_isParent","FootageInterface","dataInterfaceFactory","outlineInterface","currentPropertyName","currentProperty","getFootageData","searchProperty","propertyNameIndex","outlineInterfaceFactory","dataInterface","FootageElement","imageLoader","AudioElement","_isPlaying","_canPlay","_currentTime","_volumeMultiplier","_previousVolume","_placeholder","lv","au","BaseRenderer","TransformElement","MaskElement","maskElement","solidPath","expansor","feMorph","properties","currentMasks","maskType","maskRef","getShapeProp","lastPath","filterID","expan","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","getBaseElement","timeRemapped","totalVolume","volumeValue","checkLayers","buildItem","checkPendingElements","createItem","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","createFootage","buildAllItems","pInterface","progressiveLoad","buildElementParenting","parentName","setAsParent","setHierarchy","addPendingElement","pendingElements","pathValue","setupGlobalData","fontsContainer","initTransform","_matMdf","_opMdf","ao","renderTransform","finalMat","globalToLocal","transforms","ptNew","mHelper","getMaskProperty","isFirstFrame","getMaskelement","pathNodes","pathString","pathShapeValue","filtersFactory","filId","skipCoordinates","fil","feColorMatrix","featureSupport","registeredEffects","idPrefix","SVGEffects","filterManager","createFilter","filters","Effect","countsAsEffect","registerEffect","SVGBaseElement","HierarchyElement","RenderableDOMElement","IImageElement","initElement","sourceRect","ProcessedElement","IShapeElement","initRendererElement","createContainerElements","matteElement","transformedElement","_sizeChanged","gg","layerElementParent","masker","createAlphaToLuminanceFilter","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","hd","cp","clipId","cpGroup","renderElement","destroyBaseElement","createRenderableComponents","renderableEffectsManager","setMatte","initHierarchy","checkParenting","createContent","renderInnerContent","innerElem","pr","imagePreserveAspectRatio","addShapeToModifiers","shapeModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","searchProcessedElement","processedElements","addProcessedElement","lineCapEnum","lineJoinEnum","SVGShapeData","transformers","level","caches","lStr","lvl","SVGStyleData","pElem","msElem","DashProperty","dashStr","dashArray","dashoffset","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGNoStyleData","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","SVGTransformData","comparePoints","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","maskId","opFill","lc","lj","ml","of","ms","ost","buildShapeString","_o","shapeString","SVGElementsRenderer","_identityMatrix","_matrixHelper","renderContentTransform","styleData","itemData","renderNoop","renderPath","pathStringTransformed","redraw","iterations","lLen","renderFill","styleElem","renderGradientStroke","renderGradient","renderStroke","hasOpacity","attr1","attr2","cValues","oValues","ang","dist","createRenderFunction","SVGShapeElement","stylesList","animatedContents","LetterProps","sw","fc","TextProperty","_frameId","keysIndex","canResize","minimumFontSize","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","completeTextData","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","setElementStyles","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","update","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","textKeys","buildFinalText","charCode","charactersArray","shouldCombine","charAt","newLineFlag","letters","anchorGrouping","currentSize","currentPos","currentLine","lineWidth","maxLineWidth","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","an","add","anIndexes","animatorJustifyOffset","extra","animatorData","letterData","based","animators","fh","fs","fb","rn","totalChars","newInd","currentInd","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","TextSelectorProp","TextSelectorPropFactory","_currentTextLength","finalS","finalE","xe","ne","sm","getMult","easer","tot","smoothness","threshold","newCharsFlag","divisor","getTextSelectorProp","TextAnimatorDataProperty","animatorProps","defaultData","textAnimatorAnimatables","TextAnimatorProperty","renderType","_hasMaskedPath","_textData","_renderType","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","ITextElement","searchProperties","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","matrixHelper","renderedLettersCount","tLength","pi","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","letterM","letterP","defaultPropsArray","animatorFirstCharOffset","justifyOffsetMult","isNewLine","animatorOffset","rot","atan","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","emptyShapeData","SVGTextLottieElement","textSpans","ISolidElement","NullElement","SVGRendererBase","ICompElement","SVGCompElement","supports3d","SVGRenderer","svgElement","ariaLabel","title","titleElement","titleId","description","descElement","descId","preserveAspectRatio","contentVisibility","viewBoxOnly","viewBoxSize","focusable","filterSize","destroyed","CVContextData","saved","cArrPos","cTr","cO","savedOp","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVEffects","CVMaskElement","hasMasks","CVBaseElement","CVShapeData","transformsManager","styledShapes","styledShape","addTransformSequence","trNodes","CVShapeElement","CVTextElement","stroke","fill","currentRender","sWidth","fValue","CVImageElement","CVSolidElement","CanvasRendererBase","clearCanvas","context","dpr","devicePixelRatio","currentGlobalAlpha","contextData","transformMat","CVCompElement","CanvasRenderer","HBaseElement","HSolidElement","HShapeElement","shapesContainer","currentBBox","HTextElement","textPaths","isMasked","HCameraElement","pe","_prevMat","HImageElement","HybridRendererBase","threeDElements","camera","HCompElement","HybridRenderer","singleShape","textContainer","buildTextContents","textArray","textContents","currentTextContent","fromCharCode","buildShapeData","shapeItem","tSpan","usesGlyphs","cachedSpansLength","span","childSpan","glyph","glyphElement","_debug","tElement","justify","textBox","renderedLetter","textSpan","appendElementInPos","nextElement","insertBefore","setElements","getElements","destroyElements","duplicate","newLength","currentSavedOp","sequence","processSequence","processSequences","getNewKey","canvasContext","beginPath","moveTo","lineTo","bezierCurveTo","save","clip","createElements","blendMode","globalCompositeOperation","hideElement","showElement","forceRealStack","ctxTransform","ctxOpacity","restore","transformHelper","dashResetter","preTransforms","co","wi","da","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","closePath","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","hasFill","hasStroke","commands","pathArr","commandsCounter","lastFill","lastStroke","lastStrokeW","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","par","drawImage","cProps","trProps","globalAlpha","actionFlag","popped","containerStyle","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","elementRel","animationRel","fillType","clearRect","checkBlendMode","tg","transformedElementStyle","matrixValue","webkitTransform","addEffects","backgroundColor","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","yMax","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","expandStrokeBoundingBox","widthProperty","kfw","currentBoxContains","box","changed","shapeStyle","shapeTransform","compW","compH","innerElemStyle","textColor","lineHeight","tParent","tCont","tContStyle","tContTranslation","tStyle","tSpanTranslation","svgStyle","translation","textPath","margin","svgTransform","perspectiveStyle","perspectiveElem","perspective","webkitPerspective","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","mRotationX","mRotationY","hasMatrixChanged","matValue","Image","imageElem","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","getThreeDContainerByPos","startPos","endPos","createThreeDContainer","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","overflow","svg","cWidth","cHeight","floatingContainer","_createBaseContainerElements","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","expression","_typeof$1","seedRandom","startdenom","significance","ARC4","keylen","me","S","copy","mixkey","seed","smear","stringseed","tostring","shortseed","flatten","depth","typ","entropy","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","screen","autoseed","arc4","prng","int32","quick","pass","is_math_call","initialize$2","propTypes","SHAPE","ExpressionManager","fetch","$bm_isInstanceOfArray","isNumerable","tOfV","$bm_neg","tOfA","lenA","retArr","easeInBez","easeOutBez","easeInOutBez","tOfB","lenB","sub","mul","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","needsVelocity","_needsRandom","elemType","$bm_transform","thisProperty","loopIn","loop_in","loopOut","loop_out","smooth","fromCompToSurface","thisLayer","thisComp","scoped_bm_rt","expression_function","eval","wiggle","freq","amp","iWiggle","lenWiggle","addedAmps","periods","loopInDuration","loopOutDuration","velocity","textIndex","textTotal","selectorValue","lookAt","elem1","elem2","fVec","pitch","easeOut","val1","val2","applyEase","easeIn","ease","iKey","lenKey","nearestKey","obKey","framesToTime","fps","timeToFrames","seedrandom","randSeed","substring","posterizeTime","framesPerSecond","executeExpression","_value","frameExpressionId","__preventDeadCodeRemoval","expressionHelpers","searchExpressions","_cachingAtTime","getStaticValueAtTime","addPropertyDecorator","durationFlag","cycleDuration","firstKeyFrame","ret","lastKeyFrame","initV","endV","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","sampleValue","sampleFrequency","getTransformValueAtTime","_transformCachingAtTime","anchor","rotationZ","rotationY","rotationX","orientation","positionX","positionY","positionZ","getTransformStaticValueAtTime","propertyGetProp","ShapePropertyConstructorFunction","getConstructorFunction","KeyframedShapePropertyConstructorFunction","getKeyframedConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","tangentOnPath","normalOnPath","shapeValue","lastTime","propertyGetShapeProp","trims","initialize$1","addDecorator","getExpressionValue","calculateExpression","isKeyframed","hasExpressions","initialize","SVGComposableEffect","SVGTintFilter","matrixFilter","feMerge","createMergeNode","SVGFillFilter","SVGStrokeEffect","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","globalFilterSize","feGaussianBlur","feOffset","feFlood","feComposite","resultId","ins","feMergeNode","colorBlack","colorWhite","groupPath","elemChildren","removeAttribute","pathMasker","dasharrayValue","getTotalLength","lineLength","units","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","col","_svgMatteSymbols","SVGMatte3Effect","filterElem","SVGGaussianBlurEffect","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","sigma","dimensions","sigmaX","sigmaY","edgeMode","validate","checkType","isRequired","propName","componentName","propFullName","componentNameSafe","propFullNameSafe","chainedCheckType","ul","Cl","getAttribute","head","gl","yl","wl","El","nodeName","zl","grep","nodeType","Zl","M","promise","fail","then","ready","Z","toUpperCase","Bl","Fl","expando","uid","Yl","$l","ql","cur","css","cssNumber","Wl","exec","unit","Ul","ee","E","merge","createDocumentFragment","oe","ce","re","innerHTML","htmlPrefilter","lastChild","firstChild","createTextNode","inArray","Ql","ie","T","activeElement","L","R","guid","namespace","isTrigger","special","delegateType","stopImmediatePropagation","extend","Event","N","D","O","P","hasData","access","events","handle","I","ae","checked","defaultValue","V","fl","xl","checkClone","eq","html","contains","_evalUrl","noModule","nonce","fe","H","cleanData","G","Ze","getPropertyValue","pixelBoxStyles","de","ge","cssProps","be","ve","ye","F","U","Kl","$","boxSizingReliable","getClientRects","Y","X","ze","fx","interval","tick","W","Ce","K","J","el","tweeners","prefilters","Deferred","always","tweens","run","notifyWith","resolveWith","opts","specialEasing","originalProperties","originalOptions","createTween","Tween","rejectWith","cssHooks","expand","ll","_queueHooks","queue","progress","complete","tl","Il","nl","al","He","il","rl","dataTypes","Je","ol","ajaxSettings","flatOptions","pl","Ml","dl","vl","bl","Sl","Tl","jquery","pushStack","prevObject","last","isPlainObject","isReady","noop","isEmptyObject","globalEval","makeArray","support","Al","getElementById","qsa","sl","cacheLength","attrHandle","sourceIndex","nextSibling","disabled","isDisabled","uniqueID","Q","relative","TAG","uniqueSort","RegExp","hl","ID","CLASS","ATTR","PSEUDO","CHILD","bool","needsContext","isXML","namespaceURI","setDocument","createComment","getById","getElementsByName","getAttributeNode","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","sortDetached","specified","escape","detectDuplicates","sortStable","getText","nodeValue","selectors","createPseudo","preFilter","pseudos","setFilters","not","lang","hash","hasFocus","selected","selectedIndex","empty","header","input","button","even","odd","lt","gt","nth","radio","checkbox","file","password","submit","tokenize","compile","selector","select","expr","unique","isXMLDoc","escapeSelector","kl","Ll","Rl","jl","Nl","Dl","parseHTML","Ol","Pl","contents","prev","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","contentDocument","Callbacks","once","stopOnFalse","memory","remove","disable","locked","fireWith","fire","fired","catch","pipe","notify","resolve","reject","exceptionHook","stackTrace","getStackHook","when","Vl","stack","readyException","Hl","readyWait","doScroll","Gl","_e2","_l","removeData","_removeData","dequeue","clearQueue","Xl","Jl","le","composed","attachShadow","getRootNode","te","toggle","option","thead","optgroup","tbody","tfoot","colgroup","caption","th","cloneNode","noCloneChecked","se","he","triggered","dispatch","bindType","origType","delegateCount","teardown","removeEvent","fix","delegateTarget","preDispatch","isPropagationStopped","isImmediatePropagationStopped","rnamespace","handleObj","postDispatch","addProp","originalEvent","noBubble","click","beforeunload","isDefaultPrevented","defaultPrevented","relatedTarget","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","shiftKey","char","code","buttons","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","which","blur","mouseenter","mouseleave","pointerenter","pointerleave","one","ue","Me","detach","prepend","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","opener","cssText","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","scrollboxSize","Se","we","Ee","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","order","orphans","widows","zIndex","zoom","setProperty","isFinite","border","propHooks","step","scrollTop","scrollLeft","swing","Te","Ae","Animation","tweener","unqueued","overflowX","overflowY","prefilter","speeds","old","fadeTo","animate","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","checkOn","optSelected","radioValue","ke","Le","removeAttr","attrHooks","Re","je","removeProp","propFix","for","class","addClass","removeClass","toggleClass","hasClass","Ne","valHooks","focusin","De","Oe","parentWindow","simulate","triggerHandler","Pe","Ie","Ve","parseXML","DOMParser","parseFromString","Ge","Be","Fe","param","encodeURIComponent","serialize","serializeArray","Ue","qe","$e","Xe","We","Ke","Qe","lastModified","etag","isLocal","protocol","processData","async","contentType","accepts","xml","json","responseFields","converters","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","mimeType","dataFilter","dataType","throws","ifModified","statusText","statusCode","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","crossDomain","host","traditional","hasContent","headers","beforeSend","success","timeout","getJSON","getScript","wrapAll","firstElementChild","wrapInner","wrap","unwrap","visible","et","1223","cors","_e3","username","xhrFields","onabort","ontimeout","binary","script","scriptAttrs","charset","scriptCharset","nt","at","jsonp","jsonpCallback","createHTMLDocument","implementation","animated","setOffset","using","pageYOffset","pageXOffset","offsetParent","scrollTo","Height","Width","hover","unbind","delegate","undelegate","holdReady","parseJSON","isWindow","camelCase","isNumeric","ct","jQuery","noConflict","fun","array","nextTick","env","argv","versions","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","umask","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","NODE_ENV","framesToPop","vectorMap","insets","BF","DJ","BI","BJ","ZA","BW","DZ","ET","RW","TZ","GQ","NA","NE","NG","TN","LR","LS","ZW","TG","TD","ER","LY","GW","ZM","CI","EH","CM","EG","SL","CG","CF","AO","CD","GA","GN","GM","XS","CV","GH","SZ","MG","MA","KE","SS","ML","KM","ST","MW","SO","SN","MR","UG","SD","MZ","projection","centralMeridian","BD","MN","BN","BH","BT","HK","JO","PS","LB","LA","TW","TR","LK","TL","TM","TJ","TH","XC","NP","PK","PH","AE","CN","AF","IQ","JP","IR","AM","SY","VN","GE","IL","IN","AZ","OM","KG","UZ","MM","SG","KH","CY","QA","KR","KP","KW","KZ","SA","MY","YE","ac","am","rr","ap","mt","go","mg","rs","ba","df","ma","pa","sp","rj","es","pb","OC","AS","EU","BE","FR","BG","DK","HR","DE","BA","HU","JE","FI","BY","GR","RU","NL","PT","NO","LI","LV","LT","LU","FO","PL","XK","CH","AD","EE","IS","AL","IT","GG","CZ","IM","GB","AX","IE","ES","ME","MD","RO","RS","MK","SK","MT","SI","SM","UA","SE","AT","ID_ac","ID_ba","ID_bb","ID_be","ID_bt","ID_go","ID_ja","ID_jb","ID_jl","ID_jk","ID_jt","ID_kb","ID_ki","ID_kr","ID_ks","ID_kt","ID_ku","ID_la","ID_ma","ID_mu","ID_nb","ID_nt","ID_pa","ID_pb","ID_ri","ID_sa","ID_sb","ID_sg","ID_sn","ID_sr","ID_ss","ID_st","ID_su","ID_yo","my_sb","my_sr","bn","PR","DO","DM","LC","NI","PA","CA","SV","HT","TT","JM","GT","HN","BZ","BS","CR","US","GL","MX","CU","GU","PW","KI","NC","NU","NZ","AU","PG","SB","PF","FJ","FM","WS","VU","PY","CO","VE","CL","SR","BO","EC","AR","GY","BR","PE","UY","FK","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","TF","colors","scaleColors","normalizeFunction","selectedRegions","selectedMarkers","mapObject","regionName","maps","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","deltaFactor","adjustOldDeltas","documentMode","fixHooks","mouseHooks","mousewheel","onmousewheel","getLineHeight","getPageHeight","unmousewheel","inherits","parentClass","mixin","MAX_VALUE","MIN_VALUE","whenImageLoaded","isImageUrl","AbstractElement","applyAttr","AbstractCanvasElement","setSize","rootElement","classPrefix","addPath","addCircle","addImage","addText","addGroup","AbstractShapeElement","isHovered","isSelected","updateStyle","setStyle","mergeStyles","initial","selectedHover","svgns","getElementCtr","SVGGroupElement","SVGCanvasElement","defsElement","applyTransformParams","transX","transY","imageCounter","SVGPathElement","SVGCircleElement","SVGImageElement","cx","cy","SVGTextElement","VMLElement","VMLInitialized","initializeVML","namespaces","rvml","createStyleSheet","addRule","VMLGroupElement","coordorigin","VMLCanvasElement","coordsize","VMLShapeElement","fillElement","strokeElement","stroked","fillcolor","strokecolor","strokeweight","VMLPathElement","pathSvgToVml","VMLCircleElement","VectorCanvas","SVGAngle","impl","SimpleScale","OrdinalScale","getTicks","label","NumericScale","setScale","setNormalizeFunction","setMin","setMax","clearMinValue","minValue","clearMaxValue","maxValue","vectorLength","vectorSubtract","vectorToNum","vectorAdd","vectorMult","log","LN10","ColorScale","rgbToArray","numToRgb","arrayToRgb","Legend","series","cssClass","legendCntVertical","legendCntHorizontal","attribute","markerStyle","background","labelRender","DataSeries","setAttributes","setValues","legend","Proj","degRad","radDeg","sgn","mill","mill_inv","lat","exp","lng","merc","merc_inv","aea","aea_inv","lcc","lcc_inv","MapObject","getLabelText","getLabelOffsets","offsets","setHovered","setSelected","Region","labelX","labelY","labelStyle","labelsGroup","updateLabelPosition","Marker","isImage","dy","defaultParams","mapData","regions","regionsColors","regionsData","defaultWidth","defaultHeight","setBackgroundColor","onResize","updateSize","apiEvents","bindTouchEvents","DocumentTouch","bindContainerTouchEvents","MSGesture","bindContainerPointerEvents","bindContainerEvents","bindElementEvents","createTip","zoomButtons","bindZoomButtons","createRegions","createMarkers","focusOn","region","setFocus","setSelectedRegions","setSelectedMarkers","createSeries","baseTransX","baseTransY","baseScale","applyTransform","repositionMarkers","repositionLabels","panOnDrag","mousemove","mousedown","onContainerMouseUp","mouseup","zoomOnScroll","zoomOnScrollSpeed","tip","translationX","translationY","addPointer","baseVal","tipWidth","tipHeight","regionsSelectable","markersSelectable","clearSelected","zoomStep","zoomAnimate","zoomMax","zoomMin","latLngToPoint","getSelected","getSelectedRegions","getSelectedMarkers","clearSelectedRegions","clearSelectedMarkers","getMapObject","getRegionName","regionLabelsGroup","regionStyle","regionMargin","regionLabelStyle","labels","markersGroup","markerLabelsGroup","latLng","getMarkerPosition","markerLabelStyle","removeMarkers","coords","addMarker","addMarkers","removeAllMarkers","getInsetForPoint","pointToLatLng","cursor","onRegionTipShow","onRegionOver","onRegionOut","onRegionClick","onRegionSelected","onMarkerTipShow","onMarkerOver","onMarkerOut","onMarkerClick","onMarkerSelected","onViewportChange","MultiMap","maxLevel","main","multiMapLevel","history","addMap","defaultProjection","mapsLoaded","backButton","goBack","spinner","scope","mapNameByCode","drillDownPromise","drillDown","downloadMap","mapUrlByCode","$node","$mapObject","refs","containerClassName","string","oneOf","regionsSelectableOne","markersSelectableOne","oneOfType","locals","btoa","unescape","sourceRoot","parts","base","sourceMap","insertInto","insertAt","attrs","singleton","revokeObjectURL","styleSheet","convertToAbsoluteUrls","all","atob","DEBUG","$$typeof","any","arrayOf","instanceOf","objectOf","exact","checkPropTypes","PropTypes","getOwnPropertyNames","Spinner","forwardRef","bsPrefix","variant","_ref$as","as","bsSpinnerPrefix","displayName","tooltip","elementType","Feedback","_ref$type","_ref$tooltip","createContext","controlId","FormCheckInput","bsCustomPrefix","_ref$isValid","isValid","_ref$isInvalid","isInvalid","isStatic","_useContext","custom","defaultPrefix","FormCheckLabel","htmlFor","FormCheck","_ref$inline","inline","_ref$disabled","_ref$feedbackTooltip","feedbackTooltip","feedback","_ref$title","propCustom","innerFormContext","hasLabel","Provider","Fragment","Input","Label","FormFileInput","FormFileLabel","FormFile","dataBrowse","_ref$inputAs","inputAs","FormControl","classes","_classes","htmlSize","plaintext","readOnly","_classes2","_classes3","_classes4","_classes5","FormGroup","DEVICE_SIZES","Col","spans","brkPoint","propValue","_propValue$span","infix","FormLabel","column","srOnly","columnClass","defaultProps","FormText","muted","Switch","FormRow","createWithBsPrefix","FormImpl","validated","Row","Group","Control","Check","File","Text"],"mappings":"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AI,CACFptF,KAAM,i+CACNlP,KAAM,cAERu8F,GAAI,CACFrtF,KAAM,q3EACNlP,KAAM,YAERw8F,GAAI,CACFttF,KAAM,2IACNlP,KAAM,aAERy8F,GAAI,CACFvtF,KAAM,21BACNlP,KAAM,SAER08F,GAAI,CACFxtF,KAAM,0kFACNlP,KAAM,YAER28F,GAAI,CACFztF,KAAM,k+JACNlP,KAAM,eAER,MAAO,CACLkP,KAAM,4DACNlP,KAAM,mBAER48F,GAAI,CACF1tF,KAAM,0jBACNlP,KAAM,wBAER68F,GAAI,CACF3tF,KAAM,qrXACNlP,KAAM,SAER88F,GAAI,CACF5tF,KAAM,quDACNlP,KAAM,eAER+8F,GAAI,CACF7tF,KAAM,o7BACNlP,KAAM,QAERg9F,GAAI,CACF9tF,KAAM,81JACNlP,KAAM,SAERi9F,GAAI,CACF/tF,KAAM,gxFACNlP,KAAM,QAERk9F,GAAI,CACFhuF,KAAM,uiBACNlP,KAAM,WAERm9F,GAAI,CACFjuF,KAAM,0vBACNlP,KAAM,SAERo9F,GAAI,CACFluF,KAAM,iiFACNlP,KAAM,WAERq9F,GAAI,CACFnuF,KAAM,wuBACNlP,KAAM,WAERs9F,GAAI,CACFpuF,KAAM,gXACNlP,KAAM,UAERu9F,GAAI,CACFruF,KAAM,2iNACNlP,KAAM,SAERw9F,GAAI,CACFtuF,KAAM,imCACNlP,KAAM,cAERy+E,GAAI,CACFvvE,KAAM,o9eACNlP,KAAM,aAERy9F,GAAI,CACFvuF,KAAM,m2BACNlP,KAAM,QAER09F,GAAI,CACFxuF,KAAM,8uDACNlP,KAAM,cAER29F,GAAI,CACFzuF,KAAM,+3EACNlP,KAAM,cAER49F,GAAI,CACF1uF,KAAM,4hHACNlP,KAAM,WAER69F,GAAI,CACF3uF,KAAM,8DACNlP,KAAM,aAER89F,GAAI,CACF5uF,KAAM,45BACNlP,KAAM,YAER+9F,GAAI,CACF7uF,KAAM,qNACNlP,KAAM,UAERg+F,GAAI,CACF9uF,KAAM,2JACNlP,KAAM,SAERi+F,GAAI,CACF/uF,KAAM,2rCACNlP,KAAM,SAERk+F,GAAI,CACFh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vF,KAAM,onBACNlP,KAAM,YAERkmG,GAAI,CACFh3F,KAAM,ozCACNlP,KAAM,UAERs9F,GAAI,CACFpuF,KAAM,kMACNlP,KAAM,UAER4/F,GAAI,CACF1wF,KAAM,gxBACNlP,KAAM,UAERm6F,GAAI,CACFjrF,KAAM,8HACNlP,KAAM,cAERogG,GAAI,CACFlxF,KAAM,2aACNlP,KAAM,WAER8mG,GAAI,CACF53F,KAAM,gLACNlP,KAAM,QAER8nG,GAAI,CACF54F,KAAM,+HACNlP,KAAM,gBAERolG,GAAI,CACFl2F,KAAM,gQACNlP,KAAM,aAERwgG,GAAI,CACFtxF,KAAM,sJACNlP,KAAM,eAER0gG,GAAI,CACFxxF,KAAM,ghCACNlP,KAAM,UAER04F,GAAI,CACFxpF,KAAM,wZACNlP,KAAM,WAERinG,GAAI,CACF/3F,KAAM,2DACNlP,KAAM,WAERumG,GAAI,CACFr3F,KAAM,wEACNlP,KAAM,iBAER24F,GAAI,CACFzpF,KAAM,goBACNlP,KAAM,SAER44F,GAAI,CACF1pF,KAAM,kfACNlP,KAAM,WAERymG,GAAI,CACFv3F,KAAM,+oBACNlP,KAAM,eAERy8F,GAAI,CACFvtF,KAAM,6KACNlP,KAAM,SAERihG,GAAI,CACF/xF,KAAM,oFACNlP,KAAM,UAERu5F,GAAI,CACFrqF,KAAM,yXACNlP,KAAM,oBAERkhG,GAAI,CACFhyF,KAAM,6RACNlP,KAAM,eAERmnG,GAAI,CACFj4F,KAAM,k7BACNlP,KAAM,YAER68F,GAAI,CACF3tF,KAAM,ooFACNlP,KAAM,SAERy5F,GAAI,CACFvqF,KAAM,kaACNlP,KAAM,YAERqnG,GAAI,CACFn4F,KAAM,ypCACNlP,KAAM,SAERw8F,GAAI,CACFttF,KAAM,6DACNlP,KAAM,aAERslG,GAAI,CACFp2F,KAAM,urRACNlP,KAAM,UAER45F,GAAI,CACF1qF,KAAM,kdACNlP,KAAM,SAER65F,GAAI,CACF3qF,KAAM,gfACNlP,KAAM,wBAER+5F,GAAI,CACF7qF,KAAM,6hCACNlP,KAAM,mBAERyhG,GAAI,CACFvyF,KAAM,0RACNl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","file":"static/js/5.e0ff3517.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkSpecKeys = exports.checkNavigable = exports.changeSlide = exports.canUseDOM = exports.canGoNext = void 0;\nexports.clamp = clamp;\nexports.swipeStart = exports.swipeMove = exports.swipeEnd = exports.slidesOnRight = exports.slidesOnLeft = exports.slideHandler = exports.siblingDirection = exports.safePreventDefault = exports.lazyStartIndex = exports.lazySlidesOnRight = exports.lazySlidesOnLeft = exports.lazyEndIndex = exports.keyHandler = exports.initializedState = exports.getWidth = exports.getTrackLeft = exports.getTrackCSS = exports.getTrackAnimateCSS = exports.getTotalSlides = exports.getSwipeDirection = exports.getSlideCount = exports.getRequiredLazySlides = exports.getPreClones = exports.getPostClones = exports.getOnDemandLazySlides = exports.getNavigableIndexes = exports.getHeight = exports.extractObject = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction clamp(number, lowerBound, upperBound) {\n  return Math.max(lowerBound, Math.min(number, upperBound));\n}\n\nvar safePreventDefault = function safePreventDefault(event) {\n  var passiveEvents = [\"onTouchStart\", \"onTouchMove\", \"onWheel\"];\n\n  if (!passiveEvents.includes(event._reactName)) {\n    event.preventDefault();\n  }\n};\n\nexports.safePreventDefault = safePreventDefault;\n\nvar getOnDemandLazySlides = function getOnDemandLazySlides(spec) {\n  var onDemandSlides = [];\n  var startIndex = lazyStartIndex(spec);\n  var endIndex = lazyEndIndex(spec);\n\n  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {\n    if (spec.lazyLoadedList.indexOf(slideIndex) < 0) {\n      onDemandSlides.push(slideIndex);\n    }\n  }\n\n  return onDemandSlides;\n}; // return list of slides that need to be present\n\n\nexports.getOnDemandLazySlides = getOnDemandLazySlides;\n\nvar getRequiredLazySlides = function getRequiredLazySlides(spec) {\n  var requiredSlides = [];\n  var startIndex = lazyStartIndex(spec);\n  var endIndex = lazyEndIndex(spec);\n\n  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {\n    requiredSlides.push(slideIndex);\n  }\n\n  return requiredSlides;\n}; // startIndex that needs to be present\n\n\nexports.getRequiredLazySlides = getRequiredLazySlides;\n\nvar lazyStartIndex = function lazyStartIndex(spec) {\n  return spec.currentSlide - lazySlidesOnLeft(spec);\n};\n\nexports.lazyStartIndex = lazyStartIndex;\n\nvar lazyEndIndex = function lazyEndIndex(spec) {\n  return spec.currentSlide + lazySlidesOnRight(spec);\n};\n\nexports.lazyEndIndex = lazyEndIndex;\n\nvar lazySlidesOnLeft = function lazySlidesOnLeft(spec) {\n  return spec.centerMode ? Math.floor(spec.slidesToShow / 2) + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : 0;\n};\n\nexports.lazySlidesOnLeft = lazySlidesOnLeft;\n\nvar lazySlidesOnRight = function lazySlidesOnRight(spec) {\n  return spec.centerMode ? Math.floor((spec.slidesToShow - 1) / 2) + 1 + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : spec.slidesToShow;\n}; // get width of an element\n\n\nexports.lazySlidesOnRight = lazySlidesOnRight;\n\nvar getWidth = function getWidth(elem) {\n  return elem && elem.offsetWidth || 0;\n};\n\nexports.getWidth = getWidth;\n\nvar getHeight = function getHeight(elem) {\n  return elem && elem.offsetHeight || 0;\n};\n\nexports.getHeight = getHeight;\n\nvar getSwipeDirection = function getSwipeDirection(touchObject) {\n  var verticalSwiping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var xDist, yDist, r, swipeAngle;\n  xDist = touchObject.startX - touchObject.curX;\n  yDist = touchObject.startY - touchObject.curY;\n  r = Math.atan2(yDist, xDist);\n  swipeAngle = Math.round(r * 180 / Math.PI);\n\n  if (swipeAngle < 0) {\n    swipeAngle = 360 - Math.abs(swipeAngle);\n  }\n\n  if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {\n    return \"left\";\n  }\n\n  if (swipeAngle >= 135 && swipeAngle <= 225) {\n    return \"right\";\n  }\n\n  if (verticalSwiping === true) {\n    if (swipeAngle >= 35 && swipeAngle <= 135) {\n      return \"up\";\n    } else {\n      return \"down\";\n    }\n  }\n\n  return \"vertical\";\n}; // whether or not we can go next\n\n\nexports.getSwipeDirection = getSwipeDirection;\n\nvar canGoNext = function canGoNext(spec) {\n  var canGo = true;\n\n  if (!spec.infinite) {\n    if (spec.centerMode && spec.currentSlide >= spec.slideCount - 1) {\n      canGo = false;\n    } else if (spec.slideCount <= spec.slidesToShow || spec.currentSlide >= spec.slideCount - spec.slidesToShow) {\n      canGo = false;\n    }\n  }\n\n  return canGo;\n}; // given an object and a list of keys, return new object with given keys\n\n\nexports.canGoNext = canGoNext;\n\nvar extractObject = function extractObject(spec, keys) {\n  var newObject = {};\n  keys.forEach(function (key) {\n    return newObject[key] = spec[key];\n  });\n  return newObject;\n}; // get initialized state\n\n\nexports.extractObject = extractObject;\n\nvar initializedState = function initializedState(spec) {\n  // spec also contains listRef, trackRef\n  var slideCount = _react[\"default\"].Children.count(spec.children);\n\n  var listNode = spec.listRef;\n  var listWidth = Math.ceil(getWidth(listNode));\n  var trackNode = spec.trackRef && spec.trackRef.node;\n  var trackWidth = Math.ceil(getWidth(trackNode));\n  var slideWidth;\n\n  if (!spec.vertical) {\n    var centerPaddingAdj = spec.centerMode && parseInt(spec.centerPadding) * 2;\n\n    if (typeof spec.centerPadding === \"string\" && spec.centerPadding.slice(-1) === \"%\") {\n      centerPaddingAdj *= listWidth / 100;\n    }\n\n    slideWidth = Math.ceil((listWidth - centerPaddingAdj) / spec.slidesToShow);\n  } else {\n    slideWidth = listWidth;\n  }\n\n  var slideHeight = listNode && getHeight(listNode.querySelector('[data-index=\"0\"]'));\n  var listHeight = slideHeight * spec.slidesToShow;\n  var currentSlide = spec.currentSlide === undefined ? spec.initialSlide : spec.currentSlide;\n\n  if (spec.rtl && spec.currentSlide === undefined) {\n    currentSlide = slideCount - 1 - spec.initialSlide;\n  }\n\n  var lazyLoadedList = spec.lazyLoadedList || [];\n  var slidesToLoad = getOnDemandLazySlides(_objectSpread(_objectSpread({}, spec), {}, {\n    currentSlide: currentSlide,\n    lazyLoadedList: lazyLoadedList\n  }));\n  lazyLoadedList = lazyLoadedList.concat(slidesToLoad);\n  var state = {\n    slideCount: slideCount,\n    slideWidth: slideWidth,\n    listWidth: listWidth,\n    trackWidth: trackWidth,\n    currentSlide: currentSlide,\n    slideHeight: slideHeight,\n    listHeight: listHeight,\n    lazyLoadedList: lazyLoadedList\n  };\n\n  if (spec.autoplaying === null && spec.autoplay) {\n    state[\"autoplaying\"] = \"playing\";\n  }\n\n  return state;\n};\n\nexports.initializedState = initializedState;\n\nvar slideHandler = function slideHandler(spec) {\n  var waitForAnimate = spec.waitForAnimate,\n      animating = spec.animating,\n      fade = spec.fade,\n      infinite = spec.infinite,\n      index = spec.index,\n      slideCount = spec.slideCount,\n      lazyLoad = spec.lazyLoad,\n      currentSlide = spec.currentSlide,\n      centerMode = spec.centerMode,\n      slidesToScroll = spec.slidesToScroll,\n      slidesToShow = spec.slidesToShow,\n      useCSS = spec.useCSS;\n  var lazyLoadedList = spec.lazyLoadedList;\n  if (waitForAnimate && animating) return {};\n  var animationSlide = index,\n      finalSlide,\n      animationLeft,\n      finalLeft;\n  var state = {},\n      nextState = {};\n  var targetSlide = infinite ? index : clamp(index, 0, slideCount - 1);\n\n  if (fade) {\n    if (!infinite && (index < 0 || index >= slideCount)) return {};\n\n    if (index < 0) {\n      animationSlide = index + slideCount;\n    } else if (index >= slideCount) {\n      animationSlide = index - slideCount;\n    }\n\n    if (lazyLoad && lazyLoadedList.indexOf(animationSlide) < 0) {\n      lazyLoadedList = lazyLoadedList.concat(animationSlide);\n    }\n\n    state = {\n      animating: true,\n      currentSlide: animationSlide,\n      lazyLoadedList: lazyLoadedList,\n      targetSlide: animationSlide\n    };\n    nextState = {\n      animating: false,\n      targetSlide: animationSlide\n    };\n  } else {\n    finalSlide = animationSlide;\n\n    if (animationSlide < 0) {\n      finalSlide = animationSlide + slideCount;\n      if (!infinite) finalSlide = 0;else if (slideCount % slidesToScroll !== 0) finalSlide = slideCount - slideCount % slidesToScroll;\n    } else if (!canGoNext(spec) && animationSlide > currentSlide) {\n      animationSlide = finalSlide = currentSlide;\n    } else if (centerMode && animationSlide >= slideCount) {\n      animationSlide = infinite ? slideCount : slideCount - 1;\n      finalSlide = infinite ? 0 : slideCount - 1;\n    } else if (animationSlide >= slideCount) {\n      finalSlide = animationSlide - slideCount;\n      if (!infinite) finalSlide = slideCount - slidesToShow;else if (slideCount % slidesToScroll !== 0) finalSlide = 0;\n    }\n\n    if (!infinite && animationSlide + slidesToShow >= slideCount) {\n      finalSlide = slideCount - slidesToShow;\n    }\n\n    animationLeft = getTrackLeft(_objectSpread(_objectSpread({}, spec), {}, {\n      slideIndex: animationSlide\n    }));\n    finalLeft = getTrackLeft(_objectSpread(_objectSpread({}, spec), {}, {\n      slideIndex: finalSlide\n    }));\n\n    if (!infinite) {\n      if (animationLeft === finalLeft) animationSlide = finalSlide;\n      animationLeft = finalLeft;\n    }\n\n    if (lazyLoad) {\n      lazyLoadedList = lazyLoadedList.concat(getOnDemandLazySlides(_objectSpread(_objectSpread({}, spec), {}, {\n        currentSlide: animationSlide\n      })));\n    }\n\n    if (!useCSS) {\n      state = {\n        currentSlide: finalSlide,\n        trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {\n          left: finalLeft\n        })),\n        lazyLoadedList: lazyLoadedList,\n        targetSlide: targetSlide\n      };\n    } else {\n      state = {\n        animating: true,\n        currentSlide: finalSlide,\n        trackStyle: getTrackAnimateCSS(_objectSpread(_objectSpread({}, spec), {}, {\n          left: animationLeft\n        })),\n        lazyLoadedList: lazyLoadedList,\n        targetSlide: targetSlide\n      };\n      nextState = {\n        animating: false,\n        currentSlide: finalSlide,\n        trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {\n          left: finalLeft\n        })),\n        swipeLeft: null,\n        targetSlide: targetSlide\n      };\n    }\n  }\n\n  return {\n    state: state,\n    nextState: nextState\n  };\n};\n\nexports.slideHandler = slideHandler;\n\nvar changeSlide = function changeSlide(spec, options) {\n  var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;\n  var slidesToScroll = spec.slidesToScroll,\n      slidesToShow = spec.slidesToShow,\n      slideCount = spec.slideCount,\n      currentSlide = spec.currentSlide,\n      previousTargetSlide = spec.targetSlide,\n      lazyLoad = spec.lazyLoad,\n      infinite = spec.infinite;\n  unevenOffset = slideCount % slidesToScroll !== 0;\n  indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;\n\n  if (options.message === \"previous\") {\n    slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;\n    targetSlide = currentSlide - slideOffset;\n\n    if (lazyLoad && !infinite) {\n      previousInt = currentSlide - slideOffset;\n      targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;\n    }\n\n    if (!infinite) {\n      targetSlide = previousTargetSlide - slidesToScroll;\n    }\n  } else if (options.message === \"next\") {\n    slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;\n    targetSlide = currentSlide + slideOffset;\n\n    if (lazyLoad && !infinite) {\n      targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;\n    }\n\n    if (!infinite) {\n      targetSlide = previousTargetSlide + slidesToScroll;\n    }\n  } else if (options.message === \"dots\") {\n    // Click on dots\n    targetSlide = options.index * options.slidesToScroll;\n  } else if (options.message === \"children\") {\n    // Click on the slides\n    targetSlide = options.index;\n\n    if (infinite) {\n      var direction = siblingDirection(_objectSpread(_objectSpread({}, spec), {}, {\n        targetSlide: targetSlide\n      }));\n\n      if (targetSlide > options.currentSlide && direction === \"left\") {\n        targetSlide = targetSlide - slideCount;\n      } else if (targetSlide < options.currentSlide && direction === \"right\") {\n        targetSlide = targetSlide + slideCount;\n      }\n    }\n  } else if (options.message === \"index\") {\n    targetSlide = Number(options.index);\n  }\n\n  return targetSlide;\n};\n\nexports.changeSlide = changeSlide;\n\nvar keyHandler = function keyHandler(e, accessibility, rtl) {\n  if (e.target.tagName.match(\"TEXTAREA|INPUT|SELECT\") || !accessibility) return \"\";\n  if (e.keyCode === 37) return rtl ? \"next\" : \"previous\";\n  if (e.keyCode === 39) return rtl ? \"previous\" : \"next\";\n  return \"\";\n};\n\nexports.keyHandler = keyHandler;\n\nvar swipeStart = function swipeStart(e, swipe, draggable) {\n  e.target.tagName === \"IMG\" && safePreventDefault(e);\n  if (!swipe || !draggable && e.type.indexOf(\"mouse\") !== -1) return \"\";\n  return {\n    dragging: true,\n    touchObject: {\n      startX: e.touches ? e.touches[0].pageX : e.clientX,\n      startY: e.touches ? e.touches[0].pageY : e.clientY,\n      curX: e.touches ? e.touches[0].pageX : e.clientX,\n      curY: e.touches ? e.touches[0].pageY : e.clientY\n    }\n  };\n};\n\nexports.swipeStart = swipeStart;\n\nvar swipeMove = function swipeMove(e, spec) {\n  // spec also contains, trackRef and slideIndex\n  var scrolling = spec.scrolling,\n      animating = spec.animating,\n      vertical = spec.vertical,\n      swipeToSlide = spec.swipeToSlide,\n      verticalSwiping = spec.verticalSwiping,\n      rtl = spec.rtl,\n      currentSlide = spec.currentSlide,\n      edgeFriction = spec.edgeFriction,\n      edgeDragged = spec.edgeDragged,\n      onEdge = spec.onEdge,\n      swiped = spec.swiped,\n      swiping = spec.swiping,\n      slideCount = spec.slideCount,\n      slidesToScroll = spec.slidesToScroll,\n      infinite = spec.infinite,\n      touchObject = spec.touchObject,\n      swipeEvent = spec.swipeEvent,\n      listHeight = spec.listHeight,\n      listWidth = spec.listWidth;\n  if (scrolling) return;\n  if (animating) return safePreventDefault(e);\n  if (vertical && swipeToSlide && verticalSwiping) safePreventDefault(e);\n  var swipeLeft,\n      state = {};\n  var curLeft = getTrackLeft(spec);\n  touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;\n  touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;\n  touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));\n  var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));\n\n  if (!verticalSwiping && !swiping && verticalSwipeLength > 10) {\n    return {\n      scrolling: true\n    };\n  }\n\n  if (verticalSwiping) touchObject.swipeLength = verticalSwipeLength;\n  var positionOffset = (!rtl ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);\n  if (verticalSwiping) positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;\n  var dotCount = Math.ceil(slideCount / slidesToScroll);\n  var swipeDirection = getSwipeDirection(spec.touchObject, verticalSwiping);\n  var touchSwipeLength = touchObject.swipeLength;\n\n  if (!infinite) {\n    if (currentSlide === 0 && (swipeDirection === \"right\" || swipeDirection === \"down\") || currentSlide + 1 >= dotCount && (swipeDirection === \"left\" || swipeDirection === \"up\") || !canGoNext(spec) && (swipeDirection === \"left\" || swipeDirection === \"up\")) {\n      touchSwipeLength = touchObject.swipeLength * edgeFriction;\n\n      if (edgeDragged === false && onEdge) {\n        onEdge(swipeDirection);\n        state[\"edgeDragged\"] = true;\n      }\n    }\n  }\n\n  if (!swiped && swipeEvent) {\n    swipeEvent(swipeDirection);\n    state[\"swiped\"] = true;\n  }\n\n  if (!vertical) {\n    if (!rtl) {\n      swipeLeft = curLeft + touchSwipeLength * positionOffset;\n    } else {\n      swipeLeft = curLeft - touchSwipeLength * positionOffset;\n    }\n  } else {\n    swipeLeft = curLeft + touchSwipeLength * (listHeight / listWidth) * positionOffset;\n  }\n\n  if (verticalSwiping) {\n    swipeLeft = curLeft + touchSwipeLength * positionOffset;\n  }\n\n  state = _objectSpread(_objectSpread({}, state), {}, {\n    touchObject: touchObject,\n    swipeLeft: swipeLeft,\n    trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {\n      left: swipeLeft\n    }))\n  });\n\n  if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {\n    return state;\n  }\n\n  if (touchObject.swipeLength > 10) {\n    state[\"swiping\"] = true;\n    safePreventDefault(e);\n  }\n\n  return state;\n};\n\nexports.swipeMove = swipeMove;\n\nvar swipeEnd = function swipeEnd(e, spec) {\n  var dragging = spec.dragging,\n      swipe = spec.swipe,\n      touchObject = spec.touchObject,\n      listWidth = spec.listWidth,\n      touchThreshold = spec.touchThreshold,\n      verticalSwiping = spec.verticalSwiping,\n      listHeight = spec.listHeight,\n      swipeToSlide = spec.swipeToSlide,\n      scrolling = spec.scrolling,\n      onSwipe = spec.onSwipe,\n      targetSlide = spec.targetSlide,\n      currentSlide = spec.currentSlide,\n      infinite = spec.infinite;\n\n  if (!dragging) {\n    if (swipe) safePreventDefault(e);\n    return {};\n  }\n\n  var minSwipe = verticalSwiping ? listHeight / touchThreshold : listWidth / touchThreshold;\n  var swipeDirection = getSwipeDirection(touchObject, verticalSwiping); // reset the state of touch related state variables.\n\n  var state = {\n    dragging: false,\n    edgeDragged: false,\n    scrolling: false,\n    swiping: false,\n    swiped: false,\n    swipeLeft: null,\n    touchObject: {}\n  };\n\n  if (scrolling) {\n    return state;\n  }\n\n  if (!touchObject.swipeLength) {\n    return state;\n  }\n\n  if (touchObject.swipeLength > minSwipe) {\n    safePreventDefault(e);\n\n    if (onSwipe) {\n      onSwipe(swipeDirection);\n    }\n\n    var slideCount, newSlide;\n    var activeSlide = infinite ? currentSlide : targetSlide;\n\n    switch (swipeDirection) {\n      case \"left\":\n      case \"up\":\n        newSlide = activeSlide + getSlideCount(spec);\n        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;\n        state[\"currentDirection\"] = 0;\n        break;\n\n      case \"right\":\n      case \"down\":\n        newSlide = activeSlide - getSlideCount(spec);\n        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;\n        state[\"currentDirection\"] = 1;\n        break;\n\n      default:\n        slideCount = activeSlide;\n    }\n\n    state[\"triggerSlideHandler\"] = slideCount;\n  } else {\n    // Adjust the track back to it's original position.\n    var currentLeft = getTrackLeft(spec);\n    state[\"trackStyle\"] = getTrackAnimateCSS(_objectSpread(_objectSpread({}, spec), {}, {\n      left: currentLeft\n    }));\n  }\n\n  return state;\n};\n\nexports.swipeEnd = swipeEnd;\n\nvar getNavigableIndexes = function getNavigableIndexes(spec) {\n  var max = spec.infinite ? spec.slideCount * 2 : spec.slideCount;\n  var breakpoint = spec.infinite ? spec.slidesToShow * -1 : 0;\n  var counter = spec.infinite ? spec.slidesToShow * -1 : 0;\n  var indexes = [];\n\n  while (breakpoint < max) {\n    indexes.push(breakpoint);\n    breakpoint = counter + spec.slidesToScroll;\n    counter += Math.min(spec.slidesToScroll, spec.slidesToShow);\n  }\n\n  return indexes;\n};\n\nexports.getNavigableIndexes = getNavigableIndexes;\n\nvar checkNavigable = function checkNavigable(spec, index) {\n  var navigables = getNavigableIndexes(spec);\n  var prevNavigable = 0;\n\n  if (index > navigables[navigables.length - 1]) {\n    index = navigables[navigables.length - 1];\n  } else {\n    for (var n in navigables) {\n      if (index < navigables[n]) {\n        index = prevNavigable;\n        break;\n      }\n\n      prevNavigable = navigables[n];\n    }\n  }\n\n  return index;\n};\n\nexports.checkNavigable = checkNavigable;\n\nvar getSlideCount = function getSlideCount(spec) {\n  var centerOffset = spec.centerMode ? spec.slideWidth * Math.floor(spec.slidesToShow / 2) : 0;\n\n  if (spec.swipeToSlide) {\n    var swipedSlide;\n    var slickList = spec.listRef;\n    var slides = slickList.querySelectorAll && slickList.querySelectorAll(\".slick-slide\") || [];\n    Array.from(slides).every(function (slide) {\n      if (!spec.vertical) {\n        if (slide.offsetLeft - centerOffset + getWidth(slide) / 2 > spec.swipeLeft * -1) {\n          swipedSlide = slide;\n          return false;\n        }\n      } else {\n        if (slide.offsetTop + getHeight(slide) / 2 > spec.swipeLeft * -1) {\n          swipedSlide = slide;\n          return false;\n        }\n      }\n\n      return true;\n    });\n\n    if (!swipedSlide) {\n      return 0;\n    }\n\n    var currentIndex = spec.rtl === true ? spec.slideCount - spec.currentSlide : spec.currentSlide;\n    var slidesTraversed = Math.abs(swipedSlide.dataset.index - currentIndex) || 1;\n    return slidesTraversed;\n  } else {\n    return spec.slidesToScroll;\n  }\n};\n\nexports.getSlideCount = getSlideCount;\n\nvar checkSpecKeys = function checkSpecKeys(spec, keysArray) {\n  return keysArray.reduce(function (value, key) {\n    return value && spec.hasOwnProperty(key);\n  }, true) ? null : console.error(\"Keys Missing:\", spec);\n};\n\nexports.checkSpecKeys = checkSpecKeys;\n\nvar getTrackCSS = function getTrackCSS(spec) {\n  checkSpecKeys(spec, [\"left\", \"variableWidth\", \"slideCount\", \"slidesToShow\", \"slideWidth\"]);\n  var trackWidth, trackHeight;\n  var trackChildren = spec.slideCount + 2 * spec.slidesToShow;\n\n  if (!spec.vertical) {\n    trackWidth = getTotalSlides(spec) * spec.slideWidth;\n  } else {\n    trackHeight = trackChildren * spec.slideHeight;\n  }\n\n  var style = {\n    opacity: 1,\n    transition: \"\",\n    WebkitTransition: \"\"\n  };\n\n  if (spec.useTransform) {\n    var WebkitTransform = !spec.vertical ? \"translate3d(\" + spec.left + \"px, 0px, 0px)\" : \"translate3d(0px, \" + spec.left + \"px, 0px)\";\n    var transform = !spec.vertical ? \"translate3d(\" + spec.left + \"px, 0px, 0px)\" : \"translate3d(0px, \" + spec.left + \"px, 0px)\";\n    var msTransform = !spec.vertical ? \"translateX(\" + spec.left + \"px)\" : \"translateY(\" + spec.left + \"px)\";\n    style = _objectSpread(_objectSpread({}, style), {}, {\n      WebkitTransform: WebkitTransform,\n      transform: transform,\n      msTransform: msTransform\n    });\n  } else {\n    if (spec.vertical) {\n      style[\"top\"] = spec.left;\n    } else {\n      style[\"left\"] = spec.left;\n    }\n  }\n\n  if (spec.fade) style = {\n    opacity: 1\n  };\n  if (trackWidth) style.width = trackWidth;\n  if (trackHeight) style.height = trackHeight; // Fallback for IE8\n\n  if (window && !window.addEventListener && window.attachEvent) {\n    if (!spec.vertical) {\n      style.marginLeft = spec.left + \"px\";\n    } else {\n      style.marginTop = spec.left + \"px\";\n    }\n  }\n\n  return style;\n};\n\nexports.getTrackCSS = getTrackCSS;\n\nvar getTrackAnimateCSS = function getTrackAnimateCSS(spec) {\n  checkSpecKeys(spec, [\"left\", \"variableWidth\", \"slideCount\", \"slidesToShow\", \"slideWidth\", \"speed\", \"cssEase\"]);\n  var style = getTrackCSS(spec); // useCSS is true by default so it can be undefined\n\n  if (spec.useTransform) {\n    style.WebkitTransition = \"-webkit-transform \" + spec.speed + \"ms \" + spec.cssEase;\n    style.transition = \"transform \" + spec.speed + \"ms \" + spec.cssEase;\n  } else {\n    if (spec.vertical) {\n      style.transition = \"top \" + spec.speed + \"ms \" + spec.cssEase;\n    } else {\n      style.transition = \"left \" + spec.speed + \"ms \" + spec.cssEase;\n    }\n  }\n\n  return style;\n};\n\nexports.getTrackAnimateCSS = getTrackAnimateCSS;\n\nvar getTrackLeft = function getTrackLeft(spec) {\n  if (spec.unslick) {\n    return 0;\n  }\n\n  checkSpecKeys(spec, [\"slideIndex\", \"trackRef\", \"infinite\", \"centerMode\", \"slideCount\", \"slidesToShow\", \"slidesToScroll\", \"slideWidth\", \"listWidth\", \"variableWidth\", \"slideHeight\"]);\n  var slideIndex = spec.slideIndex,\n      trackRef = spec.trackRef,\n      infinite = spec.infinite,\n      centerMode = spec.centerMode,\n      slideCount = spec.slideCount,\n      slidesToShow = spec.slidesToShow,\n      slidesToScroll = spec.slidesToScroll,\n      slideWidth = spec.slideWidth,\n      listWidth = spec.listWidth,\n      variableWidth = spec.variableWidth,\n      slideHeight = spec.slideHeight,\n      fade = spec.fade,\n      vertical = spec.vertical;\n  var slideOffset = 0;\n  var targetLeft;\n  var targetSlide;\n  var verticalOffset = 0;\n\n  if (fade || spec.slideCount === 1) {\n    return 0;\n  }\n\n  var slidesToOffset = 0;\n\n  if (infinite) {\n    slidesToOffset = -getPreClones(spec); // bring active slide to the beginning of visual area\n    // if next scroll doesn't have enough children, just reach till the end of original slides instead of shifting slidesToScroll children\n\n    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {\n      slidesToOffset = -(slideIndex > slideCount ? slidesToShow - (slideIndex - slideCount) : slideCount % slidesToScroll);\n    } // shift current slide to center of the frame\n\n\n    if (centerMode) {\n      slidesToOffset += parseInt(slidesToShow / 2);\n    }\n  } else {\n    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {\n      slidesToOffset = slidesToShow - slideCount % slidesToScroll;\n    }\n\n    if (centerMode) {\n      slidesToOffset = parseInt(slidesToShow / 2);\n    }\n  }\n\n  slideOffset = slidesToOffset * slideWidth;\n  verticalOffset = slidesToOffset * slideHeight;\n\n  if (!vertical) {\n    targetLeft = slideIndex * slideWidth * -1 + slideOffset;\n  } else {\n    targetLeft = slideIndex * slideHeight * -1 + verticalOffset;\n  }\n\n  if (variableWidth === true) {\n    var targetSlideIndex;\n    var trackElem = trackRef && trackRef.node;\n    targetSlideIndex = slideIndex + getPreClones(spec);\n    targetSlide = trackElem && trackElem.childNodes[targetSlideIndex];\n    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;\n\n    if (centerMode === true) {\n      targetSlideIndex = infinite ? slideIndex + getPreClones(spec) : slideIndex;\n      targetSlide = trackElem && trackElem.children[targetSlideIndex];\n      targetLeft = 0;\n\n      for (var slide = 0; slide < targetSlideIndex; slide++) {\n        targetLeft -= trackElem && trackElem.children[slide] && trackElem.children[slide].offsetWidth;\n      }\n\n      targetLeft -= parseInt(spec.centerPadding);\n      targetLeft += targetSlide && (listWidth - targetSlide.offsetWidth) / 2;\n    }\n  }\n\n  return targetLeft;\n};\n\nexports.getTrackLeft = getTrackLeft;\n\nvar getPreClones = function getPreClones(spec) {\n  if (spec.unslick || !spec.infinite) {\n    return 0;\n  }\n\n  if (spec.variableWidth) {\n    return spec.slideCount;\n  }\n\n  return spec.slidesToShow + (spec.centerMode ? 1 : 0);\n};\n\nexports.getPreClones = getPreClones;\n\nvar getPostClones = function getPostClones(spec) {\n  if (spec.unslick || !spec.infinite) {\n    return 0;\n  }\n\n  return spec.slideCount;\n};\n\nexports.getPostClones = getPostClones;\n\nvar getTotalSlides = function getTotalSlides(spec) {\n  return spec.slideCount === 1 ? 1 : getPreClones(spec) + spec.slideCount + getPostClones(spec);\n};\n\nexports.getTotalSlides = getTotalSlides;\n\nvar siblingDirection = function siblingDirection(spec) {\n  if (spec.targetSlide > spec.currentSlide) {\n    if (spec.targetSlide > spec.currentSlide + slidesOnRight(spec)) {\n      return \"left\";\n    }\n\n    return \"right\";\n  } else {\n    if (spec.targetSlide < spec.currentSlide - slidesOnLeft(spec)) {\n      return \"right\";\n    }\n\n    return \"left\";\n  }\n};\n\nexports.siblingDirection = siblingDirection;\n\nvar slidesOnRight = function slidesOnRight(_ref) {\n  var slidesToShow = _ref.slidesToShow,\n      centerMode = _ref.centerMode,\n      rtl = _ref.rtl,\n      centerPadding = _ref.centerPadding; // returns no of slides on the right of active slide\n\n  if (centerMode) {\n    var right = (slidesToShow - 1) / 2 + 1;\n    if (parseInt(centerPadding) > 0) right += 1;\n    if (rtl && slidesToShow % 2 === 0) right += 1;\n    return right;\n  }\n\n  if (rtl) {\n    return 0;\n  }\n\n  return slidesToShow - 1;\n};\n\nexports.slidesOnRight = slidesOnRight;\n\nvar slidesOnLeft = function slidesOnLeft(_ref2) {\n  var slidesToShow = _ref2.slidesToShow,\n      centerMode = _ref2.centerMode,\n      rtl = _ref2.rtl,\n      centerPadding = _ref2.centerPadding; // returns no of slides on the left of active slide\n\n  if (centerMode) {\n    var left = (slidesToShow - 1) / 2 + 1;\n    if (parseInt(centerPadding) > 0) left += 1;\n    if (!rtl && slidesToShow % 2 === 0) left += 1;\n    return left;\n  }\n\n  if (rtl) {\n    return slidesToShow - 1;\n  }\n\n  return 0;\n};\n\nexports.slidesOnLeft = slidesOnLeft;\n\nvar canUseDOM = function canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n};\n\nexports.canUseDOM = canUseDOM;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n\n      if (result != null) {\n        error = result;\n      }\n    });\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\n\nmodule.exports = exports['default'];","/**\n * Helper function for iterating over a collection\n *\n * @param collection\n * @param fn\n */\nfunction each(collection, fn) {\n  var i = 0,\n      length = collection.length,\n      cont;\n\n  for (i; i < length; i++) {\n    cont = fn(collection[i], i);\n\n    if (cont === false) {\n      break; //allow early exit\n    }\n  }\n}\n/**\n * Helper function for determining whether target object is an array\n *\n * @param target the object under test\n * @return {Boolean} true if array, false otherwise\n */\n\n\nfunction isArray(target) {\n  return Object.prototype.toString.apply(target) === '[object Array]';\n}\n/**\n * Helper function for determining whether target object is a function\n *\n * @param target the object under test\n * @return {Boolean} true if function, false otherwise\n */\n\n\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\n\nmodule.exports = {\n  isFunction: isFunction,\n  isArray: isArray,\n  each: each\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slider = _interopRequireDefault(require(\"./slider\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _default = _slider[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _innerSlider = require(\"./inner-slider\");\n\nvar _json2mq = _interopRequireDefault(require(\"json2mq\"));\n\nvar _defaultProps = _interopRequireDefault(require(\"./default-props\"));\n\nvar _innerSliderUtils = require(\"./utils/innerSliderUtils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar enquire = (0, _innerSliderUtils.canUseDOM)() && require(\"enquire.js\");\n\nvar Slider = /*#__PURE__*/function (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  var _super = _createSuper(Slider);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"innerSliderRefHandler\", function (ref) {\n      return _this.innerSlider = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickPrev\", function () {\n      return _this.innerSlider.slickPrev();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickNext\", function () {\n      return _this.innerSlider.slickNext();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickGoTo\", function (slide) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return _this.innerSlider.slickGoTo(slide, dontAnimate);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickPause\", function () {\n      return _this.innerSlider.pause(\"paused\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickPlay\", function () {\n      return _this.innerSlider.autoPlay(\"play\");\n    });\n\n    _this.state = {\n      breakpoint: null\n    };\n    _this._responsiveMediaHandlers = [];\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"media\",\n    value: function media(query, handler) {\n      // javascript handler for  css media query\n      enquire.register(query, handler);\n\n      this._responsiveMediaHandlers.push({\n        query: query,\n        handler: handler\n      });\n    } // handles responsive breakpoints\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this; // performance monitoring\n      //if (process.env.NODE_ENV !== 'production') {\n      //const { whyDidYouUpdate } = require('why-did-you-update')\n      //whyDidYouUpdate(React)\n      //}\n\n\n      if (this.props.responsive) {\n        var breakpoints = this.props.responsive.map(function (breakpt) {\n          return breakpt.breakpoint;\n        }); // sort them in increasing order of their numerical value\n\n        breakpoints.sort(function (x, y) {\n          return x - y;\n        });\n        breakpoints.forEach(function (breakpoint, index) {\n          // media query for each breakpoint\n          var bQuery;\n\n          if (index === 0) {\n            bQuery = (0, _json2mq[\"default\"])({\n              minWidth: 0,\n              maxWidth: breakpoint\n            });\n          } else {\n            bQuery = (0, _json2mq[\"default\"])({\n              minWidth: breakpoints[index - 1] + 1,\n              maxWidth: breakpoint\n            });\n          } // when not using server side rendering\n\n\n          (0, _innerSliderUtils.canUseDOM)() && _this2.media(bQuery, function () {\n            _this2.setState({\n              breakpoint: breakpoint\n            });\n          });\n        }); // Register media query for full screen. Need to support resize from small to large\n        // convert javascript object to media query string\n\n        var query = (0, _json2mq[\"default\"])({\n          minWidth: breakpoints.slice(-1)[0]\n        });\n        (0, _innerSliderUtils.canUseDOM)() && this.media(query, function () {\n          _this2.setState({\n            breakpoint: null\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._responsiveMediaHandlers.forEach(function (obj) {\n        enquire.unregister(obj.query, obj.handler);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var settings;\n      var newProps;\n\n      if (this.state.breakpoint) {\n        newProps = this.props.responsive.filter(function (resp) {\n          return resp.breakpoint === _this3.state.breakpoint;\n        });\n        settings = newProps[0].settings === \"unslick\" ? \"unslick\" : _objectSpread(_objectSpread(_objectSpread({}, _defaultProps[\"default\"]), this.props), newProps[0].settings);\n      } else {\n        settings = _objectSpread(_objectSpread({}, _defaultProps[\"default\"]), this.props);\n      } // force scrolling by one if centerMode is on\n\n\n      if (settings.centerMode) {\n        if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== \"production\") {\n          console.warn(\"slidesToScroll should be equal to 1 in centerMode, you are using \".concat(settings.slidesToScroll));\n        }\n\n        settings.slidesToScroll = 1;\n      } // force showing one slide and scrolling by one if the fade mode is on\n\n\n      if (settings.fade) {\n        if (settings.slidesToShow > 1 && process.env.NODE_ENV !== \"production\") {\n          console.warn(\"slidesToShow should be equal to 1 when fade is true, you're using \".concat(settings.slidesToShow));\n        }\n\n        if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== \"production\") {\n          console.warn(\"slidesToScroll should be equal to 1 when fade is true, you're using \".concat(settings.slidesToScroll));\n        }\n\n        settings.slidesToShow = 1;\n        settings.slidesToScroll = 1;\n      } // makes sure that children is an array, even when there is only 1 child\n\n\n      var children = _react[\"default\"].Children.toArray(this.props.children); // Children may contain false or null, so we should filter them\n      // children may also contain string filled with spaces (in certain cases where we use jsx strings)\n\n\n      children = children.filter(function (child) {\n        if (typeof child === \"string\") {\n          return !!child.trim();\n        }\n\n        return !!child;\n      }); // rows and slidesPerRow logic is handled here\n\n      if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {\n        console.warn(\"variableWidth is not supported in case of rows > 1 or slidesPerRow > 1\");\n        settings.variableWidth = false;\n      }\n\n      var newChildren = [];\n      var currentWidth = null;\n\n      for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {\n        var newSlide = [];\n\n        for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {\n          var row = [];\n\n          for (var k = j; k < j + settings.slidesPerRow; k += 1) {\n            if (settings.variableWidth && children[k].props.style) {\n              currentWidth = children[k].props.style.width;\n            }\n\n            if (k >= children.length) break;\n            row.push( /*#__PURE__*/_react[\"default\"].cloneElement(children[k], {\n              key: 100 * i + 10 * j + k,\n              tabIndex: -1,\n              style: {\n                width: \"\".concat(100 / settings.slidesPerRow, \"%\"),\n                display: \"inline-block\"\n              }\n            }));\n          }\n\n          newSlide.push( /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n            key: 10 * i + j\n          }, row));\n        }\n\n        if (settings.variableWidth) {\n          newChildren.push( /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n            key: i,\n            style: {\n              width: currentWidth\n            }\n          }, newSlide));\n        } else {\n          newChildren.push( /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n            key: i\n          }, newSlide));\n        }\n      }\n\n      if (settings === \"unslick\") {\n        var className = \"regular slider \" + (this.props.className || \"\");\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: className\n        }, children);\n      } else if (newChildren.length <= settings.slidesToShow) {\n        settings.unslick = true;\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(_innerSlider.InnerSlider, _extends({\n        style: this.props.style,\n        ref: this.innerSliderRefHandler\n      }, settings), newChildren);\n    }\n  }]);\n\n  return Slider;\n}(_react[\"default\"].Component);\n\nexports[\"default\"] = Slider;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InnerSlider = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _initialState = _interopRequireDefault(require(\"./initial-state\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _innerSliderUtils = require(\"./utils/innerSliderUtils\");\n\nvar _track = require(\"./track\");\n\nvar _dots = require(\"./dots\");\n\nvar _arrows = require(\"./arrows\");\n\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar InnerSlider = /*#__PURE__*/function (_React$Component) {\n  _inherits(InnerSlider, _React$Component);\n\n  var _super = _createSuper(InnerSlider);\n\n  function InnerSlider(props) {\n    var _this;\n\n    _classCallCheck(this, InnerSlider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"listRefHandler\", function (ref) {\n      return _this.list = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"trackRefHandler\", function (ref) {\n      return _this.track = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"adaptHeight\", function () {\n      if (_this.props.adaptiveHeight && _this.list) {\n        var elem = _this.list.querySelector(\"[data-index=\\\"\".concat(_this.state.currentSlide, \"\\\"]\"));\n\n        _this.list.style.height = (0, _innerSliderUtils.getHeight)(elem) + \"px\";\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.props.onInit && _this.props.onInit();\n\n      if (_this.props.lazyLoad) {\n        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_objectSpread(_objectSpread({}, _this.props), _this.state));\n\n        if (slidesToLoad.length > 0) {\n          _this.setState(function (prevState) {\n            return {\n              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)\n            };\n          });\n\n          if (_this.props.onLazyLoad) {\n            _this.props.onLazyLoad(slidesToLoad);\n          }\n        }\n      }\n\n      var spec = _objectSpread({\n        listRef: _this.list,\n        trackRef: _this.track\n      }, _this.props);\n\n      _this.updateState(spec, true, function () {\n        _this.adaptHeight();\n\n        _this.props.autoplay && _this.autoPlay(\"update\");\n      });\n\n      if (_this.props.lazyLoad === \"progressive\") {\n        _this.lazyLoadTimer = setInterval(_this.progressiveLazyLoad, 1000);\n      }\n\n      _this.ro = new _resizeObserverPolyfill[\"default\"](function () {\n        if (_this.state.animating) {\n          _this.onWindowResized(false); // don't set trackStyle hence don't break animation\n\n\n          _this.callbackTimers.push(setTimeout(function () {\n            return _this.onWindowResized();\n          }, _this.props.speed));\n        } else {\n          _this.onWindowResized();\n        }\n      });\n\n      _this.ro.observe(_this.list);\n\n      document.querySelectorAll && Array.prototype.forEach.call(document.querySelectorAll(\".slick-slide\"), function (slide) {\n        slide.onfocus = _this.props.pauseOnFocus ? _this.onSlideFocus : null;\n        slide.onblur = _this.props.pauseOnFocus ? _this.onSlideBlur : null;\n      });\n\n      if (window.addEventListener) {\n        window.addEventListener(\"resize\", _this.onWindowResized);\n      } else {\n        window.attachEvent(\"onresize\", _this.onWindowResized);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      if (_this.animationEndCallback) {\n        clearTimeout(_this.animationEndCallback);\n      }\n\n      if (_this.lazyLoadTimer) {\n        clearInterval(_this.lazyLoadTimer);\n      }\n\n      if (_this.callbackTimers.length) {\n        _this.callbackTimers.forEach(function (timer) {\n          return clearTimeout(timer);\n        });\n\n        _this.callbackTimers = [];\n      }\n\n      if (window.addEventListener) {\n        window.removeEventListener(\"resize\", _this.onWindowResized);\n      } else {\n        window.detachEvent(\"onresize\", _this.onWindowResized);\n      }\n\n      if (_this.autoplayTimer) {\n        clearInterval(_this.autoplayTimer);\n      }\n\n      _this.ro.disconnect();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidUpdate\", function (prevProps) {\n      _this.checkImagesLoad();\n\n      _this.props.onReInit && _this.props.onReInit();\n\n      if (_this.props.lazyLoad) {\n        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_objectSpread(_objectSpread({}, _this.props), _this.state));\n\n        if (slidesToLoad.length > 0) {\n          _this.setState(function (prevState) {\n            return {\n              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)\n            };\n          });\n\n          if (_this.props.onLazyLoad) {\n            _this.props.onLazyLoad(slidesToLoad);\n          }\n        }\n      } // if (this.props.onLazyLoad) {\n      //   this.props.onLazyLoad([leftMostSlide])\n      // }\n\n\n      _this.adaptHeight();\n\n      var spec = _objectSpread(_objectSpread({\n        listRef: _this.list,\n        trackRef: _this.track\n      }, _this.props), _this.state);\n\n      var setTrackStyle = _this.didPropsChange(prevProps);\n\n      setTrackStyle && _this.updateState(spec, setTrackStyle, function () {\n        if (_this.state.currentSlide >= _react[\"default\"].Children.count(_this.props.children)) {\n          _this.changeSlide({\n            message: \"index\",\n            index: _react[\"default\"].Children.count(_this.props.children) - _this.props.slidesToShow,\n            currentSlide: _this.state.currentSlide\n          });\n        }\n\n        if (_this.props.autoplay) {\n          _this.autoPlay(\"update\");\n        } else {\n          _this.pause(\"paused\");\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onWindowResized\", function (setTrackStyle) {\n      if (_this.debouncedResize) _this.debouncedResize.cancel();\n      _this.debouncedResize = (0, _lodash[\"default\"])(function () {\n        return _this.resizeWindow(setTrackStyle);\n      }, 50);\n\n      _this.debouncedResize();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resizeWindow\", function () {\n      var setTrackStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var isTrackMounted = Boolean(_this.track && _this.track.node); // prevent warning: setting state on unmounted component (server side rendering)\n\n      if (!isTrackMounted) return;\n\n      var spec = _objectSpread(_objectSpread({\n        listRef: _this.list,\n        trackRef: _this.track\n      }, _this.props), _this.state);\n\n      _this.updateState(spec, setTrackStyle, function () {\n        if (_this.props.autoplay) _this.autoPlay(\"update\");else _this.pause(\"paused\");\n      }); // animating state should be cleared while resizing, otherwise autoplay stops working\n\n\n      _this.setState({\n        animating: false\n      });\n\n      clearTimeout(_this.animationEndCallback);\n      delete _this.animationEndCallback;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateState\", function (spec, setTrackStyle, callback) {\n      var updatedState = (0, _innerSliderUtils.initializedState)(spec);\n      spec = _objectSpread(_objectSpread(_objectSpread({}, spec), updatedState), {}, {\n        slideIndex: updatedState.currentSlide\n      });\n      var targetLeft = (0, _innerSliderUtils.getTrackLeft)(spec);\n      spec = _objectSpread(_objectSpread({}, spec), {}, {\n        left: targetLeft\n      });\n      var trackStyle = (0, _innerSliderUtils.getTrackCSS)(spec);\n\n      if (setTrackStyle || _react[\"default\"].Children.count(_this.props.children) !== _react[\"default\"].Children.count(spec.children)) {\n        updatedState[\"trackStyle\"] = trackStyle;\n      }\n\n      _this.setState(updatedState, callback);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ssrInit\", function () {\n      if (_this.props.variableWidth) {\n        var _trackWidth = 0,\n            _trackLeft = 0;\n        var childrenWidths = [];\n        var preClones = (0, _innerSliderUtils.getPreClones)(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n          slideCount: _this.props.children.length\n        }));\n        var postClones = (0, _innerSliderUtils.getPostClones)(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n          slideCount: _this.props.children.length\n        }));\n\n        _this.props.children.forEach(function (child) {\n          childrenWidths.push(child.props.style.width);\n          _trackWidth += child.props.style.width;\n        });\n\n        for (var i = 0; i < preClones; i++) {\n          _trackLeft += childrenWidths[childrenWidths.length - 1 - i];\n          _trackWidth += childrenWidths[childrenWidths.length - 1 - i];\n        }\n\n        for (var _i = 0; _i < postClones; _i++) {\n          _trackWidth += childrenWidths[_i];\n        }\n\n        for (var _i2 = 0; _i2 < _this.state.currentSlide; _i2++) {\n          _trackLeft += childrenWidths[_i2];\n        }\n\n        var _trackStyle = {\n          width: _trackWidth + \"px\",\n          left: -_trackLeft + \"px\"\n        };\n\n        if (_this.props.centerMode) {\n          var currentWidth = \"\".concat(childrenWidths[_this.state.currentSlide], \"px\");\n          _trackStyle.left = \"calc(\".concat(_trackStyle.left, \" + (100% - \").concat(currentWidth, \") / 2 ) \");\n        }\n\n        return {\n          trackStyle: _trackStyle\n        };\n      }\n\n      var childrenCount = _react[\"default\"].Children.count(_this.props.children);\n\n      var spec = _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n        slideCount: childrenCount\n      });\n\n      var slideCount = (0, _innerSliderUtils.getPreClones)(spec) + (0, _innerSliderUtils.getPostClones)(spec) + childrenCount;\n      var trackWidth = 100 / _this.props.slidesToShow * slideCount;\n      var slideWidth = 100 / slideCount;\n      var trackLeft = -slideWidth * ((0, _innerSliderUtils.getPreClones)(spec) + _this.state.currentSlide) * trackWidth / 100;\n\n      if (_this.props.centerMode) {\n        trackLeft += (100 - slideWidth * trackWidth / 100) / 2;\n      }\n\n      var trackStyle = {\n        width: trackWidth + \"%\",\n        left: trackLeft + \"%\"\n      };\n      return {\n        slideWidth: slideWidth + \"%\",\n        trackStyle: trackStyle\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkImagesLoad\", function () {\n      var images = _this.list && _this.list.querySelectorAll && _this.list.querySelectorAll(\".slick-slide img\") || [];\n      var imagesCount = images.length,\n          loadedCount = 0;\n      Array.prototype.forEach.call(images, function (image) {\n        var handler = function handler() {\n          return ++loadedCount && loadedCount >= imagesCount && _this.onWindowResized();\n        };\n\n        if (!image.onclick) {\n          image.onclick = function () {\n            return image.parentNode.focus();\n          };\n        } else {\n          var prevClickHandler = image.onclick;\n\n          image.onclick = function () {\n            prevClickHandler();\n            image.parentNode.focus();\n          };\n        }\n\n        if (!image.onload) {\n          if (_this.props.lazyLoad) {\n            image.onload = function () {\n              _this.adaptHeight();\n\n              _this.callbackTimers.push(setTimeout(_this.onWindowResized, _this.props.speed));\n            };\n          } else {\n            image.onload = handler;\n\n            image.onerror = function () {\n              handler();\n              _this.props.onLazyLoadError && _this.props.onLazyLoadError();\n            };\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"progressiveLazyLoad\", function () {\n      var slidesToLoad = [];\n\n      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);\n\n      for (var index = _this.state.currentSlide; index < _this.state.slideCount + (0, _innerSliderUtils.getPostClones)(spec); index++) {\n        if (_this.state.lazyLoadedList.indexOf(index) < 0) {\n          slidesToLoad.push(index);\n          break;\n        }\n      }\n\n      for (var _index = _this.state.currentSlide - 1; _index >= -(0, _innerSliderUtils.getPreClones)(spec); _index--) {\n        if (_this.state.lazyLoadedList.indexOf(_index) < 0) {\n          slidesToLoad.push(_index);\n          break;\n        }\n      }\n\n      if (slidesToLoad.length > 0) {\n        _this.setState(function (state) {\n          return {\n            lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)\n          };\n        });\n\n        if (_this.props.onLazyLoad) {\n          _this.props.onLazyLoad(slidesToLoad);\n        }\n      } else {\n        if (_this.lazyLoadTimer) {\n          clearInterval(_this.lazyLoadTimer);\n          delete _this.lazyLoadTimer;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slideHandler\", function (index) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props = _this.props,\n          asNavFor = _this$props.asNavFor,\n          beforeChange = _this$props.beforeChange,\n          onLazyLoad = _this$props.onLazyLoad,\n          speed = _this$props.speed,\n          afterChange = _this$props.afterChange; // capture currentslide before state is updated\n\n      var currentSlide = _this.state.currentSlide;\n\n      var _slideHandler = (0, _innerSliderUtils.slideHandler)(_objectSpread(_objectSpread(_objectSpread({\n        index: index\n      }, _this.props), _this.state), {}, {\n        trackRef: _this.track,\n        useCSS: _this.props.useCSS && !dontAnimate\n      })),\n          state = _slideHandler.state,\n          nextState = _slideHandler.nextState;\n\n      if (!state) return;\n      beforeChange && beforeChange(currentSlide, state.currentSlide);\n      var slidesToLoad = state.lazyLoadedList.filter(function (value) {\n        return _this.state.lazyLoadedList.indexOf(value) < 0;\n      });\n      onLazyLoad && slidesToLoad.length > 0 && onLazyLoad(slidesToLoad);\n\n      if (!_this.props.waitForAnimate && _this.animationEndCallback) {\n        clearTimeout(_this.animationEndCallback);\n        afterChange && afterChange(currentSlide);\n        delete _this.animationEndCallback;\n      }\n\n      _this.setState(state, function () {\n        // asNavForIndex check is to avoid recursive calls of slideHandler in waitForAnimate=false mode\n        if (asNavFor && _this.asNavForIndex !== index) {\n          _this.asNavForIndex = index;\n          asNavFor.innerSlider.slideHandler(index);\n        }\n\n        if (!nextState) return;\n        _this.animationEndCallback = setTimeout(function () {\n          var animating = nextState.animating,\n              firstBatch = _objectWithoutProperties(nextState, [\"animating\"]);\n\n          _this.setState(firstBatch, function () {\n            _this.callbackTimers.push(setTimeout(function () {\n              return _this.setState({\n                animating: animating\n              });\n            }, 10));\n\n            afterChange && afterChange(state.currentSlide);\n            delete _this.animationEndCallback;\n          });\n        }, speed);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeSlide\", function (options) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);\n\n      var targetSlide = (0, _innerSliderUtils.changeSlide)(spec, options);\n      if (targetSlide !== 0 && !targetSlide) return;\n\n      if (dontAnimate === true) {\n        _this.slideHandler(targetSlide, dontAnimate);\n      } else {\n        _this.slideHandler(targetSlide);\n      }\n\n      _this.props.autoplay && _this.autoPlay(\"update\");\n\n      if (_this.props.focusOnSelect) {\n        var nodes = _this.list.querySelectorAll(\".slick-current\");\n\n        nodes[0] && nodes[0].focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clickHandler\", function (e) {\n      if (_this.clickable === false) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      _this.clickable = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"keyHandler\", function (e) {\n      var dir = (0, _innerSliderUtils.keyHandler)(e, _this.props.accessibility, _this.props.rtl);\n      dir !== \"\" && _this.changeSlide({\n        message: dir\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectHandler\", function (options) {\n      _this.changeSlide(options);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disableBodyScroll\", function () {\n      var preventDefault = function preventDefault(e) {\n        e = e || window.event;\n        if (e.preventDefault) e.preventDefault();\n        e.returnValue = false;\n      };\n\n      window.ontouchmove = preventDefault;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"enableBodyScroll\", function () {\n      window.ontouchmove = null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipeStart\", function (e) {\n      if (_this.props.verticalSwiping) {\n        _this.disableBodyScroll();\n      }\n\n      var state = (0, _innerSliderUtils.swipeStart)(e, _this.props.swipe, _this.props.draggable);\n      state !== \"\" && _this.setState(state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipeMove\", function (e) {\n      var state = (0, _innerSliderUtils.swipeMove)(e, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n        trackRef: _this.track,\n        listRef: _this.list,\n        slideIndex: _this.state.currentSlide\n      }));\n      if (!state) return;\n\n      if (state[\"swiping\"]) {\n        _this.clickable = false;\n      }\n\n      _this.setState(state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipeEnd\", function (e) {\n      var state = (0, _innerSliderUtils.swipeEnd)(e, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {\n        trackRef: _this.track,\n        listRef: _this.list,\n        slideIndex: _this.state.currentSlide\n      }));\n      if (!state) return;\n      var triggerSlideHandler = state[\"triggerSlideHandler\"];\n      delete state[\"triggerSlideHandler\"];\n\n      _this.setState(state);\n\n      if (triggerSlideHandler === undefined) return;\n\n      _this.slideHandler(triggerSlideHandler);\n\n      if (_this.props.verticalSwiping) {\n        _this.enableBodyScroll();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"touchEnd\", function (e) {\n      _this.swipeEnd(e);\n\n      _this.clickable = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickPrev\", function () {\n      // this and fellow methods are wrapped in setTimeout\n      // to make sure initialize setState has happened before\n      // any of such methods are called\n      _this.callbackTimers.push(setTimeout(function () {\n        return _this.changeSlide({\n          message: \"previous\"\n        });\n      }, 0));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickNext\", function () {\n      _this.callbackTimers.push(setTimeout(function () {\n        return _this.changeSlide({\n          message: \"next\"\n        });\n      }, 0));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slickGoTo\", function (slide) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      slide = Number(slide);\n      if (isNaN(slide)) return \"\";\n\n      _this.callbackTimers.push(setTimeout(function () {\n        return _this.changeSlide({\n          message: \"index\",\n          index: slide,\n          currentSlide: _this.state.currentSlide\n        }, dontAnimate);\n      }, 0));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"play\", function () {\n      var nextIndex;\n\n      if (_this.props.rtl) {\n        nextIndex = _this.state.currentSlide - _this.props.slidesToScroll;\n      } else {\n        if ((0, _innerSliderUtils.canGoNext)(_objectSpread(_objectSpread({}, _this.props), _this.state))) {\n          nextIndex = _this.state.currentSlide + _this.props.slidesToScroll;\n        } else {\n          return false;\n        }\n      }\n\n      _this.slideHandler(nextIndex);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"autoPlay\", function (playType) {\n      if (_this.autoplayTimer) {\n        clearInterval(_this.autoplayTimer);\n      }\n\n      var autoplaying = _this.state.autoplaying;\n\n      if (playType === \"update\") {\n        if (autoplaying === \"hovered\" || autoplaying === \"focused\" || autoplaying === \"paused\") {\n          return;\n        }\n      } else if (playType === \"leave\") {\n        if (autoplaying === \"paused\" || autoplaying === \"focused\") {\n          return;\n        }\n      } else if (playType === \"blur\") {\n        if (autoplaying === \"paused\" || autoplaying === \"hovered\") {\n          return;\n        }\n      }\n\n      _this.autoplayTimer = setInterval(_this.play, _this.props.autoplaySpeed + 50);\n\n      _this.setState({\n        autoplaying: \"playing\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pause\", function (pauseType) {\n      if (_this.autoplayTimer) {\n        clearInterval(_this.autoplayTimer);\n        _this.autoplayTimer = null;\n      }\n\n      var autoplaying = _this.state.autoplaying;\n\n      if (pauseType === \"paused\") {\n        _this.setState({\n          autoplaying: \"paused\"\n        });\n      } else if (pauseType === \"focused\") {\n        if (autoplaying === \"hovered\" || autoplaying === \"playing\") {\n          _this.setState({\n            autoplaying: \"focused\"\n          });\n        }\n      } else {\n        // pauseType  is 'hovered'\n        if (autoplaying === \"playing\") {\n          _this.setState({\n            autoplaying: \"hovered\"\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDotsOver\", function () {\n      return _this.props.autoplay && _this.pause(\"hovered\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDotsLeave\", function () {\n      return _this.props.autoplay && _this.state.autoplaying === \"hovered\" && _this.autoPlay(\"leave\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTrackOver\", function () {\n      return _this.props.autoplay && _this.pause(\"hovered\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTrackLeave\", function () {\n      return _this.props.autoplay && _this.state.autoplaying === \"hovered\" && _this.autoPlay(\"leave\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSlideFocus\", function () {\n      return _this.props.autoplay && _this.pause(\"focused\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSlideBlur\", function () {\n      return _this.props.autoplay && _this.state.autoplaying === \"focused\" && _this.autoPlay(\"blur\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var className = (0, _classnames[\"default\"])(\"slick-slider\", _this.props.className, {\n        \"slick-vertical\": _this.props.vertical,\n        \"slick-initialized\": true\n      });\n\n      var spec = _objectSpread(_objectSpread({}, _this.props), _this.state);\n\n      var trackProps = (0, _innerSliderUtils.extractObject)(spec, [\"fade\", \"cssEase\", \"speed\", \"infinite\", \"centerMode\", \"focusOnSelect\", \"currentSlide\", \"lazyLoad\", \"lazyLoadedList\", \"rtl\", \"slideWidth\", \"slideHeight\", \"listHeight\", \"vertical\", \"slidesToShow\", \"slidesToScroll\", \"slideCount\", \"trackStyle\", \"variableWidth\", \"unslick\", \"centerPadding\", \"targetSlide\", \"useCSS\"]);\n      var pauseOnHover = _this.props.pauseOnHover;\n      trackProps = _objectSpread(_objectSpread({}, trackProps), {}, {\n        onMouseEnter: pauseOnHover ? _this.onTrackOver : null,\n        onMouseLeave: pauseOnHover ? _this.onTrackLeave : null,\n        onMouseOver: pauseOnHover ? _this.onTrackOver : null,\n        focusOnSelect: _this.props.focusOnSelect && _this.clickable ? _this.selectHandler : null\n      });\n      var dots;\n\n      if (_this.props.dots === true && _this.state.slideCount >= _this.props.slidesToShow) {\n        var dotProps = (0, _innerSliderUtils.extractObject)(spec, [\"dotsClass\", \"slideCount\", \"slidesToShow\", \"currentSlide\", \"slidesToScroll\", \"clickHandler\", \"children\", \"customPaging\", \"infinite\", \"appendDots\"]);\n        var pauseOnDotsHover = _this.props.pauseOnDotsHover;\n        dotProps = _objectSpread(_objectSpread({}, dotProps), {}, {\n          clickHandler: _this.changeSlide,\n          onMouseEnter: pauseOnDotsHover ? _this.onDotsLeave : null,\n          onMouseOver: pauseOnDotsHover ? _this.onDotsOver : null,\n          onMouseLeave: pauseOnDotsHover ? _this.onDotsLeave : null\n        });\n        dots = /*#__PURE__*/_react[\"default\"].createElement(_dots.Dots, dotProps);\n      }\n\n      var prevArrow, nextArrow;\n      var arrowProps = (0, _innerSliderUtils.extractObject)(spec, [\"infinite\", \"centerMode\", \"currentSlide\", \"slideCount\", \"slidesToShow\", \"prevArrow\", \"nextArrow\"]);\n      arrowProps.clickHandler = _this.changeSlide;\n\n      if (_this.props.arrows) {\n        prevArrow = /*#__PURE__*/_react[\"default\"].createElement(_arrows.PrevArrow, arrowProps);\n        nextArrow = /*#__PURE__*/_react[\"default\"].createElement(_arrows.NextArrow, arrowProps);\n      }\n\n      var verticalHeightStyle = null;\n\n      if (_this.props.vertical) {\n        verticalHeightStyle = {\n          height: _this.state.listHeight\n        };\n      }\n\n      var centerPaddingStyle = null;\n\n      if (_this.props.vertical === false) {\n        if (_this.props.centerMode === true) {\n          centerPaddingStyle = {\n            padding: \"0px \" + _this.props.centerPadding\n          };\n        }\n      } else {\n        if (_this.props.centerMode === true) {\n          centerPaddingStyle = {\n            padding: _this.props.centerPadding + \" 0px\"\n          };\n        }\n      }\n\n      var listStyle = _objectSpread(_objectSpread({}, verticalHeightStyle), centerPaddingStyle);\n\n      var touchMove = _this.props.touchMove;\n      var listProps = {\n        className: \"slick-list\",\n        style: listStyle,\n        onClick: _this.clickHandler,\n        onMouseDown: touchMove ? _this.swipeStart : null,\n        onMouseMove: _this.state.dragging && touchMove ? _this.swipeMove : null,\n        onMouseUp: touchMove ? _this.swipeEnd : null,\n        onMouseLeave: _this.state.dragging && touchMove ? _this.swipeEnd : null,\n        onTouchStart: touchMove ? _this.swipeStart : null,\n        onTouchMove: _this.state.dragging && touchMove ? _this.swipeMove : null,\n        onTouchEnd: touchMove ? _this.touchEnd : null,\n        onTouchCancel: _this.state.dragging && touchMove ? _this.swipeEnd : null,\n        onKeyDown: _this.props.accessibility ? _this.keyHandler : null\n      };\n      var innerSliderProps = {\n        className: className,\n        dir: \"ltr\",\n        style: _this.props.style\n      };\n\n      if (_this.props.unslick) {\n        listProps = {\n          className: \"slick-list\"\n        };\n        innerSliderProps = {\n          className: className\n        };\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", innerSliderProps, !_this.props.unslick ? prevArrow : \"\", /*#__PURE__*/_react[\"default\"].createElement(\"div\", _extends({\n        ref: _this.listRefHandler\n      }, listProps), /*#__PURE__*/_react[\"default\"].createElement(_track.Track, _extends({\n        ref: _this.trackRefHandler\n      }, trackProps), _this.props.children)), !_this.props.unslick ? nextArrow : \"\", !_this.props.unslick ? dots : \"\");\n    });\n\n    _this.list = null;\n    _this.track = null;\n    _this.state = _objectSpread(_objectSpread({}, _initialState[\"default\"]), {}, {\n      currentSlide: _this.props.initialSlide,\n      slideCount: _react[\"default\"].Children.count(_this.props.children)\n    });\n    _this.callbackTimers = [];\n    _this.clickable = true;\n    _this.debouncedResize = null;\n\n    var ssrState = _this.ssrInit();\n\n    _this.state = _objectSpread(_objectSpread({}, _this.state), ssrState);\n    return _this;\n  }\n\n  _createClass(InnerSlider, [{\n    key: \"didPropsChange\",\n    value: function didPropsChange(prevProps) {\n      var setTrackStyle = false;\n\n      for (var _i3 = 0, _Object$keys = Object.keys(this.props); _i3 < _Object$keys.length; _i3++) {\n        var key = _Object$keys[_i3];\n\n        if (!prevProps.hasOwnProperty(key)) {\n          setTrackStyle = true;\n          break;\n        }\n\n        if (_typeof(prevProps[key]) === \"object\" || typeof prevProps[key] === \"function\") {\n          continue;\n        }\n\n        if (prevProps[key] !== this.props[key]) {\n          setTrackStyle = true;\n          break;\n        }\n      }\n\n      return setTrackStyle || _react[\"default\"].Children.count(this.props.children) !== _react[\"default\"].Children.count(prevProps.children);\n    }\n  }]);\n\n  return InnerSlider;\n}(_react[\"default\"].Component);\n\nexports.InnerSlider = InnerSlider;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar initialState = {\n  animating: false,\n  autoplaying: null,\n  currentDirection: 0,\n  currentLeft: null,\n  currentSlide: 0,\n  direction: 1,\n  dragging: false,\n  edgeDragged: false,\n  initialized: false,\n  lazyLoadedList: [],\n  listHeight: null,\n  listWidth: null,\n  scrolling: false,\n  slideCount: null,\n  slideHeight: null,\n  slideWidth: null,\n  swipeLeft: null,\n  swiped: false,\n  // used by swipeEvent. differentites between touch and swipe.\n  swiping: false,\n  touchObject: {\n    startX: 0,\n    startY: 0,\n    curX: 0,\n    curY: 0\n  },\n  trackStyle: {},\n  trackWidth: 0,\n  targetSlide: 0\n};\nvar _default = initialState;\nexports[\"default\"] = _default;","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/** Used as references for various `Number` constants. */\n\nvar NAN = 0 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\n\nvar now = function now() {\n  return root.Date.now();\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\n\n\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  wait = toNumber(wait) || 0;\n\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time; // Start the timer for the trailing edge.\n\n    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.\n\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n\n  function timerExpired() {\n    var time = now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    } // Restart the timer.\n\n\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n\n    return result;\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = debounce;","\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Track = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _innerSliderUtils = require(\"./utils/innerSliderUtils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // given specifications/props for a slide, fetch all the classes that need to be applied to the slide\n\n\nvar getSlideClasses = function getSlideClasses(spec) {\n  var slickActive, slickCenter, slickCloned;\n  var centerOffset, index;\n\n  if (spec.rtl) {\n    index = spec.slideCount - 1 - spec.index;\n  } else {\n    index = spec.index;\n  }\n\n  slickCloned = index < 0 || index >= spec.slideCount;\n\n  if (spec.centerMode) {\n    centerOffset = Math.floor(spec.slidesToShow / 2);\n    slickCenter = (index - spec.currentSlide) % spec.slideCount === 0;\n\n    if (index > spec.currentSlide - centerOffset - 1 && index <= spec.currentSlide + centerOffset) {\n      slickActive = true;\n    }\n  } else {\n    slickActive = spec.currentSlide <= index && index < spec.currentSlide + spec.slidesToShow;\n  }\n\n  var focusedSlide;\n\n  if (spec.targetSlide < 0) {\n    focusedSlide = spec.targetSlide + spec.slideCount;\n  } else if (spec.targetSlide >= spec.slideCount) {\n    focusedSlide = spec.targetSlide - spec.slideCount;\n  } else {\n    focusedSlide = spec.targetSlide;\n  }\n\n  var slickCurrent = index === focusedSlide;\n  return {\n    \"slick-slide\": true,\n    \"slick-active\": slickActive,\n    \"slick-center\": slickCenter,\n    \"slick-cloned\": slickCloned,\n    \"slick-current\": slickCurrent // dubious in case of RTL\n\n  };\n};\n\nvar getSlideStyle = function getSlideStyle(spec) {\n  var style = {};\n\n  if (spec.variableWidth === undefined || spec.variableWidth === false) {\n    style.width = spec.slideWidth;\n  }\n\n  if (spec.fade) {\n    style.position = \"relative\";\n\n    if (spec.vertical) {\n      style.top = -spec.index * parseInt(spec.slideHeight);\n    } else {\n      style.left = -spec.index * parseInt(spec.slideWidth);\n    }\n\n    style.opacity = spec.currentSlide === spec.index ? 1 : 0;\n\n    if (spec.useCSS) {\n      style.transition = \"opacity \" + spec.speed + \"ms \" + spec.cssEase + \", \" + \"visibility \" + spec.speed + \"ms \" + spec.cssEase;\n    }\n  }\n\n  return style;\n};\n\nvar getKey = function getKey(child, fallbackKey) {\n  return child.key || fallbackKey;\n};\n\nvar renderSlides = function renderSlides(spec) {\n  var key;\n  var slides = [];\n  var preCloneSlides = [];\n  var postCloneSlides = [];\n\n  var childrenCount = _react[\"default\"].Children.count(spec.children);\n\n  var startIndex = (0, _innerSliderUtils.lazyStartIndex)(spec);\n  var endIndex = (0, _innerSliderUtils.lazyEndIndex)(spec);\n\n  _react[\"default\"].Children.forEach(spec.children, function (elem, index) {\n    var child;\n    var childOnClickOptions = {\n      message: \"children\",\n      index: index,\n      slidesToScroll: spec.slidesToScroll,\n      currentSlide: spec.currentSlide\n    }; // in case of lazyLoad, whether or not we want to fetch the slide\n\n    if (!spec.lazyLoad || spec.lazyLoad && spec.lazyLoadedList.indexOf(index) >= 0) {\n      child = elem;\n    } else {\n      child = /*#__PURE__*/_react[\"default\"].createElement(\"div\", null);\n    }\n\n    var childStyle = getSlideStyle(_objectSpread(_objectSpread({}, spec), {}, {\n      index: index\n    }));\n    var slideClass = child.props.className || \"\";\n    var slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {\n      index: index\n    })); // push a cloned element of the desired slide\n\n    slides.push( /*#__PURE__*/_react[\"default\"].cloneElement(child, {\n      key: \"original\" + getKey(child, index),\n      \"data-index\": index,\n      className: (0, _classnames[\"default\"])(slideClasses, slideClass),\n      tabIndex: \"-1\",\n      \"aria-hidden\": !slideClasses[\"slick-active\"],\n      style: _objectSpread(_objectSpread({\n        outline: \"none\"\n      }, child.props.style || {}), childStyle),\n      onClick: function onClick(e) {\n        child.props && child.props.onClick && child.props.onClick(e);\n\n        if (spec.focusOnSelect) {\n          spec.focusOnSelect(childOnClickOptions);\n        }\n      }\n    })); // if slide needs to be precloned or postcloned\n\n    if (spec.infinite && spec.fade === false) {\n      var preCloneNo = childrenCount - index;\n\n      if (preCloneNo <= (0, _innerSliderUtils.getPreClones)(spec) && childrenCount !== spec.slidesToShow) {\n        key = -preCloneNo;\n\n        if (key >= startIndex) {\n          child = elem;\n        }\n\n        slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {\n          index: key\n        }));\n        preCloneSlides.push( /*#__PURE__*/_react[\"default\"].cloneElement(child, {\n          key: \"precloned\" + getKey(child, key),\n          \"data-index\": key,\n          tabIndex: \"-1\",\n          className: (0, _classnames[\"default\"])(slideClasses, slideClass),\n          \"aria-hidden\": !slideClasses[\"slick-active\"],\n          style: _objectSpread(_objectSpread({}, child.props.style || {}), childStyle),\n          onClick: function onClick(e) {\n            child.props && child.props.onClick && child.props.onClick(e);\n\n            if (spec.focusOnSelect) {\n              spec.focusOnSelect(childOnClickOptions);\n            }\n          }\n        }));\n      }\n\n      if (childrenCount !== spec.slidesToShow) {\n        key = childrenCount + index;\n\n        if (key < endIndex) {\n          child = elem;\n        }\n\n        slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {\n          index: key\n        }));\n        postCloneSlides.push( /*#__PURE__*/_react[\"default\"].cloneElement(child, {\n          key: \"postcloned\" + getKey(child, key),\n          \"data-index\": key,\n          tabIndex: \"-1\",\n          className: (0, _classnames[\"default\"])(slideClasses, slideClass),\n          \"aria-hidden\": !slideClasses[\"slick-active\"],\n          style: _objectSpread(_objectSpread({}, child.props.style || {}), childStyle),\n          onClick: function onClick(e) {\n            child.props && child.props.onClick && child.props.onClick(e);\n\n            if (spec.focusOnSelect) {\n              spec.focusOnSelect(childOnClickOptions);\n            }\n          }\n        }));\n      }\n    }\n  });\n\n  if (spec.rtl) {\n    return preCloneSlides.concat(slides, postCloneSlides).reverse();\n  } else {\n    return preCloneSlides.concat(slides, postCloneSlides);\n  }\n};\n\nvar Track = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Track, _React$PureComponent);\n\n  var _super = _createSuper(Track);\n\n  function Track() {\n    var _this;\n\n    _classCallCheck(this, Track);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"node\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRef\", function (ref) {\n      _this.node = ref;\n    });\n\n    return _this;\n  }\n\n  _createClass(Track, [{\n    key: \"render\",\n    value: function render() {\n      var slides = renderSlides(this.props);\n      var _this$props = this.props,\n          onMouseEnter = _this$props.onMouseEnter,\n          onMouseOver = _this$props.onMouseOver,\n          onMouseLeave = _this$props.onMouseLeave;\n      var mouseEvents = {\n        onMouseEnter: onMouseEnter,\n        onMouseOver: onMouseOver,\n        onMouseLeave: onMouseLeave\n      };\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", _extends({\n        ref: this.handleRef,\n        className: \"slick-track\",\n        style: this.props.trackStyle\n      }, mouseEvents), slides);\n    }\n  }]);\n\n  return Track;\n}(_react[\"default\"].PureComponent);\n\nexports.Track = Track;","\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dots = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _innerSliderUtils = require(\"./utils/innerSliderUtils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar getDotCount = function getDotCount(spec) {\n  var dots;\n\n  if (spec.infinite) {\n    dots = Math.ceil(spec.slideCount / spec.slidesToScroll);\n  } else {\n    dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1;\n  }\n\n  return dots;\n};\n\nvar Dots = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Dots, _React$PureComponent);\n\n  var _super = _createSuper(Dots);\n\n  function Dots() {\n    _classCallCheck(this, Dots);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dots, [{\n    key: \"clickHandler\",\n    value: function clickHandler(options, e) {\n      // In Autoplay the focus stays on clicked button even after transition\n      // to next slide. That only goes away by click somewhere outside\n      e.preventDefault();\n      this.props.clickHandler(options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onMouseEnter = _this$props.onMouseEnter,\n          onMouseOver = _this$props.onMouseOver,\n          onMouseLeave = _this$props.onMouseLeave,\n          infinite = _this$props.infinite,\n          slidesToScroll = _this$props.slidesToScroll,\n          slidesToShow = _this$props.slidesToShow,\n          slideCount = _this$props.slideCount,\n          currentSlide = _this$props.currentSlide;\n      var dotCount = getDotCount({\n        slideCount: slideCount,\n        slidesToScroll: slidesToScroll,\n        slidesToShow: slidesToShow,\n        infinite: infinite\n      });\n      var mouseEvents = {\n        onMouseEnter: onMouseEnter,\n        onMouseOver: onMouseOver,\n        onMouseLeave: onMouseLeave\n      };\n      var dots = [];\n\n      for (var i = 0; i < dotCount; i++) {\n        var _rightBound = (i + 1) * slidesToScroll - 1;\n\n        var rightBound = infinite ? _rightBound : (0, _innerSliderUtils.clamp)(_rightBound, 0, slideCount - 1);\n\n        var _leftBound = rightBound - (slidesToScroll - 1);\n\n        var leftBound = infinite ? _leftBound : (0, _innerSliderUtils.clamp)(_leftBound, 0, slideCount - 1);\n        var className = (0, _classnames[\"default\"])({\n          \"slick-active\": infinite ? currentSlide >= leftBound && currentSlide <= rightBound : currentSlide === leftBound\n        });\n        var dotOptions = {\n          message: \"dots\",\n          index: i,\n          slidesToScroll: slidesToScroll,\n          currentSlide: currentSlide\n        };\n        var onClick = this.clickHandler.bind(this, dotOptions);\n        dots = dots.concat( /*#__PURE__*/_react[\"default\"].createElement(\"li\", {\n          key: i,\n          className: className\n        }, /*#__PURE__*/_react[\"default\"].cloneElement(this.props.customPaging(i), {\n          onClick: onClick\n        })));\n      }\n\n      return /*#__PURE__*/_react[\"default\"].cloneElement(this.props.appendDots(dots), _objectSpread({\n        className: this.props.dotsClass\n      }, mouseEvents));\n    }\n  }]);\n\n  return Dots;\n}(_react[\"default\"].PureComponent);\n\nexports.Dots = Dots;","\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrevArrow = exports.NextArrow = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _innerSliderUtils = require(\"./utils/innerSliderUtils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar PrevArrow = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(PrevArrow, _React$PureComponent);\n\n  var _super = _createSuper(PrevArrow);\n\n  function PrevArrow() {\n    _classCallCheck(this, PrevArrow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PrevArrow, [{\n    key: \"clickHandler\",\n    value: function clickHandler(options, e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      this.props.clickHandler(options, e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var prevClasses = {\n        \"slick-arrow\": true,\n        \"slick-prev\": true\n      };\n      var prevHandler = this.clickHandler.bind(this, {\n        message: \"previous\"\n      });\n\n      if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {\n        prevClasses[\"slick-disabled\"] = true;\n        prevHandler = null;\n      }\n\n      var prevArrowProps = {\n        key: \"0\",\n        \"data-role\": \"none\",\n        className: (0, _classnames[\"default\"])(prevClasses),\n        style: {\n          display: \"block\"\n        },\n        onClick: prevHandler\n      };\n      var customProps = {\n        currentSlide: this.props.currentSlide,\n        slideCount: this.props.slideCount\n      };\n      var prevArrow;\n\n      if (this.props.prevArrow) {\n        prevArrow = /*#__PURE__*/_react[\"default\"].cloneElement(this.props.prevArrow, _objectSpread(_objectSpread({}, prevArrowProps), customProps));\n      } else {\n        prevArrow = /*#__PURE__*/_react[\"default\"].createElement(\"button\", _extends({\n          key: \"0\",\n          type: \"button\"\n        }, prevArrowProps), \" \", \"Previous\");\n      }\n\n      return prevArrow;\n    }\n  }]);\n\n  return PrevArrow;\n}(_react[\"default\"].PureComponent);\n\nexports.PrevArrow = PrevArrow;\n\nvar NextArrow = /*#__PURE__*/function (_React$PureComponent2) {\n  _inherits(NextArrow, _React$PureComponent2);\n\n  var _super2 = _createSuper(NextArrow);\n\n  function NextArrow() {\n    _classCallCheck(this, NextArrow);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(NextArrow, [{\n    key: \"clickHandler\",\n    value: function clickHandler(options, e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      this.props.clickHandler(options, e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var nextClasses = {\n        \"slick-arrow\": true,\n        \"slick-next\": true\n      };\n      var nextHandler = this.clickHandler.bind(this, {\n        message: \"next\"\n      });\n\n      if (!(0, _innerSliderUtils.canGoNext)(this.props)) {\n        nextClasses[\"slick-disabled\"] = true;\n        nextHandler = null;\n      }\n\n      var nextArrowProps = {\n        key: \"1\",\n        \"data-role\": \"none\",\n        className: (0, _classnames[\"default\"])(nextClasses),\n        style: {\n          display: \"block\"\n        },\n        onClick: nextHandler\n      };\n      var customProps = {\n        currentSlide: this.props.currentSlide,\n        slideCount: this.props.slideCount\n      };\n      var nextArrow;\n\n      if (this.props.nextArrow) {\n        nextArrow = /*#__PURE__*/_react[\"default\"].cloneElement(this.props.nextArrow, _objectSpread(_objectSpread({}, nextArrowProps), customProps));\n      } else {\n        nextArrow = /*#__PURE__*/_react[\"default\"].createElement(\"button\", _extends({\n          key: \"1\",\n          type: \"button\"\n        }, nextArrowProps), \" \", \"Next\");\n      }\n\n      return nextArrow;\n    }\n  }]);\n\n  return NextArrow;\n}(_react[\"default\"].PureComponent);\n\nexports.NextArrow = NextArrow;","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return (\n    /** @class */\n    function () {\n      function class_1() {\n        this.__entries__ = [];\n      }\n\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\r\n         * @returns {boolean}\r\n         */\n        get: function get() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\r\n       * @param {*} key\r\n       * @returns {*}\r\n       */\n\n      class_1.prototype.get = function (key) {\n        var index = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index];\n        return entry && entry[1];\n      };\n      /**\r\n       * @param {*} key\r\n       * @param {*} value\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.set = function (key, value) {\n        var index = getIndex(this.__entries__, key);\n\n        if (~index) {\n          this.__entries__[index][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.delete = function (key) {\n        var entries = this.__entries__;\n        var index = getIndex(entries, key);\n\n        if (~index) {\n          entries.splice(index, 1);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.has = function (key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      /**\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.clear = function () {\n        this.__entries__.splice(0);\n      };\n      /**\r\n       * @param {Function} callback\r\n       * @param {*} [ctx=null]\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.forEach = function (callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n\n      return class_1;\n    }()\n  );\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n} // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserverController.\r\n   *\r\n   * @private\r\n   */\n  function ResizeObserverController() {\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\n    this.connected_ = false;\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\n\n    this.mutationEventsAdded_ = false;\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\n\n    this.mutationsObserver_ = null;\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\n\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\r\n   * Adds observer to observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be added.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    } // Add listeners if they haven't been added yet.\n\n\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\r\n   * Removes observer from observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n    if (~index) {\n      observers.splice(index, 1);\n    } // Remove listeners if controller has no connected observers.\n\n\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\r\n   * Invokes the update of observers. It will continue running updates insofar\r\n   * it detects changes.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Updates every observer from observers list and notifies them of queued\r\n   * entries.\r\n   *\r\n   * @private\r\n   * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n   *      dimensions of it's elements.\r\n   */\n\n\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    }); // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\r\n   * Initializes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    } // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n  };\n  /**\r\n   * Removes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\r\n   * \"Transitionend\" event handler.\r\n   *\r\n   * @private\r\n   * @param {TransitionEvent} event\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.\n\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Returns instance of the ResizeObserverController.\r\n   *\r\n   * @returns {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n  };\n  /**\r\n   * Holds reference to the controller's instance.\r\n   *\r\n   * @private {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\n\nvar defineConfigurable = function defineConfigurable(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function getWindowOf(target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObservation.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   */\n  function ResizeObservation(target) {\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n    this.broadcastWidth = 0;\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n\n    this.broadcastHeight = 0;\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\n\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\r\n   * Updates content rectangle and tells whether it's width or height properties\r\n   * have changed since the last broadcast.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\r\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n   * from the corresponding properties of the last observed content rectangle.\r\n   *\r\n   * @returns {DOMRectInit} Last observed content rectangle.\r\n   */\n\n\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n\n  return ResizeObservation;\n}();\n\nvar ResizeObserverEntry =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObserverEntry.\r\n   *\r\n   * @param {Element} target - Element that is being observed.\r\n   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n\n  return ResizeObserverEntry;\n}();\n\nvar ResizeObserverSPI =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n   *      when one of the observed elements changes it's content dimensions.\r\n   * @param {ResizeObserverController} controller - Controller instance which\r\n   *      is responsible for the updates of observer.\r\n   * @param {ResizeObserver} callbackCtx - Reference to the public\r\n   *      ResizeObserver instance which will be passed to callback function.\r\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\n    this.activeObservations_ = [];\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\n\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\r\n   * Starts observing provided element.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is already being observed.\n\n    if (observations.has(target)) {\n      return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this); // Force the update of observations.\n\n    this.controller_.refresh();\n  };\n  /**\r\n   * Stops observing provided element.\r\n   *\r\n   * @param {Element} target - Element to stop observing.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is not being observed.\n\n    if (!observations.has(target)) {\n      return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\r\n   * Stops observing all elements.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\r\n   * Collects observation instances the associated element of which has changed\r\n   * it's content rectangle.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\r\n   * Invokes initial callback function with a list of ResizeObserverEntry\r\n   * instances collected from active resize observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n\n    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\r\n   * Clears the collection of active observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\r\n   * Tells whether observer has active observations.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n\n  return ResizeObserverSPI;\n}(); // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n   *      dimensions of the observed elements change.\r\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n\n  return ResizeObserver;\n}(); // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    var _a;\n\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nexport default index;","var camel2hyphen = require('string-convert/camel2hyphen');\n\nvar isDimension = function isDimension(feature) {\n  var re = /[height|width]$/;\n  return re.test(feature);\n};\n\nvar obj2mq = function obj2mq(obj) {\n  var mq = '';\n  var features = Object.keys(obj);\n  features.forEach(function (feature, index) {\n    var value = obj[feature];\n    feature = camel2hyphen(feature); // Add px to dimension features\n\n    if (isDimension(feature) && typeof value === 'number') {\n      value = value + 'px';\n    }\n\n    if (value === true) {\n      mq += feature;\n    } else if (value === false) {\n      mq += 'not ' + feature;\n    } else {\n      mq += '(' + feature + ': ' + value + ')';\n    }\n\n    if (index < features.length - 1) {\n      mq += ' and ';\n    }\n  });\n  return mq;\n};\n\nvar json2mq = function json2mq(query) {\n  var mq = '';\n\n  if (typeof query === 'string') {\n    return query;\n  } // Handling array of media queries\n\n\n  if (query instanceof Array) {\n    query.forEach(function (q, index) {\n      mq += obj2mq(q);\n\n      if (index < query.length - 1) {\n        mq += ', ';\n      }\n    });\n    return mq;\n  } // Handling single media query\n\n\n  return obj2mq(query);\n};\n\nmodule.exports = json2mq;","var camel2hyphen = function camel2hyphen(str) {\n  return str.replace(/[A-Z]/g, function (match) {\n    return '-' + match.toLowerCase();\n  }).toLowerCase();\n};\n\nmodule.exports = camel2hyphen;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar defaultProps = {\n  accessibility: true,\n  adaptiveHeight: false,\n  afterChange: null,\n  appendDots: function appendDots(dots) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"ul\", {\n      style: {\n        display: \"block\"\n      }\n    }, dots);\n  },\n  arrows: true,\n  autoplay: false,\n  autoplaySpeed: 3000,\n  beforeChange: null,\n  centerMode: false,\n  centerPadding: \"50px\",\n  className: \"\",\n  cssEase: \"ease\",\n  customPaging: function customPaging(i) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"button\", null, i + 1);\n  },\n  dots: false,\n  dotsClass: \"slick-dots\",\n  draggable: true,\n  easing: \"linear\",\n  edgeFriction: 0.35,\n  fade: false,\n  focusOnSelect: false,\n  infinite: true,\n  initialSlide: 0,\n  lazyLoad: null,\n  nextArrow: null,\n  onEdge: null,\n  onInit: null,\n  onLazyLoadError: null,\n  onReInit: null,\n  pauseOnDotsHover: false,\n  pauseOnFocus: false,\n  pauseOnHover: true,\n  prevArrow: null,\n  responsive: null,\n  rows: 1,\n  rtl: false,\n  slide: \"div\",\n  slidesPerRow: 1,\n  slidesToScroll: 1,\n  slidesToShow: 1,\n  speed: 500,\n  swipe: true,\n  swipeEvent: null,\n  swipeToSlide: false,\n  touchMove: true,\n  touchThreshold: 5,\n  useCSS: true,\n  useTransform: true,\n  variableWidth: false,\n  vertical: false,\n  waitForAnimate: true\n};\nvar _default = defaultProps;\nexports[\"default\"] = _default;","var MediaQueryDispatch = require('./MediaQueryDispatch');\n\nmodule.exports = new MediaQueryDispatch();","var MediaQuery = require('./MediaQuery');\n\nvar Util = require('./Util');\n\nvar each = Util.each;\nvar isFunction = Util.isFunction;\nvar isArray = Util.isArray;\n/**\n * Allows for registration of query handlers.\n * Manages the query handler's state and is responsible for wiring up browser events\n *\n * @constructor\n */\n\nfunction MediaQueryDispatch() {\n  if (!window.matchMedia) {\n    throw new Error('matchMedia not present, legacy browsers require a polyfill');\n  }\n\n  this.queries = {};\n  this.browserIsIncapable = !window.matchMedia('only all').matches;\n}\n\nMediaQueryDispatch.prototype = {\n  constructor: MediaQueryDispatch,\n\n  /**\n   * Registers a handler for the given media query\n   *\n   * @param {string} q the media query\n   * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers\n   * @param {function} options.match fired when query matched\n   * @param {function} [options.unmatch] fired when a query is no longer matched\n   * @param {function} [options.setup] fired when handler first triggered\n   * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched\n   * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers\n   */\n  register: function register(q, options, shouldDegrade) {\n    var queries = this.queries,\n        isUnconditional = shouldDegrade && this.browserIsIncapable;\n\n    if (!queries[q]) {\n      queries[q] = new MediaQuery(q, isUnconditional);\n    } //normalise to object in an array\n\n\n    if (isFunction(options)) {\n      options = {\n        match: options\n      };\n    }\n\n    if (!isArray(options)) {\n      options = [options];\n    }\n\n    each(options, function (handler) {\n      if (isFunction(handler)) {\n        handler = {\n          match: handler\n        };\n      }\n\n      queries[q].addHandler(handler);\n    });\n    return this;\n  },\n\n  /**\n   * unregisters a query and all it's handlers, or a specific handler for a query\n   *\n   * @param {string} q the media query to target\n   * @param {object || function} [handler] specific handler to unregister\n   */\n  unregister: function unregister(q, handler) {\n    var query = this.queries[q];\n\n    if (query) {\n      if (handler) {\n        query.removeHandler(handler);\n      } else {\n        query.clear();\n        delete this.queries[q];\n      }\n    }\n\n    return this;\n  }\n};\nmodule.exports = MediaQueryDispatch;","var QueryHandler = require('./QueryHandler');\n\nvar each = require('./Util').each;\n/**\n * Represents a single media query, manages it's state and registered handlers for this query\n *\n * @constructor\n * @param {string} query the media query string\n * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design\n */\n\n\nfunction MediaQuery(query, isUnconditional) {\n  this.query = query;\n  this.isUnconditional = isUnconditional;\n  this.handlers = [];\n  this.mql = window.matchMedia(query);\n  var self = this;\n\n  this.listener = function (mql) {\n    // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly\n    self.mql = mql.currentTarget || mql;\n    self.assess();\n  };\n\n  this.mql.addListener(this.listener);\n}\n\nMediaQuery.prototype = {\n  constuctor: MediaQuery,\n\n  /**\n   * add a handler for this query, triggering if already active\n   *\n   * @param {object} handler\n   * @param {function} handler.match callback for when query is activated\n   * @param {function} [handler.unmatch] callback for when query is deactivated\n   * @param {function} [handler.setup] callback for immediate execution when a query handler is registered\n   * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?\n   */\n  addHandler: function addHandler(handler) {\n    var qh = new QueryHandler(handler);\n    this.handlers.push(qh);\n    this.matches() && qh.on();\n  },\n\n  /**\n   * removes the given handler from the collection, and calls it's destroy methods\n   *\n   * @param {object || function} handler the handler to remove\n   */\n  removeHandler: function removeHandler(handler) {\n    var handlers = this.handlers;\n    each(handlers, function (h, i) {\n      if (h.equals(handler)) {\n        h.destroy();\n        return !handlers.splice(i, 1); //remove from array and exit each early\n      }\n    });\n  },\n\n  /**\n   * Determine whether the media query should be considered a match\n   *\n   * @return {Boolean} true if media query can be considered a match, false otherwise\n   */\n  matches: function matches() {\n    return this.mql.matches || this.isUnconditional;\n  },\n\n  /**\n   * Clears all handlers and unbinds events\n   */\n  clear: function clear() {\n    each(this.handlers, function (handler) {\n      handler.destroy();\n    });\n    this.mql.removeListener(this.listener);\n    this.handlers.length = 0; //clear array\n  },\n\n  /*\n      * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match\n      */\n  assess: function assess() {\n    var action = this.matches() ? 'on' : 'off';\n    each(this.handlers, function (handler) {\n      handler[action]();\n    });\n  }\n};\nmodule.exports = MediaQuery;","/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */\nfunction QueryHandler(options) {\n  this.options = options;\n  !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n  constructor: QueryHandler,\n\n  /**\n   * coordinates setup of the handler\n   *\n   * @function\n   */\n  setup: function setup() {\n    if (this.options.setup) {\n      this.options.setup();\n    }\n\n    this.initialised = true;\n  },\n\n  /**\n   * coordinates setup and triggering of the handler\n   *\n   * @function\n   */\n  on: function on() {\n    !this.initialised && this.setup();\n    this.options.match && this.options.match();\n  },\n\n  /**\n   * coordinates the unmatch event for the handler\n   *\n   * @function\n   */\n  off: function off() {\n    this.options.unmatch && this.options.unmatch();\n  },\n\n  /**\n   * called when a handler is to be destroyed.\n   * delegates to the destroy or unmatch callbacks, depending on availability.\n   *\n   * @function\n   */\n  destroy: function destroy() {\n    this.options.destroy ? this.options.destroy() : this.off();\n  },\n\n  /**\n   * determines equality by reference.\n   * if object is supplied compare options, if function, compare match callback\n   *\n   * @function\n   * @param {object || function} [target] the target for comparison\n   */\n  equals: function equals(target) {\n    return this.options === target || this.options.match === target;\n  }\n};\nmodule.exports = QueryHandler;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('lottie-web'), require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'lottie-web', 'react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global[\"lottie-react\"] = {}, global.Lottie, global.React));\n})(this, function (exports, lottie, React) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  var lottie__default = /*#__PURE__*/_interopDefaultLegacy(lottie);\n\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n\n    return target;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n\n    var _s, _e;\n\n    try {\n      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var _excluded$1 = [\"animationData\", \"loop\", \"autoplay\", \"initialSegment\", \"onComplete\", \"onLoopComplete\", \"onEnterFrame\", \"onSegmentStart\", \"onConfigReady\", \"onDataReady\", \"onDataFailed\", \"onLoadedImages\", \"onDOMLoaded\", \"onDestroy\", \"lottieRef\", \"renderer\", \"name\", \"assetsPath\", \"rendererSettings\"];\n\n  var useLottie = function useLottie(props, style) {\n    var animationData = props.animationData,\n        loop = props.loop,\n        autoplay = props.autoplay,\n        initialSegment = props.initialSegment,\n        onComplete = props.onComplete,\n        onLoopComplete = props.onLoopComplete,\n        onEnterFrame = props.onEnterFrame,\n        onSegmentStart = props.onSegmentStart,\n        onConfigReady = props.onConfigReady,\n        onDataReady = props.onDataReady,\n        onDataFailed = props.onDataFailed,\n        onLoadedImages = props.onLoadedImages,\n        onDOMLoaded = props.onDOMLoaded,\n        onDestroy = props.onDestroy;\n    props.lottieRef;\n    props.renderer;\n    props.name;\n    props.assetsPath;\n    props.rendererSettings;\n\n    var rest = _objectWithoutProperties(props, _excluded$1);\n\n    var _useState = React.useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        animationLoaded = _useState2[0],\n        setAnimationLoaded = _useState2[1];\n\n    var animationInstanceRef = React.useRef();\n    var animationContainer = React.useRef(null);\n    /*\n          ======================================\n              INTERACTION METHODS\n          ======================================\n       */\n\n    /**\n     * Play\n     */\n\n    var play = function play() {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\n    };\n    /**\n     * Stop\n     */\n\n\n    var stop = function stop() {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\n    };\n    /**\n     * Pause\n     */\n\n\n    var pause = function pause() {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n    };\n    /**\n     * Set animation speed\n     * @param speed\n     */\n\n\n    var setSpeed = function setSpeed(speed) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\n    };\n    /**\n     * Got to frame and play\n     * @param value\n     * @param isFrame\n     */\n\n\n    var goToAndPlay = function goToAndPlay(value, isFrame) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\n    };\n    /**\n     * Got to frame and stop\n     * @param value\n     * @param isFrame\n     */\n\n\n    var goToAndStop = function goToAndStop(value, isFrame) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\n    };\n    /**\n     * Set animation direction\n     * @param direction\n     */\n\n\n    var setDirection = function setDirection(direction) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\n    };\n    /**\n     * Play animation segments\n     * @param segments\n     * @param forceFlag\n     */\n\n\n    var playSegments = function playSegments(segments, forceFlag) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\n    };\n    /**\n     * Set sub frames\n     * @param useSubFrames\n     */\n\n\n    var setSubframe = function setSubframe(useSubFrames) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\n    };\n    /**\n     * Get animation duration\n     * @param inFrames\n     */\n\n\n    var getDuration = function getDuration(inFrames) {\n      var _a;\n\n      return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames);\n    };\n    /**\n     * Destroy animation\n     */\n\n\n    var destroy = function destroy() {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy(); // Removing the reference to the animation so separate cleanups are skipped.\n      // Without it the internal `lottie-react` instance throws exceptions as it already cleared itself on destroy.\n\n      animationInstanceRef.current = undefined;\n    };\n    /*\n          ======================================\n              LOTTIE\n          ======================================\n       */\n\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forcedConfigs\n     */\n\n\n    var loadAnimation = function loadAnimation() {\n      var forcedConfigs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _a; // Return if the container ref is null\n\n\n      if (!animationContainer.current) {\n        return;\n      } // Destroy any previous instance\n\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy(); // Build the animation configuration\n\n      var config = _objectSpread2(_objectSpread2(_objectSpread2({}, props), forcedConfigs), {}, {\n        container: animationContainer.current\n      }); // Save the animation instance\n\n\n      animationInstanceRef.current = lottie__default[\"default\"].loadAnimation(config);\n      setAnimationLoaded(!!animationInstanceRef.current); // Return a function that will clean up\n\n      return function () {\n        var _a;\n\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        animationInstanceRef.current = undefined;\n      };\n    };\n    /**\n     * (Re)Initialize when animation data changed\n     */\n\n\n    React.useEffect(function () {\n      var onUnmount = loadAnimation(); // Clean up on unmount\n\n      return function () {\n        return onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();\n      }; // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animationData, loop]); // Update the autoplay state\n\n    React.useEffect(function () {\n      if (!animationInstanceRef.current) {\n        return;\n      }\n\n      animationInstanceRef.current.autoplay = !!autoplay;\n    }, [autoplay]); // Update the initial segment state\n\n    React.useEffect(function () {\n      if (!animationInstanceRef.current) {\n        return;\n      } // When null should reset to default animation length\n\n\n      if (!initialSegment) {\n        animationInstanceRef.current.resetSegments(true);\n        return;\n      } // If it's not a valid segment, do nothing\n\n\n      if (!Array.isArray(initialSegment) || !initialSegment.length) {\n        return;\n      } // If the current position it's not in the new segment\n      // set the current position to start\n\n\n      if (animationInstanceRef.current.currentRawFrame < initialSegment[0] || animationInstanceRef.current.currentRawFrame > initialSegment[1]) {\n        animationInstanceRef.current.currentRawFrame = initialSegment[0];\n      } // Update the segment\n\n\n      animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);\n    }, [initialSegment]);\n    /*\n          ======================================\n              EVENTS\n          ======================================\n       */\n\n    /**\n     * Reinitialize listener on change\n     */\n\n    React.useEffect(function () {\n      var partialListeners = [{\n        name: \"complete\",\n        handler: onComplete\n      }, {\n        name: \"loopComplete\",\n        handler: onLoopComplete\n      }, {\n        name: \"enterFrame\",\n        handler: onEnterFrame\n      }, {\n        name: \"segmentStart\",\n        handler: onSegmentStart\n      }, {\n        name: \"config_ready\",\n        handler: onConfigReady\n      }, {\n        name: \"data_ready\",\n        handler: onDataReady\n      }, {\n        name: \"data_failed\",\n        handler: onDataFailed\n      }, {\n        name: \"loaded_images\",\n        handler: onLoadedImages\n      }, {\n        name: \"DOMLoaded\",\n        handler: onDOMLoaded\n      }, {\n        name: \"destroy\",\n        handler: onDestroy\n      }];\n      var listeners = partialListeners.filter(function (listener) {\n        return listener.handler != null;\n      });\n\n      if (!listeners.length) {\n        return;\n      }\n\n      var deregisterList = listeners.map(\n      /**\n       * Handle the process of adding an event listener\n       * @param {Listener} listener\n       * @return {Function} Function that deregister the listener\n       */\n      function (listener) {\n        var _a;\n\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler); // Return a function to deregister this listener\n\n        return function () {\n          var _a;\n\n          (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\n        };\n      }); // Deregister listeners on unmount\n\n      return function () {\n        deregisterList.forEach(function (deregister) {\n          return deregister();\n        });\n      };\n    }, [onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy]);\n    /**\n     * Build the animation view\n     */\n\n    var View = /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _objectSpread2({\n      style: style,\n      ref: animationContainer\n    }, rest));\n    return {\n      View: View,\n      play: play,\n      stop: stop,\n      pause: pause,\n      setSpeed: setSpeed,\n      goToAndStop: goToAndStop,\n      goToAndPlay: goToAndPlay,\n      setDirection: setDirection,\n      playSegments: playSegments,\n      setSubframe: setSubframe,\n      getDuration: getDuration,\n      destroy: destroy,\n      animationContainerRef: animationContainer,\n      animationLoaded: animationLoaded,\n      animationItem: animationInstanceRef.current\n    };\n  };\n\n  function getContainerVisibility(container) {\n    var _container$getBoundin = container.getBoundingClientRect(),\n        top = _container$getBoundin.top,\n        height = _container$getBoundin.height;\n\n    var current = window.innerHeight - top;\n    var max = window.innerHeight + height;\n    return current / max;\n  }\n\n  function getContainerCursorPosition(container, cursorX, cursorY) {\n    var _container$getBoundin2 = container.getBoundingClientRect(),\n        top = _container$getBoundin2.top,\n        left = _container$getBoundin2.left,\n        width = _container$getBoundin2.width,\n        height = _container$getBoundin2.height;\n\n    var x = (cursorX - left) / width;\n    var y = (cursorY - top) / height;\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  var useInitInteractivity = function useInitInteractivity(_ref) {\n    var wrapperRef = _ref.wrapperRef,\n        animationItem = _ref.animationItem,\n        mode = _ref.mode,\n        actions = _ref.actions;\n    React.useEffect(function () {\n      var wrapper = wrapperRef.current;\n\n      if (!wrapper || !animationItem || !actions.length) {\n        return;\n      }\n\n      animationItem.stop();\n\n      var scrollModeHandler = function scrollModeHandler() {\n        var assignedSegment = null;\n\n        var scrollHandler = function scrollHandler() {\n          var currentPercent = getContainerVisibility(wrapper); // Find the first action that satisfies the current position conditions\n\n          var action = actions.find(function (_ref2) {\n            var visibility = _ref2.visibility;\n            return visibility && currentPercent >= visibility[0] && currentPercent <= visibility[1];\n          }); // Skip if no matching action was found!\n\n          if (!action) {\n            return;\n          }\n\n          if (action.type === \"seek\" && action.visibility && action.frames.length === 2) {\n            // Seek: Go to a frame based on player scroll position action\n            var frameToGo = action.frames[0] + Math.ceil((currentPercent - action.visibility[0]) / (action.visibility[1] - action.visibility[0]) * action.frames[1]); //! goToAndStop must be relative to the start of the current segment\n\n            animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\n          }\n\n          if (action.type === \"loop\") {\n            // Loop: Loop a given frames\n            if (assignedSegment === null) {\n              // if not playing any segments currently. play those segments and save to state\n              animationItem.playSegments(action.frames, true);\n              assignedSegment = action.frames;\n            } else {\n              // if playing any segments currently.\n              //check if segments in state are equal to the frames selected by action\n              if (assignedSegment !== action.frames) {\n                // if they are not equal. new segments are to be loaded\n                animationItem.playSegments(action.frames, true);\n                assignedSegment = action.frames;\n              } else if (animationItem.isPaused) {\n                // if they are equal the play method must be called only if lottie is paused\n                animationItem.playSegments(action.frames, true);\n                assignedSegment = action.frames;\n              }\n            }\n          }\n\n          if (action.type === \"play\" && animationItem.isPaused) {\n            // Play: Reset segments and continue playing full animation from current position\n            animationItem.resetSegments(true);\n            animationItem.play();\n          }\n\n          if (action.type === \"stop\") {\n            // Stop: Stop playback\n            animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\n          }\n        };\n\n        document.addEventListener(\"scroll\", scrollHandler);\n        return function () {\n          document.removeEventListener(\"scroll\", scrollHandler);\n        };\n      };\n\n      var cursorModeHandler = function cursorModeHandler() {\n        var handleCursor = function handleCursor(_x, _y) {\n          var x = _x;\n          var y = _y; // Resolve cursor position if cursor is inside container\n\n          if (x !== -1 && y !== -1) {\n            // Get container cursor position\n            var pos = getContainerCursorPosition(wrapper, x, y); // Use the resolved position\n\n            x = pos.x;\n            y = pos.y;\n          } // Find the first action that satisfies the current position conditions\n\n\n          var action = actions.find(function (_ref3) {\n            var position = _ref3.position;\n\n            if (position && Array.isArray(position.x) && Array.isArray(position.y)) {\n              return x >= position.x[0] && x <= position.x[1] && y >= position.y[0] && y <= position.y[1];\n            }\n\n            if (position && !Number.isNaN(position.x) && !Number.isNaN(position.y)) {\n              return x === position.x && y === position.y;\n            }\n\n            return false;\n          }); // Skip if no matching action was found!\n\n          if (!action) {\n            return;\n          } // Process action types:\n\n\n          if (action.type === \"seek\" && action.position && Array.isArray(action.position.x) && Array.isArray(action.position.y) && action.frames.length === 2) {\n            // Seek: Go to a frame based on player scroll position action\n            var xPercent = (x - action.position.x[0]) / (action.position.x[1] - action.position.x[0]);\n            var yPercent = (y - action.position.y[0]) / (action.position.y[1] - action.position.y[0]);\n            animationItem.playSegments(action.frames, true);\n            animationItem.goToAndStop(Math.ceil((xPercent + yPercent) / 2 * (action.frames[1] - action.frames[0])), true);\n          }\n\n          if (action.type === \"loop\") {\n            animationItem.playSegments(action.frames, true);\n          }\n\n          if (action.type === \"play\") {\n            // Play: Reset segments and continue playing full animation from current position\n            if (animationItem.isPaused) {\n              animationItem.resetSegments(false);\n            }\n\n            animationItem.playSegments(action.frames);\n          }\n\n          if (action.type === \"stop\") {\n            animationItem.goToAndStop(action.frames[0], true);\n          }\n        };\n\n        var mouseMoveHandler = function mouseMoveHandler(ev) {\n          handleCursor(ev.clientX, ev.clientY);\n        };\n\n        var mouseOutHandler = function mouseOutHandler() {\n          handleCursor(-1, -1);\n        };\n\n        wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\n        wrapper.addEventListener(\"mouseout\", mouseOutHandler);\n        return function () {\n          wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\n          wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\n        };\n      };\n\n      switch (mode) {\n        case \"scroll\":\n          return scrollModeHandler();\n\n        case \"cursor\":\n          return cursorModeHandler();\n      } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    }, [mode, animationItem]);\n  };\n\n  var useLottieInteractivity = function useLottieInteractivity(_ref4) {\n    var actions = _ref4.actions,\n        mode = _ref4.mode,\n        lottieObj = _ref4.lottieObj;\n    var animationItem = lottieObj.animationItem,\n        View = lottieObj.View,\n        animationContainerRef = lottieObj.animationContainerRef;\n    useInitInteractivity({\n      actions: actions,\n      animationItem: animationItem,\n      mode: mode,\n      wrapperRef: animationContainerRef\n    });\n    return View;\n  };\n\n  var _excluded = [\"style\", \"interactivity\"];\n\n  var Lottie = function Lottie(props) {\n    var _a, _b, _c;\n\n    var style = props.style,\n        interactivity = props.interactivity,\n        lottieProps = _objectWithoutProperties(props, _excluded);\n    /**\n     * Initialize the 'useLottie' hook\n     */\n\n\n    var _useLottie = useLottie(lottieProps, style),\n        View = _useLottie.View,\n        play = _useLottie.play,\n        stop = _useLottie.stop,\n        pause = _useLottie.pause,\n        setSpeed = _useLottie.setSpeed,\n        goToAndStop = _useLottie.goToAndStop,\n        goToAndPlay = _useLottie.goToAndPlay,\n        setDirection = _useLottie.setDirection,\n        playSegments = _useLottie.playSegments,\n        setSubframe = _useLottie.setSubframe,\n        getDuration = _useLottie.getDuration,\n        destroy = _useLottie.destroy,\n        animationContainerRef = _useLottie.animationContainerRef,\n        animationLoaded = _useLottie.animationLoaded,\n        animationItem = _useLottie.animationItem;\n    /**\n     * Make the hook variables/methods available through the provided 'lottieRef'\n     */\n\n\n    React.useEffect(function () {\n      if (props.lottieRef) {\n        props.lottieRef.current = {\n          play: play,\n          stop: stop,\n          pause: pause,\n          setSpeed: setSpeed,\n          goToAndPlay: goToAndPlay,\n          goToAndStop: goToAndStop,\n          setDirection: setDirection,\n          playSegments: playSegments,\n          setSubframe: setSubframe,\n          getDuration: getDuration,\n          destroy: destroy,\n          animationContainerRef: animationContainerRef,\n          animationLoaded: animationLoaded,\n          animationItem: animationItem\n        };\n      } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\n    return useLottieInteractivity({\n      lottieObj: {\n        View: View,\n        play: play,\n        stop: stop,\n        pause: pause,\n        setSpeed: setSpeed,\n        goToAndStop: goToAndStop,\n        goToAndPlay: goToAndPlay,\n        setDirection: setDirection,\n        playSegments: playSegments,\n        setSubframe: setSubframe,\n        getDuration: getDuration,\n        destroy: destroy,\n        animationContainerRef: animationContainerRef,\n        animationLoaded: animationLoaded,\n        animationItem: animationItem\n      },\n      actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],\n      mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : \"scroll\"\n    });\n  };\n\n  Object.defineProperty(exports, 'LottiePlayer', {\n    enumerable: true,\n    get: function get() {\n      return lottie__default[\"default\"];\n    }\n  });\n  exports[\"default\"] = Lottie;\n  exports.useLottie = useLottie;\n  exports.useLottieInteractivity = useLottieInteractivity;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","typeof navigator !== \"undefined\" && function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.lottie = factory());\n}(this, function () {\n  'use strict';\n\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var locationHref = '';\n  var _useWebWorker = false;\n  var initialDefaultFrame = -999999;\n\n  var setWebWorker = function setWebWorker(flag) {\n    _useWebWorker = !!flag;\n  };\n\n  var getWebWorker = function getWebWorker() {\n    return _useWebWorker;\n  };\n\n  var setLocationHref = function setLocationHref(value) {\n    locationHref = value;\n  };\n\n  var getLocationHref = function getLocationHref() {\n    return locationHref;\n  };\n\n  function createTag(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElement(type);\n  }\n\n  function extendPrototype(sources, destination) {\n    var i;\n    var len = sources.length;\n    var sourcePrototype;\n\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype;\n\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];\n      }\n    }\n  }\n\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop);\n  }\n\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n\n    ProxyFunction.prototype = prototype;\n    return ProxyFunction;\n  } // import Howl from '../../3rd_party/howler';\n\n\n  var audioControllerFactory = function () {\n    function AudioController(audioFactory) {\n      this.audios = [];\n      this.audioFactory = audioFactory;\n      this._volume = 1;\n      this._isMuted = false;\n    }\n\n    AudioController.prototype = {\n      addAudio: function addAudio(audio) {\n        this.audios.push(audio);\n      },\n      pause: function pause() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause();\n        }\n      },\n      resume: function resume() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume();\n        }\n      },\n      setRate: function setRate(rateValue) {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue);\n        }\n      },\n      createAudio: function createAudio(assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath);\n        }\n\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath]\n          });\n        }\n\n        return {\n          isPlaying: false,\n          play: function play() {\n            this.isPlaying = true;\n          },\n          seek: function seek() {\n            this.isPlaying = false;\n          },\n          playing: function playing() {},\n          rate: function rate() {},\n          setVolume: function setVolume() {}\n        };\n      },\n      setAudioFactory: function setAudioFactory(audioFactory) {\n        this.audioFactory = audioFactory;\n      },\n      setVolume: function setVolume(value) {\n        this._volume = value;\n\n        this._updateVolume();\n      },\n      mute: function mute() {\n        this._isMuted = true;\n\n        this._updateVolume();\n      },\n      unmute: function unmute() {\n        this._isMuted = false;\n\n        this._updateVolume();\n      },\n      getVolume: function getVolume() {\n        return this._volume;\n      },\n      _updateVolume: function _updateVolume() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));\n        }\n      }\n    };\n    return function () {\n      return new AudioController();\n    };\n  }();\n\n  var createTypedArray = function () {\n    function createRegularArray(type, len) {\n      var i = 0;\n      var arr = [];\n      var value;\n\n      switch (type) {\n        case 'int16':\n        case 'uint8c':\n          value = 1;\n          break;\n\n        default:\n          value = 1.1;\n          break;\n      }\n\n      for (i = 0; i < len; i += 1) {\n        arr.push(value);\n      }\n\n      return arr;\n    }\n\n    function createTypedArrayFactory(type, len) {\n      if (type === 'float32') {\n        return new Float32Array(len);\n      }\n\n      if (type === 'int16') {\n        return new Int16Array(len);\n      }\n\n      if (type === 'uint8c') {\n        return new Uint8ClampedArray(len);\n      }\n\n      return createRegularArray(type, len);\n    }\n\n    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\n      return createTypedArrayFactory;\n    }\n\n    return createRegularArray;\n  }();\n\n  function createSizedArray(len) {\n    return Array.apply(null, {\n      length: len\n    });\n  }\n\n  function _typeof$6(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof$6 = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof$6 = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof$6(obj);\n  }\n\n  var subframeEnabled = true;\n  var expressionsPlugin = null;\n  var idPrefix$1 = '';\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var _shouldRoundValues = false;\n  var bmPow = Math.pow;\n  var bmSqrt = Math.sqrt;\n  var bmFloor = Math.floor;\n  var bmMax = Math.max;\n  var bmMin = Math.min;\n  var BMMath = {};\n\n  (function () {\n    var propertyNames = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'atan2', 'ceil', 'cbrt', 'expm1', 'clz32', 'cos', 'cosh', 'exp', 'floor', 'fround', 'hypot', 'imul', 'log', 'log1p', 'log2', 'log10', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc', 'E', 'LN10', 'LN2', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2'];\n    var i;\n    var len = propertyNames.length;\n\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n\n  function ProjectInterface$1() {\n    return {};\n  }\n\n  BMMath.random = Math.random;\n\n  BMMath.abs = function (val) {\n    var tOfVal = _typeof$6(val);\n\n    if (tOfVal === 'object' && val.length) {\n      var absArr = createSizedArray(val.length);\n      var i;\n      var len = val.length;\n\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i]);\n      }\n\n      return absArr;\n    }\n\n    return Math.abs(val);\n  };\n\n  var defaultCurveSegments = 150;\n  var degToRads = Math.PI / 180;\n  var roundCorner = 0.5519;\n\n  function roundValues(flag) {\n    _shouldRoundValues = !!flag;\n  }\n\n  function bmRnd(value) {\n    if (_shouldRoundValues) {\n      return Math.round(value);\n    }\n\n    return value;\n  }\n\n  function styleDiv(element) {\n    element.style.position = 'absolute';\n    element.style.top = 0;\n    element.style.left = 0;\n    element.style.display = 'block';\n    element.style.transformOrigin = '0 0';\n    element.style.webkitTransformOrigin = '0 0';\n    element.style.backfaceVisibility = 'visible';\n    element.style.webkitBackfaceVisibility = 'visible';\n    element.style.transformStyle = 'preserve-3d';\n    element.style.webkitTransformStyle = 'preserve-3d';\n    element.style.mozTransformStyle = 'preserve-3d';\n  }\n\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type;\n    this.currentTime = currentTime;\n    this.totalTime = totalTime;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type;\n    this.currentLoop = currentLoop;\n    this.totalLoops = totalLoops;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type;\n    this.firstFrame = firstFrame;\n    this.totalFrames = totalFrames;\n  }\n\n  function BMDestroyEvent(type, target) {\n    this.type = type;\n    this.target = target;\n  }\n\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = 'renderFrameError';\n    this.nativeError = nativeError;\n    this.currentTime = currentTime;\n  }\n\n  function BMConfigErrorEvent(nativeError) {\n    this.type = 'configError';\n    this.nativeError = nativeError;\n  }\n\n  function BMAnimationConfigErrorEvent(type, nativeError) {\n    this.type = type;\n    this.nativeError = nativeError;\n  }\n\n  var createElementID = function () {\n    var _count = 0;\n    return function createID() {\n      _count += 1;\n      return idPrefix$1 + '__lottie_element_' + _count;\n    };\n  }();\n\n  function HSVtoRGB(h, s, v) {\n    var r;\n    var g;\n    var b;\n    var i;\n    var f;\n    var p;\n    var q;\n    var t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n\n      default:\n        break;\n    }\n\n    return [r, g, b];\n  }\n\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var d = max - min;\n    var h;\n    var s = max === 0 ? 0 : d / max;\n    var v = max / 255;\n\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n\n      default:\n        break;\n    }\n\n    return [h, s, v];\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  var rgbToHex = function () {\n    var colorMap = [];\n    var i;\n    var hex;\n\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length === 1 ? '0' + hex : hex;\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n\n      if (g < 0) {\n        g = 0;\n      }\n\n      if (b < 0) {\n        b = 0;\n      }\n\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  }();\n\n  var setSubframeEnabled = function setSubframeEnabled(flag) {\n    subframeEnabled = !!flag;\n  };\n\n  var getSubframeEnabled = function getSubframeEnabled() {\n    return subframeEnabled;\n  };\n\n  var setExpressionsPlugin = function setExpressionsPlugin(value) {\n    expressionsPlugin = value;\n  };\n\n  var getExpressionsPlugin = function getExpressionsPlugin() {\n    return expressionsPlugin;\n  };\n\n  var setDefaultCurveSegments = function setDefaultCurveSegments(value) {\n    defaultCurveSegments = value;\n  };\n\n  var getDefaultCurveSegments = function getDefaultCurveSegments() {\n    return defaultCurveSegments;\n  };\n\n  var setIdPrefix = function setIdPrefix(value) {\n    idPrefix$1 = value;\n  };\n\n  var getIdPrefix = function getIdPrefix() {\n    return idPrefix$1;\n  };\n\n  function createNS(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElementNS(svgNS, type);\n  }\n\n  function _typeof$5(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof$5 = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof$5 = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof$5(obj);\n  }\n\n  var dataManager = function () {\n    var _counterId = 1;\n    var processes = [];\n    var workerFn;\n    var workerInstance;\n    var workerProxy = {\n      onmessage: function onmessage() {},\n      postMessage: function postMessage(path) {\n        workerFn({\n          data: path\n        });\n      }\n    };\n    var _workerSelf = {\n      postMessage: function postMessage(data) {\n        workerProxy.onmessage({\n          data: data\n        });\n      }\n    };\n\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob(['var _workerSelf = self; self.onmessage = ', fn.toString()], {\n          type: 'text/javascript'\n        }); // var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });\n\n        var url = URL.createObjectURL(blob);\n        return new Worker(url);\n      }\n\n      workerFn = fn;\n      return workerProxy;\n    }\n\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData;\n              var i;\n              var len = layers.length;\n              var j;\n              var jLen;\n              var k;\n              var kLen;\n\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i];\n\n                if ('ks' in layerData && !layerData.completed) {\n                  layerData.completed = true;\n\n                  if (layerData.tt) {\n                    layers[i - 1].td = layerData.tt;\n                  }\n\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                          }\n\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                          }\n                        }\n                      }\n                    }\n                  }\n\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps);\n                    completeLayers(layerData.layers, comps);\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes);\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData);\n                  }\n                }\n              }\n            }\n\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0;\n                var len = chars.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    // var compData = findComp(chars[i].data.refId, assets);\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets); // chars[i].data.ip = 0;\n                    // chars[i].data.op = 99999;\n                    // chars[i].data.st = 0;\n                    // chars[i].data.sr = 1;\n                    // chars[i].w = compData.w;\n                    // chars[i].data.ks = {\n                    //   a: { k: [0, 0, 0], a: 0 },\n                    //   p: { k: [0, -compData.h, 0], a: 0 },\n                    //   r: { k: 0, a: 0 },\n                    //   s: { k: [100, 100], a: 0 },\n                    //   o: { k: 100, a: 0 },\n                    // };\n\n                    completeLayers(chars[i].data.layers, assets);\n                  }\n                }\n              }\n            }\n\n            function findComp(id, comps) {\n              var i = 0;\n              var len = comps.length;\n\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i];\n                }\n\n                i += 1;\n              }\n\n              return null;\n            }\n\n            function findCompLayers(id, comps) {\n              var comp = findComp(id, comps);\n\n              if (comp) {\n                if (!comp.layers.__used) {\n                  comp.layers.__used = true;\n                  return comp.layers;\n                }\n\n                return JSON.parse(JSON.stringify(comp.layers));\n              }\n\n              return null;\n            }\n\n            function completeShapes(arr) {\n              var i;\n              var len = arr.length;\n              var j;\n              var jLen;\n\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === 'sh') {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\n                  } else {\n                    jLen = arr[i].ks.k.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n                      }\n\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === 'gr') {\n                  completeShapes(arr[i].it);\n                }\n              }\n            }\n\n            function convertPathsToAbsoluteValues(path) {\n              var i;\n              var len = path.i.length;\n\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0];\n                path.i[i][1] += path.v[i][1];\n                path.o[i][0] += path.v[i][0];\n                path.o[i][1] += path.v[i][1];\n              }\n            }\n\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];\n\n              if (minimum[0] > animVersion[0]) {\n                return true;\n              }\n\n              if (animVersion[0] > minimum[0]) {\n                return false;\n              }\n\n              if (minimum[1] > animVersion[1]) {\n                return true;\n              }\n\n              if (animVersion[1] > minimum[1]) {\n                return false;\n              }\n\n              if (minimum[2] > animVersion[2]) {\n                return true;\n              }\n\n              if (animVersion[2] > minimum[2]) {\n                return false;\n              }\n\n              return null;\n            }\n\n            var checkText = function () {\n              var minimumVersion = [4, 4, 14];\n\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d;\n                textLayer.t.d = {\n                  k: [{\n                    s: documentData,\n                    t: 0\n                  }]\n                };\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkChars = function () {\n              var minimumVersion = [4, 7, 99];\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i;\n                  var len = animationData.chars.length;\n\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i];\n\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes);\n                      charData.data.ip = 0;\n                      charData.data.op = 99999;\n                      charData.data.st = 0;\n                      charData.data.sr = 1;\n                      charData.data.ks = {\n                        p: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        s: {\n                          k: [100, 100],\n                          a: 0\n                        },\n                        a: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        r: {\n                          k: 0,\n                          a: 0\n                        },\n                        o: {\n                          k: 100,\n                          a: 0\n                        }\n                      };\n\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: 'no'\n                        });\n                        charData.data.shapes[0].it.push({\n                          p: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          s: {\n                            k: [100, 100],\n                            a: 0\n                          },\n                          a: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          r: {\n                            k: 0,\n                            a: 0\n                          },\n                          o: {\n                            k: 100,\n                            a: 0\n                          },\n                          sk: {\n                            k: 0,\n                            a: 0\n                          },\n                          sa: {\n                            k: 0,\n                            a: 0\n                          },\n                          ty: 'tr'\n                        });\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkPathProperties = function () {\n              var minimumVersion = [5, 7, 15];\n\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p;\n\n                if (typeof pathData.a === 'number') {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a\n                  };\n                }\n\n                if (typeof pathData.p === 'number') {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p\n                  };\n                }\n\n                if (typeof pathData.r === 'number') {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r\n                  };\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkColors = function () {\n              var minimumVersion = [4, 1, 9];\n\n              function iterateShapes(shapes) {\n                var i;\n                var len = shapes.length;\n                var j;\n                var jLen;\n\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === 'gr') {\n                    iterateShapes(shapes[i].it);\n                  } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length;\n\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255;\n                          shapes[i].c.k[j].s[1] /= 255;\n                          shapes[i].c.k[j].s[2] /= 255;\n                          shapes[i].c.k[j].s[3] /= 255;\n                        }\n\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255;\n                          shapes[i].c.k[j].e[1] /= 255;\n                          shapes[i].c.k[j].e[2] /= 255;\n                          shapes[i].c.k[j].e[3] /= 255;\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255;\n                      shapes[i].c.k[1] /= 255;\n                      shapes[i].c.k[2] /= 255;\n                      shapes[i].c.k[3] /= 255;\n                    }\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkShapes = function () {\n              var minimumVersion = [4, 4, 18];\n\n              function completeClosingShapes(arr) {\n                var i;\n                var len = arr.length;\n                var j;\n                var jLen;\n\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === 'sh') {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed;\n                    } else {\n                      jLen = arr[i].ks.k.length;\n\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed;\n                        }\n\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed;\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === 'gr') {\n                    completeClosingShapes(arr[i].it);\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var layerData;\n                var i;\n                var len = layers.length;\n                var j;\n                var jLen;\n                var k;\n                var kLen;\n\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i];\n\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl;\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                          }\n\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                          }\n                        }\n                      }\n                    }\n                  }\n\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return;\n              }\n\n              checkColors(animationData);\n              checkText(animationData);\n              checkChars(animationData);\n              checkPathProperties(animationData);\n              checkShapes(animationData);\n              completeLayers(animationData.layers, animationData.assets);\n              completeChars(animationData.chars, animationData.assets);\n              animationData.__complete = true;\n            }\n\n            function completeText(data) {\n              if (data.t.a.length === 0 && !('m' in data.t.p)) {// data.singleShape = true;\n              }\n            }\n\n            var moduleOb = {};\n            moduleOb.completeData = completeData;\n            moduleOb.checkColors = checkColors;\n            moduleOb.checkChars = checkChars;\n            moduleOb.checkPathProperties = checkPathProperties;\n            moduleOb.checkShapes = checkShapes;\n            moduleOb.completeLayers = completeLayers;\n            return moduleOb;\n          }\n\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager();\n          }\n\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = function () {\n              function formatResponse(xhr) {\n                // using typeof doubles the time of execution of this method,\n                // so if available, it's better to use the header to validate the type\n                var contentTypeHeader = xhr.getResponseHeader('content-type');\n\n                if (contentTypeHeader && xhr.responseType === 'json' && contentTypeHeader.indexOf('json') !== -1) {\n                  return xhr.response;\n                }\n\n                if (xhr.response && _typeof$5(xhr.response) === 'object') {\n                  return xhr.response;\n                }\n\n                if (xhr.response && typeof xhr.response === 'string') {\n                  return JSON.parse(xhr.response);\n                }\n\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText);\n                }\n\n                return null;\n              }\n\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response;\n                var xhr = new XMLHttpRequest(); // set responseType after calling open or IE will break.\n\n                try {\n                  // This crashes on Android WebView prior to KitKat\n                  xhr.responseType = 'json';\n                } catch (err) {} // eslint-disable-line no-empty\n\n\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr);\n                      callback(response);\n                    } else {\n                      try {\n                        response = formatResponse(xhr);\n                        callback(response);\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err);\n                        }\n                      }\n                    }\n                  }\n                };\n\n                try {\n                  xhr.open('GET', path, true);\n                } catch (error) {\n                  xhr.open('GET', fullPath + '/' + path, true);\n                }\n\n                xhr.send();\n              }\n\n              return {\n                load: loadAsset\n              };\n            }();\n          }\n\n          if (e.data.type === 'loadAnimation') {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.dataManager.completeData(data);\n\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: 'success'\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: 'error'\n              });\n            });\n          } else if (e.data.type === 'complete') {\n            var animation = e.data.animation;\n\n            _workerSelf.dataManager.completeData(animation);\n\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: 'success'\n            });\n          } else if (e.data.type === 'loadData') {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: 'success'\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: 'error'\n              });\n            });\n          }\n        });\n\n        workerInstance.onmessage = function (event) {\n          var data = event.data;\n          var id = data.id;\n          var process = processes[id];\n          processes[id] = null;\n\n          if (data.status === 'success') {\n            process.onComplete(data.payload);\n          } else if (process.onError) {\n            process.onError();\n          }\n        };\n      }\n    }\n\n    function createProcess(onComplete, onError) {\n      _counterId += 1;\n      var id = 'processId_' + _counterId;\n      processes[id] = {\n        onComplete: onComplete,\n        onError: onError\n      };\n      return id;\n    }\n\n    function loadAnimation(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'loadAnimation',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n\n    function loadData(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'loadData',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'complete',\n        animation: anim,\n        id: processId\n      });\n    }\n\n    return {\n      loadAnimation: loadAnimation,\n      loadData: loadData,\n      completeAnimation: completeAnimation\n    };\n  }();\n\n  var ImagePreloader = function () {\n    var proxyImage = function () {\n      var canvas = createTag('canvas');\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = 'rgba(0,0,0,0)';\n      ctx.fillRect(0, 0, 1, 1);\n      return canvas;\n    }();\n\n    function imageLoaded() {\n      this.loadedAssets += 1;\n\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function footageLoaded() {\n      this.loadedFootagesCount += 1;\n\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = '';\n\n      if (assetData.e) {\n        path = assetData.p;\n      } else if (assetsPath) {\n        var imagePath = assetData.p;\n\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1];\n        }\n\n        path = assetsPath + imagePath;\n      } else {\n        path = originalPath;\n        path += assetData.u ? assetData.u : '';\n        path += assetData.p;\n      }\n\n      return path;\n    }\n\n    function testImageLoaded(img) {\n      var _count = 0;\n      var intervalId = setInterval(function () {\n        var box = img.getBBox();\n\n        if (box.width || _count > 500) {\n          this._imageLoaded();\n\n          clearInterval(intervalId);\n        }\n\n        _count += 1;\n      }.bind(this), 50);\n    }\n\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createNS('image');\n\n      if (isSafari) {\n        this.testImageLoaded(img);\n      } else {\n        img.addEventListener('load', this._imageLoaded, false);\n      }\n\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img);\n      } else {\n        this._elementHelper.appendChild(img);\n      }\n\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createTag('img');\n      img.crossOrigin = 'anonymous';\n      img.addEventListener('load', this._imageLoaded, false);\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.src = path;\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function createFootageData(data) {\n      var ob = {\n        assetData: data\n      };\n      var path = getAssetsPath(data, this.assetsPath, this.path);\n      dataManager.loadData(path, function (footageData) {\n        ob.img = footageData;\n\n        this._footageLoaded();\n      }.bind(this), function () {\n        ob.img = {};\n\n        this._footageLoaded();\n      }.bind(this));\n      return ob;\n    }\n\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb;\n      var i;\n      var len = assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === 'seq') {\n            this.totalImages += 1;\n            this.images.push(this._createImageData(assets[i]));\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1;\n            this.images.push(this.createFootageData(assets[i]));\n          }\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || '';\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || '';\n    }\n\n    function getAsset(assetData) {\n      var i = 0;\n      var len = this.images.length;\n\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img;\n        }\n\n        i += 1;\n      }\n\n      return null;\n    }\n\n    function destroy() {\n      this.imagesLoadedCb = null;\n      this.images.length = 0;\n    }\n\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets;\n    }\n\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount;\n    }\n\n    function setCacheType(type, elementHelper) {\n      if (type === 'svg') {\n        this._elementHelper = elementHelper;\n        this._createImageData = this.createImageData.bind(this);\n      } else {\n        this._createImageData = this.createImgData.bind(this);\n      }\n    }\n\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this);\n      this._footageLoaded = footageLoaded.bind(this);\n      this.testImageLoaded = testImageLoaded.bind(this);\n      this.createFootageData = createFootageData.bind(this);\n      this.assetsPath = '';\n      this.path = '';\n      this.totalImages = 0;\n      this.totalFootages = 0;\n      this.loadedAssets = 0;\n      this.loadedFootagesCount = 0;\n      this.imagesLoadedCb = null;\n      this.images = [];\n    }\n\n    ImagePreloaderFactory.prototype = {\n      loadAssets: loadAssets,\n      setAssetsPath: setAssetsPath,\n      setPath: setPath,\n      loadedImages: loadedImages,\n      loadedFootages: loadedFootages,\n      destroy: destroy,\n      getAsset: getAsset,\n      createImgData: createImgData,\n      createImageData: createImageData,\n      imageLoaded: imageLoaded,\n      footageLoaded: footageLoaded,\n      setCacheType: setCacheType\n    };\n    return ImagePreloaderFactory;\n  }();\n\n  function BaseEvent() {}\n\n  BaseEvent.prototype = {\n    triggerEvent: function triggerEvent(eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName];\n\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args);\n        }\n      }\n    },\n    addEventListener: function addEventListener(eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = [];\n      }\n\n      this._cbs[eventName].push(callback);\n\n      return function () {\n        this.removeEventListener(eventName, callback);\n      }.bind(this);\n    },\n    removeEventListener: function removeEventListener(eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null;\n      } else if (this._cbs[eventName]) {\n        var i = 0;\n        var len = this._cbs[eventName].length;\n\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1);\n\n            i -= 1;\n            len -= 1;\n          }\n\n          i += 1;\n        }\n\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null;\n        }\n      }\n    }\n  };\n\n  var markerParser = function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split('\\r\\n');\n      var keys = {};\n      var line;\n      var keysCount = 0;\n\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(':');\n\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim();\n          keysCount += 1;\n        }\n      }\n\n      if (keysCount === 0) {\n        throw new Error();\n      }\n\n      return keys;\n    }\n\n    return function (_markers) {\n      var markers = [];\n\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i];\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr\n        };\n\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm);\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm);\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm\n            };\n          }\n        }\n\n        markers.push(markerData);\n      }\n\n      return markers;\n    };\n  }();\n\n  var ProjectInterface = function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp);\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0;\n        var len = this.compositions.length;\n\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n\n            return this.compositions[i].compInterface;\n          }\n\n          i += 1;\n        }\n\n        return null;\n      }\n\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n\n  var renderers = {};\n\n  var registerRenderer = function registerRenderer(key, value) {\n    renderers[key] = value;\n  };\n\n  function getRenderer(key) {\n    return renderers[key];\n  }\n\n  function _typeof$4(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof$4 = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof$4 = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof$4(obj);\n  }\n\n  var AnimationItem = function AnimationItem() {\n    this._cbs = [];\n    this.name = '';\n    this.path = '';\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.firstFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.playCount = 0;\n    this.animationData = {};\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = createElementID();\n    this.assetsPath = '';\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.isSubframeEnabled = getSubframeEnabled();\n    this.segments = [];\n    this._idle = true;\n    this._completedLoop = false;\n    this.projectInterface = ProjectInterface();\n    this.imagePreloader = new ImagePreloader();\n    this.audioController = audioControllerFactory();\n    this.markers = [];\n    this.configAnimation = this.configAnimation.bind(this);\n    this.onSetupError = this.onSetupError.bind(this);\n    this.onSegmentComplete = this.onSegmentComplete.bind(this);\n    this.drawnFrameEvent = new BMEnterFrameEvent('drawnFrame', 0, 0, 0);\n  };\n\n  extendPrototype([BaseEvent], AnimationItem);\n\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n\n    var animType = 'svg';\n\n    if (params.animType) {\n      animType = params.animType;\n    } else if (params.renderer) {\n      animType = params.renderer;\n    }\n\n    var RendererClass = getRenderer(animType);\n    this.renderer = new RendererClass(this, params.rendererSettings);\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n\n    if (params.loop === '' || params.loop === null || params.loop === undefined || params.loop === true) {\n      this.loop = true;\n    } else if (params.loop === false) {\n      this.loop = false;\n    } else {\n      this.loop = parseInt(params.loop, 10);\n    }\n\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\n    this.name = params.name ? params.name : '';\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments') ? params.autoloadSegments : true;\n    this.assetsPath = params.assetsPath;\n    this.initialSegment = params.initialSegment;\n\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory);\n    }\n\n    if (params.animationData) {\n      this.setupAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.lastIndexOf('\\\\') !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);\n      }\n\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError);\n    }\n  };\n\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger('data_failed');\n  };\n\n  AnimationItem.prototype.setupAnimation = function (data) {\n    dataManager.completeAnimation(data, this.configAnimation);\n  };\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (_typeof$4(animationData) !== 'object') {\n        animationData = JSON.parse(animationData);\n      }\n    }\n\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-path').value : wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('bm-type').value : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-loop').value : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-loop').value : wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\n\n    if (loop === 'false') {\n      params.loop = false;\n    } else if (loop === 'true') {\n      params.loop = true;\n    } else if (loop !== '') {\n      params.loop = parseInt(loop, 10);\n    }\n\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-autoplay').value : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-autoplay').value : wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\n    params.autoplay = autoplay !== 'false';\n    params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-name').value : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value : '';\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-prerender').value : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-prerender').value : wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\n\n    if (prerender === 'false') {\n      params.prerender = false;\n    }\n\n    this.setParams(params);\n  };\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op;\n      this.totalFrames = Math.floor(data.op - this.animationData.ip);\n    }\n\n    var layers = this.animationData.layers;\n    var i;\n    var len = layers.length;\n    var newLayers = data.layers;\n    var j;\n    var jLen = newLayers.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n\n        i += 1;\n      }\n    }\n\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars);\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\n    }\n\n    if (data.assets) {\n      len = data.assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i]);\n      }\n    }\n\n    this.animationData.__complete = false;\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete);\n  };\n\n  AnimationItem.prototype.onSegmentComplete = function (data) {\n    this.animationData = data;\n    var expressionsPlugin = getExpressionsPlugin();\n\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this);\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready');\n      this.timeCompleted = this.totalFrames;\n      return;\n    }\n\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';\n    this.segmentPos += 1;\n    dataManager.loadData(segmentPath, this.includeLayers.bind(this), function () {\n      this.trigger('data_failed');\n    }.bind(this));\n  };\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments) {\n      this.timeCompleted = this.totalFrames;\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger('loaded_images');\n    this.checkLoaded();\n  };\n\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n  };\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return;\n    }\n\n    try {\n      this.animationData = animData;\n\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);\n        this.firstFrame = Math.round(this.initialSegment[0]);\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n        this.firstFrame = Math.round(this.animationData.ip);\n      }\n\n      this.renderer.configAnimation(animData);\n\n      if (!animData.assets) {\n        animData.assets = [];\n      }\n\n      this.assets = this.animationData.assets;\n      this.frameRate = this.animationData.fr;\n      this.frameMult = this.animationData.fr / 1000;\n      this.renderer.searchExtraCompositions(animData.assets);\n      this.markers = markerParser(animData.markers || []);\n      this.trigger('config_ready');\n      this.preloadImages();\n      this.loadSegments();\n      this.updaFrameModifier();\n      this.waitForFontsLoaded();\n\n      if (this.isPaused) {\n        this.audioController.pause();\n      }\n    } catch (error) {\n      this.triggerConfigError(error);\n    }\n  };\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return;\n    }\n\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded();\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20);\n    }\n  };\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas') && this.imagePreloader.loadedFootages()) {\n      this.isLoaded = true;\n      var expressionsPlugin = getExpressionsPlugin();\n\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this);\n      }\n\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger('DOMLoaded');\n      }.bind(this), 0);\n      this.gotoFrame();\n\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize();\n  };\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag;\n  };\n\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame; // eslint-disable-line no-bitwise\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n\n    this.trigger('enterFrame');\n    this.renderFrame();\n    this.trigger('drawnFrame');\n  };\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return;\n    }\n\n    try {\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n    } catch (error) {\n      this.triggerRenderFrameError(error);\n    }\n  };\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.isPaused = false;\n      this.trigger('_pause');\n      this.audioController.resume();\n\n      if (this._idle) {\n        this._idle = false;\n        this.trigger('_active');\n      }\n    }\n  };\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === false) {\n      this.isPaused = true;\n      this.trigger('_play');\n      this._idle = true;\n      this.trigger('_idle');\n      this.audioController.pause();\n    }\n  };\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.pause();\n    this.playCount = 0;\n    this._completedLoop = false;\n    this.setCurrentRawFrameValue(0);\n  };\n\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker;\n\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i];\n\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker;\n      }\n    }\n\n    return null;\n  };\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    var numValue = Number(value);\n\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n\n      if (marker) {\n        this.goToAndStop(marker.time, true);\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value);\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier);\n    }\n\n    this.pause();\n  };\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    var numValue = Number(value);\n\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true);\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true);\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name);\n    }\n\n    this.play();\n  };\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\n    var _isComplete = false; // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\n\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true;\n          nextValue = this.totalFrames - 1;\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1;\n\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames);\n          this._completedLoop = true;\n          this.trigger('loopComplete');\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue);\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          // eslint-disable-line no-plusplus\n          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);\n\n          if (!this._completedLoop) {\n            this._completedLoop = true;\n          } else {\n            this.trigger('loopComplete');\n          }\n        } else {\n          _isComplete = true;\n          nextValue = 0;\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue);\n    }\n\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue);\n      this.pause();\n      this.trigger('complete');\n    }\n  };\n\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0;\n\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n\n      this.totalFrames = arr[0] - arr[1];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n\n      this.totalFrames = arr[1] - arr[0];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(0.001 + offset);\n    }\n\n    this.trigger('segmentStart');\n  };\n\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init;\n      }\n    }\n\n    this.firstFrame = init;\n    this.totalFrames = end - init;\n    this.timeCompleted = this.totalFrames;\n\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0;\n    }\n\n    if (_typeof$4(arr[0]) === 'object') {\n      var i;\n      var len = arr.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0);\n    }\n\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip, this.animationData.op]);\n\n    if (forceFlag) {\n      this.checkSegments(0);\n    }\n  };\n\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset);\n      return true;\n    }\n\n    return false;\n  };\n\n  AnimationItem.prototype.destroy = function (name) {\n    if (name && this.name !== name || !this.renderer) {\n      return;\n    }\n\n    this.renderer.destroy();\n    this.imagePreloader.destroy();\n    this.trigger('destroy');\n    this._cbs = null;\n    this.onEnterFrame = null;\n    this.onLoopComplete = null;\n    this.onComplete = null;\n    this.onSegmentStart = null;\n    this.onDestroy = null;\n    this.renderer = null;\n    this.renderer = null;\n    this.imagePreloader = null;\n    this.projectInterface = null;\n  };\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value;\n    this.gotoFrame();\n  };\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setVolume = function (val, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.setVolume(val);\n  };\n\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume();\n  };\n\n  AnimationItem.prototype.mute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.mute();\n  };\n\n  AnimationItem.prototype.unmute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.unmute();\n  };\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n    this.audioController.setRate(this.playSpeed * this.playDirection);\n  };\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = '';\n\n    if (assetData.e) {\n      path = assetData.p;\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p;\n\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1];\n      }\n\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : '';\n      path += assetData.p;\n    }\n\n    return path;\n  };\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0;\n    var len = this.assets.length;\n\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\n  };\n\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index) {\n    try {\n      var element = this.renderer.getElementByPath(path);\n      element.updateDocumentData(documentData, index);\n    } catch (error) {// TODO: decide how to handle catch case\n    }\n  };\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));\n          break;\n\n        case 'drawnFrame':\n          this.drawnFrameEvent.currentTime = this.currentFrame;\n          this.drawnFrameEvent.totalTime = this.totalFrames;\n          this.drawnFrameEvent.direction = this.frameModifier;\n          this.triggerEvent(name, this.drawnFrameEvent);\n          break;\n\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n          break;\n\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\n          break;\n\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n          break;\n\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this));\n          break;\n\n        default:\n          this.triggerEvent(name);\n      }\n    }\n\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n    }\n\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\n    }\n\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n    }\n\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this));\n    }\n  };\n\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent('error', error);\n\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent('error', error);\n\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n\n  var animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var playingAnimationsNum = 0;\n    var _stopped = true;\n    var _isFrozen = false;\n\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n\n        i += 1;\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n\n      var i = 0;\n\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n\n        i += 1;\n      }\n\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n\n    function getRegisteredAnimations() {\n      var i;\n      var lenAnims = registeredAnimations.length;\n      var animations = [];\n\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation);\n      }\n\n      return animations;\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement);\n      animItem.addEventListener('_active', addPlayingCount);\n      animItem.addEventListener('_idle', subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n\n    function setSpeed(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation);\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation);\n      }\n    }\n\n    function play(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n\n      initTime = nowTime;\n\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume);\n      } else {\n        _stopped = true;\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n\n    function pause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\n      }\n    }\n\n    function stop(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n\n    function togglePause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n\n    function destroy(animation) {\n      var i;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')), [].slice.call(document.getElementsByClassName('bodymovin')));\n      var i;\n      var lenAnims = animElements.length;\n\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer);\n        }\n\n        registerAnimation(animElements[i], animationData);\n      }\n\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = 'svg';\n        }\n\n        var body = document.getElementsByTagName('body')[0];\n        body.innerText = '';\n        var div = createTag('div');\n        div.style.width = '100%';\n        div.style.height = '100%';\n        div.setAttribute('data-bm-type', renderer);\n        body.appendChild(div);\n        registerAnimation(div, animationData);\n      }\n    }\n\n    function resize() {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first);\n          _stopped = false;\n        }\n      }\n    }\n\n    function freeze() {\n      _isFrozen = true;\n    }\n\n    function unfreeze() {\n      _isFrozen = false;\n      activate();\n    }\n\n    function setVolume(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val, animation);\n      }\n    }\n\n    function mute(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation);\n      }\n    }\n\n    function unmute(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation);\n      }\n    }\n\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations;\n    moduleOb.resize = resize; // moduleOb.start = start;\n\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    moduleOb.freeze = freeze;\n    moduleOb.unfreeze = unfreeze;\n    moduleOb.setVolume = setVolume;\n    moduleOb.mute = mute;\n    moduleOb.unmute = unmute;\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\n    return moduleOb;\n  }();\n  /* eslint-disable */\n\n\n  var BezierFactory = function () {\n    /**\r\n       * BezierEasing - use bezier curve for transition easing function\r\n       * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n       *\r\n       * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n       * Usage:\r\n       * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n       * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n       *\r\n       */\n    var ob = {};\n    ob.getBezierEasing = getBezierEasing;\n    var beziers = {};\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\n\n      if (beziers[str]) {\n        return beziers[str];\n      }\n\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    } // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 0.001;\n    var SUBDIVISION_PRECISION = 0.0000001;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    var float32ArraySupported = typeof Float32Array === 'function';\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1;\n    }\n\n    function C(aA1) {\n      return 3.0 * aA1;\n    } // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n\n\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    } // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n\n\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n          currentT,\n          i = 0;\n\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n        if (currentX > 0.0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n      return currentT;\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n\n      return aGuessT;\n    }\n    /**\r\n       * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n       */\n\n\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n\n    BezierEasing.prototype = {\n      get: function get(x) {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x; // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function _precompute() {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        this._precomputed = true;\n\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues();\n        }\n      },\n      _calcSampleValues: function _calcSampleValues() {\n        var mX1 = this._p[0],\n            mX2 = this._p[2];\n\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n\n      /**\r\n           * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n           */\n      _getTForX: function _getTForX(aX) {\n        var mX1 = this._p[0],\n            mX2 = this._p[2],\n            mSampleValues = this._mSampleValues;\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n\n        --currentSample; // Interpolate to provide an initial guess for t\n\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n\n        if (initialSlope === 0.0) {\n          return guessForT;\n        }\n\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    };\n    return ob;\n  }();\n\n  var pooling = function () {\n    function _double(arr) {\n      return arr.concat(createSizedArray(arr.length));\n    }\n\n    return {\n      \"double\": _double\n    };\n  }();\n\n  var poolFactory = function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0;\n      var _maxLength = initialLength;\n      var pool = createSizedArray(_maxLength);\n      var ob = {\n        newElement: newElement,\n        release: release\n      };\n\n      function newElement() {\n        var element;\n\n        if (_length) {\n          _length -= 1;\n          element = pool[_length];\n        } else {\n          element = _create();\n        }\n\n        return element;\n      }\n\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling[\"double\"](pool);\n          _maxLength *= 2;\n        }\n\n        if (_release) {\n          _release(element);\n        }\n\n        pool[_length] = element;\n        _length += 1;\n      }\n\n      return ob;\n    };\n  }();\n\n  var bezierLengthPool = function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray('float32', getDefaultCurveSegments()),\n        lengths: createTypedArray('float32', getDefaultCurveSegments())\n      };\n    }\n\n    return poolFactory(8, create);\n  }();\n\n  var segmentsLengthPool = function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0\n      };\n    }\n\n    function release(element) {\n      var i;\n      var len = element.lengths.length;\n\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i]);\n      }\n\n      element.lengths.length = 0;\n    }\n\n    return poolFactory(8, create, release);\n  }();\n\n  function bezFunction() {\n    var math = Math;\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -0.001 && det1 < 0.001;\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));\n      var diffDist;\n\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n\n      return diffDist > -0.0001 && diffDist < 0.0001;\n    }\n\n    var getBezierLength = function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments();\n        var k;\n        var i;\n        var len;\n        var ptCoord;\n        var perc;\n        var addedLength = 0;\n        var ptDistance;\n        var point = [];\n        var lastPoint = [];\n        var lengthData = bezierLengthPool.newElement();\n        len = pt3.length;\n\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2);\n            }\n\n            lastPoint[i] = point[i];\n          }\n\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n\n          lengthData.percents[k] = perc;\n          lengthData.lengths[k] = addedLength;\n        }\n\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement();\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i;\n      var len = shapeData._length;\n      var lengths = segmentsLength.lengths;\n      var totalLength = 0;\n\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      segmentsLength.totalLength = totalLength;\n      return segmentsLength;\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0;\n      this.points = new Array(length);\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\\./g, 'p');\n\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments();\n          var k;\n          var i;\n          var len;\n          var ptCoord;\n          var perc;\n          var addedLength = 0;\n          var ptDistance;\n          var point;\n          var lastPoint = null;\n\n          if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n            curveSegments = 2;\n          }\n\n          var bezierData = new BezierData(curveSegments);\n          len = pt3.length;\n\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len);\n            perc = k / (curveSegments - 1);\n            ptDistance = 0;\n\n            for (i = 0; i < len; i += 1) {\n              ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];\n              point[i] = ptCoord;\n\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2);\n              }\n            }\n\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n            bezierData.points[k] = new PointData(ptDistance, point);\n            lastPoint = point;\n          }\n\n          bezierData.segmentLength = addedLength;\n          storedData[bezierName] = bezierData;\n        }\n\n        return storedData[bezierName];\n      };\n    }();\n\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents;\n      var lengths = bezierData.lengths;\n      var len = percents.length;\n      var initPos = bmFloor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos];\n      }\n\n      var dir = lengths[initPos] > lengthPos ? -1 : 1;\n      var flag = true;\n\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\n          flag = false;\n        } else {\n          initPos += dir;\n        }\n\n        if (initPos < 0 || initPos >= len - 1) {\n          // FIX for TypedArrays that don't store floating point values with enough accuracy\n          if (initPos === len - 1) {\n            return percents[initPos];\n          }\n\n          flag = false;\n        }\n      }\n\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u1 = 1 - t1;\n      var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;\n      var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;\n      return [ptX, ptY];\n    }\n\n    var bezierSegmentPoints = createTypedArray('float32', 8);\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0;\n      } else if (startPerc > 1) {\n        startPerc = 1;\n      }\n\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i;\n      var len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1;\n      var u0u0u0 = u0 * u0 * u0;\n      var t0u0u0_3 = t0 * u0 * u0 * 3; // eslint-disable-line camelcase\n\n      var t0t0u0_3 = t0 * t0 * u0 * 3; // eslint-disable-line camelcase\n\n      var t0t0t0 = t0 * t0 * t0; //\n\n      var u0u0u1 = u0 * u0 * u1;\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1; // eslint-disable-line camelcase\n\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1; // eslint-disable-line camelcase\n\n      var t0t0t1 = t0 * t0 * t1; //\n\n      var u0u1u1 = u0 * u1 * u1;\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1; // eslint-disable-line camelcase\n\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1; // eslint-disable-line camelcase\n\n      var t0t1t1 = t0 * t1 * t1; //\n\n      var u1u1u1 = u1 * u1 * u1;\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1; // eslint-disable-line camelcase\n\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1; // eslint-disable-line camelcase\n\n      var t1t1t1 = t1 * t1 * t1;\n\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n      }\n\n      return bezierSegmentPoints;\n    }\n\n    return {\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D\n    };\n  }\n\n  var bez = bezFunction();\n\n  var PropertyFactory = function () {\n    var initFrame = initialDefaultFrame;\n    var mathAbs = Math.abs;\n\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime;\n      var newValue;\n\n      if (this.propType === 'multidimensional') {\n        newValue = createTypedArray('float32', this.pv.length);\n      }\n\n      var iterationIndex = caching.lastIndex;\n      var i = iterationIndex;\n      var len = this.keyframes.length - 1;\n      var flag = true;\n      var keyData;\n      var nextKeyData;\n      var keyframeMetadata;\n\n      while (flag) {\n        keyData = this.keyframes[i];\n        nextKeyData = this.keyframes[i + 1];\n\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData;\n          }\n\n          iterationIndex = 0;\n          break;\n        }\n\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i;\n          break;\n        }\n\n        if (i < len - 1) {\n          i += 1;\n        } else {\n          iterationIndex = 0;\n          flag = false;\n        }\n      }\n\n      keyframeMetadata = this.keyframesMetadata[i] || {};\n      var k;\n      var kLen;\n      var perc;\n      var jLen;\n      var j;\n      var fnc;\n      var nextKeyTime = nextKeyData.t - offsetTime;\n      var keyTime = keyData.t - offsetTime;\n      var endValue;\n\n      if (keyData.to) {\n        if (!keyframeMetadata.bezierData) {\n          keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\n        }\n\n        var bezierData = keyframeMetadata.bezierData;\n\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\n          kLen = bezierData.points[ind].point.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k];\n          } // caching._lastKeyframeIndex = -1;\n\n        } else {\n          if (keyframeMetadata.__fnct) {\n            fnc = keyframeMetadata.__fnct;\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n            keyframeMetadata.__fnct = fnc;\n          }\n\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n          var distanceInLine = bezierData.segmentLength * perc;\n          var segmentPerc;\n          var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;\n          flag = true;\n          jLen = bezierData.points.length;\n\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength;\n\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k];\n              }\n\n              break;\n            } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n              }\n\n              break;\n            }\n\n            if (j < jLen - 1) {\n              j += 1;\n            } else {\n              flag = false;\n            }\n          }\n\n          caching._lastPoint = j;\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n          caching._lastKeyframeIndex = i;\n        }\n      } else {\n        var outX;\n        var outY;\n        var inX;\n        var inY;\n        var keyValue;\n        len = keyData.s.length;\n        endValue = nextKeyData.s || keyData.e;\n\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0];\n            newValue[1] = endValue[1];\n            newValue[2] = endValue[2];\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0];\n            newValue[1] = keyData.s[1];\n            newValue[2] = keyData.s[2];\n          } else {\n            var quatStart = createQuaternion(keyData.s);\n            var quatEnd = createQuaternion(endValue);\n            var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1;\n              } else if (frameNum < keyTime) {\n                perc = 0;\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyframeMetadata.__fnct) {\n                    keyframeMetadata.__fnct = [];\n                  }\n\n                  if (!keyframeMetadata.__fnct[i]) {\n                    outX = keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i];\n                    outY = keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i];\n                    inX = keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i];\n                    inY = keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i];\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyframeMetadata.__fnct[i] = fnc;\n                  } else {\n                    fnc = keyframeMetadata.__fnct[i];\n                  }\n                } else if (!keyframeMetadata.__fnct) {\n                  outX = keyData.o.x;\n                  outY = keyData.o.y;\n                  inX = keyData.i.x;\n                  inY = keyData.i.y;\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                  keyData.keyframeMetadata = fnc;\n                } else {\n                  fnc = keyframeMetadata.__fnct;\n                }\n\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n              }\n            }\n\n            endValue = nextKeyData.s || keyData.e;\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\n\n            if (this.propType === 'multidimensional') {\n              newValue[i] = keyValue;\n            } else {\n              newValue = keyValue;\n            }\n          }\n        }\n      }\n\n      caching.lastIndex = iterationIndex;\n      return newValue;\n    } // based on @Toji's https://github.com/toji/gl-matrix/\n\n\n    function slerp(a, b, t) {\n      var out = [];\n      var ax = a[0];\n      var ay = a[1];\n      var az = a[2];\n      var aw = a[3];\n      var bx = b[0];\n      var by = b[1];\n      var bz = b[2];\n      var bw = b[3];\n      var omega;\n      var cosom;\n      var sinom;\n      var scale0;\n      var scale1;\n      cosom = ax * bx + ay * by + az * bz + aw * bw;\n\n      if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n      }\n\n      if (1.0 - cosom > 0.000001) {\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n      } else {\n        scale0 = 1.0 - t;\n        scale1 = t;\n      }\n\n      out[0] = scale0 * ax + scale1 * bx;\n      out[1] = scale0 * ay + scale1 * by;\n      out[2] = scale0 * az + scale1 * bz;\n      out[3] = scale0 * aw + scale1 * bw;\n      return out;\n    }\n\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0];\n      var qy = quat[1];\n      var qz = quat[2];\n      var qw = quat[3];\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\n      out[0] = heading / degToRads;\n      out[1] = attitude / degToRads;\n      out[2] = bank / degToRads;\n    }\n\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads;\n      var attitude = values[1] * degToRads;\n      var bank = values[2] * degToRads;\n      var c1 = Math.cos(heading / 2);\n      var c2 = Math.cos(attitude / 2);\n      var c3 = Math.cos(bank / 2);\n      var s1 = Math.sin(heading / 2);\n      var s2 = Math.sin(attitude / 2);\n      var s3 = Math.sin(bank / 2);\n      var w = c1 * c2 * c3 - s1 * s2 * s3;\n      var x = s1 * s2 * c3 + c1 * c2 * s3;\n      var y = s1 * c2 * c3 + c1 * s2 * s3;\n      var z = c1 * s2 * c3 - s1 * c2 * s3;\n      return [x, y, z, w];\n    }\n\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n\n      if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1;\n          this._caching.lastIndex = 0;\n        }\n\n        var renderResult = this.interpolateValue(frameNum, this._caching);\n        this.pv = renderResult;\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function setVValue(val) {\n      var multipliedValue;\n\n      if (this.propType === 'unidimensional') {\n        multipliedValue = val * this.mult;\n\n        if (mathAbs(this.v - multipliedValue) > 0.00001) {\n          this.v = multipliedValue;\n          this._mdf = true;\n        }\n      } else {\n        var i = 0;\n        var len = this.v.length;\n\n        while (i < len) {\n          multipliedValue = val[i] * this.mult;\n\n          if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {\n            this.v[i] = multipliedValue;\n            this._mdf = true;\n          }\n\n          i += 1;\n        }\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = this._isFirstFrame;\n      var i;\n      var len = this.effectsSequence.length;\n      var finalValue = this.kf ? this.pv : this.data.k;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this._isFirstFrame = false;\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    function ValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this.v = mult ? data.k * mult : data.k;\n      this.pv = data.k;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.vel = 0;\n      this.effectsSequence = [];\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function MultiDimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.frameId = -1;\n      var i;\n      var len = data.k.length;\n      this.v = createTypedArray('float32', len);\n      this.pv = createTypedArray('float32', len);\n      this.vel = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data.k[i] * this.mult;\n        this.pv[i] = data.k[i];\n      }\n\n      this._isFirstFrame = true;\n      this.effectsSequence = [];\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.keyframes = data.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem.data.st;\n      this.frameId = -1;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1\n      };\n      this.k = true;\n      this.kf = true;\n      this.data = data;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.v = initFrame;\n      this.pv = initFrame;\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      var i;\n      var len = data.k.length;\n      var s;\n      var e;\n      var to;\n      var ti;\n\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\n          s = data.k[i].s;\n          e = data.k[i + 1].s;\n          to = data.k[i].to;\n          ti = data.k[i].ti;\n\n          if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n            data.k[i].to = null;\n            data.k[i].ti = null;\n          }\n\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {\n              data.k[i].to = null;\n              data.k[i].ti = null;\n            }\n          }\n        }\n      }\n\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.data = data;\n      this.keyframes = data.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem.data.st;\n      this.k = true;\n      this.kf = true;\n      this._isFirstFrame = true;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.frameId = -1;\n      var arrLen = data.k[0].s.length;\n      this.v = createTypedArray('float32', arrLen);\n      this.pv = createTypedArray('float32', arrLen);\n\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame;\n        this.pv[i] = initFrame;\n      }\n\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: createTypedArray('float32', arrLen)\n      };\n      this.addEffect = addEffect;\n    }\n\n    function getProp(elem, data, type, mult, container) {\n      var p;\n\n      if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container);\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult, container);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container);\n            break;\n\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p);\n      }\n\n      return p;\n    }\n\n    var ob = {\n      getProp: getProp\n    };\n    return ob;\n  }();\n\n  function DynamicPropertyContainer() {}\n\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n        this.container.addDynamicProperty(this);\n        this._isAnimated = true;\n      }\n    },\n    iterateDynamicProperties: function iterateDynamicProperties() {\n      this._mdf = false;\n      var i;\n      var len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue();\n\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    },\n    initDynamicPropertyContainer: function initDynamicPropertyContainer(container) {\n      this.container = container;\n      this.dynamicProperties = [];\n      this._mdf = false;\n      this._isAnimated = false;\n    }\n  };\n\n  var pointPool = function () {\n    function create() {\n      return createTypedArray('float32', 2);\n    }\n\n    return poolFactory(8, create);\n  }();\n\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = createSizedArray(this._maxLength);\n    this.o = createSizedArray(this._maxLength);\n    this.i = createSizedArray(this._maxLength);\n  }\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n\n    while (i < len) {\n      this.v[i] = pointPool.newElement();\n      this.o[i] = pointPool.newElement();\n      this.i[i] = pointPool.newElement();\n      i += 1;\n    }\n  };\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n\n    this._length = len;\n  };\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength));\n    this.i = this.i.concat(createSizedArray(this._maxLength));\n    this.o = this.o.concat(createSizedArray(this._maxLength));\n    this._maxLength *= 2;\n  };\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n\n    switch (type) {\n      case 'v':\n        arr = this.v;\n        break;\n\n      case 'i':\n        arr = this.i;\n        break;\n\n      case 'o':\n        arr = this.o;\n        break;\n\n      default:\n        arr = [];\n        break;\n    }\n\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = pointPool.newElement();\n    }\n\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace);\n    this.setXYAt(oX, oY, 'o', pos, replace);\n    this.setXYAt(iX, iY, 'i', pos, replace);\n  };\n\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath();\n    newPath.setPathData(this.c, this._length);\n    var vertices = this.v;\n    var outPoints = this.o;\n    var inPoints = this.i;\n    var init = 0;\n\n    if (this.c) {\n      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\n      init = 1;\n    }\n\n    var cnt = this._length - 1;\n    var len = this._length;\n    var i;\n\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\n      cnt -= 1;\n    }\n\n    return newPath;\n  };\n\n  var shapePool = function () {\n    function create() {\n      return new ShapePath();\n    }\n\n    function release(shapePath) {\n      var len = shapePath._length;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i]);\n        pointPool.release(shapePath.i[i]);\n        pointPool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n\n      shapePath._length = 0;\n      shapePath.c = false;\n    }\n\n    function clone(shape) {\n      var cloned = factory.newElement();\n      var i;\n      var len = shape._length === undefined ? shape.v.length : shape._length;\n      cloned.setLength(len);\n      cloned.c = shape.c;\n\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n      }\n\n      return cloned;\n    }\n\n    var factory = poolFactory(4, create, release);\n    factory.clone = clone;\n    return factory;\n  }();\n\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = createSizedArray(this._maxLength);\n  }\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\n      this._maxLength *= 2;\n    }\n\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i]);\n    }\n\n    this._length = 0;\n  };\n\n  var shapeCollectionPool = function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = createSizedArray(_maxLength);\n\n    function newShapeCollection() {\n      var shapeCollection;\n\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n\n      return shapeCollection;\n    }\n\n    function release(shapeCollection) {\n      var i;\n      var len = shapeCollection._length;\n\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i]);\n      }\n\n      shapeCollection._length = 0;\n\n      if (_length === _maxLength) {\n        pool = pooling[\"double\"](pool);\n        _maxLength *= 2;\n      }\n\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n\n    return ob;\n  }();\n\n  var ShapePropertyFactory = function () {\n    var initFrame = -999999;\n\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex;\n      var keyPropS;\n      var keyPropE;\n      var isHold;\n      var j;\n      var k;\n      var jLen;\n      var kLen;\n      var perc;\n      var vertexValue;\n      var kf = this.keyframes;\n\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\n        /* if(kf[kf.length - 1].s){\r\n                  keyPropS = kf[kf.length - 1].s[0];\r\n              }else{\r\n                  keyPropS = kf[kf.length - 2].e[0];\r\n              } */\n\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = kf.length - 1;\n        var flag = true;\n        var keyData;\n        var nextKeyData;\n        var keyframeMetadata;\n\n        while (flag) {\n          keyData = kf[i];\n          nextKeyData = kf[i + 1];\n\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n\n        keyframeMetadata = this.keyframesMetadata[i] || {};\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyframeMetadata.__fnct = fnc;\n            }\n\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\n        }\n\n        keyPropS = keyData.s[0];\n      }\n\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      caching.lastIndex = iterationIndex;\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n          previousValue.i[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n          previousValue.o[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n          previousValue.v[j][k] = vertexValue;\n        }\n      }\n    }\n\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      var lastFrame = this._caching.lastFrame;\n\n      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {\n        /// /\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\n        this.interpolateShape(frameNum, this.pv, this._caching); /// /\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n\n      var i;\n      var len = shape1._length;\n\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath);\n        this.localShapeCollection.releaseShapes();\n        this.localShapeCollection.addShape(this.v);\n        this._mdf = true;\n        this.paths = this.localShapeCollection;\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (!this.effectsSequence.length) {\n        this._mdf = false;\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = false;\n      var finalValue;\n\n      if (this.kf) {\n        finalValue = this.pv;\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k;\n      } else {\n        finalValue = this.data.pt.k;\n      }\n\n      var i;\n      var len = this.effectsSequence.length;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function ShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.container = elem;\n      this.elem = elem;\n      this.data = data;\n      this.k = false;\n      this.kf = false;\n      this._mdf = false;\n      var pathData = type === 3 ? data.pt.k : data.ks.k;\n      this.v = shapePool.clone(pathData);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n      this.effectsSequence = [];\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = processEffectsSequence;\n    ShapeProperty.prototype.setVValue = setVValue;\n    ShapeProperty.prototype.addEffect = addEffect;\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.elem = elem;\n      this.container = elem;\n      this.offsetTime = elem.data.st;\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k;\n      this.keyframesMetadata = [];\n      this.k = true;\n      this.kf = true;\n      var len = this.keyframes[0].s[0].i.length;\n      this.v = shapePool.newElement();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\n    }\n\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\n\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n\n      function EllShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data.d;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertEllToPath();\n        }\n      }\n\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertEllToPath();\n          }\n        },\n        convertEllToPath: function convertEllToPath() {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var s0 = this.s.v[0] / 2;\n          var s1 = this.s.v[1] / 2;\n\n          var _cw = this.d !== 3;\n\n          var _v = this.v;\n          _v.v[0][0] = p0;\n          _v.v[0][1] = p1 - s1;\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.v[1][1] = p1;\n          _v.v[2][0] = p0;\n          _v.v[2][1] = p1 + s1;\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.v[3][1] = p1;\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.i[0][1] = p1 - s1;\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.i[1][1] = p1 - s1 * cPoint;\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.i[2][1] = p1 + s1;\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.i[3][1] = p1 + s1 * cPoint;\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.o[0][1] = p1 - s1;\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.o[1][1] = p1 + s1 * cPoint;\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.o[2][1] = p1 + s1;\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.o[3][1] = p1 - s1 * cPoint;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);\n      return EllShapePropertyFactory;\n    }();\n\n    var StarShapeProperty = function () {\n      function StarShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 0);\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.data = data;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);\n          this.convertToPath = this.convertStarToPath;\n        } else {\n          this.convertToPath = this.convertPolygonToPath;\n        }\n\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertToPath();\n        }\n      }\n\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertToPath();\n          }\n        },\n        convertStarToPath: function convertStarToPath() {\n          var numPts = Math.floor(this.pt.v) * 2;\n          var angle = Math.PI * 2 / numPts;\n          /* this.v.v.length = numPts;\r\n                  this.v.i.length = numPts;\r\n                  this.v.o.length = numPts; */\n\n          var longFlag = true;\n          var longRad = this.or.v;\n          var shortRad = this.ir.v;\n          var longRound = this.os.v;\n          var shortRound = this.is.v;\n          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n          var i;\n          var rad;\n          var roundness;\n          var perimSegment;\n          var currentAng = -Math.PI / 2;\n          currentAng += this.r.v;\n          var dir = this.data.d === 3 ? -1 : 1;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad;\n            roundness = longFlag ? longRound : shortRound;\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            /* this.v.v[i] = [x,y];\r\n                      this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                      this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                      this.v._length = numPts; */\n\n            longFlag = !longFlag;\n            currentAng += angle * dir;\n          }\n        },\n        convertPolygonToPath: function convertPolygonToPath() {\n          var numPts = Math.floor(this.pt.v);\n          var angle = Math.PI * 2 / numPts;\n          var rad = this.or.v;\n          var roundness = this.os.v;\n          var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n          var i;\n          var currentAng = -Math.PI * 0.5;\n          var dir = this.data.d === 3 ? -1 : 1;\n          currentAng += this.r.v;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            currentAng += angle * dir;\n          }\n\n          this.paths.length = 0;\n          this.paths[0] = this.v;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);\n      return StarShapePropertyFactory;\n    }();\n\n    var RectShapeProperty = function () {\n      function RectShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertRectToPath();\n        }\n      }\n\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function convertRectToPath() {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var v0 = this.s.v[0] / 2;\n          var v1 = this.s.v[1] / 2;\n          var round = bmMin(v0, v1, this.r.v);\n          var cPoint = round * (1 - roundCorner);\n          this.v._length = 0;\n\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n            }\n          }\n        },\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertRectToPath();\n          }\n        },\n        reset: resetShape\n      };\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);\n      return RectShapePropertyFactory;\n    }();\n\n    function getShapeProp(elem, data, type) {\n      var prop;\n\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks;\n        var keys = dataProp.k;\n\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type);\n        } else {\n          prop = new ShapeProperty(elem, data, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n\n    var ob = {};\n    ob.getShapeProp = getShapeProp;\n    ob.getConstructorFunction = getConstructorFunction;\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob;\n  }();\n  /*!\r\n   Transformation Matrix v2.0\r\n   (c) Epistemex 2014-2015\r\n   www.epistemex.com\r\n   By Ken Fyrstenberg\r\n   Contributions by leeoniya.\r\n   License: MIT, header required.\r\n   */\n\n  /**\r\n   * 2D transformation matrix object initialized with identity matrix.\r\n   *\r\n   * The matrix can synchronize a canvas context by supplying the context\r\n   * as an argument, or later apply current absolute transform to an\r\n   * existing context.\r\n   *\r\n   * All values are handled as floating point values.\r\n   *\r\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n   * @prop {number} a - scale x\r\n   * @prop {number} b - shear y\r\n   * @prop {number} c - shear x\r\n   * @prop {number} d - scale y\r\n   * @prop {number} e - translate x\r\n   * @prop {number} f - translate y\r\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n   * @constructor\r\n   */\n\n\n  var Matrix = function () {\n    var _cos = Math.cos;\n    var _sin = Math.sin;\n    var _tan = Math.tan;\n    var _rnd = Math.round;\n\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay));\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1;\n      }\n\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this;\n      }\n\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n\n      return this;\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props;\n\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        // NOTE: commenting this condition because TurboFan deoptimizes code when present\n        // if(m2 !== 0 || n2 !== 0 || o2 !== 0){\n        _p[12] = _p[12] * a2 + _p[15] * m2;\n        _p[13] = _p[13] * f2 + _p[15] * n2;\n        _p[14] = _p[14] * k2 + _p[15] * o2;\n        _p[15] *= p2; // }\n\n        this._identityCalculated = false;\n        return this;\n      }\n\n      var a1 = _p[0];\n      var b1 = _p[1];\n      var c1 = _p[2];\n      var d1 = _p[3];\n      var e1 = _p[4];\n      var f1 = _p[5];\n      var g1 = _p[6];\n      var h1 = _p[7];\n      var i1 = _p[8];\n      var j1 = _p[9];\n      var k1 = _p[10];\n      var l1 = _p[11];\n      var m1 = _p[12];\n      var n1 = _p[13];\n      var o1 = _p[14];\n      var p1 = _p[15];\n      /* matrix order (canvas compatible):\r\n           * ace\r\n           * bdf\r\n           * 001\r\n           */\n\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n\n      return this._identity;\n    }\n\n    function equals(matr) {\n      var i = 0;\n\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false;\n        }\n\n        i += 1;\n      }\n\n      return true;\n    }\n\n    function clone(matr) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n\n      return matr;\n    }\n\n    function cloneFromProps(props) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n      /* return {\r\n           x: x * me.a + y * me.c + me.e,\r\n           y: x * me.b + y * me.d + me.f\r\n           }; */\n    }\n\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      var inverseMatrix = new Matrix();\n      inverseMatrix.props[0] = a;\n      inverseMatrix.props[1] = b;\n      inverseMatrix.props[4] = c;\n      inverseMatrix.props[5] = d;\n      inverseMatrix.props[12] = e;\n      inverseMatrix.props[13] = f;\n      return inverseMatrix;\n    }\n\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix();\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);\n    }\n\n    function inversePoints(pts) {\n      var i;\n      var len = pts.length;\n      var retPts = [];\n\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n\n      return retPts;\n    }\n\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray('float32', 6);\n\n      if (this.isIdentity()) {\n        arr[0] = pt1[0];\n        arr[1] = pt1[1];\n        arr[2] = pt2[0];\n        arr[3] = pt2[1];\n        arr[4] = pt3[0];\n        arr[5] = pt3[1];\n      } else {\n        var p0 = this.props[0];\n        var p1 = this.props[1];\n        var p4 = this.props[4];\n        var p5 = this.props[5];\n        var p12 = this.props[12];\n        var p13 = this.props[13];\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\n      }\n\n      return arr;\n    }\n\n    function applyToPointArray(x, y, z) {\n      var arr;\n\n      if (this.isIdentity()) {\n        arr = [x, y, z];\n      } else {\n        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n      }\n\n      return arr;\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y;\n      }\n\n      var _p = this.props;\n      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\n    }\n\n    function toCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /* if(this.isIdentity()) {\r\n              return '';\r\n          } */\n      var i = 0;\n      var props = this.props;\n      var cssValue = 'matrix3d(';\n      var v = 10000;\n\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v;\n        cssValue += i === 15 ? ')' : ',';\n        i += 1;\n      }\n\n      return cssValue;\n    }\n\n    function roundMatrixProperty(val) {\n      var v = 10000;\n\n      if (val < 0.000001 && val > 0 || val > -0.000001 && val < 0) {\n        return _rnd(val * v) / v;\n      }\n\n      return val;\n    }\n\n    function to2dCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /* if(this.isIdentity()) {\r\n              return '';\r\n          } */\n      var props = this.props;\n\n      var _a = roundMatrixProperty(props[0]);\n\n      var _b = roundMatrixProperty(props[1]);\n\n      var _c = roundMatrixProperty(props[4]);\n\n      var _d = roundMatrixProperty(props[5]);\n\n      var _e = roundMatrixProperty(props[12]);\n\n      var _f = roundMatrixProperty(props[13]);\n\n      return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')';\n    }\n\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToTriplePoints = applyToTriplePoints;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.equals = equals;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this.getInverseMatrix = getInverseMatrix;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = createTypedArray('float32', 16);\n      this.reset();\n    };\n  }();\n\n  function _typeof$3(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof$3 = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof$3 = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof$3(obj);\n  }\n\n  var lottie = {};\n  var standalone = '__[STANDALONE]__';\n  var animationData = '__[ANIMATIONDATA]__';\n  var renderer = '';\n\n  function setLocation(href) {\n    setLocationHref(href);\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer);\n    } else {\n      animationManager.searchAnimations();\n    }\n  }\n\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag);\n  }\n\n  function setPrefix(prefix) {\n    setIdPrefix(prefix);\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData);\n    }\n\n    return animationManager.loadAnimation(params);\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          setDefaultCurveSegments(200);\n          break;\n\n        default:\n        case 'medium':\n          setDefaultCurveSegments(50);\n          break;\n\n        case 'low':\n          setDefaultCurveSegments(10);\n          break;\n      }\n    } else if (!isNaN(value) && value > 1) {\n      setDefaultCurveSegments(value);\n    }\n\n    if (getDefaultCurveSegments() >= 50) {\n      roundValues(false);\n    } else {\n      roundValues(true);\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined';\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      setExpressionsPlugin(plugin);\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case 'propertyFactory':\n        return PropertyFactory;\n\n      case 'shapePropertyFactory':\n        return ShapePropertyFactory;\n\n      case 'matrix':\n        return Matrix;\n\n      default:\n        return null;\n    }\n  }\n\n  lottie.play = animationManager.play;\n  lottie.pause = animationManager.pause;\n  lottie.setLocationHref = setLocation;\n  lottie.togglePause = animationManager.togglePause;\n  lottie.setSpeed = animationManager.setSpeed;\n  lottie.setDirection = animationManager.setDirection;\n  lottie.stop = animationManager.stop;\n  lottie.searchAnimations = searchAnimations;\n  lottie.registerAnimation = animationManager.registerAnimation;\n  lottie.loadAnimation = loadAnimation;\n  lottie.setSubframeRendering = setSubframeRendering;\n  lottie.resize = animationManager.resize; // lottie.start = start;\n\n  lottie.goToAndStop = animationManager.goToAndStop;\n  lottie.destroy = animationManager.destroy;\n  lottie.setQuality = setQuality;\n  lottie.inBrowser = inBrowser;\n  lottie.installPlugin = installPlugin;\n  lottie.freeze = animationManager.freeze;\n  lottie.unfreeze = animationManager.unfreeze;\n  lottie.setVolume = animationManager.setVolume;\n  lottie.mute = animationManager.mute;\n  lottie.unmute = animationManager.unmute;\n  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;\n  lottie.useWebWorker = setWebWorker;\n  lottie.setIDPrefix = setPrefix;\n  lottie.__getFactory = getFactory;\n  lottie.version = '5.9.6';\n\n  function checkReady() {\n    if (document.readyState === 'complete') {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&');\n\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split('=');\n\n      if (decodeURIComponent(pair[0]) == variable) {\n        // eslint-disable-line eqeqeq\n        return decodeURIComponent(pair[1]);\n      }\n    }\n\n    return null;\n  }\n\n  var queryString = '';\n\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script');\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: ''\n    };\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, '') : ''; // eslint-disable-line no-useless-escape\n\n    renderer = getQueryVariable('renderer');\n  }\n\n  var readyStateCheckInterval = setInterval(checkReady, 100); // this adds bodymovin to the window object for backwards compatibility\n\n  try {\n    if (!((typeof exports === \"undefined\" ? \"undefined\" : _typeof$3(exports)) === 'object' && typeof module !== 'undefined') && !(typeof define === 'function' && define.amd) // eslint-disable-line no-undef\n    ) {\n      window.bodymovin = lottie;\n    }\n  } catch (err) {//\n  }\n\n  var ShapeModifiers = function () {\n    var ob = {};\n    var modifiers = {};\n    ob.registerModifier = registerModifier;\n    ob.getModifier = getModifier;\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data);\n    }\n\n    return ob;\n  }();\n\n  function ShapeModifier() {}\n\n  ShapeModifier.prototype.initModifierProperties = function () {};\n\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\n      data.sh.container.addDynamicProperty(data.sh);\n      var shapeData = {\n        shape: data.sh,\n        data: data,\n        localShapeCollection: shapeCollectionPool.newShapeCollection()\n      };\n      this.shapes.push(shapeData);\n      this.addShapeToModifier(shapeData);\n\n      if (this._isAnimated) {\n        data.setAsAnimated();\n      }\n    }\n  };\n\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = [];\n    this.elem = elem;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, data);\n    this.frameId = initialDefaultFrame;\n    this.closed = false;\n    this.k = false;\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  extendPrototype([DynamicPropertyContainer], ShapeModifier);\n\n  function TrimModifier() {}\n\n  extendPrototype([ShapeModifier], TrimModifier);\n\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\n    this.sValue = 0;\n    this.eValue = 0;\n    this.getValue = this.processKeys;\n    this.m = data.m;\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n  };\n\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = [];\n  };\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s: s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n\n    var shapeSegments = [];\n    var i;\n    var len = segments.length;\n    var segmentOb;\n\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n\n      if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {\n        var shapeS;\n        var shapeE;\n\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n\n    return shapeSegments;\n  };\n\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i;\n    var len = pathsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i]);\n    }\n\n    pathsData.length = 0;\n    return pathsData;\n  };\n\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s;\n    var e;\n\n    if (this._mdf || _isFirstFrame) {\n      var o = this.o.v % 360 / 360;\n\n      if (o < 0) {\n        o += 1;\n      }\n\n      if (this.s.v > 1) {\n        s = 1 + o;\n      } else if (this.s.v < 0) {\n        s = 0 + o;\n      } else {\n        s = this.s.v + o;\n      }\n\n      if (this.e.v > 1) {\n        e = 1 + o;\n      } else if (this.e.v < 0) {\n        e = 0 + o;\n      } else {\n        e = this.e.v + o;\n      }\n\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n\n      s = Math.round(s * 10000) * 0.0001;\n      e = Math.round(e * 10000) * 0.0001;\n      this.sValue = s;\n      this.eValue = e;\n    } else {\n      s = this.sValue;\n      e = this.eValue;\n    }\n\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var pathsData;\n    var pathData;\n    var totalShapeLength;\n    var totalModifierLength = 0;\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape._mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0;\n        }\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [];\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]; // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\n\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData);\n\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n\n          totalModifierLength += totalShapeLength;\n          shapeData.shape._mdf = true;\n        }\n      }\n\n      var shapeS = s;\n      var shapeE = e;\n      var addedLength = 0;\n      var edges;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes(); // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\n\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n\n          jLen = edges.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\n\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\n        // Don't remove this even if it's losing cached info.\n        this.shapes[i].pathsData.length = 0;\n        this.shapes[i].shape._mdf = true;\n      }\n    }\n  };\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i;\n    var len = newPaths.length;\n\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\n    }\n\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], 'v', pos);\n    }\n\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i;\n    var len = shapeData.shape.paths._length;\n    var j;\n    var jLen;\n    var addedLength = 0;\n    var currentLengthData;\n    var segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n\n    if (!shapePath) {\n      shapePath = shapePool.newElement();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n\n    shapes.push(shapePath);\n\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);\n      }\n\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n\n      if (i < len - 1) {\n        shapePath = shapePool.newElement();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n\n    return shapes;\n  };\n\n  function PuckerAndBloatModifier() {}\n\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier);\n\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);\n    this._isAnimated = !!this.amount.effectsSequence.length;\n  };\n\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100;\n    var centerPoint = [0, 0];\n    var pathLength = path._length;\n    var i = 0;\n\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0];\n      centerPoint[1] += path.v[i][1];\n    }\n\n    centerPoint[0] /= pathLength;\n    centerPoint[1] /= pathLength;\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);\n    }\n\n    return clonedPath;\n  };\n\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var amount = this.amount.v;\n\n    if (amount !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  var TransformPropertyFactory = function () {\n    var defaultVector = [0, 0];\n\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf;\n      this.iterateDynamicProperties();\n      this._mdf = this._mdf || _mdf;\n\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n      }\n\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n      }\n\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v);\n      }\n\n      if (this.r) {\n        mat.rotate(-this.r.v);\n      } else {\n        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n      }\n\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v);\n        } else {\n          mat.translate(this.px.v, this.py.v, 0);\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n      }\n    }\n\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (this._isDirty) {\n        this.precalculateMatrix();\n        this._isDirty = false;\n      }\n\n      this.iterateDynamicProperties();\n\n      if (this._mdf || forceRender) {\n        var frameRate;\n        this.v.cloneFromProps(this.pre.props);\n\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v);\n        }\n\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v);\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n\n        if (this.autoOriented) {\n          var v1;\n          var v2;\n          frameRate = this.elem.globalData.frameRate;\n\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\n            }\n          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n            v1 = [];\n            v2 = [];\n            var px = this.px;\n            var py = this.py;\n\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = [px.pv, py.pv];\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\n            }\n          } else {\n            v2 = defaultVector;\n            v1 = v2;\n          }\n\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n        }\n\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        this.appliedTransformations = 1;\n      } else {\n        return;\n      }\n\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        this.appliedTransformations = 2;\n      } else {\n        return;\n      }\n\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v);\n          this.appliedTransformations = 3;\n        } else {\n          return;\n        }\n      }\n\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v);\n          this.appliedTransformations = 4;\n        }\n      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\n        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        this.appliedTransformations = 4;\n      }\n    }\n\n    function autoOrient() {//\n      // var prevP = this.getValueAtTime();\n    }\n\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop);\n\n      this.elem.addDynamicProperty(prop);\n      this._isDirty = true;\n    }\n\n    function TransformProperty(elem, data, container) {\n      this.elem = elem;\n      this.frameId = -1;\n      this.propType = 'transform';\n      this.data = data;\n      this.v = new Matrix(); // Precalculated matrix with non animated properties\n\n      this.pre = new Matrix();\n      this.appliedTransformations = 0;\n      this.initDynamicPropertyContainer(container || elem);\n\n      if (data.p && data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);\n\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p || {\n          k: [0, 0, 0]\n        }, 1, 0, this);\n      }\n\n      if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\n\n        if (data.or.k[0].ti) {\n          var i;\n          var len = data.or.k.length;\n\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = null;\n            data.or.k[i].ti = null;\n          }\n        }\n\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this); // sh Indicates it needs to be capped between -180 and 180\n\n        this.or.sh = true;\n      } else {\n        this.r = PropertyFactory.getProp(elem, data.r || {\n          k: 0\n        }, 0, degToRads, this);\n      }\n\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\n      }\n\n      this.a = PropertyFactory.getProp(elem, data.a || {\n        k: [0, 0, 0]\n      }, 1, 0, this);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: [100, 100, 100]\n      }, 1, 0.01, this); // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\n\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);\n      } else {\n        this.o = {\n          _mdf: false,\n          v: 1\n        };\n      }\n\n      this._isDirty = true;\n\n      if (!this.dynamicProperties.length) {\n        this.getValue(true);\n      }\n    }\n\n    TransformProperty.prototype = {\n      applyToMatrix: applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix: precalculateMatrix,\n      autoOrient: autoOrient\n    };\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\n\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container);\n    }\n\n    return {\n      getTransformProperty: getTransformProperty\n    };\n  }();\n\n  function RepeaterModifier() {}\n\n  extendPrototype([ShapeModifier], RepeaterModifier);\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);\n    this.data = data;\n\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = !!this.dynamicProperties.length;\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    rMatrix.rotate(-transform.r.v * dir * perc);\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n  };\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.frameId = -1;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, arr[pos]);\n\n    while (pos > 0) {\n      pos -= 1; // this._elements.unshift(arr.splice(pos,1)[0]);\n\n      this._elements.unshift(arr[pos]);\n    }\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i;\n    var len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i;\n    var len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items;\n    var itemsTransform;\n    var i;\n    var dir;\n    var cont;\n    var hasReloaded = false;\n\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v);\n\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr'\n          };\n          group.it.push({\n            a: {\n              a: 0,\n              ix: 1,\n              k: [0, 0]\n            },\n            nm: 'Transform',\n            o: {\n              a: 0,\n              ix: 7,\n              k: 100\n            },\n            p: {\n              a: 0,\n              ix: 2,\n              k: [0, 0]\n            },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [{\n                s: 0,\n                e: 0,\n                t: 0\n              }, {\n                s: 0,\n                e: 0,\n                t: 1\n              }]\n            },\n            s: {\n              a: 0,\n              ix: 3,\n              k: [100, 100]\n            },\n            sa: {\n              a: 0,\n              ix: 5,\n              k: 0\n            },\n            sk: {\n              a: 0,\n              ix: 4,\n              k: 0\n            },\n            ty: 'tr'\n          });\n          this.arr.splice(0, 0, group);\n\n          this._groups.splice(0, 0, group);\n\n          this._currentCopies += 1;\n        }\n\n        this.elem.reloadShapes();\n        hasReloaded = true;\n      }\n\n      cont = 0;\n      var renderFlag;\n\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it;\n          var transformData = elems[elems.length - 1];\n\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true;\n            transformData.transform.op.v = 0;\n          } else {\n            transformData.transform.op._mdf = false;\n          }\n        }\n\n        cont += 1;\n      }\n\n      this._currentCopies = copies; /// /\n\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n      var j;\n      var jLen;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        jLen = itemsTransform.length;\n        items[items.length - 1].transform.mProps._mdf = true;\n        items[items.length - 1].transform.op._mdf = true;\n        items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\n\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    } else {\n      cont = this._currentCopies;\n      i = 0;\n      dir = 1;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        items[items.length - 1].transform.mProps._mdf = false;\n        items[items.length - 1].transform.op._mdf = false;\n        cont -= 1;\n        i += dir;\n      }\n    }\n\n    return hasReloaded;\n  };\n\n  RepeaterModifier.prototype.addShape = function () {};\n\n  function RoundCornersModifier() {}\n\n  extendPrototype([ShapeModifier], RoundCornersModifier);\n\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);\n    this._isAnimated = !!this.rd.effectsSequence.length;\n  };\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var i;\n    var len = path._length;\n    var currentV;\n    var currentI;\n    var currentO;\n    var closerV;\n    var distance;\n    var newPosPerc;\n    var index = 0;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);\n          /* clonedPath.v[index] = currentV;\r\n                  clonedPath.o[index] = currentO;\r\n                  clonedPath.i[index] = currentI; */\n\n          index += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = iX;\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          vY = iY;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = oX;\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          vY = oY;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n        }\n      } else {\n        clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);\n        index += 1;\n      }\n    }\n\n    return clonedPath;\n  };\n\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var rd = this.rd.v;\n\n    if (rd !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\n    var fWeight = 'normal';\n    var fStyle = 'normal';\n    var len = styles.length;\n    var styleName;\n\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic';\n          break;\n\n        case 'bold':\n          fWeight = '700';\n          break;\n\n        case 'black':\n          fWeight = '900';\n          break;\n\n        case 'medium':\n          fWeight = '500';\n          break;\n\n        case 'regular':\n        case 'normal':\n          fWeight = '400';\n          break;\n\n        case 'light':\n        case 'thin':\n          fWeight = '200';\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight\n    };\n  }\n\n  var FontManager = function () {\n    var maxWaitingTime = 5000;\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: []\n      }\n    };\n    var combinedCharacters = []; // Hindi characters\n\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\n    var surrogateModifiers = ['d83cdffb', 'd83cdffc', 'd83cdffd', 'd83cdffe', 'd83cdfff'];\n    var zeroWidthJoiner = [65039, 8205];\n\n    function trimFontOptions(font) {\n      var familyArray = font.split(',');\n      var i;\n      var len = familyArray.length;\n      var enabledFamilies = [];\n\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {\n          enabledFamilies.push(familyArray[i]);\n        }\n      }\n\n      return enabledFamilies.join(',');\n    }\n\n    function setUpNode(font, family) {\n      var parentNode = createTag('span'); // Node is invisible to screen readers.\n\n      parentNode.setAttribute('aria-hidden', true);\n      parentNode.style.fontFamily = family;\n      var node = createTag('span'); // Characters that vary significantly among different fonts\n\n      node.innerText = 'giItT1WQy@!-/#'; // Visible - so we can measure it - but not on the screen\n\n      parentNode.style.position = 'absolute';\n      parentNode.style.left = '-10000px';\n      parentNode.style.top = '-10000px'; // Large font size makes even subtle changes obvious\n\n      parentNode.style.fontSize = '300px'; // Reset any font properties\n\n      parentNode.style.fontVariant = 'normal';\n      parentNode.style.fontStyle = 'normal';\n      parentNode.style.fontWeight = 'normal';\n      parentNode.style.letterSpacing = '0';\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode); // Remember width with no applied web font\n\n      var width = node.offsetWidth;\n      node.style.fontFamily = trimFontOptions(font) + ', ' + family;\n      return {\n        node: node,\n        w: width,\n        parent: parentNode\n      };\n    }\n\n    function checkLoadedFonts() {\n      var i;\n      var len = this.fonts.length;\n      var node;\n      var w;\n      var loadedCount = len;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n        } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20);\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10);\n      }\n    }\n\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? 'svg' : 'canvas';\n      var helper;\n      var fontProps = getFontProperties(fontData);\n\n      if (engine === 'svg') {\n        var tHelper = createNS('text');\n        tHelper.style.fontSize = '100px'; // tHelper.style.fontFamily = fontData.fFamily;\n\n        tHelper.setAttribute('font-family', fontData.fFamily);\n        tHelper.setAttribute('font-style', fontProps.style);\n        tHelper.setAttribute('font-weight', fontProps.weight);\n        tHelper.textContent = '1';\n\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = 'inherit';\n          tHelper.setAttribute('class', fontData.fClass);\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily;\n        }\n\n        def.appendChild(tHelper);\n        helper = tHelper;\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext('2d');\n        tCanvasHelper.font = fontProps.style + ' ' + fontProps.weight + ' 100px ' + fontData.fFamily;\n        helper = tCanvasHelper;\n      }\n\n      function measure(text) {\n        if (engine === 'svg') {\n          helper.textContent = text;\n          return helper.getComputedTextLength();\n        }\n\n        return helper.measureText(text).width;\n      }\n\n      return {\n        measureText: measure\n      };\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true;\n        return;\n      }\n\n      if (this.chars) {\n        this.isLoaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n\n      if (!document.body) {\n        this.isLoaded = true;\n        fontData.list.forEach(function (data) {\n          data.helper = createHelper(data);\n          data.cache = {};\n        });\n        this.fonts = fontData.list;\n        return;\n      }\n\n      var fontArr = fontData.list;\n      var i;\n      var len = fontArr.length;\n      var _pendingFonts = len;\n\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true;\n        var loadedSelector;\n        var j;\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');\n\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n          _pendingFonts -= 1;\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\n\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false;\n          }\n\n          if (shouldLoadFont) {\n            var s = createTag('style');\n            s.setAttribute('f-forigin', fontArr[i].fOrigin);\n            s.setAttribute('f-origin', fontArr[i].origin);\n            s.setAttribute('f-family', fontArr[i].fFamily);\n            s.type = 'text/css';\n            s.innerText = '@font-face {font-family: ' + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n            defs.appendChild(s);\n          }\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var l = createTag('link');\n            l.setAttribute('f-forigin', fontArr[i].fOrigin);\n            l.setAttribute('f-origin', fontArr[i].origin);\n            l.type = 'text/css';\n            l.rel = 'stylesheet';\n            l.href = fontArr[i].fPath;\n            document.body.appendChild(l);\n          }\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var sc = createTag('link');\n            sc.setAttribute('f-forigin', fontArr[i].fOrigin);\n            sc.setAttribute('f-origin', fontArr[i].origin);\n            sc.setAttribute('rel', 'stylesheet');\n            sc.setAttribute('href', fontArr[i].fPath);\n            defs.appendChild(sc);\n          }\n        }\n\n        fontArr[i].helper = createHelper(fontArr[i], defs);\n        fontArr[i].cache = {};\n        this.fonts.push(fontArr[i]);\n      }\n\n      if (_pendingFonts === 0) {\n        this.isLoaded = true;\n      } else {\n        // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\n        // Adding this timeout seems to fix it\n        setTimeout(this.checkLoadedFonts.bind(this), 100);\n      }\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n\n      if (!this.chars) {\n        this.chars = [];\n      }\n\n      var i;\n      var len = chars.length;\n      var j;\n      var jLen = this.chars.length;\n      var found;\n\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n\n          j += 1;\n        }\n\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n\n    function getCharData(_char, style, font) {\n      var i = 0;\n      var len = this.chars.length;\n\n      while (i < len) {\n        if (this.chars[i].ch === _char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n\n        i += 1;\n      }\n\n      if ((typeof _char === 'string' && _char.charCodeAt(0) !== 13 || !_char) && console && console.warn // eslint-disable-line no-console\n      && !this._warned) {\n        this._warned = true;\n        console.warn('Missing character from exported characters list: ', _char, style, font); // eslint-disable-line no-console\n      }\n\n      return emptyChar;\n    }\n\n    function measureText(_char2, fontName, size) {\n      var fontData = this.getFontByName(fontName);\n\n      var index = _char2.charCodeAt(0);\n\n      if (!fontData.cache[index + 1]) {\n        var tHelper = fontData.helper;\n\n        if (_char2 === ' ') {\n          var doubleSize = tHelper.measureText('|' + _char2 + '|');\n          var singleSize = tHelper.measureText('||');\n          fontData.cache[index + 1] = (doubleSize - singleSize) / 100;\n        } else {\n          fontData.cache[index + 1] = tHelper.measureText(_char2) / 100;\n        }\n      }\n\n      return fontData.cache[index + 1] * size;\n    }\n\n    function getFontByName(name) {\n      var i = 0;\n      var len = this.fonts.length;\n\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i];\n        }\n\n        i += 1;\n      }\n\n      return this.fonts[0];\n    }\n\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum = firstCharCode.toString(16) + secondCharCode.toString(16);\n      return surrogateModifiers.indexOf(sum) !== -1;\n    }\n\n    function isZeroWidthJoiner(firstCharCode, secondCharCode) {\n      if (!secondCharCode) {\n        return firstCharCode === zeroWidthJoiner[1];\n      }\n\n      return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];\n    }\n\n    function isCombinedCharacter(_char3) {\n      return combinedCharacters.indexOf(_char3) !== -1;\n    }\n\n    function setIsLoaded() {\n      this.isLoaded = true;\n    }\n\n    var Font = function Font() {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.isLoaded = false;\n      this._warned = false;\n      this.initTime = Date.now();\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this);\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\n    };\n\n    Font.isModifier = isModifier;\n    Font.isZeroWidthJoiner = isZeroWidthJoiner;\n    Font.isCombinedCharacter = isCombinedCharacter;\n    var fontPrototype = {\n      addChars: addChars,\n      addFonts: addFonts,\n      getCharData: getCharData,\n      getFontByName: getFontByName,\n      measureText: measureText,\n      checkLoadedFonts: checkLoadedFonts,\n      setIsLoaded: setIsLoaded\n    };\n    Font.prototype = fontPrototype;\n    return Font;\n  }();\n\n  function RenderableElement() {}\n\n  RenderableElement.prototype = {\n    initRenderable: function initRenderable() {\n      // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\n      this.isInRange = false; // layer's display state\n\n      this.hidden = false; // If layer's transparency equals 0, it can be hidden\n\n      this.isTransparent = false; // list of animated components\n\n      this.renderableComponents = [];\n    },\n    addRenderableComponent: function addRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component);\n      }\n    },\n    removeRenderableComponent: function removeRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\n      }\n    },\n    prepareRenderableFrame: function prepareRenderableFrame(num) {\n      this.checkLayerLimits(num);\n    },\n    checkTransparency: function checkTransparency() {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n    },\n\n    /**\r\n       * @function\r\n       * Initializes frame related properties.\r\n       *\r\n       * @param {number} num\r\n       * current frame number in Layer's time\r\n       *\r\n       */\n    checkLayerLimits: function checkLayerLimits(num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true;\n          this._mdf = true;\n          this.isInRange = true;\n          this.show();\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true;\n        this.isInRange = false;\n        this.hide();\n      }\n    },\n    renderRenderable: function renderRenderable() {\n      var i;\n      var len = this.renderableComponents.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame);\n      }\n      /* this.maskManager.renderFrame(this.finalTransform.mat);\r\n          this.renderableEffectsManager.renderFrame(this._isFirstFrame); */\n\n    },\n    sourceRectAtTime: function sourceRectAtTime() {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100\n      };\n    },\n    getLayerSize: function getLayerSize() {\n      if (this.data.ty === 5) {\n        return {\n          w: this.data.textData.width,\n          h: this.data.textData.height\n        };\n      }\n\n      return {\n        w: this.data.width,\n        h: this.data.height\n      };\n    }\n  };\n\n  var MaskManagerInterface = function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask;\n      this._data = data;\n    }\n\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function get() {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n\n        return this._mask.prop;\n      }\n    });\n    Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {\n      get: function get() {\n        if (this._mask.op.k) {\n          this._mask.op.getValue();\n        }\n\n        return this._mask.op.v * 100;\n      }\n    });\n\n    var MaskManager = function MaskManager(maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length);\n\n      var i;\n      var len = maskManager.viewData.length;\n\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n\n      var maskFunction = function maskFunction(name) {\n        i = 0;\n\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i];\n          }\n\n          i += 1;\n        }\n\n        return null;\n      };\n\n      return maskFunction;\n    };\n\n    return MaskManager;\n  }();\n\n  var ExpressionPropertyInterface = function () {\n    var defaultUnidimensionalValue = {\n      pv: 0,\n      v: 0,\n      mult: 1\n    };\n    var defaultMultidimensionalValue = {\n      pv: [0, 0, 0],\n      v: [0, 0, 0],\n      mult: 1\n    };\n\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, 'velocity', {\n        get: function get() {\n          return property.getVelocityAtTime(property.comp.currentFrame);\n        }\n      });\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\n\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        }\n\n        var value = '';\n\n        if ('s' in property.keyframes[pos - 1]) {\n          value = property.keyframes[pos - 1].s;\n        } else if ('e' in property.keyframes[pos - 2]) {\n          value = property.keyframes[pos - 2].e;\n        } else {\n          value = property.keyframes[pos - 2].s;\n        }\n\n        var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value); // eslint-disable-line no-new-wrappers\n\n        valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate;\n        valueProp.value = type === 'unidimensional' ? value[0] : value;\n        return valueProp;\n      };\n\n      expressionValue.valueAtTime = property.getValueAtTime;\n      expressionValue.speedAtTime = property.getSpeedAtTime;\n      expressionValue.velocityAtTime = property.getVelocityAtTime;\n      expressionValue.propertyGroup = property.propertyGroup;\n    }\n\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultUnidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var val = property.pv * mult;\n      var expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\n\n      expressionValue.value = val;\n      completeProperty(expressionValue, property, 'unidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        val = property.v * mult;\n\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\n\n          expressionValue.value = val;\n          completeProperty(expressionValue, property, 'unidimensional');\n        }\n\n        return expressionValue;\n      };\n    }\n\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultMultidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var len = property.data && property.data.l || property.pv.length;\n      var expressionValue = createTypedArray('float32', len);\n      var arrValue = createTypedArray('float32', len);\n      expressionValue.value = arrValue;\n      completeProperty(expressionValue, property, 'multidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property.v[i] * mult;\n          expressionValue[i] = arrValue[i];\n        }\n\n        return expressionValue;\n      };\n    } // TODO: try to avoid using this getter\n\n\n    function defaultGetter() {\n      return defaultUnidimensionalValue;\n    }\n\n    return function (property) {\n      if (!property) {\n        return defaultGetter;\n      }\n\n      if (property.propType === 'unidimensional') {\n        return UnidimensionalPropertyInterface(property);\n      }\n\n      return MultidimensionalPropertyInterface(property);\n    };\n  }();\n\n  var TransformExpressionInterface = function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case 'scale':\n          case 'Scale':\n          case 'ADBE Scale':\n          case 6:\n            return _thisFunction.scale;\n\n          case 'rotation':\n          case 'Rotation':\n          case 'ADBE Rotation':\n          case 'ADBE Rotate Z':\n          case 10:\n            return _thisFunction.rotation;\n\n          case 'ADBE Rotate X':\n            return _thisFunction.xRotation;\n\n          case 'ADBE Rotate Y':\n            return _thisFunction.yRotation;\n\n          case 'position':\n          case 'Position':\n          case 'ADBE Position':\n          case 2:\n            return _thisFunction.position;\n\n          case 'ADBE Position_0':\n            return _thisFunction.xPosition;\n\n          case 'ADBE Position_1':\n            return _thisFunction.yPosition;\n\n          case 'ADBE Position_2':\n            return _thisFunction.zPosition;\n\n          case 'anchorPoint':\n          case 'AnchorPoint':\n          case 'Anchor Point':\n          case 'ADBE AnchorPoint':\n          case 1:\n            return _thisFunction.anchorPoint;\n\n          case 'opacity':\n          case 'Opacity':\n          case 11:\n            return _thisFunction.opacity;\n\n          default:\n            return null;\n        }\n      }\n\n      Object.defineProperty(_thisFunction, 'rotation', {\n        get: ExpressionPropertyInterface(transform.r || transform.rz)\n      });\n      Object.defineProperty(_thisFunction, 'zRotation', {\n        get: ExpressionPropertyInterface(transform.rz || transform.r)\n      });\n      Object.defineProperty(_thisFunction, 'xRotation', {\n        get: ExpressionPropertyInterface(transform.rx)\n      });\n      Object.defineProperty(_thisFunction, 'yRotation', {\n        get: ExpressionPropertyInterface(transform.ry)\n      });\n      Object.defineProperty(_thisFunction, 'scale', {\n        get: ExpressionPropertyInterface(transform.s)\n      });\n\n      var _px;\n\n      var _py;\n\n      var _pz;\n\n      var _transformFactory;\n\n      if (transform.p) {\n        _transformFactory = ExpressionPropertyInterface(transform.p);\n      } else {\n        _px = ExpressionPropertyInterface(transform.px);\n        _py = ExpressionPropertyInterface(transform.py);\n\n        if (transform.pz) {\n          _pz = ExpressionPropertyInterface(transform.pz);\n        }\n      }\n\n      Object.defineProperty(_thisFunction, 'position', {\n        get: function get() {\n          if (transform.p) {\n            return _transformFactory();\n          }\n\n          return [_px(), _py(), _pz ? _pz() : 0];\n        }\n      });\n      Object.defineProperty(_thisFunction, 'xPosition', {\n        get: ExpressionPropertyInterface(transform.px)\n      });\n      Object.defineProperty(_thisFunction, 'yPosition', {\n        get: ExpressionPropertyInterface(transform.py)\n      });\n      Object.defineProperty(_thisFunction, 'zPosition', {\n        get: ExpressionPropertyInterface(transform.pz)\n      });\n      Object.defineProperty(_thisFunction, 'anchorPoint', {\n        get: ExpressionPropertyInterface(transform.a)\n      });\n      Object.defineProperty(_thisFunction, 'opacity', {\n        get: ExpressionPropertyInterface(transform.o)\n      });\n      Object.defineProperty(_thisFunction, 'skew', {\n        get: ExpressionPropertyInterface(transform.sk)\n      });\n      Object.defineProperty(_thisFunction, 'skewAxis', {\n        get: ExpressionPropertyInterface(transform.sa)\n      });\n      Object.defineProperty(_thisFunction, 'orientation', {\n        get: ExpressionPropertyInterface(transform.or)\n      });\n      return _thisFunction;\n    };\n  }();\n\n  var LayerExpressionInterface = function () {\n    function getMatrix(time) {\n      var toWorldMat = new Matrix();\n\n      if (time !== undefined) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time);\n\n        propMatrix.clone(toWorldMat);\n      } else {\n        var transformMat = this._elem.finalTransform.mProp;\n        transformMat.applyToMatrix(toWorldMat);\n      }\n\n      return toWorldMat;\n    }\n\n    function toWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.applyPoint(toWorldMat, arr);\n    }\n\n    function toWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.applyPoint(toWorldMat, arr);\n    }\n\n    function fromWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.invertPoint(toWorldMat, arr);\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.invertPoint(toWorldMat, arr);\n    }\n\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n\n      return matrix.inversePoint(arr);\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    function sampleImage() {\n      return [1, 1, 1, 1];\n    }\n\n    return function (elem) {\n      var transformInterface;\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\n      }\n\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Root Vectors Group':\n          case 'Contents':\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n\n          case 1:\n          case 6:\n          case 'Transform':\n          case 'transform':\n          case 'ADBE Transform Group':\n            return transformInterface;\n\n          case 4:\n          case 'ADBE Effect Parade':\n          case 'effects':\n          case 'Effects':\n            return _thisLayerFunction.effect;\n\n          case 'ADBE Text Properties':\n            return _thisLayerFunction.textInterface;\n\n          default:\n            return null;\n        }\n      }\n\n      _thisLayerFunction.getMatrix = getMatrix;\n      _thisLayerFunction.invertPoint = invertPoint;\n      _thisLayerFunction.applyPoint = applyPoint;\n      _thisLayerFunction.toWorld = toWorld;\n      _thisLayerFunction.toWorldVec = toWorldVec;\n      _thisLayerFunction.fromWorld = fromWorld;\n      _thisLayerFunction.fromWorldVec = fromWorldVec;\n      _thisLayerFunction.toComp = toWorld;\n      _thisLayerFunction.fromComp = fromComp;\n      _thisLayerFunction.sampleImage = sampleImage;\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\n      _thisLayerFunction._elem = elem;\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\n      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function get() {\n            return elem.hierarchy.length;\n          }\n        },\n        parent: {\n          get: function get() {\n            return elem.hierarchy[0].layerInterface;\n          }\n        },\n        rotation: getDescriptor(transformInterface, 'rotation'),\n        scale: getDescriptor(transformInterface, 'scale'),\n        position: getDescriptor(transformInterface, 'position'),\n        opacity: getDescriptor(transformInterface, 'opacity'),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function get() {\n            return transformInterface;\n          }\n        },\n        active: {\n          get: function get() {\n            return elem.isInRange;\n          }\n        }\n      });\n      _thisLayerFunction.startTime = elem.data.st;\n      _thisLayerFunction.index = elem.data.ind;\n      _thisLayerFunction.source = elem.data.refId;\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      _thisLayerFunction._name = elem.data.nm;\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var propertyGroupFactory = function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val) {\n        val = val === undefined ? 1 : val;\n\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n\n        return parentPropertyGroup(val - 1);\n      };\n    };\n  }();\n\n  var PropertyInterface = function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName\n      };\n\n      function _propertyGroup(val) {\n        val = val === undefined ? 1 : val;\n\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n\n        return propertyGroup(val - 1);\n      }\n\n      return _propertyGroup;\n    };\n  }();\n\n  var EffectsExpressionInterface = function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface\n    };\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = [];\n        var effectsData = elem.data.ef;\n        var i;\n        var len = elem.effectsManager.effectElements.length;\n\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem));\n        }\n\n        var effects = elem.data.ef || [];\n\n        var groupInterface = function groupInterface(name) {\n          i = 0;\n          len = effects.length;\n\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i];\n            }\n\n            i += 1;\n          }\n\n          return null;\n        };\n\n        Object.defineProperty(groupInterface, 'numProperties', {\n          get: function get() {\n            return effects.length;\n          }\n        });\n        return groupInterface;\n      }\n\n      return null;\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      function groupInterface(name) {\n        var effects = data.ef;\n        var i = 0;\n        var len = effects.length;\n\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i];\n            }\n\n            return effectElements[i]();\n          }\n\n          i += 1;\n        }\n\n        throw new Error();\n      }\n\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);\n\n      var effectElements = [];\n      var i;\n      var len = data.ef.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));\n        }\n      }\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function get() {\n            return effectElements[0]();\n          }\n        });\n      }\n\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function get() {\n            return data.np;\n          }\n        },\n        _name: {\n          value: data.nm\n        },\n        propertyGroup: {\n          value: _propertyGroup\n        }\n      });\n      groupInterface.enabled = data.en !== 0;\n      groupInterface.active = groupInterface.enabled;\n      return groupInterface;\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p);\n\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v);\n        }\n\n        return expressionProperty();\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface('', propertyGroup));\n      }\n\n      return interfaceFunction;\n    }\n\n    return ob;\n  }();\n\n  var CompExpressionInterface = function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0;\n        var len = comp.layers.length;\n\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface;\n          }\n\n          i += 1;\n        }\n\n        return null; // return {active:false};\n      }\n\n      Object.defineProperty(_thisLayerFunction, '_name', {\n        value: comp.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\n      _thisLayerFunction.displayStartTime = 0;\n      _thisLayerFunction.numLayers = comp.layers.length;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var ShapePathInterface = function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh;\n\n      function interfaceFunction(val) {\n        if (val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2) {\n          return interfaceFunction.path;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      prop.setGroupProperty(PropertyInterface('Path', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        shape: {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        ix: {\n          value: shape.ix\n        },\n        propertyIndex: {\n          value: shape.ix\n        },\n        mn: {\n          value: shape.mn\n        },\n        propertyGroup: {\n          value: propertyGroup\n        }\n      });\n      return interfaceFunction;\n    };\n  }();\n\n  var ShapeExpressionInterface = function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i;\n      var len = shapes ? shapes.length : 0;\n\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === 'gr') {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'fl') {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'st') {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'tm') {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'tr') {// arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty === 'el') {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'sr') {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'sh') {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rc') {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rd') {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rp') {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'gf') {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i], propertyGroup));\n        }\n      }\n\n      return arr;\n    }\n\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces;\n\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0;\n        var len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        if (typeof value === 'number') {\n          return interfaces[value - 1];\n        }\n\n        return null;\n      };\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n      interfaceFunction.numProperties = interfaces.length;\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.transform = transformInterface;\n      interfaceFunction.propertyIndex = shape.cix;\n      interfaceFunction._name = shape.nm;\n      return interfaceFunction;\n    }\n\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case 'ADBE Vectors Group':\n          case 'Contents':\n          case 2:\n            return interfaceFunction.content;\n          // Not necessary for now. Keeping them here in case a new case appears\n          // case 'ADBE Vector Transform Group':\n          // case 3:\n\n          default:\n            return interfaceFunction.transform;\n        }\n      };\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.content = content;\n      interfaceFunction.transform = transformInterface;\n      Object.defineProperty(interfaceFunction, '_name', {\n        get: function get() {\n          return shape.nm;\n        }\n      }); // interfaceFunction.content = interfaceFunction;\n\n      interfaceFunction.numProperties = shape.np;\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.nm = shape.nm;\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface('Color', propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));\n      return interfaceFunction;\n    }\n\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Start Point' || val === 'start point') {\n          return interfaceFunction.startPoint;\n        }\n\n        if (val === 'End Point' || val === 'end point') {\n          return interfaceFunction.endPoint;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        type: {\n          get: function get() {\n            return 'a';\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.s.setGroupProperty(PropertyInterface('Start Point', propertyGroup));\n      view.e.setGroupProperty(PropertyInterface('End Point', propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));\n      return interfaceFunction;\n    }\n\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null;\n      }\n\n      return interfaceFunction;\n    }\n\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);\n\n      function addPropertyToDashOb(i) {\n        Object.defineProperty(dashOb, shape.d[i].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i].p)\n        });\n      }\n\n      var i;\n      var len = shape.d ? shape.d.length : 0;\n      var dashOb = {};\n\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i);\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n      }\n\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (val === 'Stroke Width' || val === 'stroke width') {\n          return interfaceFunction.strokeWidth;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w)\n        },\n        dash: {\n          get: function get() {\n            return dashOb;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup));\n      return interfaceFunction;\n    }\n\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === 'End' || val === 'end') {\n          return interfaceFunction.end;\n        }\n\n        if (val === shape.s.ix) {\n          return interfaceFunction.start;\n        }\n\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      interfaceFunction.propertyIndex = shape.ix;\n      view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup));\n      view.e.setGroupProperty(PropertyInterface('End', _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.propertyGroup = propertyGroup;\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === 'Anchor Point') {\n          return interfaceFunction.anchorPoint;\n        }\n\n        if (shape.o.ix === value || value === 'Opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (shape.p.ix === value || value === 'Position') {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.s.ix === value || value === 'Scale') {\n          return interfaceFunction.scale;\n        }\n\n        if (shape.sk && shape.sk.ix === value || value === 'Skew') {\n          return interfaceFunction.skew;\n        }\n\n        if (shape.sa && shape.sa.ix === value || value === 'Skew Axis') {\n          return interfaceFunction.skewAxis;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup));\n      view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup));\n      view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup));\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup));\n      }\n\n      view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o)\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p)\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a)\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r)\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk)\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.ty = 'tr';\n      interfaceFunction.mn = shape.mn;\n      interfaceFunction.propertyGroup = propertyGroup;\n      return interfaceFunction;\n    }\n\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.s.ix === value) {\n          return interfaceFunction.size;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      interfaceFunction.propertyIndex = shape.ix;\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points;\n        }\n\n        if (shape.or.ix === value || value === 'ADBE Vector Star Outer Radius') {\n          return interfaceFunction.outerRadius;\n        }\n\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness;\n        }\n\n        if (shape.ir && (shape.ir.ix === value || value === 'ADBE Vector Star Inner Radius')) {\n          return interfaceFunction.innerRadius;\n        }\n\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup));\n      prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup));\n      prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup));\n        prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup));\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt)\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or)\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os)\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir)\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness;\n        }\n\n        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\n          return interfaceFunction.size;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || value === 'Round Corners 1') {\n          return interfaceFunction.radius;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || value === 'Copies') {\n          return interfaceFunction.copies;\n        }\n\n        if (shape.o.ix === value || value === 'Offset') {\n          return interfaceFunction.offset;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup));\n      prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    return function (shapes, view, propertyGroup) {\n      var interfaces;\n\n      function _interfaceFunction(value) {\n        if (typeof value === 'number') {\n          value = value === undefined ? 1 : value;\n\n          if (value === 0) {\n            return propertyGroup;\n          }\n\n          return interfaces[value - 1];\n        }\n\n        var i = 0;\n        var len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        return null;\n      }\n\n      function parentGroupWrapper() {\n        return propertyGroup;\n      }\n\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);\n      _interfaceFunction.numProperties = interfaces.length;\n      _interfaceFunction._name = 'Contents';\n      return _interfaceFunction;\n    };\n  }();\n\n  var TextExpressionInterface = function () {\n    return function (elem) {\n      var _prevValue;\n\n      var _sourceText;\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Text Document':\n            return _thisLayerFunction.sourceText;\n\n          default:\n            return null;\n        }\n      }\n\n      Object.defineProperty(_thisLayerFunction, 'sourceText', {\n        get: function get() {\n          elem.textProperty.getValue();\n          var stringValue = elem.textProperty.currentData.t;\n\n          if (stringValue !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue;\n            _sourceText = new String(stringValue); // eslint-disable-line no-new-wrappers\n            // If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\n\n            _sourceText.value = stringValue || new String(stringValue); // eslint-disable-line no-new-wrappers\n          }\n\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n\n  var getBlendMode = function () {\n    var blendModeEnums = {\n      0: 'source-over',\n      1: 'multiply',\n      2: 'screen',\n      3: 'overlay',\n      4: 'darken',\n      5: 'lighten',\n      6: 'color-dodge',\n      7: 'color-burn',\n      8: 'hard-light',\n      9: 'soft-light',\n      10: 'difference',\n      11: 'exclusion',\n      12: 'hue',\n      13: 'saturation',\n      14: 'color',\n      15: 'luminosity'\n    };\n    return function (mode) {\n      return blendModeEnums[mode] || '';\n    };\n  }();\n\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function NoValueEffect() {\n    this.p = {};\n  }\n\n  function EffectsManager(data, element) {\n    var effects = data.ef || [];\n    this.effectElements = [];\n    var i;\n    var len = effects.length;\n    var effectItem;\n\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element);\n      this.effectElements.push(effectItem);\n    }\n  }\n\n  function GroupEffect(data, element) {\n    this.init(data, element);\n  }\n\n  extendPrototype([DynamicPropertyContainer], GroupEffect);\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\n\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data;\n    this.effectElements = [];\n    this.initDynamicPropertyContainer(element);\n    var i;\n    var len = this.data.ef.length;\n    var eff;\n    var effects = this.data.ef;\n\n    for (i = 0; i < len; i += 1) {\n      eff = null;\n\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this);\n          break;\n\n        case 1:\n          eff = new AngleEffect(effects[i], element, this);\n          break;\n\n        case 2:\n          eff = new ColorEffect(effects[i], element, this);\n          break;\n\n        case 3:\n          eff = new PointEffect(effects[i], element, this);\n          break;\n\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this);\n          break;\n\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this);\n          break;\n\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this);\n          break;\n\n        case 5:\n          eff = new EffectsManager(effects[i], element, this);\n          break;\n        // case 6:\n\n        default:\n          eff = new NoValueEffect(effects[i], element, this);\n          break;\n      }\n\n      if (eff) {\n        this.effectElements.push(eff);\n      }\n    }\n  };\n\n  function BaseElement() {}\n\n  BaseElement.prototype = {\n    checkMasks: function checkMasks() {\n      if (!this.data.hasMask) {\n        return false;\n      }\n\n      var i = 0;\n      var len = this.data.masksProperties.length;\n\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    initExpressions: function initExpressions() {\n      this.layerInterface = LayerExpressionInterface(this);\n\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager);\n      }\n\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n      this.layerInterface.registerEffectsInterface(effectsInterface);\n\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this);\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\n        this.layerInterface.content = this.layerInterface.shapeInterface;\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this);\n        this.layerInterface.text = this.layerInterface.textInterface;\n      }\n    },\n    setBlendMode: function setBlendMode() {\n      var blendModeValue = getBlendMode(this.data.bm);\n      var elem = this.baseElement || this.layerElement;\n      elem.style['mix-blend-mode'] = blendModeValue;\n    },\n    initBaseData: function initBaseData(data, globalData, comp) {\n      this.globalData = globalData;\n      this.comp = comp;\n      this.data = data;\n      this.layerId = createElementID(); // Stretch factor for old animations missing this property.\n\n      if (!this.data.sr) {\n        this.data.sr = 1;\n      } // effects manager\n\n\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n    },\n    getType: function getType() {\n      return this.type;\n    },\n    sourceRectAtTime: function sourceRectAtTime() {}\n  };\n  /**\r\n   * @file\r\n   * Handles element's layer frame update.\r\n   * Checks layer in point and out point\r\n   *\r\n   */\n\n  function FrameElement() {}\n\n  FrameElement.prototype = {\n    /**\r\n       * @function\r\n       * Initializes frame related properties.\r\n       *\r\n       */\n    initFrame: function initFrame() {\n      // set to true when inpoint is rendered\n      this._isFirstFrame = false; // list of animated properties\n\n      this.dynamicProperties = []; // If layer has been modified in current tick this will be true\n\n      this._mdf = false;\n    },\n\n    /**\r\n       * @function\r\n       * Calculates all dynamic values\r\n       *\r\n       * @param {number} num\r\n       * current frame number in Layer's time\r\n       * @param {boolean} isVisible\r\n       * if layers is currently in range\r\n       *\r\n       */\n    prepareProperties: function prepareProperties(num, isVisible) {\n      var i;\n      var len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || this._isParent && this.dynamicProperties[i].propType === 'transform') {\n          this.dynamicProperties[i].getValue();\n\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true;\n            this._mdf = true;\n          }\n        }\n      }\n    },\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n      }\n    }\n  };\n\n  function _typeof$2(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof$2 = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof$2 = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof$2(obj);\n  }\n\n  var FootageInterface = function () {\n    var outlineInterfaceFactory = function outlineInterfaceFactory(elem) {\n      var currentPropertyName = '';\n      var currentProperty = elem.getFootageData();\n\n      function init() {\n        currentPropertyName = '';\n        currentProperty = elem.getFootageData();\n        return searchProperty;\n      }\n\n      function searchProperty(value) {\n        if (currentProperty[value]) {\n          currentPropertyName = value;\n          currentProperty = currentProperty[value];\n\n          if (_typeof$2(currentProperty) === 'object') {\n            return searchProperty;\n          }\n\n          return currentProperty;\n        }\n\n        var propertyNameIndex = value.indexOf(currentPropertyName);\n\n        if (propertyNameIndex !== -1) {\n          var index = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10);\n          currentProperty = currentProperty[index];\n\n          if (_typeof$2(currentProperty) === 'object') {\n            return searchProperty;\n          }\n\n          return currentProperty;\n        }\n\n        return '';\n      }\n\n      return init;\n    };\n\n    var dataInterfaceFactory = function dataInterfaceFactory(elem) {\n      function interfaceFunction(value) {\n        if (value === 'Outline') {\n          return interfaceFunction.outlineInterface();\n        }\n\n        return null;\n      }\n\n      interfaceFunction._name = 'Outline';\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem);\n      return interfaceFunction;\n    };\n\n    return function (elem) {\n      function _interfaceFunction(value) {\n        if (value === 'Data') {\n          return _interfaceFunction.dataInterface;\n        }\n\n        return null;\n      }\n\n      _interfaceFunction._name = 'Data';\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem);\n      return _interfaceFunction;\n    };\n  }();\n\n  function FootageElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.footageData = globalData.imageLoader.getAsset(this.assetData);\n    this.initBaseData(data, globalData, comp);\n  }\n\n  FootageElement.prototype.prepareFrame = function () {};\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);\n\n  FootageElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  FootageElement.prototype.renderFrame = function () {};\n\n  FootageElement.prototype.destroy = function () {};\n\n  FootageElement.prototype.initExpressions = function () {\n    this.layerInterface = FootageInterface(this);\n  };\n\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData;\n  };\n\n  function AudioElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initBaseData(data, globalData, comp);\n    this._isPlaying = false;\n    this._canPlay = false;\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.audio = this.globalData.audioController.createAudio(assetPath);\n    this._currentTime = 0;\n    this.globalData.audioController.addAudio(this);\n    this._volumeMultiplier = 1;\n    this._volume = 1;\n    this._previousVolume = null;\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n    this.lv = PropertyFactory.getProp(this, data.au && data.au.lv ? data.au.lv : {\n      k: [100]\n    }, 1, 0.01, this);\n  }\n\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true);\n    this.prepareProperties(num, true);\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      this._currentTime = timeRemapped;\n    } else {\n      this._currentTime = num / this.data.sr;\n    }\n\n    this._volume = this.lv.v[0];\n    var totalVolume = this._volume * this._volumeMultiplier;\n\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume;\n      this.audio.volume(totalVolume);\n    }\n  };\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);\n\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play();\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n        this._isPlaying = true;\n      } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n      }\n    }\n  };\n\n  AudioElement.prototype.show = function () {// this.audio.play()\n  };\n\n  AudioElement.prototype.hide = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n  };\n\n  AudioElement.prototype.pause = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n    this._canPlay = false;\n  };\n\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true;\n  };\n\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue);\n  };\n\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue;\n    this._previousVolume = volumeValue * this._volume;\n    this.audio.volume(this._previousVolume);\n  };\n\n  AudioElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  AudioElement.prototype.destroy = function () {};\n\n  AudioElement.prototype.sourceRectAtTime = function () {};\n\n  AudioElement.prototype.initExpressions = function () {};\n\n  function BaseRenderer() {}\n\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i;\n    var len = this.layers.length;\n    var data;\n    this.completeLayers = true;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data = this.layers[i];\n\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n\n      case 0:\n        return this.createComp(layer);\n\n      case 1:\n        return this.createSolid(layer);\n\n      case 3:\n        return this.createNull(layer);\n\n      case 4:\n        return this.createShape(layer);\n\n      case 5:\n        return this.createText(layer);\n\n      case 6:\n        return this.createAudio(layer);\n\n      case 13:\n        return this.createCamera(layer);\n\n      case 15:\n        return this.createFootage(layer);\n\n      default:\n        return this.createNull(layer);\n    }\n  };\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\n  };\n\n  BaseRenderer.prototype.createAudio = function (data) {\n    return new AudioElement(data, this.globalData, this);\n  };\n\n  BaseRenderer.prototype.createFootage = function (data) {\n    return new FootageElement(data, this.globalData, this);\n  };\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i;\n    var len = newLayers.length;\n    var j;\n    var jLen = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n\n        j += 1;\n      }\n    }\n  };\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0;\n    var len = layers.length;\n\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        // eslint-disable-line eqeqeq\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i].setAsParent();\n\n          if (layers[i].parent !== undefined) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy);\n          } else {\n            element.setHierarchy(hierarchy);\n          }\n        }\n      }\n\n      i += 1;\n    }\n  };\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i]);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift();\n    var element;\n\n    if (typeof pathValue === 'number') {\n      element = this.elements[pathValue];\n    } else {\n      var i;\n      var len = this.elements.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i];\n          break;\n        }\n      }\n    }\n\n    if (path.length === 0) {\n      return element;\n    }\n\n    return element.getElementByPath(path);\n  };\n\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\n    this.globalData.audioController = this.animationItem.audioController;\n    this.globalData.frameId = 0;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n  };\n\n  function TransformElement() {}\n\n  TransformElement.prototype = {\n    initTransform: function initTransform() {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n          o: 0\n        },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix()\n      };\n\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      } // TODO: check TYPE 11: Guided elements\n\n\n      if (this.data.ty !== 11) {// this.createElements();\n      }\n    },\n    renderTransform: function renderTransform() {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\n\n      if (this.hierarchy) {\n        var mat;\n        var finalMat = this.finalTransform.mat;\n        var i = 0;\n        var len = this.hierarchy.length; // Checking if any of the transformation matrices in the hierarchy chain has changed.\n\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true;\n              break;\n            }\n\n            i += 1;\n          }\n        }\n\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props;\n            finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n          }\n        }\n      }\n    },\n    globalToLocal: function globalToLocal(pt) {\n      var transforms = [];\n      transforms.push(this.finalTransform);\n      var flag = true;\n      var comp = this.comp;\n\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform);\n          }\n\n          comp = comp.comp;\n        } else {\n          flag = false;\n        }\n      }\n\n      var i;\n      var len = transforms.length;\n      var ptNew;\n\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0); // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n      }\n\n      return pt;\n    },\n    mHelper: new Matrix()\n  };\n\n  function MaskElement(data, element, globalData) {\n    this.data = data;\n    this.element = element;\n    this.globalData = globalData;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties || [];\n    this.maskElement = null;\n    var defs = this.globalData.defs;\n    var i;\n    var len = this.masksProperties ? this.masksProperties.length : 0;\n    this.viewData = createSizedArray(len);\n    this.solidPath = '';\n    var path;\n    var properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j;\n    var jLen;\n    var layerId = createElementID();\n    var rect;\n    var expansor;\n    var feMorph;\n    var x;\n    var maskType = 'clipPath';\n    var maskRef = 'clip-path';\n\n    for (i = 0; i < len; i += 1) {\n      if (properties[i].mode !== 'a' && properties[i].mode !== 'n' || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\n        maskType = 'mask';\n        maskRef = 'mask';\n      }\n\n      if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {\n        rect = createNS('rect');\n        rect.setAttribute('fill', '#ffffff');\n        rect.setAttribute('width', this.element.comp.data.w || 0);\n        rect.setAttribute('height', this.element.comp.data.h || 0);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n\n      path = createNS('path');\n\n      if (properties[i].mode === 'n') {\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: ''\n        };\n        defs.appendChild(path);\n      } else {\n        count += 1;\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');\n        path.setAttribute('clip-rule', 'nonzero');\n        var filterID;\n\n        if (properties[i].x.k !== 0) {\n          maskType = 'mask';\n          maskRef = 'mask';\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\n          filterID = createElementID();\n          expansor = createNS('filter');\n          expansor.setAttribute('id', filterID);\n          feMorph = createNS('feMorphology');\n          feMorph.setAttribute('operator', 'erode');\n          feMorph.setAttribute('in', 'SourceGraphic');\n          feMorph.setAttribute('radius', '0');\n          expansor.appendChild(feMorph);\n          defs.appendChild(expansor);\n          path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');\n        } else {\n          feMorph = null;\n          x = null;\n        } // TODO move this to a factory or to a constructor\n\n\n        this.storedData[i] = {\n          elem: path,\n          x: x,\n          expan: feMorph,\n          lastPath: '',\n          lastOperator: '',\n          filterId: filterID,\n          lastRadius: 0\n        };\n\n        if (properties[i].mode === 'i') {\n          jLen = currentMasks.length;\n          var g = createNS('g');\n\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j]);\n          }\n\n          var mask = createNS('mask');\n          mask.setAttribute('mask-type', 'alpha');\n          mask.setAttribute('id', layerId + '_' + count);\n          mask.appendChild(path);\n          defs.appendChild(mask);\n          g.setAttribute('mask', 'url(' + getLocationHref() + '#' + layerId + '_' + count + ')');\n          currentMasks.length = 0;\n          currentMasks.push(g);\n        } else {\n          currentMasks.push(path);\n        }\n\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath();\n        } // TODO move this to a factory or to a constructor\n\n\n        this.viewData[i] = {\n          elem: path,\n          lastPath: '',\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect\n        };\n\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n        }\n      }\n    }\n\n    this.maskElement = createNS(maskType);\n    len = currentMasks.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n\n    if (count > 0) {\n      this.maskElement.setAttribute('id', layerId);\n      this.element.maskedElement.setAttribute(maskRef, 'url(' + getLocationHref() + '#' + layerId + ')');\n      defs.appendChild(this.maskElement);\n    }\n\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat;\n    var i;\n    var len = this.masksProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);\n      }\n\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS());\n        }\n\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan;\n\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode';\n              this.storedData[i].elem.setAttribute('filter', 'url(' + getLocationHref() + '#' + this.storedData[i].filterId + ')');\n            }\n\n            feMorph.setAttribute('radius', -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate';\n              this.storedData[i].elem.setAttribute('filter', null);\n            }\n\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n  };\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 ';\n    path += ' h' + this.globalData.compSize.w;\n    path += ' v' + this.globalData.compSize.h;\n    path += ' h-' + this.globalData.compSize.w;\n    path += ' v-' + this.globalData.compSize.h + ' ';\n    return path;\n  };\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    var i;\n    var len;\n    len = pathNodes._length;\n\n    for (i = 1; i < len; i += 1) {\n      // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + ' ' + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];\n    } // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n\n\n    if (pathNodes.c && len > 1) {\n      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + ' ' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    } // pathNodes.__renderedString = pathString;\n\n\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = '';\n\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\n        }\n\n        viewData.elem.setAttribute('d', pathShapeValue);\n      }\n\n      viewData.lastPath = pathString;\n    }\n  };\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n\n  var filtersFactory = function () {\n    var ob = {};\n    ob.createFilter = createFilter;\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS('filter');\n      fil.setAttribute('id', filId);\n\n      if (skipCoordinates !== true) {\n        fil.setAttribute('filterUnits', 'objectBoundingBox');\n        fil.setAttribute('x', '0%');\n        fil.setAttribute('y', '0%');\n        fil.setAttribute('width', '100%');\n        fil.setAttribute('height', '100%');\n      }\n\n      return fil;\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS('feColorMatrix');\n      feColorMatrix.setAttribute('type', 'matrix');\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\n      return feColorMatrix;\n    }\n\n    return ob;\n  }();\n\n  var featureSupport = function () {\n    var ob = {\n      maskType: true\n    };\n\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob.maskType = false;\n    }\n\n    return ob;\n  }();\n\n  var registeredEffects = {};\n  var idPrefix = 'filter_result_';\n\n  function SVGEffects(elem) {\n    var i;\n    var source = 'SourceGraphic';\n    var len = elem.data.ef ? elem.data.ef.length : 0;\n    var filId = createElementID();\n    var fil = filtersFactory.createFilter(filId, true);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n      var type = elem.data.ef[i].ty;\n\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect;\n        filterManager = new Effect(fil, elem.effectsManager.effectElements[i], elem, idPrefix + count, source);\n        source = idPrefix + count;\n\n        if (registeredEffects[type].countsAsEffect) {\n          count += 1;\n        }\n      }\n\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n\n    if (count) {\n      elem.globalData.defs.appendChild(fil);\n      elem.layerElement.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n    }\n\n    if (this.filters.length) {\n      elem.addRenderableComponent(this);\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i;\n    var len = this.filters.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n\n  function registerEffect(id, effect, countsAsEffect) {\n    registeredEffects[id] = {\n      effect: effect,\n      countsAsEffect: countsAsEffect\n    };\n  }\n\n  function SVGBaseElement() {}\n\n  SVGBaseElement.prototype = {\n    initRendererElement: function initRendererElement() {\n      this.layerElement = createNS('g');\n    },\n    createContainerElements: function createContainerElements() {\n      this.matteElement = createNS('g');\n      this.transformedElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n      this._sizeChanged = false;\n      var layerElementParent = null; // If this layer acts as a mask for the following layer\n\n      var filId;\n      var fil;\n      var gg;\n\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          // eslint-disable-line eqeqeq\n          var masker = createNS('mask');\n          masker.setAttribute('id', this.layerId);\n          masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha'); // eslint-disable-line eqeqeq\n\n          masker.appendChild(this.layerElement);\n          layerElementParent = masker;\n          this.globalData.defs.appendChild(masker); // This is only for IE and Edge when mask if of type alpha\n\n          if (!featureSupport.maskType && this.data.td == 1) {\n            // eslint-disable-line eqeqeq\n            masker.setAttribute('mask-type', 'luminance');\n            filId = createElementID();\n            fil = filtersFactory.createFilter(filId);\n            this.globalData.defs.appendChild(fil);\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            masker.appendChild(gg);\n            gg.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n          }\n        } else if (this.data.td == 2) {\n          // eslint-disable-line eqeqeq\n          var maskGroup = createNS('mask');\n          maskGroup.setAttribute('id', this.layerId);\n          maskGroup.setAttribute('mask-type', 'alpha');\n          var maskGrouper = createNS('g');\n          maskGroup.appendChild(maskGrouper);\n          filId = createElementID();\n          fil = filtersFactory.createFilter(filId); /// /\n          // This solution doesn't work on Android when meta tag with viewport attribute is set\n\n          /* var feColorMatrix = createNS('feColorMatrix');\r\n                  feColorMatrix.setAttribute('type', 'matrix');\r\n                  feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                  feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                  fil.appendChild(feColorMatrix); */\n          /// /\n\n          var feCTr = createNS('feComponentTransfer');\n          feCTr.setAttribute('in', 'SourceGraphic');\n          fil.appendChild(feCTr);\n          var feFunc = createNS('feFuncA');\n          feFunc.setAttribute('type', 'table');\n          feFunc.setAttribute('tableValues', '1.0 0.0');\n          feCTr.appendChild(feFunc); /// /\n\n          this.globalData.defs.appendChild(fil);\n          var alphaRect = createNS('rect');\n          alphaRect.setAttribute('width', this.comp.data.w);\n          alphaRect.setAttribute('height', this.comp.data.h);\n          alphaRect.setAttribute('x', '0');\n          alphaRect.setAttribute('y', '0');\n          alphaRect.setAttribute('fill', '#ffffff');\n          alphaRect.setAttribute('opacity', '0');\n          maskGrouper.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n          maskGrouper.appendChild(alphaRect);\n          maskGrouper.appendChild(this.layerElement);\n          layerElementParent = maskGrouper;\n\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute('mask-type', 'luminance');\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            maskGrouper.appendChild(alphaRect);\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            maskGrouper.appendChild(gg);\n          }\n\n          this.globalData.defs.appendChild(maskGroup);\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      } // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\n\n\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS('clipPath');\n        var pt = createNS('path');\n        pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\n        var clipId = createElementID();\n        cp.setAttribute('id', clipId);\n        cp.appendChild(pt);\n        this.globalData.defs.appendChild(cp);\n\n        if (this.checkMasks()) {\n          var cpGroup = createNS('g');\n          cpGroup.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');\n          cpGroup.appendChild(this.layerElement);\n          this.transformedElement = cpGroup;\n\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement);\n          } else {\n            this.baseElement = this.transformedElement;\n          }\n        } else {\n          this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');\n        }\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\n      }\n\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\n      }\n    },\n    destroyBaseElement: function destroyBaseElement() {\n      this.layerElement = null;\n      this.matteElement = null;\n      this.maskManager.destroy();\n    },\n    getBaseElement: function getBaseElement() {\n      if (this.data.hd) {\n        return null;\n      }\n\n      return this.baseElement;\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n      this.renderableEffectsManager = new SVGEffects(this);\n    },\n    setMatte: function setMatte(id) {\n      if (!this.matteElement) {\n        return;\n      }\n\n      this.matteElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');\n    }\n  };\n  /**\r\n   * @file\r\n   * Handles AE's layer parenting property.\r\n   *\r\n   */\n\n  function HierarchyElement() {}\n\n  HierarchyElement.prototype = {\n    /**\r\n       * @function\r\n       * Initializes hierarchy properties\r\n       *\r\n       */\n    initHierarchy: function initHierarchy() {\n      // element's parent list\n      this.hierarchy = []; // if element is parent of another layer _isParent will be true\n\n      this._isParent = false;\n      this.checkParenting();\n    },\n\n    /**\r\n       * @function\r\n       * Sets layer's hierarchy.\r\n       * @param {array} hierarch\r\n       * layer's parent list\r\n       *\r\n       */\n    setHierarchy: function setHierarchy(hierarchy) {\n      this.hierarchy = hierarchy;\n    },\n\n    /**\r\n       * @function\r\n       * Sets layer as parent.\r\n       *\r\n       */\n    setAsParent: function setAsParent() {\n      this._isParent = true;\n    },\n\n    /**\r\n       * @function\r\n       * Searches layer's parenting chain\r\n       *\r\n       */\n    checkParenting: function checkParenting() {\n      if (this.data.parent !== undefined) {\n        this.comp.buildElementParenting(this, this.data.parent, []);\n      }\n    }\n  };\n\n  function RenderableDOMElement() {}\n\n  (function () {\n    var _prototype = {\n      initElement: function initElement(data, globalData, comp) {\n        this.initFrame();\n        this.initBaseData(data, globalData, comp);\n        this.initTransform(data, globalData, comp);\n        this.initHierarchy();\n        this.initRenderable();\n        this.initRendererElement();\n        this.createContainerElements();\n        this.createRenderableComponents();\n        this.createContent();\n        this.hide();\n      },\n      hide: function hide() {\n        // console.log('HIDE', this);\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement;\n          elem.style.display = 'none';\n          this.hidden = true;\n        }\n      },\n      show: function show() {\n        // console.log('SHOW', this);\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement;\n            elem.style.display = 'block';\n          }\n\n          this.hidden = false;\n          this._isFirstFrame = true;\n        }\n      },\n      renderFrame: function renderFrame() {\n        // If it is exported as hidden (data.hd === true) no need to render\n        // If it is not visible no need to render\n        if (this.data.hd || this.hidden) {\n          return;\n        }\n\n        this.renderTransform();\n        this.renderRenderable();\n        this.renderElement();\n        this.renderInnerContent();\n\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false;\n        }\n      },\n      renderInnerContent: function renderInnerContent() {},\n      prepareFrame: function prepareFrame(num) {\n        this._mdf = false;\n        this.prepareRenderableFrame(num);\n        this.prepareProperties(num, this.isInRange);\n        this.checkTransparency();\n      },\n      destroy: function destroy() {\n        this.innerElem = null;\n        this.destroyBaseElement();\n      }\n    };\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\n  })();\n\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\n\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.innerElem = createNS('image');\n    this.innerElem.setAttribute('width', this.assetData.w + 'px');\n    this.innerElem.setAttribute('height', this.assetData.h + 'px');\n    this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n    this.layerElement.appendChild(this.innerElem);\n  };\n\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect;\n  };\n\n  function ProcessedElement(element, position) {\n    this.elem = element;\n    this.pos = position;\n  }\n\n  function IShapeElement() {}\n\n  IShapeElement.prototype = {\n    addShapeToModifiers: function addShapeToModifiers(data) {\n      var i;\n      var len = this.shapeModifiers.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data);\n      }\n    },\n    isShapeInAnimatedModifiers: function isShapeInAnimatedModifiers(data) {\n      var i = 0;\n      var len = this.shapeModifiers.length;\n\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    renderModifiers: function renderModifiers() {\n      if (!this.shapeModifiers.length) {\n        return;\n      }\n\n      var i;\n      var len = this.shapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset();\n      }\n\n      len = this.shapeModifiers.length;\n      var shouldBreakProcess;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame); // workaround to fix cases where a repeater resets the shape so the following processes get called twice\n        // TODO: find a better solution for this\n\n        if (shouldBreakProcess) {\n          break;\n        }\n      }\n    },\n    searchProcessedElement: function searchProcessedElement(elem) {\n      var elements = this.processedElements;\n      var i = 0;\n      var len = elements.length;\n\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos;\n        }\n\n        i += 1;\n      }\n\n      return 0;\n    },\n    addProcessedElement: function addProcessedElement(elem, pos) {\n      var elements = this.processedElements;\n      var i = elements.length;\n\n      while (i) {\n        i -= 1;\n\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos;\n          return;\n        }\n      }\n\n      elements.push(new ProcessedElement(elem, pos));\n    },\n    prepareFrame: function prepareFrame(num) {\n      this.prepareRenderableFrame(num);\n      this.prepareProperties(num, this.isInRange);\n    }\n  };\n  var lineCapEnum = {\n    1: 'butt',\n    2: 'round',\n    3: 'square'\n  };\n  var lineJoinEnum = {\n    1: 'miter',\n    2: 'round',\n    3: 'bevel'\n  };\n\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = [];\n    this.styles = [];\n    this.transformers = transformers;\n    this.lStr = '';\n    this.sh = shape;\n    this.lvl = level; // TODO find if there are some cases where _isAnimated can be false.\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\n\n    this._isAnimated = !!shape.k; // TODO: commenting this for now since all shapes are animated\n\n    var i = 0;\n    var len = transformers.length;\n\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true;\n        break;\n      }\n\n      i += 1;\n    }\n  }\n\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true;\n  };\n\n  function SVGStyleData(data, level) {\n    this.data = data;\n    this.type = data.ty;\n    this.d = '';\n    this.lvl = level;\n    this._mdf = false;\n    this.closed = data.hd === true;\n    this.pElem = createNS('path');\n    this.msElem = null;\n  }\n\n  SVGStyleData.prototype.reset = function () {\n    this.d = '';\n    this._mdf = false;\n  };\n\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem;\n    this.frameId = -1;\n    this.dataProps = createSizedArray(data.length);\n    this.renderer = renderer;\n    this.k = false;\n    this.dashStr = '';\n    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);\n    this.dashoffset = createTypedArray('float32', 1);\n    this.initDynamicPropertyContainer(container);\n    var i;\n    var len = data.length || 0;\n    var prop;\n\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);\n      this.k = prop.k || this.k;\n      this.dataProps[i] = {\n        n: data[i].n,\n        p: prop\n      };\n    }\n\n    if (!this.k) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = this.k;\n  }\n\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n    this._mdf = this._mdf || forceRender;\n\n    if (this._mdf) {\n      var i = 0;\n      var len = this.dataProps.length;\n\n      if (this.renderer === 'svg') {\n        this.dashStr = '';\n      }\n\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== 'o') {\n          if (this.renderer === 'svg') {\n            this.dashStr += ' ' + this.dataProps[i].p.v;\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v;\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v;\n        }\n      }\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], DashProperty);\n\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n\n  function SVGNoStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData);\n\n  function GradientProperty(elem, data, container) {\n    this.data = data;\n    this.c = createTypedArray('uint8c', data.p * 4);\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;\n    this.o = createTypedArray('float32', cLength);\n    this._cmdf = false;\n    this._omdf = false;\n    this._collapsable = this.checkCollapsable();\n    this._hasOpacity = cLength;\n    this.initDynamicPropertyContainer(container);\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);\n    this.k = this.prop.k;\n    this.getValue(true);\n  }\n\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0;\n    var len = this.o.length / 2;\n    var diff;\n\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\n\n      if (diff > 0.01) {\n        return false;\n      }\n\n      i += 1;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false;\n    }\n\n    if (this.data.k.k[0].s) {\n      var i = 0;\n      var len = this.data.k.k.length;\n\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false;\n        }\n\n        i += 1;\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue();\n    this._mdf = false;\n    this._cmdf = false;\n    this._omdf = false;\n\n    if (this.prop._mdf || forceRender) {\n      var i;\n      var len = this.data.p * 4;\n      var mult;\n      var val;\n\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255;\n        val = Math.round(this.prop.v[i] * mult);\n\n        if (this.c[i] !== val) {\n          this.c[i] = val;\n          this._cmdf = !forceRender;\n        }\n      }\n\n      if (this.o.length) {\n        len = this.prop.v.length;\n\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1;\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val;\n            this._omdf = !forceRender;\n          }\n        }\n      }\n\n      this._mdf = !forceRender;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], GradientProperty);\n\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.initGradientData(elem, data, styleOb);\n  }\n\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);\n    this.h = PropertyFactory.getProp(elem, data.h || {\n      k: 0\n    }, 0, 0.01, this);\n    this.a = PropertyFactory.getProp(elem, data.a || {\n      k: 0\n    }, 0, degToRads, this);\n    this.g = new GradientProperty(elem, data.g, this);\n    this.style = styleOb;\n    this.stops = [];\n    this.setGradientData(styleOb.pElem, data);\n    this.setGradientOpacity(data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID();\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n    gfill.setAttribute('id', gradientId);\n    gfill.setAttribute('spreadMethod', 'pad');\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse');\n    var stops = [];\n    var stop;\n    var j;\n    var jLen;\n    jLen = data.g.p * 4;\n\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS('stop');\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n\n    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + gradientId + ')');\n    this.gf = gfill;\n    this.cst = stops;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop;\n      var j;\n      var jLen;\n      var mask = createNS('mask');\n      var maskElement = createNS('path');\n      mask.appendChild(maskElement);\n      var opacityId = createElementID();\n      var maskId = createElementID();\n      mask.setAttribute('id', maskId);\n      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n      opFill.setAttribute('id', opacityId);\n      opFill.setAttribute('spreadMethod', 'pad');\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse');\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\n      var stops = this.stops;\n\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS('stop');\n        stop.setAttribute('stop-color', 'rgb(255,255,255)');\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n\n      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + opacityId + ')');\n\n      if (data.ty === 'gs') {\n        maskElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\n        maskElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\n\n        if (data.lj === 1) {\n          maskElement.setAttribute('stroke-miterlimit', data.ml);\n        }\n      }\n\n      this.of = opFill;\n      this.ms = mask;\n      this.ost = stops;\n      this.maskId = maskId;\n      styleOb.msElem = maskElement;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.initGradientData(elem, data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n\n  function ShapeGroupData() {\n    this.it = [];\n    this.prevViewData = [];\n    this.gr = createNS('g');\n  }\n\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps: mProps,\n      op: op,\n      container: container\n    };\n    this.elements = [];\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n  }\n\n  var buildShapeString = function buildShapeString(pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return '';\n    }\n\n    var _o = pathNodes.o;\n    var _i = pathNodes.i;\n    var _v = pathNodes.v;\n    var i;\n    var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n\n    for (i = 1; i < length; i += 1) {\n      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[i][0], _i[i][1]) + ' ' + mat.applyToPointStringified(_v[i][0], _v[i][1]);\n    }\n\n    if (closed && length) {\n      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[0][0], _i[0][1]) + ' ' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n      shapeString += 'z';\n    }\n\n    return shapeString;\n  };\n\n  var SVGElementsRenderer = function () {\n    var _identityMatrix = new Matrix();\n\n    var _matrixHelper = new Matrix();\n\n    var ob = {\n      createRenderFunction: createRenderFunction\n    };\n\n    function createRenderFunction(data) {\n      switch (data.ty) {\n        case 'fl':\n          return renderFill;\n\n        case 'gf':\n          return renderGradient;\n\n        case 'gs':\n          return renderGradientStroke;\n\n        case 'st':\n          return renderStroke;\n\n        case 'sh':\n        case 'el':\n        case 'rc':\n        case 'sr':\n          return renderPath;\n\n        case 'tr':\n          return renderContentTransform;\n\n        case 'no':\n          return renderNoop;\n\n        default:\n          return null;\n      }\n    }\n\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);\n      }\n\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());\n      }\n    }\n\n    function renderNoop() {}\n\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j;\n      var jLen;\n      var pathStringTransformed;\n      var redraw;\n      var pathNodes;\n      var l;\n      var lLen = itemData.styles.length;\n      var lvl = itemData.lvl;\n      var paths;\n      var mat;\n      var props;\n      var iterations;\n      var k;\n\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame;\n\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset();\n          iterations = lvl - itemData.styles[l].lvl;\n          k = itemData.transformers.length - 1;\n\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw;\n            iterations -= 1;\n            k -= 1;\n          }\n\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl;\n            k = itemData.transformers.length - 1;\n\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props;\n              mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n              iterations -= 1;\n              k -= 1;\n            }\n          }\n        } else {\n          mat = _identityMatrix;\n        }\n\n        paths = itemData.sh.paths;\n        jLen = paths._length;\n\n        if (redraw) {\n          pathStringTransformed = '';\n\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j];\n\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n            }\n          }\n\n          itemData.caches[l] = pathStringTransformed;\n        } else {\n          pathStringTransformed = itemData.caches[l];\n        }\n\n        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\n      }\n    }\n\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);\n      }\n    }\n\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame);\n      renderStroke(styleData, itemData, isFirstFrame);\n    }\n\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf;\n      var hasOpacity = itemData.g._hasOpacity;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\n      }\n\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\n        gfill.setAttribute(attr1, pt1[0]);\n        gfill.setAttribute(attr2, pt1[1]);\n\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0]);\n          itemData.of.setAttribute(attr2, pt1[1]);\n        }\n      }\n\n      var stops;\n      var i;\n      var len;\n      var stop;\n\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst;\n        var cValues = itemData.g.c;\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          stop.setAttribute('offset', cValues[i * 4] + '%');\n          stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');\n        }\n      }\n\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o;\n\n        if (itemData.g._collapsable) {\n          stops = itemData.cst;\n        } else {\n          stops = itemData.ost;\n        }\n\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n\n          if (!itemData.g._collapsable) {\n            stop.setAttribute('offset', oValues[i * 2] + '%');\n          }\n\n          stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\n        }\n      }\n\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute('x2', pt2[0]);\n          gfill.setAttribute('y2', pt2[1]);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('x2', pt2[0]);\n            itemData.of.setAttribute('y2', pt2[1]);\n          }\n        }\n      } else {\n        var rad;\n\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          gfill.setAttribute('r', rad);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('r', rad);\n          }\n        }\n\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          }\n\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n          var percent = itemData.h.v;\n\n          if (percent >= 1) {\n            percent = 0.99;\n          } else if (percent <= -1) {\n            percent = -0.99;\n          }\n\n          var dist = rad * percent;\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n          gfill.setAttribute('fx', x);\n          gfill.setAttribute('fy', y);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('fx', x);\n            itemData.of.setAttribute('fy', y);\n          }\n        } // gfill.setAttribute('fy','200');\n\n      }\n    }\n\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      var d = itemData.d;\n\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\n      }\n\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute('stroke', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\n      }\n\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\n\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\n        }\n      }\n    }\n\n    return ob;\n  }();\n\n  function SVGShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; // List of styles that will be applied to shapes\n\n    this.stylesList = []; // List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; // List of items in shape tree\n\n    this.itemsData = []; // List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = []; // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\n\n  SVGShapeElement.prototype.initSecondaryElement = function () {};\n\n  SVGShapeElement.prototype.identityMatrix = new Matrix();\n\n  SVGShapeElement.prototype.buildExpressionInterface = function () {};\n\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n  };\n  /*\r\n  This method searches for multiple shapes that affect a single element and one of them is animated\r\n  */\n\n\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i;\n    var len = this.shapes.length;\n    var shape;\n    var j;\n    var jLen = this.stylesList.length;\n    var style;\n    var tempShapes = [];\n    var areAnimated = false;\n\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j];\n      areAnimated = false;\n      tempShapes.length = 0;\n\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i];\n\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape);\n          areAnimated = shape._isAnimated || areAnimated;\n        }\n      }\n\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i;\n    var len = shapes.length;\n\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated();\n    }\n  };\n\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    // TODO: prevent drawing of hidden styles\n    var elementData;\n    var styleOb = new SVGStyleData(data, level);\n    var pathElement = styleOb.pElem;\n\n    if (data.ty === 'st') {\n      elementData = new SVGStrokeStyleData(this, data, styleOb);\n    } else if (data.ty === 'fl') {\n      elementData = new SVGFillStyleData(this, data, styleOb);\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\n      elementData = new GradientConstructor(this, data, styleOb);\n      this.globalData.defs.appendChild(elementData.gf);\n\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms);\n        this.globalData.defs.appendChild(elementData.of);\n        pathElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + elementData.maskId + ')');\n      }\n    } else if (data.ty === 'no') {\n      elementData = new SVGNoStyleData(this, data, styleOb);\n    }\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      pathElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\n      pathElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\n      pathElement.setAttribute('fill-opacity', '0');\n\n      if (data.lj === 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml);\n      }\n    }\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd');\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    this.stylesList.push(styleOb);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData();\n\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      elementData.gr.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0;\n    var len = this.animatedContents.length;\n\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return;\n      }\n\n      i += 1;\n    }\n\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element: element,\n      data: data\n    });\n  };\n\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles;\n    var j;\n    var jLen = this.stylesList.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n  };\n\n  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var currentTransform;\n    var modifier;\n    var processedPos;\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs' || arr[i].ty === 'no') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem);\n          }\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\n\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr);\n          }\n        }\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container);\n        }\n\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\n        }\n\n        this.setElementStyles(itemsData[i]);\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    len = ownStyles.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers();\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset();\n    }\n\n    this.renderShape();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d); // Adding M0 0 fixes same mask bug on all browsers\n\n          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\n        }\n\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.renderShape = function () {\n    var i;\n    var len = this.animatedContents.length;\n    var animatedContent;\n\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i];\n\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement();\n    this.shapesData = null;\n    this.itemsData = null;\n  };\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false;\n    this._mdf.sw = false;\n    this._mdf.sc = false;\n    this._mdf.fc = false;\n    this._mdf.m = false;\n    this._mdf.p = false;\n    var updated = false;\n\n    if (this.o !== o) {\n      this.o = o;\n      this._mdf.o = true;\n      updated = true;\n    }\n\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this._mdf.sw = true;\n      updated = true;\n    }\n\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this._mdf.sc = true;\n      updated = true;\n    }\n\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this._mdf.fc = true;\n      updated = true;\n    }\n\n    if (this.m !== m) {\n      this.m = m;\n      this._mdf.m = true;\n      updated = true;\n    }\n\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this._mdf.p = true;\n      updated = true;\n    }\n\n    return updated;\n  };\n\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame;\n    this.pv = '';\n    this.v = '';\n    this.kf = false;\n    this._isFirstFrame = true;\n    this._mdf = false;\n    this.data = data;\n    this.elem = elem;\n    this.comp = this.elem.comp;\n    this.keysIndex = 0;\n    this.canResize = false;\n    this.minimumFontSize = 1;\n    this.effectsSequence = [];\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false\n    };\n    this.copyData(this.currentData, this.data.d.k[0].s);\n\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData);\n    }\n  }\n\n  TextProperty.prototype.defaultBoxWidth = [0, 0];\n\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (Object.prototype.hasOwnProperty.call(data, s)) {\n        obj[s] = data[s];\n      }\n    }\n\n    return obj;\n  };\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data);\n    }\n\n    this.currentData = data;\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\n    this._mdf = true;\n  };\n\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes();\n  };\n\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1;\n\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this));\n    }\n\n    return this.kf;\n  };\n\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return;\n    }\n\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n    var currentValue = this.currentData;\n    var currentIndex = this.keysIndex;\n\n    if (this.lock) {\n      this.setCurrentData(this.currentData);\n      return;\n    }\n\n    this.lock = true;\n    this._mdf = false;\n    var i;\n    var len = this.effectsSequence.length;\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\n\n    for (i = 0; i < len; i += 1) {\n      // Checking if index changed to prevent creating a new object every time the expression updates.\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t);\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\n      }\n    }\n\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue);\n    }\n\n    this.v = this.currentData;\n    this.pv = this.v;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  };\n\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k;\n    var frameNum = this.elem.comp.renderedFrame;\n    var i = 0;\n    var len = textKeys.length;\n\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    if (this.keysIndex !== i) {\n      this.keysIndex = i;\n    }\n\n    return this.data.d.k[this.keysIndex].s;\n  };\n\n  TextProperty.prototype.buildFinalText = function (text) {\n    var charactersArray = [];\n    var i = 0;\n    var len = text.length;\n    var charCode;\n    var secondCharCode;\n    var shouldCombine = false;\n\n    while (i < len) {\n      charCode = text.charCodeAt(i);\n\n      if (FontManager.isCombinedCharacter(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n      } else if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n        secondCharCode = text.charCodeAt(i + 1);\n\n        if (secondCharCode >= 0xDC00 && secondCharCode <= 0xDFFF) {\n          if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\n            charactersArray[charactersArray.length - 1] += text.substr(i, 2);\n            shouldCombine = false;\n          } else {\n            charactersArray.push(text.substr(i, 2));\n          }\n\n          i += 1;\n        } else {\n          charactersArray.push(text.charAt(i));\n        }\n      } else if (charCode > 0xDBFF) {\n        secondCharCode = text.charCodeAt(i + 1);\n\n        if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\n          shouldCombine = true;\n          charactersArray[charactersArray.length - 1] += text.substr(i, 2);\n          i += 1;\n        } else {\n          charactersArray.push(text.charAt(i));\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n        shouldCombine = true;\n      } else {\n        charactersArray.push(text.charAt(i));\n      }\n\n      i += 1;\n    }\n\n    return charactersArray;\n  };\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data = this.data;\n    var letters = [];\n    var i;\n    var len;\n    var newLineFlag;\n    var index = 0;\n    var val;\n    var anchorGrouping = data.m.g;\n    var currentSize = 0;\n    var currentPos = 0;\n    var currentLine = 0;\n    var lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j;\n    var jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData;\n    var cLength = 0;\n    var fontProps = getFontProperties(fontData);\n    documentData.fWeight = fontProps.weight;\n    documentData.fStyle = fontProps.style;\n    documentData.finalSize = documentData.s;\n    documentData.finalText = this.buildFinalText(documentData.t);\n    len = documentData.finalText.length;\n    documentData.finalLineHeight = documentData.lh;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n    var charCode;\n\n    if (documentData.sz) {\n      var flag = true;\n      var boxWidth = documentData.sz[0];\n      var boxHeight = documentData.sz[1];\n      var currentHeight;\n      var finalText;\n\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t);\n        currentHeight = 0;\n        lineWidth = 0;\n        len = finalText.length;\n        trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n        var lastSpaceIndex = -1;\n\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0);\n          newLineFlag = false;\n\n          if (finalText[i] === ' ') {\n            lastSpaceIndex = i;\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0;\n            newLineFlag = true;\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n          }\n\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\n            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n          } else {\n            // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\n          }\n\n          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\n            if (lastSpaceIndex === -1) {\n              len += 1;\n            } else {\n              i = lastSpaceIndex;\n            }\n\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\\r'); // finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\n\n            lastSpaceIndex = -1;\n            lineWidth = 0;\n          } else {\n            lineWidth += cLength;\n            lineWidth += trackingOffset;\n          }\n        }\n\n        currentHeight += fontData.ascent * documentData.finalSize / 100;\n\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1;\n          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\n        } else {\n          documentData.finalText = finalText;\n          len = documentData.finalText.length;\n          flag = false;\n        }\n      }\n    }\n\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.finalText[i];\n      charCode = currentChar.charCodeAt(0);\n\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val = '';\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val = currentChar;\n      }\n\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n      } else {\n        // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\n        // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\n      } //\n\n\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine,\n        animatorJustifyOffset: 0\n      });\n\n      if (anchorGrouping == 2) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength;\n\n        if (val === '' || val === ' ' || i === len - 1) {\n          if (val === '' || val === ' ') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          index += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength;\n\n        if (val === '' || i === len - 1) {\n          if (val === '') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          currentSize = 0;\n          index += 1;\n        }\n      } else {\n        letters[index].ind = index;\n        letters[index].extra = 0;\n        index += 1;\n      }\n    }\n\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n\n    documentData.lineWidths = lineWidths;\n    var animators = data.a;\n    var animatorData;\n    var letterData;\n    jLen = animators.length;\n    var based;\n    var ind;\n    var indexes = [];\n\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n\n      ind = 0;\n      based = animatorData.s.b;\n\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n\n        if (based == 1 && letterData.val !== '' || based == 2 && letterData.val !== '' && letterData.val !== ' ' || based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          // eslint-disable-line eqeqeq\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n\n          ind += 1;\n        }\n      }\n\n      data.a[j].s.totalChars = ind;\n      var currentInd = -1;\n      var newInd;\n\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n\n          if (currentInd != letterData.anIndexes[j]) {\n            // eslint-disable-line eqeqeq\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.finalSize / 100;\n  };\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index;\n    var dData = this.copyData({}, this.data.d.k[index].s);\n    dData = this.copyData(dData, newData);\n    this.data.d.k[index].s = dData;\n    this.recalculate(index);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.recalculate = function (index) {\n    var dData = this.data.d.k[index].s;\n    dData.__complete = false;\n    this.keysIndex = 0;\n    this._isFirstFrame = true;\n    this.getValue(dData);\n  };\n\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  var TextSelectorProp = function () {\n    var max = Math.max;\n    var min = Math.min;\n    var floor = Math.floor;\n\n    function TextSelectorPropFactory(elem, data) {\n      this._currentTextLength = -1;\n      this.k = false;\n      this.data = data;\n      this.elem = elem;\n      this.comp = elem.comp;\n      this.finalS = 0;\n      this.finalE = 0;\n      this.initDynamicPropertyContainer(elem);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: 0\n      }, 0, 0, this);\n\n      if ('e' in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);\n      } else {\n        this.e = {\n          v: 100\n        };\n      }\n\n      this.o = PropertyFactory.getProp(elem, data.o || {\n        k: 0\n      }, 0, 0, this);\n      this.xe = PropertyFactory.getProp(elem, data.xe || {\n        k: 0\n      }, 0, 0, this);\n      this.ne = PropertyFactory.getProp(elem, data.ne || {\n        k: 0\n      }, 0, 0, this);\n      this.sm = PropertyFactory.getProp(elem, data.sm || {\n        k: 100\n      }, 0, 0, this);\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);\n\n      if (!this.dynamicProperties.length) {\n        this.getValue();\n      }\n    }\n\n    TextSelectorPropFactory.prototype = {\n      getMult: function getMult(ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue();\n        }\n\n        var x1 = 0;\n        var y1 = 0;\n        var x2 = 1;\n        var y2 = 1;\n\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100.0;\n        } else {\n          y1 = -this.ne.v / 100.0;\n        }\n\n        if (this.xe.v > 0) {\n          x2 = 1.0 - this.xe.v / 100.0;\n        } else {\n          y2 = 1.0 + this.xe.v / 100.0;\n        }\n\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n\n            if (mult < 0.5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n\n          mult = easer(mult);\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            /* ind += 0.5;\r\n                      mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */\n\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n\n          mult = easer(mult);\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2; // eslint-disable-line\n          }\n\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1));\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n\n          mult = easer(mult);\n        } // Smoothness implementation.\n        // The smoothness represents a reduced range of the original [0; 1] range.\n        // if smoothness is 25%, the new range will be [0.375; 0.625]\n        // Steps are:\n        // - find the lower value of the new range (threshold)\n        // - if multiplier is smaller than that value, floor it to 0\n        // - if it is larger,\n        //     - subtract the threshold\n        //     - divide it by the smoothness (this will return the range to [0; 1])\n        // Note: If it doesn't work on some scenarios, consider applying it before the easer.\n\n\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01;\n\n          if (smoothness === 0) {\n            smoothness = 0.00000001;\n          }\n\n          var threshold = 0.5 - smoothness * 0.5;\n\n          if (mult < threshold) {\n            mult = 0;\n          } else {\n            mult = (mult - threshold) / smoothness;\n\n            if (mult > 1) {\n              mult = 1;\n            }\n          }\n        }\n\n        return mult * this.a.v;\n      },\n      getValue: function getValue(newCharsFlag) {\n        this.iterateDynamicProperties();\n        this._mdf = newCharsFlag || this._mdf;\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\n\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength;\n        }\n\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n\n        this.finalS = s;\n        this.finalE = e;\n      }\n    };\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorPropFactory(elem, data, arr);\n    }\n\n    return {\n      getTextSelectorProp: getTextSelectorProp\n    };\n  }();\n\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = {\n      propType: false\n    };\n    var getProp = PropertyFactory.getProp;\n    var textAnimatorAnimatables = animatorProps.a;\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData\n    };\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);\n    this.s.t = animatorProps.s.t;\n  }\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem;\n    this._animatorsData = createSizedArray(this._textData.a.length);\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n    this.initDynamicPropertyContainer(elem);\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i;\n    var len = this._textData.a.length;\n    var animatorProps;\n    var getProp = PropertyFactory.getProp;\n\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\n    }\n\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\n  };\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return;\n    }\n\n    this._isFirstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var xPos;\n    var yPos;\n    var i;\n    var len;\n    var letters = documentData.l;\n    var pathInfo;\n    var currentLength;\n    var currentPoint;\n    var segmentLength;\n    var flag;\n    var pointInd;\n    var segmentInd;\n    var prevPoint;\n    var points;\n    var segments;\n    var partialLength;\n    var totalLength;\n    var perc;\n    var tanAngle;\n    var mask;\n\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m;\n\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v;\n\n        if (this._pathData.r.v) {\n          paths = paths.reverse();\n        } // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\n\n\n        pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var bezierData;\n        totalLength = 0;\n\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        i = len;\n\n        if (mask.v.c) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        this._pathData.pi = pathInfo;\n      }\n\n      pathInfo = this._pathData.pi;\n      currentLength = this._pathData.f.v;\n      segmentInd = 0;\n      pointInd = 1;\n      segmentLength = 0;\n      flag = true;\n      segments = pathInfo.segments;\n\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].points;\n        pointInd = points.length - 1;\n\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n\n      points = segments[segmentInd].points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      partialLength = currentPoint.partialLength;\n    }\n\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.finalSize * 1.2 * 0.714;\n    var firstLine = true;\n    var animatorProps;\n    var animatorSelector;\n    var j;\n    var jLen;\n    var letterValue;\n    jLen = animators.length;\n    var mult;\n    var ind = -1;\n    var offf;\n    var xPathPos;\n    var yPathPos;\n    var initPathPos = currentLength;\n    var initSegmentInd = segmentInd;\n    var initPointInd = pointInd;\n    var currentLine = -1;\n    var elemOpacity;\n    var sc;\n    var sw;\n    var fc;\n    var k;\n    var letterSw;\n    var letterSc;\n    var letterFc;\n    var letterM = '';\n    var letterP = this.defaultPropsArray;\n    var letterO; //\n\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0;\n      var animatorFirstCharOffset = 0;\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\n      var lastIndex = 0;\n      var isNewLine = true;\n\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset;\n          }\n\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n            lastIndex += 1;\n          }\n\n          animatorJustifyOffset = 0;\n          isNewLine = true;\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\n              }\n\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\n              }\n            }\n          }\n\n          isNewLine = false;\n        }\n      }\n\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset;\n      }\n\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n        lastIndex += 1;\n      }\n    } //\n\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n\n        letterM = '';\n        letterFc = '';\n        letterSw = '';\n        letterO = '';\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n\n              default:\n                break;\n            }\n\n            currentLine = letters[i].line;\n          }\n\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n\n          currentLength += alignment[0] * letters[i].an * 0.005;\n          var animatorOffset = 0;\n\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n\n          flag = true; // Force alignment only works with a single line for now\n\n          if (this._pathData.a.v) {\n            currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);\n            currentLength += this._pathData.f.v;\n          }\n\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -(alignment[1] * yOff) * 0.01);\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].points;\n                }\n              }\n\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0); // Grouping alignment\n\n          matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -alignment[1] * yOff * 0.01, 0);\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars); // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\n\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0];\n                } else {\n                  currentLength += animatorProps.t.v * mult;\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0];\n              } else {\n                xPos += animatorProps.t.v * mult;\n              }\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n\n        if (documentData.strokeColorAnim) {\n          letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);\n\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an * 0.005;\n\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr * 0.001 * documentData.finalSize;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n\n          if (documentData.ps) {\n            // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n\n            case 2:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n\n            default:\n              break;\n          }\n\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an * 0.005, alignment[1] * yOff * 0.01, 0);\n          xPos += letters[i].l + documentData.tr * 0.001 * documentData.finalSize;\n        }\n\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n\n        letterO = elemOpacity;\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n\n    this._frameId = this._elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n\n  function ITextElement() {}\n\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true;\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n    this.initRenderable();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    this.createContent();\n    this.hide();\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText();\n      this.textProperty._isFirstFrame = false;\n      this.textProperty._mdf = false;\n    }\n  };\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j;\n    var jLen = shapes.length;\n    var pathNodes;\n    var shapeStr = '';\n\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === 'sh') {\n        pathNodes = shapes[j].ks.k;\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n      }\n    }\n\n    return shapeStr;\n  };\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index);\n  };\n\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize);\n  };\n\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize);\n  };\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n\n    matrixHelper.translate(0, -documentData.ls, 0);\n\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n\n      default:\n        break;\n    }\n\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';\n  };\n\n  ITextElement.prototype.emptyProp = new LetterProps();\n\n  ITextElement.prototype.destroy = function () {};\n\n  var emptyShapeData = {\n    shapes: []\n  };\n\n  function SVGTextLottieElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.renderType = 'svg';\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);\n\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS('text');\n    }\n  };\n\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0;\n    var len = textArray.length;\n    var textContents = [];\n    var currentTextContent = '';\n\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent);\n        currentTextContent = '';\n      } else {\n        currentTextContent += textArray[i];\n      }\n\n      i += 1;\n    }\n\n    textContents.push(currentTextContent);\n    return textContents;\n  };\n\n  SVGTextLottieElement.prototype.buildShapeData = function (data, scale) {\n    // data should probably be cloned to apply scale separately to each instance of a text on different layers\n    // but since text internal content gets only rendered once and then it's never rerendered,\n    // it's probably safe not to clone data and reuse always the same instance even if the object is mutated.\n    // Avoiding cloning is preferred since cloning each character shape data is expensive\n    if (data.shapes && data.shapes.length) {\n      var shape = data.shapes[0];\n\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1];\n\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale;\n          shapeItem.s.k[1] = scale;\n        }\n      }\n    }\n\n    return data;\n  };\n\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this);\n    var i;\n    var len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\n\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\n    }\n\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\n      this.layerElement.setAttribute('stroke-width', documentData.sw);\n    }\n\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass);\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily);\n      var fWeight = documentData.fWeight;\n      var fStyle = documentData.fStyle;\n      this.layerElement.setAttribute('font-style', fStyle);\n      this.layerElement.setAttribute('font-weight', fWeight);\n    }\n\n    this.layerElement.setAttribute('aria-label', documentData.t);\n    var letters = documentData.l || [];\n    var usesGlyphs = !!this.globalData.fontManager.chars;\n    len = letters.length;\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapeStr = '';\n    var singleShape = this.data.singleShape;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\n\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer;\n      var justify = 'start';\n\n      switch (documentData.j) {\n        case 1:\n          justify = 'end';\n          break;\n\n        case 2:\n          justify = 'middle';\n          break;\n\n        default:\n          justify = 'start';\n          break;\n      }\n\n      tElement.setAttribute('text-anchor', justify);\n      tElement.setAttribute('letter-spacing', trackingOffset);\n      var textContent = this.buildTextContents(documentData.finalText);\n      len = textContent.length;\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS('tspan');\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute('x', 0);\n        tSpan.setAttribute('y', yPos);\n        tSpan.style.display = 'inherit';\n        tElement.appendChild(tSpan);\n\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null\n          };\n        }\n\n        this.textSpans[i].span = tSpan;\n        yPos += documentData.finalLineHeight;\n      }\n\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var charData;\n\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null\n          };\n        }\n\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? 'g' : 'text');\n\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt');\n            tSpan.setAttribute('stroke-linejoin', 'round');\n            tSpan.setAttribute('stroke-miterlimit', '4');\n            this.textSpans[i].span = tSpan;\n\n            if (usesGlyphs) {\n              var childSpan = createNS('g');\n              tSpan.appendChild(childSpan);\n              this.textSpans[i].childSpan = childSpan;\n            }\n\n            this.textSpans[i].span = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n\n          tSpan.style.display = 'inherit';\n        }\n\n        matrixHelper.reset();\n\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset;\n            yPos += documentData.yOffset;\n            yPos += firstLine ? 1 : 0;\n            firstLine = false;\n          }\n\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n          xPos += letters[i].l || 0; // xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n\n          xPos += trackingOffset;\n        }\n\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          var glyphElement; // t === 1 means the character has been replaced with an animated shaped\n\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this);\n          } else {\n            var data = emptyShapeData;\n\n            if (charData.data && charData.data.shapes) {\n              data = this.buildShapeData(charData.data, documentData.finalSize);\n            }\n\n            glyphElement = new SVGShapeElement(data, this.globalData, this);\n          }\n\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph;\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement);\n            glyph.destroy();\n          }\n\n          this.textSpans[i].glyph = glyphElement;\n          glyphElement._debug = true;\n          glyphElement.prepareFrame(0);\n          glyphElement.renderFrame();\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement); // when using animated shapes, the layer will be scaled instead of replacing the internal scale\n          // this might have issues with strokes and might need a different solution\n\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute('transform', 'scale(' + documentData.finalSize / 100 + ',' + documentData.finalSize / 100 + ')');\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')');\n          }\n\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        } //\n\n      }\n\n      if (singleShape && tSpan) {\n        tSpan.setAttribute('d', shapeStr);\n      }\n    }\n\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = 'none';\n      i += 1;\n    }\n\n    this._sizeChanged = true;\n  };\n\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderInnerContent();\n\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n\n    return this.bbox;\n  };\n\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i;\n    var len = this.textSpans.length;\n    var glyphElement;\n    this.renderedFrame = this.comp.renderedFrame;\n\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph;\n\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st);\n\n        if (glyphElement._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i;\n        var len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter;\n        var textSpan;\n        var glyphElement;\n\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i];\n            textSpan = this.textSpans[i].span;\n            glyphElement = this.textSpans[i].glyph;\n\n            if (glyphElement) {\n              glyphElement.renderFrame();\n            }\n\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute('transform', renderedLetter.m);\n            }\n\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute('opacity', renderedLetter.o);\n            }\n\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute('stroke-width', renderedLetter.sw);\n            }\n\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute('stroke', renderedLetter.sc);\n            }\n\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute('fill', renderedLetter.fc);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([IImageElement], ISolidElement);\n\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS('rect'); /// /rect.style.width = this.data.sw;\n    /// /rect.style.height = this.data.sh;\n    /// /rect.style.fill = this.data.sc;\n\n    rect.setAttribute('width', this.data.sw);\n    rect.setAttribute('height', this.data.sh);\n    rect.setAttribute('fill', this.data.sc);\n    this.layerElement.appendChild(rect);\n  };\n\n  function NullElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initFrame();\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n  }\n\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  NullElement.prototype.renderFrame = function () {};\n\n  NullElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  NullElement.prototype.destroy = function () {};\n\n  NullElement.prototype.sourceRectAtTime = function () {};\n\n  NullElement.prototype.hide = function () {};\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\n\n  function SVGRendererBase() {}\n\n  extendPrototype([BaseRenderer], SVGRendererBase);\n\n  SVGRendererBase.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createText = function (data) {\n    return new SVGTextLottieElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);\n    } else {\n      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);\n    }\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute('width', animData.w);\n      this.svgElement.setAttribute('height', animData.h);\n      this.svgElement.style.width = '100%';\n      this.svgElement.style.height = '100%';\n      this.svgElement.style.transform = 'translate3d(0,0,0)';\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;\n    }\n\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute('width', this.renderConfig.width);\n    }\n\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute('height', this.renderConfig.height);\n    }\n\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute('class', this.renderConfig.className);\n    }\n\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute('id', this.renderConfig.id);\n    }\n\n    if (this.renderConfig.focusable !== undefined) {\n      this.svgElement.setAttribute('focusable', this.renderConfig.focusable);\n    }\n\n    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio); // this.layerElement.style.transform = 'translate3d(0,0,0)';\n    // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n\n    this.animationItem.wrapper.appendChild(this.svgElement); // Mask animation\n\n    var defs = this.globalData.defs;\n    this.setupGlobalData(animData, defs);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.data = animData;\n    var maskElement = createNS('clipPath');\n    var rect = createNS('rect');\n    rect.setAttribute('width', animData.w);\n    rect.setAttribute('height', animData.h);\n    rect.setAttribute('x', 0);\n    rect.setAttribute('y', 0);\n    var maskId = createElementID();\n    maskElement.setAttribute('id', maskId);\n    maskElement.appendChild(rect);\n    this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + maskId + ')');\n    defs.appendChild(maskElement);\n    this.layers = animData.layers;\n    this.elements = createSizedArray(animData.layers.length);\n  };\n\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  SVGRendererBase.prototype.updateContainerSize = function () {};\n\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n\n      element.initExpressions();\n    }\n\n    this.appendElementInPos(element, pos);\n\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1);\n        this.addPendingElement(element);\n      } else {\n        element.setMatte(elements[pos - 1].layerId);\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n\n      if (element.data.tt) {\n        var i = 0;\n        var len = this.elements.length;\n\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId);\n            break;\n          }\n\n          i += 1;\n        }\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return;\n    }\n\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    } // console.log('-------');\n    // console.log('FRAME ',num);\n\n\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    this.globalData._mdf = false;\n    var i;\n    var len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n\n    if (!newElement) {\n      return;\n    }\n\n    var i = 0;\n    var nextElement;\n\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n\n      i += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = 'none';\n  };\n\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = 'block';\n  };\n\n  function ICompElement() {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\n\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initTransform(data, globalData, comp);\n    this.initRenderable();\n    this.initHierarchy();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n\n    this.hide();\n  };\n  /* ICompElement.prototype.hide = function(){\r\n      if(!this.hidden){\r\n          this.hideElement();\r\n          var i,len = this.elements.length;\r\n          for( i = 0; i < len; i+=1 ){\r\n              if(this.elements[i]){\r\n                  this.elements[i].hide();\r\n              }\r\n          }\r\n      }\r\n  }; */\n\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (!this.isInRange && !this.data.xt) {\n      return;\n    }\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n\n    var i;\n    var len = this.elements.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    } // This iteration needs to be backwards because of how expressions connect between each other\n\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n\n        if (this.elements[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  ICompElement.prototype.renderInnerContent = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n\n  ICompElement.prototype.destroyElements = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements();\n    this.destroyBaseElement();\n  };\n\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement);\n\n  SVGCompElement.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.svgElement = createNS('svg');\n    var ariaLabel = '';\n\n    if (config && config.title) {\n      var titleElement = createNS('title');\n      var titleId = createElementID();\n      titleElement.setAttribute('id', titleId);\n      titleElement.textContent = config.title;\n      this.svgElement.appendChild(titleElement);\n      ariaLabel += titleId;\n    }\n\n    if (config && config.description) {\n      var descElement = createNS('desc');\n      var descId = createElementID();\n      descElement.setAttribute('id', descId);\n      descElement.textContent = config.description;\n      this.svgElement.appendChild(descElement);\n      ariaLabel += ' ' + descId;\n    }\n\n    if (ariaLabel) {\n      this.svgElement.setAttribute('aria-labelledby', ariaLabel);\n    }\n\n    var defs = createNS('defs');\n    this.svgElement.appendChild(defs);\n    var maskElement = createNS('g');\n    this.svgElement.appendChild(maskElement);\n    this.layerElement = maskElement;\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      viewBoxSize: config && config.viewBoxSize || false,\n      className: config && config.className || '',\n      id: config && config.id || '',\n      focusable: config && config.focusable,\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '100%',\n        height: config && config.filterSize && config.filterSize.height || '100%',\n        x: config && config.filterSize && config.filterSize.x || '0%',\n        y: config && config.filterSize && config.filterSize.y || '0%'\n      },\n      width: config && config.width,\n      height: config && config.height\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs: defs,\n      renderConfig: this.renderConfig\n    };\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n    this.rendererType = 'svg';\n  }\n\n  extendPrototype([SVGRendererBase], SVGRenderer);\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  function CVContextData() {\n    this.saved = [];\n    this.cArrPos = 0;\n    this.cTr = new Matrix();\n    this.cO = 1;\n    var i;\n    var len = 15;\n    this.savedOp = createTypedArray('float32', len);\n\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = len;\n  }\n\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2;\n    var currentSavedOp = this.savedOp;\n    this.savedOp = createTypedArray('float32', newLength);\n    this.savedOp.set(currentSavedOp);\n    var i = 0;\n\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = newLength;\n  };\n\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0;\n    this.cTr.reset();\n    this.cO = 1;\n  };\n\n  function ShapeTransformManager() {\n    this.sequences = {};\n    this.sequenceList = [];\n    this.transform_key_count = 0;\n  }\n\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function addTransformSequence(transforms) {\n      var i;\n      var len = transforms.length;\n      var key = '_';\n\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + '_';\n      }\n\n      var sequence = this.sequences[key];\n\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false\n        };\n        this.sequences[key] = sequence;\n        this.sequenceList.push(sequence);\n      }\n\n      return sequence;\n    },\n    processSequence: function processSequence(sequence, isFirstFrame) {\n      var i = 0;\n      var len = sequence.transforms.length;\n      var _mdf = isFirstFrame;\n\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true;\n          break;\n        }\n\n        i += 1;\n      }\n\n      if (_mdf) {\n        var props;\n        sequence.finalTransform.reset();\n\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props;\n          sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n        }\n      }\n\n      sequence._mdf = _mdf;\n    },\n    processSequences: function processSequences(isFirstFrame) {\n      var i;\n      var len = this.sequenceList.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame);\n      }\n    },\n    getNewKey: function getNewKey() {\n      this.transform_key_count += 1;\n      return '_' + this.transform_key_count;\n    }\n  };\n\n  function CVEffects() {}\n\n  CVEffects.prototype.renderFrame = function () {};\n\n  function CVMaskElement(data, element) {\n    this.data = data;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i;\n    var len = this.masksProperties.length;\n    var hasMasks = false;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        hasMasks = true;\n      }\n\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\n    }\n\n    this.hasMasks = hasMasks;\n\n    if (hasMasks) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return;\n    }\n\n    var transform = this.element.finalTransform.mat;\n    var ctx = this.element.canvasContext;\n    var i;\n    var len = this.masksProperties.length;\n    var pt;\n    var pts;\n    var data;\n    ctx.beginPath();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\n          ctx.lineTo(0, this.element.globalData.compSize.h);\n          ctx.lineTo(0, 0);\n        }\n\n        data = this.viewData[i].v;\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0);\n        ctx.moveTo(pt[0], pt[1]);\n        var j;\n        var jLen = data._length;\n\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n        }\n\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n      }\n    }\n\n    this.element.globalData.renderer.save(true);\n    ctx.clip();\n  };\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n\n  function CVBaseElement() {}\n\n  CVBaseElement.prototype = {\n    createElements: function createElements() {},\n    initRendererElement: function initRendererElement() {},\n    createContainerElements: function createContainerElements() {\n      this.canvasContext = this.globalData.canvasContext;\n      this.renderableEffectsManager = new CVEffects(this);\n    },\n    createContent: function createContent() {},\n    setBlendMode: function setBlendMode() {\n      var globalData = this.globalData;\n\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm;\n        var blendModeValue = getBlendMode(this.data.bm);\n        globalData.canvasContext.globalCompositeOperation = blendModeValue;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new CVMaskElement(this.data, this);\n    },\n    hideElement: function hideElement() {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true;\n      }\n    },\n    showElement: function showElement() {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false;\n        this._isFirstFrame = true;\n        this.maskManager._isFirstFrame = true;\n      }\n    },\n    renderFrame: function renderFrame() {\n      if (this.hidden || this.data.hd) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.setBlendMode();\n      var forceRealStack = this.data.ty === 0;\n      this.globalData.renderer.save(forceRealStack);\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\n      this.renderInnerContent();\n      this.globalData.renderer.restore(forceRealStack);\n\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true);\n      }\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.canvasContext = null;\n      this.data = null;\n      this.globalData = null;\n      this.maskManager.destroy();\n    },\n    mHelper: new Matrix()\n  };\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\n\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = [];\n    this.tr = [0, 0, 0, 0, 0, 0];\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element);\n    var i;\n    var len = styles.length;\n    var styledShape;\n\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: []\n        };\n        this.styledShapes.push(styledShape);\n        styles[i].elements.push(styledShape);\n      }\n    }\n  }\n\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n    this.transformsManager = new ShapeTransformManager();\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    _opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n  };\n\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true\n    };\n    var elementData = {};\n\n    if (data.ty === 'fl' || data.ty === 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this);\n\n      if (!elementData.c.k) {\n        styleElem.co = 'rgb(' + bmFloor(elementData.c.v[0]) + ',' + bmFloor(elementData.c.v[1]) + ',' + bmFloor(elementData.c.v[2]) + ')';\n      }\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this);\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this);\n      elementData.h = PropertyFactory.getProp(this, data.h || {\n        k: 0\n      }, 0, 0.01, this);\n      elementData.a = PropertyFactory.getProp(this, data.a || {\n        k: 0\n      }, 0, degToRads, this);\n      elementData.g = new GradientProperty(this, data.g, this);\n    }\n\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this);\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      styleElem.lc = lineCapEnum[data.lc || 2];\n      styleElem.lj = lineJoinEnum[data.lj || 2];\n\n      if (data.lj == 1) {\n        // eslint-disable-line eqeqeq\n        styleElem.ml = data.ml;\n      }\n\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this);\n\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n\n      if (data.d) {\n        var d = new DashProperty(this, data.d, 'canvas', this);\n        elementData.d = d;\n\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray;\n          styleElem[\"do\"] = elementData.d.dashoffset[0];\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\n    }\n\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this)\n      }\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n  };\n\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i;\n    var len = styles.length;\n\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var processedPos;\n    var modifier;\n    var currentTransform;\n    var ownTransforms = [].concat(transforms);\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i]);\n          itemsData[i] = currentTransform;\n        }\n\n        ownTransforms.push(itemsData[i]);\n        this.addTransformToStyleList(itemsData[i]);\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i]);\n        }\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          shouldRender = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    this.removeTransformFromStyleList();\n    this.closeStyles(ownStyles);\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1;\n    this.transformHelper._opMdf = false;\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\n  };\n\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity;\n      groupTransform.opacity *= groupTransform.op.v;\n      groupTransform._opMdf = true;\n    }\n  };\n\n  CVShapeElement.prototype.drawLayer = function () {\n    var i;\n    var len = this.stylesList.length;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var elems;\n    var nodes;\n    var renderer = this.globalData.renderer;\n    var ctx = this.globalData.canvasContext;\n    var type;\n    var currentStyle;\n\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i];\n      type = currentStyle.type; // Skipping style when\n      // Stroke width equals 0\n      // style should not be rendered (extra unused repeaters)\n      // current opacity equals 0\n      // global opacity equals 0\n\n      if (!((type === 'st' || type === 'gs') && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {\n        renderer.save();\n        elems = currentStyle.elements;\n\n        if (type === 'st' || type === 'gs') {\n          ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\n          ctx.lineWidth = currentStyle.wi;\n          ctx.lineCap = currentStyle.lc;\n          ctx.lineJoin = currentStyle.lj;\n          ctx.miterLimit = currentStyle.ml || 0;\n        } else {\n          ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\n        }\n\n        renderer.ctxOpacity(currentStyle.coOp);\n\n        if (type !== 'st' && type !== 'gs') {\n          ctx.beginPath();\n        }\n\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\n        jLen = elems.length;\n\n        for (j = 0; j < jLen; j += 1) {\n          if (type === 'st' || type === 'gs') {\n            ctx.beginPath();\n\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da);\n              ctx.lineDashOffset = currentStyle[\"do\"];\n            }\n          }\n\n          nodes = elems[j].trNodes;\n          kLen = nodes.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === 'm') {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n            } else if (nodes[k].t === 'c') {\n              ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n            } else {\n              ctx.closePath();\n            }\n          }\n\n          if (type === 'st' || type === 'gs') {\n            ctx.stroke();\n\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter);\n            }\n          }\n        }\n\n        if (type !== 'st' && type !== 'gs') {\n          ctx.fill(currentStyle.r);\n        }\n\n        renderer.restore();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i;\n    var len = items.length - 1;\n    var groupTransform;\n    groupTransform = parentTransform;\n\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === 'tr') {\n        groupTransform = data[i].transform;\n        this.renderShapeTransform(parentTransform, groupTransform);\n      } else if (items[i].ty === 'sh' || items[i].ty === 'el' || items[i].ty === 'rc' || items[i].ty === 'sr') {\n        this.renderPath(items[i], data[i]);\n      } else if (items[i].ty === 'fl') {\n        this.renderFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'st') {\n        this.renderStroke(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'gf' || items[i].ty === 'gs') {\n        this.renderGradientFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it);\n      } else if (items[i].ty === 'tm') {//\n      }\n    }\n\n    if (isMain) {\n      this.drawLayer();\n    }\n  };\n\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes;\n      var paths = shape.paths;\n      var i;\n      var len;\n      var j;\n      var jLen = paths._length;\n      shapeNodes.length = 0;\n      var groupTransformMat = styledShape.transforms.finalTransform;\n\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\n            });\n          }\n\n          if (len === 1) {\n            shapeNodes.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\n            });\n            shapeNodes.push({\n              t: 'z'\n            });\n          }\n        }\n      }\n\n      styledShape.trNodes = shapeNodes;\n    }\n  };\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i;\n      var len = itemData.styledShapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var grd;\n\n    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {\n      var ctx = this.globalData.canvasContext;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v;\n\n        if (percent >= 1) {\n          percent = 0.99;\n        } else if (percent <= -1) {\n          percent = -0.99;\n        }\n\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\n      }\n\n      var i;\n      var len = styleData.g.p;\n      var cValues = itemData.g.c;\n      var opacity = 1;\n\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1];\n        }\n\n        grd.addColorStop(cValues[i * 4] / 100, 'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')');\n      }\n\n      styleElem.grd = grd;\n    }\n\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\n  };\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var d = itemData.d;\n\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray;\n      styleElem[\"do\"] = d.dashoffset[0];\n    }\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemsData.length = 0;\n  };\n\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = 'canvas';\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: ''\n    };\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\n  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var hasFill = false;\n\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)';\n    }\n\n    this.fill = hasFill;\n    var hasStroke = false;\n\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i;\n    var len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.finalText.length; // this.tHelper.font = this.values.fValue;\n\n    var charData;\n    var shapeData;\n    var k;\n    var kLen;\n    var shapes;\n    var j;\n    var jLen;\n    var pathNodes;\n    var commands;\n    var pathArr;\n    var singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n\n      commands = createSizedArray(jLen - 1);\n      var commandsCounter = 0;\n\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === 'sh') {\n          kLen = shapes[j].ks.k.i.length;\n          pathNodes = shapes[j].ks.k;\n          pathArr = [];\n\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n            }\n\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n          }\n\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          commands[commandsCounter] = pathArr;\n          commandsCounter += 1;\n        }\n      }\n\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n\n      cnt += 1;\n    }\n  };\n\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.font = this.values.fValue;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'miter';\n    ctx.miterLimit = 4;\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n\n    var i;\n    var len;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null;\n    var lastStroke = null;\n    var lastStrokeW = null;\n    var commands;\n    var pathArr;\n\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i];\n\n        if (renderedLetter) {\n          this.globalData.renderer.save();\n          this.globalData.renderer.ctxTransform(renderedLetter.p);\n          this.globalData.renderer.ctxOpacity(renderedLetter.o);\n        }\n\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              lastFill = renderedLetter.fc;\n              ctx.fillStyle = renderedLetter.fc;\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill;\n            ctx.fillStyle = this.values.fill;\n          }\n\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.fill(); /// ctx.fillText(this.textSpans[i].val,0,0);\n        }\n\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw;\n              ctx.lineWidth = renderedLetter.sw;\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth;\n            ctx.lineWidth = this.values.sWidth;\n          }\n\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc;\n              ctx.strokeStyle = renderedLetter.sc;\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke;\n            ctx.strokeStyle = this.values.stroke;\n          }\n\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.stroke(); /// ctx.strokeText(letters[i].val,0,0);\n        }\n\n        if (renderedLetter) {\n          this.globalData.renderer.restore();\n        }\n      }\n    }\n  };\n\n  function CVImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.img = globalData.imageLoader.getAsset(this.assetData);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag('canvas');\n      canvas.width = this.assetData.w;\n      canvas.height = this.assetData.h;\n      var ctx = canvas.getContext('2d');\n      var imgW = this.img.width;\n      var imgH = this.img.height;\n      var imgRel = imgW / imgH;\n      var canvasRel = this.assetData.w / this.assetData.h;\n      var widthCrop;\n      var heightCrop;\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n\n      if (imgRel > canvasRel && par === 'xMidYMid slice' || imgRel < canvasRel && par !== 'xMidYMid slice') {\n        heightCrop = imgH;\n        widthCrop = heightCrop * canvasRel;\n      } else {\n        widthCrop = imgW;\n        heightCrop = widthCrop / canvasRel;\n      }\n\n      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n      this.img = canvas;\n    }\n  };\n\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0);\n  };\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n  };\n\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.fillStyle = this.data.sc;\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh); //\n  };\n\n  function CanvasRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      className: config && config.className || '',\n      id: config && config.id || ''\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = 'canvas';\n  }\n\n  extendPrototype([BaseRenderer], CanvasRendererBase);\n\n  CanvasRendererBase.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n      return;\n    }\n\n    this.transformMat.cloneFromProps(props);\n    var cProps = this.contextData.cTr.props;\n    this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]); // this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\n\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\n    var trProps = this.contextData.cTr.props;\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    /* if(op === 1){\r\n          return;\r\n      } */\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n      return;\n    }\n\n    this.contextData.cO *= op < 0 ? 0 : op;\n\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n    }\n  };\n\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    this.contextData.reset();\n  };\n\n  CanvasRendererBase.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.save();\n    }\n\n    var props = this.contextData.cTr.props;\n\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate();\n    }\n\n    var i;\n    var arr = this.contextData.saved[this.contextData.cArrPos];\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i];\n    }\n\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\n    this.contextData.cArrPos += 1;\n  };\n\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.restore();\n      this.globalData.blendMode = 'source-over';\n    }\n\n    this.contextData.cArrPos -= 1;\n    var popped = this.contextData.saved[this.contextData.cArrPos];\n    var i;\n    var arr = this.contextData.cTr.props;\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i];\n    }\n\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\n    this.contextData.cO = popped;\n\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped;\n      this.globalData.currentGlobalAlpha = popped;\n    }\n  };\n\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag('canvas');\n      var containerStyle = this.animationItem.container.style;\n      containerStyle.width = '100%';\n      containerStyle.height = '100%';\n      var origin = '0px 0px 0px';\n      containerStyle.transformOrigin = origin;\n      containerStyle.mozTransformOrigin = origin;\n      containerStyle.webkitTransformOrigin = origin;\n      containerStyle['-webkit-transform'] = origin;\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility;\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext('2d');\n\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className);\n      }\n\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute('id', this.renderConfig.id);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n\n    this.data = animData;\n    this.layers = animData.layers;\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0\n    };\n    this.setupGlobalData(animData, document.body);\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = createSizedArray(animData.layers.length);\n    this.updateContainerSize();\n  };\n\n  CanvasRendererBase.prototype.updateContainerSize = function () {\n    this.reset();\n    var elementWidth;\n    var elementHeight;\n\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth;\n      elementHeight = this.animationItem.wrapper.offsetHeight;\n      this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr);\n      this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr);\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\n    }\n\n    var elementRel;\n    var animationRel;\n\n    if (this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ');\n      var fillType = par[1] || 'meet';\n      var pos = par[0] || 'xMidYMid';\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n\n      if (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice') {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n\n      if (xPos === 'xMid' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === 'xMax' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n\n      if (yPos === 'YMid' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === 'YMax' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio === 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    /* var i, len = this.elements.length;\r\n      for(i=0;i<len;i+=1){\r\n          if(this.elements[i] && this.elements[i].data.ty === 0){\r\n              this.elements[i].resize(this.globalData.transformCanvas);\r\n          }\r\n      } */\n\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip();\n    this.renderFrame(this.renderedFrame, true);\n  };\n\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {\n      return;\n    }\n\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\n    this.globalData.frameId += 1;\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\n    this.globalData.projectInterface.currentFrame = num; // console.log('--------');\n    // console.log('NEW: ',num);\n\n    var i;\n    var len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n      } else {\n        this.save();\n      }\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore();\n      }\n    }\n  };\n\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n    /* if(this.layers[pos].ty === 0){\r\n          element.resize(this.globalData.transformCanvas);\r\n      } */\n  };\n\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none';\n  };\n\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = 'block';\n  };\n\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false;\n    this.layers = data.layers;\n    this.pendingElements = [];\n    this.elements = createSizedArray(this.layers.length);\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement);\n\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.data.w, 0);\n    ctx.lineTo(this.data.w, this.data.h);\n    ctx.lineTo(0, this.data.h);\n    ctx.lineTo(0, 0);\n    ctx.clip();\n    var i;\n    var len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  CVCompElement.prototype.destroy = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.layers = null;\n    this.elements = null;\n  };\n\n  CVCompElement.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      className: config && config.className || '',\n      id: config && config.id || ''\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = 'canvas';\n  }\n\n  extendPrototype([CanvasRendererBase], CanvasRenderer);\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  function HBaseElement() {}\n\n  HBaseElement.prototype = {\n    checkBlendMode: function checkBlendMode() {},\n    initRendererElement: function initRendererElement() {\n      this.baseElement = createTag(this.data.tg || 'div');\n\n      if (this.data.hasMask) {\n        this.svgElement = createNS('svg');\n        this.layerElement = createNS('g');\n        this.maskedElement = this.layerElement;\n        this.svgElement.appendChild(this.layerElement);\n        this.baseElement.appendChild(this.svgElement);\n      } else {\n        this.layerElement = this.baseElement;\n      }\n\n      styleDiv(this.baseElement);\n    },\n    createContainerElements: function createContainerElements() {\n      this.renderableEffectsManager = new CVEffects(this);\n      this.transformedElement = this.baseElement;\n      this.maskedElement = this.layerElement;\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      var transformedElementStyle = this.transformedElement ? this.transformedElement.style : {};\n\n      if (this.finalTransform._matMdf) {\n        var matrixValue = this.finalTransform.mat.toCSS();\n        transformedElementStyle.transform = matrixValue;\n        transformedElementStyle.webkitTransform = matrixValue;\n      }\n\n      if (this.finalTransform._opMdf) {\n        transformedElementStyle.opacity = this.finalTransform.mProp.o.v;\n      }\n    },\n    renderFrame: function renderFrame() {\n      // If it is exported as hidden (data.hd === true) no need to render\n      // If it is not visible no need to render\n      if (this.data.hd || this.hidden) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.renderElement();\n      this.renderInnerContent();\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.layerElement = null;\n      this.transformedElement = null;\n\n      if (this.matteElement) {\n        this.matteElement = null;\n      }\n\n      if (this.maskManager) {\n        this.maskManager.destroy();\n        this.maskManager = null;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n    },\n    addEffects: function addEffects() {},\n    setMatte: function setMatte() {}\n  };\n  HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\n  HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\n  HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting;\n\n  function HSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);\n\n  HSolidElement.prototype.createContent = function () {\n    var rect;\n\n    if (this.data.hasMask) {\n      rect = createNS('rect');\n      rect.setAttribute('width', this.data.sw);\n      rect.setAttribute('height', this.data.sh);\n      rect.setAttribute('fill', this.data.sc);\n      this.svgElement.setAttribute('width', this.data.sw);\n      this.svgElement.setAttribute('height', this.data.sh);\n    } else {\n      rect = createTag('div');\n      rect.style.width = this.data.sw + 'px';\n      rect.style.height = this.data.sh + 'px';\n      rect.style.backgroundColor = this.data.sc;\n    }\n\n    this.layerElement.appendChild(rect);\n  };\n\n  function HShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; // List of styles that will be applied to shapes\n\n    this.stylesList = []; // List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; // List of items in shape tree\n\n    this.itemsData = []; // List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.shapesContainer = createNS('g');\n    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);\n  HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\n\n  HShapeElement.prototype.createContent = function () {\n    var cont;\n    this.baseElement.style.fontSize = 0;\n\n    if (this.data.hasMask) {\n      this.layerElement.appendChild(this.shapesContainer);\n      cont = this.svgElement;\n    } else {\n      cont = createNS('svg');\n      var size = this.comp.data ? this.comp.data : this.globalData.compSize;\n      cont.setAttribute('width', size.w);\n      cont.setAttribute('height', size.h);\n      cont.appendChild(this.shapesContainer);\n      this.layerElement.appendChild(cont);\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);\n    this.filterUniqueShapes();\n    this.shapeCont = cont;\n  };\n\n  HShapeElement.prototype.getTransformedPoint = function (transformers, point) {\n    var i;\n    var len = transformers.length;\n\n    for (i = 0; i < len; i += 1) {\n      point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\n    }\n\n    return point;\n  };\n\n  HShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {\n    var shape = item.sh.v;\n    var transformers = item.transformers;\n    var i;\n    var len = shape._length;\n    var vPoint;\n    var oPoint;\n    var nextIPoint;\n    var nextVPoint;\n\n    if (len <= 1) {\n      return;\n    }\n\n    for (i = 0; i < len - 1; i += 1) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n\n    if (shape.c) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n  };\n\n  HShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\n    var bounds = this.shapeBoundingBox;\n    boundingBox.x = bmMin(bounds.left, boundingBox.x);\n    boundingBox.xMax = bmMax(bounds.right, boundingBox.xMax);\n    boundingBox.y = bmMin(bounds.top, boundingBox.y);\n    boundingBox.yMax = bmMax(bounds.bottom, boundingBox.yMax);\n  };\n\n  HShapeElement.prototype.shapeBoundingBox = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  };\n  HShapeElement.prototype.tempBoundingBox = {\n    x: 0,\n    xMax: 0,\n    y: 0,\n    yMax: 0,\n    width: 0,\n    height: 0\n  };\n\n  HShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {\n    var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];\n\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\n      // eslint-disable-line no-plusplus\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      c = 3 * p1[i] - 3 * p0[i];\n      b |= 0; // eslint-disable-line no-bitwise\n\n      a |= 0; // eslint-disable-line no-bitwise\n\n      c |= 0; // eslint-disable-line no-bitwise\n\n      if (a === 0 && b === 0) {//\n      } else if (a === 0) {\n        t = -c / b;\n\n        if (t > 0 && t < 1) {\n          bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));\n        }\n      } else {\n        b2ac = b * b - 4 * c * a;\n\n        if (b2ac >= 0) {\n          t1 = (-b + bmSqrt(b2ac)) / (2 * a);\n          if (t1 > 0 && t1 < 1) bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));\n          t2 = (-b - bmSqrt(b2ac)) / (2 * a);\n          if (t2 > 0 && t2 < 1) bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));\n        }\n      }\n    }\n\n    this.shapeBoundingBox.left = bmMin.apply(null, bounds[0]);\n    this.shapeBoundingBox.top = bmMin.apply(null, bounds[1]);\n    this.shapeBoundingBox.right = bmMax.apply(null, bounds[0]);\n    this.shapeBoundingBox.bottom = bmMax.apply(null, bounds[1]);\n  };\n\n  HShapeElement.prototype.calculateF = function (t, p0, p1, p2, p3, i) {\n    return bmPow(1 - t, 3) * p0[i] + 3 * bmPow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * bmPow(t, 2) * p2[i] + bmPow(t, 3) * p3[i];\n  };\n\n  HShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {\n    var i;\n    var len = itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (itemsData[i] && itemsData[i].sh) {\n        this.calculateShapeBoundingBox(itemsData[i], boundingBox);\n      } else if (itemsData[i] && itemsData[i].it) {\n        this.calculateBoundingBox(itemsData[i].it, boundingBox);\n      } else if (itemsData[i] && itemsData[i].style && itemsData[i].w) {\n        this.expandStrokeBoundingBox(itemsData[i].w, boundingBox);\n      }\n    }\n  };\n\n  HShapeElement.prototype.expandStrokeBoundingBox = function (widthProperty, boundingBox) {\n    var width = 0;\n\n    if (widthProperty.keyframes) {\n      for (var i = 0; i < widthProperty.keyframes.length; i += 1) {\n        var kfw = widthProperty.keyframes[i].s;\n\n        if (kfw > width) {\n          width = kfw;\n        }\n      }\n\n      width *= widthProperty.mult;\n    } else {\n      width = widthProperty.v * widthProperty.mult;\n    }\n\n    boundingBox.x -= width;\n    boundingBox.xMax += width;\n    boundingBox.y -= width;\n    boundingBox.yMax += width;\n  };\n\n  HShapeElement.prototype.currentBoxContains = function (box) {\n    return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;\n  };\n\n  HShapeElement.prototype.renderInnerContent = function () {\n    this._renderShapeFrame();\n\n    if (!this.hidden && (this._isFirstFrame || this._mdf)) {\n      var tempBoundingBox = this.tempBoundingBox;\n      var max = 999999;\n      tempBoundingBox.x = max;\n      tempBoundingBox.xMax = -max;\n      tempBoundingBox.y = max;\n      tempBoundingBox.yMax = -max;\n      this.calculateBoundingBox(this.itemsData, tempBoundingBox);\n      tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\n      tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y; // var tempBoundingBox = this.shapeCont.getBBox();\n\n      if (this.currentBoxContains(tempBoundingBox)) {\n        return;\n      }\n\n      var changed = false;\n\n      if (this.currentBBox.w !== tempBoundingBox.width) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.shapeCont.setAttribute('width', tempBoundingBox.width);\n        changed = true;\n      }\n\n      if (this.currentBBox.h !== tempBoundingBox.height) {\n        this.currentBBox.h = tempBoundingBox.height;\n        this.shapeCont.setAttribute('height', tempBoundingBox.height);\n        changed = true;\n      }\n\n      if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.currentBBox.h = tempBoundingBox.height;\n        this.currentBBox.x = tempBoundingBox.x;\n        this.currentBBox.y = tempBoundingBox.y;\n        this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        var shapeStyle = this.shapeCont.style;\n        var shapeTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n        shapeStyle.transform = shapeTransform;\n        shapeStyle.webkitTransform = shapeTransform;\n      }\n    }\n  };\n\n  function HTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.textPaths = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n    this.renderType = 'svg';\n    this.isMasked = false;\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);\n\n  HTextElement.prototype.createContent = function () {\n    this.isMasked = this.checkMasks();\n\n    if (this.isMasked) {\n      this.renderType = 'svg';\n      this.compW = this.comp.data.w;\n      this.compH = this.comp.data.h;\n      this.svgElement.setAttribute('width', this.compW);\n      this.svgElement.setAttribute('height', this.compH);\n      var g = createNS('g');\n      this.maskedElement.appendChild(g);\n      this.innerElem = g;\n    } else {\n      this.renderType = 'html';\n      this.innerElem = this.layerElement;\n    }\n\n    this.checkParenting();\n  };\n\n  HTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var innerElemStyle = this.innerElem.style;\n    var textColor = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\n    innerElemStyle.fill = textColor;\n    innerElemStyle.color = textColor;\n\n    if (documentData.sc) {\n      innerElemStyle.stroke = this.buildColor(documentData.sc);\n      innerElemStyle.strokeWidth = documentData.sw + 'px';\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (!this.globalData.fontManager.chars) {\n      innerElemStyle.fontSize = documentData.finalSize + 'px';\n      innerElemStyle.lineHeight = documentData.finalSize + 'px';\n\n      if (fontData.fClass) {\n        this.innerElem.className = fontData.fClass;\n      } else {\n        innerElemStyle.fontFamily = fontData.fFamily;\n        var fWeight = documentData.fWeight;\n        var fStyle = documentData.fStyle;\n        innerElemStyle.fontStyle = fStyle;\n        innerElemStyle.fontWeight = fWeight;\n      }\n    }\n\n    var i;\n    var len;\n    var letters = documentData.l;\n    len = letters.length;\n    var tSpan;\n    var tParent;\n    var tCont;\n    var matrixHelper = this.mHelper;\n    var shapes;\n    var shapeStr = '';\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.globalData.fontManager.chars) {\n        if (!this.textPaths[cnt]) {\n          tSpan = createNS('path');\n          tSpan.setAttribute('stroke-linecap', lineCapEnum[1]);\n          tSpan.setAttribute('stroke-linejoin', lineJoinEnum[2]);\n          tSpan.setAttribute('stroke-miterlimit', '4');\n        } else {\n          tSpan = this.textPaths[cnt];\n        }\n\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tCont = tParent.children[0];\n          } else {\n            tParent = createTag('div');\n            tParent.style.lineHeight = 0;\n            tCont = createNS('svg');\n            tCont.appendChild(tSpan);\n            styleDiv(tParent);\n          }\n        }\n      } else if (!this.isMasked) {\n        if (this.textSpans[cnt]) {\n          tParent = this.textSpans[cnt];\n          tSpan = this.textPaths[cnt];\n        } else {\n          tParent = createTag('span');\n          styleDiv(tParent);\n          tSpan = createTag('span');\n          styleDiv(tSpan);\n          tParent.appendChild(tSpan);\n        }\n      } else {\n        tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\n      } // tSpan.setAttribute('visibility', 'hidden');\n\n\n      if (this.globalData.fontManager.chars) {\n        var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n        var shapeData;\n\n        if (charData) {\n          shapeData = charData.data;\n        } else {\n          shapeData = null;\n        }\n\n        matrixHelper.reset();\n\n        if (shapeData && shapeData.shapes && shapeData.shapes.length) {\n          shapes = shapeData.shapes[0].it;\n          matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n          shapeStr = this.createPathShape(matrixHelper, shapes);\n          tSpan.setAttribute('d', shapeStr);\n        }\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent);\n\n          if (shapeData && shapeData.shapes) {\n            // document.body.appendChild is needed to get exact measure of shape\n            document.body.appendChild(tCont);\n            var boundingBox = tCont.getBBox();\n            tCont.setAttribute('width', boundingBox.width + 2);\n            tCont.setAttribute('height', boundingBox.height + 2);\n            tCont.setAttribute('viewBox', boundingBox.x - 1 + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));\n            var tContStyle = tCont.style;\n            var tContTranslation = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';\n            tContStyle.transform = tContTranslation;\n            tContStyle.webkitTransform = tContTranslation;\n            letters[i].yOffset = boundingBox.y - 1;\n          } else {\n            tCont.setAttribute('width', 1);\n            tCont.setAttribute('height', 1);\n          }\n\n          tParent.appendChild(tCont);\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } else {\n        tSpan.textContent = letters[i].val;\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent); //\n\n          var tStyle = tSpan.style;\n          var tSpanTranslation = 'translate3d(0,' + -documentData.finalSize / 1.2 + 'px,0)';\n          tStyle.transform = tSpanTranslation;\n          tStyle.webkitTransform = tSpanTranslation;\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } //\n\n\n      if (!this.isMasked) {\n        this.textSpans[cnt] = tParent;\n      } else {\n        this.textSpans[cnt] = tSpan;\n      }\n\n      this.textSpans[cnt].style.display = 'block';\n      this.textPaths[cnt] = tSpan;\n      cnt += 1;\n    }\n\n    while (cnt < this.textSpans.length) {\n      this.textSpans[cnt].style.display = 'none';\n      cnt += 1;\n    }\n  };\n\n  HTextElement.prototype.renderInnerContent = function () {\n    var svgStyle;\n\n    if (this.data.singleShape) {\n      if (!this._isFirstFrame && !this.lettersChangedFlag) {\n        return;\n      }\n\n      if (this.isMasked && this.finalTransform._matMdf) {\n        // Todo Benchmark if using this is better than getBBox\n        this.svgElement.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);\n        svgStyle = this.svgElement.style;\n        var translation = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\n        svgStyle.transform = translation;\n        svgStyle.webkitTransform = translation;\n      }\n    }\n\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n    if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {\n      return;\n    }\n\n    var i;\n    var len;\n    var count = 0;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var textSpan;\n    var textPath;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        count += 1;\n      } else {\n        textSpan = this.textSpans[i];\n        textPath = this.textPaths[i];\n        renderedLetter = renderedLetters[count];\n        count += 1;\n\n        if (renderedLetter._mdf.m) {\n          if (!this.isMasked) {\n            textSpan.style.webkitTransform = renderedLetter.m;\n            textSpan.style.transform = renderedLetter.m;\n          } else {\n            textSpan.setAttribute('transform', renderedLetter.m);\n          }\n        } /// /textSpan.setAttribute('opacity',renderedLetter.o);\n\n\n        textSpan.style.opacity = renderedLetter.o;\n\n        if (renderedLetter.sw && renderedLetter._mdf.sw) {\n          textPath.setAttribute('stroke-width', renderedLetter.sw);\n        }\n\n        if (renderedLetter.sc && renderedLetter._mdf.sc) {\n          textPath.setAttribute('stroke', renderedLetter.sc);\n        }\n\n        if (renderedLetter.fc && renderedLetter._mdf.fc) {\n          textPath.setAttribute('fill', renderedLetter.fc);\n          textPath.style.color = renderedLetter.fc;\n        }\n      }\n    }\n\n    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {\n      var boundingBox = this.innerElem.getBBox();\n\n      if (this.currentBBox.w !== boundingBox.width) {\n        this.currentBBox.w = boundingBox.width;\n        this.svgElement.setAttribute('width', boundingBox.width);\n      }\n\n      if (this.currentBBox.h !== boundingBox.height) {\n        this.currentBBox.h = boundingBox.height;\n        this.svgElement.setAttribute('height', boundingBox.height);\n      }\n\n      var margin = 1;\n\n      if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {\n        this.currentBBox.w = boundingBox.width + margin * 2;\n        this.currentBBox.h = boundingBox.height + margin * 2;\n        this.currentBBox.x = boundingBox.x - margin;\n        this.currentBBox.y = boundingBox.y - margin;\n        this.svgElement.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        svgStyle = this.svgElement.style;\n        var svgTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n        svgStyle.transform = svgTransform;\n        svgStyle.webkitTransform = svgTransform;\n      }\n    }\n  };\n\n  function HCameraElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initHierarchy();\n    var getProp = PropertyFactory.getProp;\n    this.pe = getProp(this, data.pe, 0, 0, this);\n\n    if (data.ks.p.s) {\n      this.px = getProp(this, data.ks.p.x, 1, 0, this);\n      this.py = getProp(this, data.ks.p.y, 1, 0, this);\n      this.pz = getProp(this, data.ks.p.z, 1, 0, this);\n    } else {\n      this.p = getProp(this, data.ks.p, 1, 0, this);\n    }\n\n    if (data.ks.a) {\n      this.a = getProp(this, data.ks.a, 1, 0, this);\n    }\n\n    if (data.ks.or.k.length && data.ks.or.k[0].to) {\n      var i;\n      var len = data.ks.or.k.length;\n\n      for (i = 0; i < len; i += 1) {\n        data.ks.or.k[i].to = null;\n        data.ks.or.k[i].ti = null;\n      }\n    }\n\n    this.or = getProp(this, data.ks.or, 1, degToRads, this);\n    this.or.sh = true;\n    this.rx = getProp(this, data.ks.rx, 0, degToRads, this);\n    this.ry = getProp(this, data.ks.ry, 0, degToRads, this);\n    this.rz = getProp(this, data.ks.rz, 0, degToRads, this);\n    this.mat = new Matrix();\n    this._prevMat = new Matrix();\n    this._isFirstFrame = true; // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\n\n    this.finalTransform = {\n      mProp: this\n    };\n  }\n\n  extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\n\n  HCameraElement.prototype.setup = function () {\n    var i;\n    var len = this.comp.threeDElements.length;\n    var comp;\n    var perspectiveStyle;\n    var containerStyle;\n\n    for (i = 0; i < len; i += 1) {\n      // [perspectiveElem,container]\n      comp = this.comp.threeDElements[i];\n\n      if (comp.type === '3d') {\n        perspectiveStyle = comp.perspectiveElem.style;\n        containerStyle = comp.container.style;\n        var perspective = this.pe.v + 'px';\n        var origin = '0px 0px 0px';\n        var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n        perspectiveStyle.perspective = perspective;\n        perspectiveStyle.webkitPerspective = perspective;\n        containerStyle.transformOrigin = origin;\n        containerStyle.mozTransformOrigin = origin;\n        containerStyle.webkitTransformOrigin = origin;\n        perspectiveStyle.transform = matrix;\n        perspectiveStyle.webkitTransform = matrix;\n      }\n    }\n  };\n\n  HCameraElement.prototype.createElements = function () {};\n\n  HCameraElement.prototype.hide = function () {};\n\n  HCameraElement.prototype.renderFrame = function () {\n    var _mdf = this._isFirstFrame;\n    var i;\n    var len;\n\n    if (this.hierarchy) {\n      len = this.hierarchy.length;\n\n      for (i = 0; i < len; i += 1) {\n        _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\n      }\n    }\n\n    if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {\n      this.mat.reset();\n\n      if (this.hierarchy) {\n        len = this.hierarchy.length - 1;\n\n        for (i = len; i >= 0; i -= 1) {\n          var mTransf = this.hierarchy[i].finalTransform.mProp;\n          this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);\n          this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\n          this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\n          this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);\n          this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);\n        }\n      }\n\n      if (this.p) {\n        this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);\n      } else {\n        this.mat.translate(-this.px.v, -this.py.v, this.pz.v);\n      }\n\n      if (this.a) {\n        var diffVector;\n\n        if (this.p) {\n          diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\n        } else {\n          diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];\n        }\n\n        var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2)); // var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\n\n        var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];\n        var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);\n        var mRotationX = Math.atan2(lookDir[1], lookLengthOnXZ);\n        var mRotationY = Math.atan2(lookDir[0], -lookDir[2]);\n        this.mat.rotateY(mRotationY).rotateX(-mRotationX);\n      }\n\n      this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\n      this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\n      this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);\n      this.mat.translate(0, 0, this.pe.v);\n      var hasMatrixChanged = !this._prevMat.equals(this.mat);\n\n      if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\n        len = this.comp.threeDElements.length;\n        var comp;\n        var perspectiveStyle;\n        var containerStyle;\n\n        for (i = 0; i < len; i += 1) {\n          comp = this.comp.threeDElements[i];\n\n          if (comp.type === '3d') {\n            if (hasMatrixChanged) {\n              var matValue = this.mat.toCSS();\n              containerStyle = comp.container.style;\n              containerStyle.transform = matValue;\n              containerStyle.webkitTransform = matValue;\n            }\n\n            if (this.pe._mdf) {\n              perspectiveStyle = comp.perspectiveElem.style;\n              perspectiveStyle.perspective = this.pe.v + 'px';\n              perspectiveStyle.webkitPerspective = this.pe.v + 'px';\n            }\n          }\n        }\n\n        this.mat.clone(this._prevMat);\n      }\n    }\n\n    this._isFirstFrame = false;\n  };\n\n  HCameraElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  HCameraElement.prototype.destroy = function () {};\n\n  HCameraElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  function HImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);\n\n  HImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    var img = new Image();\n\n    if (this.data.hasMask) {\n      this.imageElem = createNS('image');\n      this.imageElem.setAttribute('width', this.assetData.w + 'px');\n      this.imageElem.setAttribute('height', this.assetData.h + 'px');\n      this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n      this.layerElement.appendChild(this.imageElem);\n      this.baseElement.setAttribute('width', this.assetData.w);\n      this.baseElement.setAttribute('height', this.assetData.h);\n    } else {\n      this.layerElement.appendChild(img);\n    }\n\n    img.crossOrigin = 'anonymous';\n    img.src = assetPath;\n\n    if (this.data.ln) {\n      this.baseElement.setAttribute('id', this.data.ln);\n    }\n  };\n\n  function HybridRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '400%',\n        height: config && config.filterSize && config.filterSize.height || '400%',\n        x: config && config.filterSize && config.filterSize.x || '-100%',\n        y: config && config.filterSize && config.filterSize.y || '-100%'\n      }\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([BaseRenderer], HybridRendererBase);\n  HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem;\n\n  HybridRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  HybridRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newDOMElement = element.getBaseElement();\n\n    if (!newDOMElement) {\n      return;\n    }\n\n    var layer = this.layers[pos];\n\n    if (!layer.ddd || !this.supports3d) {\n      if (this.threeDElements) {\n        this.addTo3dContainer(newDOMElement, pos);\n      } else {\n        var i = 0;\n        var nextDOMElement;\n        var nextLayer;\n        var tmpDOMElement;\n\n        while (i < pos) {\n          if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {\n            nextLayer = this.elements[i];\n            tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\n            nextDOMElement = tmpDOMElement || nextDOMElement;\n          }\n\n          i += 1;\n        }\n\n        if (nextDOMElement) {\n          if (!layer.ddd || !this.supports3d) {\n            this.layerElement.insertBefore(newDOMElement, nextDOMElement);\n          }\n        } else if (!layer.ddd || !this.supports3d) {\n          this.layerElement.appendChild(newDOMElement);\n        }\n      }\n    } else {\n      this.addTo3dContainer(newDOMElement, pos);\n    }\n  };\n\n  HybridRendererBase.prototype.createShape = function (data) {\n    if (!this.supports3d) {\n      return new SVGShapeElement(data, this.globalData, this);\n    }\n\n    return new HShapeElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createText = function (data) {\n    if (!this.supports3d) {\n      return new SVGTextLottieElement(data, this.globalData, this);\n    }\n\n    return new HTextElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createCamera = function (data) {\n    this.camera = new HCameraElement(data, this.globalData, this);\n    return this.camera;\n  };\n\n  HybridRendererBase.prototype.createImage = function (data) {\n    if (!this.supports3d) {\n      return new IImageElement(data, this.globalData, this);\n    }\n\n    return new HImageElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createSolid = function (data) {\n    if (!this.supports3d) {\n      return new ISolidElement(data, this.globalData, this);\n    }\n\n    return new HSolidElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  HybridRendererBase.prototype.getThreeDContainerByPos = function (pos) {\n    var i = 0;\n    var len = this.threeDElements.length;\n\n    while (i < len) {\n      if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\n        return this.threeDElements[i].perspectiveElem;\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  HybridRendererBase.prototype.createThreeDContainer = function (pos, type) {\n    var perspectiveElem = createTag('div');\n    var style;\n    var containerStyle;\n    styleDiv(perspectiveElem);\n    var container = createTag('div');\n    styleDiv(container);\n\n    if (type === '3d') {\n      style = perspectiveElem.style;\n      style.width = this.globalData.compSize.w + 'px';\n      style.height = this.globalData.compSize.h + 'px';\n      var center = '50% 50%';\n      style.webkitTransformOrigin = center;\n      style.mozTransformOrigin = center;\n      style.transformOrigin = center;\n      containerStyle = container.style;\n      var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n      containerStyle.transform = matrix;\n      containerStyle.webkitTransform = matrix;\n    }\n\n    perspectiveElem.appendChild(container); // this.resizerElem.appendChild(perspectiveElem);\n\n    var threeDContainerData = {\n      container: container,\n      perspectiveElem: perspectiveElem,\n      startPos: pos,\n      endPos: pos,\n      type: type\n    };\n    this.threeDElements.push(threeDContainerData);\n    return threeDContainerData;\n  };\n\n  HybridRendererBase.prototype.build3dContainers = function () {\n    var i;\n    var len = this.layers.length;\n    var lastThreeDContainerData;\n    var currentContainer = '';\n\n    for (i = 0; i < len; i += 1) {\n      if (this.layers[i].ddd && this.layers[i].ty !== 3) {\n        if (currentContainer !== '3d') {\n          currentContainer = '3d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '3d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      } else {\n        if (currentContainer !== '2d') {\n          currentContainer = '2d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '2d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      }\n    }\n\n    len = this.threeDElements.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\n    }\n  };\n\n  HybridRendererBase.prototype.addTo3dContainer = function (elem, pos) {\n    var i = 0;\n    var len = this.threeDElements.length;\n\n    while (i < len) {\n      if (pos <= this.threeDElements[i].endPos) {\n        var j = this.threeDElements[i].startPos;\n        var nextElement;\n\n        while (j < pos) {\n          if (this.elements[j] && this.elements[j].getBaseElement) {\n            nextElement = this.elements[j].getBaseElement();\n          }\n\n          j += 1;\n        }\n\n        if (nextElement) {\n          this.threeDElements[i].container.insertBefore(elem, nextElement);\n        } else {\n          this.threeDElements[i].container.appendChild(elem);\n        }\n\n        break;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRendererBase.prototype.configAnimation = function (animData) {\n    var resizerElem = createTag('div');\n    var wrapper = this.animationItem.wrapper;\n    var style = resizerElem.style;\n    style.width = animData.w + 'px';\n    style.height = animData.h + 'px';\n    this.resizerElem = resizerElem;\n    styleDiv(resizerElem);\n    style.transformStyle = 'flat';\n    style.mozTransformStyle = 'flat';\n    style.webkitTransformStyle = 'flat';\n\n    if (this.renderConfig.className) {\n      resizerElem.setAttribute('class', this.renderConfig.className);\n    }\n\n    wrapper.appendChild(resizerElem);\n    style.overflow = 'hidden';\n    var svg = createNS('svg');\n    svg.setAttribute('width', '1');\n    svg.setAttribute('height', '1');\n    styleDiv(svg);\n    this.resizerElem.appendChild(svg);\n    var defs = createNS('defs');\n    svg.appendChild(defs);\n    this.data = animData; // Mask animation\n\n    this.setupGlobalData(animData, svg);\n    this.globalData.defs = defs;\n    this.layers = animData.layers;\n    this.layerElement = this.resizerElem;\n    this.build3dContainers();\n    this.updateContainerSize();\n  };\n\n  HybridRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    this.animationItem.container = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i += 1) {\n      this.elements[i].destroy();\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  HybridRendererBase.prototype.updateContainerSize = function () {\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\n    var elementRel = elementWidth / elementHeight;\n    var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;\n    var sx;\n    var sy;\n    var tx;\n    var ty;\n\n    if (animationRel > elementRel) {\n      sx = elementWidth / this.globalData.compSize.w;\n      sy = elementWidth / this.globalData.compSize.w;\n      tx = 0;\n      ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;\n    } else {\n      sx = elementHeight / this.globalData.compSize.h;\n      sy = elementHeight / this.globalData.compSize.h;\n      tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;\n      ty = 0;\n    }\n\n    var style = this.resizerElem.style;\n    style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';\n    style.transform = style.webkitTransform;\n  };\n\n  HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\n\n  HybridRendererBase.prototype.hide = function () {\n    this.resizerElem.style.display = 'none';\n  };\n\n  HybridRendererBase.prototype.show = function () {\n    this.resizerElem.style.display = 'block';\n  };\n\n  HybridRendererBase.prototype.initItems = function () {\n    this.buildAllItems();\n\n    if (this.camera) {\n      this.camera.setup();\n    } else {\n      var cWidth = this.globalData.compSize.w;\n      var cHeight = this.globalData.compSize.h;\n      var i;\n      var len = this.threeDElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        var style = this.threeDElements[i].perspectiveElem.style;\n        style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';\n        style.perspective = style.webkitPerspective;\n      }\n    }\n  };\n\n  HybridRendererBase.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n    var floatingContainer = createTag('div');\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  function HCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = !data.hasMask;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement);\n  HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\n\n  HCompElement.prototype.createContainerElements = function () {\n    this._createBaseContainerElements(); // divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\n\n\n    if (this.data.hasMask) {\n      this.svgElement.setAttribute('width', this.data.w);\n      this.svgElement.setAttribute('height', this.data.h);\n      this.transformedElement = this.baseElement;\n    } else {\n      this.transformedElement = this.layerElement;\n    }\n  };\n\n  HCompElement.prototype.addTo3dContainer = function (elem, pos) {\n    var j = 0;\n    var nextElement;\n\n    while (j < pos) {\n      if (this.elements[j] && this.elements[j].getBaseElement) {\n        nextElement = this.elements[j].getBaseElement();\n      }\n\n      j += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(elem, nextElement);\n    } else {\n      this.layerElement.appendChild(elem);\n    }\n  };\n\n  HCompElement.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  function HybridRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '400%',\n        height: config && config.filterSize && config.filterSize.height || '400%',\n        x: config && config.filterSize && config.filterSize.x || '-100%',\n        y: config && config.filterSize && config.filterSize.y || '-100%'\n      }\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([HybridRendererBase], HybridRenderer);\n\n  HybridRenderer.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  var Expressions = function () {\n    var ob = {};\n    ob.initExpressions = initExpressions;\n\n    function initExpressions(animation) {\n      var stackCount = 0;\n      var registers = [];\n\n      function pushExpression() {\n        stackCount += 1;\n      }\n\n      function popExpression() {\n        stackCount -= 1;\n\n        if (stackCount === 0) {\n          releaseInstances();\n        }\n      }\n\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression);\n        }\n      }\n\n      function releaseInstances() {\n        var i;\n        var len = registers.length;\n\n        for (i = 0; i < len; i += 1) {\n          registers[i].release();\n        }\n\n        registers.length = 0;\n      }\n\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n      animation.renderer.globalData.pushExpression = pushExpression;\n      animation.renderer.globalData.popExpression = popExpression;\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\n    }\n\n    return ob;\n  }();\n\n  function _typeof$1(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof$1 = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof$1 = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof$1(obj);\n  }\n  /* eslint-disable */\n\n  /*\r\n   Copyright 2014 David Bau.\r\n     Permission is hereby granted, free of charge, to any person obtaining\r\n   a copy of this software and associated documentation files (the\r\n   \"Software\"), to deal in the Software without restriction, including\r\n   without limitation the rights to use, copy, modify, merge, publish,\r\n   distribute, sublicense, and/or sell copies of the Software, and to\r\n   permit persons to whom the Software is furnished to do so, subject to\r\n   the following conditions:\r\n     The above copyright notice and this permission notice shall be\r\n   included in all copies or substantial portions of the Software.\r\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n     */\n\n\n  function seedRandom(pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n        width = 256,\n        // each RC4 output is 0 <= x < 256\n    chunks = 6,\n        // at least six RC4 outputs for each double\n    digits = 52,\n        // there are 52 significant digits in a double\n    rngname = 'random',\n        // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n        significance = math.pow(2, digits),\n        overflow = significance * 2,\n        mask = width - 1,\n        nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n\n    function seedrandom(seed, options, callback) {\n      var key = [];\n      options = options === true ? {\n        entropy: true\n      } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n      var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n\n      var prng = function prng() {\n        var n = arc4.g(chunks),\n            // Start with a numerator n < 2 ^ 48\n        d = startdenom,\n            //   and denominator d = 2 ^ 48.\n        x = 0; //   and no 'extra last byte'.\n\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width; //   shifting numerator and\n\n          d *= width; //   denominator and generating a\n\n          x = arc4.g(1); //   new least-significant-byte.\n        }\n\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2; //   last byte, shift everything\n\n          d /= 2; //   right using integer math until\n\n          x >>>= 1; //   we have exactly the desired bits.\n        }\n\n        return (n + x) / d; // Form the number within [0, 1).\n      };\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000;\n      };\n\n      prng[\"double\"] = prng; // Mix the randomness into accumulated entropy.\n\n      mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n      return (options.pass || callback || function (prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) {\n            copy(state, arc4);\n          } // Only provide the .state method if requested via options.state.\n\n\n          prng.state = function () {\n            return copy(arc4, {});\n          };\n        } // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n        if (is_math_call) {\n          math[rngname] = prng;\n          return seed;\n        } // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n    }\n\n    math['seed' + rngname] = seedrandom; //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n\n    function ARC4(key) {\n      var t,\n          keylen = key.length,\n          me = this,\n          i = 0,\n          j = me.i = me.j = 0,\n          s = me.S = []; // The empty key [] is treated as [0].\n\n      if (!keylen) {\n        key = [keylen++];\n      } // Set up S using the standard key scheduling algorithm.\n\n\n      while (i < width) {\n        s[i] = i++;\n      }\n\n      for (i = 0; i < width; i++) {\n        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n        s[j] = t;\n      } // The \"g\" method returns the next (count) outputs as one number.\n\n\n      me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n            r = 0,\n            i = me.i,\n            j = me.j,\n            s = me.S;\n\n        while (count--) {\n          t = s[i = mask & i + 1];\n          r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n        }\n\n        me.i = i;\n        me.j = j;\n        return r; // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      };\n    } //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n\n\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    } //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n\n\n    function flatten(obj, depth) {\n      var result = [],\n          typ = _typeof$1(obj),\n          prop;\n\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n    } //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n\n\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n          smear,\n          j = 0;\n\n      while (j < stringseed.length) {\n        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n      }\n\n      return tostring(key);\n    } //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n\n\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width));\n        }\n\n        var out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n            plugins = browser && browser.plugins;\n        return [+new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    } //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n\n\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    } //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n\n\n    mixkey(math.random(), pool); //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    // End anonymous scope, and pass initial values.\n  }\n\n  ;\n\n  function initialize$2(BMMath) {\n    seedRandom([], BMMath);\n  }\n\n  var propTypes = {\n    SHAPE: 'shape'\n  };\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  var ExpressionManager = function () {\n    'use strict';\n\n    var ob = {};\n    var Math = BMMath;\n    var window = null;\n    var document = null;\n    var XMLHttpRequest = null;\n    var fetch = null;\n    var frames = null;\n    initialize$2(BMMath);\n\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array;\n    }\n\n    function isNumerable(tOfV, v) {\n      return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\n    }\n\n    function $bm_neg(a) {\n      var tOfA = _typeof(a);\n\n      if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\n        return -a;\n      }\n\n      if ($bm_isInstanceOfArray(a)) {\n        var i;\n        var lenA = a.length;\n        var retArr = [];\n\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n\n        return retArr;\n      }\n\n      if (a.propType) {\n        return a.v;\n      }\n\n      return -a;\n    }\n\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, 'easeIn').get;\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, 'easeOut').get;\n    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, 'easeInOut').get;\n\n    function sum(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      if (tOfA === 'string' || tOfB === 'string') {\n        return a + b;\n      }\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] += b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a + b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    var add = sum;\n\n    function sub(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === 'string') {\n          a = parseInt(a, 10);\n        }\n\n        if (tOfB === 'string') {\n          b = parseInt(b, 10);\n        }\n\n        return a - b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] -= b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a - b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    function mul(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b;\n      }\n\n      var i;\n      var len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function div(a, b) {\n      var tOfA = _typeof(a);\n\n      var tOfB = _typeof(b);\n\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b;\n      }\n\n      var i;\n      var len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a, 10);\n      }\n\n      if (typeof b === 'string') {\n        b = parseInt(b, 10);\n      }\n\n      return a % b;\n    }\n\n    var $bm_sum = sum;\n    var $bm_sub = sub;\n    var $bm_mul = mul;\n    var $bm_div = div;\n    var $bm_mod = mod;\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n\n      return Math.min(Math.max(num, min), max);\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads;\n    }\n\n    var radians_to_degrees = radiansToDegrees;\n\n    function degreesToRadians(val) {\n      return val * degToRads;\n    }\n\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math.abs(arr1 - arr2);\n      }\n\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n\n      var i;\n      var len = Math.min(arr1.length, arr2.length);\n      var addedLength = 0;\n\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2);\n      }\n\n      return Math.sqrt(addedLength);\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0];\n      var g = val[1];\n      var b = val[2];\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var h;\n      var s;\n      var l = (max + min) / 2;\n\n      if (max === min) {\n        h = 0; // achromatic\n\n        s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n\n          default:\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [h, s, l, val[3]];\n    }\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    function hslToRgb(val) {\n      var h = val[0];\n      var s = val[1];\n      var l = val[2];\n      var r;\n      var g;\n      var b;\n\n      if (s === 0) {\n        r = l; // achromatic\n\n        b = l; // achromatic\n\n        g = l; // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n\n      return [r, g, b, val[3]];\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        value1 = tMin;\n        value2 = tMax;\n        tMin = 0;\n        tMax = 1;\n      }\n\n      if (tMax < tMin) {\n        var _tMin = tMax;\n        tMax = tMin;\n        tMin = _tMin;\n      }\n\n      if (t <= tMin) {\n        return value1;\n      }\n\n      if (t >= tMax) {\n        return value2;\n      }\n\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n\n      var i;\n      var len = value1.length;\n      var arr = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n\n      return arr;\n    }\n\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = undefined;\n        }\n      }\n\n      if (max.length) {\n        var i;\n        var len = max.length;\n\n        if (!min) {\n          min = createTypedArray('float32', len);\n        }\n\n        var arr = createTypedArray('float32', len);\n        var rnd = BMMath.random();\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n\n        return arr;\n      }\n\n      if (min === undefined) {\n        min = 0;\n      }\n\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      var i;\n      var len = points.length;\n      var path = shapePool.newElement();\n      path.setPathData(!!closed, len);\n      var arrPlaceholder = [0, 0];\n      var inVertexPoint;\n      var outVertexPoint;\n\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;\n        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\n      }\n\n      return path;\n    }\n\n    function initiateExpression(elem, data, property) {\n      var val = data.x;\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val);\n\n      var _needsRandom = val.indexOf('random') !== -1;\n\n      var elemType = elem.data.ty;\n      var transform;\n      var $bm_transform;\n      var content;\n      var effect;\n      var thisProperty = property;\n      thisProperty.valueAtTime = thisProperty.getValueAtTime;\n      Object.defineProperty(thisProperty, 'value', {\n        get: function get() {\n          return thisProperty.v;\n        }\n      });\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\n      elem.comp.displayStartTime = 0;\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      var width = elem.data.sw ? elem.data.sw : 0;\n      var height = elem.data.sh ? elem.data.sh : 0;\n      var name = elem.data.nm;\n      var loopIn;\n      var loop_in;\n      var loopOut;\n      var loop_out;\n      var smooth;\n      var toWorld;\n      var fromWorld;\n      var fromComp;\n      var toComp;\n      var fromCompToSurface;\n      var position;\n      var rotation;\n      var anchorPoint;\n      var scale;\n      var thisLayer;\n      var thisComp;\n      var mask;\n      var valueAtTime;\n      var velocityAtTime;\n      var scoped_bm_rt; // val = val.replace(/(\\\\?\"|')((http)(s)?(:\\/))?\\/.*?(\\\\?\"|')/g, \"\\\"\\\"\"); // deter potential network calls\n\n      var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}]')[0]; // eslint-disable-line no-eval\n\n      var numKeys = property.kf ? data.k.length : 0;\n      var active = !this.data || this.data.hd !== true;\n\n      var wiggle = function wiggle(freq, amp) {\n        var iWiggle;\n        var j;\n        var lenWiggle = this.pv.length ? this.pv.length : 1;\n        var addedAmps = createTypedArray('float32', lenWiggle);\n        freq = 5;\n        var iterations = Math.floor(time * freq);\n        iWiggle = 0;\n        j = 0;\n\n        while (iWiggle < iterations) {\n          // var rnd = BMMath.random();\n          for (j = 0; j < lenWiggle; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random(); // addedAmps[j] += -amp + amp*2*rnd;\n          }\n\n          iWiggle += 1;\n        } // var rnd2 = BMMath.random();\n\n\n        var periods = time * freq;\n        var perc = periods - Math.floor(periods);\n        var arr = createTypedArray('float32', lenWiggle);\n\n        if (lenWiggle > 1) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc; // arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\n            // arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\n          }\n\n          return arr;\n        }\n\n        return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\n      }.bind(this);\n\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty);\n        loop_in = loopIn;\n      }\n\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty);\n        loop_out = loopOut;\n      }\n\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty);\n      }\n\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true);\n      }\n\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true);\n      }\n\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this);\n      }\n\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this);\n      }\n\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\n\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\n        return [yaw, pitch, 0];\n      }\n\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2);\n      }\n\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === undefined) {\n          val1 = tMin;\n          val2 = tMax;\n        } else {\n          t = (t - tMin) / (tMax - tMin);\n        }\n\n        if (t > 1) {\n          t = 1;\n        } else if (t < 0) {\n          t = 0;\n        }\n\n        var mult = fn(t);\n\n        if ($bm_isInstanceOfArray(val1)) {\n          var iKey;\n          var lenKey = val1.length;\n          var arr = createTypedArray('float32', lenKey);\n\n          for (iKey = 0; iKey < lenKey; iKey += 1) {\n            arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey];\n          }\n\n          return arr;\n        }\n\n        return (val2 - val1) * mult + val1;\n      }\n\n      function nearestKey(time) {\n        var iKey;\n        var lenKey = data.k.length;\n        var index;\n        var keyTime;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          index = 0;\n          keyTime = 0;\n        } else {\n          index = -1;\n          time *= elem.comp.globalData.frameRate;\n\n          if (time < data.k[0].t) {\n            index = 1;\n            keyTime = data.k[0].t;\n          } else {\n            for (iKey = 0; iKey < lenKey - 1; iKey += 1) {\n              if (time === data.k[iKey].t) {\n                index = iKey + 1;\n                keyTime = data.k[iKey].t;\n                break;\n              } else if (time > data.k[iKey].t && time < data.k[iKey + 1].t) {\n                if (time - data.k[iKey].t > data.k[iKey + 1].t - time) {\n                  index = iKey + 2;\n                  keyTime = data.k[iKey + 1].t;\n                } else {\n                  index = iKey + 1;\n                  keyTime = data.k[iKey].t;\n                }\n\n                break;\n              }\n            }\n\n            if (index === -1) {\n              index = iKey + 1;\n              keyTime = data.k[iKey].t;\n            }\n          }\n        }\n\n        var obKey = {};\n        obKey.index = index;\n        obKey.time = keyTime / elem.comp.globalData.frameRate;\n        return obKey;\n      }\n\n      function key(ind) {\n        var obKey;\n        var iKey;\n        var lenKey;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          throw new Error('The property has no keyframe at index ' + ind);\n        }\n\n        ind -= 1;\n        obKey = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: []\n        };\n        var arr = Object.prototype.hasOwnProperty.call(data.k[ind], 's') ? data.k[ind].s : data.k[ind - 1].e;\n        lenKey = arr.length;\n\n        for (iKey = 0; iKey < lenKey; iKey += 1) {\n          obKey[iKey] = arr[iKey];\n          obKey.value[iKey] = arr[iKey];\n        }\n\n        return obKey;\n      }\n\n      function framesToTime(fr, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return fr / fps;\n      }\n\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time;\n        }\n\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return t * fps;\n      }\n\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed);\n      }\n\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime();\n      }\n\n      function substring(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substring(init);\n          }\n\n          return value.substring(init, end);\n        }\n\n        return '';\n      }\n\n      function substr(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substr(init);\n          }\n\n          return value.substr(init, end);\n        }\n\n        return '';\n      }\n\n      function posterizeTime(framesPerSecond) {\n        time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond;\n        value = valueAtTime(time);\n      }\n\n      var time;\n      var velocity;\n      var value;\n      var text;\n      var textIndex;\n      var textTotal;\n      var selectorValue;\n      var index = elem.data.ind;\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n      var parent;\n      var randSeed = Math.floor(Math.random() * 1000000);\n      var globalData = elem.globalData;\n\n      function executeExpression(_value) {\n        // globalData.pushExpression();\n        value = _value;\n\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\n          return value;\n        }\n\n        if (this.propType === 'textSelector') {\n          textIndex = this.textIndex;\n          textTotal = this.textTotal;\n          selectorValue = this.selectorValue;\n        }\n\n        if (!thisLayer) {\n          text = elem.layerInterface.text;\n          thisLayer = elem.layerInterface;\n          thisComp = elem.comp.compInterface;\n          toWorld = thisLayer.toWorld.bind(thisLayer);\n          fromWorld = thisLayer.fromWorld.bind(thisLayer);\n          fromComp = thisLayer.fromComp.bind(thisLayer);\n          toComp = thisLayer.toComp.bind(thisLayer);\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\n          fromCompToSurface = fromComp;\n        }\n\n        if (!transform) {\n          transform = elem.layerInterface('ADBE Transform Group');\n          $bm_transform = transform;\n\n          if (transform) {\n            anchorPoint = transform.anchorPoint;\n            /* position = transform.position;\r\n                      rotation = transform.rotation;\r\n                      scale = transform.scale; */\n          }\n        }\n\n        if (elemType === 4 && !content) {\n          content = thisLayer('ADBE Root Vectors Group');\n        }\n\n        if (!effect) {\n          effect = thisLayer(4);\n        }\n\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface;\n        }\n\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate;\n\n        if (_needsRandom) {\n          seedRandom(randSeed + time);\n        }\n\n        if (needsVelocity) {\n          velocity = velocityAtTime(time);\n        }\n\n        expression_function();\n        this.frameExpressionId = elem.globalData.frameId; // TODO: Check if it's possible to return on ShapeInterface the .v value\n        // Changed this to a ternary operation because Rollup failed compiling it correctly\n\n        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt;\n        return scoped_bm_rt;\n      } // Bundlers will see these as dead code and unless we reference them\n\n\n      executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData];\n      return executeExpression;\n    }\n\n    ob.initiateExpression = initiateExpression;\n    ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath];\n    return ob;\n  }();\n\n  var expressionHelpers = function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true;\n        prop.x = true;\n        prop.initiateExpression = ExpressionManager.initiateExpression;\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop));\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n\n      return this._cachingAtTime.value;\n    }\n\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var speed = 0;\n\n      if (v1.length) {\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2);\n        }\n\n        speed = Math.sqrt(speed) * 100;\n      } else {\n        speed = 0;\n      }\n\n      return speed;\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel;\n      }\n\n      var delta = -0.001; // frameNum += this.elem.data.st;\n\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity;\n\n      if (v1.length) {\n        velocity = createTypedArray('float32', v1.length);\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          // removing frameRate\n          // if needed, don't add it here\n          // velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity = (v2 - v1) / delta;\n      }\n\n      return velocity;\n    }\n\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n\n    return {\n      searchExpressions: searchExpressions,\n      getSpeedAtTime: getSpeedAtTime,\n      getVelocityAtTime: getVelocityAtTime,\n      getValueAtTime: getValueAtTime,\n      getStaticValueAtTime: getStaticValueAtTime,\n      setGroupProperty: setGroupProperty\n    };\n  }();\n\n  function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      }\n\n      var cycleDuration;\n      var firstKeyFrame;\n\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);\n        }\n\n        firstKeyFrame = lastKeyFrame - cycleDuration;\n      }\n\n      var i;\n      var len;\n      var ret;\n\n      if (type === 'pingpong') {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n          }\n\n          return ret;\n        }\n\n        return (endV - initV) * repeats + current;\n      } else if (type === 'continue') {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\n\n        if (this.pv.length) {\n          ret = new Array(lastValue.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 0.0005; // eslint-disable-line\n          }\n\n          return ret;\n        }\n\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001);\n      }\n\n      return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      }\n\n      var cycleDuration;\n      var lastKeyFrame;\n\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n\n        lastKeyFrame = keyframes[duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);\n        }\n\n        lastKeyFrame = firstKeyFrame + cycleDuration;\n      }\n\n      var i;\n      var len;\n      var ret;\n\n      if (type === 'pingpong') {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n          }\n\n          return ret;\n        }\n\n        return current - (endV - initV) * repeats;\n      } else if (type === 'continue') {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\n\n        if (this.pv.length) {\n          ret = new Array(firstValue.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 0.001;\n          }\n\n          return ret;\n        }\n\n        return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 0.001;\n      }\n\n      return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n    }\n\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      width = (width || 0.4) * 0.5;\n      samples = Math.floor(samples || 5);\n\n      if (samples <= 1) {\n        return this.pv;\n      }\n\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\n      var initFrame = currentTime - width;\n      var endFrame = currentTime + width;\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\n      var i = 0;\n      var j = 0;\n      var value;\n\n      if (this.pv.length) {\n        value = createTypedArray('float32', this.pv.length);\n      } else {\n        value = 0;\n      }\n\n      var sampleValue;\n\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\n\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j];\n          }\n        } else {\n          value += sampleValue;\n        }\n\n        i += 1;\n      }\n\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples;\n        }\n      } else {\n        value /= samples;\n      }\n\n      return value;\n    }\n\n    function getTransformValueAtTime(time) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix()\n        };\n      } /// /\n\n\n      var matrix = this._transformCachingAtTime.v;\n      matrix.cloneFromProps(this.pre.props);\n\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time);\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);\n      }\n\n      if (this.appliedTransformations < 2) {\n        var scale = this.s.getValueAtTime(time);\n        matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult);\n      }\n\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time);\n        var skewAxis = this.sa.getValueAtTime(time);\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);\n      }\n\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation = this.r.getValueAtTime(time);\n        matrix.rotate(-rotation * this.r.mult);\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time);\n        var rotationY = this.ry.getValueAtTime(time);\n        var rotationX = this.rx.getValueAtTime(time);\n        var orientation = this.or.getValueAtTime(time);\n        matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);\n      }\n\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time);\n        var positionY = this.py.getValueAtTime(time);\n\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time);\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);\n        }\n      } else {\n        var position = this.p.getValueAtTime(time);\n        matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult);\n      }\n\n      return matrix; /// /\n    }\n\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix());\n    }\n\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\n\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container);\n\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      return prop;\n    };\n\n    var propertyGetProp = PropertyFactory.getProp;\n\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container); // prop.getVelocityAtTime = getVelocityAtTime;\n      // prop.loopOut = loopOut;\n      // prop.loopIn = loopIn;\n\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      prop.loopOut = loopOut;\n      prop.loopIn = loopIn;\n      prop.smooth = smooth;\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\n      prop.numKeys = data.a === 1 ? data.k.length : 0;\n      prop.propertyIndex = data.ix;\n      var value = 0;\n\n      if (type !== 0) {\n        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length);\n      }\n\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value\n      };\n      expressionHelpers.searchExpressions(elem, data, prop);\n\n      if (prop.k) {\n        container.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n\n    function getShapeValueAtTime(frameNum) {\n      // For now this caching object is created only when needed instead of creating it when the shape is initialized.\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame\n        };\n      }\n\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\n        this._cachingAtTime.lastTime = frameNum;\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\n      }\n\n      return this._cachingAtTime.shapeValue;\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n\n    function ShapeExpressions() {}\n\n    ShapeExpressions.prototype = {\n      vertices: function vertices(prop, time) {\n        if (this.k) {\n          this.getValue();\n        }\n\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        var i;\n        var len = shapePath._length;\n        var vertices = shapePath[prop];\n        var points = shapePath.v;\n        var arr = createSizedArray(len);\n\n        for (i = 0; i < len; i += 1) {\n          if (prop === 'i' || prop === 'o') {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]];\n          }\n        }\n\n        return arr;\n      },\n      points: function points(time) {\n        return this.vertices('v', time);\n      },\n      inTangents: function inTangents(time) {\n        return this.vertices('i', time);\n      },\n      outTangents: function outTangents(time) {\n        return this.vertices('o', time);\n      },\n      isClosed: function isClosed() {\n        return this.v.c;\n      },\n      pointOnPath: function pointOnPath(perc, time) {\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath);\n        }\n\n        var segmentsLength = this._segmentsLength;\n        var lengths = segmentsLength.lengths;\n        var lengthPos = segmentsLength.totalLength * perc;\n        var i = 0;\n        var len = lengths.length;\n        var accumulatedLength = 0;\n        var pt;\n\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i;\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n            break;\n          } else {\n            accumulatedLength += lengths[i].addedLength;\n          }\n\n          i += 1;\n        }\n\n        if (!pt) {\n          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n        }\n\n        return pt;\n      },\n      vectorOnPath: function vectorOnPath(perc, time, vectorType) {\n        // perc doesn't use triple equality because it can be a Number object as well as a primitive.\n        if (perc == 1) {\n          // eslint-disable-line eqeqeq\n          perc = this.v.c;\n        } else if (perc == 0) {\n          // eslint-disable-line eqeqeq\n          perc = 0.999;\n        }\n\n        var pt1 = this.pointOnPath(perc, time);\n        var pt2 = this.pointOnPath(perc + 0.001, time);\n        var xLength = pt2[0] - pt1[0];\n        var yLength = pt2[1] - pt1[1];\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n\n        if (magnitude === 0) {\n          return [0, 0];\n        }\n\n        var unitVector = vectorType === 'tangent' ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n        return unitVector;\n      },\n      tangentOnPath: function tangentOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'tangent');\n      },\n      normalOnPath: function normalOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'normal');\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime\n    };\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims);\n      prop.propertyIndex = data.ix;\n      prop.lock = false;\n\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop);\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n  }\n\n  function initialize$1() {\n    addPropertyDecorator();\n  }\n\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.addEffect(this.getExpressionValue.bind(this));\n        return true;\n      }\n\n      return null;\n    }\n\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text);\n\n      if (currentValue.t !== newValue) {\n        var newData = {};\n        this.copyData(newData, currentValue);\n        newData.t = newValue.toString();\n        newData.__complete = false;\n        return newData;\n      }\n\n      return currentValue;\n    };\n\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes();\n      var hasExpressions = this.searchExpressions();\n      this.kf = isKeyframed || hasExpressions;\n      return this.kf;\n    };\n\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  }\n\n  function initialize() {\n    addDecorator();\n  }\n\n  function SVGComposableEffect() {}\n\n  SVGComposableEffect.prototype = {\n    createMergeNode: function createMergeNode(resultId, ins) {\n      var feMerge = createNS('feMerge');\n      feMerge.setAttribute('result', resultId);\n      var feMergeNode;\n      var i;\n\n      for (i = 0; i < ins.length; i += 1) {\n        feMergeNode = createNS('feMergeNode');\n        feMergeNode.setAttribute('in', ins[i]);\n        feMerge.appendChild(feMergeNode);\n        feMerge.appendChild(feMergeNode);\n      }\n\n      return feMerge;\n    }\n  };\n\n  function SVGTintFilter(filter, filterManager, elem, id, source) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id + '_tint_1');\n    filter.appendChild(feColorMatrix);\n    feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id + '_tint_2');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n    var feMerge = this.createMergeNode(id, [source, id + '_tint_1', id + '_tint_2']);\n    filter.appendChild(feMerge);\n  }\n\n  extendPrototype([SVGComposableEffect], SVGTintFilter);\n\n  SVGTintFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var colorBlack = this.filterManager.effectElements[0].p.v;\n      var colorWhite = this.filterManager.effectElements[1].p.v;\n      var opacity = this.filterManager.effectElements[2].p.v / 100;\n      this.matrixFilter.setAttribute('values', colorWhite[0] - colorBlack[0] + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGFillFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id);\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n  }\n\n  SVGFillFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color = this.filterManager.effectElements[2].p.v;\n      var opacity = this.filterManager.effectElements[6].p.v;\n      this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGStrokeEffect(fil, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.elem = elem;\n    this.paths = [];\n  }\n\n  SVGStrokeEffect.prototype.initialize = function () {\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n    var path;\n    var groupPath;\n    var i;\n    var len;\n\n    if (this.filterManager.effectElements[1].p.v === 1) {\n      len = this.elem.maskManager.masksProperties.length;\n      i = 0;\n    } else {\n      i = this.filterManager.effectElements[0].p.v - 1;\n      len = i + 1;\n    }\n\n    groupPath = createNS('g');\n    groupPath.setAttribute('fill', 'none');\n    groupPath.setAttribute('stroke-linecap', 'round');\n    groupPath.setAttribute('stroke-dashoffset', 1);\n\n    for (i; i < len; i += 1) {\n      path = createNS('path');\n      groupPath.appendChild(path);\n      this.paths.push({\n        p: path,\n        m: i\n      });\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 3) {\n      var mask = createNS('mask');\n      var id = createElementID();\n      mask.setAttribute('id', id);\n      mask.setAttribute('mask-type', 'alpha');\n      mask.appendChild(groupPath);\n      this.elem.globalData.defs.appendChild(mask);\n      var g = createNS('g');\n      g.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');\n\n      while (elemChildren[0]) {\n        g.appendChild(elemChildren[0]);\n      }\n\n      this.elem.layerElement.appendChild(g);\n      this.masker = mask;\n      groupPath.setAttribute('stroke', '#fff');\n    } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (this.filterManager.effectElements[10].p.v === 2) {\n        elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n\n        while (elemChildren.length) {\n          this.elem.layerElement.removeChild(elemChildren[0]);\n        }\n      }\n\n      this.elem.layerElement.appendChild(groupPath);\n      this.elem.layerElement.removeAttribute('mask');\n      groupPath.setAttribute('stroke', '#fff');\n    }\n\n    this.initialized = true;\n    this.pathMasker = groupPath;\n  };\n\n  SVGStrokeEffect.prototype.renderFrame = function (forceRender) {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    var i;\n    var len = this.paths.length;\n    var mask;\n    var path;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.paths[i].m !== -1) {\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\n        path = this.paths[i].p;\n\n        if (forceRender || this.filterManager._mdf || mask.prop._mdf) {\n          path.setAttribute('d', mask.lastPath);\n        }\n\n        if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {\n          var dasharrayValue;\n\n          if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {\n            var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\n            var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\n            var l = path.getTotalLength();\n            dasharrayValue = '0 0 0 ' + l * s + ' ';\n            var lineLength = l * (e - s);\n            var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\n            var units = Math.floor(lineLength / segment);\n            var j;\n\n            for (j = 0; j < units; j += 1) {\n              dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + ' ';\n            }\n\n            dasharrayValue += '0 ' + l * 10 + ' 0 0';\n          } else {\n            dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\n          }\n\n          path.setAttribute('stroke-dasharray', dasharrayValue);\n        }\n      }\n    }\n\n    if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n      this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);\n    }\n\n    if (forceRender || this.filterManager.effectElements[6].p._mdf) {\n      this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (forceRender || this.filterManager.effectElements[3].p._mdf) {\n        var color = this.filterManager.effectElements[3].p.v;\n        this.pathMasker.setAttribute('stroke', 'rgb(' + bmFloor(color[0] * 255) + ',' + bmFloor(color[1] * 255) + ',' + bmFloor(color[2] * 255) + ')');\n      }\n    }\n  };\n\n  function SVGTritoneFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    filter.appendChild(feColorMatrix);\n    var feComponentTransfer = createNS('feComponentTransfer');\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n    feComponentTransfer.setAttribute('result', id);\n    this.matrixFilter = feComponentTransfer;\n    var feFuncR = createNS('feFuncR');\n    feFuncR.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncR);\n    this.feFuncR = feFuncR;\n    var feFuncG = createNS('feFuncG');\n    feFuncG.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncG);\n    this.feFuncG = feFuncG;\n    var feFuncB = createNS('feFuncB');\n    feFuncB.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncB);\n    this.feFuncB = feFuncB;\n    filter.appendChild(feComponentTransfer);\n  }\n\n  SVGTritoneFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color1 = this.filterManager.effectElements[0].p.v;\n      var color2 = this.filterManager.effectElements[1].p.v;\n      var color3 = this.filterManager.effectElements[2].p.v;\n      var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\n      var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\n      var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\n      this.feFuncR.setAttribute('tableValues', tableR);\n      this.feFuncG.setAttribute('tableValues', tableG);\n      this.feFuncB.setAttribute('tableValues', tableB);\n    }\n  };\n\n  function SVGProLevelsFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var effectElements = this.filterManager.effectElements;\n    var feComponentTransfer = createNS('feComponentTransfer'); // Red\n\n    if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {\n      this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\n    } // Green\n\n\n    if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {\n      this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\n    } // Blue\n\n\n    if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {\n      this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\n    } // Alpha\n\n\n    if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {\n      this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\n    } // RGB\n\n\n    if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n    }\n\n    if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {\n      feComponentTransfer = createNS('feComponentTransfer');\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      feComponentTransfer.setAttribute('result', id);\n      filter.appendChild(feComponentTransfer);\n      this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\n      this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\n      this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n  }\n\n  SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {\n    var feFunc = createNS(type);\n    feFunc.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFunc);\n    return feFunc;\n  };\n\n  SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\n    var cnt = 0;\n    var segments = 256;\n    var perc;\n    var min = Math.min(inputBlack, inputWhite);\n    var max = Math.max(inputBlack, inputWhite);\n    var table = Array.call(null, {\n      length: segments\n    });\n    var colorValue;\n    var pos = 0;\n    var outputDelta = outputWhite - outputBlack;\n    var inputDelta = inputWhite - inputBlack;\n\n    while (cnt <= 256) {\n      perc = cnt / 256;\n\n      if (perc <= min) {\n        colorValue = inputDelta < 0 ? outputWhite : outputBlack;\n      } else if (perc >= max) {\n        colorValue = inputDelta < 0 ? outputBlack : outputWhite;\n      } else {\n        colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);\n      }\n\n      table[pos] = colorValue;\n      pos += 1;\n      cnt += 256 / (segments - 1);\n    }\n\n    return table.join(' ');\n  };\n\n  SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var val;\n      var effectElements = this.filterManager.effectElements;\n\n      if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {\n        val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);\n        this.feFuncRComposed.setAttribute('tableValues', val);\n        this.feFuncGComposed.setAttribute('tableValues', val);\n        this.feFuncBComposed.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {\n        val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);\n        this.feFuncR.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {\n        val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);\n        this.feFuncG.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {\n        val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);\n        this.feFuncB.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {\n        val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);\n        this.feFuncA.setAttribute('tableValues', val);\n      }\n    }\n  };\n\n  function SVGDropShadowEffect(filter, filterManager, elem, id, source) {\n    var globalFilterSize = filterManager.container.globalData.renderConfig.filterSize;\n    var filterSize = filterManager.data.fs || globalFilterSize;\n    filter.setAttribute('x', filterSize.x || globalFilterSize.x);\n    filter.setAttribute('y', filterSize.y || globalFilterSize.y);\n    filter.setAttribute('width', filterSize.width || globalFilterSize.width);\n    filter.setAttribute('height', filterSize.height || globalFilterSize.height);\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('in', 'SourceAlpha');\n    feGaussianBlur.setAttribute('result', id + '_drop_shadow_1');\n    feGaussianBlur.setAttribute('stdDeviation', '0');\n    this.feGaussianBlur = feGaussianBlur;\n    filter.appendChild(feGaussianBlur);\n    var feOffset = createNS('feOffset');\n    feOffset.setAttribute('dx', '25');\n    feOffset.setAttribute('dy', '0');\n    feOffset.setAttribute('in', id + '_drop_shadow_1');\n    feOffset.setAttribute('result', id + '_drop_shadow_2');\n    this.feOffset = feOffset;\n    filter.appendChild(feOffset);\n    var feFlood = createNS('feFlood');\n    feFlood.setAttribute('flood-color', '#00ff00');\n    feFlood.setAttribute('flood-opacity', '1');\n    feFlood.setAttribute('result', id + '_drop_shadow_3');\n    this.feFlood = feFlood;\n    filter.appendChild(feFlood);\n    var feComposite = createNS('feComposite');\n    feComposite.setAttribute('in', id + '_drop_shadow_3');\n    feComposite.setAttribute('in2', id + '_drop_shadow_2');\n    feComposite.setAttribute('operator', 'in');\n    feComposite.setAttribute('result', id + '_drop_shadow_4');\n    filter.appendChild(feComposite);\n    var feMerge = this.createMergeNode(id, [id + '_drop_shadow_4', source]);\n    filter.appendChild(feMerge); //\n  }\n\n  extendPrototype([SVGComposableEffect], SVGDropShadowEffect);\n\n  SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n        this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\n      }\n\n      if (forceRender || this.filterManager.effectElements[0].p._mdf) {\n        var col = this.filterManager.effectElements[0].p.v;\n        this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));\n      }\n\n      if (forceRender || this.filterManager.effectElements[1].p._mdf) {\n        this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);\n      }\n\n      if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {\n        var distance = this.filterManager.effectElements[3].p.v;\n        var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\n        var x = distance * Math.cos(angle);\n        var y = distance * Math.sin(angle);\n        this.feOffset.setAttribute('dx', x);\n        this.feOffset.setAttribute('dy', y);\n      }\n    }\n  };\n\n  var _svgMatteSymbols = [];\n\n  function SVGMatte3Effect(filterElem, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.filterElem = filterElem;\n    this.elem = elem;\n    elem.matteElement = createNS('g');\n    elem.matteElement.appendChild(elem.layerElement);\n    elem.matteElement.appendChild(elem.transformedElement);\n    elem.baseElement = elem.matteElement;\n  }\n\n  SVGMatte3Effect.prototype.findSymbol = function (mask) {\n    var i = 0;\n    var len = _svgMatteSymbols.length;\n\n    while (i < len) {\n      if (_svgMatteSymbols[i] === mask) {\n        return _svgMatteSymbols[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  SVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {\n    var parentNode = mask.layerElement.parentNode;\n\n    if (!parentNode) {\n      return;\n    }\n\n    var children = parentNode.children;\n    var i = 0;\n    var len = children.length;\n\n    while (i < len) {\n      if (children[i] === mask.layerElement) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    var nextChild;\n\n    if (i <= len - 2) {\n      nextChild = children[i + 1];\n    }\n\n    var useElem = createNS('use');\n    useElem.setAttribute('href', '#' + symbolId);\n\n    if (nextChild) {\n      parentNode.insertBefore(useElem, nextChild);\n    } else {\n      parentNode.appendChild(useElem);\n    }\n  };\n\n  SVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {\n    if (!this.findSymbol(mask)) {\n      var symbolId = createElementID();\n      var masker = createNS('mask');\n      masker.setAttribute('id', mask.layerId);\n      masker.setAttribute('mask-type', 'alpha');\n\n      _svgMatteSymbols.push(mask);\n\n      var defs = elem.globalData.defs;\n      defs.appendChild(masker);\n      var symbol = createNS('symbol');\n      symbol.setAttribute('id', symbolId);\n      this.replaceInParent(mask, symbolId);\n      symbol.appendChild(mask.layerElement);\n      defs.appendChild(symbol);\n      var useElem = createNS('use');\n      useElem.setAttribute('href', '#' + symbolId);\n      masker.appendChild(useElem);\n      mask.data.hd = false;\n      mask.show();\n    }\n\n    elem.setMatte(mask.layerId);\n  };\n\n  SVGMatte3Effect.prototype.initialize = function () {\n    var ind = this.filterManager.effectElements[0].p.v;\n    var elements = this.elem.comp.elements;\n    var i = 0;\n    var len = elements.length;\n\n    while (i < len) {\n      if (elements[i] && elements[i].data.ind === ind) {\n        this.setElementAsMask(this.elem, elements[i]);\n      }\n\n      i += 1;\n    }\n\n    this.initialized = true;\n  };\n\n  SVGMatte3Effect.prototype.renderFrame = function () {\n    if (!this.initialized) {\n      this.initialize();\n    }\n  };\n\n  function SVGGaussianBlurEffect(filter, filterManager, elem, id) {\n    // Outset the filter region by 100% on all sides to accommodate blur expansion.\n    filter.setAttribute('x', '-100%');\n    filter.setAttribute('y', '-100%');\n    filter.setAttribute('width', '300%');\n    filter.setAttribute('height', '300%');\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('result', id);\n    filter.appendChild(feGaussianBlur);\n    this.feGaussianBlur = feGaussianBlur;\n  }\n\n  SVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      // Empirical value, matching AE's blur appearance.\n      var kBlurrinessToSigma = 0.3;\n      var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma; // Dimensions mapping:\n      //\n      //   1 -> horizontal & vertical\n      //   2 -> horizontal only\n      //   3 -> vertical only\n      //\n\n      var dimensions = this.filterManager.effectElements[1].p.v;\n      var sigmaX = dimensions == 3 ? 0 : sigma; // eslint-disable-line eqeqeq\n\n      var sigmaY = dimensions == 2 ? 0 : sigma; // eslint-disable-line eqeqeq\n\n      this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + ' ' + sigmaY); // Repeat edges mapping:\n      //\n      //   0 -> off -> duplicate\n      //   1 -> on  -> wrap\n\n      var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? 'wrap' : 'duplicate'; // eslint-disable-line eqeqeq\n\n      this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\n    }\n  };\n\n  registerRenderer('canvas', CanvasRenderer);\n  registerRenderer('html', HybridRenderer);\n  registerRenderer('svg', SVGRenderer); // Registering shape modifiers\n\n  ShapeModifiers.registerModifier('tm', TrimModifier);\n  ShapeModifiers.registerModifier('pb', PuckerAndBloatModifier);\n  ShapeModifiers.registerModifier('rp', RepeaterModifier);\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier); // Registering expression plugin\n\n  setExpressionsPlugin(Expressions);\n  initialize$1();\n  initialize(); // Registering svg effects\n\n  registerEffect(20, SVGTintFilter, true);\n  registerEffect(21, SVGFillFilter, true);\n  registerEffect(22, SVGStrokeEffect, false);\n  registerEffect(23, SVGTritoneFilter, true);\n  registerEffect(24, SVGProLevelsFilter, true);\n  registerEffect(25, SVGDropShadowEffect, true);\n  registerEffect(28, SVGMatte3Effect, false);\n  registerEffect(29, SVGGaussianBlurEffect, true);\n  return lottie;\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\nmodule.exports = exports['default'];","!function (l, e) {\n  if (\"object\" === typeof exports && \"object\" === typeof module) module.exports = e(require(\"react\"));else if (\"function\" === typeof define && define.amd) define([\"react\"], e);else {\n    var t = e(\"object\" === typeof exports ? require(\"react\") : l.react);\n\n    for (var n in t) {\n      (\"object\" === typeof exports ? exports : l)[n] = t[n];\n    }\n  }\n}(this, function (l) {\n  return function (l) {\n    function e(n) {\n      if (t[n]) return t[n].exports;\n      var a = t[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return l[n].call(a.exports, a, a.exports, e), a.l = !0, a.exports;\n    }\n\n    var t = {};\n    return e.m = l, e.c = t, e.d = function (l, t, n) {\n      e.o(l, t) || Object.defineProperty(l, t, {\n        configurable: !1,\n        enumerable: !0,\n        get: n\n      });\n    }, e.n = function (l) {\n      var t = l && l.__esModule ? function () {\n        return l.default;\n      } : function () {\n        return l;\n      };\n      return e.d(t, \"a\", t), t;\n    }, e.o = function (l, e) {\n      return Object.prototype.hasOwnProperty.call(l, e);\n    }, e.p = \"\", e(e.s = 25);\n  }([function (l, e, t) {\n    var n, a;\n    !function (e, t) {\n      \"use strict\";\n\n      \"object\" === typeof l && \"object\" === typeof l.exports ? l.exports = e.document ? t(e, !0) : function (l) {\n        if (!l.document) throw new Error(\"jQuery requires a window with a document\");\n        return t(l);\n      } : t(e);\n    }(\"undefined\" !== typeof window ? window : this, function (t, c) {\n      \"use strict\";\n\n      function i(l, e, t) {\n        t = t || ul;\n        var n,\n            a,\n            c = t.createElement(\"script\");\n        if (c.text = l, e) for (n in Cl) {\n          (a = e[n] || e.getAttribute && e.getAttribute(n)) && c.setAttribute(n, a);\n        }\n        t.head.appendChild(c).parentNode.removeChild(c);\n      }\n\n      function r(l) {\n        return null == l ? l + \"\" : \"object\" === typeof l || \"function\" === typeof l ? gl[yl.call(l)] || \"object\" : typeof l;\n      }\n\n      function o(l) {\n        var e = !!l && \"length\" in l && l.length,\n            t = r(l);\n        return !wl(l) && !El(l) && (\"array\" === t || 0 === e || \"number\" === typeof e && e > 0 && e - 1 in l);\n      }\n\n      function s(l, e) {\n        return l.nodeName && l.nodeName.toLowerCase() === e.toLowerCase();\n      }\n\n      function h(l, e, t) {\n        return wl(e) ? zl.grep(l, function (l, n) {\n          return !!e.call(l, n, l) !== t;\n        }) : e.nodeType ? zl.grep(l, function (l) {\n          return l === e !== t;\n        }) : \"string\" !== typeof e ? zl.grep(l, function (l) {\n          return Zl.call(e, l) > -1 !== t;\n        }) : zl.filter(e, l, t);\n      }\n\n      function p(l, e) {\n        for (; (l = l[e]) && 1 !== l.nodeType;) {\n          ;\n        }\n\n        return l;\n      }\n\n      function u(l) {\n        var e = {};\n        return zl.each(l.match(Il) || [], function (l, t) {\n          e[t] = !0;\n        }), e;\n      }\n\n      function M(l) {\n        return l;\n      }\n\n      function m(l) {\n        throw l;\n      }\n\n      function f(l, e, t, n) {\n        var a;\n\n        try {\n          l && wl(a = l.promise) ? a.call(l).done(e).fail(t) : l && wl(a = l.then) ? a.call(l, e, t) : e.apply(void 0, [l].slice(n));\n        } catch (l) {\n          t.apply(void 0, [l]);\n        }\n      }\n\n      function d() {\n        ul.removeEventListener(\"DOMContentLoaded\", d), t.removeEventListener(\"load\", d), zl.ready();\n      }\n\n      function Z(l, e) {\n        return e.toUpperCase();\n      }\n\n      function g(l) {\n        return l.replace(Bl, \"ms-\").replace(Fl, Z);\n      }\n\n      function y() {\n        this.expando = zl.expando + y.uid++;\n      }\n\n      function v(l) {\n        return \"true\" === l || \"false\" !== l && (\"null\" === l ? null : l === +l + \"\" ? +l : $l.test(l) ? JSON.parse(l) : l);\n      }\n\n      function b(l, e, t) {\n        var n;\n        if (void 0 === t && 1 === l.nodeType) if (n = \"data-\" + e.replace(Yl, \"-$&\").toLowerCase(), \"string\" === typeof (t = l.getAttribute(n))) {\n          try {\n            t = v(t);\n          } catch (l) {}\n\n          ql.set(l, e, t);\n        } else t = void 0;\n        return t;\n      }\n\n      function S(l, e, t, n) {\n        var a,\n            c,\n            i = 20,\n            r = n ? function () {\n          return n.cur();\n        } : function () {\n          return zl.css(l, e, \"\");\n        },\n            o = r(),\n            s = t && t[3] || (zl.cssNumber[e] ? \"\" : \"px\"),\n            h = l.nodeType && (zl.cssNumber[e] || \"px\" !== s && +o) && Wl.exec(zl.css(l, e));\n\n        if (h && h[3] !== s) {\n          for (o /= 2, s = s || h[3], h = +o || 1; i--;) {\n            zl.style(l, e, h + s), (1 - c) * (1 - (c = r() / o || .5)) <= 0 && (i = 0), h /= c;\n          }\n\n          h *= 2, zl.style(l, e, h + s), t = t || [];\n        }\n\n        return t && (h = +h || +o || 0, a = t[1] ? h + (t[1] + 1) * t[2] : +t[2], n && (n.unit = s, n.start = h, n.end = a)), a;\n      }\n\n      function x(l) {\n        var e,\n            t = l.ownerDocument,\n            n = l.nodeName,\n            a = ne[n];\n        return a || (e = t.body.appendChild(t.createElement(n)), a = zl.css(e, \"display\"), e.parentNode.removeChild(e), \"none\" === a && (a = \"block\"), ne[n] = a, a);\n      }\n\n      function w(l, e) {\n        for (var t, n, a = [], c = 0, i = l.length; c < i; c++) {\n          n = l[c], n.style && (t = n.style.display, e ? (\"none\" === t && (a[c] = Ul.get(n, \"display\") || null, a[c] || (n.style.display = \"\")), \"\" === n.style.display && ee(n) && (a[c] = x(n))) : \"none\" !== t && (a[c] = \"none\", Ul.set(n, \"display\", t)));\n        }\n\n        for (c = 0; c < i; c++) {\n          null != a[c] && (l[c].style.display = a[c]);\n        }\n\n        return l;\n      }\n\n      function E(l, e) {\n        var t;\n        return t = \"undefined\" !== typeof l.getElementsByTagName ? l.getElementsByTagName(e || \"*\") : \"undefined\" !== typeof l.querySelectorAll ? l.querySelectorAll(e || \"*\") : [], void 0 === e || e && s(l, e) ? zl.merge([l], t) : t;\n      }\n\n      function C(l, e) {\n        for (var t = 0, n = l.length; t < n; t++) {\n          Ul.set(l[t], \"globalEval\", !e || Ul.get(e[t], \"globalEval\"));\n        }\n      }\n\n      function z(l, e, t, n, a) {\n        for (var c, i, o, s, h, p, u = e.createDocumentFragment(), M = [], m = 0, f = l.length; m < f; m++) {\n          if ((c = l[m]) || 0 === c) if (\"object\" === r(c)) zl.merge(M, c.nodeType ? [c] : c);else if (oe.test(c)) {\n            for (i = i || u.appendChild(e.createElement(\"div\")), o = (ce.exec(c) || [\"\", \"\"])[1].toLowerCase(), s = re[o] || re._default, i.innerHTML = s[1] + zl.htmlPrefilter(c) + s[2], p = s[0]; p--;) {\n              i = i.lastChild;\n            }\n\n            zl.merge(M, i.childNodes), i = u.firstChild, i.textContent = \"\";\n          } else M.push(e.createTextNode(c));\n        }\n\n        for (u.textContent = \"\", m = 0; c = M[m++];) {\n          if (n && zl.inArray(c, n) > -1) a && a.push(c);else if (h = Ql(c), i = E(u.appendChild(c), \"script\"), h && C(i), t) for (p = 0; c = i[p++];) {\n            ie.test(c.type || \"\") && t.push(c);\n          }\n        }\n\n        return u;\n      }\n\n      function T() {\n        return !0;\n      }\n\n      function A() {\n        return !1;\n      }\n\n      function k(l, e) {\n        return l === L() === (\"focus\" === e);\n      }\n\n      function L() {\n        try {\n          return ul.activeElement;\n        } catch (l) {}\n      }\n\n      function R(l, e, t, n, a, c) {\n        var i, r;\n\n        if (\"object\" === typeof e) {\n          \"string\" !== typeof t && (n = n || t, t = void 0);\n\n          for (r in e) {\n            R(l, r, t, n, e[r], c);\n          }\n\n          return l;\n        }\n\n        if (null == n && null == a ? (a = t, n = t = void 0) : null == a && (\"string\" === typeof t ? (a = n, n = void 0) : (a = n, n = t, t = void 0)), !1 === a) a = A;else if (!a) return l;\n        return 1 === c && (i = a, a = function a(l) {\n          return zl().off(l), i.apply(this, arguments);\n        }, a.guid = i.guid || (i.guid = zl.guid++)), l.each(function () {\n          zl.event.add(this, e, a, n, t);\n        });\n      }\n\n      function j(l, e, t) {\n        if (!t) return void zl.event.add(l, e, T);\n        Ul.set(l, e, !1), zl.event.add(l, e, {\n          namespace: !1,\n          handler: function handler(l) {\n            var n,\n                a,\n                c = Ul.get(this, e);\n\n            if (1 & l.isTrigger && this[e]) {\n              if (c) (zl.event.special[e] || {}).delegateType && l.stopPropagation();else if (c = ml.call(arguments), Ul.set(this, e, c), n = t(this, e), this[e](), a = Ul.get(this, e), c !== a || n ? Ul.set(this, e, !1) : a = void 0, c !== a) return l.stopImmediatePropagation(), l.preventDefault(), a;\n            } else c && (Ul.set(this, e, zl.event.trigger(zl.extend(c.shift(), zl.Event.prototype), c, this)), l.stopImmediatePropagation());\n          }\n        });\n      }\n\n      function N(l, e) {\n        return s(l, \"table\") && s(11 !== e.nodeType ? e : e.firstChild, \"tr\") ? zl(l).children(\"tbody\")[0] || l : l;\n      }\n\n      function D(l) {\n        return l.type = (null !== l.getAttribute(\"type\")) + \"/\" + l.type, l;\n      }\n\n      function O(l) {\n        return \"true/\" === (l.type || \"\").slice(0, 5) ? l.type = l.type.slice(5) : l.removeAttribute(\"type\"), l;\n      }\n\n      function P(l, e) {\n        var t, n, a, c, i, r, o, s;\n\n        if (1 === e.nodeType) {\n          if (Ul.hasData(l) && (c = Ul.access(l), i = Ul.set(e, c), s = c.events)) {\n            delete i.handle, i.events = {};\n\n            for (a in s) {\n              for (t = 0, n = s[a].length; t < n; t++) {\n                zl.event.add(e, a, s[a][t]);\n              }\n            }\n          }\n\n          ql.hasData(l) && (r = ql.access(l), o = zl.extend({}, r), ql.set(e, o));\n        }\n      }\n\n      function I(l, e) {\n        var t = e.nodeName.toLowerCase();\n        \"input\" === t && ae.test(l.type) ? e.checked = l.checked : \"input\" !== t && \"textarea\" !== t || (e.defaultValue = l.defaultValue);\n      }\n\n      function V(l, e, t, n) {\n        e = fl.apply([], e);\n        var a,\n            c,\n            r,\n            o,\n            s,\n            h,\n            p = 0,\n            u = l.length,\n            M = u - 1,\n            m = e[0],\n            f = wl(m);\n        if (f || u > 1 && \"string\" === typeof m && !xl.checkClone && me.test(m)) return l.each(function (a) {\n          var c = l.eq(a);\n          f && (e[0] = m.call(this, a, c.html())), V(c, e, t, n);\n        });\n\n        if (u && (a = z(e, l[0].ownerDocument, !1, l, n), c = a.firstChild, 1 === a.childNodes.length && (a = c), c || n)) {\n          for (r = zl.map(E(a, \"script\"), D), o = r.length; p < u; p++) {\n            s = a, p !== M && (s = zl.clone(s, !0, !0), o && zl.merge(r, E(s, \"script\"))), t.call(l[p], s, p);\n          }\n\n          if (o) for (h = r[r.length - 1].ownerDocument, zl.map(r, O), p = 0; p < o; p++) {\n            s = r[p], ie.test(s.type || \"\") && !Ul.access(s, \"globalEval\") && zl.contains(h, s) && (s.src && \"module\" !== (s.type || \"\").toLowerCase() ? zl._evalUrl && !s.noModule && zl._evalUrl(s.src, {\n              nonce: s.nonce || s.getAttribute(\"nonce\")\n            }) : i(s.textContent.replace(fe, \"\"), s, h));\n          }\n        }\n\n        return l;\n      }\n\n      function H(l, e, t) {\n        for (var n, a = e ? zl.filter(e, l) : l, c = 0; null != (n = a[c]); c++) {\n          t || 1 !== n.nodeType || zl.cleanData(E(n)), n.parentNode && (t && Ql(n) && C(E(n, \"script\")), n.parentNode.removeChild(n));\n        }\n\n        return l;\n      }\n\n      function G(l, e, t) {\n        var n,\n            a,\n            c,\n            i,\n            r = l.style;\n        return t = t || Ze(l), t && (i = t.getPropertyValue(e) || t[e], \"\" !== i || Ql(l) || (i = zl.style(l, e)), !xl.pixelBoxStyles() && de.test(i) && ge.test(e) && (n = r.width, a = r.minWidth, c = r.maxWidth, r.minWidth = r.maxWidth = r.width = i, i = t.width, r.width = n, r.minWidth = a, r.maxWidth = c)), void 0 !== i ? i + \"\" : i;\n      }\n\n      function B(l, e) {\n        return {\n          get: function get() {\n            return l() ? void delete this.get : (this.get = e).apply(this, arguments);\n          }\n        };\n      }\n\n      function F(l) {\n        for (var e = l[0].toUpperCase() + l.slice(1), t = ye.length; t--;) {\n          if ((l = ye[t] + e) in ve) return l;\n        }\n      }\n\n      function _(l) {\n        var e = zl.cssProps[l] || be[l];\n        return e || (l in ve ? l : be[l] = F(l) || l);\n      }\n\n      function U(l, e, t) {\n        var n = Wl.exec(e);\n        return n ? Math.max(0, n[2] - (t || 0)) + (n[3] || \"px\") : e;\n      }\n\n      function q(l, e, t, n, a, c) {\n        var i = \"width\" === e ? 1 : 0,\n            r = 0,\n            o = 0;\n        if (t === (n ? \"border\" : \"content\")) return 0;\n\n        for (; i < 4; i += 2) {\n          \"margin\" === t && (o += zl.css(l, t + Kl[i], !0, a)), n ? (\"content\" === t && (o -= zl.css(l, \"padding\" + Kl[i], !0, a)), \"margin\" !== t && (o -= zl.css(l, \"border\" + Kl[i] + \"Width\", !0, a))) : (o += zl.css(l, \"padding\" + Kl[i], !0, a), \"padding\" !== t ? o += zl.css(l, \"border\" + Kl[i] + \"Width\", !0, a) : r += zl.css(l, \"border\" + Kl[i] + \"Width\", !0, a));\n        }\n\n        return !n && c >= 0 && (o += Math.max(0, Math.ceil(l[\"offset\" + e[0].toUpperCase() + e.slice(1)] - c - o - r - .5)) || 0), o;\n      }\n\n      function $(l, e, t) {\n        var n = Ze(l),\n            a = !xl.boxSizingReliable() || t,\n            c = a && \"border-box\" === zl.css(l, \"boxSizing\", !1, n),\n            i = c,\n            r = G(l, e, n),\n            o = \"offset\" + e[0].toUpperCase() + e.slice(1);\n\n        if (de.test(r)) {\n          if (!t) return r;\n          r = \"auto\";\n        }\n\n        return (!xl.boxSizingReliable() && c || \"auto\" === r || !parseFloat(r) && \"inline\" === zl.css(l, \"display\", !1, n)) && l.getClientRects().length && (c = \"border-box\" === zl.css(l, \"boxSizing\", !1, n), (i = o in l) && (r = l[o])), (r = parseFloat(r) || 0) + q(l, e, t || (c ? \"border\" : \"content\"), i, n, r) + \"px\";\n      }\n\n      function Y(l, e, t, n, a) {\n        return new Y.prototype.init(l, e, t, n, a);\n      }\n\n      function X() {\n        ze && (!1 === ul.hidden && t.requestAnimationFrame ? t.requestAnimationFrame(X) : t.setTimeout(X, zl.fx.interval), zl.fx.tick());\n      }\n\n      function W() {\n        return t.setTimeout(function () {\n          Ce = void 0;\n        }), Ce = Date.now();\n      }\n\n      function K(l, e) {\n        var t,\n            n = 0,\n            a = {\n          height: l\n        };\n\n        for (e = e ? 1 : 0; n < 4; n += 2 - e) {\n          t = Kl[n], a[\"margin\" + t] = a[\"padding\" + t] = l;\n        }\n\n        return e && (a.opacity = a.width = l), a;\n      }\n\n      function J(l, e, t) {\n        for (var n, a = (el.tweeners[e] || []).concat(el.tweeners[\"*\"]), c = 0, i = a.length; c < i; c++) {\n          if (n = a[c].call(t, e, l)) return n;\n        }\n      }\n\n      function Q(l, e, t) {\n        var n,\n            a,\n            c,\n            i,\n            r,\n            o,\n            s,\n            h,\n            p = \"width\" in e || \"height\" in e,\n            u = this,\n            M = {},\n            m = l.style,\n            f = l.nodeType && ee(l),\n            d = Ul.get(l, \"fxshow\");\n        t.queue || (i = zl._queueHooks(l, \"fx\"), null == i.unqueued && (i.unqueued = 0, r = i.empty.fire, i.empty.fire = function () {\n          i.unqueued || r();\n        }), i.unqueued++, u.always(function () {\n          u.always(function () {\n            i.unqueued--, zl.queue(l, \"fx\").length || i.empty.fire();\n          });\n        }));\n\n        for (n in e) {\n          if (a = e[n], Te.test(a)) {\n            if (delete e[n], c = c || \"toggle\" === a, a === (f ? \"hide\" : \"show\")) {\n              if (\"show\" !== a || !d || void 0 === d[n]) continue;\n              f = !0;\n            }\n\n            M[n] = d && d[n] || zl.style(l, n);\n          }\n        }\n\n        if ((o = !zl.isEmptyObject(e)) || !zl.isEmptyObject(M)) {\n          p && 1 === l.nodeType && (t.overflow = [m.overflow, m.overflowX, m.overflowY], s = d && d.display, null == s && (s = Ul.get(l, \"display\")), h = zl.css(l, \"display\"), \"none\" === h && (s ? h = s : (w([l], !0), s = l.style.display || s, h = zl.css(l, \"display\"), w([l]))), (\"inline\" === h || \"inline-block\" === h && null != s) && \"none\" === zl.css(l, \"float\") && (o || (u.done(function () {\n            m.display = s;\n          }), null == s && (h = m.display, s = \"none\" === h ? \"\" : h)), m.display = \"inline-block\")), t.overflow && (m.overflow = \"hidden\", u.always(function () {\n            m.overflow = t.overflow[0], m.overflowX = t.overflow[1], m.overflowY = t.overflow[2];\n          })), o = !1;\n\n          for (n in M) {\n            o || (d ? \"hidden\" in d && (f = d.hidden) : d = Ul.access(l, \"fxshow\", {\n              display: s\n            }), c && (d.hidden = !f), f && w([l], !0), u.done(function () {\n              f || w([l]), Ul.remove(l, \"fxshow\");\n\n              for (n in M) {\n                zl.style(l, n, M[n]);\n              }\n            })), o = J(f ? d[n] : 0, n, u), n in d || (d[n] = o.start, f && (o.end = o.start, o.start = 0));\n          }\n        }\n      }\n\n      function ll(l, e) {\n        var t, n, a, c, i;\n\n        for (t in l) {\n          if (n = g(t), a = e[n], c = l[t], Array.isArray(c) && (a = c[1], c = l[t] = c[0]), t !== n && (l[n] = c, delete l[t]), (i = zl.cssHooks[n]) && \"expand\" in i) {\n            c = i.expand(c), delete l[n];\n\n            for (t in c) {\n              t in l || (l[t] = c[t], e[t] = a);\n            }\n          } else e[n] = a;\n        }\n      }\n\n      function el(l, e, t) {\n        var n,\n            a,\n            c = 0,\n            i = el.prefilters.length,\n            r = zl.Deferred().always(function () {\n          delete o.elem;\n        }),\n            o = function o() {\n          if (a) return !1;\n\n          for (var e = Ce || W(), t = Math.max(0, s.startTime + s.duration - e), n = t / s.duration || 0, c = 1 - n, i = 0, o = s.tweens.length; i < o; i++) {\n            s.tweens[i].run(c);\n          }\n\n          return r.notifyWith(l, [s, c, t]), c < 1 && o ? t : (o || r.notifyWith(l, [s, 1, 0]), r.resolveWith(l, [s]), !1);\n        },\n            s = r.promise({\n          elem: l,\n          props: zl.extend({}, e),\n          opts: zl.extend(!0, {\n            specialEasing: {},\n            easing: zl.easing._default\n          }, t),\n          originalProperties: e,\n          originalOptions: t,\n          startTime: Ce || W(),\n          duration: t.duration,\n          tweens: [],\n          createTween: function createTween(e, t) {\n            var n = zl.Tween(l, s.opts, e, t, s.opts.specialEasing[e] || s.opts.easing);\n            return s.tweens.push(n), n;\n          },\n          stop: function stop(e) {\n            var t = 0,\n                n = e ? s.tweens.length : 0;\n            if (a) return this;\n\n            for (a = !0; t < n; t++) {\n              s.tweens[t].run(1);\n            }\n\n            return e ? (r.notifyWith(l, [s, 1, 0]), r.resolveWith(l, [s, e])) : r.rejectWith(l, [s, e]), this;\n          }\n        }),\n            h = s.props;\n\n        for (ll(h, s.opts.specialEasing); c < i; c++) {\n          if (n = el.prefilters[c].call(s, l, h, s.opts)) return wl(n.stop) && (zl._queueHooks(s.elem, s.opts.queue).stop = n.stop.bind(n)), n;\n        }\n\n        return zl.map(h, J, s), wl(s.opts.start) && s.opts.start.call(l, s), s.progress(s.opts.progress).done(s.opts.done, s.opts.complete).fail(s.opts.fail).always(s.opts.always), zl.fx.timer(zl.extend(o, {\n          elem: l,\n          anim: s,\n          queue: s.opts.queue\n        })), s;\n      }\n\n      function tl(l) {\n        return (l.match(Il) || []).join(\" \");\n      }\n\n      function nl(l) {\n        return l.getAttribute && l.getAttribute(\"class\") || \"\";\n      }\n\n      function al(l) {\n        return Array.isArray(l) ? l : \"string\" === typeof l ? l.match(Il) || [] : [];\n      }\n\n      function cl(l, e, t, n) {\n        var a;\n        if (Array.isArray(e)) zl.each(e, function (e, a) {\n          t || He.test(l) ? n(l, a) : cl(l + \"[\" + (\"object\" === typeof a && null != a ? e : \"\") + \"]\", a, t, n);\n        });else if (t || \"object\" !== r(e)) n(l, e);else for (a in e) {\n          cl(l + \"[\" + a + \"]\", e[a], t, n);\n        }\n      }\n\n      function il(l) {\n        return function (e, t) {\n          \"string\" !== typeof e && (t = e, e = \"*\");\n          var n,\n              a = 0,\n              c = e.toLowerCase().match(Il) || [];\n          if (wl(t)) for (; n = c[a++];) {\n            \"+\" === n[0] ? (n = n.slice(1) || \"*\", (l[n] = l[n] || []).unshift(t)) : (l[n] = l[n] || []).push(t);\n          }\n        };\n      }\n\n      function rl(l, e, t, n) {\n        function a(r) {\n          var o;\n          return c[r] = !0, zl.each(l[r] || [], function (l, r) {\n            var s = r(e, t, n);\n            return \"string\" !== typeof s || i || c[s] ? i ? !(o = s) : void 0 : (e.dataTypes.unshift(s), a(s), !1);\n          }), o;\n        }\n\n        var c = {},\n            i = l === Je;\n        return a(e.dataTypes[0]) || !c[\"*\"] && a(\"*\");\n      }\n\n      function ol(l, e) {\n        var t,\n            n,\n            a = zl.ajaxSettings.flatOptions || {};\n\n        for (t in e) {\n          void 0 !== e[t] && ((a[t] ? l : n || (n = {}))[t] = e[t]);\n        }\n\n        return n && zl.extend(!0, l, n), l;\n      }\n\n      function sl(l, e, t) {\n        for (var n, a, c, i, r = l.contents, o = l.dataTypes; \"*\" === o[0];) {\n          o.shift(), void 0 === n && (n = l.mimeType || e.getResponseHeader(\"Content-Type\"));\n        }\n\n        if (n) for (a in r) {\n          if (r[a] && r[a].test(n)) {\n            o.unshift(a);\n            break;\n          }\n        }\n        if (o[0] in t) c = o[0];else {\n          for (a in t) {\n            if (!o[0] || l.converters[a + \" \" + o[0]]) {\n              c = a;\n              break;\n            }\n\n            i || (i = a);\n          }\n\n          c = c || i;\n        }\n        if (c) return c !== o[0] && o.unshift(c), t[c];\n      }\n\n      function hl(l, e, t, n) {\n        var a,\n            c,\n            i,\n            r,\n            o,\n            s = {},\n            h = l.dataTypes.slice();\n        if (h[1]) for (i in l.converters) {\n          s[i.toLowerCase()] = l.converters[i];\n        }\n\n        for (c = h.shift(); c;) {\n          if (l.responseFields[c] && (t[l.responseFields[c]] = e), !o && n && l.dataFilter && (e = l.dataFilter(e, l.dataType)), o = c, c = h.shift()) if (\"*\" === c) c = o;else if (\"*\" !== o && o !== c) {\n            if (!(i = s[o + \" \" + c] || s[\"* \" + c])) for (a in s) {\n              if (r = a.split(\" \"), r[1] === c && (i = s[o + \" \" + r[0]] || s[\"* \" + r[0]])) {\n                !0 === i ? i = s[a] : !0 !== s[a] && (c = r[0], h.unshift(r[1]));\n                break;\n              }\n            }\n            if (!0 !== i) if (i && l.throws) e = i(e);else try {\n              e = i(e);\n            } catch (l) {\n              return {\n                state: \"parsererror\",\n                error: i ? l : \"No conversion from \" + o + \" to \" + c\n              };\n            }\n          }\n        }\n\n        return {\n          state: \"success\",\n          data: e\n        };\n      }\n\n      var pl = [],\n          ul = t.document,\n          Ml = Object.getPrototypeOf,\n          ml = pl.slice,\n          fl = pl.concat,\n          dl = pl.push,\n          Zl = pl.indexOf,\n          gl = {},\n          yl = gl.toString,\n          vl = gl.hasOwnProperty,\n          bl = vl.toString,\n          Sl = bl.call(Object),\n          xl = {},\n          wl = function wl(l) {\n        return \"function\" === typeof l && \"number\" !== typeof l.nodeType;\n      },\n          El = function El(l) {\n        return null != l && l === l.window;\n      },\n          Cl = {\n        type: !0,\n        src: !0,\n        nonce: !0,\n        noModule: !0\n      },\n          zl = function zl(l, e) {\n        return new zl.fn.init(l, e);\n      },\n          Tl = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n      zl.fn = zl.prototype = {\n        jquery: \"3.4.0\",\n        constructor: zl,\n        length: 0,\n        toArray: function toArray() {\n          return ml.call(this);\n        },\n        get: function get(l) {\n          return null == l ? ml.call(this) : l < 0 ? this[l + this.length] : this[l];\n        },\n        pushStack: function pushStack(l) {\n          var e = zl.merge(this.constructor(), l);\n          return e.prevObject = this, e;\n        },\n        each: function each(l) {\n          return zl.each(this, l);\n        },\n        map: function map(l) {\n          return this.pushStack(zl.map(this, function (e, t) {\n            return l.call(e, t, e);\n          }));\n        },\n        slice: function slice() {\n          return this.pushStack(ml.apply(this, arguments));\n        },\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(l) {\n          var e = this.length,\n              t = +l + (l < 0 ? e : 0);\n          return this.pushStack(t >= 0 && t < e ? [this[t]] : []);\n        },\n        end: function end() {\n          return this.prevObject || this.constructor();\n        },\n        push: dl,\n        sort: pl.sort,\n        splice: pl.splice\n      }, zl.extend = zl.fn.extend = function () {\n        var l,\n            e,\n            t,\n            n,\n            a,\n            c,\n            i = arguments[0] || {},\n            r = 1,\n            o = arguments.length,\n            s = !1;\n\n        for (\"boolean\" === typeof i && (s = i, i = arguments[r] || {}, r++), \"object\" === typeof i || wl(i) || (i = {}), r === o && (i = this, r--); r < o; r++) {\n          if (null != (l = arguments[r])) for (e in l) {\n            n = l[e], \"__proto__\" !== e && i !== n && (s && n && (zl.isPlainObject(n) || (a = Array.isArray(n))) ? (t = i[e], c = a && !Array.isArray(t) ? [] : a || zl.isPlainObject(t) ? t : {}, a = !1, i[e] = zl.extend(s, c, n)) : void 0 !== n && (i[e] = n));\n          }\n        }\n\n        return i;\n      }, zl.extend({\n        expando: \"jQuery\" + (\"3.4.0\" + Math.random()).replace(/\\D/g, \"\"),\n        isReady: !0,\n        error: function error(l) {\n          throw new Error(l);\n        },\n        noop: function noop() {},\n        isPlainObject: function isPlainObject(l) {\n          var e, t;\n          return !(!l || \"[object Object]\" !== yl.call(l)) && (!(e = Ml(l)) || \"function\" === typeof (t = vl.call(e, \"constructor\") && e.constructor) && bl.call(t) === Sl);\n        },\n        isEmptyObject: function isEmptyObject(l) {\n          var e;\n\n          for (e in l) {\n            return !1;\n          }\n\n          return !0;\n        },\n        globalEval: function globalEval(l, e) {\n          i(l, {\n            nonce: e && e.nonce\n          });\n        },\n        each: function each(l, e) {\n          var t,\n              n = 0;\n          if (o(l)) for (t = l.length; n < t && !1 !== e.call(l[n], n, l[n]); n++) {\n            ;\n          } else for (n in l) {\n            if (!1 === e.call(l[n], n, l[n])) break;\n          }\n          return l;\n        },\n        trim: function trim(l) {\n          return null == l ? \"\" : (l + \"\").replace(Tl, \"\");\n        },\n        makeArray: function makeArray(l, e) {\n          var t = e || [];\n          return null != l && (o(Object(l)) ? zl.merge(t, \"string\" === typeof l ? [l] : l) : dl.call(t, l)), t;\n        },\n        inArray: function inArray(l, e, t) {\n          return null == e ? -1 : Zl.call(e, l, t);\n        },\n        merge: function merge(l, e) {\n          for (var t = +e.length, n = 0, a = l.length; n < t; n++) {\n            l[a++] = e[n];\n          }\n\n          return l.length = a, l;\n        },\n        grep: function grep(l, e, t) {\n          for (var n = [], a = 0, c = l.length, i = !t; a < c; a++) {\n            !e(l[a], a) !== i && n.push(l[a]);\n          }\n\n          return n;\n        },\n        map: function map(l, e, t) {\n          var n,\n              a,\n              c = 0,\n              i = [];\n          if (o(l)) for (n = l.length; c < n; c++) {\n            null != (a = e(l[c], c, t)) && i.push(a);\n          } else for (c in l) {\n            null != (a = e(l[c], c, t)) && i.push(a);\n          }\n          return fl.apply([], i);\n        },\n        guid: 1,\n        support: xl\n      }), \"function\" === typeof Symbol && (zl.fn[Symbol.iterator] = pl[Symbol.iterator]), zl.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (l, e) {\n        gl[\"[object \" + e + \"]\"] = e.toLowerCase();\n      });\n\n      var Al = function (l) {\n        function e(l, e, t, n) {\n          var a,\n              c,\n              i,\n              r,\n              o,\n              h,\n              u,\n              M = e && e.ownerDocument,\n              m = e ? e.nodeType : 9;\n          if (t = t || [], \"string\" !== typeof l || !l || 1 !== m && 9 !== m && 11 !== m) return t;\n\n          if (!n && ((e ? e.ownerDocument || e : V) !== L && k(e), e = e || L, j)) {\n            if (11 !== m && (o = Zl.exec(l))) if (a = o[1]) {\n              if (9 === m) {\n                if (!(i = e.getElementById(a))) return t;\n                if (i.id === a) return t.push(i), t;\n              } else if (M && (i = M.getElementById(a)) && P(e, i) && i.id === a) return t.push(i), t;\n            } else {\n              if (o[2]) return K.apply(t, e.getElementsByTagName(l)), t;\n              if ((a = o[3]) && v.getElementsByClassName && e.getElementsByClassName) return K.apply(t, e.getElementsByClassName(a)), t;\n            }\n\n            if (v.qsa && !U[l + \" \"] && (!N || !N.test(l)) && (1 !== m || \"object\" !== e.nodeName.toLowerCase())) {\n              if (u = l, M = e, 1 === m && sl.test(l)) {\n                for ((r = e.getAttribute(\"id\")) ? r = r.replace(bl, Sl) : e.setAttribute(\"id\", r = I), h = w(l), c = h.length; c--;) {\n                  h[c] = \"#\" + r + \" \" + p(h[c]);\n                }\n\n                u = h.join(\",\"), M = gl.test(l) && s(e.parentNode) || e;\n              }\n\n              try {\n                return K.apply(t, M.querySelectorAll(u)), t;\n              } catch (e) {\n                U(l, !0);\n              } finally {\n                r === I && e.removeAttribute(\"id\");\n              }\n            }\n          }\n\n          return C(l.replace(il, \"$1\"), e, t, n);\n        }\n\n        function t() {\n          function l(t, n) {\n            return e.push(t + \" \") > b.cacheLength && delete l[e.shift()], l[t + \" \"] = n;\n          }\n\n          var e = [];\n          return l;\n        }\n\n        function n(l) {\n          return l[I] = !0, l;\n        }\n\n        function a(l) {\n          var e = L.createElement(\"fieldset\");\n\n          try {\n            return !!l(e);\n          } catch (l) {\n            return !1;\n          } finally {\n            e.parentNode && e.parentNode.removeChild(e), e = null;\n          }\n        }\n\n        function c(l, e) {\n          for (var t = l.split(\"|\"), n = t.length; n--;) {\n            b.attrHandle[t[n]] = e;\n          }\n        }\n\n        function i(l, e) {\n          var t = e && l,\n              n = t && 1 === l.nodeType && 1 === e.nodeType && l.sourceIndex - e.sourceIndex;\n          if (n) return n;\n          if (t) for (; t = t.nextSibling;) {\n            if (t === e) return -1;\n          }\n          return l ? 1 : -1;\n        }\n\n        function r(l) {\n          return function (e) {\n            return \"form\" in e ? e.parentNode && !1 === e.disabled ? \"label\" in e ? \"label\" in e.parentNode ? e.parentNode.disabled === l : e.disabled === l : e.isDisabled === l || e.isDisabled !== !l && wl(e) === l : e.disabled === l : \"label\" in e && e.disabled === l;\n          };\n        }\n\n        function o(l) {\n          return n(function (e) {\n            return e = +e, n(function (t, n) {\n              for (var a, c = l([], t.length, e), i = c.length; i--;) {\n                t[a = c[i]] && (t[a] = !(n[a] = t[a]));\n              }\n            });\n          });\n        }\n\n        function s(l) {\n          return l && \"undefined\" !== typeof l.getElementsByTagName && l;\n        }\n\n        function h() {}\n\n        function p(l) {\n          for (var e = 0, t = l.length, n = \"\"; e < t; e++) {\n            n += l[e].value;\n          }\n\n          return n;\n        }\n\n        function u(l, e, t) {\n          var n = e.dir,\n              a = e.next,\n              c = a || n,\n              i = t && \"parentNode\" === c,\n              r = G++;\n          return e.first ? function (e, t, a) {\n            for (; e = e[n];) {\n              if (1 === e.nodeType || i) return l(e, t, a);\n            }\n\n            return !1;\n          } : function (e, t, o) {\n            var s,\n                h,\n                p,\n                u = [H, r];\n\n            if (o) {\n              for (; e = e[n];) {\n                if ((1 === e.nodeType || i) && l(e, t, o)) return !0;\n              }\n            } else for (; e = e[n];) {\n              if (1 === e.nodeType || i) if (p = e[I] || (e[I] = {}), h = p[e.uniqueID] || (p[e.uniqueID] = {}), a && a === e.nodeName.toLowerCase()) e = e[n] || e;else {\n                if ((s = h[c]) && s[0] === H && s[1] === r) return u[2] = s[2];\n                if (h[c] = u, u[2] = l(e, t, o)) return !0;\n              }\n            }\n\n            return !1;\n          };\n        }\n\n        function M(l) {\n          return l.length > 1 ? function (e, t, n) {\n            for (var a = l.length; a--;) {\n              if (!l[a](e, t, n)) return !1;\n            }\n\n            return !0;\n          } : l[0];\n        }\n\n        function m(l, t, n) {\n          for (var a = 0, c = t.length; a < c; a++) {\n            e(l, t[a], n);\n          }\n\n          return n;\n        }\n\n        function f(l, e, t, n, a) {\n          for (var c, i = [], r = 0, o = l.length, s = null != e; r < o; r++) {\n            (c = l[r]) && (t && !t(c, n, a) || (i.push(c), s && e.push(r)));\n          }\n\n          return i;\n        }\n\n        function d(l, e, t, a, c, i) {\n          return a && !a[I] && (a = d(a)), c && !c[I] && (c = d(c, i)), n(function (n, i, r, o) {\n            var s,\n                h,\n                p,\n                u = [],\n                M = [],\n                d = i.length,\n                Z = n || m(e || \"*\", r.nodeType ? [r] : r, []),\n                g = !l || !n && e ? Z : f(Z, u, l, r, o),\n                y = t ? c || (n ? l : d || a) ? [] : i : g;\n            if (t && t(g, y, r, o), a) for (s = f(y, M), a(s, [], r, o), h = s.length; h--;) {\n              (p = s[h]) && (y[M[h]] = !(g[M[h]] = p));\n            }\n\n            if (n) {\n              if (c || l) {\n                if (c) {\n                  for (s = [], h = y.length; h--;) {\n                    (p = y[h]) && s.push(g[h] = p);\n                  }\n\n                  c(null, y = [], s, o);\n                }\n\n                for (h = y.length; h--;) {\n                  (p = y[h]) && (s = c ? Q(n, p) : u[h]) > -1 && (n[s] = !(i[s] = p));\n                }\n              }\n            } else y = f(y === i ? y.splice(d, y.length) : y), c ? c(null, i, y, o) : K.apply(i, y);\n          });\n        }\n\n        function Z(l) {\n          for (var e, t, n, a = l.length, c = b.relative[l[0].type], i = c || b.relative[\" \"], r = c ? 1 : 0, o = u(function (l) {\n            return l === e;\n          }, i, !0), s = u(function (l) {\n            return Q(e, l) > -1;\n          }, i, !0), h = [function (l, t, n) {\n            var a = !c && (n || t !== z) || ((e = t).nodeType ? o(l, t, n) : s(l, t, n));\n            return e = null, a;\n          }]; r < a; r++) {\n            if (t = b.relative[l[r].type]) h = [u(M(h), t)];else {\n              if (t = b.filter[l[r].type].apply(null, l[r].matches), t[I]) {\n                for (n = ++r; n < a && !b.relative[l[n].type]; n++) {\n                  ;\n                }\n\n                return d(r > 1 && M(h), r > 1 && p(l.slice(0, r - 1).concat({\n                  value: \" \" === l[r - 2].type ? \"*\" : \"\"\n                })).replace(il, \"$1\"), t, r < n && Z(l.slice(r, n)), n < a && Z(l = l.slice(n)), n < a && p(l));\n              }\n\n              h.push(t);\n            }\n          }\n\n          return M(h);\n        }\n\n        function g(l, t) {\n          var a = t.length > 0,\n              c = l.length > 0,\n              i = function i(n, _i, r, o, s) {\n            var h,\n                p,\n                u,\n                M = 0,\n                m = \"0\",\n                d = n && [],\n                Z = [],\n                g = z,\n                y = n || c && b.find.TAG(\"*\", s),\n                v = H += null == g ? 1 : Math.random() || .1,\n                S = y.length;\n\n            for (s && (z = _i === L || _i || s); m !== S && null != (h = y[m]); m++) {\n              if (c && h) {\n                for (p = 0, _i || h.ownerDocument === L || (k(h), r = !j); u = l[p++];) {\n                  if (u(h, _i || L, r)) {\n                    o.push(h);\n                    break;\n                  }\n                }\n\n                s && (H = v);\n              }\n\n              a && ((h = !u && h) && M--, n && d.push(h));\n            }\n\n            if (M += m, a && m !== M) {\n              for (p = 0; u = t[p++];) {\n                u(d, Z, _i, r);\n              }\n\n              if (n) {\n                if (M > 0) for (; m--;) {\n                  d[m] || Z[m] || (Z[m] = X.call(o));\n                }\n                Z = f(Z);\n              }\n\n              K.apply(o, Z), s && !n && Z.length > 0 && M + t.length > 1 && e.uniqueSort(o);\n            }\n\n            return s && (H = v, z = g), d;\n          };\n\n          return a ? n(i) : i;\n        }\n\n        var y,\n            v,\n            b,\n            S,\n            x,\n            w,\n            E,\n            C,\n            z,\n            T,\n            A,\n            k,\n            L,\n            R,\n            j,\n            N,\n            D,\n            O,\n            P,\n            I = \"sizzle\" + 1 * new Date(),\n            V = l.document,\n            H = 0,\n            G = 0,\n            B = t(),\n            F = t(),\n            _ = t(),\n            U = t(),\n            q = function q(l, e) {\n          return l === e && (A = !0), 0;\n        },\n            $ = {}.hasOwnProperty,\n            Y = [],\n            X = Y.pop,\n            W = Y.push,\n            K = Y.push,\n            J = Y.slice,\n            Q = function Q(l, e) {\n          for (var t = 0, n = l.length; t < n; t++) {\n            if (l[t] === e) return t;\n          }\n\n          return -1;\n        },\n            ll = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n            el = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n            tl = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n            nl = \"\\\\[\" + el + \"*(\" + tl + \")(?:\" + el + \"*([*^$|!~]?=)\" + el + \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + tl + \"))|)\" + el + \"*\\\\]\",\n            al = \":(\" + tl + \")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + nl + \")*)|.*)\\\\)|)\",\n            cl = new RegExp(el + \"+\", \"g\"),\n            il = new RegExp(\"^\" + el + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + el + \"+$\", \"g\"),\n            rl = new RegExp(\"^\" + el + \"*,\" + el + \"*\"),\n            ol = new RegExp(\"^\" + el + \"*([>+~]|\" + el + \")\" + el + \"*\"),\n            sl = new RegExp(el + \"|>\"),\n            hl = new RegExp(al),\n            pl = new RegExp(\"^\" + tl + \"$\"),\n            ul = {\n          ID: new RegExp(\"^#(\" + tl + \")\"),\n          CLASS: new RegExp(\"^\\\\.(\" + tl + \")\"),\n          TAG: new RegExp(\"^(\" + tl + \"|[*])\"),\n          ATTR: new RegExp(\"^\" + nl),\n          PSEUDO: new RegExp(\"^\" + al),\n          CHILD: new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + el + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + el + \"*(?:([+-]|)\" + el + \"*(\\\\d+)|))\" + el + \"*\\\\)|)\", \"i\"),\n          bool: new RegExp(\"^(?:\" + ll + \")$\", \"i\"),\n          needsContext: new RegExp(\"^\" + el + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + el + \"*((?:-\\\\d)?\\\\d*)\" + el + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n        },\n            Ml = /HTML$/i,\n            ml = /^(?:input|select|textarea|button)$/i,\n            fl = /^h\\d$/i,\n            dl = /^[^{]+\\{\\s*\\[native \\w/,\n            Zl = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n            gl = /[+~]/,\n            yl = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + el + \"?|(\" + el + \")|.)\", \"ig\"),\n            vl = function vl(l, e, t) {\n          var n = \"0x\" + e - 65536;\n          return n !== n || t ? e : n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320);\n        },\n            bl = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n            Sl = function Sl(l, e) {\n          return e ? \"\\0\" === l ? \"\\uFFFD\" : l.slice(0, -1) + \"\\\\\" + l.charCodeAt(l.length - 1).toString(16) + \" \" : \"\\\\\" + l;\n        },\n            xl = function xl() {\n          k();\n        },\n            wl = u(function (l) {\n          return !0 === l.disabled && \"fieldset\" === l.nodeName.toLowerCase();\n        }, {\n          dir: \"parentNode\",\n          next: \"legend\"\n        });\n\n        try {\n          K.apply(Y = J.call(V.childNodes), V.childNodes), Y[V.childNodes.length].nodeType;\n        } catch (l) {\n          K = {\n            apply: Y.length ? function (l, e) {\n              W.apply(l, J.call(e));\n            } : function (l, e) {\n              for (var t = l.length, n = 0; l[t++] = e[n++];) {\n                ;\n              }\n\n              l.length = t - 1;\n            }\n          };\n        }\n\n        v = e.support = {}, x = e.isXML = function (l) {\n          var e = l.namespaceURI,\n              t = (l.ownerDocument || l).documentElement;\n          return !Ml.test(e || t && t.nodeName || \"HTML\");\n        }, k = e.setDocument = function (l) {\n          var e,\n              t,\n              n = l ? l.ownerDocument || l : V;\n          return n !== L && 9 === n.nodeType && n.documentElement ? (L = n, R = L.documentElement, j = !x(L), V !== L && (t = L.defaultView) && t.top !== t && (t.addEventListener ? t.addEventListener(\"unload\", xl, !1) : t.attachEvent && t.attachEvent(\"onunload\", xl)), v.attributes = a(function (l) {\n            return l.className = \"i\", !l.getAttribute(\"className\");\n          }), v.getElementsByTagName = a(function (l) {\n            return l.appendChild(L.createComment(\"\")), !l.getElementsByTagName(\"*\").length;\n          }), v.getElementsByClassName = dl.test(L.getElementsByClassName), v.getById = a(function (l) {\n            return R.appendChild(l).id = I, !L.getElementsByName || !L.getElementsByName(I).length;\n          }), v.getById ? (b.filter.ID = function (l) {\n            var e = l.replace(yl, vl);\n            return function (l) {\n              return l.getAttribute(\"id\") === e;\n            };\n          }, b.find.ID = function (l, e) {\n            if (\"undefined\" !== typeof e.getElementById && j) {\n              var t = e.getElementById(l);\n              return t ? [t] : [];\n            }\n          }) : (b.filter.ID = function (l) {\n            var e = l.replace(yl, vl);\n            return function (l) {\n              var t = \"undefined\" !== typeof l.getAttributeNode && l.getAttributeNode(\"id\");\n              return t && t.value === e;\n            };\n          }, b.find.ID = function (l, e) {\n            if (\"undefined\" !== typeof e.getElementById && j) {\n              var t,\n                  n,\n                  a,\n                  c = e.getElementById(l);\n\n              if (c) {\n                if ((t = c.getAttributeNode(\"id\")) && t.value === l) return [c];\n\n                for (a = e.getElementsByName(l), n = 0; c = a[n++];) {\n                  if ((t = c.getAttributeNode(\"id\")) && t.value === l) return [c];\n                }\n              }\n\n              return [];\n            }\n          }), b.find.TAG = v.getElementsByTagName ? function (l, e) {\n            return \"undefined\" !== typeof e.getElementsByTagName ? e.getElementsByTagName(l) : v.qsa ? e.querySelectorAll(l) : void 0;\n          } : function (l, e) {\n            var t,\n                n = [],\n                a = 0,\n                c = e.getElementsByTagName(l);\n\n            if (\"*\" === l) {\n              for (; t = c[a++];) {\n                1 === t.nodeType && n.push(t);\n              }\n\n              return n;\n            }\n\n            return c;\n          }, b.find.CLASS = v.getElementsByClassName && function (l, e) {\n            if (\"undefined\" !== typeof e.getElementsByClassName && j) return e.getElementsByClassName(l);\n          }, D = [], N = [], (v.qsa = dl.test(L.querySelectorAll)) && (a(function (l) {\n            R.appendChild(l).innerHTML = \"<a id='\" + I + \"'></a><select id='\" + I + \"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\", l.querySelectorAll(\"[msallowcapture^='']\").length && N.push(\"[*^$]=\" + el + \"*(?:''|\\\"\\\")\"), l.querySelectorAll(\"[selected]\").length || N.push(\"\\\\[\" + el + \"*(?:value|\" + ll + \")\"), l.querySelectorAll(\"[id~=\" + I + \"-]\").length || N.push(\"~=\"), l.querySelectorAll(\":checked\").length || N.push(\":checked\"), l.querySelectorAll(\"a#\" + I + \"+*\").length || N.push(\".#.+[+~]\");\n          }), a(function (l) {\n            l.innerHTML = \"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";\n            var e = L.createElement(\"input\");\n            e.setAttribute(\"type\", \"hidden\"), l.appendChild(e).setAttribute(\"name\", \"D\"), l.querySelectorAll(\"[name=d]\").length && N.push(\"name\" + el + \"*[*^$|!~]?=\"), 2 !== l.querySelectorAll(\":enabled\").length && N.push(\":enabled\", \":disabled\"), R.appendChild(l).disabled = !0, 2 !== l.querySelectorAll(\":disabled\").length && N.push(\":enabled\", \":disabled\"), l.querySelectorAll(\"*,:x\"), N.push(\",.*:\");\n          })), (v.matchesSelector = dl.test(O = R.matches || R.webkitMatchesSelector || R.mozMatchesSelector || R.oMatchesSelector || R.msMatchesSelector)) && a(function (l) {\n            v.disconnectedMatch = O.call(l, \"*\"), O.call(l, \"[s!='']:x\"), D.push(\"!=\", al);\n          }), N = N.length && new RegExp(N.join(\"|\")), D = D.length && new RegExp(D.join(\"|\")), e = dl.test(R.compareDocumentPosition), P = e || dl.test(R.contains) ? function (l, e) {\n            var t = 9 === l.nodeType ? l.documentElement : l,\n                n = e && e.parentNode;\n            return l === n || !(!n || 1 !== n.nodeType || !(t.contains ? t.contains(n) : l.compareDocumentPosition && 16 & l.compareDocumentPosition(n)));\n          } : function (l, e) {\n            if (e) for (; e = e.parentNode;) {\n              if (e === l) return !0;\n            }\n            return !1;\n          }, q = e ? function (l, e) {\n            if (l === e) return A = !0, 0;\n            var t = !l.compareDocumentPosition - !e.compareDocumentPosition;\n            return t || (t = (l.ownerDocument || l) === (e.ownerDocument || e) ? l.compareDocumentPosition(e) : 1, 1 & t || !v.sortDetached && e.compareDocumentPosition(l) === t ? l === L || l.ownerDocument === V && P(V, l) ? -1 : e === L || e.ownerDocument === V && P(V, e) ? 1 : T ? Q(T, l) - Q(T, e) : 0 : 4 & t ? -1 : 1);\n          } : function (l, e) {\n            if (l === e) return A = !0, 0;\n            var t,\n                n = 0,\n                a = l.parentNode,\n                c = e.parentNode,\n                r = [l],\n                o = [e];\n            if (!a || !c) return l === L ? -1 : e === L ? 1 : a ? -1 : c ? 1 : T ? Q(T, l) - Q(T, e) : 0;\n            if (a === c) return i(l, e);\n\n            for (t = l; t = t.parentNode;) {\n              r.unshift(t);\n            }\n\n            for (t = e; t = t.parentNode;) {\n              o.unshift(t);\n            }\n\n            for (; r[n] === o[n];) {\n              n++;\n            }\n\n            return n ? i(r[n], o[n]) : r[n] === V ? -1 : o[n] === V ? 1 : 0;\n          }, L) : L;\n        }, e.matches = function (l, t) {\n          return e(l, null, null, t);\n        }, e.matchesSelector = function (l, t) {\n          if ((l.ownerDocument || l) !== L && k(l), v.matchesSelector && j && !U[t + \" \"] && (!D || !D.test(t)) && (!N || !N.test(t))) try {\n            var n = O.call(l, t);\n            if (n || v.disconnectedMatch || l.document && 11 !== l.document.nodeType) return n;\n          } catch (l) {\n            U(t, !0);\n          }\n          return e(t, L, null, [l]).length > 0;\n        }, e.contains = function (l, e) {\n          return (l.ownerDocument || l) !== L && k(l), P(l, e);\n        }, e.attr = function (l, e) {\n          (l.ownerDocument || l) !== L && k(l);\n          var t = b.attrHandle[e.toLowerCase()],\n              n = t && $.call(b.attrHandle, e.toLowerCase()) ? t(l, e, !j) : void 0;\n          return void 0 !== n ? n : v.attributes || !j ? l.getAttribute(e) : (n = l.getAttributeNode(e)) && n.specified ? n.value : null;\n        }, e.escape = function (l) {\n          return (l + \"\").replace(bl, Sl);\n        }, e.error = function (l) {\n          throw new Error(\"Syntax error, unrecognized expression: \" + l);\n        }, e.uniqueSort = function (l) {\n          var e,\n              t = [],\n              n = 0,\n              a = 0;\n\n          if (A = !v.detectDuplicates, T = !v.sortStable && l.slice(0), l.sort(q), A) {\n            for (; e = l[a++];) {\n              e === l[a] && (n = t.push(a));\n            }\n\n            for (; n--;) {\n              l.splice(t[n], 1);\n            }\n          }\n\n          return T = null, l;\n        }, S = e.getText = function (l) {\n          var e,\n              t = \"\",\n              n = 0,\n              a = l.nodeType;\n\n          if (a) {\n            if (1 === a || 9 === a || 11 === a) {\n              if (\"string\" === typeof l.textContent) return l.textContent;\n\n              for (l = l.firstChild; l; l = l.nextSibling) {\n                t += S(l);\n              }\n            } else if (3 === a || 4 === a) return l.nodeValue;\n          } else for (; e = l[n++];) {\n            t += S(e);\n          }\n\n          return t;\n        }, b = e.selectors = {\n          cacheLength: 50,\n          createPseudo: n,\n          match: ul,\n          attrHandle: {},\n          find: {},\n          relative: {\n            \">\": {\n              dir: \"parentNode\",\n              first: !0\n            },\n            \" \": {\n              dir: \"parentNode\"\n            },\n            \"+\": {\n              dir: \"previousSibling\",\n              first: !0\n            },\n            \"~\": {\n              dir: \"previousSibling\"\n            }\n          },\n          preFilter: {\n            ATTR: function ATTR(l) {\n              return l[1] = l[1].replace(yl, vl), l[3] = (l[3] || l[4] || l[5] || \"\").replace(yl, vl), \"~=\" === l[2] && (l[3] = \" \" + l[3] + \" \"), l.slice(0, 4);\n            },\n            CHILD: function CHILD(l) {\n              return l[1] = l[1].toLowerCase(), \"nth\" === l[1].slice(0, 3) ? (l[3] || e.error(l[0]), l[4] = +(l[4] ? l[5] + (l[6] || 1) : 2 * (\"even\" === l[3] || \"odd\" === l[3])), l[5] = +(l[7] + l[8] || \"odd\" === l[3])) : l[3] && e.error(l[0]), l;\n            },\n            PSEUDO: function PSEUDO(l) {\n              var e,\n                  t = !l[6] && l[2];\n              return ul.CHILD.test(l[0]) ? null : (l[3] ? l[2] = l[4] || l[5] || \"\" : t && hl.test(t) && (e = w(t, !0)) && (e = t.indexOf(\")\", t.length - e) - t.length) && (l[0] = l[0].slice(0, e), l[2] = t.slice(0, e)), l.slice(0, 3));\n            }\n          },\n          filter: {\n            TAG: function TAG(l) {\n              var e = l.replace(yl, vl).toLowerCase();\n              return \"*\" === l ? function () {\n                return !0;\n              } : function (l) {\n                return l.nodeName && l.nodeName.toLowerCase() === e;\n              };\n            },\n            CLASS: function CLASS(l) {\n              var e = B[l + \" \"];\n              return e || (e = new RegExp(\"(^|\" + el + \")\" + l + \"(\" + el + \"|$)\")) && B(l, function (l) {\n                return e.test(\"string\" === typeof l.className && l.className || \"undefined\" !== typeof l.getAttribute && l.getAttribute(\"class\") || \"\");\n              });\n            },\n            ATTR: function ATTR(l, t, n) {\n              return function (a) {\n                var c = e.attr(a, l);\n                return null == c ? \"!=\" === t : !t || (c += \"\", \"=\" === t ? c === n : \"!=\" === t ? c !== n : \"^=\" === t ? n && 0 === c.indexOf(n) : \"*=\" === t ? n && c.indexOf(n) > -1 : \"$=\" === t ? n && c.slice(-n.length) === n : \"~=\" === t ? (\" \" + c.replace(cl, \" \") + \" \").indexOf(n) > -1 : \"|=\" === t && (c === n || c.slice(0, n.length + 1) === n + \"-\"));\n              };\n            },\n            CHILD: function CHILD(l, e, t, n, a) {\n              var c = \"nth\" !== l.slice(0, 3),\n                  i = \"last\" !== l.slice(-4),\n                  r = \"of-type\" === e;\n              return 1 === n && 0 === a ? function (l) {\n                return !!l.parentNode;\n              } : function (e, t, o) {\n                var s,\n                    h,\n                    p,\n                    u,\n                    M,\n                    m,\n                    f = c !== i ? \"nextSibling\" : \"previousSibling\",\n                    d = e.parentNode,\n                    Z = r && e.nodeName.toLowerCase(),\n                    g = !o && !r,\n                    y = !1;\n\n                if (d) {\n                  if (c) {\n                    for (; f;) {\n                      for (u = e; u = u[f];) {\n                        if (r ? u.nodeName.toLowerCase() === Z : 1 === u.nodeType) return !1;\n                      }\n\n                      m = f = \"only\" === l && !m && \"nextSibling\";\n                    }\n\n                    return !0;\n                  }\n\n                  if (m = [i ? d.firstChild : d.lastChild], i && g) {\n                    for (u = d, p = u[I] || (u[I] = {}), h = p[u.uniqueID] || (p[u.uniqueID] = {}), s = h[l] || [], M = s[0] === H && s[1], y = M && s[2], u = M && d.childNodes[M]; u = ++M && u && u[f] || (y = M = 0) || m.pop();) {\n                      if (1 === u.nodeType && ++y && u === e) {\n                        h[l] = [H, M, y];\n                        break;\n                      }\n                    }\n                  } else if (g && (u = e, p = u[I] || (u[I] = {}), h = p[u.uniqueID] || (p[u.uniqueID] = {}), s = h[l] || [], M = s[0] === H && s[1], y = M), !1 === y) for (; (u = ++M && u && u[f] || (y = M = 0) || m.pop()) && ((r ? u.nodeName.toLowerCase() !== Z : 1 !== u.nodeType) || !++y || (g && (p = u[I] || (u[I] = {}), h = p[u.uniqueID] || (p[u.uniqueID] = {}), h[l] = [H, y]), u !== e));) {\n                    ;\n                  }\n\n                  return (y -= a) === n || y % n === 0 && y / n >= 0;\n                }\n              };\n            },\n            PSEUDO: function PSEUDO(l, t) {\n              var a,\n                  c = b.pseudos[l] || b.setFilters[l.toLowerCase()] || e.error(\"unsupported pseudo: \" + l);\n              return c[I] ? c(t) : c.length > 1 ? (a = [l, l, \"\", t], b.setFilters.hasOwnProperty(l.toLowerCase()) ? n(function (l, e) {\n                for (var n, a = c(l, t), i = a.length; i--;) {\n                  n = Q(l, a[i]), l[n] = !(e[n] = a[i]);\n                }\n              }) : function (l) {\n                return c(l, 0, a);\n              }) : c;\n            }\n          },\n          pseudos: {\n            not: n(function (l) {\n              var e = [],\n                  t = [],\n                  a = E(l.replace(il, \"$1\"));\n              return a[I] ? n(function (l, e, t, n) {\n                for (var c, i = a(l, null, n, []), r = l.length; r--;) {\n                  (c = i[r]) && (l[r] = !(e[r] = c));\n                }\n              }) : function (l, n, c) {\n                return e[0] = l, a(e, null, c, t), e[0] = null, !t.pop();\n              };\n            }),\n            has: n(function (l) {\n              return function (t) {\n                return e(l, t).length > 0;\n              };\n            }),\n            contains: n(function (l) {\n              return l = l.replace(yl, vl), function (e) {\n                return (e.textContent || S(e)).indexOf(l) > -1;\n              };\n            }),\n            lang: n(function (l) {\n              return pl.test(l || \"\") || e.error(\"unsupported lang: \" + l), l = l.replace(yl, vl).toLowerCase(), function (e) {\n                var t;\n\n                do {\n                  if (t = j ? e.lang : e.getAttribute(\"xml:lang\") || e.getAttribute(\"lang\")) return (t = t.toLowerCase()) === l || 0 === t.indexOf(l + \"-\");\n                } while ((e = e.parentNode) && 1 === e.nodeType);\n\n                return !1;\n              };\n            }),\n            target: function target(e) {\n              var t = l.location && l.location.hash;\n              return t && t.slice(1) === e.id;\n            },\n            root: function root(l) {\n              return l === R;\n            },\n            focus: function focus(l) {\n              return l === L.activeElement && (!L.hasFocus || L.hasFocus()) && !!(l.type || l.href || ~l.tabIndex);\n            },\n            enabled: r(!1),\n            disabled: r(!0),\n            checked: function checked(l) {\n              var e = l.nodeName.toLowerCase();\n              return \"input\" === e && !!l.checked || \"option\" === e && !!l.selected;\n            },\n            selected: function selected(l) {\n              return l.parentNode && l.parentNode.selectedIndex, !0 === l.selected;\n            },\n            empty: function empty(l) {\n              for (l = l.firstChild; l; l = l.nextSibling) {\n                if (l.nodeType < 6) return !1;\n              }\n\n              return !0;\n            },\n            parent: function parent(l) {\n              return !b.pseudos.empty(l);\n            },\n            header: function header(l) {\n              return fl.test(l.nodeName);\n            },\n            input: function input(l) {\n              return ml.test(l.nodeName);\n            },\n            button: function button(l) {\n              var e = l.nodeName.toLowerCase();\n              return \"input\" === e && \"button\" === l.type || \"button\" === e;\n            },\n            text: function text(l) {\n              var e;\n              return \"input\" === l.nodeName.toLowerCase() && \"text\" === l.type && (null == (e = l.getAttribute(\"type\")) || \"text\" === e.toLowerCase());\n            },\n            first: o(function () {\n              return [0];\n            }),\n            last: o(function (l, e) {\n              return [e - 1];\n            }),\n            eq: o(function (l, e, t) {\n              return [t < 0 ? t + e : t];\n            }),\n            even: o(function (l, e) {\n              for (var t = 0; t < e; t += 2) {\n                l.push(t);\n              }\n\n              return l;\n            }),\n            odd: o(function (l, e) {\n              for (var t = 1; t < e; t += 2) {\n                l.push(t);\n              }\n\n              return l;\n            }),\n            lt: o(function (l, e, t) {\n              for (var n = t < 0 ? t + e : t > e ? e : t; --n >= 0;) {\n                l.push(n);\n              }\n\n              return l;\n            }),\n            gt: o(function (l, e, t) {\n              for (var n = t < 0 ? t + e : t; ++n < e;) {\n                l.push(n);\n              }\n\n              return l;\n            })\n          }\n        }, b.pseudos.nth = b.pseudos.eq;\n\n        for (y in {\n          radio: !0,\n          checkbox: !0,\n          file: !0,\n          password: !0,\n          image: !0\n        }) {\n          b.pseudos[y] = function (l) {\n            return function (e) {\n              return \"input\" === e.nodeName.toLowerCase() && e.type === l;\n            };\n          }(y);\n        }\n\n        for (y in {\n          submit: !0,\n          reset: !0\n        }) {\n          b.pseudos[y] = function (l) {\n            return function (e) {\n              var t = e.nodeName.toLowerCase();\n              return (\"input\" === t || \"button\" === t) && e.type === l;\n            };\n          }(y);\n        }\n\n        return h.prototype = b.filters = b.pseudos, b.setFilters = new h(), w = e.tokenize = function (l, t) {\n          var n,\n              a,\n              c,\n              i,\n              r,\n              o,\n              s,\n              h = F[l + \" \"];\n          if (h) return t ? 0 : h.slice(0);\n\n          for (r = l, o = [], s = b.preFilter; r;) {\n            n && !(a = rl.exec(r)) || (a && (r = r.slice(a[0].length) || r), o.push(c = [])), n = !1, (a = ol.exec(r)) && (n = a.shift(), c.push({\n              value: n,\n              type: a[0].replace(il, \" \")\n            }), r = r.slice(n.length));\n\n            for (i in b.filter) {\n              !(a = ul[i].exec(r)) || s[i] && !(a = s[i](a)) || (n = a.shift(), c.push({\n                value: n,\n                type: i,\n                matches: a\n              }), r = r.slice(n.length));\n            }\n\n            if (!n) break;\n          }\n\n          return t ? r.length : r ? e.error(l) : F(l, o).slice(0);\n        }, E = e.compile = function (l, e) {\n          var t,\n              n = [],\n              a = [],\n              c = _[l + \" \"];\n\n          if (!c) {\n            for (e || (e = w(l)), t = e.length; t--;) {\n              c = Z(e[t]), c[I] ? n.push(c) : a.push(c);\n            }\n\n            c = _(l, g(a, n)), c.selector = l;\n          }\n\n          return c;\n        }, C = e.select = function (l, e, t, n) {\n          var a,\n              c,\n              i,\n              r,\n              o,\n              h = \"function\" === typeof l && l,\n              u = !n && w(l = h.selector || l);\n\n          if (t = t || [], 1 === u.length) {\n            if (c = u[0] = u[0].slice(0), c.length > 2 && \"ID\" === (i = c[0]).type && 9 === e.nodeType && j && b.relative[c[1].type]) {\n              if (!(e = (b.find.ID(i.matches[0].replace(yl, vl), e) || [])[0])) return t;\n              h && (e = e.parentNode), l = l.slice(c.shift().value.length);\n            }\n\n            for (a = ul.needsContext.test(l) ? 0 : c.length; a-- && (i = c[a], !b.relative[r = i.type]);) {\n              if ((o = b.find[r]) && (n = o(i.matches[0].replace(yl, vl), gl.test(c[0].type) && s(e.parentNode) || e))) {\n                if (c.splice(a, 1), !(l = n.length && p(c))) return K.apply(t, n), t;\n                break;\n              }\n            }\n          }\n\n          return (h || E(l, u))(n, e, !j, t, !e || gl.test(l) && s(e.parentNode) || e), t;\n        }, v.sortStable = I.split(\"\").sort(q).join(\"\") === I, v.detectDuplicates = !!A, k(), v.sortDetached = a(function (l) {\n          return 1 & l.compareDocumentPosition(L.createElement(\"fieldset\"));\n        }), a(function (l) {\n          return l.innerHTML = \"<a href='#'></a>\", \"#\" === l.firstChild.getAttribute(\"href\");\n        }) || c(\"type|href|height|width\", function (l, e, t) {\n          if (!t) return l.getAttribute(e, \"type\" === e.toLowerCase() ? 1 : 2);\n        }), v.attributes && a(function (l) {\n          return l.innerHTML = \"<input/>\", l.firstChild.setAttribute(\"value\", \"\"), \"\" === l.firstChild.getAttribute(\"value\");\n        }) || c(\"value\", function (l, e, t) {\n          if (!t && \"input\" === l.nodeName.toLowerCase()) return l.defaultValue;\n        }), a(function (l) {\n          return null == l.getAttribute(\"disabled\");\n        }) || c(ll, function (l, e, t) {\n          var n;\n          if (!t) return !0 === l[e] ? e.toLowerCase() : (n = l.getAttributeNode(e)) && n.specified ? n.value : null;\n        }), e;\n      }(t);\n\n      zl.find = Al, zl.expr = Al.selectors, zl.expr[\":\"] = zl.expr.pseudos, zl.uniqueSort = zl.unique = Al.uniqueSort, zl.text = Al.getText, zl.isXMLDoc = Al.isXML, zl.contains = Al.contains, zl.escapeSelector = Al.escape;\n\n      var kl = function kl(l, e, t) {\n        for (var n = [], a = void 0 !== t; (l = l[e]) && 9 !== l.nodeType;) {\n          if (1 === l.nodeType) {\n            if (a && zl(l).is(t)) break;\n            n.push(l);\n          }\n        }\n\n        return n;\n      },\n          Ll = function Ll(l, e) {\n        for (var t = []; l; l = l.nextSibling) {\n          1 === l.nodeType && l !== e && t.push(l);\n        }\n\n        return t;\n      },\n          Rl = zl.expr.match.needsContext,\n          jl = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;\n\n      zl.filter = function (l, e, t) {\n        var n = e[0];\n        return t && (l = \":not(\" + l + \")\"), 1 === e.length && 1 === n.nodeType ? zl.find.matchesSelector(n, l) ? [n] : [] : zl.find.matches(l, zl.grep(e, function (l) {\n          return 1 === l.nodeType;\n        }));\n      }, zl.fn.extend({\n        find: function find(l) {\n          var e,\n              t,\n              n = this.length,\n              a = this;\n          if (\"string\" !== typeof l) return this.pushStack(zl(l).filter(function () {\n            for (e = 0; e < n; e++) {\n              if (zl.contains(a[e], this)) return !0;\n            }\n          }));\n\n          for (t = this.pushStack([]), e = 0; e < n; e++) {\n            zl.find(l, a[e], t);\n          }\n\n          return n > 1 ? zl.uniqueSort(t) : t;\n        },\n        filter: function filter(l) {\n          return this.pushStack(h(this, l || [], !1));\n        },\n        not: function not(l) {\n          return this.pushStack(h(this, l || [], !0));\n        },\n        is: function is(l) {\n          return !!h(this, \"string\" === typeof l && Rl.test(l) ? zl(l) : l || [], !1).length;\n        }\n      });\n      var Nl,\n          Dl = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/;\n      (zl.fn.init = function (l, e, t) {\n        var n, a;\n        if (!l) return this;\n\n        if (t = t || Nl, \"string\" === typeof l) {\n          if (!(n = \"<\" === l[0] && \">\" === l[l.length - 1] && l.length >= 3 ? [null, l, null] : Dl.exec(l)) || !n[1] && e) return !e || e.jquery ? (e || t).find(l) : this.constructor(e).find(l);\n\n          if (n[1]) {\n            if (e = e instanceof zl ? e[0] : e, zl.merge(this, zl.parseHTML(n[1], e && e.nodeType ? e.ownerDocument || e : ul, !0)), jl.test(n[1]) && zl.isPlainObject(e)) for (n in e) {\n              wl(this[n]) ? this[n](e[n]) : this.attr(n, e[n]);\n            }\n            return this;\n          }\n\n          return a = ul.getElementById(n[2]), a && (this[0] = a, this.length = 1), this;\n        }\n\n        return l.nodeType ? (this[0] = l, this.length = 1, this) : wl(l) ? void 0 !== t.ready ? t.ready(l) : l(zl) : zl.makeArray(l, this);\n      }).prototype = zl.fn, Nl = zl(ul);\n      var Ol = /^(?:parents|prev(?:Until|All))/,\n          Pl = {\n        children: !0,\n        contents: !0,\n        next: !0,\n        prev: !0\n      };\n      zl.fn.extend({\n        has: function has(l) {\n          var e = zl(l, this),\n              t = e.length;\n          return this.filter(function () {\n            for (var l = 0; l < t; l++) {\n              if (zl.contains(this, e[l])) return !0;\n            }\n          });\n        },\n        closest: function closest(l, e) {\n          var t,\n              n = 0,\n              a = this.length,\n              c = [],\n              i = \"string\" !== typeof l && zl(l);\n          if (!Rl.test(l)) for (; n < a; n++) {\n            for (t = this[n]; t && t !== e; t = t.parentNode) {\n              if (t.nodeType < 11 && (i ? i.index(t) > -1 : 1 === t.nodeType && zl.find.matchesSelector(t, l))) {\n                c.push(t);\n                break;\n              }\n            }\n          }\n          return this.pushStack(c.length > 1 ? zl.uniqueSort(c) : c);\n        },\n        index: function index(l) {\n          return l ? \"string\" === typeof l ? Zl.call(zl(l), this[0]) : Zl.call(this, l.jquery ? l[0] : l) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n        },\n        add: function add(l, e) {\n          return this.pushStack(zl.uniqueSort(zl.merge(this.get(), zl(l, e))));\n        },\n        addBack: function addBack(l) {\n          return this.add(null == l ? this.prevObject : this.prevObject.filter(l));\n        }\n      }), zl.each({\n        parent: function parent(l) {\n          var e = l.parentNode;\n          return e && 11 !== e.nodeType ? e : null;\n        },\n        parents: function parents(l) {\n          return kl(l, \"parentNode\");\n        },\n        parentsUntil: function parentsUntil(l, e, t) {\n          return kl(l, \"parentNode\", t);\n        },\n        next: function next(l) {\n          return p(l, \"nextSibling\");\n        },\n        prev: function prev(l) {\n          return p(l, \"previousSibling\");\n        },\n        nextAll: function nextAll(l) {\n          return kl(l, \"nextSibling\");\n        },\n        prevAll: function prevAll(l) {\n          return kl(l, \"previousSibling\");\n        },\n        nextUntil: function nextUntil(l, e, t) {\n          return kl(l, \"nextSibling\", t);\n        },\n        prevUntil: function prevUntil(l, e, t) {\n          return kl(l, \"previousSibling\", t);\n        },\n        siblings: function siblings(l) {\n          return Ll((l.parentNode || {}).firstChild, l);\n        },\n        children: function children(l) {\n          return Ll(l.firstChild);\n        },\n        contents: function contents(l) {\n          return \"undefined\" !== typeof l.contentDocument ? l.contentDocument : (s(l, \"template\") && (l = l.content || l), zl.merge([], l.childNodes));\n        }\n      }, function (l, e) {\n        zl.fn[l] = function (t, n) {\n          var a = zl.map(this, e, t);\n          return \"Until\" !== l.slice(-5) && (n = t), n && \"string\" === typeof n && (a = zl.filter(n, a)), this.length > 1 && (Pl[l] || zl.uniqueSort(a), Ol.test(l) && a.reverse()), this.pushStack(a);\n        };\n      });\n      var Il = /[^\\x20\\t\\r\\n\\f]+/g;\n      zl.Callbacks = function (l) {\n        l = \"string\" === typeof l ? u(l) : zl.extend({}, l);\n\n        var e,\n            t,\n            n,\n            a,\n            c = [],\n            i = [],\n            o = -1,\n            s = function s() {\n          for (a = a || l.once, n = e = !0; i.length; o = -1) {\n            for (t = i.shift(); ++o < c.length;) {\n              !1 === c[o].apply(t[0], t[1]) && l.stopOnFalse && (o = c.length, t = !1);\n            }\n          }\n\n          l.memory || (t = !1), e = !1, a && (c = t ? [] : \"\");\n        },\n            h = {\n          add: function add() {\n            return c && (t && !e && (o = c.length - 1, i.push(t)), function e(t) {\n              zl.each(t, function (t, n) {\n                wl(n) ? l.unique && h.has(n) || c.push(n) : n && n.length && \"string\" !== r(n) && e(n);\n              });\n            }(arguments), t && !e && s()), this;\n          },\n          remove: function remove() {\n            return zl.each(arguments, function (l, e) {\n              for (var t; (t = zl.inArray(e, c, t)) > -1;) {\n                c.splice(t, 1), t <= o && o--;\n              }\n            }), this;\n          },\n          has: function has(l) {\n            return l ? zl.inArray(l, c) > -1 : c.length > 0;\n          },\n          empty: function empty() {\n            return c && (c = []), this;\n          },\n          disable: function disable() {\n            return a = i = [], c = t = \"\", this;\n          },\n          disabled: function disabled() {\n            return !c;\n          },\n          lock: function lock() {\n            return a = i = [], t || e || (c = t = \"\"), this;\n          },\n          locked: function locked() {\n            return !!a;\n          },\n          fireWith: function fireWith(l, t) {\n            return a || (t = t || [], t = [l, t.slice ? t.slice() : t], i.push(t), e || s()), this;\n          },\n          fire: function fire() {\n            return h.fireWith(this, arguments), this;\n          },\n          fired: function fired() {\n            return !!n;\n          }\n        };\n\n        return h;\n      }, zl.extend({\n        Deferred: function Deferred(l) {\n          var e = [[\"notify\", \"progress\", zl.Callbacks(\"memory\"), zl.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", zl.Callbacks(\"once memory\"), zl.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", zl.Callbacks(\"once memory\"), zl.Callbacks(\"once memory\"), 1, \"rejected\"]],\n              n = \"pending\",\n              a = {\n            state: function state() {\n              return n;\n            },\n            always: function always() {\n              return c.done(arguments).fail(arguments), this;\n            },\n            catch: function _catch(l) {\n              return a.then(null, l);\n            },\n            pipe: function pipe() {\n              var l = arguments;\n              return zl.Deferred(function (t) {\n                zl.each(e, function (e, n) {\n                  var a = wl(l[n[4]]) && l[n[4]];\n                  c[n[1]](function () {\n                    var l = a && a.apply(this, arguments);\n                    l && wl(l.promise) ? l.promise().progress(t.notify).done(t.resolve).fail(t.reject) : t[n[0] + \"With\"](this, a ? [l] : arguments);\n                  });\n                }), l = null;\n              }).promise();\n            },\n            then: function then(l, n, a) {\n              function c(l, e, n, a) {\n                return function () {\n                  var r = this,\n                      o = arguments,\n                      s = function s() {\n                    var t, s;\n\n                    if (!(l < i)) {\n                      if ((t = n.apply(r, o)) === e.promise()) throw new TypeError(\"Thenable self-resolution\");\n                      s = t && (\"object\" === typeof t || \"function\" === typeof t) && t.then, wl(s) ? a ? s.call(t, c(i, e, M, a), c(i, e, m, a)) : (i++, s.call(t, c(i, e, M, a), c(i, e, m, a), c(i, e, M, e.notifyWith))) : (n !== M && (r = void 0, o = [t]), (a || e.resolveWith)(r, o));\n                    }\n                  },\n                      h = a ? s : function () {\n                    try {\n                      s();\n                    } catch (t) {\n                      zl.Deferred.exceptionHook && zl.Deferred.exceptionHook(t, h.stackTrace), l + 1 >= i && (n !== m && (r = void 0, o = [t]), e.rejectWith(r, o));\n                    }\n                  };\n\n                  l ? h() : (zl.Deferred.getStackHook && (h.stackTrace = zl.Deferred.getStackHook()), t.setTimeout(h));\n                };\n              }\n\n              var i = 0;\n              return zl.Deferred(function (t) {\n                e[0][3].add(c(0, t, wl(a) ? a : M, t.notifyWith)), e[1][3].add(c(0, t, wl(l) ? l : M)), e[2][3].add(c(0, t, wl(n) ? n : m));\n              }).promise();\n            },\n            promise: function promise(l) {\n              return null != l ? zl.extend(l, a) : a;\n            }\n          },\n              c = {};\n          return zl.each(e, function (l, t) {\n            var i = t[2],\n                r = t[5];\n            a[t[1]] = i.add, r && i.add(function () {\n              n = r;\n            }, e[3 - l][2].disable, e[3 - l][3].disable, e[0][2].lock, e[0][3].lock), i.add(t[3].fire), c[t[0]] = function () {\n              return c[t[0] + \"With\"](this === c ? void 0 : this, arguments), this;\n            }, c[t[0] + \"With\"] = i.fireWith;\n          }), a.promise(c), l && l.call(c, c), c;\n        },\n        when: function when(l) {\n          var e = arguments.length,\n              t = e,\n              n = Array(t),\n              a = ml.call(arguments),\n              c = zl.Deferred(),\n              i = function i(l) {\n            return function (t) {\n              n[l] = this, a[l] = arguments.length > 1 ? ml.call(arguments) : t, --e || c.resolveWith(n, a);\n            };\n          };\n\n          if (e <= 1 && (f(l, c.done(i(t)).resolve, c.reject, !e), \"pending\" === c.state() || wl(a[t] && a[t].then))) return c.then();\n\n          for (; t--;) {\n            f(a[t], i(t), c.reject);\n          }\n\n          return c.promise();\n        }\n      });\n      var Vl = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n      zl.Deferred.exceptionHook = function (l, e) {\n        t.console && t.console.warn && l && Vl.test(l.name) && t.console.warn(\"jQuery.Deferred exception: \" + l.message, l.stack, e);\n      }, zl.readyException = function (l) {\n        t.setTimeout(function () {\n          throw l;\n        });\n      };\n      var Hl = zl.Deferred();\n      zl.fn.ready = function (l) {\n        return Hl.then(l).catch(function (l) {\n          zl.readyException(l);\n        }), this;\n      }, zl.extend({\n        isReady: !1,\n        readyWait: 1,\n        ready: function ready(l) {\n          (!0 === l ? --zl.readyWait : zl.isReady) || (zl.isReady = !0, !0 !== l && --zl.readyWait > 0 || Hl.resolveWith(ul, [zl]));\n        }\n      }), zl.ready.then = Hl.then, \"complete\" === ul.readyState || \"loading\" !== ul.readyState && !ul.documentElement.doScroll ? t.setTimeout(zl.ready) : (ul.addEventListener(\"DOMContentLoaded\", d), t.addEventListener(\"load\", d));\n\n      var Gl = function Gl(l, e, t, n, a, c, i) {\n        var o = 0,\n            s = l.length,\n            h = null == t;\n\n        if (\"object\" === r(t)) {\n          a = !0;\n\n          for (o in t) {\n            Gl(l, e, o, t[o], !0, c, i);\n          }\n        } else if (void 0 !== n && (a = !0, wl(n) || (i = !0), h && (i ? (e.call(l, n), e = null) : (h = e, e = function e(l, _e2, t) {\n          return h.call(zl(l), t);\n        })), e)) for (; o < s; o++) {\n          e(l[o], t, i ? n : n.call(l[o], o, e(l[o], t)));\n        }\n\n        return a ? l : h ? e.call(l) : s ? e(l[0], t) : c;\n      },\n          Bl = /^-ms-/,\n          Fl = /-([a-z])/g,\n          _l = function _l(l) {\n        return 1 === l.nodeType || 9 === l.nodeType || !+l.nodeType;\n      };\n\n      y.uid = 1, y.prototype = {\n        cache: function cache(l) {\n          var e = l[this.expando];\n          return e || (e = {}, _l(l) && (l.nodeType ? l[this.expando] = e : Object.defineProperty(l, this.expando, {\n            value: e,\n            configurable: !0\n          }))), e;\n        },\n        set: function set(l, e, t) {\n          var n,\n              a = this.cache(l);\n          if (\"string\" === typeof e) a[g(e)] = t;else for (n in e) {\n            a[g(n)] = e[n];\n          }\n          return a;\n        },\n        get: function get(l, e) {\n          return void 0 === e ? this.cache(l) : l[this.expando] && l[this.expando][g(e)];\n        },\n        access: function access(l, e, t) {\n          return void 0 === e || e && \"string\" === typeof e && void 0 === t ? this.get(l, e) : (this.set(l, e, t), void 0 !== t ? t : e);\n        },\n        remove: function remove(l, e) {\n          var t,\n              n = l[this.expando];\n\n          if (void 0 !== n) {\n            if (void 0 !== e) {\n              Array.isArray(e) ? e = e.map(g) : (e = g(e), e = e in n ? [e] : e.match(Il) || []), t = e.length;\n\n              for (; t--;) {\n                delete n[e[t]];\n              }\n            }\n\n            (void 0 === e || zl.isEmptyObject(n)) && (l.nodeType ? l[this.expando] = void 0 : delete l[this.expando]);\n          }\n        },\n        hasData: function hasData(l) {\n          var e = l[this.expando];\n          return void 0 !== e && !zl.isEmptyObject(e);\n        }\n      };\n      var Ul = new y(),\n          ql = new y(),\n          $l = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n          Yl = /[A-Z]/g;\n      zl.extend({\n        hasData: function hasData(l) {\n          return ql.hasData(l) || Ul.hasData(l);\n        },\n        data: function data(l, e, t) {\n          return ql.access(l, e, t);\n        },\n        removeData: function removeData(l, e) {\n          ql.remove(l, e);\n        },\n        _data: function _data(l, e, t) {\n          return Ul.access(l, e, t);\n        },\n        _removeData: function _removeData(l, e) {\n          Ul.remove(l, e);\n        }\n      }), zl.fn.extend({\n        data: function data(l, e) {\n          var t,\n              n,\n              a,\n              c = this[0],\n              i = c && c.attributes;\n\n          if (void 0 === l) {\n            if (this.length && (a = ql.get(c), 1 === c.nodeType && !Ul.get(c, \"hasDataAttrs\"))) {\n              for (t = i.length; t--;) {\n                i[t] && (n = i[t].name, 0 === n.indexOf(\"data-\") && (n = g(n.slice(5)), b(c, n, a[n])));\n              }\n\n              Ul.set(c, \"hasDataAttrs\", !0);\n            }\n\n            return a;\n          }\n\n          return \"object\" === typeof l ? this.each(function () {\n            ql.set(this, l);\n          }) : Gl(this, function (e) {\n            var t;\n\n            if (c && void 0 === e) {\n              if (void 0 !== (t = ql.get(c, l))) return t;\n              if (void 0 !== (t = b(c, l))) return t;\n            } else this.each(function () {\n              ql.set(this, l, e);\n            });\n          }, null, e, arguments.length > 1, null, !0);\n        },\n        removeData: function removeData(l) {\n          return this.each(function () {\n            ql.remove(this, l);\n          });\n        }\n      }), zl.extend({\n        queue: function queue(l, e, t) {\n          var n;\n          if (l) return e = (e || \"fx\") + \"queue\", n = Ul.get(l, e), t && (!n || Array.isArray(t) ? n = Ul.access(l, e, zl.makeArray(t)) : n.push(t)), n || [];\n        },\n        dequeue: function dequeue(l, e) {\n          e = e || \"fx\";\n\n          var t = zl.queue(l, e),\n              n = t.length,\n              a = t.shift(),\n              c = zl._queueHooks(l, e),\n              i = function i() {\n            zl.dequeue(l, e);\n          };\n\n          \"inprogress\" === a && (a = t.shift(), n--), a && (\"fx\" === e && t.unshift(\"inprogress\"), delete c.stop, a.call(l, i, c)), !n && c && c.empty.fire();\n        },\n        _queueHooks: function _queueHooks(l, e) {\n          var t = e + \"queueHooks\";\n          return Ul.get(l, t) || Ul.access(l, t, {\n            empty: zl.Callbacks(\"once memory\").add(function () {\n              Ul.remove(l, [e + \"queue\", t]);\n            })\n          });\n        }\n      }), zl.fn.extend({\n        queue: function queue(l, e) {\n          var t = 2;\n          return \"string\" !== typeof l && (e = l, l = \"fx\", t--), arguments.length < t ? zl.queue(this[0], l) : void 0 === e ? this : this.each(function () {\n            var t = zl.queue(this, l, e);\n            zl._queueHooks(this, l), \"fx\" === l && \"inprogress\" !== t[0] && zl.dequeue(this, l);\n          });\n        },\n        dequeue: function dequeue(l) {\n          return this.each(function () {\n            zl.dequeue(this, l);\n          });\n        },\n        clearQueue: function clearQueue(l) {\n          return this.queue(l || \"fx\", []);\n        },\n        promise: function promise(l, e) {\n          var t,\n              n = 1,\n              a = zl.Deferred(),\n              c = this,\n              i = this.length,\n              r = function r() {\n            --n || a.resolveWith(c, [c]);\n          };\n\n          for (\"string\" !== typeof l && (e = l, l = void 0), l = l || \"fx\"; i--;) {\n            (t = Ul.get(c[i], l + \"queueHooks\")) && t.empty && (n++, t.empty.add(r));\n          }\n\n          return r(), a.promise(e);\n        }\n      });\n\n      var Xl = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,\n          Wl = new RegExp(\"^(?:([+-])=|)(\" + Xl + \")([a-z%]*)$\", \"i\"),\n          Kl = [\"Top\", \"Right\", \"Bottom\", \"Left\"],\n          Jl = ul.documentElement,\n          Ql = function Ql(l) {\n        return zl.contains(l.ownerDocument, l);\n      },\n          le = {\n        composed: !0\n      };\n\n      Jl.attachShadow && (Ql = function Ql(l) {\n        return zl.contains(l.ownerDocument, l) || l.getRootNode(le) === l.ownerDocument;\n      });\n\n      var ee = function ee(l, e) {\n        return l = e || l, \"none\" === l.style.display || \"\" === l.style.display && Ql(l) && \"none\" === zl.css(l, \"display\");\n      },\n          te = function te(l, e, t, n) {\n        var a,\n            c,\n            i = {};\n\n        for (c in e) {\n          i[c] = l.style[c], l.style[c] = e[c];\n        }\n\n        a = t.apply(l, n || []);\n\n        for (c in e) {\n          l.style[c] = i[c];\n        }\n\n        return a;\n      },\n          ne = {};\n\n      zl.fn.extend({\n        show: function show() {\n          return w(this, !0);\n        },\n        hide: function hide() {\n          return w(this);\n        },\n        toggle: function toggle(l) {\n          return \"boolean\" === typeof l ? l ? this.show() : this.hide() : this.each(function () {\n            ee(this) ? zl(this).show() : zl(this).hide();\n          });\n        }\n      });\n      var ae = /^(?:checkbox|radio)$/i,\n          ce = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i,\n          ie = /^$|^module$|\\/(?:java|ecma)script/i,\n          re = {\n        option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n        thead: [1, \"<table>\", \"</table>\"],\n        col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n        tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n        td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        _default: [0, \"\", \"\"]\n      };\n      re.optgroup = re.option, re.tbody = re.tfoot = re.colgroup = re.caption = re.thead, re.th = re.td;\n      var oe = /<|&#?\\w+;/;\n      !function () {\n        var l = ul.createDocumentFragment(),\n            e = l.appendChild(ul.createElement(\"div\")),\n            t = ul.createElement(\"input\");\n        t.setAttribute(\"type\", \"radio\"), t.setAttribute(\"checked\", \"checked\"), t.setAttribute(\"name\", \"t\"), e.appendChild(t), xl.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked, e.innerHTML = \"<textarea>x</textarea>\", xl.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue;\n      }();\n      var se = /^key/,\n          he = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n          pe = /^([^.]*)(?:\\.(.+)|)/;\n      zl.event = {\n        global: {},\n        add: function add(l, e, t, n, a) {\n          var c,\n              i,\n              r,\n              o,\n              s,\n              h,\n              p,\n              u,\n              M,\n              m,\n              f,\n              d = Ul.get(l);\n          if (d) for (t.handler && (c = t, t = c.handler, a = c.selector), a && zl.find.matchesSelector(Jl, a), t.guid || (t.guid = zl.guid++), (o = d.events) || (o = d.events = {}), (i = d.handle) || (i = d.handle = function (e) {\n            return \"undefined\" !== typeof zl && zl.event.triggered !== e.type ? zl.event.dispatch.apply(l, arguments) : void 0;\n          }), e = (e || \"\").match(Il) || [\"\"], s = e.length; s--;) {\n            r = pe.exec(e[s]) || [], M = f = r[1], m = (r[2] || \"\").split(\".\").sort(), M && (p = zl.event.special[M] || {}, M = (a ? p.delegateType : p.bindType) || M, p = zl.event.special[M] || {}, h = zl.extend({\n              type: M,\n              origType: f,\n              data: n,\n              handler: t,\n              guid: t.guid,\n              selector: a,\n              needsContext: a && zl.expr.match.needsContext.test(a),\n              namespace: m.join(\".\")\n            }, c), (u = o[M]) || (u = o[M] = [], u.delegateCount = 0, p.setup && !1 !== p.setup.call(l, n, m, i) || l.addEventListener && l.addEventListener(M, i)), p.add && (p.add.call(l, h), h.handler.guid || (h.handler.guid = t.guid)), a ? u.splice(u.delegateCount++, 0, h) : u.push(h), zl.event.global[M] = !0);\n          }\n        },\n        remove: function remove(l, e, t, n, a) {\n          var c,\n              i,\n              r,\n              o,\n              s,\n              h,\n              p,\n              u,\n              M,\n              m,\n              f,\n              d = Ul.hasData(l) && Ul.get(l);\n\n          if (d && (o = d.events)) {\n            for (e = (e || \"\").match(Il) || [\"\"], s = e.length; s--;) {\n              if (r = pe.exec(e[s]) || [], M = f = r[1], m = (r[2] || \"\").split(\".\").sort(), M) {\n                for (p = zl.event.special[M] || {}, M = (n ? p.delegateType : p.bindType) || M, u = o[M] || [], r = r[2] && new RegExp(\"(^|\\\\.)\" + m.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"), i = c = u.length; c--;) {\n                  h = u[c], !a && f !== h.origType || t && t.guid !== h.guid || r && !r.test(h.namespace) || n && n !== h.selector && (\"**\" !== n || !h.selector) || (u.splice(c, 1), h.selector && u.delegateCount--, p.remove && p.remove.call(l, h));\n                }\n\n                i && !u.length && (p.teardown && !1 !== p.teardown.call(l, m, d.handle) || zl.removeEvent(l, M, d.handle), delete o[M]);\n              } else for (M in o) {\n                zl.event.remove(l, M + e[s], t, n, !0);\n              }\n            }\n\n            zl.isEmptyObject(o) && Ul.remove(l, \"handle events\");\n          }\n        },\n        dispatch: function dispatch(l) {\n          var e,\n              t,\n              n,\n              a,\n              c,\n              i,\n              r = zl.event.fix(l),\n              o = new Array(arguments.length),\n              s = (Ul.get(this, \"events\") || {})[r.type] || [],\n              h = zl.event.special[r.type] || {};\n\n          for (o[0] = r, e = 1; e < arguments.length; e++) {\n            o[e] = arguments[e];\n          }\n\n          if (r.delegateTarget = this, !h.preDispatch || !1 !== h.preDispatch.call(this, r)) {\n            for (i = zl.event.handlers.call(this, r, s), e = 0; (a = i[e++]) && !r.isPropagationStopped();) {\n              for (r.currentTarget = a.elem, t = 0; (c = a.handlers[t++]) && !r.isImmediatePropagationStopped();) {\n                r.rnamespace && !1 !== c.namespace && !r.rnamespace.test(c.namespace) || (r.handleObj = c, r.data = c.data, void 0 !== (n = ((zl.event.special[c.origType] || {}).handle || c.handler).apply(a.elem, o)) && !1 === (r.result = n) && (r.preventDefault(), r.stopPropagation()));\n              }\n            }\n\n            return h.postDispatch && h.postDispatch.call(this, r), r.result;\n          }\n        },\n        handlers: function handlers(l, e) {\n          var t,\n              n,\n              a,\n              c,\n              i,\n              r = [],\n              o = e.delegateCount,\n              s = l.target;\n          if (o && s.nodeType && !(\"click\" === l.type && l.button >= 1)) for (; s !== this; s = s.parentNode || this) {\n            if (1 === s.nodeType && (\"click\" !== l.type || !0 !== s.disabled)) {\n              for (c = [], i = {}, t = 0; t < o; t++) {\n                n = e[t], a = n.selector + \" \", void 0 === i[a] && (i[a] = n.needsContext ? zl(a, this).index(s) > -1 : zl.find(a, this, null, [s]).length), i[a] && c.push(n);\n              }\n\n              c.length && r.push({\n                elem: s,\n                handlers: c\n              });\n            }\n          }\n          return s = this, o < e.length && r.push({\n            elem: s,\n            handlers: e.slice(o)\n          }), r;\n        },\n        addProp: function addProp(l, e) {\n          Object.defineProperty(zl.Event.prototype, l, {\n            enumerable: !0,\n            configurable: !0,\n            get: wl(e) ? function () {\n              if (this.originalEvent) return e(this.originalEvent);\n            } : function () {\n              if (this.originalEvent) return this.originalEvent[l];\n            },\n            set: function set(e) {\n              Object.defineProperty(this, l, {\n                enumerable: !0,\n                configurable: !0,\n                writable: !0,\n                value: e\n              });\n            }\n          });\n        },\n        fix: function fix(l) {\n          return l[zl.expando] ? l : new zl.Event(l);\n        },\n        special: {\n          load: {\n            noBubble: !0\n          },\n          click: {\n            setup: function setup(l) {\n              var e = this || l;\n              return ae.test(e.type) && e.click && s(e, \"input\") && void 0 === Ul.get(e, \"click\") && j(e, \"click\", T), !1;\n            },\n            trigger: function trigger(l) {\n              var e = this || l;\n              return ae.test(e.type) && e.click && s(e, \"input\") && void 0 === Ul.get(e, \"click\") && j(e, \"click\"), !0;\n            },\n            _default: function _default(l) {\n              var e = l.target;\n              return ae.test(e.type) && e.click && s(e, \"input\") && Ul.get(e, \"click\") || s(e, \"a\");\n            }\n          },\n          beforeunload: {\n            postDispatch: function postDispatch(l) {\n              void 0 !== l.result && l.originalEvent && (l.originalEvent.returnValue = l.result);\n            }\n          }\n        }\n      }, zl.removeEvent = function (l, e, t) {\n        l.removeEventListener && l.removeEventListener(e, t);\n      }, zl.Event = function (l, e) {\n        if (!(this instanceof zl.Event)) return new zl.Event(l, e);\n        l && l.type ? (this.originalEvent = l, this.type = l.type, this.isDefaultPrevented = l.defaultPrevented || void 0 === l.defaultPrevented && !1 === l.returnValue ? T : A, this.target = l.target && 3 === l.target.nodeType ? l.target.parentNode : l.target, this.currentTarget = l.currentTarget, this.relatedTarget = l.relatedTarget) : this.type = l, e && zl.extend(this, e), this.timeStamp = l && l.timeStamp || Date.now(), this[zl.expando] = !0;\n      }, zl.Event.prototype = {\n        constructor: zl.Event,\n        isDefaultPrevented: A,\n        isPropagationStopped: A,\n        isImmediatePropagationStopped: A,\n        isSimulated: !1,\n        preventDefault: function preventDefault() {\n          var l = this.originalEvent;\n          this.isDefaultPrevented = T, l && !this.isSimulated && l.preventDefault();\n        },\n        stopPropagation: function stopPropagation() {\n          var l = this.originalEvent;\n          this.isPropagationStopped = T, l && !this.isSimulated && l.stopPropagation();\n        },\n        stopImmediatePropagation: function stopImmediatePropagation() {\n          var l = this.originalEvent;\n          this.isImmediatePropagationStopped = T, l && !this.isSimulated && l.stopImmediatePropagation(), this.stopPropagation();\n        }\n      }, zl.each({\n        altKey: !0,\n        bubbles: !0,\n        cancelable: !0,\n        changedTouches: !0,\n        ctrlKey: !0,\n        detail: !0,\n        eventPhase: !0,\n        metaKey: !0,\n        pageX: !0,\n        pageY: !0,\n        shiftKey: !0,\n        view: !0,\n        char: !0,\n        code: !0,\n        charCode: !0,\n        key: !0,\n        keyCode: !0,\n        button: !0,\n        buttons: !0,\n        clientX: !0,\n        clientY: !0,\n        offsetX: !0,\n        offsetY: !0,\n        pointerId: !0,\n        pointerType: !0,\n        screenX: !0,\n        screenY: !0,\n        targetTouches: !0,\n        toElement: !0,\n        touches: !0,\n        which: function which(l) {\n          var e = l.button;\n          return null == l.which && se.test(l.type) ? null != l.charCode ? l.charCode : l.keyCode : !l.which && void 0 !== e && he.test(l.type) ? 1 & e ? 1 : 2 & e ? 3 : 4 & e ? 2 : 0 : l.which;\n        }\n      }, zl.event.addProp), zl.each({\n        focus: \"focusin\",\n        blur: \"focusout\"\n      }, function (l, e) {\n        zl.event.special[l] = {\n          setup: function setup() {\n            return j(this, l, k), !1;\n          },\n          trigger: function trigger() {\n            return j(this, l), !0;\n          },\n          delegateType: e\n        };\n      }), zl.each({\n        mouseenter: \"mouseover\",\n        mouseleave: \"mouseout\",\n        pointerenter: \"pointerover\",\n        pointerleave: \"pointerout\"\n      }, function (l, e) {\n        zl.event.special[l] = {\n          delegateType: e,\n          bindType: e,\n          handle: function handle(l) {\n            var t,\n                n = this,\n                a = l.relatedTarget,\n                c = l.handleObj;\n            return a && (a === n || zl.contains(n, a)) || (l.type = c.origType, t = c.handler.apply(this, arguments), l.type = e), t;\n          }\n        };\n      }), zl.fn.extend({\n        on: function on(l, e, t, n) {\n          return R(this, l, e, t, n);\n        },\n        one: function one(l, e, t, n) {\n          return R(this, l, e, t, n, 1);\n        },\n        off: function off(l, e, t) {\n          var n, a;\n          if (l && l.preventDefault && l.handleObj) return n = l.handleObj, zl(l.delegateTarget).off(n.namespace ? n.origType + \".\" + n.namespace : n.origType, n.selector, n.handler), this;\n\n          if (\"object\" === typeof l) {\n            for (a in l) {\n              this.off(a, e, l[a]);\n            }\n\n            return this;\n          }\n\n          return !1 !== e && \"function\" !== typeof e || (t = e, e = void 0), !1 === t && (t = A), this.each(function () {\n            zl.event.remove(this, l, t, e);\n          });\n        }\n      });\n      var ue = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n          Me = /<script|<style|<link/i,\n          me = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n          fe = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n      zl.extend({\n        htmlPrefilter: function htmlPrefilter(l) {\n          return l.replace(ue, \"<$1></$2>\");\n        },\n        clone: function clone(l, e, t) {\n          var n,\n              a,\n              c,\n              i,\n              r = l.cloneNode(!0),\n              o = Ql(l);\n          if (!xl.noCloneChecked && (1 === l.nodeType || 11 === l.nodeType) && !zl.isXMLDoc(l)) for (i = E(r), c = E(l), n = 0, a = c.length; n < a; n++) {\n            I(c[n], i[n]);\n          }\n          if (e) if (t) for (c = c || E(l), i = i || E(r), n = 0, a = c.length; n < a; n++) {\n            P(c[n], i[n]);\n          } else P(l, r);\n          return i = E(r, \"script\"), i.length > 0 && C(i, !o && E(l, \"script\")), r;\n        },\n        cleanData: function cleanData(l) {\n          for (var e, t, n, a = zl.event.special, c = 0; void 0 !== (t = l[c]); c++) {\n            if (_l(t)) {\n              if (e = t[Ul.expando]) {\n                if (e.events) for (n in e.events) {\n                  a[n] ? zl.event.remove(t, n) : zl.removeEvent(t, n, e.handle);\n                }\n                t[Ul.expando] = void 0;\n              }\n\n              t[ql.expando] && (t[ql.expando] = void 0);\n            }\n          }\n        }\n      }), zl.fn.extend({\n        detach: function detach(l) {\n          return H(this, l, !0);\n        },\n        remove: function remove(l) {\n          return H(this, l);\n        },\n        text: function text(l) {\n          return Gl(this, function (l) {\n            return void 0 === l ? zl.text(this) : this.empty().each(function () {\n              1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = l);\n            });\n          }, null, l, arguments.length);\n        },\n        append: function append() {\n          return V(this, arguments, function (l) {\n            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {\n              N(this, l).appendChild(l);\n            }\n          });\n        },\n        prepend: function prepend() {\n          return V(this, arguments, function (l) {\n            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {\n              var e = N(this, l);\n              e.insertBefore(l, e.firstChild);\n            }\n          });\n        },\n        before: function before() {\n          return V(this, arguments, function (l) {\n            this.parentNode && this.parentNode.insertBefore(l, this);\n          });\n        },\n        after: function after() {\n          return V(this, arguments, function (l) {\n            this.parentNode && this.parentNode.insertBefore(l, this.nextSibling);\n          });\n        },\n        empty: function empty() {\n          for (var l, e = 0; null != (l = this[e]); e++) {\n            1 === l.nodeType && (zl.cleanData(E(l, !1)), l.textContent = \"\");\n          }\n\n          return this;\n        },\n        clone: function clone(l, e) {\n          return l = null != l && l, e = null == e ? l : e, this.map(function () {\n            return zl.clone(this, l, e);\n          });\n        },\n        html: function html(l) {\n          return Gl(this, function (l) {\n            var e = this[0] || {},\n                t = 0,\n                n = this.length;\n            if (void 0 === l && 1 === e.nodeType) return e.innerHTML;\n\n            if (\"string\" === typeof l && !Me.test(l) && !re[(ce.exec(l) || [\"\", \"\"])[1].toLowerCase()]) {\n              l = zl.htmlPrefilter(l);\n\n              try {\n                for (; t < n; t++) {\n                  e = this[t] || {}, 1 === e.nodeType && (zl.cleanData(E(e, !1)), e.innerHTML = l);\n                }\n\n                e = 0;\n              } catch (l) {}\n            }\n\n            e && this.empty().append(l);\n          }, null, l, arguments.length);\n        },\n        replaceWith: function replaceWith() {\n          var l = [];\n          return V(this, arguments, function (e) {\n            var t = this.parentNode;\n            zl.inArray(this, l) < 0 && (zl.cleanData(E(this)), t && t.replaceChild(e, this));\n          }, l);\n        }\n      }), zl.each({\n        appendTo: \"append\",\n        prependTo: \"prepend\",\n        insertBefore: \"before\",\n        insertAfter: \"after\",\n        replaceAll: \"replaceWith\"\n      }, function (l, e) {\n        zl.fn[l] = function (l) {\n          for (var t, n = [], a = zl(l), c = a.length - 1, i = 0; i <= c; i++) {\n            t = i === c ? this : this.clone(!0), zl(a[i])[e](t), dl.apply(n, t.get());\n          }\n\n          return this.pushStack(n);\n        };\n      });\n\n      var de = new RegExp(\"^(\" + Xl + \")(?!px)[a-z%]+$\", \"i\"),\n          Ze = function Ze(l) {\n        var e = l.ownerDocument.defaultView;\n        return e && e.opener || (e = t), e.getComputedStyle(l);\n      },\n          ge = new RegExp(Kl.join(\"|\"), \"i\");\n\n      !function () {\n        function l() {\n          if (s) {\n            o.style.cssText = \"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\", s.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\", Jl.appendChild(o).appendChild(s);\n            var l = t.getComputedStyle(s);\n            n = \"1%\" !== l.top, r = 12 === e(l.marginLeft), s.style.right = \"60%\", i = 36 === e(l.right), a = 36 === e(l.width), s.style.position = \"absolute\", c = 12 === e(s.offsetWidth / 3), Jl.removeChild(o), s = null;\n          }\n        }\n\n        function e(l) {\n          return Math.round(parseFloat(l));\n        }\n\n        var n,\n            a,\n            c,\n            i,\n            r,\n            o = ul.createElement(\"div\"),\n            s = ul.createElement(\"div\");\n        s.style && (s.style.backgroundClip = \"content-box\", s.cloneNode(!0).style.backgroundClip = \"\", xl.clearCloneStyle = \"content-box\" === s.style.backgroundClip, zl.extend(xl, {\n          boxSizingReliable: function boxSizingReliable() {\n            return l(), a;\n          },\n          pixelBoxStyles: function pixelBoxStyles() {\n            return l(), i;\n          },\n          pixelPosition: function pixelPosition() {\n            return l(), n;\n          },\n          reliableMarginLeft: function reliableMarginLeft() {\n            return l(), r;\n          },\n          scrollboxSize: function scrollboxSize() {\n            return l(), c;\n          }\n        }));\n      }();\n      var ye = [\"Webkit\", \"Moz\", \"ms\"],\n          ve = ul.createElement(\"div\").style,\n          be = {},\n          Se = /^(none|table(?!-c[ea]).+)/,\n          xe = /^--/,\n          we = {\n        position: \"absolute\",\n        visibility: \"hidden\",\n        display: \"block\"\n      },\n          Ee = {\n        letterSpacing: \"0\",\n        fontWeight: \"400\"\n      };\n      zl.extend({\n        cssHooks: {\n          opacity: {\n            get: function get(l, e) {\n              if (e) {\n                var t = G(l, \"opacity\");\n                return \"\" === t ? \"1\" : t;\n              }\n            }\n          }\n        },\n        cssNumber: {\n          animationIterationCount: !0,\n          columnCount: !0,\n          fillOpacity: !0,\n          flexGrow: !0,\n          flexShrink: !0,\n          fontWeight: !0,\n          gridArea: !0,\n          gridColumn: !0,\n          gridColumnEnd: !0,\n          gridColumnStart: !0,\n          gridRow: !0,\n          gridRowEnd: !0,\n          gridRowStart: !0,\n          lineHeight: !0,\n          opacity: !0,\n          order: !0,\n          orphans: !0,\n          widows: !0,\n          zIndex: !0,\n          zoom: !0\n        },\n        cssProps: {},\n        style: function style(l, e, t, n) {\n          if (l && 3 !== l.nodeType && 8 !== l.nodeType && l.style) {\n            var a,\n                c,\n                i,\n                r = g(e),\n                o = xe.test(e),\n                s = l.style;\n            if (o || (e = _(r)), i = zl.cssHooks[e] || zl.cssHooks[r], void 0 === t) return i && \"get\" in i && void 0 !== (a = i.get(l, !1, n)) ? a : s[e];\n            c = typeof t, \"string\" === c && (a = Wl.exec(t)) && a[1] && (t = S(l, e, a), c = \"number\"), null != t && t === t && (\"number\" !== c || o || (t += a && a[3] || (zl.cssNumber[r] ? \"\" : \"px\")), xl.clearCloneStyle || \"\" !== t || 0 !== e.indexOf(\"background\") || (s[e] = \"inherit\"), i && \"set\" in i && void 0 === (t = i.set(l, t, n)) || (o ? s.setProperty(e, t) : s[e] = t));\n          }\n        },\n        css: function css(l, e, t, n) {\n          var a,\n              c,\n              i,\n              r = g(e);\n          return xe.test(e) || (e = _(r)), i = zl.cssHooks[e] || zl.cssHooks[r], i && \"get\" in i && (a = i.get(l, !0, t)), void 0 === a && (a = G(l, e, n)), \"normal\" === a && e in Ee && (a = Ee[e]), \"\" === t || t ? (c = parseFloat(a), !0 === t || isFinite(c) ? c || 0 : a) : a;\n        }\n      }), zl.each([\"height\", \"width\"], function (l, e) {\n        zl.cssHooks[e] = {\n          get: function get(l, t, n) {\n            if (t) return !Se.test(zl.css(l, \"display\")) || l.getClientRects().length && l.getBoundingClientRect().width ? $(l, e, n) : te(l, we, function () {\n              return $(l, e, n);\n            });\n          },\n          set: function set(l, t, n) {\n            var a,\n                c = Ze(l),\n                i = !xl.scrollboxSize() && \"absolute\" === c.position,\n                r = i || n,\n                o = r && \"border-box\" === zl.css(l, \"boxSizing\", !1, c),\n                s = n ? q(l, e, n, o, c) : 0;\n            return o && i && (s -= Math.ceil(l[\"offset\" + e[0].toUpperCase() + e.slice(1)] - parseFloat(c[e]) - q(l, e, \"border\", !1, c) - .5)), s && (a = Wl.exec(t)) && \"px\" !== (a[3] || \"px\") && (l.style[e] = t, t = zl.css(l, e)), U(l, t, s);\n          }\n        };\n      }), zl.cssHooks.marginLeft = B(xl.reliableMarginLeft, function (l, e) {\n        if (e) return (parseFloat(G(l, \"marginLeft\")) || l.getBoundingClientRect().left - te(l, {\n          marginLeft: 0\n        }, function () {\n          return l.getBoundingClientRect().left;\n        })) + \"px\";\n      }), zl.each({\n        margin: \"\",\n        padding: \"\",\n        border: \"Width\"\n      }, function (l, e) {\n        zl.cssHooks[l + e] = {\n          expand: function expand(t) {\n            for (var n = 0, a = {}, c = \"string\" === typeof t ? t.split(\" \") : [t]; n < 4; n++) {\n              a[l + Kl[n] + e] = c[n] || c[n - 2] || c[0];\n            }\n\n            return a;\n          }\n        }, \"margin\" !== l && (zl.cssHooks[l + e].set = U);\n      }), zl.fn.extend({\n        css: function css(l, e) {\n          return Gl(this, function (l, e, t) {\n            var n,\n                a,\n                c = {},\n                i = 0;\n\n            if (Array.isArray(e)) {\n              for (n = Ze(l), a = e.length; i < a; i++) {\n                c[e[i]] = zl.css(l, e[i], !1, n);\n              }\n\n              return c;\n            }\n\n            return void 0 !== t ? zl.style(l, e, t) : zl.css(l, e);\n          }, l, e, arguments.length > 1);\n        }\n      }), zl.Tween = Y, Y.prototype = {\n        constructor: Y,\n        init: function init(l, e, t, n, a, c) {\n          this.elem = l, this.prop = t, this.easing = a || zl.easing._default, this.options = e, this.start = this.now = this.cur(), this.end = n, this.unit = c || (zl.cssNumber[t] ? \"\" : \"px\");\n        },\n        cur: function cur() {\n          var l = Y.propHooks[this.prop];\n          return l && l.get ? l.get(this) : Y.propHooks._default.get(this);\n        },\n        run: function run(l) {\n          var e,\n              t = Y.propHooks[this.prop];\n          return this.options.duration ? this.pos = e = zl.easing[this.easing](l, this.options.duration * l, 0, 1, this.options.duration) : this.pos = e = l, this.now = (this.end - this.start) * e + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), t && t.set ? t.set(this) : Y.propHooks._default.set(this), this;\n        }\n      }, Y.prototype.init.prototype = Y.prototype, Y.propHooks = {\n        _default: {\n          get: function get(l) {\n            var e;\n            return 1 !== l.elem.nodeType || null != l.elem[l.prop] && null == l.elem.style[l.prop] ? l.elem[l.prop] : (e = zl.css(l.elem, l.prop, \"\"), e && \"auto\" !== e ? e : 0);\n          },\n          set: function set(l) {\n            zl.fx.step[l.prop] ? zl.fx.step[l.prop](l) : 1 !== l.elem.nodeType || !zl.cssHooks[l.prop] && null == l.elem.style[_(l.prop)] ? l.elem[l.prop] = l.now : zl.style(l.elem, l.prop, l.now + l.unit);\n          }\n        }\n      }, Y.propHooks.scrollTop = Y.propHooks.scrollLeft = {\n        set: function set(l) {\n          l.elem.nodeType && l.elem.parentNode && (l.elem[l.prop] = l.now);\n        }\n      }, zl.easing = {\n        linear: function linear(l) {\n          return l;\n        },\n        swing: function swing(l) {\n          return .5 - Math.cos(l * Math.PI) / 2;\n        },\n        _default: \"swing\"\n      }, zl.fx = Y.prototype.init, zl.fx.step = {};\n      var Ce,\n          ze,\n          Te = /^(?:toggle|show|hide)$/,\n          Ae = /queueHooks$/;\n      zl.Animation = zl.extend(el, {\n        tweeners: {\n          \"*\": [function (l, e) {\n            var t = this.createTween(l, e);\n            return S(t.elem, l, Wl.exec(e), t), t;\n          }]\n        },\n        tweener: function tweener(l, e) {\n          wl(l) ? (e = l, l = [\"*\"]) : l = l.match(Il);\n\n          for (var t, n = 0, a = l.length; n < a; n++) {\n            t = l[n], el.tweeners[t] = el.tweeners[t] || [], el.tweeners[t].unshift(e);\n          }\n        },\n        prefilters: [Q],\n        prefilter: function prefilter(l, e) {\n          e ? el.prefilters.unshift(l) : el.prefilters.push(l);\n        }\n      }), zl.speed = function (l, e, t) {\n        var n = l && \"object\" === typeof l ? zl.extend({}, l) : {\n          complete: t || !t && e || wl(l) && l,\n          duration: l,\n          easing: t && e || e && !wl(e) && e\n        };\n        return zl.fx.off ? n.duration = 0 : \"number\" !== typeof n.duration && (n.duration in zl.fx.speeds ? n.duration = zl.fx.speeds[n.duration] : n.duration = zl.fx.speeds._default), null != n.queue && !0 !== n.queue || (n.queue = \"fx\"), n.old = n.complete, n.complete = function () {\n          wl(n.old) && n.old.call(this), n.queue && zl.dequeue(this, n.queue);\n        }, n;\n      }, zl.fn.extend({\n        fadeTo: function fadeTo(l, e, t, n) {\n          return this.filter(ee).css(\"opacity\", 0).show().end().animate({\n            opacity: e\n          }, l, t, n);\n        },\n        animate: function animate(l, e, t, n) {\n          var a = zl.isEmptyObject(l),\n              c = zl.speed(e, t, n),\n              i = function i() {\n            var e = el(this, zl.extend({}, l), c);\n            (a || Ul.get(this, \"finish\")) && e.stop(!0);\n          };\n\n          return i.finish = i, a || !1 === c.queue ? this.each(i) : this.queue(c.queue, i);\n        },\n        stop: function stop(l, e, t) {\n          var n = function n(l) {\n            var e = l.stop;\n            delete l.stop, e(t);\n          };\n\n          return \"string\" !== typeof l && (t = e, e = l, l = void 0), e && !1 !== l && this.queue(l || \"fx\", []), this.each(function () {\n            var e = !0,\n                a = null != l && l + \"queueHooks\",\n                c = zl.timers,\n                i = Ul.get(this);\n            if (a) i[a] && i[a].stop && n(i[a]);else for (a in i) {\n              i[a] && i[a].stop && Ae.test(a) && n(i[a]);\n            }\n\n            for (a = c.length; a--;) {\n              c[a].elem !== this || null != l && c[a].queue !== l || (c[a].anim.stop(t), e = !1, c.splice(a, 1));\n            }\n\n            !e && t || zl.dequeue(this, l);\n          });\n        },\n        finish: function finish(l) {\n          return !1 !== l && (l = l || \"fx\"), this.each(function () {\n            var e,\n                t = Ul.get(this),\n                n = t[l + \"queue\"],\n                a = t[l + \"queueHooks\"],\n                c = zl.timers,\n                i = n ? n.length : 0;\n\n            for (t.finish = !0, zl.queue(this, l, []), a && a.stop && a.stop.call(this, !0), e = c.length; e--;) {\n              c[e].elem === this && c[e].queue === l && (c[e].anim.stop(!0), c.splice(e, 1));\n            }\n\n            for (e = 0; e < i; e++) {\n              n[e] && n[e].finish && n[e].finish.call(this);\n            }\n\n            delete t.finish;\n          });\n        }\n      }), zl.each([\"toggle\", \"show\", \"hide\"], function (l, e) {\n        var t = zl.fn[e];\n\n        zl.fn[e] = function (l, n, a) {\n          return null == l || \"boolean\" === typeof l ? t.apply(this, arguments) : this.animate(K(e, !0), l, n, a);\n        };\n      }), zl.each({\n        slideDown: K(\"show\"),\n        slideUp: K(\"hide\"),\n        slideToggle: K(\"toggle\"),\n        fadeIn: {\n          opacity: \"show\"\n        },\n        fadeOut: {\n          opacity: \"hide\"\n        },\n        fadeToggle: {\n          opacity: \"toggle\"\n        }\n      }, function (l, e) {\n        zl.fn[l] = function (l, t, n) {\n          return this.animate(e, l, t, n);\n        };\n      }), zl.timers = [], zl.fx.tick = function () {\n        var l,\n            e = 0,\n            t = zl.timers;\n\n        for (Ce = Date.now(); e < t.length; e++) {\n          (l = t[e])() || t[e] !== l || t.splice(e--, 1);\n        }\n\n        t.length || zl.fx.stop(), Ce = void 0;\n      }, zl.fx.timer = function (l) {\n        zl.timers.push(l), zl.fx.start();\n      }, zl.fx.interval = 13, zl.fx.start = function () {\n        ze || (ze = !0, X());\n      }, zl.fx.stop = function () {\n        ze = null;\n      }, zl.fx.speeds = {\n        slow: 600,\n        fast: 200,\n        _default: 400\n      }, zl.fn.delay = function (l, e) {\n        return l = zl.fx ? zl.fx.speeds[l] || l : l, e = e || \"fx\", this.queue(e, function (e, n) {\n          var a = t.setTimeout(e, l);\n\n          n.stop = function () {\n            t.clearTimeout(a);\n          };\n        });\n      }, function () {\n        var l = ul.createElement(\"input\"),\n            e = ul.createElement(\"select\"),\n            t = e.appendChild(ul.createElement(\"option\"));\n        l.type = \"checkbox\", xl.checkOn = \"\" !== l.value, xl.optSelected = t.selected, l = ul.createElement(\"input\"), l.value = \"t\", l.type = \"radio\", xl.radioValue = \"t\" === l.value;\n      }();\n      var ke,\n          Le = zl.expr.attrHandle;\n      zl.fn.extend({\n        attr: function attr(l, e) {\n          return Gl(this, zl.attr, l, e, arguments.length > 1);\n        },\n        removeAttr: function removeAttr(l) {\n          return this.each(function () {\n            zl.removeAttr(this, l);\n          });\n        }\n      }), zl.extend({\n        attr: function attr(l, e, t) {\n          var n,\n              a,\n              c = l.nodeType;\n          if (3 !== c && 8 !== c && 2 !== c) return \"undefined\" === typeof l.getAttribute ? zl.prop(l, e, t) : (1 === c && zl.isXMLDoc(l) || (a = zl.attrHooks[e.toLowerCase()] || (zl.expr.match.bool.test(e) ? ke : void 0)), void 0 !== t ? null === t ? void zl.removeAttr(l, e) : a && \"set\" in a && void 0 !== (n = a.set(l, t, e)) ? n : (l.setAttribute(e, t + \"\"), t) : a && \"get\" in a && null !== (n = a.get(l, e)) ? n : (n = zl.find.attr(l, e), null == n ? void 0 : n));\n        },\n        attrHooks: {\n          type: {\n            set: function set(l, e) {\n              if (!xl.radioValue && \"radio\" === e && s(l, \"input\")) {\n                var t = l.value;\n                return l.setAttribute(\"type\", e), t && (l.value = t), e;\n              }\n            }\n          }\n        },\n        removeAttr: function removeAttr(l, e) {\n          var t,\n              n = 0,\n              a = e && e.match(Il);\n          if (a && 1 === l.nodeType) for (; t = a[n++];) {\n            l.removeAttribute(t);\n          }\n        }\n      }), ke = {\n        set: function set(l, e, t) {\n          return !1 === e ? zl.removeAttr(l, t) : l.setAttribute(t, t), t;\n        }\n      }, zl.each(zl.expr.match.bool.source.match(/\\w+/g), function (l, e) {\n        var t = Le[e] || zl.find.attr;\n\n        Le[e] = function (l, e, n) {\n          var a,\n              c,\n              i = e.toLowerCase();\n          return n || (c = Le[i], Le[i] = a, a = null != t(l, e, n) ? i : null, Le[i] = c), a;\n        };\n      });\n      var Re = /^(?:input|select|textarea|button)$/i,\n          je = /^(?:a|area)$/i;\n      zl.fn.extend({\n        prop: function prop(l, e) {\n          return Gl(this, zl.prop, l, e, arguments.length > 1);\n        },\n        removeProp: function removeProp(l) {\n          return this.each(function () {\n            delete this[zl.propFix[l] || l];\n          });\n        }\n      }), zl.extend({\n        prop: function prop(l, e, t) {\n          var n,\n              a,\n              c = l.nodeType;\n          if (3 !== c && 8 !== c && 2 !== c) return 1 === c && zl.isXMLDoc(l) || (e = zl.propFix[e] || e, a = zl.propHooks[e]), void 0 !== t ? a && \"set\" in a && void 0 !== (n = a.set(l, t, e)) ? n : l[e] = t : a && \"get\" in a && null !== (n = a.get(l, e)) ? n : l[e];\n        },\n        propHooks: {\n          tabIndex: {\n            get: function get(l) {\n              var e = zl.find.attr(l, \"tabindex\");\n              return e ? parseInt(e, 10) : Re.test(l.nodeName) || je.test(l.nodeName) && l.href ? 0 : -1;\n            }\n          }\n        },\n        propFix: {\n          for: \"htmlFor\",\n          class: \"className\"\n        }\n      }), xl.optSelected || (zl.propHooks.selected = {\n        get: function get(l) {\n          var e = l.parentNode;\n          return e && e.parentNode && e.parentNode.selectedIndex, null;\n        },\n        set: function set(l) {\n          var e = l.parentNode;\n          e && (e.selectedIndex, e.parentNode && e.parentNode.selectedIndex);\n        }\n      }), zl.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n        zl.propFix[this.toLowerCase()] = this;\n      }), zl.fn.extend({\n        addClass: function addClass(l) {\n          var e,\n              t,\n              n,\n              a,\n              c,\n              i,\n              r,\n              o = 0;\n          if (wl(l)) return this.each(function (e) {\n            zl(this).addClass(l.call(this, e, nl(this)));\n          });\n          if (e = al(l), e.length) for (; t = this[o++];) {\n            if (a = nl(t), n = 1 === t.nodeType && \" \" + tl(a) + \" \") {\n              for (i = 0; c = e[i++];) {\n                n.indexOf(\" \" + c + \" \") < 0 && (n += c + \" \");\n              }\n\n              r = tl(n), a !== r && t.setAttribute(\"class\", r);\n            }\n          }\n          return this;\n        },\n        removeClass: function removeClass(l) {\n          var e,\n              t,\n              n,\n              a,\n              c,\n              i,\n              r,\n              o = 0;\n          if (wl(l)) return this.each(function (e) {\n            zl(this).removeClass(l.call(this, e, nl(this)));\n          });\n          if (!arguments.length) return this.attr(\"class\", \"\");\n          if (e = al(l), e.length) for (; t = this[o++];) {\n            if (a = nl(t), n = 1 === t.nodeType && \" \" + tl(a) + \" \") {\n              for (i = 0; c = e[i++];) {\n                for (; n.indexOf(\" \" + c + \" \") > -1;) {\n                  n = n.replace(\" \" + c + \" \", \" \");\n                }\n              }\n\n              r = tl(n), a !== r && t.setAttribute(\"class\", r);\n            }\n          }\n          return this;\n        },\n        toggleClass: function toggleClass(l, e) {\n          var t = typeof l,\n              n = \"string\" === t || Array.isArray(l);\n          return \"boolean\" === typeof e && n ? e ? this.addClass(l) : this.removeClass(l) : wl(l) ? this.each(function (t) {\n            zl(this).toggleClass(l.call(this, t, nl(this), e), e);\n          }) : this.each(function () {\n            var e, a, c, i;\n            if (n) for (a = 0, c = zl(this), i = al(l); e = i[a++];) {\n              c.hasClass(e) ? c.removeClass(e) : c.addClass(e);\n            } else void 0 !== l && \"boolean\" !== t || (e = nl(this), e && Ul.set(this, \"__className__\", e), this.setAttribute && this.setAttribute(\"class\", e || !1 === l ? \"\" : Ul.get(this, \"__className__\") || \"\"));\n          });\n        },\n        hasClass: function hasClass(l) {\n          var e,\n              t,\n              n = 0;\n\n          for (e = \" \" + l + \" \"; t = this[n++];) {\n            if (1 === t.nodeType && (\" \" + tl(nl(t)) + \" \").indexOf(e) > -1) return !0;\n          }\n\n          return !1;\n        }\n      });\n      var Ne = /\\r/g;\n      zl.fn.extend({\n        val: function val(l) {\n          var e,\n              t,\n              n,\n              a = this[0];\n          {\n            if (arguments.length) return n = wl(l), this.each(function (t) {\n              var a;\n              1 === this.nodeType && (a = n ? l.call(this, t, zl(this).val()) : l, null == a ? a = \"\" : \"number\" === typeof a ? a += \"\" : Array.isArray(a) && (a = zl.map(a, function (l) {\n                return null == l ? \"\" : l + \"\";\n              })), (e = zl.valHooks[this.type] || zl.valHooks[this.nodeName.toLowerCase()]) && \"set\" in e && void 0 !== e.set(this, a, \"value\") || (this.value = a));\n            });\n            if (a) return (e = zl.valHooks[a.type] || zl.valHooks[a.nodeName.toLowerCase()]) && \"get\" in e && void 0 !== (t = e.get(a, \"value\")) ? t : (t = a.value, \"string\" === typeof t ? t.replace(Ne, \"\") : null == t ? \"\" : t);\n          }\n        }\n      }), zl.extend({\n        valHooks: {\n          option: {\n            get: function get(l) {\n              var e = zl.find.attr(l, \"value\");\n              return null != e ? e : tl(zl.text(l));\n            }\n          },\n          select: {\n            get: function get(l) {\n              var e,\n                  t,\n                  n,\n                  a = l.options,\n                  c = l.selectedIndex,\n                  i = \"select-one\" === l.type,\n                  r = i ? null : [],\n                  o = i ? c + 1 : a.length;\n\n              for (n = c < 0 ? o : i ? c : 0; n < o; n++) {\n                if (t = a[n], (t.selected || n === c) && !t.disabled && (!t.parentNode.disabled || !s(t.parentNode, \"optgroup\"))) {\n                  if (e = zl(t).val(), i) return e;\n                  r.push(e);\n                }\n              }\n\n              return r;\n            },\n            set: function set(l, e) {\n              for (var t, n, a = l.options, c = zl.makeArray(e), i = a.length; i--;) {\n                n = a[i], (n.selected = zl.inArray(zl.valHooks.option.get(n), c) > -1) && (t = !0);\n              }\n\n              return t || (l.selectedIndex = -1), c;\n            }\n          }\n        }\n      }), zl.each([\"radio\", \"checkbox\"], function () {\n        zl.valHooks[this] = {\n          set: function set(l, e) {\n            if (Array.isArray(e)) return l.checked = zl.inArray(zl(l).val(), e) > -1;\n          }\n        }, xl.checkOn || (zl.valHooks[this].get = function (l) {\n          return null === l.getAttribute(\"value\") ? \"on\" : l.value;\n        });\n      }), xl.focusin = \"onfocusin\" in t;\n\n      var De = /^(?:focusinfocus|focusoutblur)$/,\n          Oe = function Oe(l) {\n        l.stopPropagation();\n      };\n\n      zl.extend(zl.event, {\n        trigger: function trigger(l, e, n, a) {\n          var c,\n              i,\n              r,\n              o,\n              s,\n              h,\n              p,\n              u,\n              M = [n || ul],\n              m = vl.call(l, \"type\") ? l.type : l,\n              f = vl.call(l, \"namespace\") ? l.namespace.split(\".\") : [];\n\n          if (i = u = r = n = n || ul, 3 !== n.nodeType && 8 !== n.nodeType && !De.test(m + zl.event.triggered) && (m.indexOf(\".\") > -1 && (f = m.split(\".\"), m = f.shift(), f.sort()), s = m.indexOf(\":\") < 0 && \"on\" + m, l = l[zl.expando] ? l : new zl.Event(m, \"object\" === typeof l && l), l.isTrigger = a ? 2 : 3, l.namespace = f.join(\".\"), l.rnamespace = l.namespace ? new RegExp(\"(^|\\\\.)\" + f.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null, l.result = void 0, l.target || (l.target = n), e = null == e ? [l] : zl.makeArray(e, [l]), p = zl.event.special[m] || {}, a || !p.trigger || !1 !== p.trigger.apply(n, e))) {\n            if (!a && !p.noBubble && !El(n)) {\n              for (o = p.delegateType || m, De.test(o + m) || (i = i.parentNode); i; i = i.parentNode) {\n                M.push(i), r = i;\n              }\n\n              r === (n.ownerDocument || ul) && M.push(r.defaultView || r.parentWindow || t);\n            }\n\n            for (c = 0; (i = M[c++]) && !l.isPropagationStopped();) {\n              u = i, l.type = c > 1 ? o : p.bindType || m, h = (Ul.get(i, \"events\") || {})[l.type] && Ul.get(i, \"handle\"), h && h.apply(i, e), (h = s && i[s]) && h.apply && _l(i) && (l.result = h.apply(i, e), !1 === l.result && l.preventDefault());\n            }\n\n            return l.type = m, a || l.isDefaultPrevented() || p._default && !1 !== p._default.apply(M.pop(), e) || !_l(n) || s && wl(n[m]) && !El(n) && (r = n[s], r && (n[s] = null), zl.event.triggered = m, l.isPropagationStopped() && u.addEventListener(m, Oe), n[m](), l.isPropagationStopped() && u.removeEventListener(m, Oe), zl.event.triggered = void 0, r && (n[s] = r)), l.result;\n          }\n        },\n        simulate: function simulate(l, e, t) {\n          var n = zl.extend(new zl.Event(), t, {\n            type: l,\n            isSimulated: !0\n          });\n          zl.event.trigger(n, null, e);\n        }\n      }), zl.fn.extend({\n        trigger: function trigger(l, e) {\n          return this.each(function () {\n            zl.event.trigger(l, e, this);\n          });\n        },\n        triggerHandler: function triggerHandler(l, e) {\n          var t = this[0];\n          if (t) return zl.event.trigger(l, e, t, !0);\n        }\n      }), xl.focusin || zl.each({\n        focus: \"focusin\",\n        blur: \"focusout\"\n      }, function (l, e) {\n        var t = function t(l) {\n          zl.event.simulate(e, l.target, zl.event.fix(l));\n        };\n\n        zl.event.special[e] = {\n          setup: function setup() {\n            var n = this.ownerDocument || this,\n                a = Ul.access(n, e);\n            a || n.addEventListener(l, t, !0), Ul.access(n, e, (a || 0) + 1);\n          },\n          teardown: function teardown() {\n            var n = this.ownerDocument || this,\n                a = Ul.access(n, e) - 1;\n            a ? Ul.access(n, e, a) : (n.removeEventListener(l, t, !0), Ul.remove(n, e));\n          }\n        };\n      });\n      var Pe = t.location,\n          Ie = Date.now(),\n          Ve = /\\?/;\n\n      zl.parseXML = function (l) {\n        var e;\n        if (!l || \"string\" !== typeof l) return null;\n\n        try {\n          e = new t.DOMParser().parseFromString(l, \"text/xml\");\n        } catch (l) {\n          e = void 0;\n        }\n\n        return e && !e.getElementsByTagName(\"parsererror\").length || zl.error(\"Invalid XML: \" + l), e;\n      };\n\n      var He = /\\[\\]$/,\n          Ge = /\\r?\\n/g,\n          Be = /^(?:submit|button|image|reset|file)$/i,\n          Fe = /^(?:input|select|textarea|keygen)/i;\n      zl.param = function (l, e) {\n        var t,\n            n = [],\n            a = function a(l, e) {\n          var t = wl(e) ? e() : e;\n          n[n.length] = encodeURIComponent(l) + \"=\" + encodeURIComponent(null == t ? \"\" : t);\n        };\n\n        if (null == l) return \"\";\n        if (Array.isArray(l) || l.jquery && !zl.isPlainObject(l)) zl.each(l, function () {\n          a(this.name, this.value);\n        });else for (t in l) {\n          cl(t, l[t], e, a);\n        }\n        return n.join(\"&\");\n      }, zl.fn.extend({\n        serialize: function serialize() {\n          return zl.param(this.serializeArray());\n        },\n        serializeArray: function serializeArray() {\n          return this.map(function () {\n            var l = zl.prop(this, \"elements\");\n            return l ? zl.makeArray(l) : this;\n          }).filter(function () {\n            var l = this.type;\n            return this.name && !zl(this).is(\":disabled\") && Fe.test(this.nodeName) && !Be.test(l) && (this.checked || !ae.test(l));\n          }).map(function (l, e) {\n            var t = zl(this).val();\n            return null == t ? null : Array.isArray(t) ? zl.map(t, function (l) {\n              return {\n                name: e.name,\n                value: l.replace(Ge, \"\\r\\n\")\n              };\n            }) : {\n              name: e.name,\n              value: t.replace(Ge, \"\\r\\n\")\n            };\n          }).get();\n        }\n      });\n      var _e = /%20/g,\n          Ue = /#.*$/,\n          qe = /([?&])_=[^&]*/,\n          $e = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm,\n          Ye = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n          Xe = /^(?:GET|HEAD)$/,\n          We = /^\\/\\//,\n          Ke = {},\n          Je = {},\n          Qe = \"*/\".concat(\"*\"),\n          lt = ul.createElement(\"a\");\n      lt.href = Pe.href, zl.extend({\n        active: 0,\n        lastModified: {},\n        etag: {},\n        ajaxSettings: {\n          url: Pe.href,\n          type: \"GET\",\n          isLocal: Ye.test(Pe.protocol),\n          global: !0,\n          processData: !0,\n          async: !0,\n          contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n          accepts: {\n            \"*\": Qe,\n            text: \"text/plain\",\n            html: \"text/html\",\n            xml: \"application/xml, text/xml\",\n            json: \"application/json, text/javascript\"\n          },\n          contents: {\n            xml: /\\bxml\\b/,\n            html: /\\bhtml/,\n            json: /\\bjson\\b/\n          },\n          responseFields: {\n            xml: \"responseXML\",\n            text: \"responseText\",\n            json: \"responseJSON\"\n          },\n          converters: {\n            \"* text\": String,\n            \"text html\": !0,\n            \"text json\": JSON.parse,\n            \"text xml\": zl.parseXML\n          },\n          flatOptions: {\n            url: !0,\n            context: !0\n          }\n        },\n        ajaxSetup: function ajaxSetup(l, e) {\n          return e ? ol(ol(l, zl.ajaxSettings), e) : ol(zl.ajaxSettings, l);\n        },\n        ajaxPrefilter: il(Ke),\n        ajaxTransport: il(Je),\n        ajax: function ajax(l, e) {\n          function n(l, e, n, r) {\n            var s,\n                u,\n                M,\n                v,\n                b,\n                S = e;\n            h || (h = !0, o && t.clearTimeout(o), a = void 0, i = r || \"\", x.readyState = l > 0 ? 4 : 0, s = l >= 200 && l < 300 || 304 === l, n && (v = sl(m, x, n)), v = hl(m, v, x, s), s ? (m.ifModified && (b = x.getResponseHeader(\"Last-Modified\"), b && (zl.lastModified[c] = b), (b = x.getResponseHeader(\"etag\")) && (zl.etag[c] = b)), 204 === l || \"HEAD\" === m.type ? S = \"nocontent\" : 304 === l ? S = \"notmodified\" : (S = v.state, u = v.data, M = v.error, s = !M)) : (M = S, !l && S || (S = \"error\", l < 0 && (l = 0))), x.status = l, x.statusText = (e || S) + \"\", s ? Z.resolveWith(f, [u, S, x]) : Z.rejectWith(f, [x, S, M]), x.statusCode(y), y = void 0, p && d.trigger(s ? \"ajaxSuccess\" : \"ajaxError\", [x, m, s ? u : M]), g.fireWith(f, [x, S]), p && (d.trigger(\"ajaxComplete\", [x, m]), --zl.active || zl.event.trigger(\"ajaxStop\")));\n          }\n\n          \"object\" === typeof l && (e = l, l = void 0), e = e || {};\n          var a,\n              c,\n              i,\n              r,\n              o,\n              s,\n              h,\n              p,\n              u,\n              M,\n              m = zl.ajaxSetup({}, e),\n              f = m.context || m,\n              d = m.context && (f.nodeType || f.jquery) ? zl(f) : zl.event,\n              Z = zl.Deferred(),\n              g = zl.Callbacks(\"once memory\"),\n              y = m.statusCode || {},\n              v = {},\n              b = {},\n              S = \"canceled\",\n              x = {\n            readyState: 0,\n            getResponseHeader: function getResponseHeader(l) {\n              var e;\n\n              if (h) {\n                if (!r) for (r = {}; e = $e.exec(i);) {\n                  r[e[1].toLowerCase() + \" \"] = (r[e[1].toLowerCase() + \" \"] || []).concat(e[2]);\n                }\n                e = r[l.toLowerCase() + \" \"];\n              }\n\n              return null == e ? null : e.join(\", \");\n            },\n            getAllResponseHeaders: function getAllResponseHeaders() {\n              return h ? i : null;\n            },\n            setRequestHeader: function setRequestHeader(l, e) {\n              return null == h && (l = b[l.toLowerCase()] = b[l.toLowerCase()] || l, v[l] = e), this;\n            },\n            overrideMimeType: function overrideMimeType(l) {\n              return null == h && (m.mimeType = l), this;\n            },\n            statusCode: function statusCode(l) {\n              var e;\n              if (l) if (h) x.always(l[x.status]);else for (e in l) {\n                y[e] = [y[e], l[e]];\n              }\n              return this;\n            },\n            abort: function abort(l) {\n              var e = l || S;\n              return a && a.abort(e), n(0, e), this;\n            }\n          };\n\n          if (Z.promise(x), m.url = ((l || m.url || Pe.href) + \"\").replace(We, Pe.protocol + \"//\"), m.type = e.method || e.type || m.method || m.type, m.dataTypes = (m.dataType || \"*\").toLowerCase().match(Il) || [\"\"], null == m.crossDomain) {\n            s = ul.createElement(\"a\");\n\n            try {\n              s.href = m.url, s.href = s.href, m.crossDomain = lt.protocol + \"//\" + lt.host !== s.protocol + \"//\" + s.host;\n            } catch (l) {\n              m.crossDomain = !0;\n            }\n          }\n\n          if (m.data && m.processData && \"string\" !== typeof m.data && (m.data = zl.param(m.data, m.traditional)), rl(Ke, m, e, x), h) return x;\n          p = zl.event && m.global, p && 0 === zl.active++ && zl.event.trigger(\"ajaxStart\"), m.type = m.type.toUpperCase(), m.hasContent = !Xe.test(m.type), c = m.url.replace(Ue, \"\"), m.hasContent ? m.data && m.processData && 0 === (m.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && (m.data = m.data.replace(_e, \"+\")) : (M = m.url.slice(c.length), m.data && (m.processData || \"string\" === typeof m.data) && (c += (Ve.test(c) ? \"&\" : \"?\") + m.data, delete m.data), !1 === m.cache && (c = c.replace(qe, \"$1\"), M = (Ve.test(c) ? \"&\" : \"?\") + \"_=\" + Ie++ + M), m.url = c + M), m.ifModified && (zl.lastModified[c] && x.setRequestHeader(\"If-Modified-Since\", zl.lastModified[c]), zl.etag[c] && x.setRequestHeader(\"If-None-Match\", zl.etag[c])), (m.data && m.hasContent && !1 !== m.contentType || e.contentType) && x.setRequestHeader(\"Content-Type\", m.contentType), x.setRequestHeader(\"Accept\", m.dataTypes[0] && m.accepts[m.dataTypes[0]] ? m.accepts[m.dataTypes[0]] + (\"*\" !== m.dataTypes[0] ? \", \" + Qe + \"; q=0.01\" : \"\") : m.accepts[\"*\"]);\n\n          for (u in m.headers) {\n            x.setRequestHeader(u, m.headers[u]);\n          }\n\n          if (m.beforeSend && (!1 === m.beforeSend.call(f, x, m) || h)) return x.abort();\n\n          if (S = \"abort\", g.add(m.complete), x.done(m.success), x.fail(m.error), a = rl(Je, m, e, x)) {\n            if (x.readyState = 1, p && d.trigger(\"ajaxSend\", [x, m]), h) return x;\n            m.async && m.timeout > 0 && (o = t.setTimeout(function () {\n              x.abort(\"timeout\");\n            }, m.timeout));\n\n            try {\n              h = !1, a.send(v, n);\n            } catch (l) {\n              if (h) throw l;\n              n(-1, l);\n            }\n          } else n(-1, \"No Transport\");\n\n          return x;\n        },\n        getJSON: function getJSON(l, e, t) {\n          return zl.get(l, e, t, \"json\");\n        },\n        getScript: function getScript(l, e) {\n          return zl.get(l, void 0, e, \"script\");\n        }\n      }), zl.each([\"get\", \"post\"], function (l, e) {\n        zl[e] = function (l, t, n, a) {\n          return wl(t) && (a = a || n, n = t, t = void 0), zl.ajax(zl.extend({\n            url: l,\n            type: e,\n            dataType: a,\n            data: t,\n            success: n\n          }, zl.isPlainObject(l) && l));\n        };\n      }), zl._evalUrl = function (l, e) {\n        return zl.ajax({\n          url: l,\n          type: \"GET\",\n          dataType: \"script\",\n          cache: !0,\n          async: !1,\n          global: !1,\n          converters: {\n            \"text script\": function textScript() {}\n          },\n          dataFilter: function dataFilter(l) {\n            zl.globalEval(l, e);\n          }\n        });\n      }, zl.fn.extend({\n        wrapAll: function wrapAll(l) {\n          var e;\n          return this[0] && (wl(l) && (l = l.call(this[0])), e = zl(l, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && e.insertBefore(this[0]), e.map(function () {\n            for (var l = this; l.firstElementChild;) {\n              l = l.firstElementChild;\n            }\n\n            return l;\n          }).append(this)), this;\n        },\n        wrapInner: function wrapInner(l) {\n          return wl(l) ? this.each(function (e) {\n            zl(this).wrapInner(l.call(this, e));\n          }) : this.each(function () {\n            var e = zl(this),\n                t = e.contents();\n            t.length ? t.wrapAll(l) : e.append(l);\n          });\n        },\n        wrap: function wrap(l) {\n          var e = wl(l);\n          return this.each(function (t) {\n            zl(this).wrapAll(e ? l.call(this, t) : l);\n          });\n        },\n        unwrap: function unwrap(l) {\n          return this.parent(l).not(\"body\").each(function () {\n            zl(this).replaceWith(this.childNodes);\n          }), this;\n        }\n      }), zl.expr.pseudos.hidden = function (l) {\n        return !zl.expr.pseudos.visible(l);\n      }, zl.expr.pseudos.visible = function (l) {\n        return !!(l.offsetWidth || l.offsetHeight || l.getClientRects().length);\n      }, zl.ajaxSettings.xhr = function () {\n        try {\n          return new t.XMLHttpRequest();\n        } catch (l) {}\n      };\n      var et = {\n        0: 200,\n        1223: 204\n      },\n          tt = zl.ajaxSettings.xhr();\n      xl.cors = !!tt && \"withCredentials\" in tt, xl.ajax = tt = !!tt, zl.ajaxTransport(function (l) {\n        var _e3, n;\n\n        if (xl.cors || tt && !l.crossDomain) return {\n          send: function send(a, c) {\n            var i,\n                r = l.xhr();\n            if (r.open(l.type, l.url, l.async, l.username, l.password), l.xhrFields) for (i in l.xhrFields) {\n              r[i] = l.xhrFields[i];\n            }\n            l.mimeType && r.overrideMimeType && r.overrideMimeType(l.mimeType), l.crossDomain || a[\"X-Requested-With\"] || (a[\"X-Requested-With\"] = \"XMLHttpRequest\");\n\n            for (i in a) {\n              r.setRequestHeader(i, a[i]);\n            }\n\n            _e3 = function e(l) {\n              return function () {\n                _e3 && (_e3 = n = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null, \"abort\" === l ? r.abort() : \"error\" === l ? \"number\" !== typeof r.status ? c(0, \"error\") : c(r.status, r.statusText) : c(et[r.status] || r.status, r.statusText, \"text\" !== (r.responseType || \"text\") || \"string\" !== typeof r.responseText ? {\n                  binary: r.response\n                } : {\n                  text: r.responseText\n                }, r.getAllResponseHeaders()));\n              };\n            }, r.onload = _e3(), n = r.onerror = r.ontimeout = _e3(\"error\"), void 0 !== r.onabort ? r.onabort = n : r.onreadystatechange = function () {\n              4 === r.readyState && t.setTimeout(function () {\n                _e3 && n();\n              });\n            }, _e3 = _e3(\"abort\");\n\n            try {\n              r.send(l.hasContent && l.data || null);\n            } catch (l) {\n              if (_e3) throw l;\n            }\n          },\n          abort: function abort() {\n            _e3 && _e3();\n          }\n        };\n      }), zl.ajaxPrefilter(function (l) {\n        l.crossDomain && (l.contents.script = !1);\n      }), zl.ajaxSetup({\n        accepts: {\n          script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n        },\n        contents: {\n          script: /\\b(?:java|ecma)script\\b/\n        },\n        converters: {\n          \"text script\": function textScript(l) {\n            return zl.globalEval(l), l;\n          }\n        }\n      }), zl.ajaxPrefilter(\"script\", function (l) {\n        void 0 === l.cache && (l.cache = !1), l.crossDomain && (l.type = \"GET\");\n      }), zl.ajaxTransport(\"script\", function (l) {\n        if (l.crossDomain || l.scriptAttrs) {\n          var e, _t;\n\n          return {\n            send: function send(n, a) {\n              e = zl(\"<script>\").attr(l.scriptAttrs || {}).prop({\n                charset: l.scriptCharset,\n                src: l.url\n              }).on(\"load error\", _t = function t(l) {\n                e.remove(), _t = null, l && a(\"error\" === l.type ? 404 : 200, l.type);\n              }), ul.head.appendChild(e[0]);\n            },\n            abort: function abort() {\n              _t && _t();\n            }\n          };\n        }\n      });\n      var nt = [],\n          at = /(=)\\?(?=&|$)|\\?\\?/;\n      zl.ajaxSetup({\n        jsonp: \"callback\",\n        jsonpCallback: function jsonpCallback() {\n          var l = nt.pop() || zl.expando + \"_\" + Ie++;\n          return this[l] = !0, l;\n        }\n      }), zl.ajaxPrefilter(\"json jsonp\", function (l, e, n) {\n        var a,\n            c,\n            i,\n            r = !1 !== l.jsonp && (at.test(l.url) ? \"url\" : \"string\" === typeof l.data && 0 === (l.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && at.test(l.data) && \"data\");\n        if (r || \"jsonp\" === l.dataTypes[0]) return a = l.jsonpCallback = wl(l.jsonpCallback) ? l.jsonpCallback() : l.jsonpCallback, r ? l[r] = l[r].replace(at, \"$1\" + a) : !1 !== l.jsonp && (l.url += (Ve.test(l.url) ? \"&\" : \"?\") + l.jsonp + \"=\" + a), l.converters[\"script json\"] = function () {\n          return i || zl.error(a + \" was not called\"), i[0];\n        }, l.dataTypes[0] = \"json\", c = t[a], t[a] = function () {\n          i = arguments;\n        }, n.always(function () {\n          void 0 === c ? zl(t).removeProp(a) : t[a] = c, l[a] && (l.jsonpCallback = e.jsonpCallback, nt.push(a)), i && wl(c) && c(i[0]), i = c = void 0;\n        }), \"script\";\n      }), xl.createHTMLDocument = function () {\n        var l = ul.implementation.createHTMLDocument(\"\").body;\n        return l.innerHTML = \"<form></form><form></form>\", 2 === l.childNodes.length;\n      }(), zl.parseHTML = function (l, e, t) {\n        if (\"string\" !== typeof l) return [];\n        \"boolean\" === typeof e && (t = e, e = !1);\n        var n, a, c;\n        return e || (xl.createHTMLDocument ? (e = ul.implementation.createHTMLDocument(\"\"), n = e.createElement(\"base\"), n.href = ul.location.href, e.head.appendChild(n)) : e = ul), a = jl.exec(l), c = !t && [], a ? [e.createElement(a[1])] : (a = z([l], e, c), c && c.length && zl(c).remove(), zl.merge([], a.childNodes));\n      }, zl.fn.load = function (l, e, t) {\n        var n,\n            a,\n            c,\n            i = this,\n            r = l.indexOf(\" \");\n        return r > -1 && (n = tl(l.slice(r)), l = l.slice(0, r)), wl(e) ? (t = e, e = void 0) : e && \"object\" === typeof e && (a = \"POST\"), i.length > 0 && zl.ajax({\n          url: l,\n          type: a || \"GET\",\n          dataType: \"html\",\n          data: e\n        }).done(function (l) {\n          c = arguments, i.html(n ? zl(\"<div>\").append(zl.parseHTML(l)).find(n) : l);\n        }).always(t && function (l, e) {\n          i.each(function () {\n            t.apply(this, c || [l.responseText, e, l]);\n          });\n        }), this;\n      }, zl.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (l, e) {\n        zl.fn[e] = function (l) {\n          return this.on(e, l);\n        };\n      }), zl.expr.pseudos.animated = function (l) {\n        return zl.grep(zl.timers, function (e) {\n          return l === e.elem;\n        }).length;\n      }, zl.offset = {\n        setOffset: function setOffset(l, e, t) {\n          var n,\n              a,\n              c,\n              i,\n              r,\n              o,\n              s,\n              h = zl.css(l, \"position\"),\n              p = zl(l),\n              u = {};\n          \"static\" === h && (l.style.position = \"relative\"), r = p.offset(), c = zl.css(l, \"top\"), o = zl.css(l, \"left\"), s = (\"absolute\" === h || \"fixed\" === h) && (c + o).indexOf(\"auto\") > -1, s ? (n = p.position(), i = n.top, a = n.left) : (i = parseFloat(c) || 0, a = parseFloat(o) || 0), wl(e) && (e = e.call(l, t, zl.extend({}, r))), null != e.top && (u.top = e.top - r.top + i), null != e.left && (u.left = e.left - r.left + a), \"using\" in e ? e.using.call(l, u) : p.css(u);\n        }\n      }, zl.fn.extend({\n        offset: function offset(l) {\n          if (arguments.length) return void 0 === l ? this : this.each(function (e) {\n            zl.offset.setOffset(this, l, e);\n          });\n          var e,\n              t,\n              n = this[0];\n          if (n) return n.getClientRects().length ? (e = n.getBoundingClientRect(), t = n.ownerDocument.defaultView, {\n            top: e.top + t.pageYOffset,\n            left: e.left + t.pageXOffset\n          }) : {\n            top: 0,\n            left: 0\n          };\n        },\n        position: function position() {\n          if (this[0]) {\n            var l,\n                e,\n                t,\n                n = this[0],\n                a = {\n              top: 0,\n              left: 0\n            };\n            if (\"fixed\" === zl.css(n, \"position\")) e = n.getBoundingClientRect();else {\n              for (e = this.offset(), t = n.ownerDocument, l = n.offsetParent || t.documentElement; l && (l === t.body || l === t.documentElement) && \"static\" === zl.css(l, \"position\");) {\n                l = l.parentNode;\n              }\n\n              l && l !== n && 1 === l.nodeType && (a = zl(l).offset(), a.top += zl.css(l, \"borderTopWidth\", !0), a.left += zl.css(l, \"borderLeftWidth\", !0));\n            }\n            return {\n              top: e.top - a.top - zl.css(n, \"marginTop\", !0),\n              left: e.left - a.left - zl.css(n, \"marginLeft\", !0)\n            };\n          }\n        },\n        offsetParent: function offsetParent() {\n          return this.map(function () {\n            for (var l = this.offsetParent; l && \"static\" === zl.css(l, \"position\");) {\n              l = l.offsetParent;\n            }\n\n            return l || Jl;\n          });\n        }\n      }), zl.each({\n        scrollLeft: \"pageXOffset\",\n        scrollTop: \"pageYOffset\"\n      }, function (l, e) {\n        var t = \"pageYOffset\" === e;\n\n        zl.fn[l] = function (n) {\n          return Gl(this, function (l, n, a) {\n            var c;\n            if (El(l) ? c = l : 9 === l.nodeType && (c = l.defaultView), void 0 === a) return c ? c[e] : l[n];\n            c ? c.scrollTo(t ? c.pageXOffset : a, t ? a : c.pageYOffset) : l[n] = a;\n          }, l, n, arguments.length);\n        };\n      }), zl.each([\"top\", \"left\"], function (l, e) {\n        zl.cssHooks[e] = B(xl.pixelPosition, function (l, t) {\n          if (t) return t = G(l, e), de.test(t) ? zl(l).position()[e] + \"px\" : t;\n        });\n      }), zl.each({\n        Height: \"height\",\n        Width: \"width\"\n      }, function (l, e) {\n        zl.each({\n          padding: \"inner\" + l,\n          content: e,\n          \"\": \"outer\" + l\n        }, function (t, n) {\n          zl.fn[n] = function (a, c) {\n            var i = arguments.length && (t || \"boolean\" !== typeof a),\n                r = t || (!0 === a || !0 === c ? \"margin\" : \"border\");\n            return Gl(this, function (e, t, a) {\n              var c;\n              return El(e) ? 0 === n.indexOf(\"outer\") ? e[\"inner\" + l] : e.document.documentElement[\"client\" + l] : 9 === e.nodeType ? (c = e.documentElement, Math.max(e.body[\"scroll\" + l], c[\"scroll\" + l], e.body[\"offset\" + l], c[\"offset\" + l], c[\"client\" + l])) : void 0 === a ? zl.css(e, t, r) : zl.style(e, t, a, r);\n            }, e, i ? a : void 0, i);\n          };\n        });\n      }), zl.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"), function (l, e) {\n        zl.fn[e] = function (l, t) {\n          return arguments.length > 0 ? this.on(e, null, l, t) : this.trigger(e);\n        };\n      }), zl.fn.extend({\n        hover: function hover(l, e) {\n          return this.mouseenter(l).mouseleave(e || l);\n        }\n      }), zl.fn.extend({\n        bind: function bind(l, e, t) {\n          return this.on(l, null, e, t);\n        },\n        unbind: function unbind(l, e) {\n          return this.off(l, null, e);\n        },\n        delegate: function delegate(l, e, t, n) {\n          return this.on(e, l, t, n);\n        },\n        undelegate: function undelegate(l, e, t) {\n          return 1 === arguments.length ? this.off(l, \"**\") : this.off(e, l || \"**\", t);\n        }\n      }), zl.proxy = function (l, e) {\n        var t, n, a;\n        if (\"string\" === typeof e && (t = l[e], e = l, l = t), wl(l)) return n = ml.call(arguments, 2), a = function a() {\n          return l.apply(e || this, n.concat(ml.call(arguments)));\n        }, a.guid = l.guid = l.guid || zl.guid++, a;\n      }, zl.holdReady = function (l) {\n        l ? zl.readyWait++ : zl.ready(!0);\n      }, zl.isArray = Array.isArray, zl.parseJSON = JSON.parse, zl.nodeName = s, zl.isFunction = wl, zl.isWindow = El, zl.camelCase = g, zl.type = r, zl.now = Date.now, zl.isNumeric = function (l) {\n        var e = zl.type(l);\n        return (\"number\" === e || \"string\" === e) && !isNaN(l - parseFloat(l));\n      }, n = [], void 0 !== (a = function () {\n        return zl;\n      }.apply(e, n)) && (l.exports = a);\n      var ct = t.jQuery,\n          it = t.$;\n      return zl.noConflict = function (l) {\n        return t.$ === zl && (t.$ = it), l && t.jQuery === zl && (t.jQuery = ct), zl;\n      }, c || (t.jQuery = t.$ = zl), zl;\n    });\n  }, function (l, e) {\n    function t() {\n      throw new Error(\"setTimeout has not been defined\");\n    }\n\n    function n() {\n      throw new Error(\"clearTimeout has not been defined\");\n    }\n\n    function a(l) {\n      if (h === setTimeout) return setTimeout(l, 0);\n      if ((h === t || !h) && setTimeout) return h = setTimeout, setTimeout(l, 0);\n\n      try {\n        return h(l, 0);\n      } catch (e) {\n        try {\n          return h.call(null, l, 0);\n        } catch (e) {\n          return h.call(this, l, 0);\n        }\n      }\n    }\n\n    function c(l) {\n      if (p === clearTimeout) return clearTimeout(l);\n      if ((p === n || !p) && clearTimeout) return p = clearTimeout, clearTimeout(l);\n\n      try {\n        return p(l);\n      } catch (e) {\n        try {\n          return p.call(null, l);\n        } catch (e) {\n          return p.call(this, l);\n        }\n      }\n    }\n\n    function i() {\n      f && M && (f = !1, M.length ? m = M.concat(m) : d = -1, m.length && r());\n    }\n\n    function r() {\n      if (!f) {\n        var l = a(i);\n        f = !0;\n\n        for (var e = m.length; e;) {\n          for (M = m, m = []; ++d < e;) {\n            M && M[d].run();\n          }\n\n          d = -1, e = m.length;\n        }\n\n        M = null, f = !1, c(l);\n      }\n    }\n\n    function o(l, e) {\n      this.fun = l, this.array = e;\n    }\n\n    function s() {}\n\n    var h,\n        p,\n        u = l.exports = {};\n    !function () {\n      try {\n        h = \"function\" === typeof setTimeout ? setTimeout : t;\n      } catch (l) {\n        h = t;\n      }\n\n      try {\n        p = \"function\" === typeof clearTimeout ? clearTimeout : n;\n      } catch (l) {\n        p = n;\n      }\n    }();\n    var M,\n        m = [],\n        f = !1,\n        d = -1;\n    u.nextTick = function (l) {\n      var e = new Array(arguments.length - 1);\n      if (arguments.length > 1) for (var t = 1; t < arguments.length; t++) {\n        e[t - 1] = arguments[t];\n      }\n      m.push(new o(l, e)), 1 !== m.length || f || a(r);\n    }, o.prototype.run = function () {\n      this.fun.apply(null, this.array);\n    }, u.title = \"browser\", u.browser = !0, u.env = {}, u.argv = [], u.version = \"\", u.versions = {}, u.on = s, u.addListener = s, u.once = s, u.off = s, u.removeListener = s, u.removeAllListeners = s, u.emit = s, u.prependListener = s, u.prependOnceListener = s, u.listeners = function (l) {\n      return [];\n    }, u.binding = function (l) {\n      throw new Error(\"process.binding is not supported\");\n    }, u.cwd = function () {\n      return \"/\";\n    }, u.chdir = function (l) {\n      throw new Error(\"process.chdir is not supported\");\n    }, u.umask = function () {\n      return 0;\n    };\n  }, function (l, e, t) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.default = [\"world_mill\", \"us_aea\", \"europe_mill\", \"continents_mill\", \"ch_mill\", \"oceania_mill\", \"africa_mill\", \"asia_mill\", \"north_america_mill\", \"south_america_mill\", \"ca_lcc\", \"brazil\", \"se_mill\", \"es_mill\", \"ar_mill\", \"vietnam\", \"fr_mill\", \"indonesia\"];\n  }, function (l, e, t) {\n    \"use strict\";\n\n    function n(l) {\n      return function () {\n        return l;\n      };\n    }\n\n    var a = function a() {};\n\n    a.thatReturns = n, a.thatReturnsFalse = n(!1), a.thatReturnsTrue = n(!0), a.thatReturnsNull = n(null), a.thatReturnsThis = function () {\n      return this;\n    }, a.thatReturnsArgument = function (l) {\n      return l;\n    }, l.exports = a;\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (e) {\n      function t(l, e, t, a, c, i, r, o) {\n        if (n(e), !l) {\n          var s;\n          if (void 0 === e) s = new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n            var h = [t, a, c, i, r, o],\n                p = 0;\n            s = new Error(e.replace(/%s/g, function () {\n              return h[p++];\n            })), s.name = \"Invariant Violation\";\n          }\n          throw s.framesToPop = 1, s;\n        }\n      }\n\n      var n = function n(l) {};\n\n      \"production\" !== e.env.NODE_ENV && (n = function n(l) {\n        if (void 0 === l) throw new Error(\"invariant requires an error message argument\");\n      }), l.exports = t;\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    l.exports = \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (e) {\n      var n = t(3),\n          a = n;\n\n      if (\"production\" !== e.env.NODE_ENV) {\n        var c = function c(l) {\n          for (var e = arguments.length, t = Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++) {\n            t[n - 1] = arguments[n];\n          }\n\n          var a = 0,\n              c = \"Warning: \" + l.replace(/%s/g, function () {\n            return t[a++];\n          });\n          \"undefined\" !== typeof console && console.error(c);\n\n          try {\n            throw new Error(c);\n          } catch (l) {}\n        };\n\n        a = function a(l, e) {\n          if (void 0 === e) throw new Error(\"`warning(condition, format, ...args)` requires a warning message argument\");\n\n          if (0 !== e.indexOf(\"Failed Composite propType: \") && !l) {\n            for (var t = arguments.length, n = Array(t > 2 ? t - 2 : 0), a = 2; a < t; a++) {\n              n[a - 2] = arguments[a];\n            }\n\n            c.apply(void 0, [e].concat(n));\n          }\n        };\n      }\n\n      l.exports = a;\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"africa_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 1054.4456598737515,\n          bbox: [{\n            y: -4361143.781154416,\n            x: -2822439.5658800667\n          }, {\n            y: 5651492.432223669,\n            x: 5723636.287018039\n          }],\n          left: 0\n        }],\n        paths: {\n          BF: {\n            path: \"M264.1,336.73l-0.38,0.6l0.64,1.4l-0.24,0.6l0.45,4.56l-0.35,0.78l0.96,2.95l-0.52,0.38l-1.13,-1.12l-1.14,-1.92l-3.05,-2.52l-6.67,-0.25l-5.65,2.08l-0.81,1.11l-1.3,-0.33l-0.81,-0.58l-1.06,0.11l-0.97,-0.44l-2.77,-1.95l-0.31,-1.37l-1.35,-2.42l-2.01,-0.98l-1.43,0.04l-1.31,-1.03l0.73,-3.93l-0.35,-3.1l1.58,-1.01l1.2,-3.07l0.23,-1.91l-0.71,-1.89l0.01,-1.44l1.9,-1.47l3.57,-0.76l1.28,-0.57l1.37,-0.98l1.89,-2.21l0.18,-3.18l-0.55,-0.89l2.84,-1.62l-0.0,-1.17l-1.15,-2.62l1.92,-2.04l1.07,-0.83l1.03,-0.2l4.85,2.6l2.89,-1.19l0.65,-1.69l0.16,-2.87l2.6,0.33l0.84,-0.24l0.52,-0.67l-0.09,-1.24l0.56,-1.81l1.04,-1.38l2.19,-1.78l1.28,-0.48l4.22,1.21l0.87,-0.55l0.92,-2.93l3.12,-0.59l2.38,-1.42l5.16,-2.3l3.42,-2.74l2.42,-0.33l1.68,0.77l1.87,-0.53l4.84,1.61l-0.54,4.66l2.53,3.13l-0.28,1.32l0.93,2.11l2.22,3.21l3.45,1.25l0.77,0.57l0.62,1.12l1.49,0.83l-1.54,-0.34l-0.49,0.28l-0.2,2.42l0.31,1.85l1.36,0.54l5.62,4.39l2.81,0.25l2.58,-1.21l0.76,0.11l0.56,0.66l0.68,2.06l-1.55,0.4l-0.37,0.74l0.45,1.07l3.34,4.38l-1.06,2.14l-3.38,3.04l-1.4,-0.26l-2.79,0.47l-0.58,-0.54l-1.85,0.09l-1.35,1.84l-1.84,0.43l-1.01,2.24l-1.1,0.01l-0.52,0.8l-4.55,0.45l-0.36,-0.43l-9.2,-2.08l-0.8,0.93l-1.17,0.12l-0.64,0.9l-1.44,0.83l-0.73,-0.69l-3.99,-0.25l-21.0,0.14l-0.48,0.5l-0.82,3.01l-0.1,1.69l0.51,1.27l0.95,0.91Z\",\n            name: \"Burkina Faso\"\n          },\n          DJ: {\n            path: \"M800.21,310.86l2.49,-0.89l2.06,2.6l1.22,3.04l-0.29,1.0l-1.15,1.3l-2.56,1.63l-2.88,1.05l-1.89,2.09l-1.18,-0.12l-0.43,0.5l0.21,0.81l0.84,0.38l3.96,-1.06l2.72,0.22l0.63,0.5l-3.48,5.46l-1.25,-0.1l-1.52,-0.81l-1.29,-0.06l-7.07,1.65l-1.47,-0.35l-0.35,-6.88l0.5,-1.41l2.1,-2.23l4.78,-6.87l0.41,-0.18l2.18,1.59l0.67,0.03l1.08,-0.76l0.97,-2.11Z\",\n            name: \"Djibouti\"\n          },\n          BI: {\n            path: \"M645.42,511.17l-3.4,-6.8l-0.35,-5.31l-0.5,-0.69l-0.91,-0.23l0.15,-3.04l-2.45,-3.14l0.12,-1.27l0.29,-0.52l1.17,0.22l1.0,0.53l0.56,1.26l0.68,0.41l3.89,-0.15l2.23,-1.13l0.73,-4.21l1.87,0.92l1.43,-0.81l1.84,-0.36l1.16,0.82l-1.21,2.39l0.44,0.94l-0.49,1.29l0.1,0.79l1.2,0.8l3.01,0.8l0.04,2.71l-1.83,0.84l-0.27,0.31l0.11,0.7l-2.25,1.87l-0.64,1.8l-1.27,1.37l-1.42,2.74l-2.26,2.52l-2.81,1.65Z\",\n            name: \"Burundi\"\n          },\n          BJ: {\n            path: \"M308.12,330.21l0.86,-0.9l0.64,0.14l0.6,-0.3l0.86,-2.1l1.82,-0.46l1.23,-1.76l1.22,-0.03l0.73,0.59l2.95,-0.5l1.71,0.19l3.64,-3.28l0.95,-1.86l0.61,-1.99l-0.56,-2.46l3.11,-0.81l1.69,-0.98l0.63,0.14l3.09,2.89l1.79,2.3l1.82,0.94l1.42,1.5l-1.11,2.16l-0.07,1.39l2.7,3.89l0.46,3.62l0.9,1.82l-0.57,1.92l-0.76,-0.15l-0.67,0.27l-0.97,1.57l0.01,0.66l0.72,1.13l-0.93,2.67l-2.37,1.13l-0.44,0.68l0.04,1.14l-2.2,2.49l0.07,1.73l-1.05,2.47l-2.97,0.39l-0.35,0.34l-0.49,3.14l-0.55,10.76l0.42,3.23l0.74,1.58l-0.4,0.87l0.07,3.84l-0.41,1.09l0.59,3.12l-0.76,3.68l-10.19,1.27l-0.39,-1.8l-1.68,-2.19l-0.17,-0.62l0.25,-0.77l-0.62,-2.49l0.9,-0.43l-0.29,-24.23l-0.51,-1.3l-2.01,-2.49l-0.45,-2.39l-0.22,-5.16l-6.61,-4.58l0.26,-3.59l1.26,-3.12Z\",\n            name: \"Benin\"\n          },\n          ZA: {\n            path: \"M740.97,1053.87l-0.3,0.16l-2.08,-0.34l0.77,-0.88l0.95,0.15l0.83,0.6l-0.17,0.3ZM513.38,877.36l-0.7,-2.43l0.21,-1.52l1.33,-0.97l-0.39,-2.31l-2.04,-3.95l-1.28,-0.93l-0.91,-1.89l-0.98,-0.79l-0.44,-1.41l-0.87,-1.03l-0.28,-1.52l0.86,-1.1l1.02,0.73l1.17,-0.42l1.58,-1.41l0.87,-1.92l-0.14,-5.2l-1.18,-4.99l-6.3,-9.48l-3.86,-7.37l-1.84,-4.4l-2.82,-8.97l-2.49,-5.08l-3.19,-4.84l1.71,-1.23l1.58,-0.5l1.51,-4.23l0.55,-0.6l1.17,-0.4l0.86,0.51l0.67,1.49l1.71,0.81l0.27,0.89l-0.5,1.25l0.06,0.63l1.46,2.85l2.93,0.89l3.23,0.54l1.6,0.79l8.58,-0.04l2.15,0.73l1.89,0.12l1.15,-0.62l0.66,-2.0l1.14,-0.28l0.89,-0.67l0.72,-1.13l1.41,-0.82l2.31,-0.66l1.14,0.02l0.41,-0.4l0.0,-45.51l3.59,2.68l0.95,1.39l4.2,9.51l0.27,2.9l-2.22,3.62l0.17,3.82l0.55,1.14l1.12,0.53l1.45,-0.47l2.34,0.53l4.45,-0.24l2.39,0.25l1.22,-0.68l1.03,-1.55l2.03,-0.52l1.07,-0.76l1.54,-2.45l4.44,-3.21l0.59,-0.91l2.77,-7.63l0.78,-1.0l1.09,-0.64l2.32,-0.54l1.33,0.28l3.19,1.73l2.71,2.14l0.99,0.34l2.51,0.09l1.71,1.37l4.87,0.93l1.67,-0.08l1.44,-0.71l2.47,0.03l2.89,-0.6l1.77,-1.52l3.74,-10.56l5.64,-1.65l0.77,-0.5l1.88,-2.25l2.53,-1.91l1.9,-6.79l1.09,-1.48l2.61,-1.84l2.17,-0.7l0.76,-0.54l0.84,-1.24l1.42,-0.32l0.29,-0.74l1.83,-1.35l0.14,-0.7l3.09,-3.46l1.9,-1.17l3.64,-0.71l1.74,-0.69l1.35,-1.12l0.83,-1.45l1.19,-0.7l6.13,-0.81l2.7,0.45l3.43,1.33l3.27,0.47l5.28,-0.47l1.78,0.2l2.22,1.0l2.84,10.65l0.18,2.57l3.01,5.17l2.14,6.91l-0.02,14.51l-0.75,1.88l0.25,2.05l-0.38,0.1l-5.35,-2.92l-1.09,0.12l-1.7,1.23l-1.4,1.72l-0.68,1.53l-2.73,4.04l-0.07,4.73l0.46,0.47l0.66,0.07l2.05,3.86l2.6,1.72l2.49,0.78l3.2,0.18l2.56,-0.05l0.39,-0.43l-0.14,-1.63l0.52,-4.16l3.87,0.62l5.77,-0.15l-0.36,2.4l-2.25,6.66l-1.43,7.49l-1.84,3.72l-1.01,1.51l-2.97,2.73l-1.48,0.86l-1.49,0.43l-5.23,5.67l-1.94,2.72l-1.74,4.0l-1.71,2.2l-4.74,8.26l-2.14,3.28l-3.68,4.5l-2.75,1.91l-2.96,2.65l-7.38,8.08l-4.73,4.27l-2.78,1.91l-4.1,3.69l-5.83,4.03l-3.32,2.09l-7.45,3.08l-5.07,-0.62l-2.27,0.34l-1.99,1.57l-0.29,2.16l-0.44,0.19l-4.58,-0.97l-2.09,0.16l-1.39,1.25l-0.86,1.33l-2.44,0.07l-4.83,-1.48l-5.72,-0.91l-1.5,-0.07l-3.6,1.24l-3.92,-0.23l-2.3,-0.7l-2.13,-0.0l-3.86,0.86l-5.25,3.93l-2.63,0.0l-2.42,0.46l-4.2,-0.54l-1.32,0.26l-1.31,0.71l-2.94,0.34l-5.89,4.21l-4.29,-0.41l-2.76,-1.89l-0.65,-0.02l0.02,-1.4l-1.07,-1.12l-1.17,-0.04l-0.78,-0.87l-2.78,0.16l-0.24,-3.04l-0.95,-0.65l-2.91,0.11l-0.94,1.2l-0.06,1.39ZM623.55,807.58l-1.33,0.56l-5.08,7.29l-2.34,1.04l-0.45,0.34l-0.22,0.76l0.97,2.51l2.58,4.01l-0.03,1.17l0.48,0.94l1.3,0.73l3.08,3.04l3.47,0.6l1.11,-0.88l0.57,-1.81l2.77,-3.68l3.97,-0.58l2.01,-0.85l2.35,-1.56l0.64,-2.92l1.77,-1.76l1.17,-3.92l-1.08,-2.49l-4.17,-2.79l-3.9,-3.86l-2.17,0.4l-2.81,1.09l-3.25,2.21l-1.44,0.43Z\",\n            name: \"South Africa\"\n          },\n          BW: {\n            path: \"M592.94,670.5l-0.23,1.26l0.71,1.59l1.23,1.28l2.04,3.62l2.35,2.48l0.65,1.85l1.45,1.67l0.11,1.69l2.56,5.57l6.11,4.47l5.85,2.54l0.78,1.38l0.27,2.94l0.41,0.38l4.41,0.23l0.15,2.87l-0.36,3.84l2.09,2.49l2.0,3.59l0.63,0.38l5.67,0.95l5.59,1.71l-0.22,1.52l0.42,1.17l0.85,0.66l1.53,0.2l0.68,0.71l-1.78,0.15l-1.53,0.86l-0.91,1.53l-1.14,0.97l-1.61,0.64l-3.77,0.75l-2.01,1.24l-2.24,2.32l-1.09,1.4l-0.12,0.65l-1.8,1.31l-0.2,0.62l-1.22,0.19l-1.62,1.81l-2.2,0.71l-2.77,1.97l-1.27,1.76l-1.75,6.53l-2.49,1.88l-2.45,2.61l-3.1,0.72l-2.77,1.1l-3.86,10.72l-1.49,1.23l-2.54,0.49l-2.51,-0.03l-1.61,0.75l-1.29,0.04l-4.76,-0.92l-1.79,-1.39l-3.3,-0.35l-2.6,-2.07l-3.36,-1.81l-1.52,-0.33l-1.57,0.28l-1.61,0.5l-1.77,1.76l-3.29,8.45l-4.38,3.15l-1.55,2.46l-0.82,0.61l-1.99,0.51l-0.68,0.47l-1.05,1.61l-7.08,0.09l-2.33,-0.53l-1.57,0.47l-0.8,-1.03l-0.17,-3.51l2.21,-3.57l-0.28,-3.35l-4.29,-9.69l-1.09,-1.56l-4.12,-3.05l-0.04,-33.77l11.25,0.0l0.39,-0.32l0.05,-44.66l11.82,-1.44l14.08,-2.4l0.71,0.26l1.82,2.37l1.36,2.58l0.7,0.36l1.27,-0.46l2.42,-2.43l3.94,-2.42l1.22,-0.5l2.22,0.81l3.02,-2.24l1.27,-0.49l3.45,-0.39Z\",\n            name: \"Botswana\"\n          },\n          DZ: {\n            path: \"M221.33,99.35l5.55,-0.16l6.56,-1.62l1.94,-1.36l1.39,-1.43l2.48,-3.82l2.1,-1.06l5.33,-1.88l3.96,-2.76l3.8,-0.7l0.66,-0.8l-0.08,-1.13l-2.32,-1.51l0.5,-2.08l-0.68,-3.22l0.65,-0.61l3.77,-0.18l5.04,-1.7l0.6,-0.79l0.62,-2.04l0.54,-0.29l4.79,-0.71l13.74,0.53l0.74,-0.27l0.25,-0.37l-0.41,-2.14l0.19,-0.64l1.95,-1.62l0.11,-0.49l-0.64,-1.23l-3.91,-2.98l-0.64,-1.1l-0.52,-2.63l-1.44,-3.04l0.54,-3.16l-0.97,-2.93l0.25,-2.74l-0.17,-2.45l-0.95,-2.48l0.64,-1.41l-1.32,-1.83l0.6,-1.91l-4.07,-3.16l-0.72,-1.01l3.05,0.07l2.93,-1.21l4.11,-2.52l2.84,-2.79l7.62,-3.71l2.73,0.57l1.86,-0.27l1.23,-1.02l1.17,-2.1l1.79,-1.26l7.68,-3.75l3.27,-0.99l12.68,-1.21l2.9,0.13l4.55,-2.47l6.35,-0.14l3.11,-1.36l11.33,-0.0l2.63,1.13l2.44,1.81l1.39,0.39l1.59,-0.39l3.49,-1.65l4.02,-0.89l2.16,-1.0l1.01,-1.47l1.48,-0.43l1.07,1.05l4.12,1.13l3.87,-0.66l0.27,-0.48l-0.26,-1.08l2.04,0.34l1.97,0.77l2.11,1.58l1.54,0.39l2.7,-0.72l4.92,-0.34l0.15,0.75l-1.6,0.85l-1.01,1.82l-1.55,1.12l-0.44,0.7l0.24,0.66l1.01,0.49l0.39,0.87l-1.18,7.58l0.84,2.07l-0.03,3.22l0.88,2.63l-0.87,1.43l-0.46,1.49l-0.37,3.25l-1.33,2.08l-3.26,1.97l-1.16,2.14l-2.75,2.31l-0.25,3.53l2.8,7.65l0.48,0.56l4.0,2.24l1.11,1.61l1.56,5.14l8.2,5.98l5.48,23.47l-2.2,1.33l-0.13,0.55l3.85,6.11l1.91,5.8l0.42,2.6l-0.31,5.2l0.5,6.57l0.66,3.21l-1.96,5.8l0.58,3.71l0.49,1.63l0.65,0.87l-0.12,2.54l-0.23,0.81l-4.32,2.79l-0.68,1.25l-0.17,1.41l0.36,1.12l6.44,9.15l0.31,3.47l1.07,3.25l1.71,2.65l1.86,1.42l0.67,0.05l2.78,-0.85l9.44,2.89l5.07,9.39l-52.31,32.38l-19.32,17.03l-0.94,0.5l-28.22,5.41l-2.21,-1.53l1.57,-2.44l0.16,-0.76l-0.64,-1.89l0.02,-2.73l-1.0,-1.05l-3.24,-1.37l-5.26,-1.26l-1.41,-1.71l-0.82,-0.54l-3.55,-0.36l-1.93,-0.67l-0.68,-0.49l-0.88,-2.15l-3.87,-2.03l-1.27,-1.07l0.08,-1.93l-0.49,-1.74l-66.42,-45.76l-11.74,-7.74l-36.95,-23.29l0.16,-17.66l11.35,-8.01l2.34,-0.55l3.78,-2.8l5.93,0.6l0.75,-0.22l0.97,-1.1l0.25,-1.88Z\",\n            name: \"Algeria\"\n          },\n          ET: {\n            path: \"M725.94,291.31l1.59,-0.58l1.43,-0.08l2.7,0.48l0.61,-0.32l0.82,-1.39l1.01,-0.41l0.96,0.83l1.77,2.54l1.16,0.25l3.75,-8.2l1.03,1.12l2.48,0.99l1.79,2.1l0.92,0.64l4.56,-0.65l2.86,-1.74l1.54,1.78l0.99,0.1l2.98,-0.77l2.55,0.43l1.76,0.7l2.77,-0.18l0.84,0.26l3.51,2.43l2.92,1.0l1.85,1.82l2.18,2.98l2.82,2.82l4.68,3.74l2.17,3.56l2.21,1.42l2.63,3.35l-4.31,6.33l-2.45,2.83l-0.34,3.34l0.4,5.17l0.27,0.35l2.11,0.47l7.0,-1.64l0.99,0.03l1.51,0.81l1.06,0.14l-1.56,1.9l-1.21,1.96l-0.07,0.61l1.49,2.73l0.69,2.0l2.69,3.32l1.34,0.64l1.39,3.09l2.16,2.79l1.75,0.62l4.76,4.15l34.61,11.66l10.92,0.04l-17.54,17.0l-17.34,18.6l-10.93,-0.52l-4.87,1.14l-5.48,2.53l-1.37,1.04l-1.78,2.71l-7.25,1.39l-2.4,0.75l-1.75,1.86l-6.41,0.41l-1.94,-0.21l-3.04,-2.61l-1.65,-1.03l-10.87,4.97l-2.27,3.29l-1.66,1.29l-6.08,-0.75l-4.27,-0.94l-5.97,-0.55l-13.9,-8.97l-10.28,-0.64l-2.84,-3.78l-0.07,-1.51l0.51,-2.54l-0.17,-1.57l-0.77,-0.92l-3.24,-0.88l-1.76,0.59l-0.34,-0.26l-0.05,-1.06l-2.16,-2.09l-1.1,-2.08l-0.32,-2.25l-3.0,-7.36l-1.7,-1.38l-1.03,-1.48l-2.35,-1.2l-2.43,-2.53l-0.51,-1.66l-1.49,-1.78l-2.88,-1.96l-5.15,-1.06l-2.36,-1.3l3.05,-5.92l7.75,-0.06l1.97,-1.84l-0.12,-11.17l0.91,-3.93l1.79,-4.02l-0.39,-4.04l1.71,-2.87l1.37,-0.92l2.44,1.52l0.66,-0.22l1.4,-1.3l0.53,-3.71l-0.08,-1.4l1.71,-6.24l1.65,-1.69l4.82,-7.84l1.58,-0.64l3.63,-0.69l0.37,-1.06l0.29,-3.43l0.59,-2.06l2.1,-4.28l0.66,-2.58l-0.02,-1.8l0.85,-2.9Z\",\n            name: \"Ethiopia\"\n          },\n          RW: {\n            path: \"M636.22,488.26l1.26,-0.91l1.11,-0.31l3.12,-3.45l0.23,-0.83l-1.49,-3.68l1.28,-1.64l2.53,-1.49l2.72,-0.58l0.72,1.41l1.45,-0.17l1.44,-1.01l2.6,-3.03l0.8,-0.44l0.3,0.02l0.44,1.46l1.5,1.94l1.0,0.44l0.5,0.61l0.54,1.12l0.07,4.67l0.54,0.99l0.12,1.02l-0.7,2.22l-2.66,0.4l-1.82,-1.01l-2.16,0.44l-1.14,0.76l-1.49,-0.87l-0.74,-0.03l-0.38,0.37l-0.64,4.17l-1.74,0.8l-3.47,0.17l-0.99,-1.54l-2.37,-0.94l-0.91,0.27l-0.5,1.03l-0.74,-0.57l-0.32,-1.82Z\",\n            name: \"Rwanda\"\n          },\n          TZ: {\n            path: \"M644.97,516.58l0.34,-4.61l0.73,-0.07l2.75,-1.8l2.34,-2.61l1.44,-2.77l1.32,-1.45l0.54,-1.65l2.32,-1.91l0.01,-0.89l1.73,-0.74l0.51,-1.14l-0.4,-2.83l-3.35,-0.98l-0.71,-0.33l-0.07,-0.35l0.54,-1.4l-0.47,-0.77l1.15,-2.31l2.85,-0.57l0.51,-0.36l0.71,-2.54l-0.14,-1.28l-0.54,-0.98l-0.11,-4.79l-1.25,-2.03l-0.99,-0.42l-1.36,-1.75l-0.34,-0.99l2.03,-0.25l1.49,-0.64l11.95,0.24l-0.4,3.55l-0.73,1.55l-1.17,5.25l0.13,4.05l1.26,2.01l-0.54,1.03l0.18,0.62l0.62,0.55l-0.27,0.69l0.26,1.29l0.42,0.3l0.53,-0.25l0.27,-0.85l0.41,-0.17l0.39,0.57l0.66,0.23l0.44,-0.51l-0.24,-2.1l1.79,-0.16l0.18,-0.44l-0.51,-1.29l1.57,-1.06l0.72,1.22l1.06,0.65l0.89,0.12l0.26,0.53l0.53,0.05l0.89,-0.65l0.47,0.59l1.22,0.21l-0.07,1.31l0.5,1.15l-0.97,0.97l-0.19,1.62l0.62,0.4l1.52,-1.4l0.71,-0.13l0.28,-0.57l-0.87,-2.06l0.09,-1.95l0.42,-0.49l1.11,-0.09l1.72,0.93l2.65,0.47l0.49,-0.38l0.02,-0.58l4.25,-3.12l-0.1,-1.24l-0.74,-0.36l-2.13,0.64l-3.59,-0.58l1.78,-0.61l1.16,-0.01l0.39,-0.48l-0.77,-1.09l-1.56,-0.14l0.58,-0.45l1.09,0.08l1.33,-0.78l0.22,-0.91l0.88,-0.93l-0.29,-0.75l0.22,-0.55l2.55,0.33l0.33,-0.73l-1.08,-0.91l0.08,-0.38l1.28,-0.24l0.04,-0.69l-0.44,-0.51l1.47,-1.96l41.71,23.3l0.4,2.07l-0.91,2.38l0.09,0.83l1.23,0.54l1.04,1.59l16.48,11.86l-2.76,9.33l-0.79,1.29l-1.08,2.96l-0.19,2.37l0.91,3.37l1.26,1.46l1.69,1.19l1.16,1.46l0.67,1.48l2.25,0.91l0.72,1.43l-0.25,0.93l-0.99,0.98l-0.94,1.58l-0.81,2.28l-0.02,3.18l0.68,0.29l0.28,-0.26l0.72,0.49l0.13,2.05l-1.16,2.69l-0.42,2.58l0.86,3.27l1.26,1.67l-0.33,1.1l2.14,2.83l-0.14,2.6l1.73,5.01l0.08,0.71l-0.6,0.9l0.27,0.62l1.51,0.24l1.23,1.45l1.38,0.17l3.45,2.23l0.64,0.9l-5.28,4.01l-1.96,1.06l-2.98,0.79l-2.85,1.71l-1.64,0.49l-2.22,0.02l-2.26,0.73l-3.44,2.1l-1.86,-1.09l-1.74,-0.43l-3.31,0.24l-0.55,0.43l-0.66,1.93l-1.1,1.05l-2.05,1.07l-1.85,0.39l-1.7,-0.27l-2.93,-1.43l-1.38,0.08l-2.36,1.34l-1.68,0.35l-2.4,-0.11l-1.08,-0.34l-0.27,-0.73l-1.09,-0.86l-2.25,-1.07l-1.76,0.1l-0.92,0.92l-1.46,0.75l-6.7,-0.3l-0.8,-2.01l-0.72,-0.67l-0.78,-0.14l-1.78,-2.85l0.71,-3.19l-0.06,-1.07l-0.9,-2.23l-0.18,-3.36l-0.59,-2.65l-2.47,-3.64l-2.72,-2.29l-1.18,-0.56l-0.46,0.09l-0.62,0.96l0.06,0.99l-2.57,-0.86l-3.12,0.15l-1.19,-1.08l-2.29,-0.28l-1.74,-1.13l-0.85,0.04l-4.84,-2.19l-0.8,-0.73l-2.44,-0.36l-1.17,-0.63l-1.97,-0.2l-0.31,-1.29l-1.28,-0.52l-1.64,0.09l-1.18,-1.05l-0.39,-1.22l-1.0,-0.7l-1.39,-0.63l-1.67,0.03l-0.42,-1.69l-2.07,-2.49l-0.06,-1.31l-2.75,-5.02l-1.4,-1.85l-0.05,-1.9l-0.96,-2.74l0.48,-0.66l0.06,-1.01l-0.46,-1.02l-0.91,-0.88l-1.81,-2.8l-1.67,-1.67l-1.13,-0.35l-1.39,0.42l-2.51,-2.66l0.27,-2.19l1.84,-0.96l0.58,-1.21l-1.05,-2.93l-1.22,-1.91l0.69,-3.57l-0.3,-1.39l-0.66,-0.88l-1.43,-0.88ZM762.78,552.69l-0.45,-0.03l2.18,-1.95l-0.46,1.08l-0.77,0.24l-0.51,0.66ZM764.47,517.47l-0.18,3.41l-0.94,1.84l-0.66,-0.51l0.6,-2.83l-0.24,-1.79l1.42,-0.13ZM760.15,532.01l0.83,2.31l-0.43,0.34l-0.52,-0.95l-0.74,-0.16l-0.92,-0.93l-0.6,-0.04l-0.52,-0.88l0.25,-1.03l-0.15,-1.61l1.05,-1.58l0.23,1.82l0.76,1.93l0.77,0.77ZM683.58,482.55l0.38,0.28l1.24,-0.06l0.79,1.43l-3.05,-1.0l-0.14,-1.03l0.6,-0.17l0.18,0.55ZM670.5,485.68l0.64,0.7l1.71,-0.3l-0.03,0.36l-1.27,0.27l-0.41,0.62l-0.7,-0.98l0.06,-0.68Z\",\n            name: \"Tanzania\"\n          },\n          GQ: {\n            path: \"M410.07,446.64l-1.07,-0.77l-1.18,-0.22l1.11,-3.0l1.66,-1.63l0.99,-2.55l1.02,-1.6l-0.11,-3.49l1.8,0.85l15.42,0.0l0.07,12.9l-14.92,-0.05l-1.36,0.5l-1.02,-0.39l-0.73,-0.94l-1.1,0.01l-0.59,0.36ZM399.74,415.59l1.81,-0.01l0.26,0.34l-0.04,0.66l-1.74,2.58l-0.37,1.17l-0.56,0.76l-0.36,0.05l-1.91,-0.51l-0.27,-0.45l0.22,-1.02l1.41,-0.56l0.73,-2.22l0.81,-0.78Z\",\n            name: \"Eq. Guinea\"\n          },\n          NA: {\n            path: \"M466.74,733.07l0.38,0.14l0.53,-0.3l0.29,-1.49l0.06,-1.38l-0.78,-3.22l-1.69,-3.26l-4.06,-5.17l-1.58,-3.62l-4.54,-6.79l-3.29,-8.89l-1.52,-2.0l-6.83,-13.38l-1.6,-2.24l-3.3,-3.31l-1.06,-2.44l-2.01,-3.19l-0.48,-2.93l0.08,-5.67l1.56,-0.23l1.36,-0.7l0.99,-0.04l1.23,0.54l3.93,0.03l6.56,-2.95l4.09,0.79l1.02,1.22l1.56,1.11l2.97,1.93l0.99,0.26l4.73,-0.25l46.65,0.14l0.82,0.42l2.79,3.2l2.87,1.25l5.01,0.28l3.11,0.53l6.52,-0.06l2.21,0.27l2.71,1.31l1.59,0.3l4.32,-0.77l1.91,0.08l1.68,0.45l33.47,-6.28l7.59,0.74l1.71,1.01l1.22,1.2l-3.15,0.36l-1.47,0.55l-2.98,2.19l-1.88,-0.83l-1.58,0.57l-2.92,1.63l-3.54,3.27l-0.86,0.33l-1.39,-2.56l-1.91,-2.5l-1.28,-0.49l-14.2,2.41l-9.11,1.31l-3.01,0.14l-0.38,0.4l0.04,44.55l-11.33,0.0l-0.4,0.4l0.04,80.24l-3.33,0.69l-1.64,0.94l-0.77,1.18l-0.76,0.57l-1.24,0.35l-0.49,0.57l0.02,1.07l-0.29,0.46l-0.78,0.38l-1.43,-0.12l-2.25,-0.75l-2.8,-0.18l-3.43,0.39l-2.32,-0.18l-1.49,-0.76l-6.0,-1.39l-1.09,-2.32l0.46,-1.7l-0.33,-1.21l-0.66,-0.69l-1.17,-0.31l-0.68,-1.49l-1.21,-0.76l-1.78,0.45l-0.85,0.85l-1.42,4.13l-1.43,0.38l-1.94,1.43l-6.19,-5.65l-1.96,-2.31l-5.01,-8.64l-1.8,-6.11l-0.09,-1.33l0.45,-1.04l-0.28,-1.16l-0.62,-1.24l-1.39,-1.25l-0.41,-4.36l-1.0,-2.93l0.21,-2.32l-0.53,-3.62l0.2,-2.77l-0.81,-3.06l-1.66,-3.05l-1.46,-4.23l-0.32,-11.33l-0.81,-3.84l0.15,-0.39Z\",\n            name: \"Namibia\"\n          },\n          NE: {\n            path: \"M321.81,313.66l1.53,-0.4l0.4,-0.89l-0.22,-1.1l-1.45,-2.12l-1.95,-0.1l-1.94,1.11l-2.45,-0.24l-5.39,-4.29l-1.15,-0.38l-0.09,-3.16l1.82,0.33l0.68,-0.44l-0.04,-0.61l-2.08,-1.29l-0.5,-1.0l-1.0,-0.75l-3.25,-1.11l-2.12,-3.07l-0.8,-1.8l0.24,-1.49l-2.48,-2.91l0.68,-5.15l5.45,0.19l2.78,-0.35l4.15,-3.46l19.81,-0.82l0.66,-1.03l5.16,0.84l0.46,-0.35l0.17,-1.37l2.04,-1.75l1.66,-0.81l1.31,-3.09l0.79,-2.94l1.26,-2.04l0.73,-2.79l0.23,-4.44l0.38,-0.57l-0.08,-25.67l17.51,-3.48l1.14,-0.59l19.35,-17.05l52.45,-32.47l17.54,4.13l1.29,0.7l7.35,6.23l0.48,-0.02l8.29,-4.41l2.16,12.67l0.17,5.07l1.36,1.45l3.48,5.3l-0.67,1.12l0.55,1.73l4.36,4.66l-2.64,5.31l-3.05,36.2l-12.92,13.89l-6.58,9.41l-1.95,4.04l-2.24,2.94l1.66,7.95l-2.93,0.41l-1.59,1.19l-3.77,1.49l-2.64,1.53l-1.7,1.58l-0.55,1.13l-3.62,0.02l-1.52,-1.2l-3.53,-1.28l-3.33,-0.67l-5.41,-0.22l-5.67,0.49l-3.48,0.73l-1.75,0.81l-1.44,0.91l-3.55,3.74l-4.66,-0.12l-5.18,-1.01l-3.4,-1.78l-4.22,-2.75l-3.26,-0.65l-0.74,0.08l-4.95,2.7l-2.18,0.27l-1.39,1.02l-1.14,-0.09l-1.38,-1.06l-2.54,-3.62l-3.47,-3.04l-1.54,-0.13l-8.22,-2.48l-1.61,0.45l-1.39,0.93l-4.84,-0.04l-3.14,0.7l-1.76,0.72l-2.05,1.71l-1.11,0.52l-0.9,5.04l-0.54,1.37l-1.02,1.82l-3.62,3.17l-0.08,6.6l-0.33,1.1l0.59,1.46l-0.27,0.23l-1.57,-1.62l-1.7,-0.84l-1.78,-2.28l-3.39,-3.09l-1.09,-0.17l-1.79,1.01l-3.36,0.92l-0.28,0.74l0.48,2.67l-3.22,-4.6Z\",\n            name: \"Niger\"\n          },\n          NG: {\n            path: \"M338.89,383.6l2.54,-1.3l-0.03,-0.73l-0.68,-0.18l-3.28,0.84l-1.28,1.51l-6.76,0.28l0.76,-3.44l-0.58,-3.21l0.4,-1.07l-0.07,-3.83l0.41,-1.05l-0.77,-1.74l-0.38,-3.03l0.54,-10.63l0.44,-2.81l3.16,-0.57l0.81,-1.34l0.44,-1.57l-0.11,-1.56l2.13,-2.36l0.08,-1.47l2.54,-1.34l0.66,-1.31l0.54,-1.9l-0.79,-1.5l0.27,-0.67l0.61,-0.69l0.99,0.13l0.54,-0.54l0.61,-2.19l-0.92,-2.01l-0.46,-3.61l-2.67,-3.8l0.03,-1.02l0.7,-1.48l1.32,-1.61l-0.59,-1.61l0.33,-1.04l0.07,-6.43l3.4,-2.82l1.15,-2.01l0.62,-1.58l0.68,-4.61l1.0,-0.46l2.05,-1.71l4.52,-1.29l4.94,0.02l1.55,-1.0l1.31,-0.37l8.03,2.47l1.3,0.04l3.27,2.88l2.53,3.62l1.77,1.29l1.51,0.1l1.52,-1.06l2.17,-0.26l5.34,-2.74l2.96,0.57l4.18,2.72l3.58,1.86l5.33,1.04l4.91,0.13l3.94,-3.96l1.29,-0.81l1.58,-0.74l3.34,-0.7l5.62,-0.49l5.27,0.21l3.23,0.65l3.39,1.23l1.67,1.25l2.36,0.2l1.78,-0.24l0.83,-1.36l1.6,-1.49l2.51,-1.44l3.83,-1.51l1.47,-1.12l2.92,-0.36l5.2,7.23l1.55,8.19l1.14,0.62l1.71,0.16l1.06,0.48l1.05,1.56l-0.27,3.59l-0.42,1.35l0.04,2.5l-4.04,2.55l-2.67,0.72l-1.12,0.93l-2.27,3.19l-1.98,3.29l-1.38,5.02l-1.73,1.72l-0.81,5.49l-1.97,0.77l-1.19,0.9l-0.66,1.55l-0.81,4.89l-0.8,1.5l-1.58,1.31l-2.31,0.53l-1.99,3.69l-0.93,4.05l-1.56,2.65l-0.11,1.52l-2.86,3.7l0.97,1.91l-3.18,2.63l-0.57,2.7l-2.25,1.88l-1.77,0.5l-0.54,-0.53l-0.86,-2.8l-3.25,-3.02l-1.62,-0.94l-0.8,0.12l-0.77,1.58l-0.93,0.43l-2.2,-0.14l-0.59,-1.08l-0.57,-0.11l-4.23,2.76l-1.51,2.76l-3.3,2.46l-3.76,3.74l-1.53,2.82l-1.56,6.81l-2.8,5.0l-0.32,0.25l-0.57,-0.15l-0.36,-0.64l-0.74,-0.3l-0.96,-1.07l-0.78,0.16l-0.11,0.44l1.05,2.82l-0.27,0.76l-7.24,0.38l-0.69,-0.32l-0.35,-0.95l-0.61,-0.18l-0.74,1.1l-1.77,0.08l-1.48,-1.46l-0.92,-0.48l-0.55,0.49l0.99,1.21l-0.08,0.83l-1.43,1.19l-0.76,0.06l-0.45,-0.41l-0.92,-3.27l-0.6,-0.23l-0.39,0.5l0.29,2.91l0.54,0.89l-1.76,0.21l-0.6,-1.48l-0.67,0.21l-0.25,1.31l-2.68,0.38l0.1,-1.13l-0.65,-0.28l-0.8,0.82l-0.08,0.87l-1.03,-0.1l-3.13,-1.87l-2.38,-2.16l-1.09,-2.2l-1.1,-2.87l0.83,-0.4l-0.21,-0.65l-0.94,-0.26l-0.02,-1.24l1.51,-0.54l0.61,-1.2l-0.54,-0.51l-1.74,0.77l-1.75,-1.15l2.03,-0.1l0.74,-0.44l-0.08,-0.72l-1.21,-0.16l-0.03,-0.57l-0.61,-0.36l-0.67,0.8l-0.89,0.33l-0.37,-0.24l-0.23,-1.38l-2.79,-3.17l-5.14,-3.88l-3.8,-0.8l-6.74,0.03ZM382.56,407.1l-0.87,0.28l-0.02,-0.0l0.45,-0.68l0.44,0.41Z\",\n            name: \"Nigeria\"\n          },\n          TN: {\n            path: \"M393.95,11.16l1.69,-1.28l0.94,-1.75l1.74,-0.94l0.03,-1.47l2.63,-0.77l3.65,-2.61l6.28,-1.93l1.22,0.27l-0.47,1.25l0.54,1.03l0.6,0.12l0.78,-0.63l-0.06,-0.91l1.95,0.05l0.97,0.47l-0.08,2.06l1.65,2.34l-0.39,0.92l0.2,0.52l1.4,0.67l1.63,-0.83l0.68,-1.19l2.26,-0.71l2.09,-1.67l0.72,-0.11l0.65,2.05l-1.66,1.69l-1.96,3.31l-1.73,0.93l-1.45,1.35l-0.7,2.23l0.38,2.14l1.07,2.04l1.15,1.17l1.21,0.45l2.36,1.69l0.47,3.82l0.81,1.23l-4.84,7.19l-1.78,1.72l-4.9,3.52l-1.05,2.18l0.14,1.24l1.29,2.72l1.8,1.72l2.07,0.97l2.54,-0.29l0.17,1.91l0.41,0.33l2.13,-0.26l0.76,-1.06l1.0,0.56l0.72,2.39l1.13,0.83l-0.39,0.32l0.07,0.66l3.32,0.78l-0.51,3.44l-0.06,3.37l0.96,2.13l-0.26,0.57l-7.85,4.28l-0.71,0.81l-1.87,1.17l-1.54,2.48l-1.86,0.38l-0.61,0.42l-1.38,1.86l-0.56,1.34l1.5,5.57l0.14,1.99l-0.42,0.94l-3.67,4.98l-3.88,1.77l-5.51,-23.48l-8.3,-6.14l-0.33,-1.91l-1.09,-3.01l-1.2,-1.77l-4.43,-2.74l-2.68,-7.3l0.14,-3.04l2.61,-2.15l1.12,-2.09l3.28,-2.0l0.93,-1.22l0.67,-1.32l0.75,-4.52l0.94,-1.54l-0.85,-2.92l0.01,-3.35l-0.83,-1.99l1.18,-7.61l-0.6,-1.31l-1.0,-0.53ZM429.08,34.41l0.05,-0.04l-0.0,0.02l-0.05,0.02ZM425.59,47.89l-0.94,0.42l-1.23,-0.47l0.15,-1.38l1.64,-0.05l1.05,0.9l-0.66,0.58Z\",\n            name: \"Tunisia\"\n          },\n          LR: {\n            path: \"M182.44,359.46l0.23,0.58l0.47,0.24l0.48,-0.27l1.56,1.32l0.86,5.09l0.9,2.38l-0.16,1.38l-0.9,1.59l0.14,0.72l2.35,0.46l1.98,1.95l1.88,-0.62l0.71,0.07l2.06,-2.86l0.41,-1.94l0.86,-0.18l0.23,0.6l1.41,1.2l1.6,5.06l-0.4,3.01l-3.07,3.32l-0.02,0.55l0.88,0.56l1.08,0.13l1.92,1.64l1.09,0.35l2.5,0.04l0.9,0.5l1.14,3.08l0.99,0.75l2.94,0.87l0.57,3.05l-0.33,0.87l-0.01,1.69l-0.59,0.94l-0.16,1.24l-0.89,0.8l-0.26,3.02l0.23,5.05l-7.51,-2.68l-10.18,-5.43l-2.8,-2.16l-10.57,-9.84l-1.72,-1.1l-2.19,-0.56l-2.02,-1.05l-0.86,-1.9l-5.16,-2.62l-2.18,-2.21l2.51,-3.59l2.12,-1.94l2.46,-1.67l2.6,-2.53l1.07,-3.83l2.4,-1.31l0.98,-3.42l1.53,-0.28l0.28,0.68l0.51,0.25l3.12,-1.1Z\",\n            name: \"Liberia\"\n          },\n          LS: {\n            path: \"M634.16,822.85l-4.19,0.68l-2.99,3.91l-0.2,1.11l-0.69,1.14l-3.16,-0.43l-2.91,-2.91l-1.25,-0.68l-0.33,-0.65l-0.02,-1.31l-2.6,-4.03l-0.85,-2.36l2.71,-1.31l5.14,-7.34l2.48,-0.8l3.26,-2.21l4.38,-1.45l3.67,3.7l4.02,2.67l0.94,2.02l-1.08,3.55l-1.82,1.85l-0.49,2.65l-2.12,1.4l-1.88,0.8Z\",\n            name: \"Lesotho\"\n          },\n          ZW: {\n            path: \"M619.52,667.32l1.52,-1.13l1.42,-2.83l1.6,-0.75l1.18,-1.13l0.85,0.25l0.79,-0.39l0.36,-0.77l-0.19,-0.61l0.53,-0.97l2.1,-0.57l1.33,0.92l0.84,-1.35l1.5,-0.62l0.21,0.77l0.48,0.37l0.76,0.08l0.76,-0.44l0.55,-1.03l0.84,-0.17l0.52,-0.76l-0.02,-0.65l-0.48,-0.38l-1.81,-0.41l0.65,-1.04l0.29,-3.44l0.54,-1.6l4.29,-2.48l2.29,-0.94l2.77,-0.61l7.38,-0.02l0.15,3.65l0.52,0.52l9.44,0.4l2.95,1.85l2.3,0.42l2.88,2.51l3.74,0.33l4.47,1.65l1.34,1.1l2.08,0.36l-0.79,1.76l0.12,1.98l0.97,2.52l-0.17,9.97l0.44,3.27l-1.23,4.36l-1.91,1.23l-0.31,1.56l0.43,1.1l1.33,0.98l-0.83,3.48l0.65,2.13l2.02,3.74l-0.14,1.15l-3.67,6.34l-1.62,1.14l-0.59,0.8l-0.2,3.53l-1.38,2.2l0.74,2.07l-11.51,12.13l-1.41,1.08l-2.38,-1.05l-1.92,-0.23l-5.39,0.47l-3.06,-0.45l-3.34,-1.3l-2.89,-0.49l-3.45,0.57l-1.32,-1.27l-1.7,-0.28l-0.55,-0.43l-0.24,-0.74l0.24,-1.52l-0.36,-0.6l-5.85,-1.81l-5.67,-0.96l-0.62,-0.64l-1.54,-3.01l-1.98,-2.29l0.4,-3.6l-0.05,-2.82l-0.31,-0.6l-0.94,-0.41l-3.68,-0.07l-0.29,-2.75l-1.0,-1.73l-5.96,-2.62l-5.89,-4.28l-2.44,-5.32l-0.17,-1.82l-1.52,-1.78l-0.65,-1.86l-2.36,-2.5l-2.0,-3.57l-1.22,-1.26l-0.6,-1.32l0.24,-0.97l2.0,0.54l2.22,-0.23l1.01,0.35l1.57,1.18l1.76,0.19l1.59,-0.67l2.12,0.2l2.81,1.11l2.65,0.23l3.66,-1.15l2.42,-3.38l0.75,-0.83l1.22,-0.47l-0.01,-0.38Z\",\n            name: \"Zimbabwe\"\n          },\n          TG: {\n            path: \"M297.58,329.02l5.02,1.16l0.41,0.5l4.27,-0.43l-1.21,2.91l-0.23,4.07l6.74,4.89l0.05,4.61l0.5,2.61l0.52,1.0l1.61,1.69l0.34,0.89l0.29,23.77l-0.72,0.04l-0.35,0.56l0.57,1.3l0.2,3.15l1.71,2.23l0.29,1.1l-1.57,0.41l-0.26,0.49l-4.23,1.18l-0.32,-0.43l-1.07,-0.3l-1.32,-1.77l-0.76,-0.09l-1.87,-1.33l-0.36,-1.41l-2.02,-3.08l0.05,-1.2l0.71,-0.89l0.49,-3.74l-1.49,-1.17l-0.09,-1.04l1.24,-2.27l-0.25,-4.87l0.14,-0.58l0.99,-1.08l0.07,-0.86l-0.87,-1.65l-1.64,-1.23l-1.12,-1.56l1.31,-1.36l-0.27,-3.1l0.74,-2.97l-0.15,-0.72l-1.1,-1.08l-1.07,-0.07l-0.96,0.6l0.16,-0.87l0.84,-0.48l-0.21,-0.65l-0.32,-0.08l0.41,-0.48l0.67,-7.15l-5.49,-4.69l0.85,-2.38l0.12,-2.09Z\",\n            name: \"Togo\"\n          },\n          TD: {\n            path: \"M578.03,273.18l-3.93,-0.49l-1.78,0.39l-4.06,0.13l-1.4,1.01l-0.94,1.17l0.33,2.92l-0.38,1.56l-2.0,2.01l-0.95,1.7l-0.15,1.58l-2.18,0.91l-1.13,1.08l0.69,3.53l1.01,1.3l-4.1,2.79l-0.9,1.48l0.01,1.14l1.31,3.02l0.08,1.52l-0.7,1.15l-2.02,1.29l-1.81,3.11l-0.18,1.11l0.84,1.32l1.56,0.36l2.71,-0.44l1.16,0.49l0.58,1.09l-0.24,1.06l0.95,4.57l0.28,0.53l0.98,0.47l-0.28,3.72l0.43,1.24l2.34,2.15l0.9,0.19l0.67,0.54l0.13,1.52l-0.79,2.84l-4.16,-0.83l-3.05,1.22l-0.89,0.77l-1.27,0.05l-1.09,1.08l-2.3,1.14l-0.9,1.11l0.23,2.36l-0.43,0.77l-0.48,0.5l-1.29,0.43l-1.57,2.45l-1.53,0.31l-2.98,3.09l-0.36,0.99l-2.37,2.61l-4.93,3.21l-3.03,-0.07l-1.54,0.71l-3.23,0.62l-6.19,0.07l-1.27,0.3l-1.1,0.68l-0.91,0.7l-0.08,0.78l2.5,2.18l-2.17,2.71l-3.17,2.77l-0.67,1.34l-10.77,0.76l-4.72,2.01l-1.56,1.33l-2.55,0.76l-1.02,0.93l-2.07,-2.05l-0.46,-1.29l-0.49,-0.32l-1.81,1.18l-0.37,1.04l-3.88,1.25l-0.93,0.78l-1.16,0.33l-3.54,-0.51l0.55,-1.29l-0.04,-1.55l-1.31,-0.92l-2.2,-5.47l-1.62,-2.83l-3.08,-2.96l-1.52,-0.81l-4.63,-3.94l-3.79,-4.5l-0.24,-0.91l1.76,-2.31l1.06,-0.81l6.79,0.46l3.55,-0.49l2.16,0.34l2.59,-0.07l1.48,-0.59l0.07,-0.7l-1.41,-0.93l-2.93,-3.11l-1.64,-3.35l-0.73,-2.36l-0.44,-3.05l0.29,-2.9l0.77,-2.02l-0.48,-1.41l0.03,-2.37l-2.37,-5.15l-0.43,-2.84l-1.01,-1.83l-1.71,-1.01l-0.8,-0.94l-0.32,-1.79l-0.79,-0.75l-2.69,-0.74l-2.02,-0.03l-5.2,-7.24l-1.79,-7.81l2.17,-2.87l1.95,-4.05l6.54,-9.36l13.06,-14.17l3.05,-36.28l2.66,-5.37l-0.48,-1.05l-3.96,-4.05l-0.45,-1.41l0.67,-1.28l-3.68,-5.61l-1.25,-1.27l-0.11,-4.85l-2.21,-12.95l11.33,-5.34l93.4,48.28l-0.08,45.21Z\",\n            name: \"Chad\"\n          },\n          ER: {\n            path: \"M725.98,290.45l-1.08,-9.87l1.07,-1.39l1.84,-5.7l1.57,-3.22l1.19,-3.67l-0.27,-4.02l1.01,-2.0l0.29,-2.92l1.67,0.22l3.06,-0.38l1.52,-3.09l2.72,-1.6l2.69,-0.91l1.01,0.09l1.86,-0.73l1.52,-1.7l0.59,-1.3l1.73,-1.8l3.31,6.53l1.43,4.09l1.26,4.26l0.93,6.42l0.91,3.33l1.48,1.71l0.96,2.98l1.01,0.37l0.48,0.66l1.03,2.81l0.81,1.16l0.69,-0.07l0.4,-0.92l-0.29,-1.59l0.51,-1.27l1.63,1.29l0.51,2.14l1.63,1.88l4.01,0.97l3.0,2.29l4.31,1.43l5.66,7.61l6.8,4.67l1.12,2.14l0.61,2.17l0.41,0.29l1.27,-0.09l2.29,2.23l0.94,1.99l2.03,0.67l0.51,-0.26l0.16,-0.49l0.44,0.4l0.27,0.93l-2.78,1.01l-1.16,2.36l-0.56,0.38l-2.39,-1.59l-0.67,-0.04l-0.58,0.41l-2.59,-3.3l-2.15,-1.36l-2.21,-3.6l-4.73,-3.78l-2.78,-2.78l-3.55,-4.5l-3.59,-1.45l-3.5,-2.43l-1.06,-0.36l-2.94,0.16l-1.53,-0.66l-2.68,-0.47l-3.79,0.7l-0.72,-1.17l-0.72,-0.56l-0.84,-0.08l-2.63,1.77l-4.17,0.63l-2.39,-2.59l-2.53,-1.03l-1.42,-1.39l-0.6,0.17l-3.59,8.22l-2.01,-2.62l-1.44,-1.07l-0.85,0.09l-0.82,0.56l-1.09,1.51l-2.45,-0.51l-1.56,0.09l-1.44,0.51ZM766.22,272.78l0.48,-0.41l0.03,-0.47l0.53,0.36l0.91,2.23l-1.05,-0.03l0.45,-0.33l-0.04,-0.49l-0.64,-0.68l-0.67,-0.19ZM769.17,274.55l0.38,-0.41l1.15,0.55l-0.68,0.02l-0.84,-0.16ZM767.02,269.46l0.02,0.06l-0.07,-0.03l0.04,-0.04Z\",\n            name: \"Eritrea\"\n          },\n          LY: {\n            path: \"M432.51,55.96l1.38,0.62l1.77,0.32l5.52,3.09l5.6,0.76l6.2,-1.47l2.92,1.16l3.54,0.43l3.69,1.05l4.24,2.61l7.66,1.54l0.93,0.91l1.01,1.84l0.07,2.47l1.57,4.11l2.63,3.18l4.95,2.13l7.8,0.67l6.6,1.71l5.58,1.96l1.45,1.0l2.76,0.94l5.64,4.66l3.13,1.61l2.32,0.35l2.19,-0.32l5.0,-2.61l3.6,-4.1l1.2,-2.18l0.49,-1.56l-0.1,-1.66l-2.12,-4.73l-0.39,-3.28l0.53,-2.25l1.66,-2.73l2.87,-2.72l2.89,-1.92l5.07,-2.5l4.24,-0.32l2.53,-1.81l2.26,0.38l4.02,-0.12l10.29,3.8l0.39,1.92l-0.1,1.87l2.3,1.61l5.95,0.71l3.97,1.95l4.11,0.17l2.4,-0.25l2.18,0.39l1.51,1.16l1.29,2.64l-3.38,4.27l0.29,3.57l1.12,3.66l-0.13,1.16l-0.95,2.74l-2.09,3.53l3.25,13.05l-0.01,114.09l-11.32,-0.01l-0.4,0.4l0.0,5.43l-93.2,-48.18l-12.16,5.56l-8.69,4.61l-7.05,-6.08l-1.45,-0.8l-17.67,-4.18l-4.98,-9.44l-0.57,-0.48l-9.64,-2.95l-3.37,0.82l-1.45,-1.16l-1.58,-2.44l-1.03,-3.13l-0.39,-3.67l-6.44,-9.16l-0.26,-0.86l0.7,-2.02l4.25,-2.71l0.44,-1.21l0.15,-2.82l-0.71,-1.06l-0.46,-1.54l-0.55,-3.46l1.96,-5.89l-0.67,-3.24l-0.5,-6.52l0.31,-5.16l-0.45,-2.79l-1.96,-5.95l-3.69,-5.86l6.61,-3.36l3.84,-5.21l0.47,-1.05l0.04,-1.2l-1.64,-6.67l1.74,-2.63l2.37,-0.68l0.85,-0.94l0.76,-1.6l1.76,-1.09l0.71,-0.81l8.06,-4.48l0.38,-1.64l-0.94,-1.63l0.06,-3.19l0.47,-3.16Z\",\n            name: \"Libya\"\n          },\n          GW: {\n            path: \"M102.75,314.04l2.01,-0.15l3.14,-1.06l3.53,0.23l3.21,-0.63l4.46,-2.25l16.69,0.07l0.02,0.75l0.64,1.26l-0.54,1.98l-1.27,0.14l-1.39,0.92l0.14,0.78l2.35,1.93l0.04,2.71l-2.28,0.75l-3.76,0.09l-2.18,1.22l-2.78,0.61l-1.26,1.37l-2.71,5.05l-0.18,-0.26l0.4,-1.37l-0.4,-0.51l-0.79,0.17l-0.73,0.93l0.04,-0.85l-0.36,-0.42l-1.1,0.02l-0.63,-0.55l-0.0,-1.0l0.43,-0.41l0.03,-0.63l-1.26,-0.26l0.29,-0.52l1.89,-0.81l2.09,-0.29l0.24,-0.64l-0.81,-0.9l-1.27,-0.3l-1.19,0.21l-0.88,0.6l-0.81,-1.0l0.31,-0.99l0.41,-0.23l2.3,0.01l1.58,-0.65l0.36,-1.03l-0.76,-0.31l-1.01,0.5l-2.93,-0.17l-1.03,0.37l-1.56,1.14l-1.82,0.6l-0.9,-0.17l0.34,-1.16l-0.84,-0.93l-2.27,0.43l-1.37,-0.62l-0.48,-0.67l0.08,-0.8l0.87,-1.17l-0.35,-0.52l-0.95,-0.05l-1.3,0.41l-1.74,-0.97ZM112.9,326.69l0.12,-0.11l0.02,0.0l-0.05,0.06l-0.09,0.04ZM110.3,324.02l-0.59,-0.08l0.44,-0.86l0.04,0.01l0.1,0.93ZM108.31,319.69l0.84,-0.06l-0.27,0.64l-0.57,-0.57ZM107.34,328.61l0.47,-0.15l0.65,-0.58l-0.03,0.58l-1.09,0.15Z\",\n            name: \"Guinea-Bissau\"\n          },\n          ZM: {\n            path: \"M578.83,587.79l0.57,0.09l0.9,1.63l1.94,0.49l0.41,0.52l0.31,1.3l-0.6,1.66l0.66,0.65l1.04,0.36l0.81,-0.09l1.84,-1.04l6.98,-1.64l-0.32,1.99l0.92,2.81l1.87,1.51l1.5,0.02l4.75,1.72l6.71,0.98l2.85,-0.1l1.64,-0.9l1.15,-3.33l0.93,-0.3l0.75,2.3l2.11,1.86l1.24,2.89l0.6,0.54l1.03,0.56l2.46,0.22l6.31,2.67l1.54,3.66l1.6,0.52l0.56,0.64l2.18,3.35l0.35,1.25l0.84,0.74l2.45,0.45l4.15,-1.77l0.53,0.36l0.42,1.55l1.15,0.51l0.87,-0.41l0.27,-0.68l-0.0,-14.77l-0.48,-0.39l-3.47,0.9l-0.38,0.66l0.12,1.47l-0.48,0.23l-4.08,-0.94l-2.45,-2.65l-4.23,-3.58l-1.39,-3.69l2.15,-7.93l1.13,-1.72l0.08,-1.41l-0.44,-1.86l0.26,-6.68l-0.31,-1.88l-2.38,-5.09l3.16,-2.4l2.27,-2.77l0.64,-1.18l0.2,-1.3l-0.31,-1.03l18.7,-2.93l-1.02,0.9l-0.41,1.25l0.48,1.04l0.86,0.1l-0.31,0.61l0.36,0.26l1.56,-0.81l1.29,0.58l2.05,2.1l1.03,0.63l1.28,-0.7l0.67,-0.01l0.32,-1.43l1.31,-0.02l1.89,1.09l0.32,1.13l1.42,1.26l1.88,0.0l0.84,0.3l0.08,0.89l0.53,0.6l2.13,0.23l1.15,0.62l2.33,0.33l0.66,0.66l4.88,2.21l0.68,1.21l0.2,1.17l1.25,0.47l0.59,-0.42l0.56,0.16l0.61,1.47l1.12,1.15l-0.33,2.25l2.45,2.21l0.31,1.85l1.23,1.86l-2.11,2.29l-1.44,0.39l-1.06,1.03l1.27,3.42l-1.16,2.57l-0.53,0.46l-0.03,1.61l0.71,0.92l0.15,0.78l-0.03,2.25l-0.54,2.88l1.16,2.49l0.58,0.33l1.12,0.01l-1.01,1.15l-4.53,1.8l-0.94,2.18l0.61,1.37l-0.34,3.58l-1.32,2.73l-2.19,1.84l0.25,0.57l1.27,0.75l-0.34,0.47l0.11,0.55l1.17,0.66l1.59,2.48l-17.08,5.92l-10.13,2.9l-5.19,2.06l-0.33,0.44l0.01,0.94l0.35,1.48l1.14,1.98l0.46,2.96l-7.37,0.02l-2.93,0.64l-2.44,1.0l-4.42,2.56l-0.62,0.85l-0.49,4.58l-0.64,0.98l-1.53,-0.37l-2.6,1.01l-1.11,-0.43l-0.51,0.83l-1.06,0.52l-0.31,0.78l-1.33,1.19l-1.56,-0.61l-1.27,0.61l-0.34,0.5l0.37,0.69l-1.24,0.36l-0.34,1.46l-0.84,0.2l-2.09,2.74l-1.07,2.03l0.28,0.56l-2.25,2.1l-1.87,3.23l-2.45,0.87l-2.23,-0.22l-2.92,-1.13l-2.27,-0.21l-1.78,0.69l-1.34,-0.19l-1.34,-1.07l-1.31,-0.48l-2.27,0.23l-2.12,-0.58l-3.08,-2.74l-3.24,-0.64l-5.5,-0.44l-10.3,1.89l-4.83,-4.16l-5.83,-5.69l-3.54,-2.57l-1.25,-3.88l-0.7,-3.64l-0.01,-34.94l21.47,0.0l1.47,-0.15l0.34,-0.33l0.02,-0.63l-0.95,-1.78l0.29,-1.74l0.97,-2.63l-0.38,-3.68l0.15,-5.67l0.87,-2.84l-0.85,-5.77ZM685.33,624.73l0.57,-0.41l0.12,0.17l-0.69,0.24Z\",\n            name: \"Zambia\"\n          },\n          CI: {\n            path: \"M196.93,382.8l2.89,-3.19l0.43,-2.32l0.05,-1.25l-1.95,-5.59l2.65,0.26l1.4,-2.46l-0.07,-1.4l1.32,-2.37l-0.2,-1.26l-2.64,-1.14l0.19,-2.03l1.8,-0.25l2.48,0.33l1.19,1.09l0.5,-0.0l0.54,-0.65l-0.08,-1.98l-0.43,-1.18l-0.92,-1.03l-1.72,-0.69l0.14,-1.82l1.69,-1.03l0.15,-0.57l-1.54,-1.29l0.22,-2.44l-0.47,-0.41l-1.42,0.2l-0.94,-0.89l-0.2,-5.46l1.75,-1.9l1.13,-0.28l0.94,-0.66l1.71,-2.17l1.57,-0.14l1.2,1.15l0.49,0.96l2.9,0.63l0.7,0.63l0.7,0.09l0.8,-0.68l-0.24,-1.02l0.28,-0.64l3.14,-0.28l0.32,-0.77l-0.12,-2.48l0.84,0.63l1.75,0.34l0.59,-0.68l-0.25,-0.8l1.38,-0.4l0.08,1.59l0.56,1.82l-0.55,1.65l1.67,1.02l1.39,-0.0l2.13,-2.23l3.13,-0.56l1.92,1.43l1.56,-0.01l1.64,0.79l1.18,2.2l0.43,1.55l4.1,2.6l1.18,-0.07l1.4,0.85l1.01,0.06l1.05,-1.24l5.38,-1.98l6.5,0.29l1.39,1.61l1.16,0.7l2.0,3.06l0.9,0.17l0.48,-0.23l-0.11,1.32l0.27,0.37l-0.75,1.69l-0.05,0.95l1.17,1.19l0.56,1.83l1.07,6.74l-1.2,0.72l0.04,1.01l-2.14,1.56l-1.25,2.9l-0.74,2.72l-0.32,2.93l-2.9,4.63l-0.14,2.06l0.52,3.62l2.38,7.52l0.74,1.08l1.69,0.35l0.4,1.76l-0.53,2.87l-1.4,0.37l-2.08,-0.82l0.17,-1.41l-0.35,-0.44l-0.57,-0.07l-0.86,0.46l-1.04,2.14l-5.87,-1.01l-1.43,-0.87l-1.66,-0.2l-5.1,0.35l-0.86,0.6l-0.13,0.46l0.24,0.16l-3.28,0.45l-0.63,-0.08l-0.81,-0.68l-3.17,-0.06l-0.81,0.35l-0.38,0.48l0.21,0.38l-2.29,0.19l-4.15,0.94l-10.94,4.0l-2.52,1.5l-2.05,0.7l-2.23,1.26l-1.09,0.23l-0.31,-5.08l0.26,-2.79l0.84,-0.77l0.14,-1.18l0.66,-1.17l0.01,-1.71l0.32,-0.84l-0.63,-3.6l-0.32,-0.39l-0.7,0.03l-1.32,-0.71l-1.13,-0.16l-0.56,-0.47l-1.27,-3.21l-1.23,-0.65l-2.59,-0.06l-0.89,-0.3l-1.79,-1.61l-1.47,-0.29Z\",\n            name: \"C\\xf4te d'Ivoire\"\n          },\n          EH: {\n            path: \"M98.08,205.07l0.08,-0.53l4.61,-0.68l7.72,-0.24l5.41,0.61l5.74,0.12l1.56,-0.12l1.34,-0.77l1.0,-1.33l0.7,-1.83l-0.17,-1.39l3.6,-3.91l1.16,-1.68l0.59,-5.54l0.82,-4.2l0.93,-3.8l1.48,-3.37l1.25,-1.1l5.4,-2.37l3.07,-5.33l0.75,-0.79l4.19,-2.59l2.47,-2.01l1.44,-3.57l1.65,-6.62l1.03,-2.84l-0.07,29.53l-3.82,1.71l-3.02,0.64l-4.82,3.35l-1.56,2.38l-0.19,1.07l0.84,3.16l0.89,13.84l-46.06,0.2ZM157.4,147.05l2.57,-0.61l1.1,-2.54l1.47,-2.19l2.08,-2.13l0.27,-1.55l-0.77,-1.45l5.06,-1.49l1.86,-0.12l2.33,0.36l3.62,1.65l2.5,-0.62l1.43,0.71l1.21,0.04l1.17,-0.23l3.65,-2.79l4.69,-0.01l2.5,-0.39l0.81,-0.78l-0.51,-2.08l0.27,-1.89l-0.47,-2.03l0.74,0.0l0.01,20.13l-37.6,0.0Z\",\n            name: \"W. Sahara\"\n          },\n          CM: {\n            path: \"M398.03,403.42l2.82,-5.07l1.56,-6.82l0.7,-1.54l4.33,-4.63l3.33,-2.48l1.48,-2.73l3.85,-2.5l0.77,1.06l3.39,0.0l0.65,-0.58l0.66,-1.41l1.37,0.78l3.12,2.89l1.1,3.23l0.74,0.41l1.2,-0.12l1.18,-0.46l1.88,-1.4l0.92,-1.25l0.3,-2.19l3.23,-2.63l0.05,-0.68l-0.95,-1.47l2.76,-3.48l0.19,-1.76l1.53,-2.56l0.92,-4.0l1.86,-3.45l2.06,-0.36l0.87,-0.57l1.58,-1.83l1.16,-5.86l0.56,-1.3l0.91,-0.64l1.78,-0.59l0.53,-0.56l0.81,-5.49l1.72,-1.7l1.41,-5.1l1.89,-3.12l2.21,-3.11l0.96,-0.78l2.6,-0.68l4.35,-2.85l0.28,-1.28l-0.22,-1.64l0.65,-3.05l0.02,-2.08l-1.41,-2.05l-1.21,-0.55l-2.37,-0.41l-1.43,-7.58l1.58,0.01l2.42,0.63l0.45,0.36l0.4,1.94l1.03,1.17l1.52,0.83l0.92,1.66l0.43,2.83l2.31,4.93l-0.04,2.29l0.48,1.26l-0.74,1.97l-0.31,3.08l0.46,3.19l0.77,2.5l1.76,3.56l3.9,3.8l-3.05,0.31l-2.23,-0.34l-3.5,0.49l-6.96,-0.45l-1.52,1.09l-1.89,2.46l0.35,1.76l3.85,4.57l4.71,4.0l1.55,0.84l2.88,2.74l1.56,2.71l2.23,5.53l1.32,1.21l-0.26,1.38l-1.73,2.8l-1.5,1.07l-0.56,0.78l-2.02,4.94l-2.03,2.73l-1.17,2.86l-0.59,0.61l-2.27,1.1l-0.87,0.92l-0.17,1.0l0.88,1.5l0.99,0.19l0.27,0.34l0.0,4.08l-0.63,2.62l0.93,1.38l0.8,6.0l0.8,1.4l2.94,2.34l0.41,0.75l0.84,2.49l-0.87,0.14l-0.29,0.54l0.34,0.86l0.83,1.49l7.59,8.23l1.64,0.47l1.66,2.0l-0.07,1.5l0.47,1.61l0.09,1.92l0.88,2.36l-0.05,0.45l-1.1,1.19l-0.17,1.15l0.77,3.32l-0.42,0.3l-3.71,-2.71l-1.74,-0.43l-2.99,0.05l-2.09,-1.04l-0.92,0.38l-1.87,-0.13l-0.45,-0.73l-1.33,-0.01l-2.52,-1.41l-1.03,0.48l-13.6,-0.08l-0.34,-0.67l-0.79,-0.44l-4.15,0.11l-5.9,-0.58l-9.45,-0.07l-2.47,0.03l-0.39,0.45l-0.17,1.1l-15.4,-0.0l-1.15,-0.48l-0.6,-1.01l0.96,-6.81l0.72,-1.86l-0.37,-2.11l-2.68,-3.39l0.9,-1.2l-0.4,-0.23l-1.12,0.11l-0.72,-1.57l0.47,-0.59l1.05,0.16l0.46,-0.45l-0.17,-0.57l-0.95,-0.85l0.42,-1.2l-0.75,-0.29l-1.01,0.5l-0.86,-0.44l-0.46,0.49l0.16,0.59l-0.55,0.59l-0.95,-0.14l-0.84,-0.7l-2.75,-1.02l-0.24,-1.42l-0.75,-1.51l-0.12,-2.56l-1.84,-0.35l-1.21,-1.05l-0.58,0.45l0.29,1.2l-0.69,0.03l-0.29,-0.55l0.31,-1.81Z\",\n            name: \"Cameroon\"\n          },\n          EG: {\n            path: \"M655.53,78.07l-0.21,0.35l0.36,0.35l1.61,0.17l3.64,-0.77l0.94,-1.8l1.14,0.18l3.97,1.69l1.1,0.01l3.14,-1.05l-1.65,2.54l0.15,0.61l2.72,0.93l0.97,1.48l0.46,0.19l1.43,-0.47l0.88,-1.06l-0.14,-0.7l2.53,2.05l1.11,0.5l5.96,-1.22l1.05,1.0l2.1,-0.59l3.42,-0.0l2.85,-0.68l3.12,-1.55l3.69,10.84l1.5,3.26l2.79,8.89l-1.89,2.68l-1.39,6.51l-1.99,5.07l-0.55,4.32l-1.88,2.86l-1.71,-0.68l-3.26,-2.7l-1.92,-2.6l-2.13,-1.76l-1.9,-2.18l-1.38,-5.22l-0.69,-1.29l-2.37,-2.68l-1.71,-2.94l-0.86,-3.49l-0.98,-2.31l-0.57,-0.19l-1.09,0.62l-0.04,1.2l-0.9,1.26l-0.58,1.8l0.54,1.4l1.92,1.84l0.35,0.72l0.43,1.69l-0.04,2.52l0.38,0.93l1.44,1.76l1.33,2.8l3.63,4.62l2.0,2.0l1.43,0.97l0.51,0.81l0.08,3.75l1.71,3.32l1.28,1.04l0.5,0.94l1.26,6.66l1.12,1.4l3.28,6.61l2.75,4.15l7.37,15.17l3.35,4.03l2.71,1.97l-1.8,0.35l-0.67,2.14l0.22,4.24l0.51,2.18l1.57,4.02l2.67,2.73l3.69,1.38l2.18,2.88l4.79,3.59l0.28,0.58l-62.68,0.01l0.41,-1.64l-0.55,-0.76l-0.75,-0.13l-0.92,0.38l-1.05,2.11l-0.37,0.06l-72.63,-0.01l0.0,-89.62l-3.24,-13.0l2.01,-3.21l1.01,-2.95l0.14,-1.41l-1.12,-3.66l-0.28,-3.32l2.97,-3.67l0.94,1.36l1.84,0.27l6.06,-1.39l15.73,3.12l3.47,2.15l1.06,0.29l2.32,-0.04l1.71,1.26l6.36,0.6l6.65,2.85l2.52,-0.49l1.84,-0.82l5.87,-3.87l1.26,-0.44l2.0,0.08l2.21,-2.6l1.58,-0.15Z\",\n            name: \"Egypt\"\n          },\n          SL: {\n            path: \"M165.73,342.66l1.63,1.75l4.17,5.64l-0.74,2.31l0.41,0.45l1.16,0.27l0.13,2.11l1.18,2.05l-1.46,1.62l-0.99,2.31l0.19,0.48l2.24,0.2l1.92,-1.94l0.63,-0.04l-0.81,2.95l-1.78,0.68l-0.74,0.82l-0.86,3.51l-2.61,2.56l-2.42,1.64l-2.15,1.96l-2.54,3.61l-2.43,-1.92l-2.36,-1.16l-6.28,-2.31l0.53,-1.8l-0.81,-1.26l0.29,-0.85l-0.38,-0.53l-1.19,0.6l-1.19,-0.14l-1.72,-1.16l-1.23,-3.82l-0.97,-0.75l-1.27,-0.14l-1.3,-2.27l2.07,0.42l1.94,-1.79l0.37,-1.04l-0.12,-0.31l-0.63,-0.17l-0.45,0.38l-1.42,-0.11l-0.88,0.52l-0.4,-1.02l0.17,-1.3l1.31,-0.13l0.46,-0.52l-0.29,-0.56l-1.01,-0.18l-1.29,-1.17l1.56,0.14l0.69,-0.3l1.03,-1.02l0.45,-1.28l1.3,-0.4l1.04,-0.94l2.42,-4.06l0.62,-1.73l0.66,-0.33l1.59,-0.34l1.71,0.62l2.58,-0.56l0.39,-0.82l7.08,-0.04l0.57,0.16l0.21,0.45ZM150.0,371.51l-0.53,-0.45l-3.08,-0.87l2.81,-0.26l0.92,0.47l-0.12,1.11Z\",\n            name: \"Sierra Leone\"\n          },\n          CG: {\n            path: \"M433.42,487.21l1.46,0.55l2.4,-0.56l1.54,0.77l4.48,-0.97l0.31,-0.36l0.38,-2.57l-0.54,-1.98l1.55,-0.98l1.97,1.09l2.51,4.59l4.34,1.09l1.37,-0.11l2.01,-1.45l1.27,-1.44l1.17,1.9l-0.19,0.83l0.33,0.82l1.68,0.45l1.3,-0.4l1.29,-1.29l0.14,-0.92l-0.44,-0.81l0.43,-0.47l0.59,-2.07l1.57,-1.38l0.46,-2.09l-0.23,-1.35l0.52,-0.89l0.1,-1.31l-0.52,-5.19l0.74,-4.75l-1.44,-1.48l-1.88,-0.53l-1.61,-1.82l-2.25,-0.59l0.27,-4.43l0.69,-1.73l1.47,-2.0l1.73,-0.23l1.13,-0.89l1.42,-2.45l-0.06,-1.17l-1.53,-2.72l-0.71,-2.27l-0.98,-0.83l-4.06,-0.56l-6.96,2.03l0.37,-1.14l-0.98,-3.22l0.1,-1.55l1.4,-4.04l13.58,0.08l1.08,-0.46l2.22,1.39l1.15,-0.05l0.48,0.79l2.32,0.12l0.75,-0.36l2.1,1.03l2.95,-0.06l1.54,0.39l4.07,2.79l1.13,-0.93l-0.78,-3.49l0.11,-0.86l1.14,-1.24l0.07,-0.69l3.31,-6.52l0.14,-4.02l1.05,-3.37l0.36,-0.37l7.04,-1.03l2.53,-1.01l4.94,1.51l2.66,0.03l0.86,0.63l1.92,-0.97l1.69,-0.38l0.59,1.03l0.63,0.42l0.12,1.75l-1.5,4.35l-3.29,6.01l-1.64,4.71l-0.18,5.65l-1.83,4.96l-0.19,3.14l0.46,3.7l-0.43,3.46l-1.32,3.31l-0.59,2.7l0.31,3.13l-2.32,2.5l-3.03,2.57l-3.56,1.65l-1.18,1.06l-4.04,7.27l-3.8,3.94l-0.37,1.47l0.3,8.77l-0.81,4.99l-3.1,5.33l-3.04,1.07l-1.0,0.74l-0.6,1.05l-2.47,1.56l-5.69,6.29l-0.7,0.35l-2.98,-0.39l-0.49,-2.66l0.94,-1.72l-1.13,-1.89l-0.38,-0.18l-3.82,1.45l-1.14,0.73l-1.66,-0.57l-1.04,0.27l-0.55,2.93l-2.86,1.5l-1.96,-1.42l-0.96,-1.18l-1.17,0.06l-1.93,-2.01l-1.33,-0.17l-1.86,1.19l-2.92,1.0l-0.99,1.73l-1.36,0.32l-1.79,2.28l-2.02,-2.53l-0.43,-0.88l-0.13,-1.42l-7.43,-7.49l1.06,-2.28l2.93,-1.84l1.95,1.87l1.98,0.18l0.8,-0.71l-0.06,-0.81l-0.48,-0.73l1.17,-2.53l-0.16,-0.38l-2.49,-1.6l-0.19,-0.36l0.72,-1.02l0.09,-0.67l-1.56,-1.76l-0.94,-0.23l0.66,-2.47l-0.31,-2.57Z\",\n            name: \"Congo\"\n          },\n          CF: {\n            path: \"M474.14,412.46l0.6,-0.07l0.43,-0.47l-0.9,-3.12l-0.56,-0.97l-2.96,-2.34l-0.6,-1.05l-0.8,-6.02l-0.9,-1.17l0.63,-2.48l0.0,-4.35l-0.53,-0.82l-0.99,-0.17l-0.64,-1.1l0.78,-1.08l2.75,-1.48l1.46,-3.29l2.04,-2.73l2.02,-4.95l2.0,-1.76l1.06,-1.74l4.03,0.55l1.47,-0.39l0.95,-0.79l4.0,-1.29l0.53,-1.2l1.01,-0.76l1.43,2.22l1.74,1.32l0.61,-0.19l0.77,-0.82l2.62,-0.8l1.56,-1.33l4.57,-1.94l3.36,-0.03l7.48,-0.76l0.5,-0.38l0.46,-1.18l1.28,-0.85l1.86,-1.9l2.4,-3.0l-0.52,-1.18l-2.03,-1.58l1.67,-1.11l1.03,-0.22l6.16,-0.06l3.37,-0.65l1.4,-0.67l3.29,0.0l5.12,-3.35l2.49,-2.75l0.34,-0.96l2.79,-2.9l0.85,0.05l0.78,-0.46l1.51,-2.4l1.15,-0.35l0.74,-0.71l0.62,-1.18l-0.05,-2.6l2.63,-1.43l0.97,-1.01l1.33,-0.08l0.94,-0.8l2.84,-1.14l4.0,0.86l1.16,1.87l4.08,4.31l2.7,4.2l1.15,2.37l-0.28,5.52l-0.27,0.81l-1.54,1.91l-0.03,0.99l0.99,1.2l-0.05,1.65l0.7,0.7l1.13,0.39l5.92,0.9l-0.29,2.04l0.44,1.26l0.97,0.92l2.11,0.71l3.26,0.56l1.24,0.58l1.8,2.02l2.21,1.8l0.45,0.8l-0.75,1.98l0.2,0.63l1.04,1.08l1.28,1.18l5.95,3.16l1.64,1.23l1.56,2.04l2.1,1.6l-0.55,1.87l0.19,0.91l1.15,1.54l1.11,2.41l1.06,0.74l1.62,0.27l4.76,3.13l0.89,1.67l0.33,3.21l0.86,1.25l-2.75,-0.64l-2.83,1.59l-15.36,-2.89l-1.64,0.82l-1.65,2.58l-1.96,0.61l-1.09,-0.16l-2.4,0.6l-3.76,-0.92l-1.52,0.18l-10.6,3.89l-1.07,-0.0l-2.37,-0.86l-3.03,0.16l-2.04,1.7l-2.44,4.54l-0.73,0.65l-8.48,-1.69l-1.78,0.41l-2.16,-0.76l-1.52,0.07l-1.03,-0.3l-2.05,-0.97l-4.52,-0.54l-1.89,-2.58l-1.96,-1.69l-2.69,-1.4l-2.21,-1.63l-1.69,-0.5l-2.31,-0.05l-2.19,0.72l-2.99,2.11l-2.86,4.41l-1.45,1.56l-1.4,0.66l-0.3,1.3l0.6,1.61l0.15,1.81l-0.43,3.19l0.1,1.59l-0.6,-0.98l-0.64,-0.29l-1.9,0.52l-1.53,0.88l-0.63,-0.56l-2.75,-0.06l-4.63,-1.55l-3.2,1.05l-6.39,0.73l-1.02,0.47l-0.57,0.66l-1.08,3.45l-0.14,4.01l-2.93,5.77l-0.5,-1.57l-0.59,-5.29l-1.63,-2.02l-1.84,-0.65l-3.64,-3.79l-3.83,-4.31l-0.87,-1.68Z\",\n            name: \"Central African Rep.\"\n          },\n          AO: {\n            path: \"M441.82,531.2l5.51,-1.02l3.33,-1.64l1.19,-0.09l1.33,0.29l8.0,-0.28l4.95,0.42l22.42,-0.32l1.26,0.37l1.14,0.71l1.79,2.25l0.1,3.42l0.4,1.79l2.1,3.81l0.49,1.37l-0.13,1.2l0.44,1.3l1.98,2.39l4.47,7.24l0.9,0.45l3.78,-0.36l1.27,0.46l2.2,-1.0l4.3,-1.02l4.37,0.77l2.35,0.0l2.39,-0.42l0.33,-0.35l0.36,-3.62l1.27,-2.22l0.05,-2.25l0.46,-1.41l1.39,-1.13l2.4,-0.57l7.93,-0.79l-0.65,2.71l0.29,0.87l0.73,0.59l13.96,0.54l0.34,0.88l-0.09,2.02l-0.63,3.19l0.24,2.91l1.12,2.76l0.11,4.05l-0.88,5.58l-0.2,3.59l0.58,1.73l2.74,3.2l1.23,2.03l0.88,2.52l0.36,5.0l-0.24,0.86l-0.77,0.46l-0.47,0.94l0.61,3.11l0.62,0.86l0.7,0.22l3.01,-1.69l6.04,0.37l4.49,-1.4l4.32,0.52l0.97,-0.4l0.33,-0.83l0.12,0.75l0.66,4.66l-0.87,2.86l-0.15,5.66l0.44,2.8l-1.33,5.29l0.97,1.94l-22.89,0.1l-0.4,0.4l0.01,35.38l0.73,3.82l1.44,4.23l3.58,2.59l3.09,3.14l7.11,6.3l-22.18,4.19l-1.47,-0.46l-2.05,-0.09l-4.31,0.77l-2.64,-0.77l-1.47,-0.82l-2.4,-0.29l-6.44,0.06l-3.08,-0.52l-4.9,-0.26l-2.61,-1.13l-2.74,-3.16l-1.29,-0.6l-46.71,-0.14l-4.64,0.25l-0.75,-0.2l-2.84,-1.86l-1.5,-1.07l-1.11,-1.29l-0.96,-0.42l-3.59,-0.49l-6.59,2.95l-3.74,-0.03l-1.09,-0.51l-1.36,0.01l-1.42,0.71l-1.3,0.19l0.84,-6.11l-0.26,-8.66l-0.49,-1.66l1.62,-1.29l0.85,-1.13l0.57,-1.45l0.68,-3.23l2.42,-7.3l1.16,-7.18l1.47,-3.45l0.53,-3.68l4.0,-4.81l1.03,-3.01l4.94,-2.94l2.29,-2.96l1.06,-2.0l1.17,-3.7l0.01,-3.95l0.74,-5.12l-0.16,-1.58l-1.12,-2.13l-0.27,-1.57l-2.1,-2.5l-0.54,-1.94l-1.88,-3.01l-0.51,-1.98l-0.91,-1.49l-0.63,-3.68l-1.83,-4.02l0.0,-0.28l0.54,0.15l3.67,-3.94l0.21,-4.04l-3.37,-6.95l-2.66,-6.41l-0.54,-3.41l-3.52,-4.26l-2.62,-5.27ZM440.92,526.36l-0.23,0.06l-0.46,-1.04l0.57,-1.98l-0.34,-1.69l-1.72,-3.63l1.89,-2.34l1.27,-0.25l0.93,-1.67l2.84,-0.99l0.98,-0.75l1.21,-0.42l2.01,1.99l-2.43,0.95l-2.71,2.81l-1.66,1.07l-0.15,0.59l0.81,0.81l-0.21,6.12l-2.58,0.35Z\",\n            name: \"Angola\"\n          },\n          CD: {\n            path: \"M441.08,527.14l2.62,-0.32l0.5,-0.41l0.31,-6.68l-0.67,-0.81l1.41,-0.9l2.69,-2.79l2.59,-0.98l0.6,-0.53l2.73,2.56l0.9,0.14l3.0,-1.47l0.38,-0.55l0.36,-2.58l2.25,0.5l4.69,-2.15l0.85,1.26l-0.93,1.82l0.66,3.06l0.65,0.43l3.26,0.2l0.95,-0.51l5.66,-6.27l1.52,-0.76l2.34,-2.46l3.17,-1.13l1.55,-2.11l1.91,-3.71l0.83,-5.09l-0.29,-8.85l0.24,-1.04l3.8,-3.95l3.94,-7.14l2.54,-1.79l2.1,-0.82l3.1,-2.63l2.5,-2.68l-0.23,-3.43l0.55,-2.55l1.36,-3.43l0.44,-3.56l-0.46,-3.81l0.19,-2.97l1.83,-4.94l0.17,-5.58l1.6,-4.62l3.26,-5.95l1.57,-4.52l-0.28,-4.52l0.43,-3.28l-0.16,-1.91l-0.59,-1.64l0.22,-0.72l1.21,-0.47l1.55,-1.65l2.78,-4.32l2.88,-2.03l1.96,-0.63l3.32,0.4l2.3,1.68l2.61,1.35l1.88,1.62l2.12,2.74l4.65,0.58l2.01,0.95l1.22,0.35l1.43,-0.1l2.16,0.77l1.91,-0.4l2.5,0.31l6.01,1.39l1.36,-0.97l2.45,-4.55l1.62,-1.41l2.72,-0.14l2.23,0.83l1.38,0.04l10.7,-3.9l1.25,-0.17l3.78,0.92l2.61,-0.6l1.12,0.16l2.34,-0.79l1.75,-2.67l1.24,-0.56l15.09,2.92l0.87,-0.23l1.71,-1.24l0.86,-0.12l3.17,0.98l0.98,1.57l2.08,1.49l1.47,2.37l2.25,1.33l1.15,1.25l1.59,0.98l2.81,0.3l3.57,-2.11l2.31,0.2l2.36,1.11l1.09,0.02l2.08,-1.32l1.01,-1.32l0.71,-0.21l1.26,0.5l1.11,1.15l1.11,1.86l3.78,4.03l3.69,1.75l0.49,1.88l0.43,0.58l2.05,0.06l0.84,1.41l0.67,0.41l-1.38,3.1l-0.32,1.5l1.12,1.86l-0.93,2.39l-0.49,2.71l1.4,1.0l1.6,0.02l1.31,1.27l1.03,0.18l0.8,1.0l-4.36,3.23l-4.04,3.9l-1.68,2.79l0.19,0.89l-0.92,0.36l-0.95,0.97l-0.71,1.55l-2.86,1.9l-0.14,3.81l-1.76,3.74l-0.71,0.84l-0.39,2.38l-2.23,0.93l-2.0,4.12l0.1,0.9l0.81,0.94l1.86,-0.41l0.81,-0.64l-0.85,4.62l0.2,4.56l-2.58,1.52l-1.19,1.5l-1.68,-0.6l-0.86,0.61l-0.61,2.37l-0.9,1.96l0.03,0.96l-0.5,1.34l0.48,1.07l-0.59,0.83l-0.15,1.1l0.89,2.99l1.03,0.51l0.14,0.94l2.33,2.84l-0.15,2.87l-0.81,1.14l0.06,2.46l-0.51,1.94l-0.21,3.61l0.14,1.38l-0.47,1.01l0.32,0.67l0.82,0.31l0.51,-0.15l0.23,-0.44l-0.2,1.74l-0.54,0.38l-0.37,0.91l-0.26,5.62l0.68,2.24l2.36,4.2l-0.32,0.51l-0.0,1.49l-1.69,1.55l0.07,1.66l1.42,1.9l1.32,3.51l0.63,0.46l-0.02,1.12l0.72,1.53l2.59,2.91l3.08,1.78l1.45,1.67l0.68,1.96l-0.04,1.33l0.92,3.24l3.01,2.58l0.46,1.23l-19.43,3.1l-0.27,0.52l0.39,1.15l-0.17,1.13l-0.52,0.92l-2.15,2.63l-3.41,2.77l0.05,0.8l1.63,2.75l0.72,1.93l0.29,1.73l-0.26,6.63l0.44,1.9l-0.07,1.24l-1.11,1.64l-2.18,8.02l0.3,1.25l1.24,3.06l4.33,3.69l2.73,2.83l4.21,0.97l0.89,-0.14l0.54,-0.79l-0.05,-1.58l1.86,-0.25l0.8,-0.42l-0.13,14.47l-0.78,-0.2l-0.33,-1.4l-1.09,-0.72l-4.33,1.77l-1.91,-0.31l-0.68,-0.59l-0.27,-1.11l-2.28,-3.49l-0.67,-0.76l-1.44,-0.37l-0.83,-2.38l-0.86,-1.41l-6.59,-2.81l-2.52,-0.23l-0.73,-0.42l-1.62,-3.2l-2.18,-1.96l-0.46,-2.0l-0.6,-0.54l-1.07,0.11l-0.86,0.5l-1.11,3.3l-1.21,0.61l-2.55,0.07l-6.62,-0.96l-4.76,-1.73l-1.22,0.08l-1.73,-1.38l-0.71,-2.37l0.41,-1.85l-0.74,-0.81l-7.38,1.68l-1.8,1.02l-1.28,-0.22l-0.2,-0.22l0.58,-1.46l-0.43,-1.64l-0.73,-0.83l-1.97,-0.54l-0.92,-1.61l-1.3,-0.23l-0.71,0.27l-0.5,1.17l-0.51,0.23l-4.31,-0.52l-4.53,1.4l-6.0,-0.38l-3.1,1.67l-0.45,-0.63l-0.53,-2.57l1.16,-1.19l0.31,-1.1l-0.28,-2.86l0.24,-0.82l-0.33,-1.63l-0.95,-2.72l-1.27,-2.11l-2.71,-3.15l-0.47,-1.36l0.19,-3.45l0.89,-5.67l-0.11,-4.16l-1.12,-2.79l-0.23,-2.79l0.72,-5.25l-0.44,-1.25l-0.46,-0.37l-13.84,-0.49l-0.57,-0.79l0.72,-2.73l-0.47,-0.7l-8.49,0.79l-2.52,0.6l-1.84,1.53l-0.51,1.59l-0.05,2.25l-1.28,2.29l-0.33,3.35l-4.27,0.35l-4.49,-0.77l-4.42,1.04l-2.03,0.97l-1.18,-0.46l-3.83,0.36l-4.74,-7.36l-1.95,-2.34l-0.33,-1.03l0.13,-1.22l-0.54,-1.51l-2.07,-3.71l-0.38,-1.66l0.1,-2.59l-0.25,-1.07l-1.95,-2.48l-1.44,-0.9l-1.48,-0.42l-22.47,0.32l-7.45,-0.44l-5.46,0.3l-3.52,-0.52l-2.56,0.51l-1.35,0.99l-1.81,0.47l-0.95,-0.16l-1.94,-2.08Z\",\n            name: \"Dem. Rep. Congo\"\n          },\n          GA: {\n            path: \"M400.47,467.86l1.76,-0.1l0.68,-0.62l1.11,-0.24l2.58,-3.26l0.57,-3.7l-0.33,-3.99l0.42,1.18l0.79,0.61l1.38,0.19l2.48,1.16l0.62,-0.25l0.14,-0.73l2.0,-0.74l0.26,-0.36l-0.91,-0.67l-2.07,0.27l-2.54,-1.14l-2.4,-2.83l1.62,-0.75l1.0,1.07l0.8,-0.39l0.1,-2.43l-0.51,-2.64l1.44,-0.44l0.67,0.9l1.36,0.46l1.38,-0.51l15.3,0.05l0.4,-0.4l-0.08,-13.67l0.28,-1.19l11.42,0.05l5.92,0.58l4.03,-0.12l0.58,0.78l-0.05,0.66l-1.36,3.55l-0.13,1.73l0.98,3.32l-0.48,0.7l-0.08,0.59l0.31,0.36l1.09,0.21l6.7,-2.07l3.65,0.53l0.52,0.42l0.71,2.25l1.48,2.57l0.06,0.78l-1.25,2.13l-0.89,0.7l-1.58,0.16l-0.5,0.37l-0.52,1.07l-0.91,0.92l-0.8,2.11l-0.18,4.88l0.67,0.58l1.92,0.31l1.46,1.73l1.95,0.58l1.15,1.38l-0.81,4.08l0.52,5.26l-0.09,1.18l-0.53,0.93l0.22,1.4l-0.42,1.89l-1.5,1.25l-0.61,2.11l-0.51,0.67l0.43,1.42l-1.14,1.14l-0.88,0.22l-1.01,-0.24l-0.02,-1.48l-1.06,-1.88l-0.78,-0.48l-0.53,0.16l-1.27,1.54l-1.68,1.28l-1.09,0.1l-4.03,-1.0l-2.35,-4.46l-1.01,-0.78l-1.59,-0.54l-1.71,0.94l-0.58,0.65l0.14,1.47l0.4,0.75l-0.35,2.16l-4.06,0.88l-1.43,-0.77l-2.53,0.56l-1.69,-0.52l-0.5,0.52l0.3,2.78l-0.75,2.72l0.31,0.5l1.08,0.2l1.21,1.31l-0.83,1.39l0.34,0.89l2.49,1.66l-1.15,2.37l0.58,1.2l-0.15,0.27l-1.56,-0.11l-1.67,-1.76l-0.87,-0.13l-3.24,2.06l-1.11,2.25l-0.67,-0.61l-1.03,-1.96l-3.56,-3.08l-0.67,-1.42l-2.79,-3.11l-6.22,-5.17l2.01,0.83l0.83,-0.53l-0.07,-0.64l-2.39,-1.27l-2.18,-0.36l-0.43,-0.4l-1.06,-2.36l-1.88,-2.18l0.78,0.38l0.54,-0.19l0.02,-1.08l-1.87,-1.01l-0.79,-0.07l-0.01,-0.96l-0.87,-1.72l1.17,1.19l1.11,0.03l1.47,-0.44l0.24,-0.57l-0.26,-0.51l-0.71,-0.66l-1.75,0.09l0.66,-1.79l-0.47,-0.54l-1.49,0.64l-1.42,-0.86l-3.38,-6.36Z\",\n            name: \"Gabon\"\n          },\n          GN: {\n            path: \"M141.71,352.29l0.24,-1.06l-1.47,-1.71l-0.56,-1.34l-1.55,-1.46l-1.15,-0.05l0.22,-2.42l-0.48,-0.96l0.11,-0.77l-0.48,-0.45l-0.82,0.62l-0.47,-0.12l-1.47,-0.9l-0.67,-0.8l-0.31,-1.14l-1.73,-0.05l-2.82,-1.33l-2.03,-3.39l0.19,-2.52l-0.67,-0.22l-0.51,0.48l-1.17,-2.5l-1.69,-0.42l-0.61,0.48l-0.49,1.4l-0.2,-0.14l0.07,-0.91l1.13,-1.55l1.92,-3.92l0.92,-1.04l2.68,-0.58l2.16,-1.21l3.61,-0.06l2.68,-0.87l0.27,-0.36l-0.07,-3.33l-2.46,-2.14l0.84,-0.42l1.18,-0.05l0.78,-0.82l0.42,-2.05l-0.67,-1.95l7.04,0.45l-0.17,0.92l0.49,0.79l0.87,0.11l0.82,-0.57l1.42,0.91l3.08,0.91l0.88,-0.02l0.75,0.45l1.44,0.12l2.83,-0.81l2.77,0.12l2.7,-0.46l1.39,0.12l-0.92,2.0l0.08,0.69l2.33,2.0l0.68,0.21l0.85,-0.26l1.8,-1.8l1.12,-0.32l2.17,3.28l0.63,0.37l1.27,-0.57l1.83,-2.36l1.99,-0.78l5.18,1.97l1.51,0.01l0.83,-1.29l3.56,-1.41l0.37,-1.11l-0.67,-1.38l1.56,-0.04l1.84,0.87l0.44,0.57l2.07,4.93l0.15,3.21l1.17,0.55l0.65,1.31l2.95,1.51l-1.34,1.23l-1.7,2.4l0.03,0.83l1.07,0.37l1.51,-0.69l1.26,0.55l0.25,0.81l-0.2,1.83l0.74,3.29l0.55,0.69l2.51,1.32l0.17,0.36l-0.05,1.08l-1.58,1.5l-0.35,0.75l0.19,5.81l0.64,0.99l0.8,0.5l1.36,-0.08l-0.23,2.15l1.47,1.18l-1.59,1.07l-0.26,2.57l2.11,1.1l0.65,0.78l0.4,2.48l-1.27,-1.01l-2.66,-0.33l-2.16,0.26l-0.43,0.55l-0.09,2.74l1.44,0.91l1.14,0.2l0.16,0.6l-1.33,2.39l0.09,1.33l-1.0,1.89l-2.23,-0.32l-0.72,0.4l-0.94,-1.27l-1.3,-0.1l-0.73,0.54l-0.38,1.88l-1.6,2.52l-0.9,-0.0l-1.32,0.53l-1.81,-1.85l-1.08,-0.37l-0.95,0.1l0.87,-1.56l0.17,-1.75l-0.89,-2.34l-0.07,-1.39l-0.7,-1.96l-0.08,-1.77l-1.91,-1.88l-0.85,-0.04l-0.63,-0.76l-3.15,1.15l-0.29,-0.57l-0.83,-0.36l-1.2,0.36l-1.56,-0.05l-2.28,2.08l-1.1,-0.15l0.74,-1.76l1.41,-1.48l0.14,-0.56l-1.23,-2.26l-0.12,-2.22l-0.32,-0.34l-1.24,-0.26l0.71,-1.67l-0.05,-0.82l-6.32,-8.12l-0.91,-0.24l-7.48,0.04l-0.49,0.9l-2.19,0.48l-1.71,-0.62l-1.86,0.41l-1.07,0.67l-0.62,1.76l-2.29,3.88l-0.78,0.75l-1.41,0.43l-0.71,1.58l-0.76,0.74l-1.95,0.03Z\",\n            name: \"Guinea\"\n          },\n          GM: {\n            path: \"M100.95,304.31l-0.62,-2.32l1.36,-1.21l1.03,1.81l2.06,0.55l2.56,-0.15l0.45,-0.42l0.18,-0.82l6.11,-0.87l1.77,0.01l0.51,-0.12l0.24,-0.62l-0.4,-0.34l-1.65,-0.2l-6.6,0.61l-2.59,1.24l-0.77,-0.09l-0.89,-1.06l-0.24,-0.98l11.84,0.03l1.25,-1.76l1.67,-0.67l1.8,-0.26l1.84,0.29l1.93,1.34l2.32,0.66l2.07,1.38l1.09,0.18l2.1,-0.56l1.82,-0.08l1.23,0.65l0.21,0.58l-0.15,0.52l-4.38,1.11l-2.13,-0.37l-6.84,-2.9l-1.81,-0.49l-0.66,0.46l-0.9,1.43l-6.12,0.84l-0.31,0.35l-0.19,1.66l-9.2,0.03l-1.0,0.59Z\",\n            name: \"Gambia\"\n          },\n          XS: {\n            path: \"M870.84,327.12l-0.01,20.86l-11.07,16.91l-11.42,0.0l-34.59,-11.65l-4.62,-4.08l-1.65,-0.54l-0.96,-1.1l-1.04,-1.49l-1.39,-3.12l-1.43,-0.74l-2.61,-3.2l-0.65,-1.9l-1.44,-2.61l6.6,-10.04l1.89,1.5l2.19,3.63l2.7,3.09l5.03,3.72l1.48,0.56l6.71,-0.13l4.61,-2.52l5.45,-2.16l7.45,1.19l1.36,-0.13l4.91,-2.16l3.04,-2.08l1.94,-0.83l3.56,0.74l3.6,-0.32l6.5,-2.15l1.09,-0.02l2.75,0.8Z\",\n            name: \"Somaliland\"\n          },\n          CV: {\n            path: \"M28.84,267.68l1.39,0.08l0.47,0.44l-0.15,1.03l-1.06,0.56l-1.06,-0.44l0.41,-1.67ZM28.19,260.4l0.01,0.82l0.07,0.36l-0.26,-1.07l0.19,-0.11ZM25.22,280.01l-0.28,-0.24l0.06,-0.77l0.23,-0.43l0.34,0.03l0.14,1.18l-0.48,0.22ZM19.01,279.11l1.9,1.57l0.86,1.27l-0.44,0.68l-1.23,-0.07l-0.64,-0.36l-0.81,-1.2l0.35,-1.89ZM11.49,262.35l0.91,0.29l-0.49,0.6l-0.43,-0.74l0.02,-0.15ZM11.76,283.5l-1.0,0.16l-0.47,-0.36l-0.06,-0.74l0.96,-0.54l0.38,0.12l0.2,1.37ZM3.48,259.84l1.06,-0.47l0.31,0.54l-0.53,0.16l-0.84,-0.23ZM0.42,257.15l2.3,-1.09l0.63,0.14l0.4,0.61l-1.9,1.44l-0.97,0.21l-0.46,-1.31Z\",\n            name: \"Cape Verde\"\n          },\n          GH: {\n            path: \"M262.02,399.49l0.83,0.05l1.7,-0.53l0.77,-3.59l-0.62,-2.21l-1.9,-0.53l-0.37,-0.63l-2.62,-8.49l-0.12,-4.16l2.86,-4.55l0.36,-3.07l0.72,-2.66l1.23,-2.82l1.87,-1.22l0.36,-0.65l-0.17,-0.62l0.83,-0.31l0.47,-0.77l-1.1,-6.96l-0.63,-2.01l-0.48,-0.81l-0.61,-0.32l0.84,-2.44l-0.33,-0.54l0.19,-1.39l-0.24,-1.21l-0.85,-2.35l0.34,-0.69l-0.45,-4.6l0.24,-0.72l-0.63,-1.09l0.35,-1.17l-1.07,-1.04l-0.37,-0.87l0.08,-1.47l0.78,-2.87l20.69,-0.14l3.81,0.23l0.51,0.61l0.57,0.13l1.74,-0.99l0.75,-0.93l1.08,-0.1l0.55,-0.75l2.23,0.5l0.7,0.8l-1.13,3.45l0.09,0.86l3.6,3.42l1.74,1.15l-0.58,6.67l-0.65,0.37l0.23,0.93l-0.64,1.71l0.76,0.7l1.38,-0.72l0.53,0.04l0.76,1.06l-0.73,2.89l-0.07,1.67l0.35,1.29l-1.2,0.93l-0.1,0.83l1.32,1.93l1.55,1.14l0.73,1.31l-1.2,2.26l0.24,4.93l-1.23,2.23l0.19,1.57l1.36,0.89l-0.47,3.5l-0.79,1.08l0.04,1.34l2.13,3.32l0.47,1.52l2.08,1.48l0.77,0.13l0.8,1.32l1.46,0.78l-1.48,1.1l-1.15,2.09l-2.15,0.54l-5.86,0.07l-4.5,2.21l-2.58,0.78l-1.69,1.29l-2.11,0.87l-1.51,1.07l-3.1,0.52l-5.16,1.71l-5.81,3.21l-0.82,-0.02l-3.64,-1.93l-7.18,-1.54Z\",\n            name: \"Ghana\"\n          },\n          SZ: {\n            path: \"M658.82,780.66l0.07,-4.13l2.66,-3.92l0.66,-1.48l1.33,-1.64l1.4,-1.03l0.63,-0.09l5.29,2.91l1.03,-0.19l0.99,0.55l-0.24,3.09l0.76,3.04l0.07,3.34l-0.71,-0.14l-0.66,0.4l-0.57,4.53l0.11,1.32l-5.23,-0.14l-2.19,-0.69l-2.35,-1.51l-2.04,-3.9l-1.02,-0.31Z\",\n            name: \"Swaziland\"\n          },\n          MG: {\n            path: \"M853.67,633.45l0.24,0.85l-0.77,2.09l0.28,0.45l0.83,0.15l0.76,-0.4l1.68,-2.95l1.01,-1.09l2.0,0.4l0.46,-0.19l-0.09,-0.49l-1.69,-1.44l-0.39,-1.81l2.54,-4.79l-0.06,-0.45l-1.05,-1.16l-0.03,-1.17l0.86,-1.19l0.4,-0.13l1.7,1.27l1.16,0.04l1.77,-2.17l2.52,-1.33l2.05,-1.89l1.44,-4.12l0.13,-1.24l-0.32,-1.57l-1.15,-2.76l0.76,0.15l0.76,-0.37l3.13,-4.13l0.3,0.0l1.01,1.69l2.02,2.3l1.19,2.47l3.46,5.1l0.34,2.28l1.26,3.72l1.17,5.47l0.72,8.28l0.97,2.6l1.46,2.49l0.46,2.67l-0.88,2.8l-2.08,3.7l-0.91,-0.61l-0.8,-1.07l-1.68,-4.3l-0.67,-0.26l-1.29,0.12l-1.28,1.14l-0.18,0.72l0.73,6.08l1.39,2.24l0.09,2.65l-0.29,1.27l-0.94,1.41l0.32,1.27l-1.9,1.26l-1.76,3.88l-0.14,1.39l0.66,3.86l-0.18,2.69l-1.34,5.26l-5.21,14.49l-5.28,16.74l-1.38,5.51l-2.04,6.04l-3.14,7.68l-1.23,6.53l-2.34,7.91l-0.54,2.98l-2.17,4.27l-1.17,4.31l-1.1,2.72l-1.61,2.3l-3.44,2.03l-3.98,0.28l-2.67,0.72l-6.59,3.76l-1.02,0.39l-3.41,0.09l-0.93,-0.3l-3.61,-2.63l-5.34,-1.29l-1.12,-1.39l-2.45,-1.42l-1.45,-4.36l-2.77,-4.12l-0.28,-6.85l0.2,-1.27l0.68,-1.46l-1.81,-5.63l-2.04,-2.46l-0.44,-1.1l-1.07,-4.95l0.29,-5.37l0.61,-1.75l1.12,-1.81l0.72,-3.43l0.79,-0.65l1.47,-0.5l1.23,-1.05l0.68,-1.34l0.63,-2.51l3.85,-5.95l1.29,-2.91l0.68,-2.79l0.52,-6.07l-2.48,-4.42l-0.06,-3.97l-1.49,-3.0l-0.78,-2.52l-0.31,-5.85l-0.8,-2.68l0.38,-2.1l5.14,-8.25l0.12,-5.12l0.35,-0.57l5.08,-0.53l3.57,-2.63l1.47,0.99l1.63,-0.59l1.18,0.08l0.41,-0.2l0.98,-1.95l3.49,-0.38l1.74,-0.51l1.69,1.96l1.37,0.19l0.49,-0.35l0.03,-0.63l-1.21,-1.29l0.62,-1.73l5.66,-4.31l0.79,0.06l0.36,2.17l0.34,0.46l1.09,-0.27l0.6,-1.2l-0.47,-2.39l2.11,-2.4l0.83,-2.09l0.73,-0.54ZM863.67,615.59l0.19,1.33l-0.78,-0.09l-0.12,-0.76l0.72,-0.48Z\",\n            name: \"Madagascar\"\n          },\n          MA: {\n            path: \"M111.55,174.08l0.87,-0.82l2.29,-1.53l4.61,-5.0l1.83,-0.96l1.58,-2.13l0.64,-2.12l0.15,-4.31l0.54,-2.21l3.21,-6.6l0.6,-2.92l0.57,-0.97l1.17,-0.55l1.63,-1.44l2.55,-0.94l4.55,-3.25l0.97,-1.81l1.0,-3.42l1.79,-3.61l0.93,-2.75l1.51,-1.38l1.09,-1.81l1.65,-0.74l3.81,-0.4l5.66,-1.52l5.19,-2.35l1.53,-0.99l4.03,-4.16l6.97,-4.48l3.42,-4.1l5.39,-7.44l0.96,-2.1l0.51,-3.13l-0.35,-1.39l-1.47,-2.13l-0.93,-0.57l-0.18,-0.67l0.49,-1.68l0.27,-7.37l1.52,-3.6l3.87,-4.95l0.73,-2.09l0.48,-4.21l4.69,-4.44l3.76,-4.32l2.43,-1.56l8.66,-3.5l4.9,-2.5l2.99,-1.94l1.74,-2.22l4.72,-8.51l4.99,-13.29l3.36,-0.55l2.57,-1.29l0.51,0.13l-0.27,0.42l0.05,1.69l1.04,1.81l1.78,2.01l3.24,2.54l2.53,1.02l3.5,0.6l4.2,-1.08l2.23,-0.02l1.08,-0.42l1.19,0.64l2.3,0.22l2.32,-0.37l2.46,-1.79l1.42,3.08l2.75,0.4l4.57,0.08l1.03,1.67l3.86,2.86l-0.6,1.9l1.29,1.6l-0.64,1.51l0.97,2.48l-0.08,5.17l0.95,2.82l-0.52,3.35l1.5,3.22l0.46,2.49l0.75,1.34l4.0,3.09l0.35,0.73l-1.93,1.71l-0.25,1.1l0.41,1.75l-13.96,-0.43l-4.91,0.72l-1.1,0.68l-0.9,2.5l-4.79,1.63l-3.95,0.23l-0.87,0.56l-0.27,0.68l0.67,3.3l-0.5,2.12l0.31,0.69l2.13,1.25l-0.34,0.84l-3.71,0.64l-3.92,2.74l-5.29,1.87l-2.27,1.14l-2.62,3.95l-3.02,2.58l-6.39,1.58l-5.73,0.19l-0.43,0.39l-0.23,1.86l-0.99,0.91l-6.07,-0.61l-4.01,2.89l-2.44,0.61l-6.8,4.71l-4.58,3.31l-0.43,0.7l-0.06,12.74l-1.18,-0.0l-0.4,0.43l0.5,2.41l-0.32,1.33l0.57,2.17l-0.25,0.45l-2.28,0.36l-4.87,0.03l-3.88,2.88l-0.82,0.12l-0.84,0.0l-1.68,-0.76l-2.46,0.63l-3.43,-1.6l-2.64,-0.4l-2.01,0.14l-5.47,1.59l-0.29,0.51l0.87,1.77l-0.18,1.02l-2.02,2.05l-2.06,3.28l-0.38,1.28l-3.45,0.81l-0.57,0.65l-2.99,11.13l-1.34,3.36l-2.26,1.8l-4.28,2.67l-0.88,0.94l-2.85,5.11l-5.33,2.33l-1.55,1.39l-1.55,3.53l-0.95,3.88l-0.83,4.25l-0.57,5.45l-4.71,5.41l0.11,1.58l-0.65,1.71l-0.85,1.11l-0.91,0.53l-1.42,0.11l-5.7,-0.12l-6.83,-0.61l-8.12,0.37l-2.68,0.51l0.76,-5.27l1.56,-3.09l1.18,-1.3l2.11,-0.87l1.83,-3.22l0.66,-2.98l1.13,-1.29l0.45,-1.2l-0.38,-0.93l4.64,-7.95l0.06,-1.38l-0.73,-0.14Z\",\n            name: \"Morocco\"\n          },\n          KE: {\n            path: \"M696.13,456.91l1.2,-1.94l0.9,-2.52l1.23,-0.89l1.69,-2.18l0.87,-2.1l1.3,-1.23l2.39,-1.11l-0.06,-1.76l2.06,-2.98l0.2,-1.72l-0.17,-3.41l-0.94,-4.11l0.23,-0.9l-0.46,-1.29l-0.65,-0.47l-0.86,-2.33l-1.78,-1.27l-0.73,-2.16l-0.9,-0.64l-0.52,-2.66l0.44,-2.85l-0.65,-0.74l-1.55,-0.55l-0.89,-0.7l0.13,-0.45l-0.73,-0.65l-1.64,-3.48l14.24,-14.05l0.92,0.87l1.84,-0.59l3.03,0.82l0.38,0.54l0.09,1.28l-0.5,2.4l0.08,1.75l3.18,4.28l0.95,0.31l9.51,0.42l13.93,8.98l6.14,0.58l7.22,1.42l3.36,0.26l0.68,-0.24l1.44,-1.33l2.14,-3.16l10.47,-4.79l4.37,3.57l2.19,0.25l5.87,-0.41l-5.9,8.46l-4.23,4.19l-0.29,0.61l0.17,43.23l6.42,8.43l0.09,1.09l-1.59,1.87l-1.29,0.85l-1.74,0.4l-1.14,-0.34l-0.49,0.17l-0.43,0.9l-0.24,-0.17l-0.63,0.38l0.36,1.94l-0.21,0.67l-0.83,0.7l-0.2,0.76l-1.77,1.54l-2.85,0.23l-2.23,1.63l-0.61,1.84l0.17,2.25l-0.89,2.57l-1.42,1.19l-1.49,2.6l-0.57,2.6l-1.01,2.38l-2.81,5.67l-1.16,1.5l-1.16,-0.05l-0.72,0.71l-16.23,-11.7l-0.96,-1.51l-1.12,-0.47l0.93,-2.7l-0.34,-2.17l-0.38,-0.57l-41.77,-23.33l0.6,-0.4l0.53,-1.22l-1.1,-2.04l-0.08,-0.78l1.21,-1.79l0.85,-0.2l2.27,0.58l0.47,-0.54l-0.1,-1.15l3.66,-0.65l0.42,-0.81l-1.12,-2.16l-0.47,-0.2l-3.55,1.24l-0.7,0.63l-0.5,1.16l-1.84,-2.03l-0.07,-1.02l-0.85,-0.13l-0.41,-0.45l-0.29,-2.46ZM779.14,483.65l0.05,-0.04l0.01,0.0l-0.07,0.03Z\",\n            name: \"Kenya\"\n          },\n          SS: {\n            path: \"M581.04,357.13l1.37,-1.12l2.93,-1.06l0.24,-1.49l1.15,-2.04l0.29,-2.42l1.3,-1.74l0.04,-2.89l2.49,-3.21l0.28,-2.18l0.39,-0.53l8.3,-1.41l0.43,0.1l0.2,0.45l0.08,1.69l0.41,0.58l2.98,2.46l4.44,5.17l1.42,0.61l1.53,-0.19l3.52,-1.32l9.24,0.18l1.18,2.38l0.97,0.82l9.33,0.03l0.39,-0.49l-0.07,-1.29l1.52,-1.48l2.94,-1.39l2.87,-0.69l1.6,-1.89l0.08,-1.72l4.26,-2.24l5.29,3.38l3.41,3.0l4.95,-0.48l0.96,-0.42l5.07,-5.03l2.36,-3.09l0.89,-2.12l5.78,-5.15l0.05,-0.67l-0.97,-2.24l-0.02,-4.76l-2.62,-3.02l6.91,-0.03l0.4,-0.37l-0.19,-2.16l4.79,0.06l-0.71,2.77l-0.16,2.99l-0.58,1.11l1.15,8.97l-0.49,1.2l0.39,0.52l2.63,0.98l0.99,1.18l5.16,4.28l0.53,1.37l0.07,2.18l-0.79,1.64l-0.28,2.62l0.47,0.85l1.95,0.04l0.29,8.87l-0.26,1.32l-1.23,1.06l-8.0,0.16l-0.65,0.61l-2.58,5.22l-0.17,1.0l1.09,1.04l1.77,0.78l5.15,1.06l2.69,1.85l1.26,1.5l0.61,1.81l2.52,2.63l2.42,1.26l0.95,1.41l1.64,1.33l2.86,7.13l0.33,2.27l1.2,2.25l1.92,1.85l-20.42,20.03l-3.67,-0.22l-2.17,-1.21l-1.83,0.94l-5.96,1.12l-1.69,1.2l-0.49,0.91l-1.94,-0.92l-1.73,-2.29l-0.45,-0.03l-2.79,1.41l-3.63,-1.25l-0.95,-0.02l-2.86,1.86l-0.8,1.15l-0.84,-1.09l-0.88,-0.25l-1.11,0.2l-0.72,-2.26l-3.78,-1.85l-3.73,-3.98l-1.03,-1.76l-1.27,-1.32l-1.6,-0.67l-1.23,0.27l-1.16,1.42l-1.73,1.15l-0.63,0.03l-2.46,-1.13l-2.59,-0.23l-2.61,1.61l-1.59,0.57l-1.98,-0.36l-2.41,-2.09l-1.61,-0.77l-1.98,-2.82l-2.06,-1.47l-2.65,-3.66l-0.32,-3.16l-1.07,-2.03l-4.97,-3.31l-1.65,-0.29l-0.78,-0.51l-1.11,-2.4l-1.04,-1.31l-0.15,-0.54l0.59,-2.01l-0.13,-0.42l-2.24,-1.72l-1.59,-2.06l-1.73,-1.29l-5.96,-3.17l-1.15,-1.07l-1.0,-1.17l0.59,-0.94l0.16,-1.06l-0.6,-1.22l-2.34,-1.95l-1.78,-2.01l-1.6,-0.77l-5.07,-1.13l-0.84,-0.79l-0.27,-0.87l0.45,-1.63l-0.67,-1.05Z\",\n            name: \"S. Sudan\"\n          },\n          ML: {\n            path: \"M158.55,301.7l-0.54,-1.32l-1.75,-2.1l0.09,-0.89l0.69,-0.68l0.3,-1.15l-0.68,-1.35l-0.07,-2.89l-2.36,-2.87l0.46,-2.09l-0.6,-1.27l1.44,0.3l1.94,-1.71l0.9,-1.49l0.52,-3.0l0.75,-2.02l2.76,-2.33l6.42,5.8l0.97,-0.19l2.15,-3.09l3.15,-0.17l5.53,0.77l2.29,-0.34l3.6,-0.68l0.33,-0.35l0.0,-1.39l0.39,-0.65l0.32,1.53l2.03,0.41l43.0,-0.0l0.39,-0.33l1.79,-9.46l-3.16,-3.69l-11.26,-102.64l20.21,-0.01l69.78,48.0l0.27,3.49l1.54,1.35l3.72,1.92l0.77,2.02l0.93,0.73l2.19,0.78l3.38,0.31l2.16,2.22l5.44,1.34l2.99,1.24l0.68,0.58l-0.02,2.61l0.63,2.09l-0.65,0.69l-1.08,2.33l0.35,0.81l1.56,1.07l1.96,0.38l9.28,-1.79l0.08,25.36l-0.37,0.53l-0.24,4.56l-0.69,2.6l-1.27,2.05l-1.6,5.2l-0.56,0.78l-1.29,0.44l-2.22,1.9l-0.27,1.36l-4.9,-0.79l-0.82,0.33l-0.19,0.72l-19.62,0.81l-4.18,3.48l-2.63,0.33l-5.06,-0.3l-0.79,0.21l-0.32,0.48l-4.9,-1.63l-2.05,0.51l-0.55,-0.52l-0.96,-0.22l-1.71,0.1l-1.25,0.34l-3.34,2.7l-5.19,2.31l-2.34,1.4l-3.22,0.61l-1.21,3.23l-0.36,0.17l-3.89,-1.22l-1.82,0.58l-2.32,1.88l-1.18,1.54l-0.67,2.08l-0.11,1.41l-2.82,-0.31l-0.86,0.46l-0.57,4.31l-2.32,1.06l-3.6,-2.2l-1.4,-0.4l-1.39,0.31l-3.31,3.19l0.13,1.16l0.98,2.02l-0.01,0.7l-2.75,1.34l-0.18,0.54l0.65,1.04l-0.07,2.61l-1.78,2.08l-1.19,0.84l-4.76,1.29l-1.52,0.95l-0.84,0.99l-0.03,1.86l0.71,1.88l-0.23,1.63l-1.03,2.7l-1.62,1.02l-0.16,0.4l0.38,3.12l-0.64,3.57l-1.85,0.07l-1.86,0.57l-2.16,2.23l-1.82,-0.57l0.52,-1.59l-0.54,-1.75l-0.14,-1.95l-0.64,-0.39l-2.03,0.66l-0.25,0.5l0.18,0.76l-1.15,-0.27l-0.99,-0.78l-0.54,0.04l-0.49,1.17l0.1,2.31l-3.13,0.29l-0.54,1.2l0.3,0.79l-0.28,0.19l-0.85,-0.69l-2.82,-0.62l-0.19,-0.71l-1.74,-1.48l-2.16,0.26l-1.82,2.27l-1.24,0.67l-0.36,-1.58l-3.03,-1.94l-0.64,-2.98l0.13,-2.4l-0.34,-0.64l-1.85,-0.87l-1.94,0.69l1.58,-2.24l1.16,-0.87l0.35,-1.13l-0.32,-0.44l-2.85,-1.43l-0.59,-1.25l-1.17,-0.59l-0.0,-2.92l-2.1,-5.0l-0.68,-0.86l-2.2,-1.02l-1.09,-0.08l-1.23,0.34l-0.2,0.66l0.64,1.04l-0.06,0.77l-1.45,0.34l-2.04,1.03l-0.95,1.28l-6.22,-2.14l-2.42,1.0l-1.78,2.32l-0.64,0.39l-1.8,-2.9l-0.67,-0.63l-1.1,-0.14l-0.94,0.49l-1.69,1.73l-0.72,0.09l-2.06,-1.77l1.29,-2.46l0.08,-0.89l-0.8,-0.97l0.61,-4.85l-1.78,-2.61l-0.38,-1.41l-0.67,-1.04l-1.72,-0.47l-0.82,0.85Z\",\n            name: \"Mali\"\n          },\n          KM: {\n            path: \"M817.5,603.11l0.61,-0.24l0.5,-0.86l0.49,1.37l-0.0,1.05l-1.59,-1.3ZM809.46,604.09l0.26,0.03l0.6,0.37l-0.69,-0.09l-0.17,-0.31ZM806.8,599.18l-1.42,-0.7l-0.71,-0.87l0.32,-3.55l0.29,-0.43l0.51,0.21l-0.15,2.23l1.15,3.1Z\",\n            name: \"Comoros\"\n          },\n          ST: {\n            path: \"M383.99,440.62l-0.33,-0.08l0.53,-0.7l0.05,0.23l-0.25,0.55ZM375.07,457.57l-1.05,0.63l-0.5,-1.61l0.52,-1.0l1.46,-0.64l0.52,0.65l0.0,0.69l-0.94,1.28Z\",\n            name: \"S\\xe3o Tom\\xe9 and Principe\"\n          },\n          MW: {\n            path: \"M681.13,619.76l1.74,-1.46l1.44,-2.96l0.38,-3.9l-0.61,-1.2l0.73,-1.72l4.31,-1.64l1.54,-1.88l-0.35,-0.69l-1.7,-0.22l-0.93,-2.11l0.55,-2.61l0.03,-2.37l-0.19,-1.02l-0.71,-0.92l0.05,-1.02l0.39,-0.27l1.32,-2.96l-1.29,-3.24l0.68,-0.62l1.52,-0.44l2.28,-2.28l0.14,-0.7l-1.31,-2.14l-0.33,-1.91l-2.41,-2.19l0.32,-2.22l-1.17,-1.21l-0.79,-1.69l-1.23,-0.32l-0.55,0.4l-0.41,-0.09l-0.68,-1.96l1.71,1.11l2.38,0.31l1.15,1.07l3.32,-0.1l2.2,0.84l-0.11,1.28l1.3,3.56l2.72,3.57l-0.7,2.02l0.63,6.18l-0.24,0.8l1.15,5.72l-3.03,4.51l-0.36,2.15l0.6,1.96l1.16,0.77l0.18,2.55l0.83,1.15l0.72,2.39l0.16,2.45l-0.26,2.73l1.16,2.0l1.6,0.84l0.58,0.7l0.15,0.79l-0.96,2.74l0.39,1.72l1.87,2.05l0.5,0.06l1.31,-0.89l0.42,-2.09l0.51,1.42l1.09,0.39l2.18,2.65l0.8,0.07l0.45,-0.87l-2.17,-6.4l8.0,10.32l0.46,2.59l-0.56,1.56l-0.41,2.77l0.29,1.92l-0.12,3.09l-0.7,4.33l-1.57,0.66l-3.01,0.52l-0.86,1.14l-1.49,3.84l0.75,1.26l0.57,1.91l0.08,3.32l-1.41,0.08l-0.46,-0.39l-0.14,-0.42l0.52,-0.56l0.21,-0.91l-0.41,-1.04l-1.81,-1.01l-4.7,-5.26l-1.29,-0.85l-0.14,-1.96l-1.78,-2.3l0.32,-0.97l0.94,-0.93l0.91,-2.74l1.26,-2.27l0.2,-3.44l-0.69,-5.22l-1.53,-2.08l-0.87,-0.35l-2.75,0.5l-0.65,0.42l-4.09,0.54l-0.52,0.37l-2.66,-3.09l-1.7,-2.92l-1.14,-1.26l-0.48,-0.13l-1.48,0.93l-1.35,-2.28l-0.96,-0.53l0.3,-0.65l-0.16,-0.35l-1.1,-0.81ZM707.94,620.9l-1.35,-0.14l-0.08,-1.18l1.13,0.99l0.3,0.33ZM704.22,601.65l0.03,-0.32l0.11,-0.2l0.13,0.19l-0.28,0.32ZM703.11,600.89l-0.08,0.18l-0.2,-0.25l0.11,-0.06l0.17,0.12Z\",\n            name: \"Malawi\"\n          },\n          SO: {\n            path: \"M784.81,478.05l-6.52,-8.7l-0.07,-43.18l4.26,-4.23l6.72,-9.72l1.17,-1.15l2.26,-0.71l6.71,-1.1l1.31,-0.88l1.43,-2.38l1.21,-0.9l5.27,-2.43l4.69,-1.11l10.76,0.6l0.66,-0.27l17.38,-18.64l18.24,-17.68l11.31,-17.26l0.07,-21.27l4.96,-0.97l3.0,-1.29l5.57,-0.97l4.18,-2.36l2.01,-2.56l1.6,-0.41l4.95,1.72l-0.32,1.61l-1.57,3.84l0.43,3.23l0.12,5.56l-0.39,1.09l-0.71,0.59l0.19,0.58l-1.22,0.58l-0.57,1.2l-0.8,6.56l-0.09,3.22l-1.57,2.11l-0.59,1.6l-2.45,3.14l-1.7,3.98l-2.09,3.57l-3.01,2.94l-1.06,3.55l-1.04,2.2l-3.75,5.6l-1.38,2.6l-1.67,4.35l-0.52,2.76l-4.65,7.91l-4.85,6.35l-3.04,5.37l-12.82,14.18l-9.68,9.49l-2.59,1.91l-10.64,5.88l-6.89,4.92l-10.19,9.06l-10.64,11.06l-4.03,4.91l-2.84,2.8l-2.92,5.38l-1.57,2.2ZM897.88,336.12l0.13,-0.45l1.54,0.9l-0.87,-0.13l-0.8,-0.32Z\",\n            name: \"Somalia\"\n          },\n          SN: {\n            path: \"M92.84,285.0l-0.36,0.43l-0.22,-0.26l0.58,-0.18ZM93.02,284.95l3.4,-1.72l3.59,-4.5l3.2,-5.29l0.83,-2.25l0.67,-3.33l0.45,-0.33l1.82,-3.52l0.62,-0.14l2.37,0.65l2.36,0.09l4.53,-1.16l3.09,-0.27l0.35,-0.55l0.8,0.03l0.52,-0.36l0.48,0.3l1.66,0.09l2.93,-0.12l2.61,0.87l3.62,3.07l0.54,1.33l0.83,0.74l0.88,0.21l0.96,-0.38l0.52,0.52l0.72,0.1l1.12,-0.25l1.15,0.85l0.67,0.94l1.01,3.19l0.65,1.11l0.91,0.33l0.76,1.11l1.05,0.13l0.55,0.46l0.73,1.24l0.27,1.4l2.27,1.89l1.38,0.54l0.87,0.69l0.68,1.09l1.46,0.95l0.95,1.66l-0.4,2.43l2.4,2.94l-0.02,2.6l0.68,1.29l-0.2,0.74l-0.77,0.84l-0.04,1.49l1.78,2.16l0.23,0.95l0.62,0.7l0.78,-0.04l0.6,-0.73l0.96,0.19l0.53,0.8l0.41,1.47l1.75,2.61l-0.67,4.5l0.76,1.32l-1.77,-0.18l-2.77,0.46l-2.77,-0.12l-2.95,0.83l-5.72,-1.44l-1.63,-0.97l-1.35,0.55l0.12,-1.1l-0.62,-0.67l-7.61,-0.48l-17.22,-0.07l-4.58,2.28l-3.0,0.6l-3.6,-0.23l-4.38,1.29l-2.05,-0.11l-0.58,-0.98l0.14,-0.31l2.13,-0.82l1.2,0.26l0.48,-0.65l-0.22,-0.52l-1.7,-1.1l-0.53,-0.05l-0.94,1.15l-0.44,0.05l0.09,-4.89l1.05,-0.83l9.43,-0.03l0.4,-0.35l0.2,-1.73l5.87,-0.78l0.8,-0.6l0.79,-1.29l8.18,3.38l2.32,0.41l4.84,-1.19l0.53,-1.39l-0.5,-1.06l-1.46,-0.77l-2.19,0.04l-2.08,0.56l-0.8,-0.15l-1.96,-1.35l-2.24,-0.62l-1.93,-1.35l-1.24,-0.32l-2.96,0.2l-1.94,0.77l-1.05,1.65l-11.81,-0.02l-0.29,-1.04l-1.99,-2.29l1.65,-1.45l-0.38,-0.61l-1.62,0.42l-0.12,-0.88l-2.03,-3.65l-1.29,-1.05l-1.0,-1.81l-1.31,-0.91l-1.89,-0.3Z\",\n            name: \"Senegal\"\n          },\n          MR: {\n            path: \"M98.1,207.95l0.48,-2.23l45.99,-0.06l0.4,-0.43l-0.92,-14.29l-0.73,-2.46l0.03,-1.39l1.33,-2.06l4.72,-3.28l2.88,-0.57l3.44,-1.47l0.9,-0.72l0.08,-31.14l38.71,-0.0l0.4,-0.4l-0.01,-15.52l43.54,27.63l-19.44,0.01l-0.4,0.44l11.32,103.21l3.12,3.52l-1.69,8.94l-42.64,0.0l-1.49,-0.2l-0.16,-1.61l-0.51,-0.35l-1.15,0.88l-0.23,1.79l-5.46,0.96l-5.49,-0.77l-3.39,0.19l-0.7,0.5l-2.02,2.76l-5.86,-5.58l-0.75,-0.24l-1.45,0.84l-1.96,1.81l-0.9,2.33l-0.51,2.96l-0.74,1.2l-1.69,1.48l-2.04,-0.76l-1.13,-0.78l-0.65,-1.06l-3.18,-1.85l-1.35,-1.32l-0.05,-0.99l-0.93,-1.58l-0.74,-0.62l-0.99,-0.08l-0.3,-0.72l-1.2,-0.59l-1.54,-4.08l-0.86,-1.2l-1.31,-0.99l-1.93,0.12l-1.04,-0.58l-1.17,0.32l-0.96,-1.08l-0.18,-0.79l-1.34,-1.33l-2.52,-1.94l-2.86,-0.98l-3.09,0.1l-2.42,-0.37l-0.53,0.38l-0.81,-0.1l-0.5,0.66l-2.77,0.2l-4.5,1.16l-2.18,-0.08l-2.44,-0.66l-0.97,0.2l-0.97,1.11l-2.02,4.02l-0.0,-1.73l0.84,-3.76l4.5,-11.36l0.59,-4.22l-0.64,-7.78l-1.51,-5.89l-1.14,-1.95l-2.02,-1.65l-0.27,-0.56l1.52,-0.5l0.77,-1.25l-0.02,-0.45l-0.43,-0.14l-0.76,0.22l1.52,-3.1l0.84,-5.34l-2.7,-5.63l-1.28,-0.76l-0.55,0.34l-0.15,0.78l-0.25,-0.13l-2.9,-5.41l-0.77,-0.52l-0.79,0.35ZM104.46,225.57l-0.06,-0.38l0.55,-0.92l-0.13,0.74l-0.35,0.56Z\",\n            name: \"Mauritania\"\n          },\n          UG: {\n            path: \"M644.58,475.13l-0.21,-4.33l0.98,-5.43l2.6,-2.48l0.22,-1.53l-0.22,-0.42l-1.22,-0.6l-0.84,-0.05l0.28,-2.03l0.69,-0.8l1.8,-3.83l0.06,-3.66l1.17,-0.51l1.59,-1.29l0.76,-1.6l0.83,-0.85l1.38,-0.47l0.26,2.06l0.79,0.38l0.73,-0.26l3.63,-4.87l0.83,-0.85l2.25,-0.89l1.27,-1.01l1.68,-2.63l-0.16,-4.31l1.05,-1.66l-0.5,-0.47l-0.7,0.27l-1.73,2.27l-0.78,-0.98l-1.15,-0.25l-1.29,-1.26l-1.7,-0.06l-0.88,-0.48l1.43,-4.87l-0.39,-1.09l-0.71,-0.78l0.79,-2.54l0.91,-1.47l-0.08,-0.92l-0.5,-0.42l0.8,-1.23l2.43,-1.66l4.5,1.27l2.93,-1.38l1.56,2.17l2.34,1.05l0.49,-0.11l0.65,-1.06l1.46,-1.03l5.84,-1.07l1.74,-0.88l1.82,1.17l3.98,0.23l1.21,-0.78l4.38,-4.39l1.59,3.37l0.5,0.31l-0.0,0.73l1.2,0.94l1.86,0.85l-0.46,2.66l0.57,2.95l0.94,0.7l0.9,2.36l1.65,1.11l0.83,2.28l0.67,0.53l0.35,0.97l-0.24,0.79l0.95,4.18l0.14,3.91l-0.34,1.21l-1.85,2.57l0.13,1.65l-2.14,0.88l-1.5,1.41l-0.88,2.11l-1.6,2.07l-1.35,1.04l-0.96,2.65l-1.04,1.69l-1.19,0.34l-1.1,-0.21l-0.21,-0.9l-0.68,-0.4l-0.89,0.33l-0.62,0.82l-0.73,0.02l0.25,-0.52l-0.15,-0.55l-1.55,-0.47l0.27,-1.15l-0.54,-0.3l-1.08,0.11l-1.0,0.4l-0.72,2.09l-0.52,0.11l-0.37,0.73l-1.1,0.83l-1.07,-0.75l-1.5,0.72l-0.04,-0.81l-0.53,-0.67l-0.55,-0.16l-0.84,0.83l-0.52,1.32l-0.47,0.13l-0.78,-0.41l-0.88,0.85l-1.74,0.2l-2.94,1.58l-0.4,0.78l0.76,1.1l-0.05,0.53l-1.46,1.84l-1.71,3.66l0.56,2.24l-10.98,-0.08l-2.43,0.87l-2.24,-0.06l-0.8,0.24l-2.48,2.91l-1.77,1.39l-0.71,0.2l-0.54,-1.28l-0.59,-0.26l-2.39,0.57ZM687.18,457.18l0.12,-0.82l1.06,-0.02l-0.55,0.44l-0.16,0.59l-0.47,-0.19ZM673.83,462.4l0.46,0.01l-0.02,0.46l-0.21,-0.11l-0.24,-0.35ZM675.29,463.38l0.55,-0.04l-0.4,1.17l-0.61,0.23l0.55,-0.77l-0.09,-0.59Z\",\n            name: \"Uganda\"\n          },\n          SD: {\n            path: \"M636.92,346.14l-1.71,1.58l-0.17,1.46l-8.66,-0.03l-1.72,-2.99l-0.48,-0.24l-9.48,-0.14l-4.74,1.51l-1.07,-0.42l-4.41,-5.13l-2.98,-2.46l-0.61,-2.66l-1.15,-0.4l-5.95,1.19l-2.18,0.09l-0.69,0.37l-0.58,0.87l-0.22,2.05l-2.53,3.29l-0.06,2.98l-1.28,1.68l-0.28,2.41l-1.15,2.04l-0.13,1.24l-3.63,1.38l-0.82,1.09l-6.16,-1.05l-0.35,-0.38l0.06,-1.63l-0.94,-1.06l0.04,-0.55l1.41,-1.64l0.39,-1.07l0.41,-4.45l-0.15,-1.56l-1.21,-2.49l-2.74,-4.26l-4.11,-4.35l-1.09,-1.77l0.88,-3.16l-0.19,-1.94l-1.0,-0.91l-0.83,-0.15l-2.09,-1.83l-0.35,-0.93l0.26,-3.9l-0.51,-0.76l-0.73,-0.14l-0.95,-4.58l0.22,-1.18l-0.73,-1.36l-1.8,-0.79l-3.43,0.38l-0.89,-0.97l0.9,-2.28l0.9,-1.24l2.0,-1.26l0.88,-1.46l-0.06,-1.96l-1.32,-3.07l-0.01,-0.67l0.67,-1.12l4.31,-3.03l-0.04,-0.84l-0.94,-1.07l-0.7,-2.9l0.77,-0.75l2.42,-1.1l0.24,-1.72l0.92,-1.67l2.02,-2.04l0.46,-1.89l-0.39,-2.6l1.72,-1.74l4.03,-0.14l1.72,-0.38l3.9,0.5l0.75,-0.53l0.12,-51.43l11.17,0.01l0.55,-0.49l0.01,-24.02l72.66,0.01l0.96,-0.31l1.31,-2.23l0.55,0.29l-0.56,1.71l0.38,0.53l63.39,-0.01l0.12,2.49l0.56,2.35l1.81,3.2l1.93,2.41l-0.62,-0.25l-0.55,0.34l-0.11,1.49l0.37,3.13l0.63,2.12l-0.45,1.97l0.06,3.35l0.81,4.03l-0.15,2.62l1.33,5.96l1.31,3.36l0.89,1.02l2.35,0.74l2.16,1.61l3.24,3.67l1.17,-0.15l0.46,0.59l2.73,1.71l0.22,0.43l-1.99,2.04l-0.62,1.36l-1.37,1.52l-5.34,1.43l-2.9,1.71l-0.54,0.6l-0.97,2.46l-2.64,0.23l-1.9,-0.2l-0.36,0.27l-0.38,3.16l-1.06,2.25l0.3,3.86l-1.16,3.57l-1.58,3.23l-1.82,5.63l-1.16,1.66l1.14,10.41l-0.92,3.13l0.02,1.82l-0.64,2.5l-2.08,4.21l-0.63,2.17l-0.4,3.98l-4.35,0.9l-0.91,0.57l-0.91,1.08l-4.01,6.87l-1.69,1.76l-1.79,6.45l-0.37,4.87l-1.41,1.11l-1.86,-1.32l-0.74,-0.18l-1.68,1.12l-1.12,1.63l-0.86,1.83l0.42,3.87l-1.77,3.95l-0.96,4.36l-1.64,-0.19l0.26,-2.3l0.82,-1.84l-0.09,-2.39l-0.66,-1.65l-5.28,-4.41l-1.07,-1.24l-2.59,-0.99l0.4,-1.09l-1.16,-8.77l0.56,-1.07l0.17,-3.01l0.68,-2.33l0.07,-0.98l-0.39,-0.43l-5.6,-0.07l-0.44,0.42l0.22,2.12l-7.41,0.03l-0.3,0.67l3.05,3.42l-0.01,4.63l0.97,2.46l-5.6,4.89l-1.71,3.36l-6.56,6.83l-5.16,0.74l-3.2,-2.87l-5.53,-3.54l-0.42,-0.0l-4.7,2.54l-0.17,1.9l-1.33,1.56l-4.06,1.1l-1.75,1.06Z\",\n            name: \"Sudan\"\n          },\n          MZ: {\n            path: \"M682.61,781.45l-5.86,0.15l-2.46,-0.31l-0.07,-3.6l-0.75,-2.96l0.22,-3.37l-1.36,-0.96l-0.28,-2.0l0.75,-1.85l0.01,-14.7l-2.2,-7.12l-2.99,-5.12l-0.14,-2.42l-2.83,-10.56l1.53,-1.18l11.71,-12.29l0.1,-0.46l-0.8,-1.77l1.38,-2.29l0.16,-3.4l2.08,-1.71l3.82,-6.63l0.14,-1.59l-2.06,-3.84l-0.57,-1.9l0.6,-1.72l0.19,-1.93l-0.43,-0.72l-1.15,-0.63l-0.14,-0.51l0.15,-1.01l1.44,-0.73l0.55,-0.64l1.3,-4.59l-0.44,-3.4l0.16,-10.06l-1.0,-2.64l-0.09,-1.68l0.83,-2.1l-0.32,-0.45l-2.3,-0.38l-1.29,-1.07l-4.63,-1.71l-3.52,-0.25l-2.86,-2.5l-2.47,-0.5l-3.08,-1.89l-9.33,-0.38l-0.14,-3.84l-0.54,-3.55l-1.17,-2.06l-0.33,-1.85l5.01,-1.99l10.13,-2.9l19.34,-6.68l1.96,3.1l2.92,3.37l5.14,-0.87l1.93,-0.74l1.62,-0.05l1.4,1.9l0.6,4.86l-0.19,3.24l-1.2,2.08l-0.89,2.71l-1.31,1.51l-0.04,0.93l1.8,2.36l-0.07,1.37l0.34,0.83l1.34,0.92l4.78,5.33l1.68,0.91l0.08,1.13l-0.61,0.86l0.32,0.88l0.99,0.73l1.83,-0.11l0.54,-0.67l-0.11,-3.49l-0.62,-2.13l-0.67,-0.93l1.38,-3.52l0.6,-0.83l4.04,-0.77l0.81,-0.7l0.44,-1.29l0.34,-3.37l0.12,-3.14l-0.29,-1.86l0.39,-2.67l0.61,-1.67l-0.59,-3.02l-7.04,-9.27l-2.76,-3.05l-1.69,-1.39l-0.18,-1.71l-0.42,-0.53l-0.11,-3.29l-0.35,-1.0l0.44,-2.32l-0.22,-1.58l-1.07,-2.47l0.09,-2.62l1.74,-1.65l0.42,-0.79l0.53,-1.44l0.29,-3.15l6.72,0.29l0.99,-0.31l1.75,-1.46l1.22,0.02l2.84,1.67l0.42,0.88l1.44,0.44l2.5,0.12l1.92,-0.39l1.26,-0.92l2.18,-0.46l2.72,1.39l2.04,0.3l2.08,-0.46l2.24,-1.19l1.23,-1.17l0.93,-2.13l2.82,-0.17l1.52,0.36l2.43,1.18l3.51,-2.16l2.16,-0.7l2.09,-0.0l1.88,-0.54l2.84,-1.71l3.04,-0.82l2.06,-1.12l5.19,-3.94l1.31,1.73l-1.13,0.91l0.03,0.67l0.9,0.54l-0.75,1.01l-0.12,0.82l0.41,0.85l-1.61,3.06l0.7,1.57l-0.34,2.52l1.12,4.02l-0.34,1.37l0.24,3.2l-0.39,1.08l0.76,0.81l0.32,1.07l-0.27,1.97l-1.26,1.04l-0.15,1.09l0.39,0.39l1.18,0.01l-0.21,3.2l0.32,1.05l-0.41,1.14l0.59,7.87l0.25,0.8l1.14,0.55l-0.88,1.76l0.07,1.85l0.3,0.34l0.43,-0.17l1.0,-1.23l0.27,0.3l0.32,2.9l-0.08,0.64l-1.51,1.6l-0.21,1.61l-0.78,0.64l0.32,1.89l-1.03,2.43l-5.24,6.03l-0.18,1.13l-1.22,1.74l-2.24,0.85l-0.16,0.48l0.5,1.34l-6.81,4.22l-1.83,2.13l-2.22,0.79l-2.44,0.1l-6.24,2.34l-1.25,0.99l-2.41,0.86l-3.86,2.16l-3.14,2.05l-3.64,3.12l-0.53,1.72l-4.19,4.69l-1.5,2.12l-0.14,0.86l-0.39,0.12l-0.58,-0.69l-0.7,0.19l-0.27,1.45l-1.13,-0.25l-3.22,1.86l-2.46,2.15l-3.33,3.99l-4.78,3.79l-0.8,0.08l-1.65,-1.35l-1.24,0.12l0.06,0.45l1.13,1.31l-0.58,7.87l3.29,4.23l1.55,4.65l0.16,2.57l1.6,3.06l0.72,4.68l-0.16,4.36l0.92,1.04l0.63,-0.13l0.29,-0.64l0.32,-3.09l0.36,1.14l0.13,1.44l-0.6,3.55l0.97,3.72l-0.92,2.66l-1.46,7.65l0.4,0.74l0.99,0.33l0.61,-0.67l-0.58,2.82l-2.69,4.42l-1.11,1.33l-1.85,1.31l-4.46,2.1l-9.03,3.07l-5.76,2.42l-4.59,2.9l-2.05,1.98l-0.89,2.3l-1.54,2.29l0.0,0.41l1.35,1.98l1.8,1.47l0.6,-0.22l0.28,-0.92l-0.58,7.72Z\",\n            name: \"Mozambique\"\n          }\n        },\n        height: 1054.4456598737515,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"ar_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 1775.5897460258225,\n          bbox: [{\n            y: 2464855.8822114565,\n            x: -8195937.5628109295\n          }, {\n            y: 6843324.315777245,\n            x: -5976606.436896723\n          }],\n          left: 0\n        }],\n        paths: {\n          \"AR-Z\": {\n            path: \"M26.08,1409.8l2.05,-1.87l2.03,-0.67l4.35,-0.45l2.16,-0.69l1.78,-1.21l5.62,-5.5l1.23,-1.7l0.53,-1.98l0.19,-2.3l-0.28,-6.15l-1.02,-3.26l-0.35,-2.8l1.61,-3.15l3.46,-2.04l2.95,-0.9l0.82,-0.6l1.94,-2.49l0.93,-0.11l1.51,0.37l0.86,-0.4l0.33,-0.83l-1.35,-2.98l0.72,-4.28l-1.07,-6.95l-0.46,-1.25l-2.15,-0.91l-0.53,-1.74l-0.83,-0.98l-2.72,-0.99l-1.36,-1.13l-1.09,-1.46l-0.34,-1.57l1.93,-3.5l1.92,-5.89l4.24,-6.52l0.87,-1.96l1.13,-5.21l-0.04,-0.91l-0.9,-0.88l-1.28,-0.58l0.32,-1.04l1.29,-1.23l1.73,-0.62l3.55,0.3l0.98,-0.16l0.93,-0.64l5.13,-5.51l0.95,-1.49l0.45,-1.24l-0.7,-3.01l0.39,-0.67l0.69,0.03l2.81,1.64l1.6,0.43l1.72,-0.75l0.96,-1.61l0.06,-1.9l-0.52,-1.5l-0.93,-1.31l-4.18,-2.42l-0.76,-0.86l0.16,-0.75l2.78,-1.5l0.99,-0.98l0.05,-0.5l-0.54,-0.84l-1.9,-1.9l0.75,-3.96l0.79,-1.27l-0.63,-2.17l0.54,-0.62l3.33,-0.25l1.23,-0.43l2.6,-2.84l2.47,-1.25l1.59,-1.52l0.43,-2.09l-0.68,-4.06l0.67,-2.84l-0.22,-1.16l-3.01,-7.12l-0.42,-1.91l0.11,-4.74l-0.27,-1.88l-0.99,-1.22l-5.74,-3.88l0.23,-0.41l3.88,-0.51l2.17,-0.83l2.23,-3.2l3.21,-3.15l182.99,0.03l-1.61,5.14l-0.06,3.81l2.16,8.95l1.54,4.52l5.35,9.49l4.01,3.38l3.67,1.08l1.08,1.55l1.74,1.14l2.78,0.84l0.61,1.53l1.58,1.33l2.14,3.42l1.58,0.47l0.37,0.68l4.89,4.61l2.62,3.55l1.79,1.51l4.03,1.83l1.79,-0.07l1.35,0.82l2.04,-0.51l0.98,0.38l2.72,-0.41l2.88,1.15l2.54,-0.19l1.21,0.52l7.11,1.29l5.29,-0.39l2.65,-0.88l1.99,-0.07l2.65,1.54l1.75,0.19l0.87,0.8l0.59,1.6l4.37,3.5l-0.37,1.07l1.89,6.67l-0.61,3.8l-0.4,5.71l-4.89,13.15l-1.88,0.37l-6.21,-0.64l-1.61,1.16l-1.53,1.68l-5.09,2.31l-2.86,1.77l-0.9,0.22l-3.52,-0.14l-1.03,0.53l0.29,0.4l2.19,0.65l1.93,-0.14l3.58,-1.73l3.64,-0.85l4.29,-2.09l1.23,-1.19l2.01,-0.34l3.06,0.28l0.6,0.62l1.38,5.4l1.31,1.29l2.29,0.6l-0.93,1.08l0.18,0.54l0.51,0.25l-1.96,0.51l-0.6,-1.02l-2.37,-0.69l-1.52,0.53l-1.03,1.36l-0.32,1.18l0.93,0.88l-0.24,1.1l-0.54,1.19l-0.71,0.42l-0.18,0.48l0.34,0.76l1.2,0.85l1.45,0.4l0.13,0.5l-0.66,0.84l-0.81,0.15l-0.46,-0.68l-0.84,-0.31l-1.06,0.42l-3.24,0.19l-2.25,0.82l-1.21,0.98l-0.35,1.31l-0.8,1.3l-3.4,1.3l-1.33,2.0l-1.49,0.48l-0.93,0.87l-0.94,1.35l-0.82,2.02l0.49,1.74l-4.35,-0.3l-1.18,0.92l-0.08,2.11l-1.26,0.68l-1.89,0.55l-4.97,0.49l-1.88,1.37l-2.51,1.15l-2.82,2.27l-2.29,2.29l-0.33,2.14l-1.98,0.76l-3.36,0.5l-2.56,1.87l-3.15,1.7l-1.22,1.4l-0.39,2.75l-1.76,1.78l-0.6,2.59l-2.06,1.46l-3.35,1.27l-3.79,2.15l-6.89,6.56l-0.94,2.04l-0.94,3.33l-1.68,1.55l-0.12,1.49l0.96,0.66l0.12,0.5l-1.71,1.04l-1.15,3.07l-1.06,0.95l-1.26,0.39l-0.2,0.62l0.97,1.11l0.0,0.69l-1.99,1.12l-0.06,0.67l0.41,0.32l-0.01,0.4l-1.06,0.9l-2.44,0.29l-0.34,0.31l0.16,0.8l0.97,0.37l4.3,-0.13l1.35,-1.27l0.68,-2.08l-0.05,-1.53l0.69,-0.89l0.25,-1.57l0.88,-0.9l0.85,0.74l-0.16,3.14l-1.9,3.22l-2.11,9.2l-0.81,8.03l0.24,0.94l-0.86,5.51l-1.78,5.22l-2.72,4.83l-2.72,2.44l-8.12,5.29l-4.16,1.55l-3.9,0.61l-3.56,-0.38l-1.44,-1.88l-1.1,-0.57l-0.94,-1.32l-1.87,-4.23l-2.65,-2.36l-0.87,-1.35l-1.24,-3.35l-3.86,-5.98l-2.03,-1.46l-2.14,-0.51l-0.42,0.28l0.18,0.47l2.77,1.62l0.49,0.57l0.28,0.9l2.79,4.42l0.78,2.51l0.02,1.21l-1.98,1.32l-2.12,0.88l-9.17,-0.29l-3.06,1.63l-1.41,0.08l-1.95,1.29l0.37,0.84l4.5,-0.23l1.68,-1.15l1.63,-0.63l3.25,0.05l4.39,0.74l3.97,-1.42l0.76,0.36l0.49,1.3l1.3,0.8l0.34,2.55l0.91,1.34l1.3,1.24l0.97,0.56l1.86,0.42l0.47,0.62l1.34,0.42l0.38,0.55l-0.39,0.84l-1.49,0.52l-1.83,1.3l-13.37,5.31l-1.58,-0.06l-1.1,0.9l-0.23,0.8l-1.68,0.39l-0.94,-0.15l-0.91,0.5l-0.38,1.42l-0.8,0.53l-3.45,4.04l-4.56,7.74l-0.22,2.76l-3.16,8.17l0.13,1.25l0.65,1.44l0.2,5.45l-0.35,1.33l-2.97,1.81l-2.52,2.34l-3.97,2.67l-1.91,1.78l-1.02,2.25l0.13,0.48l0.5,-0.01l5.48,-4.03l4.04,-2.07l0.93,-0.09l2.74,13.75l0.79,1.32l1.11,5.17l4.46,10.73l0.39,2.35l-0.3,0.85l-0.64,0.5l-1.61,-0.48l-1.46,0.05l-3.12,2.44l-2.17,-0.3l-5.18,-2.4l-4.26,-0.17l-1.93,0.83l-3.68,0.58l-2.14,1.56l-3.22,1.17l-0.2,0.49l0.46,0.26l11.83,-2.2l2.1,0.29l6.26,2.32l-0.19,0.54l-2.34,1.65l-0.17,0.7l0.4,0.4l1.04,-0.03l4.59,-2.03l3.12,-2.32l1.06,-0.14l1.06,0.45l1.58,1.43l2.8,6.74l2.13,2.76l6.39,12.12l14.43,18.24l0.4,0.94l-0.25,0.62l-2.73,2.87l0.1,-1.15l-0.51,-1.1l0.02,-2.11l-0.59,-1.04l-5.31,-1.18l-2.29,-1.03l-8.94,-1.23l-8.44,-3.88l-9.25,-2.49l-12.36,-0.34l-21.18,-7.56l-88.65,-1.05l-1.83,-1.0l0.72,-4.38l-0.45,-1.69l-1.12,-1.53l-4.18,-4.08l-3.19,-2.39l-2.12,-1.16l-4.18,-1.14l-0.74,-0.51l-0.53,-1.04l-0.38,-3.25l-0.48,-1.25l-1.13,-1.07l-3.35,-0.42l-0.7,-1.04l1.07,-1.55l3.3,-2.94l-0.01,-2.2l0.98,-1.74l0.28,-1.18l0.14,-4.69l2.79,-4.1l-0.04,-1.16l-0.74,-0.83l-3.47,-2.02l-1.39,-1.31l-0.88,-1.92l-0.06,-1.04l0.3,-0.68l2.04,-2.67l0.46,-0.48l2.16,-0.61l0.79,-1.43l0.5,-2.78l0.42,-5.14l-0.31,-2.4l-0.98,-1.68l-2.44,-2.97l-0.37,-0.92l0.26,-1.42l1.66,-3.11l-0.12,-1.35l-3.74,-1.74l-5.54,-1.13l-2.31,0.93l-3.0,2.96l-1.74,0.05l-3.13,-2.54l-1.01,-0.47l-1.26,0.16l-5.78,2.85l-6.68,5.4l-1.89,0.72l-1.76,-0.02l-1.5,-1.07l-0.66,-6.38l-2.93,-4.01l-0.17,-4.32l-0.62,-4.29l0.07,-3.64l-1.28,-4.01l-2.13,-3.43l-2.72,-1.61l-5.5,-4.4l-0.42,-1.37l0.41,-1.63l2.26,-3.51l0.14,-1.14l-1.04,-1.92l-3.15,-2.59l1.34,-2.05l0.3,-2.61l2.3,-2.06l0.97,-1.73l-0.16,-1.79l-1.24,-1.89l-2.1,-2.04l-0.25,-0.75l1.22,-2.65l-0.15,-1.53l-2.95,-3.88l1.98,-2.62l-0.33,-2.87l0.4,-0.78l2.43,-1.49l0.97,-1.01l0.22,-0.93l-0.4,-3.13l0.36,-0.33l13.98,-0.23l0.83,-1.49l1.37,-0.33l0.33,-0.72l-0.33,-0.43l-2.79,-0.46l-0.75,-0.9l-0.05,-1.23l0.53,-1.31l2.9,-3.2l0.5,-0.93l0.21,-2.29l0.57,-1.21l2.73,-3.49Z\",\n            name: \"Santa Cruz\"\n          },\n          \"AR-X\": {\n            path: \"M384.38,647.89l-0.01,-52.57l-2.02,-38.28l1.74,-3.25l2.05,-0.63l0.68,-0.86l-0.49,-2.56l1.61,-3.32l-0.32,-2.32l1.85,-3.42l0.38,-3.16l0.87,-1.81l0.07,-1.83l1.29,-1.58l0.45,-2.47l1.04,-2.3l0.41,-3.68l-0.83,-3.27l-1.35,-2.75l0.3,-3.78l-0.17,-2.3l-0.51,-0.86l-1.07,-0.36l-5.67,1.46l-5.21,0.42l-0.32,-0.6l0.05,-2.48l-1.41,-2.7l-0.62,-4.19l-3.0,-3.27l-15.04,-8.5l-1.57,-0.42l-3.59,-0.01l-0.34,-38.96l0.6,-2.99l8.13,-23.02l0.41,-2.26l1.71,-5.42l1.88,-3.38l3.67,-10.09l9.45,-2.58l2.34,-1.21l8.91,-9.21l0.52,-0.91l0.13,-1.2l-1.36,-11.35l0.39,-1.28l2.89,-1.0l26.51,-6.49l1.73,-0.04l9.05,2.33l-0.07,2.5l1.03,1.04l3.36,1.74l1.0,1.31l3.62,0.87l2.09,1.31l3.71,0.2l5.32,-0.8l3.86,1.06l2.56,-0.24l0.12,2.78l2.79,0.76l0.11,1.53l0.74,0.73l49.41,0.27l1.86,1.29l6.93,17.14l-2.1,12.78l0.42,2.23l10.07,10.78l2.01,2.77l-0.37,2.66l-11.53,40.78l-0.71,1.54l-4.47,4.1l-0.02,1.02l0.86,1.6l-0.26,3.15l0.34,3.77l1.41,2.67l-1.26,3.48l-0.29,5.32l3.77,4.01l2.65,1.54l1.48,4.66l1.38,2.45l3.3,2.41l1.21,1.39l0.85,4.65l1.29,1.44l-0.18,1.44l-1.07,1.58l-0.03,0.65l0.6,0.51l2.29,0.62l2.32,4.35l1.58,1.39l0.41,0.91l0.01,1.0l-1.08,3.05l0.04,3.13l-0.34,2.31l-0.6,1.11l-2.21,2.03l-1.04,0.53l-1.77,0.12l-1.3,1.59l-42.06,64.1l-21.73,-0.08l-1.83,1.82l-0.48,8.73l-0.1,21.18l-76.1,-0.02Z\",\n            name: \"C\\xf3rdoba\"\n          },\n          \"AR-Y\": {\n            path: \"M286.66,92.42l10.66,-34.74l-8.02,-8.61l2.14,-3.49l1.28,-1.5l3.38,-2.61l0.58,-0.81l0.17,-1.3l-0.34,-4.0l2.12,-0.09l2.09,-2.06l6.76,-2.51l0.2,-0.8l-0.26,-1.38l0.66,-1.0l0.87,-4.63l0.83,-1.87l1.41,-1.01l2.88,0.48l0.57,-0.92l11.13,-3.07l1.23,-0.89l0.83,-1.3l1.35,-0.39l0.51,-1.4l0.43,-4.39l2.08,-7.55l0.47,-0.15l3.67,1.16l1.87,0.92l1.27,1.34l0.84,2.63l4.32,0.83l0.86,0.48l5.74,6.64l1.51,1.03l1.55,0.44l6.29,-0.71l1.1,-0.59l5.55,0.71l11.62,-0.14l-0.22,0.99l-1.05,1.79l-0.72,2.63l-0.19,4.58l-1.5,2.36l-1.7,4.37l-1.06,1.9l-0.52,4.15l0.43,0.82l1.4,-0.01l1.75,1.61l-0.88,2.02l0.0,2.49l0.78,5.33l1.72,4.94l0.92,1.09l1.49,1.01l5.69,0.35l1.57,1.49l0.4,2.04l-1.53,8.8l0.85,1.16l3.23,1.45l2.8,5.7l0.32,2.29l0.56,0.98l2.71,0.52l1.06,-0.09l2.26,-1.72l3.64,-0.58l1.22,1.12l3.43,1.27l1.67,1.45l2.39,3.11l1.25,0.88l0.47,-0.01l1.11,-0.9l0.81,-2.71l1.29,-1.62l6.31,-0.08l1.2,0.24l0.25,1.06l1.0,30.62l-0.79,2.6l-1.55,2.73l-3.82,4.85l-1.05,0.69l-4.19,0.56l-1.47,1.81l-2.54,0.72l-3.15,2.96l-1.63,3.24l-0.32,0.07l-8.54,-7.32l-0.67,-0.24l-0.43,0.13l-1.3,1.86l-2.04,4.72l-1.11,0.1l-4.25,-1.55l-1.42,-0.85l-3.79,-3.01l-0.93,-1.47l-0.72,0.08l-1.82,1.22l-2.57,0.96l-3.75,-1.41l-2.89,-0.51l-2.32,-1.9l-1.11,-0.04l-1.27,0.6l-2.38,-1.35l-1.33,-2.43l-4.55,-5.89l-1.49,-2.48l-0.31,-0.81l0.15,-1.99l-0.31,-2.05l-3.36,-1.89l-2.1,-2.11l-1.07,-0.65l-1.11,-0.04l-0.84,0.69l-0.62,-0.03l-1.67,-2.29l0.34,-1.79l-0.72,-1.87l-0.71,-0.35l-0.04,-0.31l0.21,-3.64l1.55,-2.5l-0.56,-1.55l0.5,-1.14l-0.23,-2.26l0.25,-3.62l-2.02,-2.23l-6.47,-3.8l-1.92,-0.09l-1.91,-1.26l-1.36,-0.08l-2.68,-1.08l-1.06,0.13l-0.94,1.14l-1.35,6.3l0.2,1.94l2.91,7.9l0.18,2.66l-0.81,12.38l-1.12,2.65l-0.44,1.95l-1.36,0.65l-2.32,3.09l-1.35,0.7l-2.73,0.12l-1.54,-0.33l-3.11,-1.54l-4.22,-4.83l-4.7,-2.28l-2.6,-2.94l-0.65,-1.56l-1.88,-0.62l-0.56,-1.44l-3.63,-3.78l-0.72,-0.44l-2.3,-0.47l-1.53,-1.71l-1.83,-0.79l-1.19,-1.21Z\",\n            name: \"Jujuy\"\n          },\n          \"AR-V\": {\n            path: \"M411.27,1762.25l0.32,-0.91l-0.4,-0.4l-1.12,0.17l-1.02,0.81l0.26,0.72l-2.38,1.02l-1.5,2.06l-2.85,0.13l-0.46,-0.3l1.08,-1.39l-0.15,-0.58l-3.81,-2.0l0.14,-0.74l1.9,-1.21l1.05,-1.26l3.52,1.68l3.87,-1.12l0.8,-0.67l0.0,-0.61l-2.43,-2.03l-0.22,-0.47l0.61,-0.2l1.98,2.12l1.8,0.42l1.38,-0.75l0.88,-0.08l0.49,2.14l0.77,0.41l0.53,-0.11l0.39,-0.6l-0.25,-2.82l0.39,-1.32l1.42,0.93l0.87,-0.26l1.77,0.6l1.89,-0.26l1.83,1.51l0.87,-0.22l0.33,-0.91l-0.19,-0.74l0.25,-0.07l1.32,0.85l1.46,-0.86l0.72,1.64l0.8,0.52l1.97,-1.07l4.8,-1.09l0.87,0.28l0.22,0.6l0.91,0.2l1.87,-1.01l0.2,0.3l-1.11,0.88l-1.2,2.13l-1.99,0.49l-2.28,1.56l-0.42,-0.03l1.13,-2.25l-0.22,-0.93l-0.84,-0.41l-2.17,1.56l-2.72,-0.04l-0.87,0.55l-0.37,0.94l-0.9,0.39l-4.16,0.61l-0.92,0.94l-0.71,-0.47l0.02,-0.49l0.82,-2.23l-0.39,-0.55l-1.51,0.35l-0.68,-0.38l-0.74,0.15l-3.41,2.06l-1.87,1.72l-2.21,0.4ZM223.8,1758.43l0.64,-131.33l1.15,0.92l1.27,2.54l2.95,3.59l2.95,4.42l3.91,3.15l1.32,1.54l2.0,4.08l1.79,7.32l-1.88,-5.68l-1.31,-0.57l-2.2,0.64l-2.76,2.01l-2.28,2.32l-2.83,2.21l-1.54,2.84l-0.44,2.26l0.7,2.6l1.95,1.86l2.79,1.89l1.8,0.13l5.16,1.24l4.82,-0.38l3.29,1.73l1.48,2.96l-0.24,2.17l0.73,1.66l0.84,4.08l2.92,4.88l8.66,7.88l4.02,2.84l0.12,0.69l-0.4,0.77l0.38,0.58l2.1,-0.25l4.4,2.12l-0.93,0.49l-0.52,1.3l0.2,1.48l0.7,1.18l12.36,9.03l7.12,4.34l5.17,2.04l2.88,1.55l0.92,1.18l1.61,0.8l6.33,2.3l2.82,2.3l2.21,3.67l4.47,3.57l1.14,1.53l1.61,0.78l0.67,1.62l4.73,1.22l4.04,2.12l15.51,6.28l2.47,0.42l2.17,1.31l3.41,0.19l3.26,0.74l10.84,-1.36l3.5,0.26l3.21,-1.13l7.01,1.02l-2.21,2.4l-1.38,3.34l0.5,1.37l-1.33,1.03l-0.43,0.74l0.34,1.62l-2.7,1.93l-1.24,3.91l-0.99,0.65l-1.1,-0.04l-0.04,-1.0l-0.48,-1.0l-1.4,-0.65l-1.54,0.03l-1.23,0.7l-0.17,0.45l0.3,1.02l-0.73,0.86l-3.45,-0.28l-1.68,0.38l-1.1,1.87l-1.24,0.47l-0.58,-0.13l-0.89,-1.06l0.0,-1.65l-0.71,-1.07l-2.35,-0.22l-1.88,0.59l-2.87,-0.95l-1.32,0.68l-3.03,-0.5l-0.96,0.54l-0.13,0.58l1.44,1.65l-1.57,1.62l-5.45,1.42l-9.09,-0.02l-2.46,0.66l-0.29,0.44l0.04,1.64l-3.27,0.83l-3.94,-0.06l-3.96,-1.23l-1.26,-0.61l-2.49,-2.54l-4.09,-2.41l-1.35,-0.4l-5.12,-0.48l-3.93,-1.48l-13.62,-0.81l-9.38,-1.11l-5.78,0.37l-11.89,-1.13l-6.48,-1.01l-2.2,-1.4l-4.23,-0.33l-3.74,-1.65l-0.99,0.67l0.04,1.68l-0.53,0.78l-8.47,0.6l-1.75,-0.73l-1.39,-1.73l-1.98,-1.75ZM223.36,1764.78l0.41,-1.63l0.01,-2.33l2.4,3.07l0.1,0.59l-0.52,0.26l-2.4,0.04Z\",\n            name: \"Tierra del Fuego\"\n          },\n          \"AR-W\": {\n            path: \"M650.51,343.95l1.86,-3.66l0.54,-3.01l-0.08,-2.13l1.95,-3.92l0.57,-1.94l-0.17,-4.7l1.11,-6.42l-1.11,-3.85l0.4,-2.79l-0.39,-3.52l0.39,-1.57l0.84,-1.2l0.68,-0.31l2.61,-0.08l1.63,-0.44l2.59,-2.09l0.9,-1.52l1.6,-6.2l-0.09,-3.69l1.16,-3.37l0.1,-2.84l-0.85,-3.64l-2.27,-4.51l-0.08,-3.11l10.25,-7.13l6.44,-2.51l12.21,-1.03l4.97,0.61l4.76,-0.48l14.06,3.39l8.83,4.1l1.34,0.13l4.53,-0.63l2.13,0.26l1.43,1.25l3.03,0.93l2.71,1.63l3.2,0.16l1.58,-0.33l4.55,-2.4l1.57,-0.62l1.5,-0.15l1.42,0.56l2.73,2.64l1.99,1.08l1.84,-0.38l2.25,-1.7l3.01,-0.85l2.77,0.39l3.75,4.71l1.51,1.15l1.66,0.58l1.7,-0.47l1.45,-2.71l1.76,-2.18l0.57,-1.1l0.2,-3.27l3.17,-1.24l1.76,-1.89l1.82,-1.15l2.1,0.27l3.85,1.3l-0.77,0.8l-0.68,1.75l-0.13,2.96l6.53,12.97l0.97,3.32l0.56,5.87l0.31,0.71l2.31,2.66l0.8,2.74l1.26,1.89l4.9,3.63l-2.41,2.13l-2.91,0.98l-1.27,1.2l0.42,1.49l3.57,1.6l0.89,1.5l-0.57,2.14l-0.66,1.13l-0.3,0.21l-0.21,-0.93l-0.93,-1.05l-4.87,-0.96l-2.28,0.85l-0.94,0.79l0.27,1.79l-0.11,2.48l-5.01,1.62l-0.51,0.87l-0.02,3.58l-0.74,0.99l-2.84,1.96l-3.65,4.66l-1.4,0.9l-2.13,0.4l-1.13,0.59l-0.44,0.92l-0.27,4.11l-0.9,1.55l-3.17,1.89l-0.87,1.92l-0.23,2.97l-0.46,0.75l-3.66,1.08l-1.66,0.83l-3.21,2.57l-1.61,2.52l-0.32,1.53l0.26,0.68l-1.59,3.59l-3.69,2.46l-0.56,0.97l-0.09,1.31l-1.06,0.97l-0.51,1.46l-3.47,2.93l-0.7,1.14l-2.43,2.12l-0.66,1.73l-1.84,2.35l-4.03,3.98l-4.76,0.59l-1.94,0.7l-1.43,1.18l-0.91,1.92l-0.69,6.33l-3.87,2.89l-4.24,5.13l-1.83,1.21l-3.69,0.63l-0.68,0.62l0.75,3.5l-0.3,1.76l-0.91,1.47l-8.89,7.74l-1.24,1.47l-0.65,1.92l0.21,2.25l2.67,4.92l0.55,1.88l-1.92,-1.43l-5.23,-5.13l-2.18,-3.95l-0.82,-3.98l-0.61,-1.08l-4.76,-4.04l-2.64,-4.38l-1.55,-1.17l-8.77,-2.31l-3.05,-0.05l-2.94,-1.48l-2.16,-0.02l-6.56,2.67l-4.47,1.0l-5.91,-1.11l-4.31,2.33l-3.04,2.75l-3.22,1.77l-4.15,-1.46l-2.41,-0.35l-3.13,0.68l-2.0,-0.52l-3.14,1.16l-3.78,0.19l-0.28,-1.73l0.97,-3.31l0.41,-3.68l1.62,-3.24l0.34,-1.91l-0.19,-1.9l-1.41,-4.08l-1.56,-2.58l-0.32,-1.38l0.32,-1.24l1.71,-3.39l1.63,-6.73l0.1,-10.11l1.85,-7.36l0.63,-1.33l2.04,-1.93l5.71,-2.26l3.81,-3.1l2.77,-1.58l0.87,-1.56l0.15,-4.76Z\",\n            name: \"Corrientes\"\n          },\n          \"AR-T\": {\n            path: \"M387.48,287.37l-0.86,0.2l-0.46,0.53l-1.35,3.98l-0.37,0.72l-0.8,0.47l-2.26,-0.06l-2.5,1.13l-1.19,0.1l-1.52,-0.63l-3.14,-2.25l-1.1,-0.01l-3.78,2.25l-2.98,2.59l-2.81,4.29l-4.12,-4.98l-1.83,-6.33l-2.58,-1.5l-0.91,-0.04l-2.04,0.81l-1.04,-0.98l-1.24,-4.07l-2.31,-2.06l-2.55,-10.74l0.42,-1.24l-0.27,-0.74l-2.12,-0.5l-3.7,-2.03l-2.56,-0.39l-1.15,-0.6l2.02,-3.67l3.32,-3.24l1.62,-3.26l5.71,-5.93l1.28,-2.04l0.75,-2.04l0.0,-3.42l0.79,-3.81l-0.14,-1.63l-0.99,-1.33l-2.04,-0.96l-5.15,-4.26l-2.24,-0.86l-1.86,-0.33l-1.22,-1.28l-0.13,-1.7l2.21,-5.72l0.29,-2.78l1.63,-2.05l0.34,-0.89l12.98,2.17l1.6,0.08l0.8,-0.33l0.82,-1.41l-0.03,-2.88l0.59,-2.06l0.16,-3.54l0.47,-0.72l3.8,1.28l1.71,-0.07l4.48,0.99l1.05,-0.1l2.53,-1.38l2.04,-0.65l1.56,3.45l1.14,1.14l8.69,3.41l1.99,-0.06l2.29,1.34l1.1,0.3l2.15,-0.3l2.38,-1.76l3.52,-0.97l3.16,0.64l9.17,-0.21l0.05,4.33l-1.77,6.18l1.13,8.6l-0.05,2.48l-2.64,-0.41l-0.97,0.31l-1.82,5.56l-1.85,0.33l-0.55,0.38l-2.43,8.88l-0.59,1.16l-0.85,0.58l-0.7,1.09l-1.35,5.26l-1.33,3.29l-1.04,1.46l-0.98,2.76l-0.43,0.54l-1.12,0.22l-1.09,0.88l-5.6,6.21l-0.01,0.52l0.98,0.72l1.59,0.4l1.61,0.84l-1.39,1.89l-2.45,0.45l-0.69,1.71l0.08,1.26l3.04,6.99Z\",\n            name: \"Tucum\\xe1n\"\n          },\n          \"AR-U\": {\n            path: \"M74.24,1095.36l0.74,-0.99l-0.19,-1.76l1.28,-1.3l0.36,-2.29l1.6,-0.22l2.51,-0.92l1.92,0.37l0.86,-0.79l0.13,-2.24l-0.36,-1.8l0.64,-2.09l-0.48,-1.17l-0.9,-0.61l-4.23,-1.59l-6.72,-0.72l-1.91,-0.78l-1.8,-1.41l-1.43,-1.9l-0.81,-2.23l1.61,-7.36l-0.39,-7.88l-0.91,-3.43l0.43,-1.87l-0.74,-1.65l0.21,-1.76l0.84,-1.35l1.26,-0.97l2.26,-1.06l0.34,-0.81l-1.63,-2.82l0.64,-3.54l-0.53,-1.18l-2.26,-1.95l-0.46,-1.16l0.34,-1.11l2.95,-3.55l0.86,-2.85l1.16,-0.92l1.11,0.03l1.19,2.06l1.6,0.72l0.82,-0.38l1.06,-1.43l3.67,-0.72l2.43,-1.46l0.75,-1.45l-0.15,-2.82l-0.91,-1.33l299.13,0.03l3.05,0.54l2.15,4.29l1.52,1.9l1.77,1.56l3.53,2.16l2.17,0.15l3.38,1.7l4.11,0.41l2.09,1.31l3.21,-0.76l1.98,0.46l0.51,0.6l-1.91,1.26l-3.8,5.1l-0.41,1.76l0.61,0.94l1.44,0.3l3.54,-0.25l1.92,0.84l3.17,-0.28l2.72,-1.0l8.42,0.52l1.2,-0.28l2.23,-2.35l0.41,-0.98l-0.33,-1.89l0.61,-0.95l-1.09,-3.03l-1.23,-0.56l-2.04,-0.24l-4.94,0.21l-2.31,-0.24l-1.2,-0.68l0.75,-0.36l6.59,-0.84l5.56,-2.82l3.67,-2.39l3.87,-1.59l2.63,-0.7l1.67,0.37l1.53,1.39l0.97,1.51l1.84,5.06l2.23,2.05l0.94,1.83l0.32,2.14l-0.31,5.49l0.81,8.17l-0.55,2.1l-1.86,4.44l0.52,2.04l-2.11,2.54l-2.82,1.18l-9.2,1.89l-3.8,0.15l-2.06,0.9l-1.51,0.25l-2.23,-1.85l-2.36,-3.01l-1.57,-0.86l0.01,-0.99l1.42,-5.08l0.84,-0.5l0.18,-0.58l-0.3,-0.48l-2.59,-2.01l-1.67,-0.81l-1.31,-2.38l-3.01,-1.4l-2.29,-0.58l-4.88,-0.04l-4.46,0.86l-2.25,1.39l-2.18,0.65l-3.08,3.43l-5.24,1.05l-1.3,0.87l-1.56,2.81l-1.38,1.36l-0.4,0.96l0.3,1.56l0.75,0.92l1.96,0.53l1.52,1.04l2.86,0.82l5.48,2.42l4.15,2.96l2.58,0.87l3.95,-0.17l3.26,2.15l1.28,-0.03l3.72,-1.34l0.51,1.24l-0.99,1.24l-5.32,3.18l-5.26,1.92l-9.01,2.37l-8.18,5.1l-2.33,2.43l-1.82,1.05l-0.53,1.39l0.49,3.05l-0.24,0.77l-5.18,4.47l-2.47,3.76l-3.02,2.34l-2.48,4.15l-0.23,0.76l0.09,3.3l1.14,2.59l-0.51,2.89l1.05,1.15l0.9,2.66l0.15,3.58l0.9,0.49l0.88,-0.05l-0.86,0.93l0.43,2.06l1.08,0.86l0.52,0.04l-1.03,1.02l-0.38,1.24l0.18,1.64l0.78,1.05l-2.73,0.8l-0.85,0.74l-0.57,2.06l0.17,2.35l1.6,1.85l0.16,1.59l0.48,0.41l-0.05,0.96l0.54,0.64l1.03,0.16l0.11,1.11l-0.7,0.99l-1.05,0.22l-0.46,0.84l-0.69,0.46l-0.2,0.81l-0.78,-0.01l-0.15,0.98l-0.9,0.66l-0.01,0.83l0.7,0.32l-0.38,0.76l0.11,0.45l0.77,0.39l0.76,-0.2l-0.09,0.68l-0.79,0.15l-0.52,-0.64l-0.53,-0.07l-1.83,0.54l-0.28,0.55l0.38,0.86l-0.5,0.01l-0.68,0.71l0.07,0.81l0.47,0.47l-0.45,0.59l-0.33,-0.65l-0.77,-0.31l-1.77,0.27l-0.49,0.56l-0.03,0.76l-3.26,1.11l-1.55,1.49l-1.03,-0.16l-2.02,1.41l-2.06,2.67l-0.46,1.24l-0.19,3.22l-1.25,1.09l-0.02,2.28l0.58,1.25l2.01,0.69l0.66,0.66l1.4,-0.27l1.36,0.72l1.24,-0.09l1.79,1.32l-1.76,1.49l-0.83,-0.02l-0.79,0.77l0.12,1.11l0.57,0.6l-1.01,-0.23l-0.47,0.46l-0.05,0.5l0.62,0.83l-1.3,0.77l-1.87,-0.13l-0.45,0.72l-2.55,-1.89l-2.3,0.22l-0.72,0.61l-0.1,-1.08l-0.95,-0.89l-2.26,0.29l-0.27,0.36l0.01,1.35l-1.74,0.51l-1.01,-0.3l-0.94,-1.07l-1.66,-1.15l-1.21,0.05l-2.9,-0.86l-2.75,0.42l-1.38,-0.19l-3.78,3.49l-1.36,-0.61l-1.76,-0.05l-6.8,2.6l-1.23,1.15l-0.19,1.55l0.3,0.41l2.65,0.77l-0.33,0.43l-4.98,-1.56l-0.45,0.39l-0.02,1.53l0.32,0.4l1.91,0.39l0.73,0.84l-0.04,0.73l-6.25,-0.06l-8.98,1.17l-2.94,1.26l-3.65,2.69l-2.51,2.58l-7.18,10.04l-2.06,1.77l-1.71,2.27l-1.2,0.81l-1.14,2.74l0.09,2.67l0.79,0.82l-1.22,0.81l-0.26,1.55l0.28,1.08l-1.35,0.16l-2.65,1.91l-0.92,2.16l-1.43,1.01l-1.93,3.08l0.48,1.4l-0.91,0.49l-1.03,1.65l-182.45,-0.03l1.07,-1.33l-1.34,-3.72l-1.28,-1.4l-4.03,-1.91l-0.22,-0.74l0.59,-1.58l0.05,-1.11l-2.2,-2.58l-0.06,-0.96l0.88,-1.62l-0.32,-1.24l0.22,-1.39l1.8,-2.7l-0.18,-0.66l-0.73,-0.71l0.52,-0.97l1.48,-0.82l3.23,-0.71l3.46,0.22l1.71,-0.28l1.82,-1.21l0.66,-1.28l-1.4,-3.8l5.29,-2.11l3.55,-4.04l-0.17,-2.11l-2.16,-3.46l-3.92,-2.85l-1.67,-1.93l-1.23,-3.16l-1.81,-3.35l-1.58,-1.64l-5.26,-0.35l-2.52,-2.28l-1.16,-0.31l-4.87,1.09l-5.37,-2.35l-2.7,-0.08l-0.23,-0.59l0.29,-2.8l-0.63,-2.89l0.43,-0.93l0.98,-0.26l2.67,0.96l6.14,1.03l1.21,-0.22l1.96,-1.68l0.92,-0.14l3.93,1.32l2.0,0.11l4.24,-1.66l1.82,-0.39l1.66,0.47l3.59,2.23l1.94,0.54l1.91,-0.33l1.84,-1.2l1.18,-1.8l0.32,-2.13l-0.43,-2.88l0.23,-0.96l1.85,-2.76l1.8,-0.22l0.88,-0.65l0.54,-1.36l0.01,-1.2l-1.52,-1.95l-0.77,-2.65l-0.79,-0.88l-1.18,-0.62l-3.51,-0.24l-6.86,-1.21l-9.23,0.06l-2.27,-0.5l-2.05,-0.01l-1.99,0.52l-1.67,0.03l-1.51,-1.25l-0.1,-0.62l2.2,-1.24l0.47,-1.28l-1.23,-2.62l0.14,-0.82l0.94,-1.57l0.09,-1.3l-1.77,-3.35l-0.56,-1.75l0.76,-0.53l1.87,-0.52l1.59,-1.29l4.18,-5.76l0.51,-1.19l0.0,-0.91l-2.62,-3.98l-2.01,-1.58l0.42,-1.78l-0.33,-1.56l-0.68,-0.11l-1.35,0.57l-0.5,-0.21l-0.11,-0.6l0.6,-1.49l3.39,-1.51l0.94,-0.94l0.27,-0.87l-0.49,-3.88l-4.09,-3.44l-3.22,-0.3l-0.19,-0.43l0.99,-1.43l-0.04,-1.37l-0.6,-0.95l-1.81,-0.79l-1.46,0.39l-0.35,-0.3ZM360.8,1184.57l-0.53,0.11l-0.08,-0.09l0.14,-0.11l0.47,0.09Z\",\n            name: \"Chubut\"\n          },\n          \"AR-R\": {\n            path: \"M78.12,963.56l5.64,0.33l3.1,0.69l4.93,0.08l8.74,3.09l2.89,0.31l3.81,-0.76l3.17,-1.65l4.88,-5.74l0.82,-2.29l-0.35,-1.4l-1.38,-1.87l-2.53,-1.55l-0.43,-0.7l-0.01,-1.26l2.2,-2.7l2.08,-0.64l0.79,-0.65l0.78,-2.14l1.14,-1.11l2.22,-0.98l2.29,-0.38l2.54,-1.55l4.16,0.66l1.89,-0.42l1.68,-0.8l3.11,-2.82l1.51,-0.51l0.83,0.29l1.59,1.53l1.75,1.1l1.93,-0.04l3.5,-0.97l4.06,0.05l1.28,-0.78l1.41,-3.7l1.64,-0.01l2.23,-1.37l0.62,-1.36l0.34,-5.25l2.96,-6.54l-0.03,-2.4l0.62,-2.25l0.3,-3.12l0.93,-2.4l0.2,-1.84l0.87,-1.18l11.81,-6.53l2.05,-0.25l4.21,0.42l1.22,-0.26l1.14,-0.68l5.84,-4.99l2.44,-3.17l1.27,-2.27l1.59,-1.46l2.7,-1.2l2.8,-1.74l3.12,-0.27l4.21,-2.0l2.86,-4.29l2.91,-1.81l1.65,-4.22l1.31,-0.96l0.94,-1.33l1.87,-0.76l1.55,-1.16l3.04,-4.46l2.68,-1.85l1.5,-0.32l1.49,-0.75l3.0,-3.35l2.22,-0.99l1.76,-1.46l1.21,1.11l1.6,0.68l1.85,-0.69l2.78,0.73l1.64,0.02l4.92,-1.15l0.31,-0.38l-1.06,-0.64l-0.17,-1.98l-0.61,-1.41l-5.85,-8.48l-3.05,-3.21l-0.19,-1.0l0.12,-57.28l17.51,2.19l1.84,0.88l2.55,2.56l1.59,3.27l0.05,2.24l-0.56,1.8l-1.01,1.37l-3.02,1.95l-1.58,1.42l-1.03,1.93l-0.25,2.45l0.18,1.09l0.82,2.27l0.63,0.63l1.61,0.74l1.72,-0.38l1.59,0.61l1.2,1.19l2.47,4.77l1.2,1.61l1.54,1.37l2.0,0.87l3.45,-0.2l1.21,-0.56l3.46,0.43l1.24,-0.33l2.0,-1.19l3.7,-0.68l1.71,0.41l0.35,0.51l0.31,2.55l1.08,2.82l3.1,3.89l5.33,2.6l2.06,0.41l1.41,0.97l3.19,0.63l3.09,2.01l2.49,0.54l1.53,0.69l1.32,1.09l0.99,1.38l0.86,3.96l0.81,1.2l7.79,1.73l2.07,0.03l5.92,-0.95l11.44,1.34l4.07,1.42l2.49,0.36l1.74,1.09l2.52,0.15l1.49,0.98l1.97,-0.45l2.62,-1.68l1.09,-0.08l2.24,0.4l3.89,1.44l2.78,1.45l2.43,-0.74l2.35,0.07l6.62,-1.15l6.35,0.0l1.38,0.79l3.13,-0.46l1.63,0.39l0.77,-0.35l12.47,2.17l3.19,0.09l14.59,5.01l4.03,2.34l2.13,0.34l4.47,4.77l1.12,0.52l3.05,0.64l1.6,0.82l1.18,1.06l1.93,2.66l1.73,0.78l5.83,3.68l1.4,1.25l1.84,0.69l3.68,0.35l0.05,73.33l0.35,0.4l9.22,1.06l3.43,1.27l3.5,2.92l2.4,2.82l2.28,1.62l2.67,2.48l2.27,4.05l0.25,0.96l-2.54,2.25l-3.11,0.76l-5.38,2.56l-1.98,0.4l-9.78,-0.37l-3.06,0.7l-4.32,-0.36l-6.41,0.36l-7.06,-0.11l-1.94,-0.41l-1.83,-0.88l-4.6,-3.99l-2.01,-0.82l-2.13,-0.09l0.48,-1.39l-0.52,-0.89l-3.53,0.83l-1.68,-0.4l-10.93,-5.26l-6.14,-1.51l-4.24,-1.97l-4.13,-0.87l-2.25,-0.16l-3.13,0.29l-2.23,-0.38l-0.01,-0.31l0.59,-0.39l1.01,-0.29l0.32,0.06l-0.11,0.52l0.43,0.48l1.09,-0.36l3.59,-0.15l0.59,-0.82l-0.39,-1.11l-1.83,-0.88l0.91,-0.85l-0.06,-0.63l-1.24,-0.76l-4.26,-0.93l-2.66,0.28l-1.7,0.67l-0.53,0.4l0.2,0.71l2.49,-0.19l-0.33,0.74l0.51,0.78l-3.66,-0.08l-5.15,3.65l-0.53,0.62l-0.14,1.75l-1.3,2.6l-0.56,2.59l0.03,2.25l1.28,9.16l1.8,6.37l0.11,1.74l1.97,6.38l2.52,2.53l0.61,1.5l-0.46,3.2l-1.6,4.26l0.49,2.19l1.26,2.98l-0.07,1.79l-2.66,6.13l-0.7,2.37l0.21,2.05l0.37,0.79l-2.57,-0.45l-299.79,-0.03l-0.31,-0.44l0.27,-2.53l-0.89,-3.89l-2.83,-4.42l-0.09,-2.02l-0.54,-1.93l-2.49,-3.27l-0.0,-1.33l2.69,-1.93l0.58,-1.33l-1.56,-2.92l0.38,-4.05l-1.09,-3.74l0.07,-1.6l1.3,-4.67l-0.71,-3.66l0.8,-0.74l0.8,-4.82l0.03,-1.31l-0.63,-1.94Z\",\n            name: \"R\\xedo Negro\"\n          },\n          \"AR-S\": {\n            path: \"M528.52,529.21l1.07,-1.61l0.24,-1.8l-0.37,-0.81l-0.98,-0.87l-0.88,-4.71l-1.39,-1.62l-3.19,-2.3l-1.27,-2.26l-1.61,-4.88l-2.75,-1.64l-3.46,-3.53l0.28,-5.04l1.27,-3.64l-1.43,-2.79l-0.32,-3.61l0.25,-3.26l-0.91,-1.91l0.54,-0.91l3.8,-3.26l0.88,-1.84l11.55,-40.84l0.4,-2.9l-2.22,-3.25l-9.94,-10.6l-0.34,-1.79l12.12,-73.96l6.97,-44.56l127.65,-0.05l-0.41,1.59l-1.83,2.36l-1.27,0.8l-1.31,0.35l-2.71,0.09l-0.93,0.4l-0.75,0.77l-0.72,1.71l-0.15,1.87l0.38,2.64l-0.4,2.85l1.11,3.81l-1.1,6.31l0.17,4.71l-0.52,1.71l-2.0,4.05l0.07,2.21l-0.52,2.88l-1.89,3.66l-0.12,4.81l-0.64,1.16l-2.68,1.51l-3.77,3.07l-4.37,1.56l-2.63,1.69l-1.7,2.65l-1.62,5.89l-0.29,1.75l-0.09,10.0l-1.6,6.62l-1.68,3.31l-0.4,1.48l0.41,1.85l1.54,2.52l1.38,4.0l0.16,1.72l-0.3,1.61l-1.62,3.25l-0.43,3.76l-0.99,3.43l0.76,4.66l1.7,3.79l-0.45,6.31l-0.95,2.41l-0.64,4.66l-2.64,4.65l-5.49,7.31l-7.19,11.65l-2.83,2.87l-1.37,4.11l-3.15,4.48l-1.8,0.94l-0.87,1.18l-1.39,0.98l-4.42,5.8l-2.74,2.57l-2.55,1.13l-5.88,0.11l-2.16,0.92l-0.39,1.02l0.11,1.76l-1.01,4.22l-2.06,3.46l0.11,2.8l2.3,3.8l0.17,0.91l-2.03,4.32l0.23,4.96l-1.33,5.01l0.09,5.02l-1.64,4.31l-0.04,2.08l2.74,5.02l0.33,4.55l1.06,3.91l2.44,4.83l1.6,1.84l1.55,4.2l2.7,3.23l4.64,2.65l2.0,2.47l2.41,1.65l0.71,0.9l-0.38,1.65l-2.53,1.52l-0.51,3.47l-2.63,2.23l-0.75,3.98l-1.79,3.7l-1.3,0.95l-1.81,0.42l-0.98,-0.12l-1.03,-0.41l-1.54,-1.42l-2.17,-1.37l-4.66,-0.18l-3.07,-1.17l-1.59,0.1l-1.76,0.64l-0.85,0.85l-0.53,1.34l0.35,1.62l-1.46,2.03l-33.62,35.39l-50.72,0.27l41.76,-63.64l1.12,-1.37l1.77,-0.12l1.7,-1.09l1.67,-1.62l0.71,-1.28l0.43,-2.64l-0.04,-3.07l1.06,-2.96l-0.02,-1.4l-0.56,-1.2l-1.53,-1.33l-2.41,-4.45l-0.9,-0.51l-1.81,-0.38Z\",\n            name: \"Santa Fe\"\n          },\n          \"AR-P\": {\n            path: \"M514.39,40.24l-0.21,1.81l0.74,0.7l-0.36,1.2l0.87,0.54l0.67,1.3l1.25,1.36l0.44,1.09l1.46,1.16l2.17,2.91l1.32,2.44l0.05,2.06l2.27,2.69l5.08,3.04l1.37,1.79l2.02,1.43l0.68,0.89l0.35,2.22l0.65,0.62l2.52,1.78l3.27,0.42l2.23,2.29l1.39,0.42l-0.22,1.0l0.79,0.76l0.54,1.19l2.31,0.5l2.41,1.56l1.68,0.23l2.74,1.19l1.27,2.08l1.22,0.4l1.29,1.14l1.6,0.05l1.74,1.62l1.23,0.6l0.13,0.75l-0.46,2.14l1.14,1.63l1.27,0.76l0.66,0.82l1.6,3.02l1.92,1.36l1.9,-0.4l4.46,2.74l4.88,0.02l1.75,1.01l2.62,-0.06l1.43,0.62l0.99,1.84l1.91,0.18l2.33,1.42l2.79,0.53l1.95,-0.01l1.92,1.35l5.47,0.53l3.38,-0.1l3.28,-0.98l1.5,0.08l16.17,10.39l2.84,3.06l3.29,1.0l1.3,1.12l1.99,1.0l0.76,1.4l1.04,0.46l2.07,1.86l1.86,2.73l1.39,0.5l0.69,0.71l1.09,0.26l0.92,0.85l1.95,0.67l4.01,2.31l2.09,0.42l1.7,1.4l1.5,0.39l8.59,6.32l3.94,0.52l1.42,1.25l9.92,1.88l1.4,0.91l4.82,5.84l1.37,0.06l3.09,-2.46l0.58,-0.02l3.89,2.6l0.76,0.84l0.46,-0.02l3.04,1.49l1.83,0.0l0.86,1.46l5.03,0.5l2.6,2.78l2.53,1.68l1.48,3.16l0.98,1.29l1.29,0.86l1.47,4.02l2.77,2.1l0.81,1.1l-0.74,5.51l-1.51,0.91l-0.46,1.35l-1.81,-0.15l-0.42,0.25l-0.44,1.55l-2.77,0.7l-1.56,1.99l0.28,0.85l0.91,0.59l-1.62,1.44l-1.52,0.7l-0.03,1.34l0.62,1.51l-1.17,1.03l-2.07,1.04l-0.0,0.96l1.05,0.67l-0.42,0.72l-1.54,1.22l-0.46,0.87l0.25,0.56l1.8,0.51l-0.47,0.83l-5.15,3.73l-4.51,1.92l-0.56,0.64l-0.81,2.54l-1.14,-0.65l-0.53,0.43l0.23,1.11l1.8,1.46l-2.75,1.39l-0.01,3.33l-2.03,3.99l0.26,1.06l0.91,0.82l-0.85,1.07l-0.53,2.56l0.27,1.0l1.28,1.02l0.65,1.03l-1.08,1.01l0.57,1.74l-2.13,-0.38l-0.36,0.28l-0.47,1.61l-0.12,3.66l-1.52,0.25l-0.23,0.93l0.46,0.81l-0.29,0.3l-1.54,-0.33l-0.99,0.43l-0.52,1.5l1.5,1.73l-1.06,0.29l-0.81,-0.37l0.01,-0.99l-0.57,-0.57l-1.98,0.14l-1.3,-0.64l-0.77,-1.71l-3.1,-2.68l-1.13,-2.32l-3.77,-2.31l-1.75,-2.18l-0.85,-0.39l-1.46,-0.09l-2.28,-2.67l-3.17,-1.63l-3.17,-3.88l-2.26,-1.7l-5.13,-1.95l-2.73,-2.62l-1.24,0.15l-1.47,1.33l-2.49,0.96l-0.7,0.04l-1.56,-0.59l-1.22,0.23l-1.39,-1.61l-0.12,-1.42l-1.09,-1.76l-0.09,-1.93l-0.53,-0.76l-2.23,-1.0l-1.58,-0.03l-1.49,-0.43l-1.44,0.09l-2.41,-1.09l-1.76,0.01l-0.38,-5.51l-0.41,-0.36l-1.03,-0.14l-2.99,-4.16l-1.88,-1.78l-1.96,-0.95l-0.21,-1.68l-0.41,-0.63l-3.39,-1.88l-1.2,-1.58l-2.19,-0.6l-0.97,-1.78l-1.67,-0.4l-3.25,-1.48l-1.34,0.36l-0.55,-1.91l-1.3,-1.75l-0.8,-1.99l0.58,-1.01l-0.6,-1.42l-1.03,-0.52l-1.35,-0.18l-0.63,-1.82l-1.8,-0.99l0.27,-1.01l-1.03,-1.94l-2.93,-2.11l-1.69,-2.28l-1.64,-2.96l-1.38,-0.68l-1.45,0.1l-1.54,-0.95l-2.31,-0.74l-1.29,-1.21l-4.39,-2.61l-1.33,-0.48l-1.71,-1.7l-2.56,-1.59l-6.32,-5.22l-0.74,-0.22l-0.68,0.39l-0.43,-0.26l-1.1,-1.33l0.37,-1.81l-2.22,-3.47l-0.12,-1.51l-1.19,-0.58l-1.69,-2.31l-2.58,-0.99l-3.39,-0.16l-2.5,-0.84l-2.27,-0.09l-4.72,-4.38l-1.09,-2.2l-2.91,-0.37l-0.73,0.25l-2.22,-4.15l-3.34,-2.67l-5.64,-1.14l-3.65,-2.53l-1.12,-1.64l-0.93,-0.72l-4.4,-0.85l-9.46,-3.61l-0.1,-77.84l1.74,0.39l0.18,1.17l0.97,0.34l0.88,1.0l0.28,0.65l-0.87,1.64l0.15,0.9l1.8,1.04l0.87,0.16Z\",\n            name: \"Formosa\"\n          },\n          \"AR-Q\": {\n            path: \"M83.77,924.54l-2.81,-2.84l-0.87,-1.49l0.49,-1.18l-0.18,-1.17l0.61,-2.55l-0.51,-1.15l0.41,-0.48l1.27,-0.12l2.04,0.89l1.72,0.28l0.45,-0.29l0.59,-2.22l-0.46,-2.46l0.83,-0.79l2.07,-4.59l-0.3,-1.19l-2.17,-1.91l-0.59,-1.17l-0.34,-2.31l-0.99,-3.28l0.9,-2.73l-1.0,-1.76l0.08,-2.05l0.9,-1.46l2.83,2.48l0.93,0.22l2.13,-0.35l1.62,0.11l1.12,-1.03l0.22,-2.29l-1.81,-1.53l3.44,-4.98l-0.68,-1.92l0.04,-0.79l2.41,-2.02l0.51,-1.54l0.46,-4.41l-0.48,-7.16l-0.83,-3.95l0.67,-4.61l0.65,-1.19l1.23,-1.11l4.13,-2.02l2.0,-2.03l3.66,-0.64l4.62,-2.71l3.54,0.22l1.31,-0.28l0.8,-0.72l0.79,-1.4l1.76,-1.07l0.01,-0.78l-0.55,-0.95l0.08,-0.72l2.04,-3.04l0.2,-1.2l-0.77,-2.29l-4.56,-3.55l-0.99,-1.71l-2.05,-9.85l0.5,-3.53l-0.67,-3.14l0.7,-1.14l0.03,-0.78l-1.41,-1.97l-1.04,-2.97l-1.19,-2.0l-0.37,-2.3l-1.71,-3.05l-2.31,-6.85l-0.26,-3.26l0.72,-1.14l1.69,-1.18l0.43,-0.65l-0.03,-0.84l-0.59,-1.28l1.07,-4.13l-0.3,-1.35l-2.04,-2.7l-1.16,-2.43l-0.46,-2.43l2.63,-3.95l-0.02,-3.22l0.33,-0.98l2.1,-1.41l0.06,-0.67l-1.66,-1.31l-0.49,-0.7l-0.45,-2.55l-0.48,-0.7l-1.17,-0.68l0.93,-0.05l0.82,-0.52l0.52,-1.17l-0.38,-0.96l-1.1,-0.68l0.4,-2.01l-0.38,-0.66l-1.14,-0.69l-0.09,-0.57l0.82,-1.25l1.16,-2.89l0.25,-3.61l0.46,-0.39l0.63,0.06l1.63,0.92l1.27,-0.79l-0.52,-6.29l0.33,-2.3l0.72,-1.63l1.2,-0.28l1.85,0.39l1.77,-0.72l0.71,-1.09l0.31,-1.87l0.28,-0.53l0.53,-0.16l3.83,1.68l4.0,-0.97l0.75,-0.97l-0.01,-1.35l-1.03,-2.22l0.87,-1.72l0.03,-1.58l2.09,-1.0l1.72,-2.07l0.91,-0.54l1.0,-2.62l1.27,0.02l2.03,1.05l1.47,-0.01l1.87,-1.44l2.28,1.78l0.52,1.24l-0.03,2.59l-0.79,1.03l-0.27,0.98l0.23,1.92l1.03,2.21l0.55,0.57l1.01,0.32l1.61,-1.06l1.21,0.59l2.76,8.16l1.61,2.62l0.9,0.57l3.48,1.07l1.53,1.54l0.86,1.47l2.59,1.81l1.49,3.73l0.72,0.92l1.88,1.5l2.77,1.24l0.54,0.65l0.37,2.76l-0.26,1.98l-1.1,1.42l-0.15,0.79l0.34,0.84l3.24,3.91l1.62,1.39l3.74,2.17l4.23,1.11l2.51,0.15l7.91,-1.38l1.78,0.14l2.84,1.21l1.92,0.35l2.84,1.2l1.13,1.37l0.97,3.89l0.88,1.75l1.73,1.17l2.32,0.69l2.4,0.28l5.74,-0.48l0.75,0.33l1.67,1.8l1.16,0.71l1.9,0.0l1.96,0.73l2.98,0.04l0.71,0.27l1.96,3.29l1.64,1.42l7.85,1.02l-0.12,57.49l0.36,1.42l3.02,3.15l5.81,8.44l0.5,1.13l0.33,2.35l-3.6,0.85l-1.41,0.0l-2.95,-0.75l-1.93,0.68l-1.1,-0.55l-0.93,-1.04l-1.08,-0.11l-1.83,1.52l-2.32,1.07l-2.88,3.26l-1.37,0.69l-1.52,0.32l-2.9,2.0l-3.06,4.48l-1.38,1.02l-1.9,0.76l-1.13,1.49l-1.34,0.99l-0.56,0.87l-1.08,3.33l-2.88,1.78l-2.83,4.26l-3.88,1.81l-3.22,0.3l-2.88,1.78l-2.76,1.24l-1.78,1.64l-1.32,2.33l-2.36,3.07l-2.57,1.92l-3.11,2.92l-2.01,0.81l-4.14,-0.42l-2.28,0.29l-12.07,6.67l-1.11,1.53l-0.21,1.89l-0.94,2.46l-0.3,3.16l-0.63,2.27l0.05,2.28l-1.31,2.41l-1.66,4.17l-0.35,5.29l-0.44,0.98l-1.85,1.12l-1.96,0.18l-0.54,0.79l-0.97,3.03l-0.92,0.51l-3.8,-0.1l-3.63,0.99l-1.65,0.02l-3.02,-2.5l-1.3,-0.42l-1.94,0.66l-3.11,2.82l-1.53,0.71l-1.58,0.36l-4.35,-0.64l-2.66,1.55l-2.23,0.4l-2.43,1.08l-1.38,1.36l-0.71,2.03l-2.84,1.26l-0.73,1.21l-1.33,1.17l-0.43,1.17l0.12,1.19l0.57,0.97l2.6,1.62l1.24,1.68l0.26,0.97l-0.19,1.03l-1.1,1.68l-2.82,2.95l-0.81,1.46l-3.38,1.86l-3.53,0.72l-2.71,-0.28l-8.83,-3.11l-5.02,-0.09l-3.06,-0.68l-5.73,-0.34l0.71,-2.35l0.0,-1.27l-0.91,-2.36l-1.8,-2.46l-1.96,-6.73l3.57,-3.67l0.99,-1.74l0.28,-2.28l-0.61,-1.44l0.92,-1.72l1.9,-5.23l3.04,0.32l0.55,-0.56l1.83,-3.89l0.18,-2.16l-0.63,-1.04l-1.29,-0.45l-1.11,0.82Z\",\n            name: \"Neuqu\\xe9n\"\n          },\n          \"AR-N\": {\n            path: \"M796.09,266.4l2.14,-0.18l0.73,0.27l1.8,3.25l4.93,2.04l1.74,-1.34l1.59,-1.81l1.16,-0.86l2.12,-0.74l0.84,-0.92l0.54,-1.35l-0.1,-1.33l0.68,-1.66l-1.35,-3.43l1.73,-0.63l1.02,-2.62l3.36,-0.24l0.53,-0.96l0.36,-3.1l1.18,-1.58l1.53,-0.7l2.22,-0.3l2.11,-1.13l0.91,0.01l2.56,1.01l3.11,-0.17l0.87,-0.84l0.14,-1.24l-0.58,-1.78l0.23,-0.61l2.8,-2.71l2.94,-0.46l1.02,-0.47l1.16,-1.59l1.36,-3.94l0.62,-0.57l0.94,-0.23l1.86,0.0l1.07,0.51l1.24,-1.12l0.62,-2.5l-0.38,-3.31l0.98,-1.46l1.29,-1.03l1.83,-2.25l0.69,-3.83l0.91,-2.18l-0.05,-3.34l1.15,-1.86l-0.13,-0.91l-0.97,-1.57l0.9,-2.99l0.04,-1.19l-0.89,-3.93l0.34,-0.38l1.5,-0.2l0.63,-0.92l-0.34,-3.25l1.11,-2.25l0.12,-1.22l-1.37,-2.03l-1.13,-3.99l0.01,-1.05l1.59,-0.13l0.92,-0.5l0.05,-1.36l-0.66,-1.99l1.81,-0.04l0.56,1.62l1.24,-0.01l1.48,0.82l0.47,0.65l0.31,1.93l0.82,0.56l0.66,-0.39l0.22,-0.66l-0.19,-1.31l1.35,-1.07l0.41,-1.82l1.88,0.14l0.95,-1.08l1.22,-0.34l0.85,0.59l0.85,1.48l0.59,0.03l0.55,-0.94l2.15,0.18l0.36,-0.49l-0.86,-2.0l0.91,0.3l0.91,-0.1l1.97,-1.83l-0.8,2.4l0.18,1.1l1.2,1.35l0.64,0.09l0.54,-0.54l-0.09,-1.62l1.19,0.87l1.09,-0.39l1.19,0.51l0.47,0.58l0.75,3.0l0.44,0.28l1.04,-0.18l1.47,-0.88l0.26,0.24l0.9,2.59l-0.38,1.06l0.13,0.94l1.91,2.61l-0.06,3.65l0.53,2.53l-0.16,2.03l3.13,3.32l1.4,4.67l3.0,4.48l0.21,1.8l-0.48,1.44l-1.89,2.57l-0.45,1.55l0.51,5.94l-1.08,1.25l0.41,1.56l-0.65,2.22l0.13,3.57l-0.24,0.73l-0.96,0.34l-0.36,0.8l0.35,1.0l0.84,0.5l-0.24,1.48l0.93,0.47l0.98,4.4l-0.08,1.39l-2.48,5.67l-1.51,0.82l-0.18,2.65l-1.09,1.14l0.44,0.95l-0.39,0.8l-0.23,0.08l-0.9,-1.52l-0.77,-0.43l-0.83,0.42l-0.72,1.87l-1.5,-0.9l-1.0,0.28l-0.31,0.94l0.22,0.91l-0.5,0.12l-0.78,-0.39l-0.6,0.17l-0.64,1.23l-3.17,3.38l-1.41,0.16l-0.97,-0.33l-0.07,-1.09l-1.0,-0.73l-0.55,0.12l-2.51,5.33l0.03,1.29l-1.35,0.51l-0.95,1.7l-0.63,0.02l-1.69,-1.58l-0.44,-0.07l-0.21,2.25l-0.44,0.57l-0.27,-1.32l-0.67,-0.7l-2.71,-0.11l-0.74,0.18l-0.46,0.79l0.72,1.62l-3.81,1.2l-1.01,-1.38l-1.41,-0.22l-0.8,0.83l-0.92,2.29l-0.5,0.39l-0.36,-0.97l-0.91,-0.02l-0.43,0.48l-0.17,1.51l-0.35,0.24l-1.75,-0.02l-1.89,0.59l-0.4,-0.45l0.2,-0.75l-0.26,-0.54l-0.47,-0.21l-0.72,0.22l-1.16,1.12l-0.73,3.07l-1.84,0.34l-0.64,0.54l0.08,1.8l-0.63,3.38l-0.88,0.36l-2.27,1.95l-0.88,0.12l-2.44,-0.83l-1.02,0.38l-0.18,0.56l0.45,0.79l1.44,1.29l0.51,0.86l-1.24,-0.5l-1.79,0.19l-0.63,0.37l-0.4,1.34l-1.5,-1.01l-0.99,-0.22l-1.08,0.46l-1.18,1.6l-1.53,1.16l-2.51,-0.15l-0.84,0.88l-0.3,1.47l-1.92,0.79l-0.17,1.84l-2.48,2.98l-1.24,0.3l-0.67,-0.55l-0.93,0.22l-0.83,1.5l-0.99,0.79l-0.67,1.04l-0.41,-1.05l-1.33,-0.43l-1.07,1.07l-4.69,-3.45l-1.12,-1.67l-0.21,-1.44l-0.64,-1.39l-2.52,-3.11l-0.57,-5.87l-1.01,-3.47l-6.5,-12.87l0.01,-2.06l0.72,-2.08l1.38,-1.18Z\",\n            name: \"Misiones\"\n          },\n          \"AR-L\": {\n            path: \"M460.47,648.71l-0.2,224.1l-3.55,-0.34l-1.61,-0.62l-1.3,-1.19l-5.89,-3.72l-1.58,-0.68l-1.89,-2.61l-1.37,-1.21l-1.78,-0.9l-3.85,-0.99l-4.61,-4.87l-2.25,-0.39l-4.0,-2.33l-14.69,-5.04l-3.28,-0.11l-12.56,-2.19l-0.98,0.36l-1.46,-0.41l-3.07,0.45l-1.3,-0.77l-6.57,0.01l-6.61,1.15l-2.45,-0.05l-2.27,0.72l-2.44,-1.38l-3.97,-1.47l-2.5,-0.44l-1.37,0.13l-2.66,1.7l-1.55,0.38l-1.34,-0.95l-2.59,-0.16l-1.65,-1.06l-2.5,-0.37l-4.2,-1.45l-11.52,-1.34l-6.05,0.96l-1.92,-0.03l-7.47,-1.66l-0.4,-0.67l-0.32,-2.37l-0.59,-1.72l-1.11,-1.57l-1.48,-1.24l-1.71,-0.79l-2.41,-0.51l-3.1,-2.01l-3.24,-0.66l-1.32,-0.92l-2.14,-0.44l-5.1,-2.45l-2.92,-3.64l-1.19,-3.28l-0.16,-1.98l-0.69,-0.98l-2.23,-0.52l-3.82,0.7l-2.15,1.25l-1.0,0.25l-3.35,-0.44l-1.32,0.57l-3.27,0.19l-1.57,-0.7l-2.55,-2.79l-2.45,-4.74l-1.38,-1.39l-2.05,-0.79l-2.02,0.3l-1.29,-0.88l-0.74,-2.04l0.07,-3.21l0.91,-1.65l4.54,-3.29l1.16,-1.6l0.6,-1.93l-0.06,-2.62l-0.63,-1.77l-1.11,-1.79l-2.7,-2.71l-2.15,-1.02l-17.67,-2.21l0.03,-37.29l-0.36,-28.83l-1.64,-7.67l0.47,-5.34l0.58,-0.6l0.74,-0.31l142.32,0.09l0.66,-0.52l0.05,-50.79l76.1,0.02Z\",\n            name: \"La Pampa\"\n          },\n          \"AR-M\": {\n            path: \"M210.35,500.36l0.89,12.38l0.38,0.58l0.75,0.34l9.06,-0.12l2.35,-1.19l7.96,-5.16l1.53,-1.19l1.46,-1.7l6.4,-0.53l1.76,-0.77l2.13,-1.58l4.9,-1.21l1.43,0.03l1.46,0.89l1.53,1.72l0.52,1.78l2.93,1.79l2.14,2.35l4.37,0.68l6.5,-1.32l3.62,-0.08l0.99,-0.54l0.91,0.17l3.12,2.07l0.14,2.0l1.27,4.64l1.86,1.76l0.01,1.23l0.84,1.5l1.97,8.46l0.63,1.29l1.35,1.31l0.35,1.67l0.59,0.98l-0.71,1.38l-0.41,1.87l0.52,3.23l-0.68,0.58l-0.25,0.87l1.3,3.51l-0.28,1.96l0.54,1.71l0.36,4.49l-0.27,4.09l0.58,1.83l0.04,1.9l1.22,3.14l-0.09,3.29l0.46,1.23l4.32,6.94l1.21,1.34l1.4,4.43l1.07,1.79l1.62,5.02l3.9,3.02l0.48,0.8l0.54,2.44l1.91,1.69l0.65,2.28l0.73,1.2l-0.53,5.82l-0.43,0.51l-0.75,-0.36l-0.61,0.17l-1.04,2.1l0.46,5.93l0.45,0.92l-0.45,1.31l1.14,1.25l0.33,0.83l0.3,4.39l1.58,5.23l2.18,2.26l5.32,9.87l1.15,3.6l-0.19,4.39l0.97,3.49l1.06,2.28l-0.91,3.69l0.9,1.59l-0.61,1.91l0.61,3.94l-0.54,3.2l-0.18,4.55l-1.56,3.94l-0.52,5.16l-1.84,8.12l-0.36,3.74l-0.57,2.4l0.19,2.31l-72.86,-0.03l-1.05,0.4l-0.86,0.84l-0.61,5.85l1.64,7.67l0.36,28.78l-0.03,37.19l-7.51,-0.94l-1.35,-1.19l-1.36,-2.65l-0.86,-0.86l-1.0,-0.35l-2.94,-0.03l-1.92,-0.73l-1.89,-0.01l-2.47,-2.33l-1.05,-0.5l-5.92,0.46l-4.39,-0.87l-1.44,-0.93l-0.78,-1.53l-1.06,-4.09l-1.35,-1.6l-3.04,-1.3l-1.9,-0.34l-2.86,-1.22l-2.02,-0.18l-8.02,1.38l-2.29,-0.14l-4.06,-1.06l-3.54,-2.06l-1.52,-1.29l-3.37,-4.36l1.19,-1.72l0.14,-0.7l0.19,-1.78l-0.47,-3.0l-0.87,-0.96l-2.73,-1.21l-1.73,-1.38l-0.58,-0.73l-1.01,-3.01l-0.56,-0.84l-2.69,-1.92l-0.79,-1.39l-1.61,-1.62l-4.3,-1.56l-1.48,-2.4l-1.26,-3.25l-1.16,-4.39l-0.52,-0.79l-0.95,-0.69l-0.89,-0.12l-1.72,1.03l-1.14,-1.23l-0.7,-2.94l1.04,-1.85l0.03,-2.96l-0.7,-1.58l-2.45,-1.97l0.79,-2.14l1.07,-1.29l0.33,-0.9l-1.46,-3.98l0.3,-1.3l0.85,-0.81l0.16,-0.63l-0.41,-0.69l-1.26,-0.08l0.02,-1.43l2.84,-2.95l-0.25,-1.81l-2.66,-6.23l0.42,-2.6l-0.26,-3.06l0.4,-2.31l-1.68,-2.33l-1.12,-3.85l1.25,-0.51l0.66,-0.94l-0.68,-1.47l-1.6,-0.93l-3.75,-0.78l-0.68,-1.62l1.44,-2.28l7.19,-2.43l0.83,-3.67l-0.18,-3.65l0.83,-3.56l3.46,-7.89l-0.16,-0.88l-1.51,-1.87l1.66,-0.69l1.1,-1.74l0.49,-4.01l0.61,-1.62l2.69,-2.37l0.82,-1.12l1.58,-3.49l2.17,-1.78l0.43,-1.12l-0.26,-4.13l0.27,-0.97l0.61,-0.56l2.15,-0.38l3.73,0.7l0.48,-0.82l2.99,-1.23l0.4,-0.74l-0.38,-1.47l-1.6,-3.44l0.8,-5.46l-0.03,-2.52l-0.74,-1.64l-1.65,0.03l0.54,-3.99l-0.77,-4.96l2.45,-2.42l-0.06,-1.01l-1.53,-2.33l0.99,-3.66l-0.24,-1.52l0.22,-0.43l1.44,-0.77l0.47,-3.73l1.63,-2.18l0.38,-0.96l-0.04,-1.0l-0.82,-1.87l-0.36,-2.71l-1.24,-1.5l-3.15,-1.41l-1.79,0.22l-2.13,2.64l-0.72,0.14l-1.79,-3.5l-1.59,-1.28l-0.95,-1.39l0.78,-3.9l-0.83,-2.62l0.76,-1.16l1.38,-0.33l0.9,-0.66l1.15,-3.84l0.75,-1.36l0.05,-0.82l-0.81,-0.78l-1.8,-0.84l-1.44,-1.34l-2.33,-2.71l-0.67,-1.41l-1.13,-6.44l0.3,-1.38l1.39,-0.21l0.19,-0.6l-0.85,-1.25l-0.12,-2.78l-0.57,-1.16l-2.53,-1.63l-0.71,-1.34l0.13,-3.59l-0.39,-0.66l6.86,-1.03l1.73,-0.02l3.28,0.84l8.79,-2.02l5.65,-0.37l1.0,-0.62l0.64,-0.86l0.26,-1.31l-0.15,-2.83l0.8,-1.34l4.39,-1.58l2.72,-1.74l3.53,-0.08l2.19,0.4l1.35,-0.27l0.89,-0.72l1.01,-2.08l1.56,-0.55l1.38,-1.51l1.48,0.22l0.91,0.73l1.79,2.03l1.09,1.78l1.64,1.23l1.67,0.19l2.77,-0.44Z\",\n            name: \"Mendoza\"\n          },\n          \"AR-J\": {\n            path: \"M309.16,489.83l-10.9,0.57l-1.84,-0.38l-1.45,-0.98l-2.2,-0.47l-2.07,0.5l-3.73,0.24l-4.88,-0.99l-1.29,0.6l-0.92,1.13l-0.26,0.9l0.26,3.51l0.37,1.26l-0.97,3.81l0.15,9.26l-2.75,-1.82l-1.32,-0.28l-1.09,0.57l-3.61,0.07l-6.51,1.31l-4.02,-0.66l-1.85,-2.2l-2.8,-1.67l-0.44,-1.67l-1.7,-1.92l-1.67,-1.03l-1.79,-0.09l-5.11,1.24l-2.34,1.68l-1.53,0.66l-6.49,0.56l-3.12,2.97l-7.93,5.14l-2.21,1.11l-8.7,0.07l-0.42,-0.3l-0.97,-12.59l-0.69,-0.43l-2.78,0.46l-1.9,-0.4l-3.76,-4.62l-1.13,-0.88l-1.53,-0.33l-1.1,0.37l-0.99,1.3l-1.64,0.61l-1.16,2.24l-0.5,0.41l-1.01,0.23l-2.21,-0.4l-3.79,0.11l-2.85,1.79l-4.48,1.62l-1.1,1.6l-0.12,4.27l-1.46,1.11l-5.22,0.24l-8.74,2.01l-3.12,-0.84l-1.84,0.02l-7.33,1.18l-0.57,-0.65l-2.17,-0.82l-0.31,-1.05l0.09,-1.86l-0.8,-2.14l0.42,-1.92l-0.95,-0.95l-0.19,-1.67l-1.11,-1.34l-0.09,-0.58l0.39,-0.34l2.75,0.84l1.42,-0.17l0.52,-0.64l0.36,-1.78l1.14,-1.97l-0.1,-1.17l-0.61,-1.05l-1.92,-1.81l-0.92,-0.49l-5.05,-0.57l-1.96,-2.3l-0.56,-2.17l0.04,-2.31l-1.86,-2.38l-2.76,-5.68l0.49,-6.66l1.09,-3.41l-0.63,-2.91l0.99,-1.98l0.46,-4.49l2.46,-3.67l0.29,-0.2l0.53,0.24l0.5,1.97l0.65,0.81l1.07,-0.07l1.48,-1.57l0.43,-1.56l1.37,-2.33l0.64,-0.3l1.97,0.26l0.82,-0.56l-0.14,-0.85l-2.58,-2.58l-0.55,-1.44l0.88,-6.72l0.62,-1.68l1.31,-1.99l0.03,-2.68l1.82,-3.99l0.83,-3.79l0.82,-1.27l2.05,-1.34l0.44,-1.17l-0.2,-1.24l-1.12,-1.84l0.01,-0.5l0.8,-0.35l3.57,1.67l1.61,0.41l3.31,-1.18l2.48,-2.38l0.46,-0.96l0.52,-4.05l1.77,-1.33l0.72,-2.03l-0.64,-2.0l-1.5,-1.48l-1.86,-0.68l-2.3,0.12l-0.2,-0.51l1.67,-2.7l0.67,-1.96l0.56,-8.57l-0.66,-4.46l-1.57,-1.66l-0.36,-0.79l0.2,-4.09l-1.06,-4.74l-0.83,-1.61l-0.41,-2.45l-1.05,-2.08l0.09,-3.02l0.35,-0.81l2.33,-1.43l0.23,-1.08l-0.57,-0.79l2.89,-2.07l0.5,-1.19l3.9,-1.1l1.05,-1.31l0.38,-2.48l-0.48,-3.5l0.15,-1.82l1.55,-2.63l0.15,-1.33l1.28,-2.21l0.19,-1.03l-1.04,-4.34l0.11,-1.57l1.35,-2.94l0.9,-1.21l1.12,-0.7l0.29,-5.75l0.7,-2.36l2.64,0.67l2.07,1.04l1.26,0.0l1.84,-0.55l1.37,1.81l0.97,0.66l0.96,0.25l2.15,-0.2l0.61,0.27l6.55,5.31l1.21,1.26l1.25,2.83l1.38,4.75l3.79,3.51l2.07,4.82l2.12,1.82l0.59,0.89l0.2,0.83l-0.42,1.06l-1.49,0.65l-0.94,0.82l-1.19,1.98l-0.29,1.74l0.17,4.2l1.56,1.66l1.07,2.11l-1.49,1.48l-0.49,3.68l0.28,1.79l-1.81,3.41l-0.21,3.96l0.6,1.28l1.92,0.82l3.67,-0.85l3.29,0.69l3.22,-1.11l2.29,-0.41l4.23,2.11l4.92,-0.02l7.16,2.05l2.03,2.5l4.96,3.3l1.05,2.15l2.68,1.01l0.91,0.65l2.08,2.08l0.82,1.96l2.28,1.51l2.15,2.73l1.9,1.33l2.23,0.88l2.24,2.88l6.24,4.67l2.28,3.59l0.99,3.18l3.39,2.16l1.93,3.11l4.54,3.75l3.94,5.77l2.88,1.54l2.17,4.65l2.72,4.27l-1.66,5.53l0.3,1.71l2.31,2.01l-1.95,13.36l2.38,5.36l0.16,3.33l0.65,0.93l4.18,3.81l3.93,0.85l0.84,5.62l0.87,0.84l1.62,0.55l2.07,4.48Z\",\n            name: \"San Juan\"\n          },\n          \"AR-K\": {\n            path: \"M232.75,298.33l-0.09,-1.31l0.71,-3.13l-0.84,-2.6l0.93,-4.14l-0.25,-0.96l-0.68,-0.53l-3.22,-0.26l-2.97,1.7l-2.63,-0.95l-1.0,-0.06l-4.43,0.67l-4.29,1.34l-12.32,-0.96l0.54,-1.85l1.53,-0.8l0.4,-0.52l-0.69,-2.83l1.65,-1.84l1.21,-2.49l0.45,-1.4l0.05,-3.01l0.91,-0.91l1.62,-0.84l1.34,-1.4l2.21,-4.96l0.15,-3.57l0.37,-1.03l2.45,-3.67l2.04,-0.67l1.9,0.09l3.09,2.14l1.75,0.7l1.32,-0.11l0.75,-0.82l0.82,-2.04l1.63,-1.36l0.97,-0.36l3.27,-0.33l2.03,-0.85l2.06,0.03l0.44,-0.67l-0.03,-1.83l1.21,-3.54l-0.17,-1.67l-0.7,-1.41l-11.25,-15.44l-0.75,-1.98l-0.35,-2.39l0.06,-3.75l0.81,-3.48l1.24,-1.57l5.66,-4.31l0.64,-2.07l-0.37,-2.49l-3.12,-12.4l-0.56,-3.99l-1.09,-2.45l-1.65,-1.99l-0.01,-2.47l-0.35,-0.95l0.51,-0.99l-2.16,-2.99l-0.21,-0.74l0.1,-2.54l4.03,-12.09l0.68,-0.88l30.99,5.88l56.13,-0.56l0.94,1.78l0.68,4.41l2.26,3.47l-1.14,4.53l-0.0,1.51l-0.68,0.91l-2.51,1.67l-7.4,0.33l-3.05,2.22l-0.69,1.03l-0.22,1.82l0.06,2.09l0.62,2.35l4.67,7.07l3.61,4.41l0.68,2.14l1.5,1.78l1.75,4.02l5.68,6.05l1.36,0.28l1.3,-0.89l2.77,-6.14l1.8,-1.21l0.81,-1.61l0.72,-0.68l1.3,-0.3l1.4,0.26l2.62,2.97l1.72,0.91l-1.97,2.94l-0.3,2.81l-2.23,5.79l0.17,2.15l1.57,1.67l3.14,0.73l1.57,0.84l4.47,3.84l2.19,1.08l0.59,1.11l-0.0,1.39l-0.75,3.43l0.01,3.32l-0.66,1.79l-1.18,1.9l-5.75,5.99l-1.63,3.26l-3.31,3.23l-2.02,3.59l-0.13,0.88l1.65,1.05l2.99,0.58l3.22,1.82l1.81,0.27l-0.33,1.52l2.6,10.96l1.16,1.4l1.22,0.81l1.21,4.02l0.5,0.74l0.98,0.64l2.95,-0.78l2.28,1.3l1.73,6.19l4.43,5.28l1.03,0.05l1.37,-2.78l1.32,-1.7l2.88,-2.51l3.68,-2.19l1.05,0.35l3.51,2.4l1.41,0.25l1.74,-0.55l3.95,17.33l0.31,7.25l-0.26,2.72l-3.27,5.01l-1.23,0.89l-0.09,2.3l0.38,0.74l2.38,1.16l1.03,1.14l0.94,10.27l-0.19,4.1l1.98,14.39l2.01,4.7l4.63,8.08l-2.58,0.9l-0.73,1.82l1.35,11.56l-0.47,1.54l-8.71,9.04l-2.17,1.13l-9.3,2.54l-7.38,-14.39l-1.65,-4.53l-5.59,-12.25l-1.04,-4.78l-0.12,-4.39l-1.72,-3.32l-8.11,-7.72l-1.41,-0.75l-5.48,-5.41l-2.04,-1.35l-7.59,-3.39l-1.15,-0.89l-0.67,-1.18l1.87,-3.0l-0.01,-1.53l-2.79,-1.75l-1.43,-1.33l-1.55,-2.12l-0.37,-0.74l-1.02,-5.69l-1.03,-1.58l-1.5,-1.23l-1.67,-2.03l-8.83,-3.61l-9.02,-3.12l-1.65,0.07l-1.58,0.83l-2.48,2.77l-3.86,0.69l-3.26,0.1l-20.04,-0.93l-3.02,0.73l-2.23,1.35l-0.74,-2.03l-3.15,-4.21l-0.47,-1.61l-0.32,-2.63l0.14,-1.49l-0.31,-0.57l-1.7,-0.32l-5.64,1.75l-2.63,-2.36l-2.51,-0.78l-3.18,-0.17l-3.14,-3.23l-1.65,-0.41l-1.68,-0.01l-0.78,-0.45Z\",\n            name: \"Catamarca\"\n          },\n          \"AR-H\": {\n            path: \"M561.61,140.25l0.03,1.32l2.18,3.41l-0.41,0.74l0.08,1.12l1.37,1.71l0.78,0.42l1.13,-0.29l6.26,5.18l2.54,1.57l1.76,1.75l1.4,0.52l4.33,2.58l1.32,1.22l2.41,0.79l1.6,0.98l1.2,-0.14l1.29,0.49l1.57,2.87l1.74,2.36l2.91,2.09l0.89,1.66l-0.37,0.56l0.29,0.78l1.79,0.99l0.79,1.95l2.09,0.44l0.51,1.0l-0.55,0.69l-0.01,0.51l0.88,2.19l1.3,1.75l0.62,2.02l0.85,0.42l0.96,-0.49l3.12,1.44l1.51,0.32l0.98,1.79l2.21,0.61l1.12,1.53l3.33,1.82l0.18,1.48l0.42,0.82l2.02,1.0l1.76,1.66l3.06,4.24l1.24,0.37l0.17,4.68l0.42,0.97l0.95,0.38l1.15,-0.21l2.44,1.1l1.54,-0.08l1.47,0.43l1.53,0.02l1.92,0.87l0.31,2.27l1.11,1.82l0.14,1.46l1.75,1.99l1.49,-0.15l1.49,0.58l1.04,-0.05l2.69,-1.03l1.26,-1.21l0.92,-0.19l0.79,1.1l1.69,1.43l5.16,1.96l2.07,1.55l3.22,3.93l3.22,1.67l2.33,2.71l2.23,0.43l1.78,2.2l3.68,2.23l1.04,2.21l3.13,2.72l0.91,1.84l1.63,0.79l1.93,-0.12l0.2,1.32l-0.88,1.04l-2.82,0.84l-0.95,0.66l-0.42,0.88l0.09,0.64l0.57,0.63l-1.44,2.07l-0.3,1.47l-0.64,-1.02l-0.88,0.19l-0.84,1.33l-0.15,2.3l-2.21,0.39l-1.16,0.71l-0.65,0.99l-0.29,1.56l0.3,0.85l1.8,1.51l0.47,0.77l-0.1,2.98l-2.22,0.75l-10.56,7.48l0.09,3.58l2.31,4.63l0.8,3.44l-0.09,2.58l-1.18,3.45l0.1,3.61l-0.96,3.71l-127.8,0.05l-0.03,-89.7l-0.53,-19.44l-1.45,-4.11l-0.38,-0.27l-73.45,-0.1l47.55,-59.75l-0.12,-13.18l9.2,3.52l4.33,0.82l1.87,2.25l3.76,2.6l3.39,0.92l2.28,0.23l3.04,2.42l2.32,4.28l0.37,0.23l0.8,-0.26l2.57,0.23l0.94,2.07l4.94,4.56l2.52,0.17l2.45,0.83l3.43,0.16l1.63,0.5l0.94,0.69l1.32,1.95l1.03,0.42Z\",\n            name: \"Chaco\"\n          },\n          \"AR-F\": {\n            path: \"M178.38,317.96l4.15,-3.59l1.96,-2.46l0.94,-3.41l0.34,-0.27l1.66,0.93l1.12,0.06l2.45,-4.11l1.61,-3.73l0.93,-0.97l-0.07,-0.99l0.37,-0.6l1.09,-0.69l2.64,-0.69l1.41,-1.02l0.82,-1.44l1.67,-7.05l12.51,0.98l4.46,-1.36l4.31,-0.66l0.93,0.1l1.46,0.74l1.57,0.14l3.14,-1.77l2.39,0.32l0.38,0.53l-0.91,4.29l0.15,1.17l0.69,1.48l-0.78,3.64l0.34,1.31l1.19,0.72l3.14,0.34l1.34,1.22l0.98,1.43l0.97,0.65l3.3,0.21l2.32,0.72l1.62,1.76l1.09,0.64l1.1,-0.05l2.52,-1.1l1.38,-0.1l1.09,-0.48l0.98,0.16l0.21,4.17l0.53,1.82l3.2,4.3l0.49,1.64l0.82,0.82l0.9,-0.2l1.75,-1.24l2.75,-0.67l20.0,0.93l3.38,-0.1l4.05,-0.74l2.6,-2.83l1.46,-0.76l1.28,-0.01l8.81,3.07l8.71,3.56l1.47,1.86l1.45,1.18l0.94,1.42l0.97,5.55l0.49,1.01l1.59,2.17l1.53,1.43l2.62,1.56l-0.02,0.8l-1.93,3.21l0.12,0.77l0.72,1.02l1.42,1.11l7.59,3.39l1.92,1.28l5.44,5.38l1.4,0.73l7.97,7.57l1.6,3.03l0.11,4.34l1.08,4.95l5.61,12.29l1.66,4.54l7.46,14.55l-3.68,10.1l-1.89,3.42l-1.72,5.44l-0.42,2.27l-8.13,23.01l-0.62,3.11l0.33,39.14l-4.15,0.71l-2.09,-0.01l-2.76,-1.1l-3.92,-0.36l-2.4,0.56l-5.04,2.15l-2.23,0.22l-2.24,-0.21l-2.5,0.4l-2.65,-0.94l-2.95,0.28l-1.9,-0.89l-2.43,0.62l-2.99,-1.31l-2.93,-0.56l-1.08,-2.85l-1.19,-2.1l-1.0,-0.72l-0.94,-0.1l-0.51,-0.5l-0.87,-5.68l-0.68,-0.5l-3.5,-0.58l-4.51,-4.4l-0.11,-3.19l-2.35,-5.16l1.97,-13.47l-2.49,-2.41l-0.14,-1.22l1.65,-5.65l-2.82,-4.54l-2.26,-4.77l-2.93,-1.59l-3.93,-5.76l-4.53,-3.73l-2.01,-3.18l-3.3,-2.08l-0.86,-2.98l-2.44,-3.82l-6.31,-4.73l-2.3,-2.93l-2.31,-0.93l-1.74,-1.21l-2.14,-2.72l-2.21,-1.44l-0.8,-1.94l-2.18,-2.18l-1.17,-0.81l-2.4,-0.83l-1.05,-2.16l-5.0,-3.33l-2.11,-2.56l-7.5,-2.18l-4.84,0.04l-3.23,-1.82l-1.09,-0.31l-2.59,0.44l-3.04,1.08l-3.3,-0.7l-3.59,0.85l-1.42,-0.61l-0.43,-2.1l0.29,-2.42l1.8,-3.39l-0.27,-1.92l0.3,-2.88l0.27,-0.81l0.96,-0.49l0.44,-0.97l-1.17,-2.54l-1.48,-1.49l-0.2,-1.69l0.26,-3.68l1.42,-2.18l2.12,-1.15l0.55,-1.42l-0.27,-1.26l-0.75,-1.13l-2.02,-1.71l-2.11,-4.86l-3.7,-3.38l-1.35,-4.68l-1.27,-2.88l-1.41,-1.52l-6.67,-5.4l-1.0,-0.39l-2.82,0.01l-2.35,-2.48l-3.27,0.5l-1.9,-0.99l-2.5,-0.64Z\",\n            name: \"La Rioja\"\n          },\n          \"AR-G\": {\n            path: \"M385.58,272.81l5.29,-5.87l0.9,-0.74l1.2,-0.26l0.67,-0.82l1.02,-2.85l1.02,-1.42l1.36,-3.36l1.33,-5.23l0.57,-0.88l0.88,-0.59l0.71,-1.43l2.35,-8.68l1.7,-0.19l0.71,-0.55l1.74,-5.42l3.11,0.38l0.6,-0.44l0.15,-2.94l-1.12,-8.51l1.76,-6.1l-0.06,-4.82l0.31,-1.56l2.05,-4.26l0.38,-3.38l9.61,-20.4l0.73,-0.93l1.47,0.2l10.42,3.27l23.75,0.34l74.0,0.1l1.31,3.67l0.53,19.37l0.03,90.06l-16.8,104.57l-6.49,-16.03l-2.42,-1.68l-49.37,-0.25l-0.47,-2.06l-2.73,-0.7l0.13,-2.19l-0.47,-0.77l-0.83,-0.18l-2.04,0.33l-3.93,-1.07l-5.4,0.8l-3.46,-0.18l-1.96,-1.26l-3.52,-0.81l-0.99,-1.31l-3.32,-1.72l-0.74,-0.71l0.16,-2.29l-0.45,-0.59l-9.42,-2.43l-1.9,0.05l-26.33,6.44l-4.75,-8.21l-1.93,-4.47l-1.97,-14.3l0.19,-4.06l-0.8,-9.69l-0.56,-1.51l-3.37,-2.18l0.01,-1.81l1.21,-0.84l3.34,-5.16l0.31,-3.0l-0.32,-7.39l-4.0,-17.56l0.98,-0.37l1.63,0.17l1.57,-0.68l0.66,-1.11l1.28,-3.82l0.4,-0.39l0.83,-0.02l0.26,-0.42l-3.12,-7.57l-0.04,-0.97l0.51,-1.19l1.74,-0.1l1.02,-0.61l1.26,-1.99l-0.16,-0.71l-1.03,-0.69l-2.91,-1.06Z\",\n            name: \"Santiago del Estero\"\n          },\n          \"AR-D\": {\n            path: \"M280.68,494.41l-0.22,-3.66l0.39,-0.79l1.22,-0.83l4.87,0.98l6.27,-0.69l1.48,0.37l1.69,1.06l1.86,0.34l11.45,-0.59l3.03,0.58l3.09,1.33l2.5,-0.61l1.82,0.89l3.0,-0.27l2.71,0.95l2.55,-0.4l2.24,0.21l2.32,-0.23l5.17,-2.18l2.2,-0.52l3.7,0.35l2.9,1.12l2.22,0.01l4.48,-0.77l3.89,0.01l3.56,1.43l12.54,7.27l2.45,2.49l0.55,1.24l0.41,3.39l1.38,2.61l0.06,3.01l0.65,0.66l0.83,0.16l4.85,-0.51l5.34,-1.44l0.9,0.26l0.26,2.42l-0.29,3.96l1.36,2.82l0.81,3.16l-0.39,3.36l-1.01,2.21l-0.43,2.43l-1.32,1.66l-0.09,1.92l-0.86,1.77l-0.35,3.07l-1.87,3.5l0.31,2.36l-1.63,3.39l0.51,2.44l-0.34,0.39l-1.39,0.27l-0.83,0.5l-1.94,3.76l2.02,38.31l-0.04,103.88l-68.59,-0.07l-0.21,-2.17l0.57,-2.44l0.35,-3.69l1.84,-8.12l0.53,-5.16l1.56,-3.96l0.19,-4.61l0.54,-3.27l-0.6,-3.95l0.6,-1.9l-0.88,-1.56l0.87,-3.86l-1.09,-2.39l-0.95,-3.41l0.2,-4.33l-1.19,-3.76l-5.39,-10.02l-2.15,-2.21l-1.51,-5.05l-0.3,-4.42l-0.39,-0.99l-1.04,-1.1l0.46,-1.26l-0.46,-0.85l-0.47,-5.64l0.78,-1.62l1.06,0.33l0.97,-1.05l0.5,-6.4l-0.74,-1.22l-0.67,-2.34l-1.93,-1.72l-0.45,-2.22l-0.59,-1.02l-3.89,-3.02l-1.54,-4.86l-1.06,-1.77l-1.45,-4.55l-1.26,-1.42l-4.27,-6.86l-0.39,-1.07l0.11,-3.16l-1.26,-3.31l0.0,-1.74l-0.59,-1.86l0.28,-3.99l-0.37,-4.58l-0.53,-1.59l0.28,-2.03l-1.29,-3.53l0.92,-1.15l0.0,-1.3l-0.53,-1.98l1.13,-3.55l-0.65,-1.13l-0.4,-1.79l-1.39,-1.36l-0.54,-1.1l-1.1,-5.48l-1.02,-3.39l-0.67,-1.06l-0.01,-1.2l-0.94,-1.25l-0.96,-0.65l-1.22,-4.46l-0.27,-12.0l0.94,-3.5l-0.34,-1.67Z\",\n            name: \"San Luis\"\n          },\n          \"AR-E\": {\n            path: \"M584.61,484.16l0.06,-1.5l0.63,-0.59l1.97,-0.37l5.12,-0.06l2.88,-1.27l2.86,-2.68l4.37,-5.75l1.41,-1.0l0.77,-1.09l1.93,-1.07l3.24,-4.56l1.37,-4.14l2.81,-2.83l7.2,-11.67l5.49,-7.3l2.71,-4.79l0.66,-4.74l1.08,-3.33l0.34,-5.69l-1.73,-3.94l-0.3,-1.84l3.81,-0.2l3.11,-1.16l1.87,0.53l3.09,-0.68l2.22,0.32l4.61,1.48l3.46,-1.9l3.03,-2.73l4.04,-2.21l3.92,0.96l1.93,0.16l3.77,-0.77l7.36,-2.92l1.17,-0.04l1.15,0.21l2.33,1.33l3.12,0.07l8.63,2.28l1.65,1.46l1.22,2.57l1.04,1.35l4.67,3.95l0.66,1.43l0.66,3.43l2.3,4.16l5.33,5.25l2.72,1.96l0.56,5.19l-0.47,2.17l-3.3,0.48l-1.12,0.78l-0.34,1.2l2.16,3.21l0.33,2.11l-1.89,3.2l-0.63,2.32l0.29,3.47l-1.31,2.35l-1.43,1.3l-1.03,4.13l-3.19,2.18l-0.7,1.72l1.18,1.68l1.72,1.27l1.09,1.3l0.3,2.05l-0.39,2.1l-2.7,7.64l-0.37,0.57l-4.19,1.23l-2.01,1.89l-0.39,1.19l0.59,1.31l1.42,1.54l0.57,3.51l-0.58,4.03l-1.01,1.61l-0.23,1.3l0.56,1.14l3.04,3.84l0.42,1.3l-0.2,1.34l-2.84,3.9l-1.62,2.8l-0.91,2.38l-0.12,2.3l0.51,6.19l0.84,3.49l0.61,5.13l1.87,3.61l-0.97,3.92l0.56,3.48l-2.29,1.84l-1.54,0.15l-6.37,-0.99l-1.83,0.67l-0.75,1.02l0.16,0.89l0.62,0.26l-0.92,5.44l0.91,3.23l-2.05,1.73l-1.26,1.76l-0.9,1.95l-1.16,4.54l-0.17,2.11l0.3,2.22l-0.54,1.49l-0.39,3.79l0.43,3.31l0.78,1.73l2.8,4.03l0.95,5.97l-0.31,1.05l-2.15,0.45l-4.05,1.61l-1.98,-0.02l-1.74,-0.82l-4.57,-3.97l-3.17,-0.84l-3.22,-2.49l-4.98,-2.95l-6.02,-0.09l-1.56,-1.65l-1.43,0.14l-0.66,-0.51l-0.22,-2.26l-0.82,-1.11l-1.47,0.28l-0.53,0.6l-3.67,0.0l-2.08,-1.04l-1.67,-1.84l-1.9,-1.31l-3.95,1.06l-1.56,-0.31l-5.85,-3.01l-2.32,-3.04l-1.64,-1.34l-2.21,-1.06l-1.8,-0.44l-7.61,-5.08l-5.76,-5.79l-3.6,-1.91l-3.06,-3.38l-4.61,-2.62l-2.49,-3.0l-1.55,-4.21l-1.61,-1.85l-2.37,-4.69l-1.01,-3.75l-0.34,-4.62l-0.8,-1.92l-1.67,-2.41l-0.38,-1.53l1.8,-5.25l-0.08,-5.06l1.33,-5.05l-0.24,-4.87l1.78,-3.29l0.25,-1.07l-0.24,-1.32l-2.29,-3.76l-0.1,-2.26l2.07,-3.47l1.05,-4.37l-0.1,-0.6Z\",\n            name: \"Entre R\\xedos\"\n          },\n          \"AR-B\": {\n            path: \"M487.51,964.44l-0.33,-1.21l-2.38,-4.23l-2.77,-2.57l-2.26,-1.61l-2.4,-2.82l-3.59,-2.99l-3.75,-1.39l-8.91,-1.03l-0.06,-247.83l0.31,-72.01l0.37,-8.31l1.32,-1.45l73.41,-0.19l34.05,-35.66l1.62,-2.24l-0.32,-1.77l0.38,-1.02l0.65,-0.66l1.5,-0.52l1.37,-0.07l2.99,1.16l4.37,0.12l2.1,1.29l1.6,1.46l1.23,0.5l1.3,0.14l2.05,-0.49l1.66,-1.29l1.85,-3.85l0.7,-3.85l2.8,-2.49l0.35,-3.24l1.39,-0.54l1.03,-0.82l0.46,-0.79l0.1,-1.51l0.69,0.35l5.8,5.82l7.69,5.13l1.9,0.48l2.08,1.0l1.49,1.22l2.4,3.1l6.04,3.13l2.0,0.37l3.53,-1.08l1.63,1.12l1.81,1.94l2.41,1.16l3.9,0.0l0.77,-0.68l0.9,-0.21l0.57,3.04l0.94,0.75l0.81,0.21l0.64,-0.33l1.13,1.4l0.75,0.34l5.78,0.03l4.86,2.89l3.31,2.54l3.04,0.76l4.55,3.96l1.96,0.94l2.47,0.03l4.09,-1.63l2.04,-0.42l2.22,1.03l0.42,1.56l-0.35,4.41l0.59,1.63l-1.44,1.5l-0.59,1.37l-1.4,1.2l-0.7,0.18l-1.12,-0.4l-1.74,-0.08l-1.65,1.4l0.21,0.4l2.59,1.38l1.98,1.58l0.39,0.67l-0.7,1.36l-1.81,2.21l0.41,1.52l1.2,1.1l0.07,1.53l-2.88,2.41l-1.0,4.42l0.86,3.1l4.56,3.5l0.59,-0.13l1.67,-2.99l1.07,-0.92l1.75,-0.34l1.15,-1.37l3.16,1.98l2.06,1.74l1.67,0.83l2.79,0.4l1.43,0.79l2.71,0.69l1.67,1.93l1.39,0.49l2.81,-0.21l5.11,4.07l3.2,1.22l3.82,2.78l3.6,1.27l7.72,6.93l4.54,5.05l5.13,8.49l0.21,1.1l-0.7,2.03l-3.52,4.32l-5.89,8.27l-1.83,6.96l1.03,6.13l0.31,0.75l0.75,0.61l1.4,3.39l0.34,1.6l1.84,1.48l0.29,1.19l0.71,1.13l6.38,5.83l4.64,2.65l2.98,0.84l0.18,0.29l-0.55,0.52l0.28,0.91l0.57,0.03l1.67,-1.27l1.89,-0.75l3.88,0.01l0.39,-0.55l-0.38,-1.46l0.92,0.47l0.8,2.67l1.06,1.33l-0.09,6.32l1.23,4.13l0.16,15.09l-0.74,1.63l-4.68,5.73l-4.46,6.45l-5.9,9.66l-1.65,3.39l-4.92,6.36l-6.43,5.69l-1.84,2.82l-1.27,0.84l-5.02,6.18l-1.94,4.41l-0.59,4.51l0.58,1.37l-0.3,1.02l0.13,1.48l-1.08,2.32l-1.52,1.6l-12.07,7.38l-7.01,3.83l-2.18,0.56l-2.39,1.87l-1.65,0.86l-5.39,2.01l-2.47,1.26l-4.01,0.61l-3.42,1.09l-3.26,1.79l-7.31,1.56l-9.53,3.03l-2.6,1.58l-2.94,0.92l-25.67,4.74l-7.45,2.89l-4.15,-0.0l-20.57,3.6l-14.2,1.92l-9.29,1.72l-5.0,-0.07l-1.85,-0.32l-1.65,0.78l-4.04,0.95l-8.71,-1.03l-4.13,0.06l-3.05,0.9l-1.07,0.62l-6.87,-0.9l-2.33,-1.38l-3.08,0.75l-2.1,-0.08l-8.4,-2.26l-1.61,-0.74l-1.22,-1.03l-2.22,-4.36l-0.78,-0.54l-7.39,-0.58l-1.79,-0.69l-1.29,0.63l-0.61,1.01l0.36,0.8l-0.21,1.15l0.77,1.85l-0.06,1.22l0.99,-0.45l0.59,0.18l0.02,2.4l0.31,0.74l0.75,0.39l1.51,-0.2l-0.32,1.77l-1.42,1.01l-1.87,4.41l0.83,1.45l-0.35,2.48l0.38,1.15l3.05,2.6l-1.24,-0.57l-0.46,0.08l-0.65,0.68l-0.03,0.51l0.59,0.69l1.07,0.42l5.66,0.55l3.49,1.6l1.83,1.24l0.91,1.24l-0.12,0.97l-1.0,0.94l-4.16,-3.0l-1.25,-1.94l-0.68,-0.5l-4.17,0.14l-0.36,0.48l0.63,1.69l0.61,0.47l1.41,0.02l0.56,1.46l0.88,1.11l1.91,1.66l1.01,0.53l3.34,0.68l0.18,0.95l-0.97,1.54l-0.12,3.63l-0.52,1.24l-1.13,7.25l-0.12,4.73l-0.14,0.54l-1.89,1.07l-3.09,-0.49l-2.85,-1.94l-0.62,0.21l-0.16,0.81l0.84,1.35l-1.06,0.83l-0.09,3.04l-0.91,3.71l-1.39,3.19l1.21,3.3l-0.91,4.04l-0.34,0.87l-2.83,1.25l-0.9,0.81l-1.5,2.08l-0.31,1.2l0.25,1.06l1.3,2.28l0.68,3.1l1.21,2.1l3.97,1.96l0.05,1.41l1.41,1.72l0.6,0.49l0.9,-0.31l0.45,1.78l-0.01,1.12l-0.46,0.37l-1.87,-0.32l-1.38,-1.43l-0.6,0.31l0.06,1.12l0.69,1.19l-0.4,0.84l0.43,0.81l0.88,0.37l3.5,-1.91l1.65,-0.47l-1.49,1.08l-1.15,4.73l-2.55,5.28l-1.1,1.33l-6.63,3.17l-5.43,3.07l-3.11,1.17l-2.38,1.57l-2.82,0.06ZM689.21,609.29l-0.27,-0.53l0.66,-0.88l-0.08,-1.29l1.18,1.19l0.19,1.3l-0.64,-0.52l-0.56,0.08l-0.49,0.65ZM526.64,864.17l0.56,0.35l0.69,-0.73l1.35,3.43l-0.15,1.09l-1.47,-0.26l-1.44,-1.21l-3.77,-1.47l-2.57,-3.05l-0.46,-1.3l6.4,1.59l0.87,1.56ZM523.08,857.17l1.21,0.9l-0.07,0.69l-1.23,0.27l-0.77,-0.31l-2.49,-1.78l-1.02,0.52l-0.76,-0.38l0.27,-0.52l3.28,0.16l1.58,0.46ZM522.25,925.81l-0.45,-1.18l-3.09,-4.09l-0.92,-1.88l0.54,-2.26l2.97,0.79l1.01,1.32l-0.25,5.1l0.19,2.2ZM521.32,934.72l-3.03,4.06l-1.74,-0.24l0.24,-1.3l-0.54,-1.18l-0.55,-0.16l-1.16,0.65l-0.99,-0.01l-0.33,-0.31l1.52,-2.24l0.3,-2.25l0.83,-2.3l3.11,0.14l1.07,1.02l1.62,2.79l-0.34,1.31Z\",\n            name: \"Buenos Aires\"\n          },\n          \"AR-C\": {\n            path: \"M689.37,630.71l-1.01,1.27l-1.7,0.31l-1.21,1.05l-1.57,2.76l-3.94,-2.94l-0.79,-2.67l0.94,-4.18l2.57,-2.05l4.03,2.43l1.43,1.69l1.24,2.33Z\",\n            name: \"Ciudad de Buenos Aires\"\n          },\n          \"AR-A\": {\n            path: \"M230.92,160.73l3.51,-0.13l1.13,-0.52l0.67,-0.92l-0.12,-1.2l-3.34,-3.82l0.24,-2.28l-1.42,-1.82l0.13,-0.72l-0.36,-0.73l-0.47,-0.55l-1.39,-0.22l-1.67,-1.14l-1.14,-2.72l0.23,-1.64l2.29,-4.5l1.04,-3.35l1.56,1.31l0.57,-0.22l0.63,-2.38l1.73,-3.64l0.57,-0.32l1.55,0.39l1.05,-0.18l2.32,-3.24l0.61,-1.64l0.7,-0.47l37.54,-15.77l2.3,-1.23l1.21,-1.66l3.79,-12.14l1.03,1.01l1.74,0.72l1.63,1.79l2.91,0.83l3.54,3.7l0.56,1.44l1.86,0.6l0.64,1.54l2.66,3.02l4.79,2.36l4.27,4.87l3.26,1.62l1.71,0.37l2.96,-0.12l1.81,-0.94l2.33,-3.1l1.46,-0.78l1.67,-4.91l0.82,-12.47l-0.18,-2.78l-2.95,-8.06l-0.15,-1.69l1.29,-5.99l0.81,-0.82l2.88,1.09l1.23,0.03l2.06,1.31l1.83,0.05l6.34,3.73l1.54,1.53l0.21,0.58l-0.33,2.18l0.22,3.13l-0.49,1.12l0.57,1.53l-1.51,2.35l-0.25,3.86l0.12,0.69l0.77,0.49l0.07,0.74l0.52,0.75l-0.39,1.03l0.15,1.04l2.0,2.61l1.02,0.15l1.03,-0.75l0.59,0.01l2.96,2.65l3.22,1.79l-0.02,3.53l0.41,1.16l1.54,2.57l4.54,5.88l1.35,2.46l2.36,1.49l0.71,0.18l2.05,-0.62l2.29,1.89l2.95,0.53l3.88,1.45l1.98,-0.52l2.97,-1.76l0.65,1.3l3.89,3.09l1.55,0.91l5.01,1.68l1.35,-0.57l2.04,-4.72l1.06,-1.55l8.75,7.4l0.56,0.13l1.0,-0.58l1.44,-3.04l2.99,-2.81l2.5,-0.7l1.4,-1.77l4.05,-0.51l1.4,-0.9l3.95,-5.01l1.61,-2.85l0.84,-2.79l-1.14,-31.66l-0.49,-0.84l-1.54,-0.33l-5.72,-0.1l-1.05,0.25l-1.45,1.67l-0.67,2.47l-0.97,0.99l-0.88,-0.61l-2.37,-3.09l-1.76,-1.54l-3.59,-1.37l-1.33,-1.17l-4.18,0.6l-2.11,1.68l-3.3,-0.43l-0.28,-2.31l-3.06,-6.31l-0.71,-0.64l-2.77,-1.06l-0.54,-0.86l1.01,-4.14l0.6,-4.19l-0.31,-2.19l-1.24,-1.58l-0.93,-0.59l-5.69,-0.35l-1.85,-1.5l-1.79,-4.94l-0.77,-5.29l-0.01,-2.2l0.91,-2.33l-1.92,-2.05l-1.66,-0.24l0.45,-3.85l1.05,-1.89l1.69,-4.34l1.55,-2.48l0.21,-4.64l0.42,-1.8l1.29,-2.45l0.29,-1.33l7.27,-0.08l8.39,1.92l3.22,1.76l1.78,0.42l1.67,-0.47l1.21,0.23l3.09,1.54l1.87,2.77l0.02,0.59l-0.86,1.28l-0.4,1.49l2.09,1.97l-0.33,1.7l1.17,1.16l0.41,1.32l3.06,3.22l-0.92,1.84l-0.21,2.84l1.22,0.96l1.27,2.59l1.44,0.82l0.49,0.87l0.13,1.13l-0.32,1.05l0.55,0.94l0.16,2.09l1.07,0.72l0.57,-0.41l1.36,-4.98l0.06,-3.53l1.92,-7.04l0.6,-1.04l2.29,-2.12l1.15,-1.62l3.37,-8.58l1.58,-1.36l1.45,-3.57l0.7,-2.67l0.33,-0.65l1.21,-0.76l0.88,-2.74l0.53,-0.22l1.12,-0.2l4.09,0.27l3.22,2.22l3.12,-2.21l1.64,-0.28l28.37,0.16l6.68,-0.36l2.32,0.45l0.52,4.84l0.36,0.98l0.84,0.87l3.98,2.32l0.81,1.59l1.6,0.85l0.09,0.77l-0.52,1.21l0.41,0.76l2.87,0.93l1.89,2.04l2.35,0.8l1.44,1.77l3.15,2.12l1.04,0.39l0.31,91.6l-47.85,60.14l-23.5,-0.34l-10.28,-3.24l-2.17,-0.1l-0.94,1.22l-9.64,20.46l-0.42,3.47l-1.95,3.98l-0.37,1.65l-9.17,0.22l-3.26,-0.65l-3.82,1.05l-2.32,1.73l-1.79,0.25l-3.19,-1.59l-0.86,-0.2l-1.22,0.23l-8.48,-3.32l-0.84,-0.84l-1.31,-3.16l-0.81,-0.7l-1.23,0.18l-3.53,1.81l-0.97,0.14l-4.38,-0.97l-1.7,0.07l-4.05,-1.28l-1.04,0.9l-0.26,4.02l-0.6,2.12l0.09,2.54l-0.77,1.29l-1.6,-0.01l-13.23,-2.22l-1.8,-0.92l-2.77,-3.07l-2.62,-0.26l-1.38,0.67l-1.29,2.15l-1.76,1.17l-2.63,5.92l-0.72,0.74l-0.66,0.08l-2.11,-1.77l-3.7,-4.21l-1.71,-3.95l-1.51,-1.79l-0.71,-2.2l-3.63,-4.43l-3.67,-5.28l-0.92,-1.66l-0.56,-2.16l0.23,-3.74l2.73,-2.36l7.79,-0.46l2.79,-1.81l0.92,-1.24l0.04,-1.63l1.15,-4.83l-2.3,-3.63l-0.78,-4.8l-1.21,-1.82l-2.06,-0.22l-54.42,0.68l-30.23,-5.73Z\",\n            name: \"Salta\"\n          }\n        },\n        height: 1775.5897460258225,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"asia_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 555.5409752358405,\n          bbox: [{\n            y: -6895749.143810256,\n            x: 2858903.2260101754\n          }, {\n            y: 1365383.966806244,\n            x: 16242290.106516164\n          }],\n          left: 0\n        }],\n        paths: {\n          BD: {\n            path: \"M468.23,273.61l0.71,0.28l0.58,-0.17l1.03,-2.27l3.07,-0.06l0.75,-0.99l-1.01,-0.97l-0.42,-1.03l-2.11,-0.48l-1.82,-1.98l-1.04,-0.37l0.36,-1.52l2.2,-2.38l-0.03,-0.74l-0.59,-0.55l1.28,0.98l0.67,1.23l1.03,0.3l1.31,0.04l0.39,-0.56l-0.29,-0.74l1.12,2.32l1.6,0.95l1.55,0.0l0.55,-0.72l0.06,-0.94l0.91,1.84l-0.18,4.52l0.45,0.95l4.71,1.15l12.05,-0.09l2.87,1.64l-1.68,-0.08l-1.11,3.94l-1.09,0.36l-0.53,1.16l-0.92,-0.13l-1.3,0.83l-1.65,0.27l-1.04,1.45l-0.55,2.17l1.25,4.63l0.87,0.36l0.23,-0.76l0.39,0.99l1.03,0.54l1.43,-0.82l0.06,-1.92l1.33,-1.61l-0.02,-1.25l1.1,-0.2l0.56,0.3l0.57,2.45l0.21,3.12l0.98,1.98l0.95,10.27l-1.52,-0.91l-0.91,0.13l-0.83,1.18l0.19,1.46l-0.37,-0.53l-0.38,-4.02l-1.31,-4.1l0.26,-0.9l-0.55,-0.43l-0.24,0.13l-1.76,-2.79l-0.59,-1.56l-2.33,1.96l-1.63,0.27l-1.96,-3.12l-0.37,-4.39l-0.56,-0.29l-0.45,0.36l-0.06,0.92l-1.76,-0.24l-0.44,0.23l0.12,0.48l0.92,0.7l1.01,0.22l0.34,0.42l0.02,0.68l-0.97,0.9l0.32,0.89l-0.51,0.67l-0.05,0.75l0.49,1.55l0.74,1.1l-0.04,1.05l-1.67,1.56l-1.04,1.67l-0.41,-0.63l0.95,-1.34l0.03,-0.48l-0.94,-0.02l-1.11,0.67l-0.25,-1.52l0.63,-1.15l-0.09,-0.5l-0.51,-0.01l-0.91,0.83l-0.49,3.08l-1.12,0.91l-0.6,-3.09l-0.39,-0.32l-0.5,0.81l0.23,2.33l-0.91,1.25l-0.47,0.01l-0.88,-0.99l-0.34,-3.13l-0.94,-2.74l-0.52,-3.11l0.52,-1.04l-0.11,-0.49l-1.5,-0.56l0.17,-1.34l-1.2,-1.65l0.96,-2.52l0.18,-2.32l-0.78,-0.65l-1.19,-0.22l-1.51,-1.02l-0.65,0.08l-0.78,-0.54l-0.29,-0.57l0.77,-1.7ZM492.82,292.48l0.02,0.04l-0.02,-0.03l0.0,-0.01ZM490.12,294.53l0.06,-0.71l0.06,0.24l-0.11,0.47ZM486.34,295.46l0.98,-1.76l-0.25,-1.76l-0.63,-0.69l-0.22,-1.31l1.7,2.68l-0.27,2.27l-0.25,0.35l-1.07,0.23Z\",\n            name: \"Bangladesh\"\n          },\n          MN: {\n            path: \"M465.38,65.23l0.89,-0.91l-0.34,-1.28l0.62,-0.06l1.36,-0.89l0.63,-1.89l2.96,-0.29l1.6,0.36l0.59,-0.65l0.58,0.39l1.04,-0.28l0.59,-0.33l0.38,-0.81l1.04,0.09l2.05,-1.05l0.37,-0.57l-0.19,-1.38l2.27,-0.66l0.58,-1.07l4.59,-1.32l0.78,-0.78l1.87,-1.05l2.78,-0.49l3.01,-2.22l2.88,-0.07l1.04,-1.55l2.11,1.67l0.67,-0.01l0.8,-0.92l0.67,0.01l0.42,1.04l1.07,0.72l8.35,0.44l0.71,3.17l2.29,2.08l2.21,-0.2l1.29,1.02l2.11,-0.02l1.12,0.3l2.16,-0.99l1.09,0.49l0.76,-0.36l1.92,0.95l4.87,0.16l1.67,1.45l1.56,-0.13l1.37,-1.0l0.41,-0.68l1.71,-0.25l1.36,-0.75l0.85,-0.75l1.1,-2.2l0.25,-2.54l-1.91,-1.23l-0.53,-1.95l-0.94,-1.28l0.05,-0.46l0.57,-1.2l0.23,-1.64l0.63,-0.95l1.29,-0.51l0.99,-2.1l2.22,-0.91l1.25,-1.62l0.49,-1.34l0.6,0.61l2.94,1.23l2.31,0.52l1.62,1.19l4.13,0.3l6.74,2.7l1.5,-0.12l3.88,1.08l0.63,4.99l0.71,1.02l-0.09,1.5l0.6,0.53l0.85,0.15l1.69,1.38l3.6,0.96l1.12,0.89l2.42,0.6l1.42,-0.35l2.09,0.2l0.92,-0.22l2.0,-1.27l4.65,-0.82l2.11,-0.81l3.62,0.66l2.55,0.98l3.66,-0.08l3.83,3.12l5.14,0.45l-0.06,2.11l0.27,0.58l3.44,2.64l1.66,0.76l4.72,-0.1l7.17,1.59l1.72,-0.47l1.38,0.73l0.9,-0.0l4.66,-2.03l5.53,-0.68l3.09,-1.04l1.45,0.23l1.07,-0.2l1.83,-0.89l0.96,-1.85l2.96,-1.98l5.22,-2.55l3.2,0.36l1.84,0.88l2.02,1.84l1.38,0.6l2.35,0.12l3.03,-1.24l1.43,0.3l1.44,0.54l0.71,0.62l-4.84,9.93l-1.54,2.03l-0.25,2.98l-1.78,1.03l-0.19,0.39l0.24,1.78l0.55,0.9l2.15,1.83l1.08,-0.17l1.76,-1.38l1.99,0.18l1.85,-0.29l2.16,0.57l2.17,1.49l3.44,-3.22l2.57,-0.35l2.54,0.41l1.8,2.03l2.38,0.99l0.65,1.24l0.93,0.52l1.8,2.04l1.36,0.99l0.52,1.52l0.76,1.05l-0.01,1.06l-1.13,0.84l-2.67,-0.08l-3.79,-1.36l-0.93,0.6l-2.89,-0.2l-1.99,0.49l-1.2,0.45l-1.18,0.92l-1.41,-0.65l-1.01,0.08l-0.42,0.37l-0.4,1.72l-3.39,-0.28l-2.33,0.96l-2.4,3.23l-0.39,0.71l-0.06,1.29l-1.88,0.99l-1.87,1.53l-3.74,0.61l-1.74,0.11l-1.43,-0.38l-1.43,0.3l-1.21,1.84l-2.52,2.13l-3.44,1.97l-6.46,-1.24l-2.32,-1.64l-3.93,-0.05l-1.35,1.02l-0.99,1.34l-1.71,4.41l0.96,1.92l2.38,2.38l0.66,1.54l-1.14,0.39l-1.55,1.43l-4.17,1.53l-4.52,5.09l-7.72,2.96l-4.84,0.2l-3.84,-0.28l-10.6,1.44l-11.84,4.97l-1.46,1.22l-0.95,-0.4l-2.3,-0.1l0.0,-1.59l-0.48,-0.39l-5.77,1.1l-4.75,-2.26l-6.83,-1.36l-1.26,-0.48l-2.32,-2.54l-1.39,-0.42l-3.06,-0.12l-8.31,-1.14l-3.92,0.98l-16.87,-2.0l-6.05,0.61l-0.42,-1.63l-3.28,-3.13l-0.15,-1.01l-2.38,-5.24l-1.45,-0.72l0.29,-1.8l-0.2,-0.51l-2.52,0.02l-2.39,-0.79l-2.56,-1.53l-1.19,-1.11l-1.93,-0.36l-2.15,-2.01l-1.23,-0.49l-5.48,-0.85l-2.76,0.24l-2.97,-0.55l-3.26,-0.07l-1.18,-0.45l-0.88,0.06l-1.89,-0.9l-1.14,0.11l-1.48,-2.67l0.33,-1.69l2.14,-2.77l0.03,-0.89l-0.63,-1.57l0.87,-2.78l-0.36,-1.84l-0.87,-1.94l-1.26,-0.64l-1.54,-2.5l-0.52,-2.03l-0.88,-1.72l-1.6,-0.72l-0.81,-1.38l-0.52,-0.08l-1.29,0.57l-1.61,-1.67l-1.89,-0.23l-1.51,0.36l-3.73,-2.07l-0.11,-0.9l-0.63,-0.83l-3.77,-1.57l0.57,-0.74l-0.01,-0.67l-1.71,-0.88l-0.5,-0.67Z\",\n            name: \"Mongolia\"\n          },\n          BN: {\n            path: \"M669.68,427.4l0.73,0.87l0.54,2.47l-0.75,-0.21l-0.52,-3.13ZM663.3,429.66l2.55,-1.0l3.15,-2.12l-2.11,1.53l0.21,2.24l0.34,0.55l-0.41,1.43l-0.75,0.81l-1.24,-1.48l-0.84,-0.24l-0.9,-1.73Z\",\n            name: \"Brunei\"\n          },\n          BH: {\n            path: \"M186.05,263.08l0.03,-0.01l0.0,0.12l-0.03,-0.12ZM186.08,263.2l0.33,0.5l-0.01,1.54l-0.25,-0.46l-0.07,-1.59Z\",\n            name: \"Bahrain\"\n          },\n          BT: {\n            path: \"M479.26,258.41l-0.68,-0.6l-1.59,-0.42l-1.49,0.21l-0.67,-0.33l-1.21,-0.69l-0.18,-0.78l-0.61,-0.7l0.98,-0.78l0.47,-1.27l1.11,-1.01l0.49,-1.02l2.35,-2.77l2.96,-1.79l1.35,-0.05l1.57,0.4l-0.19,0.88l0.51,0.52l2.68,0.07l2.39,0.83l1.8,-0.86l2.35,0.97l-0.39,2.29l0.21,0.81l1.39,1.06l1.61,-0.11l0.49,0.91l-0.62,1.49l0.57,1.2l-0.19,0.44l-2.46,0.43l-0.91,-0.03l-0.85,-0.49l-1.14,0.61l-4.0,0.16l-3.09,-0.93l-1.21,0.46l-0.53,0.64l-3.27,0.27Z\",\n            name: \"Bhutan\"\n          },\n          HK: {\n            path: \"M661.58,292.96l0.56,-0.57l0.79,-0.15l0.37,0.12l0.23,0.69l-0.18,0.38l-1.77,-0.47Z\",\n            name: \"Hong Kong\"\n          },\n          JO: {\n            path: \"M73.44,221.31l0.32,-1.94l0.71,-1.81l-0.18,-2.7l0.4,-4.54l0.81,-0.34l0.91,0.11l1.09,1.36l1.36,0.46l1.2,0.92l3.65,0.53l14.19,-8.55l1.88,6.47l-0.46,0.56l0.45,1.39l0.49,0.26l1.18,-0.3l0.12,0.32l-2.13,1.8l-14.99,4.17l-0.18,0.66l7.3,7.79l-2.14,1.24l-1.23,2.64l-5.25,1.04l-0.54,0.35l-1.77,2.81l-2.92,2.3l-7.72,-1.2l0.79,-4.67l0.53,-1.3l0.03,-2.42l2.2,-5.75l-0.11,-1.66Z\",\n            name: \"Jordan\"\n          },\n          PS: {\n            path: \"M69.37,220.61l0.5,-1.44l1.93,-1.52l-0.75,-0.82l-0.89,-0.22l-0.2,-2.28l0.38,-1.39l0.34,-0.86l0.71,-0.46l1.04,0.19l1.21,0.91l0.0,4.78l-0.74,2.04l-2.36,0.96l-1.18,0.1ZM64.36,221.37l0.26,-0.24l-0.2,0.39l-0.05,-0.15Z\",\n            name: \"Palestine\"\n          },\n          LB: {\n            path: \"M71.41,206.16l3.41,-7.3l0.31,-1.87l1.06,-1.44l1.32,-0.97l0.1,-0.56l2.44,-0.29l-0.58,1.07l1.36,0.72l0.51,1.51l-0.27,0.54l-1.73,1.43l-0.21,0.89l-1.1,0.06l-1.03,0.79l-0.41,0.85l0.43,0.87l-1.83,1.74l-1.46,0.66l-0.46,1.19l-0.37,0.22l-1.46,-0.12Z\",\n            name: \"Lebanon\"\n          },\n          LA: {\n            path: \"M558.12,308.97l0.8,-2.48l0.9,-0.56l1.21,-0.03l0.58,-0.32l0.14,-0.59l-0.68,-0.32l0.06,-0.31l0.54,-0.46l0.92,-1.8l1.27,-0.46l1.32,-0.98l0.33,1.83l0.41,0.49l2.23,-0.25l1.45,0.64l0.79,-0.52l0.23,-0.51l-0.59,-0.81l0.09,-3.9l-1.05,-1.43l-0.46,-1.67l1.09,-1.67l0.5,0.65l1.96,-0.09l2.85,3.44l0.75,0.49l0.74,1.87l0.55,0.12l0.79,-0.61l0.59,0.27l-0.72,3.25l2.08,3.11l4.25,1.55l3.34,-1.92l3.23,2.09l-1.48,1.18l0.07,0.59l1.87,0.54l0.4,1.12l1.34,0.22l0.42,0.91l-1.29,1.97l-1.05,0.95l-2.28,-0.55l-2.03,0.27l-0.16,0.6l0.32,1.04l-1.08,0.87l-0.12,0.82l6.31,4.01l3.0,0.99l-0.42,1.03l0.28,0.95l1.72,1.75l0.92,0.28l0.85,1.15l0.86,2.02l2.37,2.5l1.98,1.54l1.67,1.97l0.28,2.13l0.96,1.49l0.83,0.4l0.66,-0.34l0.63,1.05l3.36,2.31l-1.56,1.09l-0.2,0.64l0.94,1.54l2.13,1.74l0.53,0.81l-1.24,1.92l0.26,2.05l-0.64,0.9l-0.88,-0.18l-1.3,1.28l-0.72,0.04l-0.59,0.63l-0.63,0.09l-2.18,-1.88l-0.59,0.03l-0.89,0.79l-0.78,-0.14l-0.68,0.79l-1.22,0.15l-0.43,0.59l1.04,2.11l-0.26,0.59l-0.82,-0.02l-1.24,-1.21l-1.56,-0.54l-1.34,0.34l-0.62,-0.55l-0.32,-0.6l1.56,-0.89l0.71,-1.11l0.39,-2.8l-0.42,-2.39l0.93,-1.73l0.17,-1.54l-0.28,-0.5l-1.57,-0.92l-0.05,-1.29l-2.57,-1.25l-0.75,-1.37l-0.96,-0.96l-0.46,-1.25l-0.05,-1.74l0.51,-3.38l-0.65,-1.35l-2.34,-1.84l-3.57,-4.78l-1.35,-0.09l-2.3,-0.79l-1.67,0.07l-0.48,0.38l-0.07,0.74l-1.19,1.15l-0.3,0.82l-1.62,0.51l-1.04,0.72l-0.47,-0.8l-1.53,-0.65l-1.54,-1.23l-0.79,-0.06l-1.18,1.01l-1.29,0.38l-0.67,1.12l-2.05,1.33l-1.8,1.65l-1.16,-0.32l1.6,-4.28l-0.05,-1.21l-0.67,-1.09l0.86,-1.3l0.92,-2.92l-0.66,-2.72l0.1,-1.75l-0.63,-0.53l-1.54,-0.29l-1.85,0.75l-0.71,0.09l-0.67,-0.33l-0.57,-0.57l-0.12,-0.62l1.05,-2.53l-0.19,-0.97l-1.62,-1.77l-0.72,-0.02l-0.52,0.36Z\",\n            name: \"Lao PDR\"\n          },\n          TW: {\n            path: \"M709.3,291.82l-1.83,-4.59l0.51,-1.89l-0.08,-2.0l3.67,-6.43l3.03,-4.34l3.7,-1.83l2.14,1.56l0.09,0.35l-0.77,1.26l0.06,2.28l-1.59,3.77l-1.03,5.01l-0.91,2.74l-2.57,3.52l-0.85,1.94l-0.35,3.19l-0.44,-0.46l-0.11,-1.02l-0.74,-1.59l-1.92,-1.47Z\",\n            name: \"Taiwan\"\n          },\n          TR: {\n            path: \"M7.99,161.66l1.03,0.22l1.78,-0.37l0.63,-0.86l-1.88,-0.41l-0.87,-1.59l0.93,-0.42l0.78,-0.97l-0.38,-0.84l-1.04,-0.26l0.22,-1.4l-1.11,-1.38l1.53,-1.64l-0.01,-0.66l-0.98,-0.39l-5.01,0.73l0.43,-1.17l0.14,-2.62l0.96,-0.37l3.02,-3.17l1.89,0.03l0.94,-0.5l0.88,-0.02l0.41,0.66l1.26,0.53l2.03,-0.11l0.96,-0.5l0.06,-0.48l0.2,0.52l0.44,0.12l2.4,-0.29l5.37,0.12l0.62,-0.4l-0.05,-0.64l-1.48,-0.65l0.7,-0.47l6.52,-0.93l0.35,-0.33l-0.36,-0.66l-4.21,-0.72l-1.38,-1.17l0.51,-1.42l5.55,0.63l3.22,-0.4l3.54,0.99l3.33,-0.2l1.01,-0.65l0.77,-1.35l4.6,-2.35l1.66,-1.26l7.24,-2.43l10.86,0.44l1.96,-0.93l0.54,0.16l-0.03,1.2l1.48,1.59l2.21,0.87l2.62,-0.69l0.67,0.19l0.96,2.25l1.79,1.43l0.93,0.16l1.2,-0.81l0.79,-0.08l1.41,0.69l0.74,0.89l5.19,0.94l1.14,0.69l3.53,0.69l7.87,-1.6l2.82,1.08l2.54,0.35l1.02,-0.16l6.24,-2.71l2.51,-1.47l0.64,-0.71l2.14,0.68l0.98,-0.56l3.85,0.49l1.25,-1.25l0.91,0.03l0.44,0.73l2.22,1.53l0.02,0.52l0.51,0.51l1.61,0.31l0.22,0.85l1.28,1.16l0.57,2.17l-1.04,1.78l0.93,2.48l-0.04,0.84l2.19,0.95l2.59,-0.14l2.28,1.66l-1.27,0.98l-0.54,2.14l-2.31,0.12l-0.46,0.66l0.51,1.54l0.64,0.58l-0.24,1.25l0.2,0.53l0.71,0.9l0.23,3.83l1.0,0.49l-1.64,3.72l0.43,0.51l0.73,0.06l1.56,1.01l-0.24,0.46l0.21,1.92l1.62,1.39l-0.23,0.51l-0.93,-0.02l-2.34,1.61l-0.2,-2.01l-0.87,-0.72l-0.84,-0.11l-1.42,0.77l-1.09,-0.03l-4.28,-1.2l-1.3,0.34l-1.32,-0.37l-2.72,2.18l-0.63,-1.23l-0.91,-0.31l-1.16,0.82l-3.93,0.97l-6.05,-0.08l-5.27,2.36l-4.83,1.22l-4.33,-0.1l-2.35,-1.43l-1.98,-0.36l-5.77,2.22l-2.57,-0.08l-0.96,-0.89l-2.18,-0.39l-0.64,0.48l-0.7,2.82l0.69,1.64l-1.76,0.56l-0.32,1.45l-0.99,0.56l-0.34,0.73l-1.01,-0.55l0.15,-0.53l-1.01,-2.49l2.77,-3.03l-0.16,-1.54l-1.04,-0.94l-0.43,-0.04l-2.94,1.62l-0.88,1.05l-0.89,0.15l-4.31,-1.91l-1.02,-0.13l-3.12,1.87l-2.57,2.64l-1.88,0.93l-5.61,0.72l-1.03,0.48l-1.75,-0.5l-1.08,-0.65l-2.65,-2.99l-5.1,-2.34l-5.46,-0.6l-0.89,0.96l-0.17,2.23l-0.71,2.0l-1.51,-0.37l-3.86,1.25l-3.28,-1.34l-0.48,-0.5l-0.77,-2.47l-0.76,-0.44l-1.22,0.32l-2.38,-1.06l-1.51,-0.11l-1.53,1.41l0.18,-0.25l-0.34,-0.64l-0.34,0.02l1.78,-1.56l0.13,-0.28l-0.36,-0.57l-7.0,0.23l0.11,-0.26l1.71,-0.35l0.29,-0.44l-0.31,-1.03l-2.07,-1.09l-0.87,-2.1l0.93,-0.51l0.06,-2.34l-2.86,-1.01l-1.45,-1.17l-1.04,0.34l-1.56,-0.72l0.81,-0.68l0.07,-0.85l-0.38,-1.15l0.83,0.48l0.08,1.22l0.49,0.71l0.25,0.15l0.66,-0.5ZM15.22,175.57l-0.41,0.2l-0.33,-0.03l0.31,-0.13l0.43,-0.04ZM16.6,143.61l0.01,-0.05l-0.46,-0.47l0.7,0.08l-0.24,0.44ZM3.34,140.98l2.15,-2.44l-0.15,-2.09l1.72,-0.87l0.46,-0.67l-0.31,-2.04l-1.93,-1.23l1.34,-0.44l0.56,-1.08l2.01,-0.26l1.03,-0.61l1.74,-0.22l1.82,1.43l3.3,-0.46l-0.1,0.85l0.47,1.13l1.24,1.74l1.18,0.83l5.0,2.06l-0.52,1.31l-1.07,0.25l-4.52,-0.94l-1.96,0.79l-1.34,-0.18l-1.86,0.36l-1.98,2.61l-3.22,1.51l0.3,-0.41l-0.33,-0.64l-4.89,0.12l-0.18,-0.41ZM7.44,143.02l-1.73,1.59l-1.03,1.2l0.09,-1.2l1.25,-0.99l1.41,-0.61ZM0.74,145.85l0.89,-0.3l0.19,0.13l-1.08,0.17Z\",\n            name: \"Turkey\"\n          },\n          LK: {\n            path: \"M405.27,403.82l0.63,-0.48l0.31,-2.67l0.69,-2.19l-0.1,-1.45l1.26,-2.36l0.05,-2.28l1.32,0.61l0.71,-0.1l0.29,-0.53l1.52,1.26l1.62,2.89l0.68,0.41l1.3,1.94l0.18,1.09l1.12,0.66l0.37,2.11l1.82,2.76l1.26,2.7l0.27,0.91l-0.09,2.77l-1.05,2.78l-2.37,1.92l-4.81,1.92l-1.57,0.21l-1.55,-0.41l-1.15,-0.96l-1.7,-4.93l-1.0,-8.59ZM409.2,391.24l-1.76,-0.39l-0.41,-0.44l1.57,0.08l0.6,0.76Z\",\n            name: \"Sri Lanka\"\n          },\n          TL: {\n            path: \"M743.75,531.36l1.77,-2.37l1.4,-0.5l3.12,-0.62l6.11,-0.25l2.56,-1.05l1.81,0.43l-2.38,1.79l-1.88,0.51l-1.38,1.0l-2.37,0.62l-1.6,0.93l-4.02,1.15l-2.18,1.48l-0.65,-1.32l0.98,-0.19l0.44,-1.35l-0.59,-0.65l-1.14,0.38ZM737.32,534.04l0.79,-0.42l1.17,-0.31l-0.74,0.83l-1.22,-0.09Z\",\n            name: \"Timor-Leste\"\n          },\n          TM: {\n            path: \"M203.1,134.81l-0.97,-1.38l-0.75,-1.96l2.58,-2.29l1.35,-0.76l-1.16,0.96l-1.2,2.45l0.48,0.84l-0.32,2.14ZM206.04,128.16l3.88,-1.05l3.1,-0.34l5.29,3.23l2.91,4.49l1.91,1.78l0.68,0.13l2.88,-0.54l8.07,0.54l1.16,-1.25l-0.76,-0.98l-0.26,-2.09l0.85,0.12l1.5,1.43l2.63,-0.58l1.07,-0.61l0.51,-0.81l-0.12,-0.87l-1.1,-0.81l-0.57,-1.62l1.36,-0.37l1.43,-2.54l1.56,0.47l0.76,1.14l1.07,0.04l0.16,-0.96l-2.22,-2.29l2.06,-0.02l0.81,-0.77l1.85,1.68l2.07,0.43l0.74,1.24l0.76,0.47l3.79,0.28l0.85,0.67l-0.35,2.11l1.55,0.99l-0.65,0.67l0.44,1.43l-0.5,1.54l0.38,0.61l2.88,1.63l3.07,-0.24l2.91,0.53l0.65,-0.05l1.18,-0.72l1.0,0.29l1.8,1.21l1.39,3.57l2.06,3.05l0.85,3.23l7.75,5.38l1.95,1.91l3.03,1.84l1.19,-0.12l2.24,1.84l7.43,4.52l2.76,-0.01l3.1,1.66l1.36,0.35l0.19,0.22l-0.77,1.34l-0.06,3.42l-2.52,-0.56l-2.87,-1.32l-1.09,1.01l-0.59,1.71l-3.23,0.11l-2.21,0.96l-2.42,6.9l-1.05,0.9l-1.93,0.94l-0.56,0.81l-1.11,0.03l-4.14,1.3l-1.34,0.12l-0.43,0.76l0.37,0.94l-0.74,1.84l-2.56,1.51l-1.65,0.02l-1.01,0.51l-0.49,-0.76l-1.74,-1.33l-2.84,0.04l-1.86,-1.54l-0.71,-0.1l0.1,-1.7l-0.68,-1.07l0.38,-0.89l-0.32,-4.03l-0.44,-0.84l-6.02,-0.15l-1.99,-2.71l-4.53,-2.48l-0.55,-0.59l-0.67,-1.69l-3.71,-1.53l-1.3,0.25l-0.99,-0.27l-1.02,0.41l-0.75,-0.21l-2.17,-1.45l-4.57,-1.19l-0.25,-1.22l-1.0,-0.91l-5.86,-0.35l-1.13,0.6l-0.29,0.89l-5.02,-0.19l-1.6,0.44l-3.74,2.45l-1.46,2.63l-3.62,1.13l-1.71,-0.08l-0.61,-4.69l0.33,-8.95l-1.59,-2.61l-2.68,-1.14l-1.3,0.25l0.55,-1.59l1.9,0.43l0.79,-0.12l0.32,-0.51l-0.29,-0.73l-0.73,-0.5l0.06,-2.12l-0.93,-0.58l-3.08,-0.24l-0.51,0.58l-0.94,-2.3l-0.07,-1.47l1.32,-4.71l1.22,1.25l1.6,0.4l1.86,-0.34l0.99,1.22l1.24,0.3l2.26,-0.61l1.46,0.23l0.32,-0.57l-0.35,-0.92l1.37,0.24l1.14,-0.41l0.37,-0.43l0.06,-1.24l-0.39,-1.08l-0.65,-0.72l-2.36,-1.57l-1.3,-1.27l-1.97,-5.25l-1.88,-0.49l-3.37,0.39Z\",\n            name: \"Turkmenistan\"\n          },\n          TJ: {\n            path: \"M312.6,153.86l0.49,-1.67l0.75,-0.73l1.15,-0.49l4.28,0.72l1.47,-0.06l0.98,-0.92l0.43,-1.72l0.68,-0.04l1.02,-0.65l0.05,-0.52l-0.48,-0.67l1.1,-0.28l0.2,-0.47l-0.55,-0.7l2.53,0.2l0.5,-1.43l-0.62,-2.01l0.6,-0.54l0.29,-1.15l0.59,0.04l1.33,0.95l0.68,0.04l4.34,-2.09l0.69,-1.18l1.41,1.4l0.16,0.81l0.48,0.2l-2.49,2.0l-0.24,0.95l0.31,0.46l1.01,0.36l0.69,1.04l0.79,0.09l-0.57,0.34l-0.55,1.08l-0.56,-0.81l-3.63,-1.35l-3.51,0.92l-0.7,0.87l0.01,0.65l-0.71,-0.36l-0.52,0.2l-0.23,0.5l-0.38,1.42l0.51,2.2l0.44,0.36l2.29,-0.43l2.59,0.18l1.71,-0.22l0.58,0.29l1.77,-0.37l0.57,0.13l0.89,1.24l0.85,0.31l1.54,-0.15l0.69,-0.8l2.64,-0.87l0.14,1.01l1.56,0.42l-0.06,0.72l0.58,0.64l0.59,0.04l1.42,-0.63l1.34,1.18l0.41,0.04l0.98,-1.13l1.43,-0.33l4.05,0.14l2.7,-0.86l0.79,0.04l-0.15,1.79l1.41,2.05l-0.78,0.93l0.93,2.59l1.55,0.72l0.72,-0.27l0.58,-0.82l0.9,0.0l3.72,1.57l-0.34,2.11l1.2,3.66l-0.24,1.67l1.57,1.55l-1.23,0.9l-1.56,-1.23l-3.22,-0.24l-0.9,0.78l-2.94,0.8l0.31,-0.94l-0.4,-0.66l-2.66,-0.38l-3.85,1.77l-1.04,0.82l-0.75,1.19l-2.16,0.4l-4.14,2.46l-0.73,-0.02l-0.79,-1.05l-0.7,-2.31l1.11,-6.72l-0.64,-0.61l-1.63,0.26l0.38,-1.82l-0.6,-1.47l-1.67,-1.13l-1.62,-0.38l-1.22,0.38l-0.9,0.77l-1.53,2.3l-1.6,1.44l0.26,2.26l-0.36,0.54l-0.71,0.2l-0.83,-0.46l-0.97,-0.08l-2.56,0.51l-0.8,0.87l-0.03,2.31l-0.63,0.6l-2.15,-1.75l-0.7,-0.14l-0.87,0.62l-0.93,0.03l-2.25,1.1l-0.9,0.97l-1.34,0.56l-0.57,-0.13l-1.25,-1.25l0.38,-2.72l3.53,-4.61l0.49,-1.81l-1.99,-2.39l-0.27,-1.51l0.72,-1.85l-0.39,-1.0l-0.72,-0.35l-2.42,-0.06l-0.36,-1.16l-2.04,-0.68Z\",\n            name: \"Tajikistan\"\n          },\n          TH: {\n            path: \"M537.74,324.01l2.04,-0.59l0.45,-0.42l-0.28,-2.76l0.73,-1.57l0.08,-2.38l1.18,-1.35l0.27,-0.79l1.75,0.63l4.69,-0.67l0.85,-0.91l0.34,-1.57l0.78,-0.19l1.13,0.28l1.04,-0.35l0.57,-0.75l-0.14,-0.95l1.52,0.11l1.48,-0.7l0.99,0.61l0.38,0.69l0.44,-0.05l0.96,-0.98l1.39,1.65l-1.06,2.91l0.28,1.07l0.7,0.71l1.17,0.53l1.0,-0.15l1.15,-0.68l1.82,0.3l-0.13,1.56l0.65,2.57l-0.87,2.67l-0.9,1.41l0.67,1.48l0.03,0.9l-1.74,4.23l0.45,0.78l1.2,0.54l0.78,-0.12l4.07,-3.13l0.69,-1.12l1.14,-0.27l1.06,-0.94l1.58,1.2l1.52,0.65l0.32,0.84l0.8,0.31l1.15,-1.0l1.89,-0.68l0.79,-1.54l0.91,-0.51l0.04,-0.84l1.24,-0.05l2.26,0.78l1.17,0.08l2.58,3.67l3.09,2.7l0.49,1.06l-0.52,3.18l0.05,1.82l0.54,1.52l1.05,1.09l0.81,1.45l2.36,1.1l-0.1,0.63l0.34,0.79l1.66,1.09l-0.17,1.07l-0.78,1.05l-0.17,0.77l0.4,2.55l-0.48,2.9l-2.18,1.37l-0.64,0.74l-0.46,-1.02l-1.49,-0.49l-6.07,0.52l-2.88,-0.48l-3.04,0.68l-1.37,0.65l-1.02,0.96l-1.4,2.3l-1.3,1.31l-0.09,0.53l-1.54,0.29l-0.11,2.45l0.98,2.09l0.27,2.51l1.86,1.89l-0.26,1.54l-0.86,-0.06l-0.14,0.32l-1.06,-0.8l-0.59,-1.02l-0.56,0.06l-1.2,-1.2l-2.43,-1.27l-2.27,0.49l-2.58,-0.4l-1.21,0.26l0.58,-5.56l-0.62,-0.66l-2.72,-0.77l-0.4,0.33l-3.09,0.59l-1.02,0.94l-0.2,0.84l0.71,1.59l-0.91,2.64l0.19,3.93l-1.05,1.63l-0.35,1.5l-1.27,2.17l-1.08,4.38l-1.47,2.35l-0.92,2.27l-0.07,4.25l0.92,2.45l-0.22,1.06l0.22,0.41l1.15,0.42l2.57,-0.74l0.54,0.13l1.06,5.07l1.12,1.35l0.69,-0.03l1.1,4.65l-0.71,-0.32l-0.96,0.72l0.38,1.87l1.85,2.56l1.25,0.14l3.14,2.29l2.99,-0.24l1.37,0.96l1.45,2.16l1.99,1.54l-0.2,0.8l-1.73,2.19l-0.57,0.01l-0.62,-0.83l-0.58,-0.14l-2.26,0.9l-0.77,1.07l-0.71,-0.69l0.68,-1.21l-0.18,-2.32l-0.75,-0.38l-0.78,0.05l-0.54,-1.24l-0.66,-0.46l-0.85,0.18l-1.85,-0.67l-0.86,-1.07l-1.03,0.3l-0.26,1.05l-1.38,-1.7l-1.18,-0.89l0.16,-1.5l-1.21,-0.97l0.27,-0.83l-0.53,-0.49l-1.31,-0.03l-0.73,-1.83l-0.6,-0.75l-0.9,-0.15l-0.12,-1.17l-1.94,-1.31l-0.71,-1.5l-1.29,-0.72l-0.59,0.2l-0.76,0.98l-0.68,-1.48l0.03,-2.42l0.63,-1.55l0.33,-2.39l2.81,-8.01l0.09,-2.34l3.14,-3.22l3.28,-5.36l-1.16,-3.29l-0.48,-2.8l-1.36,-1.43l-0.7,-2.18l0.42,-1.38l-0.33,-3.85l-1.57,-2.62l-2.74,-2.39l-2.36,-3.38l-0.3,-1.14l-0.11,-1.46l2.77,-1.37l0.24,-5.08l1.99,-1.43l0.23,-1.3l-0.53,-0.67l-0.48,0.01l-0.77,0.61l-1.26,-2.81l-0.32,-1.92l-5.49,-6.4l0.28,-0.94l-0.82,-2.56l-0.24,-0.48l-0.82,-0.09l-0.57,-0.75ZM559.45,406.63l0.01,0.05l-0.04,-0.01l0.03,-0.04ZM556.62,392.44l0.03,-0.28l0.21,0.01l-0.06,0.19l-0.18,0.08ZM544.21,404.66l-0.1,-0.43l0.18,-0.99l0.21,0.06l-0.29,1.36Z\",\n            name: \"Thailand\"\n          },\n          XC: {\n            path: \"M54.11,189.32l0.71,-1.69l3.58,0.38l4.65,-1.22l-1.47,1.07l-0.12,1.43l-1.57,0.62l-1.16,-0.11l-0.33,-0.76l-0.7,-0.35l-1.48,-0.08l-2.13,0.7Z\",\n            name: \"N. Cyprus\"\n          },\n          NP: {\n            path: \"M410.28,243.11l-2.55,-1.76l0.5,-1.57l0.84,-0.96l0.17,-1.86l0.43,-1.13l1.67,-2.57l2.53,-2.12l0.36,0.0l0.71,0.97l1.05,0.04l0.69,-0.55l1.13,-1.86l1.45,-0.35l2.74,0.45l1.31,2.1l2.04,1.05l2.81,2.14l1.2,0.53l1.08,0.07l3.06,3.39l1.08,0.07l1.86,-0.7l0.91,0.36l1.07,2.57l4.26,2.86l2.43,-0.32l-0.44,1.39l0.29,0.76l0.99,0.39l3.39,0.13l2.33,2.94l1.09,-0.49l0.13,-1.05l0.41,0.62l1.7,0.81l1.0,-0.37l0.52,-1.03l3.86,2.13l3.7,0.19l1.83,-0.58l1.62,0.11l-1.18,5.52l0.99,1.89l0.33,1.4l-0.85,2.37l-1.11,-0.4l-1.63,0.3l-1.53,-0.18l-1.06,0.47l-1.13,-0.44l-0.63,-1.02l-2.53,0.89l-2.42,-1.08l-2.71,-0.61l-1.59,0.35l-0.56,-1.32l-0.61,-0.49l-0.81,-0.06l-2.2,0.7l-0.76,-0.85l-3.21,-1.41l-0.5,-1.97l-1.16,-0.57l-2.9,-1.14l-1.72,0.42l-0.54,0.41l-2.88,-0.65l-1.06,0.69l-3.82,-1.07l-0.63,-1.31l-1.72,-0.01l-3.45,-1.93l-1.06,0.34l-3.87,-2.4l-1.13,-1.33l-4.32,-2.53l-0.65,-0.19l-0.62,0.45Z\",\n            name: \"Nepal\"\n          },\n          PK: {\n            path: \"M269.48,270.83l0.52,-4.2l0.67,-0.75l0.57,-2.85l2.01,-1.0l0.97,-0.08l0.52,-1.04l0.77,-0.46l2.52,-0.65l2.87,-0.06l0.36,-0.47l0.11,-1.17l0.45,-0.39l-0.03,-1.58l0.47,-0.86l-0.52,-0.74l-0.77,-0.41l-2.77,0.13l0.39,-1.76l-0.54,-4.07l0.04,-2.2l-1.6,-0.09l-1.51,-1.37l-3.47,-1.08l-1.91,-1.91l-2.05,-3.71l-0.19,-0.94l-2.65,-2.99l10.89,3.26l8.22,-0.72l3.87,0.84l2.43,-1.24l5.25,-0.12l8.22,-2.31l1.17,-1.25l-0.51,-1.27l0.49,-1.74l-0.13,-2.39l0.42,-1.5l0.32,-0.75l1.44,-0.87l1.7,-1.97l1.13,-0.25l0.74,0.48l1.28,0.21l1.43,-0.15l2.17,-0.92l0.23,-0.41l-0.28,-0.62l-0.84,-0.53l0.92,-0.14l2.08,-1.08l1.11,-1.01l1.85,0.42l1.11,-0.38l1.19,1.17l1.06,0.19l1.7,-0.92l1.54,-1.71l-0.18,-4.32l1.19,-1.99l0.71,-2.75l2.97,-0.66l2.75,-1.73l0.12,-0.99l-1.13,-2.12l-1.89,-2.23l0.09,-0.52l0.46,-0.22l2.4,0.73l2.52,0.08l1.59,-0.27l1.74,-0.77l0.34,-0.78l0.03,-2.08l-0.91,-1.17l2.28,-2.78l1.25,-0.9l1.26,-1.87l-0.52,-1.21l0.4,-0.97l-0.21,-1.16l-1.35,-2.98l-1.47,-1.22l2.92,-2.92l1.05,0.02l3.08,-2.38l3.32,-1.04l8.46,-0.5l2.11,0.54l4.23,-1.81l1.89,0.66l1.45,-0.23l1.96,0.57l0.66,1.53l1.84,-0.02l1.15,0.7l0.89,2.05l-0.04,1.63l-0.48,0.91l0.16,0.54l1.26,0.65l0.79,1.44l0.87,0.06l1.8,-0.54l0.21,0.8l1.45,0.92l1.99,4.42l-0.25,0.7l-1.59,0.77l-1.22,1.27l-1.07,-0.14l-2.06,0.72l-1.13,0.04l-2.35,1.35l-1.72,-0.27l-2.12,-0.88l-1.69,-0.06l-5.08,-0.99l-2.74,1.13l-1.28,2.39l0.11,0.68l1.22,0.82l-0.53,0.92l0.26,0.83l0.45,0.32l1.89,0.13l-1.7,1.09l-0.33,0.76l0.06,0.8l1.21,1.19l-0.19,0.79l-0.96,1.3l0.16,0.78l1.0,1.03l1.2,0.61l0.09,1.56l0.37,0.35l2.14,0.21l0.01,1.64l0.32,0.43l1.07,0.42l1.4,-0.03l1.71,0.69l0.54,0.53l-0.41,0.71l-3.79,1.57l-1.57,1.26l-0.36,1.18l0.6,1.91l-0.55,2.25l0.18,0.66l0.63,0.48l-2.05,1.08l-3.26,3.73l-0.26,0.91l0.35,1.04l-0.24,0.33l-0.5,0.49l-3.35,1.5l-1.12,3.11l-2.36,4.12l-4.24,2.31l-1.61,3.3l-1.4,1.47l-0.56,1.59l-2.17,0.66l-2.71,0.32l-2.75,0.97l-0.54,-0.33l-0.39,-1.18l-0.59,-0.61l-0.85,-0.41l-0.84,0.03l-2.03,1.49l-1.89,3.07l-2.77,2.99l-0.51,2.6l0.37,0.82l1.92,1.06l2.4,0.39l0.41,0.36l-0.14,2.08l-0.42,1.24l0.25,1.53l1.41,1.76l2.65,0.16l0.04,1.91l2.84,5.54l-0.51,1.0l0.38,1.32l-1.88,0.98l-0.72,-0.22l-0.2,-0.99l-0.83,-0.16l-3.03,1.01l-0.66,0.78l-1.39,0.17l-1.84,-0.86l-5.29,0.01l-0.66,-0.31l-0.65,0.61l-0.06,2.13l-3.01,0.31l-1.21,1.0l-0.25,-0.26l-0.77,0.04l-0.58,-0.5l-1.41,0.59l-0.05,-0.45l-0.57,-0.33l-0.36,0.17l-0.45,-0.88l-1.14,-1.08l-1.04,-4.6l-0.84,-0.57l-2.73,-0.5l-0.04,-2.81l-1.28,-2.11l-0.79,-0.73l-0.95,-0.3l-1.12,0.15l-0.56,0.45l-0.14,0.63l-3.17,0.73l-1.97,-0.15l-2.65,0.5l-2.1,0.03l-0.99,0.92l-3.43,-1.07l-0.78,-0.57l-1.09,0.44l-1.53,-0.33l-1.4,0.26l-0.65,0.55l-0.13,0.54l-5.86,-0.39l-2.45,0.99l-1.15,-0.64l-0.84,0.54l-1.21,0.17l-1.92,-0.28Z\",\n            name: \"Pakistan\"\n          },\n          PH: {\n            path: \"M728.0,406.82l-0.36,-1.38l-0.85,-0.45l-0.93,0.16l-1.15,1.02l-2.46,5.15l-0.73,-0.16l-0.33,-0.59l0.11,-0.69l0.93,-1.32l0.61,-3.27l0.76,-0.92l0.9,-0.65l4.06,-0.9l0.64,-0.48l0.18,-1.27l0.58,-0.71l1.78,-0.64l0.67,-0.86l1.5,0.51l1.05,1.19l0.18,1.61l-0.78,0.77l0.18,0.69l0.35,0.07l3.3,-1.43l1.49,-2.74l1.27,0.56l1.14,-0.29l0.99,-3.03l1.85,0.74l0.43,-0.17l0.47,-1.0l1.03,0.24l0.92,-0.17l0.58,-1.41l-0.86,-3.85l0.23,-0.35l2.55,1.76l0.99,1.46l0.61,0.45l0.63,0.02l0.02,0.82l0.91,1.89l-1.33,1.93l0.36,0.57l1.35,0.53l0.09,1.0l0.58,1.01l-0.17,2.72l1.02,1.26l0.13,2.5l-1.03,2.12l-1.88,1.25l0.29,1.17l-0.14,1.8l-0.55,-2.81l-1.64,-3.69l-0.84,-0.17l-0.91,0.67l-0.34,1.13l-1.8,2.36l-0.19,0.91l0.45,0.91l1.14,1.03l0.58,1.69l-0.02,1.68l-1.46,2.17l-0.55,0.33l-0.44,-1.09l0.26,-1.7l-0.39,-0.57l-0.86,0.04l-1.06,1.35l-0.53,-0.03l-5.2,-2.61l-0.91,-1.16l-0.67,-4.15l1.48,-1.94l0.23,-0.75l-0.31,-1.0l-1.65,-1.77l-2.44,-1.24l-0.93,-0.12l-0.84,0.47l-0.61,2.56l-1.07,-0.63l-0.58,-1.24l-0.67,0.04l-0.67,0.99l-0.69,0.09ZM751.98,389.95l-0.18,-0.26l0.18,-0.69l0.14,0.94l-0.14,0.0ZM745.51,369.73l0.42,0.49l0.16,1.05l1.39,0.75l-0.5,1.78l0.06,1.37l0.32,1.81l0.73,1.51l-0.22,0.62l0.63,0.5l-2.56,-0.11l-0.47,-0.75l-0.93,-0.6l-0.74,-1.33l0.4,-0.56l0.14,-1.09l-0.98,-0.39l-1.49,-1.79l-1.73,-1.01l-0.94,-2.42l1.55,0.24l4.29,-0.34l0.49,0.25ZM748.54,386.17l-0.11,0.68l0.34,1.55l-0.61,-0.86l0.39,-1.37ZM739.46,377.82l1.66,1.21l0.85,-0.07l0.75,-0.56l0.45,0.12l0.62,1.05l-0.07,3.26l1.13,1.12l0.7,2.2l-0.69,0.15l-0.74,-0.82l-0.65,0.35l0.22,1.71l-0.96,-0.38l0.05,-1.08l-0.37,-0.87l0.42,-1.7l-0.12,-1.02l-0.99,-1.46l-0.64,-0.13l-0.92,0.39l-0.72,-3.46ZM741.83,394.7l0.21,0.21l0.02,0.05l-0.32,-0.14l0.09,-0.12ZM738.84,387.8l1.52,0.83l0.11,1.43l-0.73,0.19l-0.69,0.75l-1.65,0.22l-1.56,-0.43l-0.3,-0.72l0.22,-0.29l1.36,-0.84l0.84,-1.0l0.88,-0.14ZM740.7,376.89l-0.46,0.02l-0.5,-0.74l0.4,0.01l0.56,0.71ZM738.03,358.15l1.13,1.2l-0.08,1.14l-1.32,0.79l-0.56,-0.45l0.53,-0.81l0.29,-1.86ZM705.26,340.87l2.47,2.04l1.41,-0.15l0.67,-0.97l-0.6,-3.01l0.11,-1.65l0.63,-1.44l0.12,-1.17l0.03,-2.73l-0.49,-1.5l1.77,-6.46l1.32,-0.62l2.0,-0.1l3.6,1.82l2.76,0.73l1.03,-0.47l0.93,-1.16l0.42,0.95l-1.01,1.96l-0.19,3.22l0.71,1.92l0.97,0.75l0.23,1.08l0.76,0.5l-2.68,6.69l-2.48,0.82l-1.67,1.35l-0.26,0.82l0.33,1.21l-1.44,2.23l-0.12,1.02l2.1,3.92l-0.4,0.52l0.02,0.84l1.09,3.29l1.19,1.24l2.47,0.77l0.97,-1.01l-0.57,-0.9l1.81,-1.08l0.87,0.03l2.06,0.87l0.92,1.55l-0.08,1.24l0.44,0.57l1.57,-0.04l0.57,-0.88l-0.17,-1.26l0.65,0.61l2.8,0.96l-1.64,0.38l-0.5,0.9l1.98,2.8l-0.23,0.96l0.4,0.54l1.09,0.06l1.14,0.57l-0.03,1.33l-0.44,1.29l-0.68,-0.57l0.47,-1.43l-0.11,-0.49l-0.54,-0.26l-1.98,0.22l-2.2,-0.99l-0.07,-1.15l-1.0,-1.74l-2.27,-1.38l-2.18,-2.32l-0.91,-0.19l-0.54,0.57l0.27,1.97l1.2,2.03l-0.11,0.92l-1.4,-2.27l-2.36,-2.11l-2.3,-1.17l-1.29,0.2l-1.17,0.64l-0.51,1.04l-1.37,0.37l-1.88,-0.91l-0.84,-0.94l-1.27,0.09l-0.06,-1.93l2.25,-2.25l0.18,-1.37l-0.61,-0.85l-1.39,-0.49l-0.76,-0.67l-0.69,0.13l-0.29,1.08l0.3,1.96l-0.52,-0.01l-1.22,-2.35l-1.29,-0.55l-1.08,-4.3l-0.32,-3.15l-0.92,-1.36l0.09,-1.8ZM730.9,372.85l0.47,-2.32l-0.19,-0.94l1.67,0.72l2.65,2.11l0.94,1.95l-1.57,-0.81l-0.13,-0.48l-2.08,-1.69l-0.86,0.3l-0.91,1.16ZM731.8,392.09l0.51,-3.17l2.34,-3.7l1.75,-4.53l0.06,3.43l-0.31,1.27l-2.26,2.03l-1.54,4.05l-0.54,0.62ZM733.28,394.82l0.52,-0.32l0.02,0.02l0.03,0.32l-0.57,-0.03ZM729.86,395.26l-0.73,0.04l-0.95,-1.93l-2.17,-1.16l-1.04,-1.46l-0.07,-0.78l0.39,-0.76l1.78,-0.22l1.23,-0.96l0.09,-1.64l-0.32,-1.54l0.97,-1.36l0.18,-1.36l1.68,-0.66l1.65,0.46l0.3,0.71l-3.01,6.84l-0.11,2.09l1.29,2.24l-0.6,1.16l-0.53,0.31ZM721.54,384.46l0.08,-2.36l0.65,-1.73l0.41,-4.26l-0.36,-0.84l-1.14,-0.42l0.2,-0.25l2.11,0.9l2.44,1.59l1.7,-0.22l0.29,0.21l-0.12,0.52l0.57,0.41l1.39,-0.68l-0.56,1.97l-1.94,1.45l-0.31,1.24l-1.72,0.97l-2.45,0.54l-1.25,0.95ZM725.79,384.74l0.1,-0.57l0.69,-0.72l-0.33,1.11l-0.47,0.17ZM725.34,370.08l0.51,0.0l0.32,0.32l-0.09,0.37l-0.74,-0.68ZM720.66,414.08l1.28,-0.48l1.17,0.52l-0.4,0.68l-1.29,0.41l-0.76,-1.13ZM721.62,371.25l-0.28,-0.34l0.74,-1.88l-0.26,1.6l-0.2,0.62ZM720.72,362.06l1.2,0.4l0.06,0.49l-0.5,0.8l-0.89,-0.63l0.12,-1.06ZM720.92,351.28l-0.31,-0.65l0.56,-0.04l0.08,0.05l-0.33,0.63ZM709.61,362.34l0.4,-0.1l2.09,0.38l1.26,-0.21l1.33,0.83l0.82,-0.23l2.08,2.06l-0.43,1.29l0.47,2.2l-1.03,2.1l-0.97,0.66l-0.4,-0.1l-1.19,-1.44l-0.47,-1.51l-0.77,-0.79l-0.21,-1.61l-0.66,-1.28l-1.3,-1.01l-0.48,-1.08l-0.55,-0.15ZM714.98,418.53l0.26,0.35l-0.6,0.22l-1.1,-0.11l0.83,-0.57l0.6,0.1ZM716.05,419.0l0.09,-0.02l0.4,0.07l-0.27,0.16l-0.22,-0.21ZM705.98,371.66l1.18,0.87l0.96,-0.01l0.47,0.43l-1.79,0.03l-0.83,-1.33ZM705.87,425.31l0.15,-0.09l-0.05,0.07l-0.1,0.02ZM707.64,424.35l0.2,-0.16l0.09,0.18l-0.07,0.15l-0.22,-0.17ZM706.04,374.1l0.59,0.45l-0.2,0.86l-0.04,-0.42l-0.35,-0.89ZM705.7,384.54l-0.46,0.12l-0.04,-0.14l0.31,-0.32l0.42,0.15l-0.23,0.19ZM686.27,399.97l0.72,-1.41l1.79,-1.9l2.11,-1.98l0.99,-0.21l0.79,-0.65l6.81,-7.61l1.57,-1.03l0.72,-1.72l-0.35,-1.29l1.36,-3.0l-0.17,2.33l1.17,3.14l-0.52,0.53l-1.72,0.64l-0.72,0.68l-0.59,1.28l-3.03,1.1l-0.35,0.57l0.08,0.83l-2.38,3.62l-2.22,1.15l-1.14,1.74l-2.96,1.68l-0.61,0.88l-1.33,0.63ZM684.24,404.1l0.0,0.29l-0.02,-0.03l0.01,-0.26Z\",\n            name: \"Philippines\"\n          },\n          \"-99\": {\n            path: \"M383.52,185.67l4.19,1.15l0.92,0.04l-3.62,2.11l-1.48,-3.3Z\",\n            name: \"Siachen Glacier\"\n          },\n          AE: {\n            path: \"M194.39,278.76l0.73,0.08l0.22,1.31l1.15,0.87l2.69,-0.08l2.96,-1.26l9.41,0.59l3.95,-1.73l2.56,-4.17l2.65,-1.86l3.18,-3.64l3.09,-2.34l1.07,-2.06l-0.1,2.81l0.48,0.5l1.07,0.36l0.03,1.78l-0.57,-0.2l-0.39,0.23l-0.21,0.84l0.56,0.47l0.63,-0.33l0.03,1.52l-1.79,1.71l-0.31,-0.4l0.09,-0.97l-0.49,-0.37l-1.04,0.15l-0.73,0.82l-0.26,3.17l0.28,1.09l-0.3,0.77l0.18,0.5l1.19,0.25l0.25,0.52l-2.94,0.49l-0.73,0.46l0.14,1.92l-2.3,5.42l-0.13,2.62l-0.3,0.38l-18.8,-2.42l-7.07,-8.89l-0.12,-0.91ZM210.56,279.01l0.06,-0.02l-0.04,0.02l-0.02,-0.0ZM210.81,278.92l0.07,-0.02l0.01,0.01l-0.07,0.02Z\",\n            name: \"United Arab Emirates\"\n          },\n          CN: {\n            path: \"M365.41,172.16l1.93,-0.79l0.8,0.45l0.58,-0.03l1.6,-1.06l0.43,-0.78l-0.29,-0.77l-1.35,-1.08l0.27,-1.56l-1.1,-2.86l-0.11,-1.26l0.45,-1.34l-0.29,-0.65l-2.33,-1.28l-1.95,-0.56l-1.36,0.09l-0.9,1.0l-0.98,-0.49l-0.3,-0.68l-0.39,-1.26l0.69,-0.6l0.09,-0.46l-1.45,-2.26l0.19,-1.53l1.3,-0.4l0.68,-0.85l0.11,-0.56l-0.57,-1.51l1.04,-1.95l2.98,-0.74l2.05,-1.55l1.31,-0.33l-0.07,-1.23l1.05,0.36l1.84,-0.28l2.1,-1.29l0.52,2.3l0.55,0.54l1.46,0.02l2.76,-1.01l0.79,0.52l1.36,-1.01l1.34,-2.89l1.67,-2.04l4.86,0.3l1.85,-0.56l2.31,-0.19l1.9,-1.96l0.18,-0.83l2.68,-1.58l4.03,-1.95l3.58,-1.07l0.68,-0.91l2.92,-0.44l0.25,-0.55l-0.22,-0.96l0.32,-0.57l-0.71,-3.75l0.51,-0.97l2.29,-0.97l-0.24,-0.77l-0.99,-0.5l1.46,-0.67l1.2,0.13l0.41,-0.8l-0.89,-1.63l0.26,-0.97l-0.41,-1.27l-2.18,-4.85l-0.02,-3.97l0.89,-1.82l-0.41,-0.45l-1.46,-0.56l-2.01,0.06l-0.52,-0.32l1.06,-0.83l4.21,-1.09l1.68,-0.04l6.15,-1.96l0.53,1.0l1.26,0.66l2.52,-0.51l1.4,0.82l0.8,-0.08l0.85,-1.74l-0.07,-1.41l-2.19,-1.08l-0.03,-0.33l1.78,-5.22l3.14,-7.6l0.39,-1.94l4.63,1.67l2.32,0.49l2.47,-0.24l2.33,0.22l0.45,0.9l0.68,0.43l1.8,-0.78l1.62,-1.17l2.02,-0.37l1.39,-2.04l0.08,-0.98l-0.6,-1.42l-0.45,-3.93l1.19,-3.6l0.77,-0.73l3.25,-0.45l2.36,-0.85l1.29,-1.65l0.29,-3.02l0.79,-0.62l2.36,-0.13l1.58,0.27l2.52,-0.84l0.3,1.27l-0.63,0.38l-0.25,0.6l0.94,1.34l1.39,0.54l-0.65,1.04l0.38,0.7l2.38,0.77l1.49,0.83l0.5,1.57l3.63,2.12l1.18,0.22l2.09,-0.46l2.1,1.87l0.74,0.07l1.12,-0.53l0.57,1.23l1.53,0.67l1.28,3.58l1.64,2.65l1.19,0.55l0.79,1.76l0.33,1.76l-0.89,2.6l0.67,2.13l-2.13,2.76l-0.41,2.07l1.63,3.21l0.63,0.31l0.99,-0.22l1.89,0.9l1.02,-0.03l1.13,0.44l3.3,0.07l3.02,0.55l2.72,-0.24l5.34,0.82l0.96,0.37l2.24,2.07l1.85,0.32l1.15,1.07l2.73,1.63l2.56,0.85l1.99,-0.13l-0.13,2.0l1.51,0.81l2.29,5.05l0.18,1.08l3.31,3.2l0.69,1.92l6.41,-0.51l16.91,2.0l3.94,-0.98l8.21,1.13l3.03,0.12l1.08,0.31l2.26,2.49l1.52,0.61l6.88,1.38l4.74,2.27l5.67,-1.01l0.0,1.47l0.37,0.4l2.66,0.14l1.13,0.41l1.7,-1.31l11.66,-4.91l10.41,-1.41l3.86,0.28l4.94,-0.21l7.99,-3.04l4.65,-5.2l4.07,-1.44l1.61,-1.47l0.83,-0.18l0.58,-0.54l-0.07,-1.24l-0.79,-1.18l-2.28,-2.25l-0.82,-1.48l1.58,-3.99l1.88,-2.0l3.55,0.07l1.21,1.17l1.03,0.45l6.82,1.27l3.8,-2.14l2.62,-2.22l0.93,-1.63l1.11,-0.23l1.42,0.38l1.82,-0.11l4.12,-0.73l1.86,-1.53l2.09,-1.18l0.37,-0.81l-0.17,-0.73l0.97,-1.75l1.14,-1.01l0.39,-0.77l1.9,-0.8l3.64,0.23l0.44,-0.45l0.38,-1.65l2.28,0.62l2.45,-1.39l1.7,-0.45l3.01,0.22l0.98,-0.62l2.2,1.09l1.38,0.27l2.89,0.08l1.36,-0.66l0.42,-0.79l-0.01,-1.52l-0.83,-1.16l-0.58,-1.61l-1.47,-1.11l-1.85,-2.1l-0.88,-0.45l-0.64,-1.25l-2.39,-0.99l-1.95,-2.14l-2.92,-0.51l-2.87,0.4l-3.15,3.15l-1.88,-1.41l-2.46,-0.62l-1.86,0.29l-2.09,-0.18l-2.41,1.59l-1.87,-1.6l-0.37,-0.56l-0.2,-1.43l1.92,-1.29l0.24,-3.01l1.51,-1.96l4.75,-9.76l3.9,1.76l1.78,0.17l3.07,0.94l4.54,-3.28l2.18,-1.11l2.92,-0.5l1.09,-0.71l0.55,-1.02l0.15,-1.22l-0.37,-0.95l-0.7,-0.36l0.55,-1.35l1.21,-1.37l0.54,-1.66l1.7,-2.34l0.5,-1.58l1.13,-1.51l0.76,-1.79l4.55,-3.66l0.6,-1.37l-0.01,-1.26l-0.61,-1.07l0.23,-1.97l-0.32,-0.74l-1.34,-0.73l-2.61,0.11l-0.48,-0.19l-0.1,-0.51l4.76,-4.34l1.99,-1.08l3.13,-0.33l6.78,-1.67l1.46,0.26l1.76,-0.12l3.07,-0.78l3.35,0.02l3.91,1.85l0.58,-0.06l1.7,1.35l1.37,0.23l1.22,0.74l0.7,0.1l0.53,-0.55l0.9,-0.2l3.43,1.55l0.68,0.02l0.53,1.46l1.13,0.28l1.21,1.21l-0.23,1.29l1.31,0.91l1.03,1.41l1.33,4.47l1.4,2.18l0.09,1.43l0.69,0.57l0.23,1.91l0.73,2.23l2.84,3.84l0.26,1.27l-0.31,1.03l0.33,1.29l1.69,1.29l-0.63,2.16l0.49,1.84l1.34,1.43l2.23,1.04l1.9,0.12l3.44,-0.39l0.69,1.23l1.5,0.44l0.48,0.5l2.05,0.2l1.04,-0.33l0.28,0.55l1.11,0.51l2.6,2.84l1.28,0.86l2.66,0.35l0.27,0.48l-0.44,1.57l1.87,2.66l-0.63,1.79l0.12,1.26l0.95,1.05l0.8,2.01l0.48,0.35l2.6,-0.29l1.75,0.43l1.71,0.01l5.1,-0.34l0.97,-0.59l0.99,-1.59l1.3,-0.37l1.9,-1.17l2.51,0.05l2.79,-1.68l3.24,-0.92l1.8,0.44l0.68,0.74l-0.82,1.93l1.31,2.75l-1.38,1.91l-1.77,0.61l-1.07,1.16l0.13,1.79l-0.94,1.69l-0.37,2.24l-1.12,1.92l0.19,1.39l-0.26,1.0l-1.13,0.94l-0.42,1.75l-1.06,0.82l-0.49,2.38l-1.96,1.19l-0.56,1.69l-0.04,1.63l-0.95,0.67l-0.5,-0.19l-0.1,-0.71l-0.73,-0.85l-2.53,-0.96l-1.5,0.01l-1.59,0.8l-1.29,-0.76l-1.5,1.14l-1.57,2.05l-2.71,0.69l-0.86,0.69l-0.15,0.9l0.85,1.78l1.22,4.66l-0.58,3.36l0.06,1.87l0.53,0.57l0.03,0.49l-0.58,2.05l-0.7,1.11l-0.07,0.94l-4.14,1.05l-0.65,0.58l-0.03,0.7l-0.59,-0.73l-0.01,-1.18l-0.31,-0.41l-1.13,-0.73l-1.86,-0.14l-0.96,2.12l-0.46,2.74l-0.99,0.52l-0.82,-0.43l-1.06,0.26l-0.85,1.04l-0.2,0.87l-1.83,1.42l-4.49,0.11l-2.3,0.6l-0.07,1.14l1.87,2.53l-0.82,1.45l-0.79,-0.53l-2.49,0.07l-3.67,-0.8l-0.72,-1.27l-1.0,-0.87l-0.72,-0.04l-1.3,0.54l-1.1,0.89l-0.72,2.33l-3.69,4.02l-2.02,0.41l-2.24,1.77l-2.61,1.03l-0.65,0.71l-0.77,0.09l-3.8,3.18l-0.88,1.57l-1.07,0.65l-2.36,0.15l-0.71,-0.45l-0.52,0.08l-0.5,0.75l-1.65,0.2l-0.91,0.64l-1.3,0.1l-1.6,0.69l-3.78,2.06l-2.63,2.74l-0.86,0.47l-1.56,0.08l-0.33,0.43l0.11,0.72l-2.19,0.42l-0.92,0.53l-0.13,-0.29l-0.07,-0.57l4.01,-1.54l0.22,-0.52l-0.31,-0.79l1.22,-1.18l-0.06,-0.68l-0.47,-0.17l-3.25,0.2l-0.06,-0.93l1.74,-0.99l-0.29,-1.01l0.19,-0.48l2.16,-1.03l2.89,-3.56l0.71,-1.79l-1.18,-1.72l-1.96,-1.27l-0.15,-1.0l-0.5,-0.33l-0.86,1.13l-4.24,-0.41l-3.06,2.81l-2.15,3.11l-6.55,2.87l-1.62,1.4l-1.06,1.8l-0.29,1.35l-1.66,1.8l-2.61,0.05l-2.19,0.87l-0.95,-0.95l-1.18,-0.38l-1.31,0.31l-0.87,0.71l-1.75,3.93l0.04,0.86l0.74,1.75l0.99,1.17l1.99,1.17l3.96,0.77l1.87,-0.27l0.87,0.6l0.96,2.56l-0.66,0.56l-0.29,2.76l1.44,1.5l2.65,0.69l2.41,-0.26l1.17,-0.95l0.09,-0.91l3.1,-2.29l0.03,-0.55l2.97,-1.14l2.03,0.85l1.23,1.04l1.38,0.26l1.86,1.0l2.57,0.17l0.84,-0.7l0.59,0.59l1.26,0.44l1.79,-0.09l-0.29,0.5l0.08,0.95l-0.94,0.91l-0.01,0.5l0.48,0.56l-1.09,0.82l-1.15,-1.08l-1.81,-0.01l-6.7,3.02l-1.68,-0.21l-0.45,0.45l0.75,1.29l-0.79,-0.14l-0.62,0.55l-0.37,2.19l-1.61,0.56l-0.14,-1.17l-0.39,-0.27l-1.33,0.32l-0.74,0.8l0.02,0.46l0.97,1.03l-1.13,0.58l-0.68,1.11l-0.81,0.79l-1.15,0.53l-1.43,1.93l-0.66,0.44l-0.69,1.69l-1.07,1.0l-0.38,1.38l0.27,1.08l0.38,0.28l1.03,-0.01l1.65,1.37l2.88,1.15l2.1,1.34l1.78,5.33l2.69,5.12l0.01,3.15l1.12,0.84l2.52,1.12l0.31,0.31l0.11,1.46l0.69,0.76l1.93,1.05l0.68,1.25l0.04,0.49l-0.31,0.01l-3.09,-1.32l-2.66,-0.06l-1.4,-1.34l-2.11,-0.64l-3.93,1.47l0.15,0.72l1.17,0.25l2.43,-0.92l1.32,0.24l0.62,1.36l2.02,0.84l2.18,1.92l2.25,1.33l0.86,1.19l0.56,1.61l-3.15,0.91l-0.86,0.76l-2.29,1.14l-1.2,1.61l-2.92,-0.2l-1.6,0.91l-0.46,0.83l1.46,0.15l1.0,-0.36l1.22,1.3l2.19,-0.28l1.82,-1.1l1.07,0.13l2.4,2.39l2.18,0.81l-3.43,2.67l-0.11,0.47l0.43,0.23l1.38,-0.22l1.47,-0.89l-0.17,3.07l-1.0,-0.86l-1.54,0.12l-0.7,0.55l-0.3,0.5l0.27,0.6l1.37,0.93l-0.97,0.15l0.14,0.48l0.67,0.48l-1.27,1.36l0.88,2.44l-1.79,0.73l-0.3,-0.73l-1.02,-0.07l-0.61,0.52l-0.97,1.92l-1.31,0.12l-0.34,0.56l0.6,0.64l-1.69,2.36l0.04,1.5l-1.57,1.94l-0.86,0.57l-1.09,1.77l-0.4,1.67l-0.76,0.38l-0.45,-0.81l0.02,-0.72l-0.56,-0.43l-0.78,0.86l-0.61,-0.34l-0.62,0.35l0.39,1.4l1.15,0.72l0.58,1.26l-2.78,2.07l-2.21,-0.53l-0.42,0.18l0.03,0.46l1.09,1.3l1.33,0.19l1.18,-0.41l-0.7,2.87l0.55,1.27l-1.1,-0.57l-2.04,0.21l-0.33,0.69l0.86,1.11l-1.36,-0.12l-0.71,0.28l-0.47,0.66l0.03,1.46l-1.86,0.71l-0.31,0.44l0.55,0.71l-0.3,0.65l-2.35,0.26l-1.61,-0.4l-0.83,0.65l-0.15,0.55l-0.9,0.02l-0.35,0.45l0.13,0.53l0.5,0.44l0.87,0.1l0.09,0.53l-1.42,1.61l-0.81,0.11l-0.79,1.15l-1.32,0.28l-0.25,1.38l-0.67,-0.56l-1.52,1.02l-1.31,-0.48l-0.47,0.3l-0.34,1.39l-1.77,0.94l0.48,0.64l-1.03,0.52l-0.45,1.76l-1.73,-0.15l-0.55,0.62l-2.18,0.65l-1.7,-0.36l-0.59,0.23l-0.53,0.81l-2.2,-0.75l-2.07,1.04l-0.44,0.51l-0.39,-0.04l-0.21,-0.64l-0.71,-0.39l-0.84,0.55l-0.46,1.11l-1.09,-0.4l-0.68,0.36l-1.01,-0.14l-1.26,0.3l-2.13,-2.38l-0.23,-1.15l0.2,-0.62l-0.46,-0.57l-0.87,0.25l-0.56,0.37l-0.12,0.91l-0.62,0.17l-0.28,0.49l1.65,2.52l0.24,1.88l-0.75,0.82l-1.87,0.83l-0.33,-0.77l-0.67,-0.1l-0.7,0.91l-0.26,1.4l-1.03,-0.33l-1.55,1.19l-0.69,-0.45l-0.17,-0.81l-0.8,-0.23l-0.35,0.51l0.19,1.14l-0.28,0.19l-2.61,-0.83l-0.77,1.07l-0.81,0.08l-1.15,1.15l-1.48,0.18l-0.61,0.37l-2.15,-0.19l-0.49,0.72l-1.63,0.37l-1.41,1.26l-0.31,-0.01l-0.52,-0.93l-0.57,0.3l-0.23,1.14l-1.23,0.94l-0.45,1.17l0.53,0.96l1.17,0.14l-0.41,0.45l0.04,0.79l1.36,1.09l-0.39,0.78l-0.62,0.37l-1.52,0.22l-1.17,-0.21l0.5,-0.6l-0.12,-0.35l-0.9,-0.7l-0.38,-0.62l0.04,-0.8l-1.0,-1.46l0.15,-1.56l0.65,-1.38l1.11,-0.59l0.07,-0.82l-0.39,-0.44l-0.58,-0.02l-0.41,-0.47l-0.65,0.09l-0.66,-1.03l-0.75,-0.24l-0.42,0.45l0.13,0.95l-2.47,0.67l0.17,-0.72l-0.39,-0.5l-0.73,-0.33l-1.8,-0.04l-0.98,-0.95l0.02,-0.73l-0.49,-0.43l-0.85,-0.03l-0.41,0.4l0.28,1.81l-1.09,-0.56l-0.72,1.04l-1.76,0.38l-1.62,-1.11l-2.08,0.41l-0.94,-0.16l-0.4,-0.55l-1.64,-0.72l-0.67,-1.01l-2.21,-0.67l-0.05,-1.66l-0.85,-1.11l0.23,-1.03l0.85,-0.53l0.68,-1.22l-0.12,-0.55l-1.84,-1.05l-2.07,0.36l-0.61,-0.73l-1.03,-0.2l-1.55,0.41l-2.03,-1.1l-0.83,-1.24l-1.34,-0.95l-3.55,1.72l-0.4,0.52l-0.2,1.34l-0.59,0.51l-1.18,0.15l-1.14,0.75l-1.15,-0.81l-1.33,0.5l-0.71,1.62l-2.1,-1.83l-0.89,0.42l-0.34,0.84l-0.66,-0.95l-0.63,-0.28l-2.47,2.5l-0.96,-1.02l-2.81,-1.34l-0.72,0.28l-1.91,2.51l-0.8,-0.35l-1.25,0.29l-0.63,-0.68l-0.72,0.09l-1.52,2.27l0.6,2.11l0.99,1.28l-0.12,3.86l0.49,0.66l-0.21,0.19l-1.25,-0.61l-1.95,0.36l-0.72,-3.85l-0.68,-0.58l-2.1,0.82l-1.69,1.42l-1.7,-0.24l-1.38,0.2l-0.21,-1.14l-1.18,-0.84l0.08,-1.61l-0.3,-0.58l-2.69,-0.64l-2.81,-0.24l1.23,-2.56l0.32,-2.41l0.95,-1.33l-0.39,-0.85l-0.53,-0.32l-3.83,-0.86l0.06,-1.37l-0.58,-1.01l0.2,-0.92l-1.13,-2.02l1.18,-1.77l-0.43,-0.41l-1.68,0.35l-0.79,-0.3l-2.18,0.04l-1.61,0.4l-2.81,1.32l0.84,-1.22l0.22,-0.96l-0.41,-1.54l-0.9,-0.73l-0.01,-0.93l0.33,-0.93l1.19,-0.86l-0.14,-1.39l0.61,-1.38l0.71,0.03l0.73,-0.48l0.79,-1.13l0.31,-1.17l1.26,-0.02l1.09,-1.65l1.23,-0.37l0.32,-0.55l-0.67,-1.69l0.86,-0.76l0.43,-4.22l-0.66,-7.13l-1.8,-1.02l-0.57,0.17l-0.4,0.7l-1.44,-4.65l-1.61,-1.77l-0.96,-0.11l-0.91,-1.15l-1.37,0.09l-1.35,2.06l-1.61,-1.06l-0.9,0.21l-1.36,-0.21l-1.36,-0.76l-1.94,0.67l0.2,-0.69l1.76,-1.77l0.1,-0.45l-1.17,-2.46l-1.06,0.09l-1.05,0.71l-0.08,-0.57l1.44,-0.92l0.25,-0.5l-0.29,-0.57l-0.99,-0.04l-1.3,-1.5l-1.5,0.45l-2.8,1.52l-0.86,1.33l-4.2,-1.08l-0.75,-0.94l-0.89,-0.16l-2.52,1.41l-1.3,1.3l-0.57,0.11l-1.02,1.34l-1.01,0.57l-3.9,0.88l-1.06,1.91l-3.46,2.48l0.09,1.15l-1.65,0.89l-1.35,-0.09l-1.97,0.85l-2.08,-0.24l-0.06,-1.23l-2.85,-1.31l-0.73,0.08l-1.25,0.75l-2.26,-0.8l-2.52,-0.06l0.13,-0.91l-0.36,-0.43l-1.9,-0.49l-1.67,0.07l-3.31,1.99l-2.43,2.86l-0.47,0.99l-1.06,0.94l-0.36,0.83l-0.47,-0.95l0.7,-3.01l-0.46,-1.27l-1.45,-0.74l-3.94,1.17l-0.48,0.51l-1.46,-0.05l-1.76,0.57l-3.44,-0.17l-0.89,-0.71l-1.94,-0.74l-0.44,-0.54l-0.79,-0.17l-0.62,0.16l-0.51,1.14l-0.41,0.1l-1.18,-0.63l-0.68,-0.79l-0.42,-0.01l-0.64,0.58l-0.21,0.98l-0.87,-1.65l-1.27,-1.21l-4.14,-0.33l0.41,-1.76l-0.28,-0.52l-0.91,-0.15l-1.8,0.4l-4.06,-2.75l-1.11,-2.6l-1.55,-0.5l-2.33,0.75l-3.12,-3.41l-2.3,-0.61l-2.71,-2.08l-2.01,-1.02l-1.48,-2.22l-3.04,-0.5l-1.83,0.42l-1.42,2.12l-0.6,0.33l-0.93,-1.59l-2.82,-1.74l-2.92,-0.99l0.03,-1.27l-0.49,-0.51l-0.64,-0.03l-2.05,-1.46l-1.84,0.08l-1.16,-0.84l-2.21,-2.86l-0.78,-0.2l-0.62,0.71l-1.06,0.34l-0.1,-1.14l0.46,-0.91l-0.04,-0.48l-0.73,-0.9l0.3,-1.79l-1.83,-2.23l-0.67,-2.27l1.73,-0.24l0.39,0.91l1.42,1.02l1.21,-0.27l1.4,-1.33l-0.13,-3.73l-0.73,-0.85l0.2,-1.15l-2.48,-2.76l-0.55,-4.19l1.72,-1.52l0.09,-0.95l-0.44,-0.7l-1.95,-1.37l-2.81,-1.04l-1.98,-4.96l0.26,-1.64l-0.3,-0.58l-1.28,0.21l-0.77,-0.36l-2.5,0.16l-2.61,-0.64l-3.32,-1.46l-0.35,-0.26l-0.07,-0.79l-0.48,-0.35l-2.59,0.64l-0.62,-1.33l-1.12,-0.49l0.45,-0.83l0.03,-1.94l-0.34,-1.28l-0.81,-1.23l-1.46,-0.87l-1.58,0.1l-0.77,-1.56l-2.25,-0.65l-1.24,0.26l-1.4,-0.66l-1.17,0.05l-0.72,-0.59ZM784.71,123.62l0.4,0.07l0.21,0.23l-0.36,-0.13l-0.25,-0.17ZM723.42,232.07l-1.54,-0.41l-0.17,-0.27l0.52,0.01l1.19,0.67ZM716.28,217.72l0.89,0.27l0.35,0.57l1.35,0.76l-2.09,-1.02l-0.5,-0.58ZM715.46,247.46l0.02,-0.03l0.0,0.02l-0.02,0.01ZM704.67,268.77l-0.0,-0.09l0.08,-0.21l0.02,0.22l-0.1,0.07ZM704.8,268.19l-0.02,-0.24l-0.07,-0.11l0.19,0.14l-0.1,0.2ZM626.1,313.41l0.45,-0.31l1.5,-0.02l0.99,-0.61l1.85,0.16l1.43,-0.24l0.73,-0.47l0.93,0.1l0.73,0.49l0.25,-0.45l0.9,0.43l0.57,-0.36l0.13,-0.8l1.76,1.26l0.46,1.85l-1.34,0.72l-1.36,2.07l-0.57,1.05l-0.86,3.16l-2.89,1.77l-0.1,0.61l-1.5,0.17l-1.06,1.16l-1.01,0.2l-3.6,-1.12l-2.23,-1.17l-0.45,-2.39l0.16,-3.13l4.5,-3.46l0.1,-0.45l-0.47,-0.24Z\",\n            name: \"China\"\n          },\n          AF: {\n            path: \"M263.13,194.66l1.33,-0.91l1.1,-1.84l0.56,-2.35l-0.33,-1.15l0.64,-0.51l0.68,-2.24l2.02,1.52l2.71,-0.08l1.58,1.21l0.79,1.07l1.38,-0.62l1.85,-0.09l2.97,-1.9l0.83,-2.18l-0.38,-0.98l1.1,-0.05l4.17,-1.31l1.19,-0.03l0.71,-0.9l1.92,-0.94l1.23,-1.03l2.34,-6.82l1.81,-0.8l3.41,-0.11l1.57,-2.69l2.48,1.27l2.72,0.6l2.73,-0.22l1.64,0.29l0.86,0.78l1.11,0.31l1.4,-0.46l1.44,0.32l0.85,1.3l0.93,0.79l0.99,0.28l1.84,-0.67l0.82,-0.97l2.16,-1.04l1.07,-0.09l0.54,-0.51l2.73,1.92l1.42,-1.18l-0.1,-1.72l0.51,-0.98l2.24,-0.43l2.22,0.57l0.76,-0.4l0.65,-1.03l-0.33,-2.03l1.5,-1.31l1.47,-2.23l0.78,-0.67l0.88,-0.24l1.13,0.29l1.38,0.87l0.46,0.95l-0.35,1.35l0.2,1.16l0.51,0.18l1.53,-0.27l-1.09,6.68l0.76,2.5l0.5,0.96l0.78,0.52l1.31,-0.02l4.09,-2.44l2.19,-0.39l1.93,-2.11l3.52,-1.63l2.11,0.32l-0.71,0.81l0.06,0.5l1.16,0.37l3.23,-0.85l0.78,-0.74l3.04,0.38l-2.53,1.09l-0.19,0.6l0.87,0.8l-3.12,1.43l-1.91,-0.55l-8.59,0.51l-3.63,1.14l-2.93,2.3l-1.2,0.04l-2.87,2.67l-0.48,0.82l0.3,0.78l1.32,1.02l1.26,2.8l0.16,0.92l-0.39,1.09l0.52,0.89l-1.08,1.56l-1.15,0.81l-2.41,2.82l-0.1,0.83l0.86,1.05l-0.03,1.85l-0.18,0.37l-2.73,0.74l-2.35,-0.07l-2.43,-0.75l-1.31,0.69l-0.06,1.27l1.94,2.25l1.04,1.99l-0.09,0.34l-2.33,1.35l-2.61,0.41l-0.64,0.44l-0.88,3.06l-1.19,2.0l0.24,4.16l-0.58,0.69l-0.74,0.79l-1.38,0.76l-1.78,-1.33l-1.45,0.33l-2.07,-0.39l-1.26,1.1l-3.3,1.43l0.0,0.89l0.73,0.66l-0.53,0.31l-2.14,0.46l-1.14,-0.18l-0.79,-0.49l-1.68,0.34l-1.85,2.08l-1.41,0.83l-0.55,1.09l-0.47,1.65l0.12,2.44l-0.5,1.81l0.43,1.28l-0.65,0.55l-7.99,2.23l-4.32,-0.04l-1.96,0.48l-1.27,0.86l-3.88,-0.8l-8.12,0.73l-11.54,-3.48l6.64,-7.54l0.32,-2.24l-0.46,-1.86l-1.04,-1.1l-5.98,-0.83l-0.21,-2.89l0.3,-3.19l-1.99,-7.16l2.65,-3.31l-0.38,-0.57l-2.37,-0.37l-0.45,-0.7l0.29,-1.15l-0.29,-1.99l0.97,-1.49l1.66,-0.09l0.29,-0.64l-0.98,-1.34Z\",\n            name: \"Afghanistan\"\n          },\n          IQ: {\n            path: \"M125.37,172.77l1.95,-1.22l0.78,-0.94l1.16,0.37l1.24,-0.35l4.35,1.19l1.2,0.03l1.46,-0.77l0.5,0.07l0.44,0.53l0.09,1.72l0.79,0.56l2.58,-1.7l0.69,0.07l0.9,2.88l1.07,0.96l0.23,1.88l0.57,0.71l0.86,0.33l1.15,3.11l1.42,0.29l1.68,1.36l3.14,0.13l-1.41,0.56l-0.54,1.37l0.08,0.71l0.99,1.29l0.2,1.22l-1.54,0.83l-1.82,1.95l-0.25,1.77l-0.74,-0.06l-0.45,0.37l-0.45,1.3l0.76,1.82l-1.02,2.28l2.56,3.1l1.08,-0.0l-0.11,0.57l0.29,0.52l0.85,0.46l0.87,1.45l-0.48,1.1l0.35,1.36l2.11,0.33l5.49,3.81l1.79,0.29l1.01,2.18l2.3,2.86l-1.06,3.07l-0.02,3.42l0.38,0.4l2.1,0.09l0.03,3.94l1.72,1.49l0.78,0.29l0.81,2.06l-1.95,-0.76l-1.42,0.35l-2.08,-0.8l-2.62,0.13l-0.97,0.37l-0.93,0.76l-1.6,3.52l-2.66,3.43l-1.13,0.23l-12.17,-1.05l-19.68,-15.44l-12.8,-7.12l-8.45,-1.44l0.59,-0.87l-0.34,-0.89l-0.45,-0.25l-1.2,0.28l-0.2,-0.63l0.45,-0.55l-2.04,-7.04l14.03,-7.89l1.79,-0.45l0.56,-0.45l1.68,-3.13l0.16,-4.4l1.03,-3.03l-0.03,-1.6l-0.78,-2.18l0.35,-2.43l0.73,-0.93l2.85,-0.77l4.37,-4.38Z\",\n            name: \"Iraq\"\n          },\n          JP: {\n            path: \"M869.1,98.66l1.75,-0.84l3.26,3.32l3.55,4.25l6.71,5.04l2.54,0.27l2.9,1.4l1.9,0.2l1.33,-0.56l3.0,-2.78l-1.69,3.31l-0.21,1.25l1.8,4.23l1.68,0.42l-1.41,0.23l-3.12,1.57l-2.16,0.49l-3.23,-0.24l-1.9,0.92l-2.95,2.59l-1.18,1.68l-1.26,3.56l-5.13,-2.24l-4.91,-2.89l-3.56,0.24l-3.12,1.79l-1.8,-1.77l-2.05,-0.12l-1.27,1.37l-0.29,0.99l0.17,0.69l1.58,1.52l1.6,0.19l2.73,2.36l-1.19,0.22l-2.17,-0.56l-1.32,1.32l-0.75,1.34l-1.78,0.69l-0.46,-0.91l0.82,-3.12l-0.47,-1.54l-1.58,-1.77l0.18,-2.51l0.16,-0.42l2.41,-1.29l1.69,-1.6l0.38,-1.25l-0.63,-1.01l-0.05,-0.81l0.91,0.01l1.81,0.98l2.53,0.25l1.29,-0.2l0.83,-0.99l0.3,-1.08l-0.11,-2.27l1.83,-3.39l0.14,-2.29l0.75,-2.08l0.15,-2.27l-0.5,-2.16l-0.97,-1.91l0.52,-1.84ZM797.15,199.72l-2.57,-1.61l-2.21,0.27l-1.69,0.57l-1.02,-0.53l-1.02,0.12l-0.16,-1.76l0.63,-0.77l2.7,-0.24l1.86,-1.68l1.91,-0.98l3.04,-2.52l2.67,-2.39l0.63,-0.98l1.51,-0.69l2.29,-0.37l1.09,0.82l1.69,-0.43l2.79,0.03l1.83,-0.29l1.79,-0.74l3.12,-0.29l2.19,-0.7l0.26,0.06l-0.18,1.1l0.85,0.68l2.74,0.22l1.11,-0.42l2.39,-1.97l-0.57,-2.1l0.4,-0.94l2.14,-2.04l2.55,-3.28l0.45,-1.95l-0.2,-2.13l0.78,-1.34l3.05,-1.07l-1.26,1.28l-1.65,0.92l-0.36,0.67l0.73,1.13l0.3,1.76l0.95,0.6l1.0,0.19l1.03,-0.3l1.18,-1.46l6.0,-2.29l1.79,-1.56l1.26,-1.52l1.25,-2.38l2.64,-1.4l1.29,-1.28l0.94,-3.21l2.1,-3.3l0.85,-3.08l0.92,-1.59l0.24,-1.99l-0.07,-1.16l-0.49,-1.08l-0.5,-0.42l-0.89,-0.06l0.74,-0.65l0.81,-2.26l-0.66,-2.93l0.62,-0.94l1.24,-0.36l0.75,-0.77l0.52,-1.54l-0.08,-1.59l1.48,0.12l0.32,2.43l0.68,0.84l0.91,-0.09l0.69,-0.8l1.64,0.42l0.94,-1.16l0.28,-1.02l-0.12,-1.08l-0.8,-0.68l-2.52,0.82l0.41,-1.91l0.27,-0.42l2.22,1.27l1.07,-0.21l-0.29,2.18l0.24,3.4l0.32,1.16l1.4,1.26l1.05,1.5l1.42,4.28l-0.1,3.09l-0.56,2.58l-1.66,1.14l-0.97,2.0l-0.54,2.99l-2.66,0.62l-1.2,1.82l-0.27,1.84l0.81,4.19l-0.25,2.97l-0.22,0.85l-1.25,1.25l-0.55,1.12l-0.77,1.97l-0.42,2.39l0.41,1.75l1.51,2.46l-1.28,0.42l-1.4,1.32l-0.76,2.79l-3.37,2.17l0.16,-2.7l1.76,-1.96l0.18,-0.57l-0.98,-1.12l-0.81,-0.07l-0.86,0.22l-0.46,0.57l-0.11,0.87l-0.77,0.64l0.28,2.04l-1.35,-1.19l-1.76,0.18l-0.84,0.66l-0.47,1.16l-0.21,2.14l-1.23,1.57l-0.41,-0.3l0.29,-2.03l0.55,-0.31l0.08,-0.64l-1.53,-0.93l-1.49,0.44l-2.44,3.02l-0.4,0.92l-2.16,-0.39l-4.01,0.1l0.08,-0.5l-0.5,-0.63l-1.57,0.08l-0.59,-0.56l-0.49,0.08l0.01,-1.77l-1.08,-0.14l-1.03,0.73l-1.2,2.64l0.69,1.14l1.89,1.24l-0.11,0.44l-2.17,0.49l-1.78,0.83l-3.03,5.07l-1.4,0.53l-1.55,-0.48l-2.28,-3.54l-0.16,-2.19l1.06,-0.6l0.93,-1.05l0.29,-0.62l-0.14,-0.95l-0.68,-0.38l-2.31,0.19l-2.27,-1.13l-3.88,0.47l-2.11,1.59l-3.9,0.79l-2.17,1.03l-0.97,-0.18l-2.53,0.68l-1.6,-0.83l-1.15,0.19l-0.84,1.15l-0.63,2.77ZM865.75,100.56l-0.16,0.02l-0.34,-0.3l0.21,-0.05l0.29,0.33ZM852.34,128.05l-0.01,-0.06l0.07,-0.12l-0.06,0.17ZM843.87,165.83l0.27,-1.03l-0.54,-0.64l0.99,-1.22l-0.26,1.06l0.73,0.5l-0.33,0.78l-0.86,0.54ZM817.81,195.39l0.11,0.97l-0.91,0.42l-0.18,-0.21l0.98,-1.19ZM799.43,203.31l2.14,-1.59l1.03,-2.45l0.92,-0.71l1.41,1.39l3.48,-0.79l0.56,-0.72l0.01,-1.08l2.1,-0.96l0.82,-0.08l3.06,1.19l0.79,-0.04l0.42,2.93l-2.28,1.59l-1.02,1.44l-0.37,1.1l-1.12,-1.23l-0.91,-0.46l-2.01,-0.15l-2.79,1.49l-1.02,2.25l-0.9,0.74l-0.38,1.27l-0.61,0.55l-0.91,-0.13l0.24,-0.55l-0.3,-0.55l-1.28,-0.14l-0.37,-0.85l0.5,-1.92l-0.78,-0.48l0.04,-0.61l-0.46,-0.44ZM806.3,180.01l-0.4,0.05l-0.11,-0.36l0.22,-0.13l0.29,0.44ZM779.3,207.59l0.61,0.97l1.43,0.4l0.37,-0.57l-0.55,-1.19l-2.44,-2.04l0.11,-0.44l1.3,0.29l0.51,-0.3l-0.03,-0.87l1.56,-0.56l0.61,-0.58l1.53,-0.34l1.02,-1.74l1.24,-0.61l1.69,0.3l0.71,1.52l1.14,0.82l1.52,0.28l1.66,-0.66l0.51,0.26l0.05,0.4l-1.27,1.89l0.29,0.6l2.08,0.18l-0.1,0.69l0.71,0.75l-0.05,0.84l0.5,0.31l-1.93,2.27l-0.62,1.2l-1.5,4.83l-0.01,1.79l-0.79,1.89l-1.25,-0.29l-0.84,0.25l-0.28,0.85l0.34,0.72l-1.19,0.96l-0.58,0.29l0.35,-1.29l-0.62,-2.27l0.59,-0.38l0.08,-0.63l-0.47,-0.69l-1.31,0.06l-0.77,1.34l-0.24,1.11l0.7,1.77l-2.46,-0.77l-0.16,-0.39l0.94,-0.5l0.22,-1.32l-0.96,-1.54l0.01,-2.43l0.83,-0.31l0.6,-0.67l1.88,-3.4l-0.33,-0.56l-0.48,-0.05l0.3,-0.59l-0.17,-0.81l-1.26,-2.24l-1.27,-0.93l-1.28,0.67l0.23,2.45l0.36,0.37l0.9,-0.08l-0.06,0.75l-1.61,-0.78l-1.42,0.81l-1.2,-2.07ZM788.9,226.85l0.01,-0.11l0.07,-0.14l-0.02,0.14l-0.05,0.1ZM785.8,229.65l-0.74,0.03l-0.25,-0.58l0.36,-0.28l0.79,0.45l-0.17,0.38ZM781.9,213.3l-0.19,-0.64l0.25,-1.01l0.49,-0.07l0.06,1.08l-0.6,0.64ZM776.05,246.41l0.46,-0.51l1.07,-0.27l-0.66,0.48l-0.27,0.75l-0.59,-0.45ZM776.4,195.67l0.0,0.07l-0.02,-0.02l0.02,-0.04ZM776.72,194.79l0.02,-0.76l0.3,-0.22l0.03,0.45l-0.35,0.53ZM775.75,197.51l0.11,-0.75l0.18,0.13l-0.28,0.62ZM774.64,207.53l0.05,-0.12l0.05,0.07l-0.1,0.05ZM773.52,250.21l0.09,0.15l-0.02,0.05l-0.05,-0.02l-0.03,-0.18ZM771.75,209.72l0.65,-0.12l0.16,0.27l-0.66,0.42l-0.16,-0.58ZM764.44,262.78l0.09,0.4l-0.31,0.21l0.02,-0.29l0.2,-0.32ZM764.79,261.99l0.01,-0.59l0.25,-0.07l0.06,0.35l-0.31,0.3ZM766.32,260.11l-0.04,-0.54l0.94,0.06l-0.09,0.16l-0.81,0.33ZM767.58,259.28l0.76,-0.83l0.14,-0.26l-0.37,0.82l-0.53,0.27ZM737.71,277.3l0.12,0.01l0.12,-0.02l-0.11,0.13l-0.12,-0.12ZM734.91,277.92l0.11,-0.19l0.44,0.15l-0.29,0.11l-0.26,-0.06Z\",\n            name: \"Japan\"\n          },\n          IR: {\n            path: \"M137.98,152.91l1.82,0.03l0.6,-0.28l0.67,-2.32l0.59,-0.59l1.55,0.95l2.35,3.38l2.65,2.25l5.45,1.21l1.03,-0.36l1.99,-0.04l2.17,-2.07l1.11,-0.37l1.44,-1.36l4.32,-2.67l1.33,-0.27l2.06,2.03l-1.19,0.63l-0.3,0.88l0.19,0.73l1.15,0.75l0.06,0.33l-1.67,0.54l-0.47,0.49l0.0,0.74l2.41,2.2l0.82,0.23l1.45,1.6l1.81,-0.16l0.68,4.4l1.03,2.14l2.34,1.36l5.61,0.96l1.48,2.17l4.46,2.95l1.55,0.63l4.82,1.1l3.39,-0.06l10.69,-2.45l0.21,0.44l0.67,0.3l1.71,0.03l0.55,-0.35l0.21,-0.71l-0.72,-3.44l1.67,0.06l3.89,-1.22l0.54,-0.48l1.08,-2.26l3.46,-2.28l1.38,-0.39l4.89,0.22l0.66,-0.25l0.51,-1.1l2.06,-0.24l1.77,0.38l2.05,-0.02l0.63,0.56l0.52,1.51l4.7,1.24l2.54,1.59l3.86,-0.27l3.36,1.38l0.49,1.51l0.66,0.7l4.56,2.51l2.11,2.82l5.87,0.06l0.51,3.54l-0.43,1.67l0.74,1.14l-0.1,1.69l0.31,1.07l-0.64,1.6l-0.71,0.64l0.34,1.44l-0.5,1.97l-0.93,1.56l-1.67,1.22l0.81,1.48l-1.39,0.22l-1.2,1.82l0.15,4.16l1.31,0.92l1.52,0.1l-2.39,2.82l-0.07,0.91l2.0,6.8l-0.31,3.03l0.25,3.24l0.59,0.43l5.89,0.81l0.55,0.62l0.38,2.82l-0.16,0.53l-6.99,7.93l0.0,0.53l3.52,3.93l0.14,0.86l2.14,3.86l2.05,2.06l3.58,1.15l1.47,1.37l1.37,-0.01l-0.16,1.7l0.53,3.99l-0.38,2.1l0.61,0.45l0.9,0.12l1.9,-0.26l0.6,0.48l-0.4,0.47l0.03,1.5l-0.45,0.44l-0.12,1.22l-2.53,-0.02l-2.68,0.69l-1.06,0.62l-0.58,0.96l-0.53,-0.06l-2.39,1.21l-0.42,0.76l-0.4,2.49l-0.69,0.76l-0.48,4.16l-1.09,0.73l-5.32,-1.37l-0.4,-0.8l-0.83,-0.45l-1.11,0.94l-2.58,-0.53l-0.97,0.15l-2.07,-0.31l-1.4,-0.61l-2.88,0.49l-1.9,-1.09l-4.44,-0.29l-1.86,-0.74l-1.13,0.19l-0.55,-0.51l-2.79,-0.5l-0.83,-1.7l-0.06,-1.04l-0.7,-1.65l-0.54,-3.52l-1.01,-1.66l-1.57,-1.19l-2.93,-0.59l-1.84,0.47l-1.36,0.86l-2.28,0.55l-1.54,1.56l-1.04,-0.07l-3.01,1.85l-1.55,0.34l-3.03,-1.5l-1.33,-0.29l-2.66,0.07l-1.33,-0.91l-0.5,-0.81l-3.55,-1.61l-2.09,-1.4l-0.66,-1.36l-1.1,-1.09l-2.08,-0.8l-1.34,-0.91l-2.73,-0.17l-0.9,-0.43l-1.66,-1.66l-0.08,-0.75l-1.31,-2.27l-0.3,-1.86l-1.47,-1.22l-0.02,-1.62l-1.45,-0.7l-0.17,-2.14l-3.57,-4.08l-1.03,-2.45l-0.88,-0.06l-2.97,1.37l-3.63,-2.19l0.69,0.2l0.8,-0.36l0.15,-0.46l-0.39,-0.73l-1.84,-0.31l-0.29,0.69l-0.72,0.48l-0.21,0.77l0.19,1.5l-0.24,0.32l-1.22,0.16l-0.84,0.51l-0.58,-0.43l-0.21,-1.14l-0.59,-0.91l-2.27,-1.56l-0.03,-3.98l-0.38,-0.4l-2.1,-0.09l0.0,-2.84l1.05,-3.56l-2.38,-2.97l-1.03,-2.21l-0.83,-0.6l-1.27,0.02l-5.5,-3.8l-1.96,-0.28l0.44,-1.85l-1.0,-1.8l-0.91,-0.72l-0.27,-1.04l-1.1,-0.07l-2.2,-2.72l0.96,-1.89l-0.74,-1.81l0.4,-0.91l1.01,-0.19l0.31,-1.89l1.71,-1.83l1.74,-1.07l0.13,-0.86l-0.38,-1.15l-0.94,-1.18l0.13,-0.84l0.21,-0.37l1.58,-0.58l0.3,-0.49l-0.2,-0.48l-0.95,-0.45l-3.11,-0.08l-1.23,-1.19l-1.38,-0.31l-0.92,-2.84l-1.37,-0.93l-0.23,-1.89l-1.06,-0.97l-0.82,-2.74l0.21,-1.31l-1.65,-1.47l-0.19,-1.57l0.23,-0.78l-1.97,-1.48l-0.74,-0.13l1.74,-3.57l-0.44,-0.59l-0.74,-0.15l-0.16,-3.61l-0.8,-1.09l0.1,-1.67l-0.76,-0.8l-0.29,-1.01ZM225.11,258.62l0.64,-0.41l0.16,-0.69l0.73,0.1l1.56,-0.62l-1.41,1.46l-0.78,-0.16l-0.9,0.32Z\",\n            name: \"Iran\"\n          },\n          AM: {\n            path: \"M133.7,137.72l5.31,-0.87l4.6,0.01l0.35,-0.5l0.62,-0.08l0.81,0.74l-1.29,0.59l0.3,0.87l0.61,0.07l0.36,-0.45l2.27,0.69l1.11,1.07l-1.31,0.9l-0.18,1.02l1.58,2.09l2.78,1.54l-0.52,1.31l-1.74,0.0l-0.63,0.66l4.82,3.73l1.1,-0.1l0.87,0.4l-0.9,0.95l0.15,0.5l1.2,1.02l-0.8,0.03l-0.28,0.45l0.61,0.92l0.05,1.15l-2.11,0.32l-1.07,-2.31l0.02,-0.85l-1.37,-0.97l0.06,-1.45l-0.44,-0.43l-0.76,-0.06l-1.65,0.57l-1.24,-0.74l-0.65,-0.01l-0.29,-0.86l-0.79,-0.69l-1.99,0.45l-1.49,-1.5l-2.11,-1.4l-2.29,0.19l-1.95,-0.72l-0.84,-2.96l0.94,-1.34l0.1,-0.93l-0.76,-2.01l-1.14,-1.0Z\",\n            name: \"Armenia\"\n          },\n          SY: {\n            path: \"M76.3,209.24l0.78,-1.3l-0.28,-1.24l0.26,-0.62l-0.51,-1.46l0.2,-0.69l1.24,-1.34l-0.07,-0.47l-0.54,-0.44l0.11,-0.31l0.73,-0.65l2.14,-0.14l0.12,-0.49l-0.59,-0.51l1.79,-1.52l0.45,-1.13l-0.6,-1.78l-1.0,-0.69l0.39,-0.45l-0.39,-0.91l-0.84,-0.28l-0.58,0.38l-1.63,0.02l-0.56,-2.32l0.4,-2.21l-0.29,-1.85l-0.99,-1.32l0.72,-2.42l1.8,0.68l0.65,-1.04l1.15,-0.75l0.19,-1.28l1.65,-0.36l0.34,-0.34l-0.72,-2.03l0.63,-2.49l1.73,0.32l1.19,0.96l2.75,0.08l5.74,-2.21l1.65,0.3l2.47,1.47l4.61,0.11l4.99,-1.25l5.14,-2.33l4.7,0.24l4.18,-0.76l1.3,-0.43l0.93,-0.75l0.49,0.36l0.27,1.06l-1.9,1.93l-2.13,1.89l-2.86,0.78l-1.02,1.32l-0.39,2.74l0.81,2.35l0.01,1.26l-1.03,3.02l-0.16,4.36l-1.75,2.99l-1.84,0.48l-14.35,8.07l-14.53,8.74l-3.06,-0.53l-1.12,-0.87l-1.17,-0.34l-0.76,-1.06l-1.01,-0.56Z\",\n            name: \"Syria\"\n          },\n          VN: {\n            path: \"M576.93,298.51l-0.51,-1.64l-0.78,-0.54l-2.47,-2.91l1.98,-2.57l2.48,1.12l1.27,1.17l1.55,-0.8l1.17,-1.62l1.09,1.31l0.65,-0.23l0.5,-1.12l1.92,1.68l0.6,0.06l0.44,-0.27l0.57,-1.49l0.49,-0.28l1.54,0.77l1.39,-0.82l1.27,-0.19l0.96,-0.95l0.37,-1.53l2.86,-1.51l1.3,1.08l0.6,0.99l2.08,1.11l2.44,-0.29l0.92,0.86l2.07,-0.36l1.29,0.73l-0.37,0.74l-0.94,0.61l-0.37,1.51l0.14,0.59l0.74,0.75l0.07,2.04l2.56,0.79l0.53,0.89l0.93,0.65l0.72,0.11l0.48,0.65l1.26,0.24l2.14,-0.43l0.58,0.42l-3.39,1.7l-0.6,1.9l-1.14,0.67l-0.66,-0.37l-1.43,0.37l-1.44,-0.38l-0.4,0.33l0.48,2.03l-1.38,1.48l0.04,1.26l-0.31,0.6l-2.5,2.19l-0.82,0.09l-0.73,0.54l-1.27,2.74l-0.21,2.38l-1.13,1.84l-0.08,0.98l2.05,3.67l4.39,4.08l-0.15,1.1l-0.77,0.02l0.12,0.62l1.13,0.7l1.67,2.29l2.79,2.32l0.58,1.32l2.52,1.78l2.47,2.7l1.33,-0.09l1.66,1.84l2.36,3.76l1.82,1.62l0.84,2.77l1.06,2.16l0.03,1.23l1.48,4.85l-0.3,0.38l0.19,4.34l1.14,2.62l-0.02,1.22l-0.47,-0.11l-0.95,0.87l0.34,1.63l-0.52,0.39l0.13,2.81l-0.5,1.52l0.29,0.85l-0.32,0.62l-0.86,0.38l-0.33,1.65l-1.2,0.23l-3.99,2.79l-1.28,0.28l-0.85,1.36l-1.1,0.17l-4.12,2.16l-1.15,-0.64l-0.46,-1.04l-0.71,-0.02l-0.4,1.85l-1.03,-0.97l-0.51,-0.09l-0.91,0.54l-0.19,0.4l0.3,0.33l0.82,0.08l0.14,0.43l-1.8,-0.07l-0.52,0.39l0.22,0.41l2.1,0.89l-0.78,0.82l-0.25,0.82l-3.09,-2.61l-0.52,-0.02l-0.09,0.51l0.35,0.6l2.45,2.47l0.4,0.99l-0.92,0.37l-3.22,-2.94l-0.84,-0.39l-0.48,0.13l0.02,0.49l2.41,3.01l0.28,0.55l-0.16,0.45l-4.87,2.23l-1.49,2.3l-1.45,1.2l-1.48,0.31l0.36,-0.57l-0.07,-0.58l-0.42,-0.3l0.2,-5.8l0.38,-1.4l1.47,-0.88l-0.07,-0.82l-0.63,-0.81l-1.13,-0.38l-0.44,-0.54l-1.28,0.05l-1.11,-1.3l0.48,-0.48l2.26,-0.26l1.53,-1.37l-0.09,-1.32l1.55,0.42l0.51,-0.11l0.48,-0.65l2.3,-0.3l0.84,0.96l0.69,-0.1l1.72,0.63l0.4,-0.5l-0.03,-1.85l-2.26,-1.96l-0.13,-2.15l0.54,-0.17l0.52,-0.66l2.19,0.55l0.8,-0.12l0.28,-1.97l1.77,-0.16l0.63,-0.58l1.29,-0.26l2.0,-1.65l0.57,-0.1l0.87,0.38l0.99,-0.95l0.4,-1.53l-0.59,-3.65l0.97,-3.21l-2.04,-5.21l0.23,-1.67l0.6,-0.64l0.66,-1.54l-0.36,-2.67l1.06,-1.4l0.15,-0.9l-0.78,-1.17l-2.07,-1.68l-0.7,-1.11l1.52,-0.9l0.14,-1.1l-3.61,-2.58l-0.66,-1.29l-1.33,0.28l-0.77,-1.14l-0.47,-2.49l-1.68,-1.97l-2.01,-1.57l-2.31,-2.43l-0.76,-1.89l-0.98,-1.33l-1.09,-0.41l-1.47,-1.51l0.18,-1.98l-3.34,-1.26l-4.49,-3.01l-1.41,-0.59l1.2,-1.11l-0.22,-1.32l1.3,-0.05l2.58,0.51l1.41,-1.22l1.32,-1.98l0.14,-0.79l-0.44,-0.98l-0.67,-0.44l-0.82,0.04l-0.47,-1.14l-1.38,-0.48l1.04,-0.77l0.02,-0.94l-1.79,-1.39l-1.94,-1.01l-1.95,0.68l-1.62,1.22l-3.75,-1.41l-1.74,-2.66l0.78,-2.71l-0.18,-0.78l-1.48,-1.06l-0.68,1.05ZM612.85,302.64l0.02,-0.06l0.03,0.02l-0.05,0.04ZM586.24,386.06l0.57,-0.22l-0.01,1.11l-0.18,-0.47l-0.38,-0.42Z\",\n            name: \"Vietnam\"\n          },\n          GE: {\n            path: \"M119.33,133.54l1.55,-2.34l0.06,-1.52l-2.13,-6.46l-0.7,-0.85l-2.04,-0.77l-0.55,-0.94l-1.69,-1.2l-2.83,-0.77l-3.29,-2.29l0.5,-0.74l2.93,0.42l1.01,-0.17l3.16,1.41l2.05,0.38l1.79,1.06l3.52,0.26l2.68,-0.31l1.23,0.63l1.39,-0.12l1.41,0.57l0.93,1.03l5.02,2.11l-0.32,1.13l0.82,0.54l1.12,0.07l4.19,-1.65l1.05,0.25l0.55,0.78l0.68,-0.05l0.49,-0.97l1.9,0.63l1.55,1.34l2.19,0.09l0.23,0.11l-0.65,2.11l0.22,0.56l2.45,1.57l1.94,0.42l1.21,0.63l-0.59,0.69l-0.95,0.41l-0.11,1.25l1.02,1.29l2.55,1.75l-0.26,0.81l-0.91,0.61l-1.98,-1.08l-1.24,0.22l-1.58,-0.46l-0.45,-0.31l-0.17,-0.72l-3.31,-1.02l-2.5,1.54l-1.15,0.15l-0.35,0.43l-4.03,-0.02l-3.27,0.74l-2.21,0.14l-0.49,-0.52l-1.43,-0.2l-0.32,-0.87l-3.2,-2.55l-1.35,0.05l-0.97,1.16l-3.92,-0.47l-0.86,0.54l-1.57,-0.52Z\",\n            name: \"Georgia\"\n          },\n          IL: {\n            path: \"M66.48,219.04l1.37,-2.38l3.17,-9.66l2.15,0.04l0.79,-0.61l0.24,-0.89l0.53,-0.01l1.02,-0.76l0.48,1.35l-0.25,0.5l0.28,1.14l-0.8,1.43l-1.61,0.91l-0.2,1.83l-0.83,-0.82l-1.7,-0.23l-1.12,0.8l-0.83,2.52l0.04,3.07l0.41,0.3l1.09,0.02l-1.48,1.09l-0.64,2.32l0.63,0.44l1.45,-0.12l2.1,-0.83l-0.28,1.47l0.26,0.89l-2.2,5.75l-0.02,2.36l-1.23,4.69l-4.6,-13.31l1.92,-2.46l-0.14,-0.82Z\",\n            name: \"Israel\"\n          },\n          IN: {\n            path: \"M322.9,278.6l0.38,0.21l5.32,-0.07l1.27,0.8l1.68,0.01l0.94,-0.3l0.53,-0.69l2.75,-0.92l0.43,1.03l1.13,0.35l2.74,-1.35l0.18,-0.55l-0.52,-0.57l-0.04,-0.58l0.56,-1.05l-1.29,-3.03l-1.64,-2.78l-0.04,-1.94l-0.86,-0.61l-2.16,0.04l-1.11,-1.47l-0.14,-1.05l0.41,-1.17l0.1,-2.48l-0.84,-0.83l-2.48,-0.42l-1.61,-0.88l0.35,-2.6l2.65,-2.76l1.84,-3.01l1.72,-1.27l1.22,0.52l0.56,1.44l1.1,0.59l2.99,-1.0l2.67,-0.31l2.47,-0.76l0.79,-1.89l1.73,-2.0l1.14,-2.58l4.28,-2.34l2.48,-4.31l1.09,-3.03l3.16,-1.31l0.98,-1.11l-0.21,-1.77l3.1,-3.58l2.24,-1.23l-0.01,-1.1l-0.66,-0.51l0.54,-2.18l-0.6,-2.16l0.25,-0.62l1.24,-0.97l3.79,-1.56l0.7,-0.74l0.09,-1.02l-0.92,-0.91l-1.85,-0.75l-2.18,-0.23l-0.22,-2.22l-2.33,-0.13l-0.3,-1.78l-1.32,-0.69l-0.82,-0.85l0.89,-1.3l0.26,-1.1l-1.3,-1.79l0.56,-0.69l1.19,-0.57l0.31,-0.72l-0.28,-0.71l-2.31,-0.44l0.48,-0.63l0.03,-0.68l-1.31,-1.12l1.1,-2.01l2.31,-0.86l4.75,0.99l1.75,0.07l1.98,0.85l2.17,0.26l2.44,-1.38l1.0,-0.01l2.0,-0.7l1.22,0.1l0.88,-0.54l0.56,-0.86l1.6,-0.77l0.5,-1.08l5.25,-3.06l0.64,0.29l0.82,-0.26l-0.18,1.74l2.41,5.55l2.69,0.85l2.04,1.59l-0.17,0.52l-1.42,0.96l-0.24,0.93l0.64,4.48l2.39,2.53l-0.22,1.03l0.75,0.99l0.1,3.18l-0.99,0.98l-0.73,0.16l-0.9,-0.75l-0.54,-1.09l-0.42,-0.13l-2.1,0.32l-0.52,0.68l0.83,2.72l1.35,1.61l-0.09,0.54l0.34,0.47l-0.15,1.2l0.72,1.02l-0.45,1.05l0.16,1.56l0.34,0.35l0.83,0.02l1.28,-0.47l0.37,-0.43l1.67,2.36l1.26,1.02l0.84,0.43l1.54,-0.15l2.02,1.45l0.71,0.09l-0.05,1.4l0.35,0.35l3.03,0.96l2.35,1.5l-2.46,1.88l-1.66,1.96l-1.12,2.54l-0.17,1.84l-1.11,1.66l-0.1,1.64l2.76,1.95l0.62,0.12l0.69,-0.39l4.26,2.5l1.1,1.3l4.1,2.53l1.21,-0.31l3.26,1.89l1.59,-0.04l0.61,1.31l4.11,1.18l1.39,-0.72l2.72,0.69l2.05,-0.86l3.61,1.43l0.49,1.96l3.51,1.64l0.5,0.74l1.03,0.2l2.34,-0.71l0.48,1.29l0.77,0.54l1.62,-0.34l2.57,0.56l2.67,1.13l2.21,-0.87l0.46,0.84l1.56,0.62l1.12,-0.47l1.56,0.17l1.58,-0.3l1.31,0.4l0.67,-0.62l0.82,-2.52l-0.4,-1.75l-0.92,-1.53l0.29,-2.13l0.92,-2.77l0.03,-0.85l-0.34,-0.44l2.12,-0.51l1.16,-0.64l1.2,0.53l0.28,0.95l-0.73,2.81l0.22,0.95l0.65,0.67l-0.76,0.6l-0.14,0.72l1.05,1.87l2.18,1.17l1.5,-0.2l1.71,0.47l0.4,0.55l1.23,0.14l2.71,-0.43l0.77,-0.78l0.82,-0.28l1.5,0.71l1.43,0.22l4.09,-0.15l1.16,-0.6l0.6,0.46l1.15,0.04l2.62,-0.46l0.58,-0.34l0.23,-0.55l-0.59,-1.48l0.63,-1.69l-0.97,-1.51l-1.82,0.06l-0.5,-0.33l-0.44,-0.65l0.28,-0.8l2.3,0.24l1.06,-0.64l2.23,-0.13l1.16,-0.49l1.04,-0.73l0.18,-1.47l2.52,-1.5l0.73,-0.75l0.82,-1.63l3.81,-0.83l1.13,-0.65l0.98,-1.24l0.63,-0.2l1.29,-1.3l2.31,-1.27l0.96,1.07l4.73,1.13l1.16,-0.99l0.17,-0.56l3.46,-1.75l1.52,1.58l-1.24,1.01l0.31,1.59l0.61,0.08l1.68,-1.02l0.74,1.78l-1.74,1.79l-0.44,1.09l0.18,0.4l1.05,0.43l1.61,-0.73l1.24,0.74l1.5,0.23l0.76,-0.22l1.42,0.99l0.16,1.89l-2.66,1.8l-0.78,1.08l0.23,1.55l1.41,2.08l-0.95,-0.48l-0.57,-0.88l-0.78,-0.46l-4.19,0.57l-1.17,0.47l-1.14,1.34l-3.26,2.32l-2.65,1.43l-0.51,0.98l-0.11,1.18l0.58,2.4l-0.76,0.85l-0.54,1.73l-1.12,1.36l-0.94,0.54l-0.72,1.21l-0.19,1.18l1.11,1.09l-0.87,2.1l-2.18,3.55l-1.16,3.34l-2.89,-1.02l-1.55,0.22l-0.79,-0.68l-0.86,0.21l-0.16,0.59l0.79,2.67l-0.36,4.18l-0.29,0.55l-0.89,-0.06l-0.42,0.54l0.05,0.78l-0.61,1.6l0.57,3.58l-0.72,0.29l-0.7,1.4l-1.45,-1.11l-0.57,0.22l-0.23,0.52l-0.5,-4.73l-0.99,-2.06l-0.2,-3.04l-0.66,-2.83l-1.11,-0.62l-1.71,0.29l-0.35,0.4l0.05,1.35l-1.33,1.63l0.0,1.78l-0.68,0.4l-0.43,-0.23l-0.76,-1.47l-0.87,0.09l-0.91,-2.82l0.47,-2.4l0.92,-1.22l1.06,0.04l1.44,-0.89l1.27,0.01l0.59,-1.27l1.19,-0.51l1.03,-3.6l1.2,0.25l0.62,-0.44l-0.19,-1.02l-2.02,-1.36l-1.38,-0.52l-12.03,0.09l-4.39,-1.08l0.12,-4.95l-1.2,-2.28l-0.97,-0.04l-0.36,0.44l-0.14,1.2l-0.96,-0.05l-1.22,-0.71l-0.47,-0.63l-0.34,-1.43l-0.48,-0.42l-1.07,0.08l-0.22,0.73l0.2,0.33l-0.52,0.04l-0.76,-0.22l-0.54,-1.04l-0.89,-0.81l-1.01,-0.48l-0.67,0.31l-0.15,0.89l0.69,0.62l-2.11,2.2l-0.56,2.02l0.59,0.77l0.85,0.23l0.71,0.63l1.1,1.34l0.92,0.42l1.12,0.03l0.31,0.89l0.81,0.56l-1.06,0.32l-2.19,-0.15l-0.38,0.27l-0.89,2.16l-0.8,-0.29l-0.59,0.27l-0.98,2.39l1.18,1.58l1.15,0.1l0.7,0.65l2.25,0.79l-0.21,1.8l-0.98,2.86l1.24,1.83l-0.23,0.96l0.19,0.58l1.36,0.51l-0.45,1.06l0.55,3.31l0.94,2.74l-0.12,2.18l-0.58,0.61l0.67,1.68l-0.38,-0.01l-0.68,-0.76l-0.73,1.06l0.28,-2.83l-1.13,-1.2l-0.38,0.3l-0.56,2.28l0.19,1.14l-0.63,0.22l-1.33,-1.07l-0.47,1.03l-0.53,-0.06l-0.19,-0.18l0.97,-3.34l-2.42,-2.28l-0.28,0.45l0.15,0.94l1.34,1.05l-1.35,2.0l-1.85,1.23l-4.35,1.21l-1.97,2.2l-0.18,1.39l0.89,3.07l-1.45,1.96l-0.07,0.76l-1.77,1.04l-0.81,1.11l-0.9,-0.24l-0.28,0.68l0.35,0.38l-0.41,0.19l-4.39,1.43l-0.28,-1.19l-0.79,-0.25l-1.88,1.14l-0.76,1.19l0.01,0.43l0.52,0.37l-3.38,2.95l-0.65,1.3l-4.35,5.15l-3.35,1.73l-3.41,3.56l-4.46,2.54l-1.82,1.41l-0.7,1.18l0.53,1.54l-0.64,1.44l-3.49,1.65l-2.6,-0.26l-1.0,0.23l-0.64,0.82l-0.76,2.21l-1.11,1.39l-0.62,-0.14l-0.45,-0.67l-1.08,-0.23l-2.16,0.81l-0.81,0.71l-1.53,3.09l-0.39,2.01l0.93,4.64l-0.49,2.1l0.99,3.49l-0.57,-0.03l-0.71,0.82l-0.03,0.48l2.01,1.74l-0.82,4.92l-0.62,1.73l-2.16,3.59l-0.79,3.19l0.26,0.98l-0.61,0.79l-0.06,0.48l0.93,0.07l0.18,0.65l-0.07,6.26l-1.97,-0.13l-1.06,0.18l-0.82,0.53l-0.53,0.87l0.03,0.92l-2.37,3.6l-0.11,1.12l0.64,0.82l-4.13,1.22l-1.23,0.94l-0.76,0.97l-0.5,2.85l-0.41,0.79l-2.04,1.38l-1.79,0.76l-1.36,-0.42l-1.69,-1.23l-3.75,-4.35l-1.66,-4.01l0.77,-0.17l0.23,-0.48l-0.84,-2.92l-1.12,-1.22l-0.01,-0.98l-2.05,-4.35l-1.49,-4.39l-1.57,-2.72l-2.42,-2.65l-1.84,-3.76l-1.3,-3.86l-0.75,-4.53l-1.29,-2.91l-0.9,-3.48l-3.22,-4.41l-0.58,-1.89l0.38,-0.67l-0.96,-1.15l0.25,-0.36l-0.34,-0.63l-0.8,-0.21l-1.49,-2.59l-1.02,-3.05l-1.38,-9.0l-1.2,-3.62l-0.89,-4.27l0.97,-2.9l-0.6,-1.33l-0.85,1.12l-0.06,-0.21l-0.03,-1.21l0.96,0.12l0.44,-0.29l-0.22,-0.47l-1.36,-0.6l0.04,-1.22l-0.43,-0.36l-0.4,-1.77l1.68,-6.59l-0.61,-3.55l-0.95,-0.59l-0.4,-1.19l0.62,-0.56l0.12,-0.49l-0.26,-0.13l2.93,-1.55l0.16,-0.51l-0.5,-0.21l-1.93,0.47l-1.69,-0.06l0.22,-0.85l0.82,-1.06l-1.25,-0.23l0.14,-0.86l1.66,-0.45l0.29,-0.38l-0.29,-0.39l-1.7,-0.37l-1.07,0.22l-2.04,-0.16l-0.39,0.32l0.86,0.84l-0.16,0.52l-1.7,1.97l0.13,0.63l0.93,0.36l0.47,0.66l-0.02,0.8l-1.63,2.72l-7.28,3.2l-2.07,-0.01l-1.67,-0.74l-3.29,-2.58l-2.17,-2.59l-4.15,-3.8l-1.53,-2.11l0.29,-0.67l1.05,0.94l0.71,0.17l1.95,-0.92l0.69,0.03l0.69,-0.46l0.75,0.03l1.32,-0.72l1.25,-0.2l2.15,-3.21l0.45,-0.21l0.23,-0.4l-0.21,-0.79l-0.88,-0.15l-0.75,1.0l-1.63,0.03l-3.3,1.46l-3.07,-0.68l-3.05,-1.58l-1.24,-1.01l-1.52,-2.74l2.46,-1.91l0.13,-0.51l-0.49,-0.2l-1.04,0.36l-2.61,1.58l-0.36,-1.42l1.25,-0.53l2.48,-0.1l0.41,-0.39l0.03,-2.19ZM510.38,409.89l0.46,1.53l-0.26,0.91l-0.96,-1.53l0.07,-0.64l0.69,-0.26ZM502.0,376.41l-0.73,-2.04l0.46,-0.43l0.48,-1.76l0.55,-0.06l-0.74,1.46l0.36,0.73l-0.38,2.09ZM502.93,370.91l-0.34,-0.32l0.01,-1.24l0.16,-1.82l0.51,-0.85l0.37,0.44l0.17,2.11l-0.94,0.92l0.06,0.77ZM503.37,365.59l0.26,-2.41l0.75,-0.98l-0.3,1.27l0.32,0.54l-1.03,1.58ZM500.23,384.16l-0.24,-0.02l-0.13,-1.21l0.57,-0.59l0.25,0.86l-0.45,0.96Z\",\n            name: \"India\"\n          },\n          AZ: {\n            path: \"M146.29,137.61l0.31,-0.42l-0.14,-0.46l-1.19,-0.85l1.66,-1.14l2.69,0.83l0.36,0.77l1.56,0.71l0.87,0.19l1.08,-0.25l2.09,1.1l0.96,-0.25l0.8,-0.8l0.28,-1.52l-2.74,-1.99l-0.84,-1.11l0.05,-0.36l0.72,-0.2l0.89,-1.05l0.62,0.68l1.35,-0.09l2.92,2.63l0.77,1.61l0.58,0.49l3.73,0.81l0.9,-0.29l1.4,-2.1l2.48,-1.29l1.21,-1.93l3.16,3.87l1.28,3.05l1.8,2.12l2.06,1.78l3.01,0.66l1.38,1.34l-2.81,-0.15l-3.0,1.27l-0.6,1.06l-1.13,4.18l0.28,2.16l-0.7,0.7l-0.48,1.73l-0.85,-0.64l-0.9,0.58l-0.89,2.3l0.09,3.19l-1.31,0.29l-1.44,-1.56l-0.89,-0.28l-0.7,-0.92l-1.38,-0.93l1.64,-0.6l0.54,-0.51l-0.11,-1.04l-1.24,-1.09l1.48,-1.09l0.08,-0.54l-2.77,-2.68l-1.81,0.33l-2.3,1.36l-2.2,1.41l-1.46,1.36l-1.09,0.35l-2.04,1.96l-0.32,-1.72l0.88,-0.3l0.06,-0.59l-1.44,-1.33l0.73,-0.52l0.03,-0.84l-1.43,-0.86l-0.97,0.13l-3.58,-2.86l1.32,-0.16l0.78,-1.51l0.01,-0.7l-3.09,-1.91l-0.78,-0.93l0.78,-0.43l-0.1,-0.73l-0.66,-0.19l0.95,-0.7l-0.04,-0.82l-1.37,-1.31l-1.8,-0.5ZM148.08,141.25l-0.07,0.14l0.0,-0.02l0.07,-0.12ZM143.77,150.11l1.2,-0.38l0.53,0.63l0.19,0.87l0.88,0.02l1.49,0.8l2.24,-0.57l-0.06,1.5l1.4,1.03l-0.08,0.63l0.93,1.93l-3.87,-0.93l-2.44,-2.08l-2.4,-3.44Z\",\n            name: \"Azerbaijan\"\n          },\n          ID: {\n            path: \"M789.33,474.14l1.38,-1.54l0.5,-1.3l-0.0,-0.92l3.92,-1.03l2.44,-1.87l1.87,-0.69l3.25,0.45l4.58,2.3l3.81,0.16l0.65,0.47l-0.17,1.23l1.36,2.55l-1.13,2.76l0.68,4.46l2.0,3.96l0.4,0.23l0.59,-1.18l-0.04,-0.97l0.35,-0.17l0.49,2.77l0.33,0.3l0.81,0.01l0.32,1.91l1.81,1.2l2.12,0.2l1.17,-0.34l2.83,-2.66l1.11,-1.9l1.81,-1.25l0.97,-2.14l3.21,-0.53l1.82,-0.72l0.99,-0.93l-0.34,-1.22l4.78,-2.47l6.06,2.27l1.21,0.95l7.33,3.23l2.8,0.05l0.74,0.46l2.75,0.25l1.04,1.22l1.3,0.02l0.01,27.59l-0.84,2.98l0.84,1.43l0.01,15.75l-2.99,-3.29l-3.59,-3.15l0.9,-1.62l-0.14,-0.51l-0.53,0.08l-1.2,1.2l-3.92,0.65l-1.0,-1.54l-2.46,2.02l0.42,-1.96l0.52,-0.65l0.64,-1.89l-0.34,-0.77l-0.85,-0.46l-1.09,-1.32l1.83,0.12l0.86,-0.28l0.27,-0.48l-2.71,-0.68l-1.41,-1.08l1.45,-0.24l0.25,-0.65l-3.14,-3.8l-1.0,-2.81l0.55,-0.88l-1.13,-0.38l0.86,-0.89l-0.44,-0.28l-1.59,0.29l-0.05,-1.54l-2.46,-1.85l-3.26,-1.75l-0.15,-0.38l-0.61,-0.18l-0.32,0.21l-0.69,-0.41l-3.54,-0.8l-4.86,-2.18l-3.99,-0.66l-1.85,0.06l-3.13,-1.82l-0.43,-0.67l0.08,-0.46l1.09,-0.1l0.36,-0.39l-0.35,-0.4l-1.06,-0.12l-1.47,0.42l-1.05,-0.47l-1.01,0.18l-1.02,-1.07l-1.09,0.17l-1.99,-2.23l0.11,-1.47l1.05,-1.42l-0.28,-0.61l-0.83,-0.02l-0.83,0.78l-0.2,1.78l-0.6,0.13l-0.41,0.49l0.16,0.67l-0.93,1.58l-0.06,1.1l-0.99,1.07l-2.04,0.03l-1.03,-2.27l0.81,-1.34l-0.94,-2.03l-3.11,-2.49l-2.21,-0.48l-0.28,-0.36l1.45,-0.65l3.86,0.73l2.32,-2.25l0.92,-0.29l2.94,0.8l0.71,0.55l0.57,-0.31l0.3,-1.04l1.11,-0.47l0.09,-0.97l-0.4,-0.37l0.57,-1.11l-0.55,-0.38l-1.54,0.64l-3.61,0.19l-1.92,0.42l-3.32,-0.4l-1.43,0.17l-1.92,-1.74l-0.62,-2.99l-0.39,-0.38l-1.41,-0.13l-3.25,-1.1l-1.9,0.36ZM839.2,526.43l1.24,-2.99l1.27,-2.13l1.22,-1.0l2.52,-0.81l1.51,0.07l1.22,1.28l0.14,0.58l-1.4,2.52l-1.81,1.56l-1.64,0.91l-4.26,0.02ZM846.09,526.2l0.98,-0.72l0.56,0.91l-1.54,-0.19ZM825.18,476.4l2.6,0.11l1.48,0.5l2.3,0.09l-3.37,0.37l-3.0,-1.07ZM822.33,469.12l1.47,0.16l0.45,0.26l-0.52,0.3l-1.4,-0.73ZM824.31,469.56l1.05,-0.04l3.09,2.59l-1.2,0.32l-1.42,-0.3l-1.0,-2.39l-0.52,-0.18ZM818.29,471.77l-0.21,-0.04l-0.17,-0.42l0.16,-0.02l0.22,0.48ZM813.05,509.18l0.58,0.0l0.41,-0.43l0.29,-1.17l-0.44,-0.67l1.84,-2.07l0.83,1.72l-0.21,1.93l0.3,1.44l-0.27,0.81l-0.38,0.3l-1.15,-0.18l-1.79,-1.67ZM812.51,512.73l0.68,-0.38l-0.5,-0.69l-0.07,-1.13l2.32,1.74l-1.23,2.35l-0.79,0.47l-0.67,-0.65l0.27,-1.71ZM801.88,507.73l-0.08,-0.13l0.08,-0.65l0.16,0.53l-0.16,0.25ZM791.1,523.43l-0.89,-0.08l-0.19,-0.61l0.31,-1.04l0.85,-1.69l0.66,-0.35l1.27,-1.43l0.18,-0.61l0.39,-0.12l0.2,0.11l-0.55,0.73l0.32,1.17l-0.44,1.23l-1.78,1.74l-0.35,0.94ZM785.68,465.9l-0.54,-0.57l-1.3,-0.15l0.15,-0.41l1.73,-0.18l0.72,0.99l-0.75,0.32ZM787.02,466.29l0.59,0.08l0.14,0.13l-0.57,0.11l-0.15,-0.32ZM787.04,464.3l2.01,0.13l1.67,0.73l0.19,0.68l-0.29,0.25l-0.91,-0.29l-0.96,0.12l-1.72,-1.62ZM789.08,524.99l0.05,-0.05l0.02,0.01l-0.07,0.04ZM786.92,471.18l1.16,-0.36l0.96,0.27l-0.49,2.26l-0.95,-0.47l-0.68,-1.7ZM766.27,488.64l-0.3,-0.69l2.11,-2.36l5.81,-0.26l0.94,0.8l1.35,-0.39l1.07,-0.71l0.68,0.0l3.32,1.4l2.85,0.08l1.28,0.95l0.69,1.82l0.9,0.44l0.47,0.8l-0.29,1.53l-5.37,-2.63l-1.33,-1.11l-2.56,-0.1l-0.53,0.55l0.05,0.41l-3.38,-0.88l-0.29,-0.67l-0.42,-0.11l-1.12,0.34l-1.17,1.21l-0.72,0.09l-0.48,-0.16l-1.4,-1.59l-0.89,-0.41l-0.85,0.41l-0.42,1.23ZM780.17,477.84l3.58,-1.0l0.41,0.54l-0.24,0.82l-1.38,0.56l-2.37,-0.92ZM778.8,522.63l0.94,0.13l-0.18,0.93l-0.79,-0.7l0.03,-0.36ZM763.29,456.66l-0.79,-2.23l0.82,-1.51l0.7,-2.8l2.1,-2.2l-0.75,1.07l-0.18,0.98l0.94,1.15l0.0,2.49l-0.83,1.09l-1.69,1.08l-0.32,0.87ZM763.89,457.48l0.97,0.44l0.99,-0.17l0.68,-1.6l1.34,-0.77l0.14,-1.37l0.36,-0.47l1.41,-0.82l1.5,-0.35l0.03,2.9l-2.85,1.55l-0.49,0.89l0.2,0.84l2.85,1.59l0.21,0.87l-1.41,-0.63l-3.46,-0.6l-0.67,0.3l-0.37,0.77l-0.08,2.61l0.69,2.29l1.8,3.22l-0.66,-0.29l-1.13,-2.05l-1.42,-1.29l0.15,-3.72l-1.16,-1.71l-0.12,-0.79l0.52,-1.65ZM769.72,447.96l-0.89,0.1l-0.34,-1.46l0.71,-1.09l1.54,-0.83l0.41,0.59l-0.43,1.63l-0.48,0.8l-0.53,0.26ZM770.98,517.22l0.07,-0.02l-0.01,0.06l-0.06,-0.04ZM766.39,491.38l0.34,-0.3l0.21,-0.03l-0.29,0.14l-0.26,0.19ZM767.55,490.94l0.67,-0.35l-0.17,0.61l-0.49,-0.27ZM766.43,525.21l0.01,0.0l0.11,-0.0l-0.03,0.03l-0.08,-0.03ZM767.16,475.96l-3.99,0.3l-0.88,-0.4l0.4,-0.99l1.11,-0.75l3.36,1.84ZM761.78,466.79l0.31,0.27l0.62,-0.11l0.26,-0.47l0.61,0.79l-0.45,0.83l0.4,0.98l-0.85,0.24l0.16,-0.66l-1.25,-1.34l0.2,-0.52ZM764.02,469.29l0.79,0.03l0.27,0.36l-0.41,0.22l-0.64,-0.6ZM760.63,469.19l0.05,-0.12l0.05,0.15l-0.09,-0.02ZM760.49,467.14l-0.3,0.09l-0.05,-0.4l0.25,-0.77l0.11,1.08ZM757.75,487.23l1.12,0.53l1.5,1.99l-0.08,0.85l-1.95,0.95l-1.71,0.4l-0.93,-0.35l-2.61,-1.35l-0.99,-1.48l0.06,-1.37l0.81,0.26l2.66,-0.6l2.11,0.14ZM757.21,433.23l0.01,-0.01l-0.0,0.01l-0.01,0.0ZM757.81,431.67l-0.55,-0.64l0.14,-0.88l0.5,1.37l-0.1,0.14ZM750.41,523.01l1.0,-1.32l1.73,0.26l2.79,-0.97l0.69,0.53l-1.13,0.53l-0.7,0.9l-2.53,-0.45l-1.85,0.52ZM747.5,477.65l0.38,-0.04l1.32,0.09l-1.63,0.15l-0.07,-0.2ZM750.49,477.62l1.14,-0.09l0.2,0.02l-0.72,0.12l-0.62,-0.06ZM750.92,479.55l-0.08,-0.27l0.13,-0.24l-0.06,0.52ZM748.22,437.51l0.03,0.04l-0.03,-0.01l0.0,-0.03ZM743.62,476.88l0.82,0.28l0.59,-0.2l0.46,0.47l-1.5,0.42l-1.42,-0.31l-2.24,0.81l-0.5,-0.01l-0.45,-0.75l0.3,-0.99l0.47,-0.16l1.27,-0.06l2.21,0.5ZM745.7,477.42l0.14,-0.02l0.02,0.01l-0.16,0.01ZM704.86,464.54l0.67,-0.32l0.35,-0.64l-0.38,-1.56l0.7,-1.38l0.9,-0.91l0.22,-1.01l1.46,-1.75l0.61,0.71l0.88,0.3l0.92,-0.29l1.28,-1.46l0.85,-1.63l0.55,-0.33l0.65,-0.1l0.97,0.48l1.35,0.12l0.78,1.0l0.7,0.33l2.14,-0.14l4.23,0.52l2.94,1.27l1.84,-0.7l5.9,0.77l3.32,-1.42l1.09,-1.24l1.03,-0.48l0.49,-1.14l1.28,-0.5l1.4,-1.67l0.9,0.27l0.37,0.77l-0.72,0.71l-1.14,2.23l-2.02,1.93l-1.35,1.98l-0.59,0.59l-1.4,0.6l-5.09,0.6l-1.77,-0.16l-1.34,-1.15l-0.84,-0.13l-8.69,0.42l-2.46,-0.46l-3.77,0.42l-3.29,-0.64l-1.86,0.64l-1.29,1.45l-1.42,3.65l0.37,2.87l1.43,2.52l2.03,1.25l0.64,1.6l0.81,1.04l2.66,0.26l1.16,-0.55l1.08,-1.76l1.97,-1.99l1.09,0.7l1.85,0.06l2.35,-1.32l4.52,-0.01l0.37,-0.44l-0.16,-0.5l1.88,-0.43l1.27,0.47l0.28,0.68l-0.26,1.25l-0.33,0.19l-1.76,-1.11l-1.42,0.24l-0.83,0.58l-2.23,2.84l-1.83,1.48l-2.87,1.01l-1.54,1.51l-1.64,-0.44l-0.46,0.1l-0.39,0.56l0.2,0.92l1.67,1.53l1.36,0.61l2.3,3.75l1.54,1.18l0.08,0.97l0.62,0.86l-0.56,0.67l-0.39,2.87l2.47,2.01l0.76,1.42l0.7,0.29l0.61,-0.26l0.18,1.66l-0.74,-0.33l-0.61,0.56l-1.54,0.02l-2.74,0.91l-0.68,0.93l0.08,1.25l-0.69,0.09l-2.23,-0.59l-0.59,-1.03l0.39,-2.11l0.54,-1.02l-0.07,-0.81l-0.6,-0.58l-1.72,-0.75l-3.0,-2.79l1.22,-2.49l-0.1,-3.4l-0.7,-0.76l-0.83,-0.19l-1.98,0.21l-2.36,1.53l-0.78,0.9l-0.02,0.97l1.01,2.13l0.32,2.63l-0.55,2.79l0.43,4.03l-1.05,3.95l1.04,2.72l-3.1,0.14l-1.67,0.86l-1.69,-1.16l-0.56,-0.63l-0.09,-0.63l1.15,-3.15l0.0,-1.13l0.72,-2.42l0.09,-2.92l-1.08,-2.37l0.04,-1.47l-1.22,-0.88l-2.77,0.54l-0.33,-0.25l-0.58,-1.33l0.17,-2.69l-0.53,-1.3l2.28,-1.74l0.6,-2.56l1.14,-1.64l0.2,-0.97l-0.28,-2.97l1.44,-3.6l1.14,-1.35l0.69,1.01l0.45,0.18l0.3,-0.38l-0.89,-5.64ZM736.59,534.43l0.65,0.46l1.5,0.02l1.11,-0.94l0.32,-0.91l2.8,-1.45l0.68,0.57l1.03,-0.38l-0.17,0.55l-0.73,0.03l-0.51,0.53l0.75,2.11l-2.51,2.9l-2.0,1.7l-1.75,0.24l-2.44,1.21l-0.67,0.02l-0.7,-0.31l0.76,-1.13l-0.16,-0.53l-0.73,-0.47l0.54,-1.87l2.23,-2.34ZM739.69,526.62l0.3,-0.38l-0.09,-0.61l0.49,-0.44l0.74,0.46l1.0,-0.28l2.39,0.23l0.02,0.44l-4.84,0.58ZM738.25,526.06l-0.87,1.35l-0.81,-0.7l1.04,0.05l0.63,-0.7ZM731.61,527.45l1.11,-0.79l0.05,-0.48l0.71,0.19l1.02,-0.53l-0.5,0.72l-0.64,0.17l-0.4,0.77l-0.89,0.22l-0.47,-0.27ZM733.01,475.86l0.15,0.17l-0.02,0.09l-0.13,-0.02l0.01,-0.25ZM728.24,475.03l-0.26,-0.63l0.5,-1.4l1.79,-0.17l-2.03,2.2ZM730.66,474.31l0.09,0.01l-0.08,0.05l-0.01,-0.07ZM731.28,474.11l0.47,-0.63l0.45,-0.08l0.46,0.35l-0.47,0.81l-0.91,-0.45ZM728.06,545.35l0.04,-0.38l1.57,-0.49l1.76,-1.46l0.19,0.55l-1.26,1.05l-2.31,0.73ZM729.8,526.35l0.37,-0.31l0.87,0.03l-0.08,0.29l-1.15,-0.01ZM726.57,505.77l-0.28,-0.74l1.35,-2.24l0.65,-4.35l0.9,-1.29l0.76,0.85l0.09,0.81l-1.0,0.33l-0.65,3.17l0.07,0.35l0.84,0.13l0.74,0.68l-0.7,0.43l-0.85,0.03l-0.97,1.82l-0.95,-0.0ZM729.17,494.09l1.2,-0.03l0.04,0.33l-0.68,0.62l-0.57,-0.92ZM705.88,527.5l2.53,-1.18l2.61,-0.3l1.0,0.55l1.9,0.32l3.37,1.63l4.0,-0.89l1.97,1.18l0.65,0.09l1.14,-0.33l0.87,-1.23l2.69,-1.32l-1.25,1.05l0.03,0.87l-2.49,0.92l-0.98,0.08l-1.0,-0.06l-0.77,0.11l-3.09,1.08l-0.63,-0.51l-1.32,-0.05l-0.8,0.74l-0.94,-0.13l-1.11,0.29l-3.54,-1.0l-1.78,0.13l-1.63,-0.31l-1.31,0.48l-0.52,-0.79l0.4,-1.43ZM728.29,525.01l-0.42,-0.09l0.33,0.02l0.09,0.07ZM724.05,503.6l0.27,-1.16l0.54,-0.75l-0.3,-1.92l2.04,-0.94l0.18,1.77l-1.01,1.42l0.03,1.48l-0.38,0.24l-0.79,-0.36l-0.58,0.23ZM720.93,502.15l0.62,0.76l-0.12,1.31l-0.94,-1.15l0.45,-0.92ZM720.23,543.0l0.44,-0.43l0.34,-0.02l-0.55,0.41l-0.23,0.04ZM706.07,534.07l1.84,1.37l0.47,0.99l1.4,0.16l0.62,0.43l1.7,1.8l0.11,0.63l-0.67,0.63l-1.69,0.55l-1.31,-0.32l-1.32,-0.78l-0.92,-1.19l-2.54,-1.52l-3.9,-0.54l-0.69,-0.98l1.35,-0.7l3.1,-0.23l1.3,0.2l1.15,-0.51ZM702.37,528.21l0.22,-0.47l0.21,0.05l-0.06,0.15l-0.36,0.27ZM693.04,526.41l0.72,0.45l1.53,-0.65l0.67,0.05l0.64,0.92l0.65,-0.13l0.38,-0.6l0.71,-0.04l1.18,2.42l-1.95,-0.07l-0.56,0.18l-0.25,0.54l-1.8,0.36l-0.09,-0.98l-0.75,-0.28l-1.32,1.18l-2.33,0.64l-1.08,-0.05l-1.64,0.65l-2.17,0.19l-1.07,0.47l-1.71,-0.58l0.33,-2.98l2.29,-1.13l1.29,0.44l1.51,-0.01l1.57,1.98l1.43,0.27l2.25,-0.78l0.15,-0.9l-1.07,-0.93l-0.98,-0.17l-1.11,-0.8l-0.4,-0.87l0.92,-0.34l1.29,0.22l0.79,1.34ZM624.73,453.92l0.32,-1.2l1.4,-1.48l0.79,-1.6l0.57,-0.24l0.23,0.98l0.47,0.31l0.21,1.21l0.61,0.69l4.36,3.97l1.76,1.11l4.44,-1.41l2.81,0.41l2.57,-0.14l0.92,-0.77l1.34,-0.42l0.81,-2.15l1.88,-0.75l3.35,-0.06l0.1,0.67l0.44,0.33l4.78,1.45l2.12,-1.48l3.43,-0.44l1.13,0.3l1.1,-1.45l0.44,-1.58l0.82,-0.52l0.22,-0.91l-0.41,-1.57l2.94,-2.09l-0.01,-0.9l-0.63,-0.47l0.22,-1.45l0.71,-0.74l1.04,0.04l0.82,-0.43l0.87,-3.2l0.01,-3.59l0.74,-1.77l1.17,-1.05l0.92,0.4l1.13,-0.45l1.83,0.33l0.96,-0.41l4.28,0.22l1.22,0.26l1.37,0.81l-0.09,0.78l2.13,2.46l-0.52,0.13l-0.74,-0.59l-0.66,0.21l-0.19,0.44l-2.01,-0.06l-0.87,0.12l-0.34,0.39l2.26,1.73l-0.23,0.93l0.24,0.77l1.88,0.96l-0.32,0.83l0.66,0.44l0.04,0.65l0.97,0.48l0.77,1.52l1.29,1.56l-0.09,0.39l-1.72,1.31l-0.07,0.72l2.13,2.4l4.18,2.87l2.38,2.1l-1.34,0.78l-1.57,0.18l-2.4,-0.43l-1.29,-1.21l-0.78,-0.45l-0.48,0.07l0.3,1.69l-1.62,1.18l-1.71,3.82l-0.45,4.24l0.8,3.1l-2.33,1.11l-2.24,2.13l-0.51,-0.17l-0.74,-1.17l-0.38,0.3l0.13,2.03l-1.38,0.97l-0.34,0.98l-1.85,1.46l0.38,0.6l0.71,-0.03l0.17,0.7l-0.16,0.71l-0.71,0.57l0.12,0.69l1.44,0.48l0.05,1.1l-0.1,0.51l-0.99,-0.02l-0.65,0.55l-0.07,0.39l0.49,0.41l-0.28,1.72l-0.35,0.31l-0.29,-0.21l-0.62,0.23l-0.07,0.63l0.5,0.77l-1.21,1.63l-0.68,1.71l-9.18,4.19l-0.25,-3.08l-0.6,-2.47l-0.29,-0.35l-0.87,0.73l-0.51,-0.29l0.29,-0.99l-0.2,-0.48l-0.51,0.12l-0.63,0.76l-0.92,-0.59l-1.23,0.91l-1.59,0.4l-0.66,-1.92l-0.54,-0.16l-1.55,0.4l-2.09,-2.12l-0.67,0.19l-0.43,1.75l-1.45,0.92l-1.04,0.52l-2.45,-0.55l-1.19,0.45l-1.71,1.25l-0.04,-3.42l-1.1,-1.47l-0.52,0.04l-0.45,0.52l-1.8,-0.3l-3.15,1.01l-0.34,-0.21l0.41,-0.79l-0.48,-0.19l-1.4,0.72l-0.99,-0.86l-2.02,0.63l-1.1,-7.06l-0.99,-1.09l0.56,-2.28l-0.43,-2.1l-0.89,-1.4l-1.51,-1.24l-2.88,-0.7l-0.03,-0.39l0.77,-0.78l-1.83,-1.67l-0.05,-1.14l0.99,-2.44l-2.34,-2.49l-0.27,-3.07l0.36,-2.36l1.15,-0.76l0.16,-0.42l-0.77,-0.31ZM689.33,432.89l1.07,-0.1l0.09,0.26l-0.8,0.22l-0.36,-0.38ZM688.52,438.39l0.19,-0.01l-0.04,0.25l-0.08,-0.07l-0.06,-0.17ZM688.18,525.84l-0.09,-0.44l0.43,-0.1l-0.34,0.54ZM676.77,529.94l0.76,-0.55l-0.1,-2.16l1.02,-0.92l1.12,-0.58l2.02,0.78l-1.52,3.24l0.09,0.45l-0.76,0.16l-2.62,-0.43ZM677.43,493.41l0.1,-1.05l-0.41,-1.51l0.63,-1.84l0.39,-0.25l0.37,3.12l-0.14,0.7l-0.94,0.84ZM665.5,525.06l3.09,0.52l1.84,-0.9l2.51,0.99l0.95,1.06l-2.63,1.44l-0.74,1.27l-0.04,-0.59l-0.76,-1.07l-1.72,-1.15l-1.67,-0.38l-0.83,-1.18ZM671.74,515.64l-0.41,0.09l-0.2,-0.1l0.96,-0.2l-0.35,0.21ZM596.42,514.63l0.11,-0.17l0.13,-0.12l0.08,0.21l-0.32,0.08ZM598.18,514.76l1.14,-1.95l1.0,-0.35l0.73,-2.71l1.15,-1.24l5.69,1.33l1.0,-0.27l0.85,-1.03l1.75,0.39l0.99,1.02l1.54,0.76l3.59,0.62l1.25,-0.16l1.32,1.32l0.6,1.81l0.87,0.74l4.61,0.57l1.64,-0.38l2.33,0.65l2.82,-0.05l1.94,0.34l1.32,-1.19l1.09,-2.43l1.31,-0.19l1.72,1.9l1.29,0.09l1.34,-0.38l1.51,0.93l1.77,0.23l0.81,0.67l3.18,0.2l0.76,2.06l1.03,0.6l0.02,1.75l1.86,1.11l1.83,0.48l1.96,0.06l4.21,-0.69l2.22,0.99l0.26,1.37l-0.42,3.1l0.54,1.37l0.91,0.84l-1.69,-1.01l-2.59,-0.38l-5.27,-2.14l-4.31,0.92l-4.16,-0.64l-4.53,-0.14l-6.69,-1.16l-4.26,-1.95l-5.75,-1.42l-4.09,-0.29l-1.47,0.35l-0.85,0.62l-3.75,-0.53l-2.7,-1.34l-2.03,-0.56l-6.08,-0.73l-0.14,-0.52l0.74,-1.34l-0.22,-0.54l-4.35,-1.48l-3.17,-0.03ZM654.92,517.5l-2.42,-0.71l0.79,-0.92l1.33,-0.13l6.62,-0.05l0.29,0.26l-0.93,0.28l-0.47,0.51l-1.37,0.03l-1.21,0.72l-2.63,0.02ZM651.59,507.15l0.02,-0.02l-0.0,0.02l-0.01,-0.0ZM629.22,472.23l-1.34,0.69l-0.13,-0.04l0.21,-1.38l1.22,0.14l0.23,0.38l-0.19,0.23ZM618.17,435.89l0.02,-0.02l0.08,-0.01l-0.1,0.03ZM618.38,435.83l0.47,-0.55l-0.28,-0.49l-1.07,-0.29l-0.43,-0.7l1.13,-1.07l1.0,1.28l0.01,0.85l-0.47,0.88l-0.36,0.1ZM613.87,485.59l0.62,-2.31l0.83,-0.17l1.71,0.45l0.91,0.65l0.42,0.73l-0.67,1.89l-0.81,0.66l-1.12,-1.0l-1.46,0.78l-0.43,-1.68ZM601.61,476.32l0.87,1.51l0.39,2.48l1.18,2.07l2.78,0.8l-0.96,2.1l0.31,1.02l-2.53,-1.29l-1.77,-0.49l-0.5,-1.02l0.14,-1.35l-0.58,-0.6l-0.68,-1.84l-1.77,-0.78l-1.76,0.29l-1.15,-0.49l1.64,-1.12l0.11,-1.3l0.47,-0.44l0.59,-0.22l0.69,1.26l0.66,0.02l0.4,-0.54l-0.09,-0.9l0.29,-0.08l0.93,0.17l0.35,0.75ZM530.39,424.92l2.72,-0.33l2.48,0.49l2.53,-0.04l2.62,2.37l0.68,1.61l1.82,1.83l-0.03,1.66l0.5,0.76l2.69,1.32l0.98,1.31l2.78,1.33l4.3,2.95l5.9,7.42l1.3,0.61l1.52,1.27l0.6,-0.39l-0.48,-1.94l0.42,-0.2l0.65,0.22l1.77,1.7l0.75,1.83l0.64,0.64l2.38,0.59l1.69,1.29l0.93,1.25l0.63,2.04l1.23,1.23l0.72,0.54l3.47,0.81l0.66,0.9l-0.25,0.33l-3.29,1.42l-0.26,0.47l0.44,0.31l2.65,-0.48l3.25,-1.74l0.79,0.19l1.35,1.33l0.7,1.44l-2.59,1.79l-0.16,1.25l0.67,0.82l-0.37,0.32l-0.08,0.69l0.83,1.57l1.47,1.03l2.67,1.06l2.12,0.17l1.02,5.6l0.54,0.93l1.88,1.11l-0.1,0.7l-1.34,1.48l0.01,1.56l0.96,0.2l1.38,-1.36l0.89,-0.36l2.6,0.15l1.24,0.75l3.36,4.47l0.08,0.58l-1.14,1.39l-0.45,1.58l0.05,1.0l0.58,0.85l-0.73,2.28l0.4,3.06l0.0,3.37l-0.52,4.94l-0.35,0.75l-0.52,-0.09l-0.7,-0.92l-1.3,-0.93l-0.74,0.12l-1.53,1.25l-3.08,-1.61l-0.57,0.22l-0.16,0.5l0.41,2.14l-3.87,-3.78l-1.82,-2.35l-6.85,-4.58l-2.81,-2.35l-3.04,-4.11l-4.1,-3.23l-1.59,-2.69l-1.88,-1.68l-1.65,-2.44l-0.27,-2.38l-2.75,-4.74l-1.36,-3.58l-3.35,-3.83l-1.51,-2.78l-2.58,-1.27l-1.15,-0.94l-2.67,-8.45l-1.56,-2.88l-3.96,-2.61l-2.73,-1.1l-0.8,-3.58l-1.59,-1.11l-3.15,-4.48l-1.34,-1.07l-2.6,-0.77l-1.59,-1.89l-5.47,-5.13l-2.06,-3.75l0.28,-0.92l-0.16,-0.88l0.93,-0.33l2.34,0.34l2.94,2.12l2.82,0.53ZM599.87,441.75l-0.0,-0.09l-0.01,-0.06l0.07,0.03l-0.06,0.12ZM590.63,465.03l0.37,-0.91l0.85,0.78l-0.91,0.24l-0.31,-0.11ZM593.0,465.4l0.03,-0.01l0.04,0.04l-0.06,-0.03ZM588.93,455.69l0.63,-0.44l1.15,-0.05l0.48,0.5l-0.01,0.7l-0.48,0.59l-0.37,-1.29l-0.46,-0.23l-0.95,0.22ZM589.16,467.04l1.01,-0.3l0.43,0.45l-0.4,0.65l-0.62,-0.01l-0.43,-0.79ZM586.69,455.6l0.28,-0.16l0.2,0.1l-0.19,0.32l-0.3,-0.26ZM583.2,466.09l0.26,-0.26l0.73,0.22l-0.47,0.13l-0.51,-0.09ZM580.69,459.3l0.04,-0.25l0.07,-0.11l0.18,0.35l-0.29,0.01ZM577.43,455.57l0.12,-0.16l1.43,0.67l0.68,0.71l-1.09,-0.85l-1.14,-0.36ZM575.86,455.84l3.0,1.71l0.05,0.24l-3.31,-0.81l0.26,-1.13ZM572.44,452.08l1.35,0.36l-0.78,-0.08l-0.57,-0.28ZM573.94,452.48l0.99,0.27l0.07,0.32l-0.4,-0.32l-0.66,-0.27ZM573.82,453.77l0.81,0.9l-0.12,1.3l-0.51,-0.94l-0.18,-1.26ZM573.27,503.85l0.97,0.44l-0.04,0.13l-0.23,0.01l-0.7,-0.58ZM569.22,448.44l0.36,0.65l-0.35,0.99l-0.59,0.37l-0.51,-0.09l-0.49,-0.96l0.03,-0.67l1.55,-0.3ZM558.51,485.09l1.28,1.34l-0.14,0.64l-1.01,-1.14l-0.13,-0.84ZM556.91,483.15l0.93,0.83l-0.3,0.47l-0.45,-0.01l-0.18,-1.3ZM553.83,479.28l0.22,0.16l0.51,1.03l-0.84,-0.6l0.11,-0.59ZM550.38,476.64l-0.51,0.03l-1.55,-1.07l-1.64,-2.92l0.45,-1.36l1.25,-0.2l1.51,3.63l0.96,1.31l0.02,0.4l-0.48,0.18ZM544.85,467.45l-0.26,0.08l0.72,-1.91l-0.06,0.84l-0.4,0.99ZM537.07,452.74l3.73,3.74l-0.54,2.57l-0.49,-0.11l-0.75,-1.78l-1.43,-0.9l-0.76,-1.62l-1.06,-1.18l0.55,-0.07l0.75,-0.64ZM529.81,445.7l-2.67,-1.77l-1.57,-0.47l-0.46,-0.71l0.65,-0.33l3.82,2.73l0.22,0.54Z\",\n            name: \"Indonesia\"\n          },\n          OM: {\n            path: \"M223.78,281.06l3.38,-0.67l0.29,-0.3l-0.45,-1.47l-1.1,-0.27l0.26,-4.83l0.69,-0.3l-0.25,0.67l1.14,1.14l2.12,-1.71l1.76,3.66l2.12,2.65l1.62,1.38l3.75,1.45l3.82,0.7l1.61,0.75l1.8,-0.16l1.27,0.87l1.96,3.07l2.97,3.68l1.01,0.78l1.88,0.47l-0.19,1.8l-3.17,5.6l-2.23,1.61l-1.3,1.38l-3.11,5.43l-1.27,0.02l0.2,-1.11l-0.45,-0.45l-0.63,0.09l-0.72,0.31l-1.78,2.51l-1.2,4.67l0.69,4.92l-4.45,0.72l-2.69,1.19l-1.36,1.35l-0.86,3.35l-1.11,1.22l-5.59,0.74l-1.26,0.47l-1.68,1.99l-0.21,0.8l0.41,1.01l-1.54,2.31l-1.94,0.51l-1.56,-0.49l-3.77,0.2l-3.53,1.9l-3.58,0.74l-1.98,-4.43l-0.59,-0.39l-5.4,-12.58l22.31,-7.89l4.97,-15.7l-3.38,-5.75l0.09,-2.41l2.31,-5.46l0.18,-0.91l-0.28,-0.81ZM247.35,309.88l0.0,-0.41l0.54,-0.61l-0.3,0.79l-0.24,0.24ZM248.53,308.01l0.2,-0.4l0.07,0.18l-0.27,0.22ZM228.41,263.74l0.31,-0.57l0.82,-0.1l0.38,-0.43l-0.33,3.33l-0.56,1.17l-0.36,-0.22l0.15,-2.76l-0.42,-0.43Z\",\n            name: \"Oman\"\n          },\n          KG: {\n            path: \"M333.84,133.42l1.81,-1.22l1.29,-1.33l1.2,-0.39l0.51,-0.99l2.75,-1.2l0.24,-0.51l-0.33,-0.57l-1.37,-0.73l-0.83,-0.02l0.93,-1.66l1.6,-1.66l3.59,-0.75l3.76,0.58l3.43,1.04l0.93,0.74l3.01,0.46l1.0,0.76l0.75,0.15l0.44,-0.52l-0.5,-1.57l0.95,-3.48l2.24,-1.01l0.53,-0.54l1.34,-0.0l0.6,-0.3l4.25,2.23l4.21,1.31l2.21,0.17l1.38,-1.08l5.05,0.16l3.55,-0.49l1.82,0.55l5.94,0.5l3.66,-0.07l2.7,0.81l1.83,0.02l0.38,0.88l1.76,1.69l3.68,0.64l1.99,1.86l0.2,0.82l-2.73,0.34l-0.69,0.92l-3.46,1.02l-4.15,2.01l-2.87,1.7l-0.29,0.97l-1.48,1.63l-2.25,0.18l-1.64,0.53l-4.35,-0.4l-0.86,0.18l-0.77,0.51l-1.24,1.84l-0.61,1.77l-1.46,1.67l-0.76,-0.52l-2.82,1.09l-1.14,-0.02l-0.54,-2.38l-0.56,-0.45l-3.42,1.52l-1.94,-0.32l-0.64,0.57l0.07,0.85l-0.9,0.24l-1.97,1.51l-3.29,0.96l-1.18,2.16l0.52,1.92l-0.49,0.68l-2.52,0.22l-2.64,0.86l-4.11,-0.13l-1.78,0.47l-0.72,0.87l-1.36,-1.13l-1.83,0.66l-0.31,-1.25l-1.47,-0.33l-0.05,-0.87l-0.65,-0.43l-3.16,1.0l-0.52,0.7l-1.26,0.12l-1.35,-1.46l-0.85,-0.22l-1.88,0.33l-0.56,-0.29l-1.73,0.26l-2.68,-0.18l-1.89,0.39l-0.45,-1.69l0.33,-1.19l1.21,0.22l0.53,-1.61l3.03,-0.86l0.66,0.22l2.71,1.05l0.49,0.78l-0.25,0.76l0.56,0.68l0.65,0.16l0.89,-0.38l0.19,-0.59l-0.27,-0.32l-1.06,-0.21l0.68,-0.5l0.21,-0.75l1.71,-0.69l0.01,0.93l0.46,0.52l-0.18,0.53l0.29,0.52l1.63,0.02l0.33,-0.32l-0.17,-0.81l0.26,-0.43l-0.29,-0.61l-0.9,-0.2l-0.78,-0.86l2.17,-0.26l1.43,0.63l0.91,0.01l0.78,0.5l1.93,-0.92l1.38,-1.61l1.76,0.26l0.46,-0.69l-0.19,-0.66l1.48,0.32l1.4,-1.17l2.73,-1.47l-0.24,-0.8l-3.56,-0.38l-2.13,-1.51l-1.14,0.14l-0.4,-1.32l-1.91,-0.17l-0.64,-1.78l-0.65,-0.42l-0.48,-0.9l-0.93,0.42l-0.15,1.53l-0.73,-0.17l-0.58,0.33l-0.07,1.45l-1.73,-0.13l-1.82,-0.62l-0.41,-0.24l-0.38,-1.21l-0.54,-0.58l-1.68,0.27l-1.78,-0.81ZM345.71,147.85l0.12,-0.51l-0.43,-0.47l-1.23,0.66l0.09,0.46l0.8,0.44l0.65,-0.58Z\",\n            name: \"Kyrgyzstan\"\n          },\n          UZ: {\n            path: \"M235.01,135.19l-0.38,0.4l-7.22,-0.5l-0.01,-32.71l18.68,-5.07l-1.24,2.18l-1.29,3.39l0.43,2.39l-0.39,1.23l0.7,1.14l0.78,0.02l1.18,-0.62l1.48,-2.22l0.55,-0.33l-0.18,-1.56l0.55,-1.23l-0.28,-0.48l-0.7,0.18l0.81,-1.1l-0.46,-0.93l-0.05,-1.12l4.44,2.62l-1.62,3.88l0.88,1.36l2.38,2.12l-0.8,1.35l0.51,0.69l2.08,-0.32l1.06,-0.65l0.04,-0.74l0.85,-0.92l-0.25,-2.44l0.36,-1.11l6.56,3.85l1.11,2.04l6.47,6.3l9.14,-1.24l9.21,0.7l3.4,-1.45l2.55,2.56l1.67,0.98l2.24,3.85l0.51,0.16l1.6,-0.74l-0.63,8.25l0.39,0.41l3.32,0.08l1.24,6.2l0.32,0.86l0.57,0.44l8.82,-0.28l1.03,1.2l-0.43,1.73l0.59,0.83l2.42,1.29l1.4,-0.01l0.52,-0.77l-0.32,-0.99l0.15,-0.68l1.09,-1.4l1.89,-1.48l0.64,-1.48l2.02,-0.94l2.24,-1.63l3.29,-1.36l2.33,-2.27l1.37,0.3l1.01,-1.21l2.11,-0.91l0.93,0.49l-2.53,1.07l-0.44,0.94l-1.23,0.44l-1.34,1.36l-2.01,1.35l-0.2,0.57l0.26,0.52l2.11,0.99l1.62,-0.31l0.55,1.44l0.77,0.57l2.02,0.69l2.03,0.24l0.65,-0.47l0.06,-1.22l1.11,-0.24l0.4,-1.1l0.62,0.37l0.89,2.05l1.85,0.11l0.32,1.36l1.44,-0.1l2.12,1.51l2.97,0.22l-2.11,1.0l-1.2,1.07l-1.66,-0.38l-0.4,0.63l0.2,0.8l-0.82,-0.42l-0.88,0.16l-1.5,1.67l-1.55,0.74l-0.4,-0.41l-0.89,0.03l-1.76,-0.69l-4.82,0.75l-0.78,-1.06l-0.95,-0.31l2.37,-2.04l0.47,-0.8l-0.25,-0.53l-0.5,-0.2l-0.31,-0.85l0.28,-0.59l-0.77,-0.87l-0.64,0.33l-0.71,-0.45l-0.47,0.06l-0.75,1.28l-4.15,1.99l-2.01,-1.2l-0.79,0.29l-0.44,0.45l-0.08,0.91l-0.78,0.89l0.66,1.91l-0.54,0.61l0.12,0.23l-1.83,-0.23l-2.24,0.35l-0.48,0.4l0.13,0.72l1.32,0.17l-0.28,0.55l0.25,0.62l-0.42,0.55l-0.95,0.33l-0.38,1.71l-0.49,0.52l-0.55,0.2l-5.24,-0.78l-1.43,0.63l-0.99,0.99l-0.57,1.96l0.25,0.69l2.09,0.69l0.1,0.82l0.46,0.48l2.06,0.03l0.94,0.36l-0.68,2.1l0.3,1.76l1.99,2.53l-0.76,1.55l-2.87,3.49l-0.41,0.88l-0.12,2.0l-1.76,-0.47l-1.47,0.47l-0.7,-0.17l-1.07,-0.89l-1.91,-0.32l-1.89,0.16l0.06,-3.23l0.78,-1.43l-0.54,-0.95l-1.52,-0.43l-3.17,-1.69l-0.85,-0.21l-1.77,0.28l-7.35,-4.47l-2.31,-1.91l-1.29,0.09l-2.83,-1.72l-1.93,-1.9l-7.31,-4.97l-0.51,-0.65l-0.49,-2.55l-0.61,-1.3l-0.87,-0.74l-0.64,-1.16l-1.1,-3.16l-1.28,-1.31l-2.48,-1.06l-1.9,0.77l-2.81,-0.53l-2.94,0.25l-2.59,-1.5l0.47,-1.53l-0.46,-1.25l0.64,-0.07l0.29,-0.56l-0.78,-1.1l-1.03,-0.46l0.27,-2.1l-1.15,-0.98l-3.9,-0.33l-1.34,-1.62l-2.16,-0.49l-2.12,-1.93l-0.62,0.13l-0.54,0.81l-1.74,-0.18l-0.89,0.6l-0.12,0.44l1.2,1.15l-1.99,-0.33l-0.69,0.68l-0.89,1.97l-1.02,0.19l-0.54,-0.82l-1.18,-0.67l-1.43,0.42l-1.4,3.21l-0.97,1.06l0.41,3.65l0.6,0.81ZM339.66,146.55l0.91,0.56l0.05,0.74l-0.49,-0.01l0.12,-0.53l-0.59,-0.76Z\",\n            name: \"Uzbekistan\"\n          },\n          MM: {\n            path: \"M501.87,308.34l-2.26,-2.73l-1.05,-3.71l0.63,-0.77l1.51,1.13l0.9,0.03l0.33,-0.59l-0.38,-5.03l0.64,-0.95l0.86,0.88l1.08,0.06l0.8,-1.56l0.88,-0.54l0.09,-1.09l-0.62,-2.76l0.58,-1.39l-0.03,-0.73l0.87,-0.01l0.58,-0.69l0.33,-2.1l0.18,-2.73l-0.73,-2.47l0.78,0.52l1.48,-0.24l3.04,1.06l0.73,-0.28l1.24,-3.53l2.17,-3.53l0.94,-2.27l-0.28,-1.07l-0.85,-0.49l0.17,-0.6l0.54,-0.94l0.93,-0.53l1.22,-1.47l0.58,-1.77l0.83,-0.97l-0.54,-2.69l0.49,-1.72l2.44,-1.24l3.25,-2.3l1.21,-1.39l0.86,-0.31l3.81,-0.56l1.57,1.55l1.42,0.2l0.31,-0.38l-0.06,-0.62l-1.47,-2.17l-0.16,-0.97l0.5,-0.65l2.83,-1.98l-0.02,-2.36l1.48,-2.18l0.46,0.06l0.7,1.04l1.0,0.12l1.42,1.56l1.51,4.79l0.65,0.32l0.41,-0.14l0.5,-0.79l1.08,0.52l0.63,6.78l-0.41,4.04l-0.56,0.28l-0.34,0.65l0.68,1.61l-1.38,0.54l-0.91,1.5l-0.85,-0.14l-0.57,0.27l-1.0,2.23l-1.52,0.44l-0.83,1.9l0.14,1.26l-1.1,0.7l-0.4,1.14l-0.01,1.25l1.02,1.05l0.29,1.08l-0.09,0.56l-0.85,1.05l-0.12,0.85l0.97,0.6l2.95,-1.43l1.39,-0.34l2.03,-0.04l0.79,0.35l0.91,-0.25l-0.5,0.55l-0.18,1.14l1.11,1.71l-0.19,1.0l0.59,1.0l-0.14,1.34l0.27,0.45l3.62,0.77l0.88,0.49l-0.78,1.01l-0.41,1.19l-0.02,1.49l-1.22,2.41l0.2,0.88l5.52,0.9l0.07,1.97l0.5,0.62l0.65,0.23l0.22,1.16l0.92,0.49l1.14,-0.27l1.21,0.31l0.84,-0.13l1.79,-1.47l1.57,-0.69l0.12,0.86l-0.39,0.69l-2.43,1.24l-0.4,0.48l-0.39,1.03l-0.95,1.18l0.11,1.06l-1.42,0.17l-0.71,0.59l-0.99,2.9l-1.37,-0.61l-1.41,0.77l-2.17,-0.17l-0.16,0.52l0.31,1.19l-0.81,0.38l-1.0,-0.28l-1.17,0.21l-0.5,0.57l-0.59,1.91l-3.95,0.64l-0.85,-0.01l-1.03,-0.56l-0.98,0.16l-0.33,0.86l-1.35,1.68l-0.11,2.5l-0.72,1.6l0.34,2.47l-1.49,0.55l-0.93,-0.17l-0.39,0.51l0.69,1.42l0.55,0.49l0.63,0.07l0.73,1.76l0.01,2.02l5.42,6.28l0.27,1.82l1.46,3.22l0.73,0.21l0.84,-0.59l-0.39,0.92l-1.82,1.25l-0.22,5.02l-0.66,0.03l-2.01,1.22l-0.22,0.78l0.18,1.31l0.4,1.41l2.42,3.46l2.76,2.42l1.43,2.38l0.28,3.46l-0.48,0.95l0.1,0.8l0.73,2.25l1.35,1.44l0.46,2.72l1.12,3.05l-0.96,1.03l-2.14,3.82l-3.26,3.39l0.03,1.89l-0.44,1.56l-0.67,0.72l0.06,-1.69l-0.4,-2.26l1.49,-2.26l0.57,-2.2l-0.01,-2.49l0.82,-0.74l-0.02,-0.69l-0.92,-0.45l-0.71,0.36l0.44,-1.37l0.03,-1.9l-0.53,-0.52l0.37,-0.74l-0.31,-0.53l0.25,-1.66l-0.66,-3.84l-1.23,-2.64l-1.24,-1.8l-0.14,-1.67l-0.29,-0.35l-0.7,0.2l-0.05,0.34l0.04,-1.87l-0.73,-1.27l-0.52,-1.99l0.6,-0.05l0.02,-0.49l-1.47,-1.44l-0.76,-7.75l-0.91,-1.16l0.39,-1.7l-0.05,-1.47l0.64,-1.12l-0.47,-0.2l-2.21,0.33l-1.14,-2.55l-0.24,-1.78l-1.72,-1.71l-0.89,-0.65l-0.49,0.01l-0.12,0.47l0.32,0.63l-0.34,0.87l0.38,1.18l-0.96,2.24l-0.99,1.04l-1.18,0.38l-0.79,-0.51l-0.41,-1.44l-0.79,-0.04l-0.23,0.5l0.87,2.31l-1.72,0.47l-0.36,0.71l-1.73,0.6l-0.85,1.65l-1.91,1.73l-0.12,-0.68l0.43,-0.98l-0.13,-0.86l-0.39,-0.34l-1.43,2.06l-1.33,0.03l-0.25,-2.39l-0.34,-0.35l-0.43,0.25l-0.35,1.13l-0.66,0.53l0.47,-3.19l-0.13,-0.93l-0.38,-0.31l-0.4,0.29l-0.28,1.27l-1.6,1.76l-0.96,0.53l0.36,-3.3l0.61,-0.99l0.91,-3.82l0.66,-1.3l0.21,-2.27l-0.71,-2.01l-0.47,-2.85l-1.68,-3.76l0.29,-0.25l-0.15,-0.42l-1.16,-0.97l-0.18,-2.93l-0.62,-0.3l0.17,-1.18l-1.22,-0.77l-0.64,-1.12l-0.81,-0.55l0.51,-0.72l-0.32,-0.65l-0.8,0.02l-1.26,-0.97l-1.31,-0.28l-0.87,0.25l-0.16,0.86l-0.41,-0.72l0.51,-0.56l-0.36,-0.73l0.26,-0.99l-0.35,-0.61l-0.66,0.19l-0.12,0.44l-0.32,0.57l-0.2,-1.16l-1.2,-1.37l-0.61,0.47l0.15,0.71ZM511.54,317.64l-0.59,1.02l0.13,1.32l-1.21,-0.74l-1.27,-2.11l0.87,0.82l0.88,0.31l1.18,-0.61ZM503.54,309.93l-0.24,0.32l-0.03,-0.02l0.15,-0.21l0.13,-0.09ZM545.29,376.32l-0.21,-0.96l0.34,-0.03l-0.06,1.01l-0.07,-0.02ZM544.52,369.1l0.3,0.29l-0.24,0.63l0.04,-0.45l-0.1,-0.47ZM538.23,340.2l-0.05,-0.68l0.11,-0.08l0.04,0.12l-0.1,0.65ZM509.61,315.91l1.12,0.49l0.2,0.28l-0.64,0.23l-0.68,-1.0ZM509.32,321.7l-0.47,-0.39l-0.2,-0.27l0.82,0.06l-0.15,0.6Z\",\n            name: \"Myanmar\"\n          },\n          SG: {\n            path: \"M585.95,453.53l-0.64,0.28l-0.67,-0.24l0.65,-0.28l0.66,0.24Z\",\n            name: \"Singapore\"\n          },\n          KH: {\n            path: \"M574.51,361.92l1.66,-0.41l0.12,-0.61l3.37,-4.31l3.71,-1.2l3.21,0.46l5.93,-0.52l1.08,0.34l0.57,1.07l0.57,0.1l0.63,-0.48l1.18,1.3l1.61,-0.24l1.3,0.45l1.26,1.22l1.44,0.1l0.37,-0.24l0.45,-1.27l-0.97,-1.85l1.11,-0.15l0.48,-0.66l0.95,0.03l0.88,-0.67l2.44,1.8l2.36,-0.87l1.16,-1.19l0.89,0.17l-0.8,1.05l-0.24,1.95l2.04,5.15l-0.97,3.16l0.51,2.51l-0.03,1.91l-0.66,0.91l-0.49,-0.33l-1.01,0.13l-2.18,1.73l-1.13,0.17l-0.63,0.58l-2.02,0.22l-0.32,0.43l-0.03,1.57l-2.6,-0.56l-1.56,1.19l0.08,2.96l2.22,1.94l-0.12,1.13l-0.94,-0.53l-0.65,0.09l-0.64,-0.81l-0.81,-0.16l-2.31,0.37l-0.59,0.64l-2.19,-0.27l-0.28,0.53l0.26,1.06l-1.38,1.2l-1.93,0.08l-0.92,0.75l-1.07,-0.86l-2.44,-0.4l-0.61,-0.53l-1.67,1.04l-0.56,-0.58l1.05,-0.75l0.31,-1.0l-0.63,-1.7l-0.96,-0.7l-0.49,0.05l-1.25,1.62l-1.01,0.05l-0.36,-1.87l0.15,-2.16l-0.77,-0.87l-0.14,-1.03l-0.42,-0.48l-0.35,0.04l-1.16,-2.31l-0.2,-1.12l0.28,-1.55l-1.85,-1.81l-0.28,-2.48l-0.98,-2.09l-0.07,-1.62Z\",\n            name: \"Cambodia\"\n          },\n          CY: {\n            path: \"M52.44,189.37l1.85,0.77l2.04,-0.71l1.37,0.09l0.52,1.29l1.4,-0.11l-1.77,1.53l-2.23,0.47l-0.92,0.87l-0.57,-0.55l-1.44,0.04l-1.81,-0.89l-0.72,-1.76l2.3,-1.04ZM61.14,190.36l0.36,-0.24l0.39,0.2l-0.02,0.0l-0.74,0.04Z\",\n            name: \"Cyprus\"\n          },\n          QA: {\n            path: \"M191.62,275.3l-1.7,0.32l-0.94,-0.72l-0.29,-0.65l0.27,-0.89l-0.68,-3.97l1.8,-4.45l1.49,-1.1l1.85,1.74l0.16,0.7l-0.61,2.21l0.9,3.61l-1.28,2.84l-0.98,0.35Z\",\n            name: \"Qatar\"\n          },\n          KR: {\n            path: \"M753.99,193.32l1.41,0.11l0.77,-1.18l-0.16,-0.67l-1.06,0.07l-0.87,-2.37l1.33,-2.74l0.95,-0.67l-0.16,-0.61l-0.43,-0.18l1.23,-0.79l0.46,-1.12l-0.69,-0.79l0.15,-0.9l-1.0,-1.05l0.03,-2.59l-0.46,-1.89l-0.52,-0.32l-0.69,0.31l-1.16,-0.29l-0.06,-0.26l0.32,-0.64l1.87,-1.06l1.8,0.49l0.69,1.02l0.63,-0.26l0.75,-0.88l-0.05,-0.43l-0.86,-0.41l-0.49,-0.88l-0.24,-0.71l0.21,-1.04l-0.97,-1.25l-0.02,-0.95l-0.61,-1.14l0.73,-0.78l0.02,-0.84l2.94,-3.01l7.06,-0.2l1.16,-0.57l1.11,-1.88l1.63,3.45l3.24,4.33l2.09,3.42l0.59,1.76l0.4,2.63l-0.59,3.62l0.08,2.32l0.41,0.65l0.8,-0.05l-1.07,3.98l-1.43,2.52l-1.54,0.6l-3.68,0.07l-0.8,0.84l0.15,1.0l-1.97,-0.42l-0.36,-0.62l-0.82,-0.17l-2.72,1.01l-0.15,0.64l0.66,0.86l-0.22,0.18l-0.9,-1.18l-1.06,0.16l-0.38,0.99l0.54,1.03l-0.65,0.91l-0.63,-0.39l0.57,-0.75l0.01,-0.74l-0.76,-0.42l-1.62,1.25l-0.93,1.29l-0.72,-0.54l-0.43,0.06l-1.2,1.11l-0.35,-0.97l-1.31,-1.11ZM771.49,190.93l0.08,1.06l-0.29,0.22l-0.66,-0.49l0.86,-0.78ZM765.7,192.18l0.1,-0.56l0.61,0.23l0.08,0.65l-0.79,-0.32ZM753.88,205.05l-0.4,0.13l-0.34,-0.44l1.03,-0.9l2.57,-0.72l1.17,0.22l-0.17,0.82l-1.1,0.52l-2.75,0.38ZM754.66,166.8l0.29,0.31l-0.02,0.58l-0.05,-0.07l-0.22,-0.82ZM752.75,195.37l0.75,-0.75l0.33,0.12l-0.79,0.68l-0.29,-0.06Z\",\n            name: \"Korea\"\n          },\n          KP: {\n            path: \"M739.6,147.16l0.14,-0.66l3.53,-2.94l0.73,-0.05l0.7,-0.77l2.64,-1.04l1.79,-1.14l0.46,-0.63l2.08,-0.45l3.82,-4.13l0.8,-2.45l0.81,-0.6l1.35,-0.45l1.79,2.16l2.94,0.69l2.65,-0.05l1.43,0.64l0.6,-0.11l1.12,-1.65l0.03,-0.6l-1.93,-3.06l6.28,-0.39l2.31,-1.74l0.26,-0.98l0.6,-0.76l0.46,-0.12l0.94,0.46l1.56,-0.74l1.33,-4.79l1.16,0.23l0.9,0.63l0.05,1.25l0.9,1.09l1.06,0.61l1.01,1.58l0.03,0.25l-1.33,-0.07l-1.59,1.03l-0.54,0.84l-1.29,0.97l-1.02,1.7l-0.93,0.9l-0.57,1.22l-0.03,0.9l0.62,1.68l-0.39,1.55l0.05,2.17l-2.69,1.16l-1.75,2.08l-2.92,1.48l-1.5,1.69l-1.47,0.78l-2.52,0.37l-0.87,0.93l-2.36,1.18l-0.33,0.96l0.16,1.96l-0.92,0.66l-0.24,1.65l3.07,1.36l1.43,1.65l2.59,1.82l-0.83,1.83l-0.7,0.63l-7.56,0.36l-0.78,0.49l-2.53,2.77l-0.15,0.99l-1.95,-0.73l-1.25,0.43l-0.37,0.46l-0.62,-0.84l-0.69,-0.03l-1.57,-0.95l-0.56,0.2l-1.0,1.37l-0.98,0.69l-0.68,-1.04l-1.65,-0.42l1.24,-0.68l0.08,-0.69l-0.74,-0.38l-2.63,-0.13l0.57,-0.37l0.23,-1.18l1.23,-1.65l1.71,-0.89l1.78,-0.17l0.16,-0.72l-1.08,-0.59l-0.97,0.01l-0.74,-0.65l1.87,-3.69l-0.37,-2.17l-0.26,-0.33l-1.97,-0.58l-2.32,-1.41l-0.69,0.12l-0.28,0.95l-0.54,-1.23l-1.46,-0.96l0.07,-0.75Z\",\n            name: \"Dem. Rep. Korea\"\n          },\n          KW: {\n            path: \"M167.69,235.06l-0.94,-0.06l-1.81,1.62l-0.16,0.46l0.3,0.43l2.23,0.19l0.93,2.92l1.65,3.04l-4.92,0.07l-1.91,-3.71l-5.99,-0.78l2.32,-3.08l1.56,-3.47l0.65,-0.51l3.13,-0.41l1.92,0.77l1.03,2.52ZM168.51,233.33l0.2,-0.32l0.75,1.05l-0.02,0.41l-0.58,0.53l-0.55,-1.16l0.2,-0.51Z\",\n            name: \"Kuwait\"\n          },\n          KZ: {\n            path: \"M172.6,48.91l0.9,0.03l3.88,-2.48l1.29,-2.26l2.33,-0.47l3.78,-1.94l3.63,-3.95l2.37,0.74l0.63,0.42l0.18,0.79l0.68,0.55l2.22,-0.14l2.95,-1.86l1.41,-0.32l0.62,0.21l1.14,1.57l0.7,0.43l1.96,-0.09l1.71,0.31l2.14,-0.2l1.31,0.73l1.23,1.52l2.02,0.91l1.27,1.11l2.02,2.46l0.45,2.04l0.86,0.61l0.55,-0.18l0.52,-0.7l0.01,-2.02l-0.64,-1.53l0.32,-0.24l2.51,1.3l2.63,2.04l2.58,0.87l1.09,-0.23l1.92,-1.12l0.81,-1.36l2.35,-1.56l1.04,0.32l2.77,-0.8l1.08,0.25l2.19,1.49l1.71,-0.39l1.32,-1.6l3.67,0.24l1.29,0.84l2.53,2.74l4.39,0.81l0.18,0.98l0.58,0.27l2.31,-0.95l1.57,-2.53l1.48,1.33l1.19,0.33l1.74,0.16l2.36,-0.33l2.13,-0.78l1.45,-1.06l1.44,-3.61l-0.18,-1.24l-1.75,-1.46l-2.4,-0.46l-0.47,-0.47l-3.68,-1.1l-0.59,-1.19l-2.45,-1.29l2.68,-1.56l1.87,-0.28l2.52,-1.96l-0.1,-1.05l-1.45,-2.62l1.84,-2.62l2.4,-0.21l4.25,0.52l1.19,-0.76l0.08,-0.8l-0.76,-0.88l-2.56,-1.18l-3.42,-0.64l0.2,-0.91l1.93,-0.37l0.51,-0.66l-0.13,-0.57l-0.65,-0.52l-1.74,0.28l-1.53,-0.53l0.84,-0.91l0.25,-2.16l0.51,-0.45l0.58,-0.23l4.51,1.03l0.91,-0.57l3.3,-0.1l1.14,-0.59l3.19,-0.36l0.96,-0.67l3.77,-0.75l1.12,0.06l2.66,-1.15l1.79,-0.35l1.52,0.31l1.98,-0.42l1.43,0.51l0.73,-0.49l0.53,-1.42l1.64,-0.98l1.56,0.04l1.46,-0.68l0.42,0.25l2.01,-0.08l4.05,-0.74l7.0,-1.39l1.13,-0.75l2.4,-0.34l0.91,-0.99l-0.15,-1.07l1.96,-0.31l1.56,-1.14l1.81,-0.78l3.75,0.33l5.15,2.03l1.1,-0.26l1.4,-1.0l1.59,-0.2l1.09,1.6l2.0,5.33l-0.22,2.29l-0.68,0.98l0.51,1.11l1.97,0.57l4.11,-0.64l0.78,0.15l0.73,-0.32l0.6,-0.87l1.2,1.76l0.14,1.58l0.48,0.49l0.43,0.03l1.22,-0.77l-0.04,-1.15l1.95,0.25l1.45,1.23l1.06,0.33l1.3,-0.08l1.86,-1.02l-0.1,0.73l-1.95,1.12l-0.92,1.37l-0.1,1.36l0.6,1.33l0.56,0.4l0.83,-0.3l1.25,-1.06l1.43,-0.39l2.39,0.39l1.44,0.92l0.59,-0.38l0.33,-1.35l2.69,-1.72l1.54,0.01l1.42,-0.75l1.17,-0.78l0.38,-1.17l1.89,-0.27l4.3,-2.03l1.77,-0.27l1.82,-0.97l-0.98,2.17l-1.56,-0.06l-0.41,0.4l0.55,1.55l0.79,0.92l8.43,5.75l1.1,1.06l4.59,6.36l5.04,7.73l6.5,11.03l0.6,0.16l0.5,-0.35l0.09,-0.58l0.86,-0.62l1.5,-0.34l0.42,-0.72l-0.09,-1.71l1.85,-0.96l0.89,0.1l0.79,0.91l0.93,0.01l-0.46,1.28l0.16,0.85l0.65,0.27l1.62,-0.15l0.32,1.74l0.56,0.45l3.42,-0.26l1.35,0.54l3.1,-0.2l0.97,-0.49l0.98,-1.1l1.82,-0.04l1.15,-0.91l1.29,-0.05l2.57,1.01l1.58,1.03l1.67,2.39l0.61,2.25l0.59,0.64l2.26,0.45l1.67,1.05l0.97,0.21l0.07,1.51l1.98,2.96l5.14,0.63l0.59,0.53l1.47,0.0l3.64,-2.68l-0.67,0.96l0.01,0.79l1.47,0.91l1.45,1.98l2.0,1.07l-2.66,0.15l-1.2,0.9l-0.36,3.14l-1.13,1.45l-6.08,1.5l-0.96,1.82l-0.76,2.8l0.45,4.09l0.61,1.53l-0.07,0.57l-1.1,1.62l-1.93,0.31l-2.97,1.82l-0.39,-0.9l-0.63,-0.4l-2.48,-0.23l-2.39,0.24l-2.17,-0.46l-4.68,-1.78l-0.74,0.25l-0.61,2.3l-3.13,7.56l-1.83,5.41l0.31,1.09l1.95,0.76l0.03,0.93l-0.52,1.22l-1.62,-0.86l-2.46,0.52l-0.88,-0.45l-0.34,-0.87l-0.92,-0.39l-6.12,1.99l-1.69,0.04l-4.31,1.11l-1.6,1.24l0.06,0.82l0.97,0.62l2.04,-0.05l1.07,0.43l-0.38,0.34l-0.41,2.18l0.14,3.17l2.24,5.03l0.35,1.1l-0.24,1.1l0.87,1.41l-1.02,-0.13l-1.69,0.77l-0.34,0.96l0.72,0.7l-1.42,0.56l-0.57,0.78l-0.33,1.2l0.71,3.27l-2.01,-1.79l-3.53,-0.57l-2.33,-2.68l-1.92,-0.03l-2.75,-0.82l-3.74,0.06l-5.84,-0.49l-1.92,-0.56l-3.62,0.5l-5.04,-0.17l-0.64,0.18l-0.91,0.93l-1.89,-0.19l-4.02,-1.25l-4.54,-2.38l-0.73,0.39l-1.36,-0.01l-3.25,1.86l-1.12,3.91l0.33,1.19l-0.86,-0.69l-3.16,-0.51l-0.81,-0.69l-3.56,-1.08l-3.49,-0.6l-2.34,0.48l-0.84,-0.12l-1.24,0.45l-1.88,1.87l-1.05,1.86l0.09,0.95l-1.3,0.47l-0.89,1.12l-0.6,-0.38l-0.76,0.09l-2.43,2.34l-3.9,1.67l-1.56,1.26l-2.24,1.13l-0.61,1.47l-1.85,1.44l-1.2,1.53l-0.29,1.22l0.32,0.85l-0.38,0.14l-1.35,-0.38l-1.57,-1.14l0.45,-1.71l-1.39,-1.84l-9.18,0.12l-1.51,-7.1l-0.39,-0.35l-3.27,-0.08l0.67,-8.49l-0.57,-0.39l-1.9,0.88l-2.11,-3.62l-1.8,-1.1l-2.72,-2.7l-1.13,0.14l-2.67,1.26l-9.15,-0.69l-8.97,1.25l-6.08,-6.05l-1.18,-2.1l-7.01,-4.12l0.16,-4.09l-0.32,-2.03l-0.55,-0.81l-1.7,-0.05l0.79,-2.36l4.16,0.6l3.04,-2.59l2.71,-1.03l0.78,-1.31l0.09,-0.76l-0.31,-0.59l-3.08,-0.71l-0.31,-1.74l-0.64,-0.6l-0.91,-0.15l-0.5,0.03l-0.32,0.58l1.13,0.99l-0.33,0.23l-1.16,-0.19l-0.4,0.28l-0.45,-0.86l-0.82,-0.28l-1.65,0.88l-0.66,1.3l0.28,0.84l0.66,0.56l2.26,-0.05l1.37,0.79l1.08,-0.56l0.53,1.15l-0.81,0.93l-4.22,-0.5l-1.77,0.48l-0.37,-2.0l-2.18,-0.48l-0.35,0.74l1.13,1.75l0.17,0.88l-0.58,1.96l-0.93,0.41l-0.51,-0.21l-0.53,0.4l-0.13,-0.6l0.7,-1.38l-0.33,-0.61l-0.63,-0.13l-0.95,0.42l-1.25,-0.14l-2.13,1.31l-0.9,2.61l-19.46,5.2l-0.29,0.39l0.01,32.99l-2.83,0.53l-0.57,-0.2l-1.35,-1.41l-2.96,-4.54l-1.41,-1.09l-4.37,-2.37l-3.36,0.36l-4.75,1.36l-1.5,0.85l-2.33,2.04l-0.09,-2.01l1.15,-2.89l0.17,-1.24l-0.41,-2.16l-0.95,-0.67l-1.69,0.1l-0.71,-0.56l-1.98,0.04l-2.08,-2.59l-2.26,-0.17l0.03,-2.63l-1.79,-2.47l-1.73,-4.01l-1.3,-0.88l-2.65,-0.56l-0.35,-0.85l0.23,-0.83l0.64,-0.3l3.16,-0.04l2.45,1.17l3.15,-0.49l-0.43,-0.87l-1.43,-0.45l-2.03,-1.99l0.08,-0.75l1.54,-1.3l1.11,-2.04l0.9,0.09l1.37,-0.5l5.13,-0.05l3.59,0.79l2.3,-0.12l0.16,-0.7l-2.99,-1.97l1.93,-3.52l0.7,-2.09l-0.18,-2.25l-0.32,-0.62l0.75,-1.88l-0.81,-1.87l-1.25,-1.02l-3.38,-0.4l-2.67,1.51l-1.0,-0.67l-1.73,-0.26l-1.03,-0.92l-3.56,-0.77l-2.01,0.69l-2.49,1.47l-1.33,0.11l-3.84,2.59l-4.01,0.71l-0.31,0.81l-0.94,0.66l-4.0,-1.89l-0.55,-0.56l0.02,-0.42l0.32,-0.14l1.13,0.48l1.1,0.05l0.75,-0.51l0.02,-0.71l-3.06,-5.19l-2.97,-3.78l-0.64,-0.44l-4.69,-0.56l-1.42,0.55l-1.14,-1.56l0.18,-1.65l-0.51,-1.3l-0.62,-0.61l-2.35,-1.11l-0.32,-1.28l0.65,-2.06l1.91,-2.2l0.57,-1.21l-0.2,-0.85l-1.49,-1.44l0.62,-2.97l0.71,-1.41l2.29,-2.06l0.24,-2.1l1.15,-1.1l1.13,0.2l3.84,4.33l0.94,0.79l1.03,0.29l2.46,-0.98l0.83,-1.02l-1.33,-5.63ZM248.32,97.54l1.41,-1.65l0.64,-0.08l0.28,-0.6l1.51,1.9l0.45,2.98l-4.3,-2.54ZM201.9,97.61l0.06,0.13l-0.08,-0.1l0.02,-0.02Z\",\n            name: \"Kazakhstan\"\n          },\n          SA: {\n            path: \"M67.56,247.08l1.06,-2.61l1.21,-6.57l8.14,1.18l3.22,-2.48l1.76,-2.79l5.69,-1.31l1.39,-2.79l2.37,-1.31l0.11,-0.62l-7.19,-7.71l14.36,-3.99l1.39,-1.04l8.92,1.5l12.67,7.05l19.68,15.46l12.58,1.15l1.36,-0.26l6.48,0.83l0.99,2.68l0.74,0.93l5.85,0.06l1.24,3.08l1.36,1.9l0.02,1.54l0.92,0.84l1.96,0.85l-0.09,0.58l1.74,2.09l1.07,0.33l1.25,1.48l2.47,1.51l-0.38,0.48l0.15,1.27l1.23,1.15l0.15,0.54l-0.3,1.16l-0.68,-0.02l-0.35,0.56l1.61,4.02l1.62,1.6l0.79,2.71l2.88,4.0l1.44,0.3l1.24,-0.31l0.58,0.29l-0.56,1.24l0.27,0.54l1.64,0.42l0.26,1.52l7.21,9.07l19.35,2.6l0.62,-0.35l3.01,4.88l-4.85,15.33l-22.24,7.7l-22.07,3.25l-6.65,3.39l-4.44,5.48l-1.05,2.59l-1.98,1.12l-0.97,-0.04l-2.04,-2.41l-3.15,0.26l-5.76,-0.54l-2.94,-0.97l-7.47,0.22l-1.72,0.54l-1.36,-0.25l-1.4,-1.05l-1.17,-0.12l-1.94,1.53l0.2,0.75l-0.46,0.41l-0.3,2.08l0.52,1.22l-0.09,0.47l-2.09,2.0l-0.74,-2.32l-2.34,-2.97l-0.72,-2.45l-4.07,-3.48l-1.74,-2.75l-0.63,-1.61l-1.43,-1.65l-0.88,-3.14l-2.67,-5.22l-1.18,-0.68l-1.03,-1.34l-3.01,-2.12l-1.56,-0.27l-1.05,-0.68l-3.32,-4.48l-1.26,-2.42l0.36,-1.64l-1.18,-2.86l0.78,-3.89l-0.25,-1.73l-0.41,-1.31l-0.77,-0.8l0.17,-0.38l-1.0,-1.2l-0.69,-2.03l-1.87,-3.31l-1.37,-1.63l-2.72,-2.14l-0.88,-0.15l-0.94,-0.69l-1.05,-0.1l-2.46,-3.84l0.54,-1.19l-0.93,-2.77l-1.71,-2.8l-1.2,-0.94l-0.59,-2.11l-1.27,-0.76l-1.95,-3.81l-3.0,-3.86l-0.72,-1.58l-1.32,-1.36l-1.19,-2.44l-1.82,-2.44l-1.05,-0.58l-2.95,-0.27ZM121.15,336.6l0.4,-0.33l0.04,0.83l-0.42,-0.42l-0.03,-0.07Z\",\n            name: \"Saudi Arabia\"\n          },\n          MY: {\n            path: \"M641.05,446.05l0.71,0.36l0.8,-0.15l0.31,-0.63l-0.05,-1.52l1.13,-1.14l8.26,-1.87l2.45,-1.08l3.07,-4.07l3.61,-3.82l0.56,-2.37l1.04,0.65l0.74,1.61l0.77,0.18l1.45,1.69l0.83,-0.12l1.04,-1.16l0.49,-1.72l-0.65,-2.41l1.27,-0.83l0.6,3.28l1.34,0.6l0.79,-0.16l0.23,-0.69l-1.05,-3.38l1.72,-0.53l1.0,-0.99l0.28,-0.89l-0.2,-0.46l-0.76,-0.4l-0.24,-0.75l0.85,-0.95l1.6,0.28l0.86,-0.69l1.46,-2.15l0.59,-1.82l2.63,-2.91l1.82,-3.25l0.07,1.03l-0.4,1.27l0.42,0.49l1.23,-0.56l1.41,-2.12l0.39,0.11l0.49,1.95l2.54,1.44l0.3,1.12l-0.58,0.84l0.21,1.26l-1.06,1.1l0.45,0.27l2.37,-0.42l1.26,-0.69l0.4,0.75l-1.28,0.7l0.39,0.84l0.8,0.12l1.71,-0.81l0.54,0.09l1.09,0.52l0.73,1.09l2.73,1.23l1.7,0.01l0.25,0.23l-0.17,1.1l-2.14,0.94l-1.73,0.42l-2.17,-0.4l-1.23,0.45l-0.5,1.64l1.11,1.27l1.74,1.22l-0.31,0.37l-3.61,0.82l-2.24,-0.68l-0.65,0.38l-0.47,0.91l-1.98,-0.95l-1.4,-0.29l-4.28,-0.24l-0.9,0.41l-1.26,-0.36l-1.67,0.49l-0.93,-0.39l-0.65,0.17l-1.34,1.23l-0.86,2.06l-0.01,3.59l-0.75,2.89l-1.52,0.08l-1.28,1.48l-0.09,1.78l0.74,0.64l-2.9,2.03l-0.23,0.94l0.5,1.26l-0.87,0.78l-1.12,2.74l-1.0,-0.3l-3.61,0.49l-1.97,1.43l-0.64,-0.42l-3.69,-1.0l-0.07,-0.54l-0.57,-0.44l-3.66,0.03l-2.38,0.96l-0.86,2.2l-1.16,0.28l-0.79,0.7l-2.19,0.08l-3.0,-0.4l-4.31,1.39l-5.53,-4.81l-0.52,-0.59l-0.12,-1.09l-0.67,-0.63l0.15,-0.41l0.53,0.81l2.05,1.09l2.87,0.04l2.35,1.25l1.7,0.14l1.46,0.96l1.09,0.05l0.35,-0.32l-0.2,-0.43l-1.23,-0.89l0.83,-1.07l0.2,-1.39l0.73,-1.77l-0.46,-0.71l0.0,-1.02ZM684.91,409.61l0.41,-0.56l0.41,-0.05l-0.11,0.45l-0.71,0.16ZM560.8,415.59l1.25,-0.03l0.88,1.55l1.37,0.16l0.1,1.64l-0.72,1.49l1.08,1.33l0.76,0.04l0.91,-1.13l1.92,-0.77l0.73,0.88l1.24,0.0l0.78,-0.51l0.47,-1.13l0.82,-0.81l0.26,-0.92l1.31,0.38l1.47,2.32l4.16,3.36l2.32,4.07l0.27,1.27l0.11,2.01l-0.8,4.74l0.67,1.89l-0.05,4.51l0.79,1.27l2.02,1.44l3.01,6.32l0.41,2.01l-0.51,-0.09l-0.34,-0.92l-1.12,-0.76l-0.17,1.27l-1.91,0.01l-1.28,0.88l-0.97,-1.56l-4.68,-2.31l-1.38,-1.41l-2.98,-1.53l-2.64,-2.36l-2.02,-0.89l-1.43,-1.29l0.34,-0.91l-0.49,-2.0l-4.16,-5.01l0.43,-0.68l-1.32,-2.52l-0.02,-2.17l-1.05,-2.92l-0.88,-3.99l-0.08,-3.02l-1.65,-3.37l0.29,-1.42l0.84,0.97l1.64,0.62ZM558.59,423.72l0.04,-0.52l0.15,0.07l-0.19,0.45ZM554.87,416.01l0.61,-0.22l0.15,0.23l-0.64,0.21l-0.12,-0.22Z\",\n            name: \"Malaysia\"\n          },\n          YE: {\n            path: \"M210.22,368.93l3.31,-0.15l1.6,0.56l-2.1,0.96l-2.93,0.3l-0.74,-0.15l-1.64,-1.15l1.07,-0.91l1.43,0.54ZM128.17,348.79l0.44,-0.21l0.08,-0.52l-0.6,-2.52l0.88,-2.78l-0.26,-2.55l2.7,-2.53l0.16,-1.06l-0.5,-1.03l0.13,-1.2l0.71,-1.07l-0.29,-0.74l0.95,-0.8l1.11,-0.07l1.35,1.04l1.75,0.31l1.77,-0.56l7.3,-0.22l2.88,0.97l5.8,0.55l2.98,-0.27l1.72,2.26l1.74,0.18l2.31,-1.32l1.14,-2.71l4.35,-5.36l7.46,-3.52l20.53,-2.86l5.51,12.84l0.6,0.39l1.9,4.24l-3.44,1.26l-1.95,1.39l-0.81,1.14l-0.47,1.65l0.32,2.18l-4.38,2.32l-4.33,1.48l-3.64,0.78l-2.72,1.43l-1.96,0.18l-4.21,1.47l-2.35,1.44l-0.94,1.48l-1.79,1.54l-2.77,0.39l-2.36,-0.34l-2.76,1.51l-1.63,1.45l-4.57,1.47l-6.42,0.52l-2.01,0.43l-2.12,2.11l-1.79,0.61l-0.9,1.3l-1.82,0.34l-1.28,-0.34l-2.53,1.26l-1.88,0.27l-2.61,-1.01l-0.88,0.19l-0.1,-0.73l-1.76,-3.14l0.35,-3.27l-0.45,-1.43l-0.97,-1.04l0.01,-1.45l-1.28,-4.7l0.07,-0.99l-0.57,-1.41l-0.93,-0.61Z\",\n            name: \"Yemen\"\n          }\n        },\n        height: 555.5409752358405,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"brazil\", {\n        width: 22e4,\n        height: 194010,\n        paths: {\n          ro: {\n            name: \"RO\",\n            path: \"M39760.00 75303.00l129.00 -97.00 0.00 -129.00 -32.00 -32.00 32.00 -32.00 64.00 32.00 64.00 0.00 129.00 0.00 97.00 -64.00 64.00 -64.00 32.00 -97.00 289.00 -161.00 65.00 -64.00 96.00 32.00 32.00 -32.00 129.00 -32.00 64.00 -96.00 193.00 -33.00 0.00 -32.00 0.00 -64.00 32.00 -64.00 129.00 -97.00 129.00 -128.00 64.00 -129.00 161.00 -129.00 0.00 -225.00 -33.00 -96.00 -96.00 -65.00 0.00 -32.00 32.00 -32.00 161.00 64.00 32.00 0.00 64.00 -32.00 97.00 65.00 64.00 -65.00 32.00 32.00 0.00 65.00 32.00 0.00 97.00 0.00 32.00 -32.00 -32.00 -97.00 96.00 0.00 32.00 0.00 97.00 97.00 32.00 0.00 64.00 -33.00 65.00 0.00 161.00 65.00 64.00 -65.00 32.00 0.00 96.00 -64.00 33.00 0.00 32.00 0.00 96.00 32.00 193.00 0.00 64.00 -32.00 0.00 -32.00 33.00 0.00 160.00 0.00 65.00 32.00 96.00 0.00 0.00 64.00 64.00 33.00 33.00 32.00 96.00 64.00 32.00 97.00 32.00 64.00 97.00 32.00 64.00 0.00 97.00 96.00 32.00 0.00 32.00 33.00 0.00 96.00 32.00 0.00 64.00 -32.00 33.00 161.00 32.00 0.00 32.00 32.00 32.00 96.00 32.00 0.00 64.00 -64.00 33.00 -32.00 64.00 0.00 32.00 -64.00 32.00 0.00 64.00 32.00 33.00 0.00 128.00 -258.00 64.00 -32.00 33.00 -257.00 32.00 0.00 64.00 0.00 32.00 0.00 33.00 -64.00 32.00 -32.00 96.00 -33.00 97.00 -32.00 32.00 0.00 96.00 0.00 64.00 32.00 161.00 129.00 32.00 0.00 32.00 0.00 33.00 32.00 0.00 65.00 32.00 32.00 96.00 -32.00 32.00 -65.00 65.00 65.00 64.00 -33.00 32.00 33.00 0.00 -65.00 -64.00 -161.00 -32.00 -64.00 0.00 -32.00 32.00 -161.00 0.00 -128.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 129.00 64.00 96.00 64.00 32.00 0.00 32.00 -32.00 0.00 -32.00 129.00 0.00 32.00 -64.00 225.00 -129.00 65.00 -64.00 160.00 -64.00 33.00 0.00 160.00 96.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 64.00 97.00 161.00 -32.00 128.00 0.00 32.00 96.00 33.00 0.00 64.00 -64.00 96.00 0.00 65.00 32.00 0.00 32.00 0.00 96.00 32.00 65.00 64.00 128.00 -96.00 65.00 0.00 64.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 129.00 0.00 32.00 -32.00 0.00 -32.00 64.00 -65.00 -32.00 -96.00 32.00 0.00 32.00 -32.00 33.00 -32.00 64.00 0.00 -32.00 -65.00 64.00 -64.00 0.00 -64.00 64.00 -65.00 97.00 0.00 64.00 -64.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 33.00 -97.00 32.00 -64.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 -129.00 -33.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 -33.00 64.00 -225.00 0.00 -128.00 0.00 -32.00 64.00 32.00 32.00 -32.00 32.00 -65.00 97.00 -64.00 129.00 -97.00 128.00 -32.00 64.00 0.00 65.00 0.00 32.00 32.00 96.00 129.00 33.00 0.00 96.00 -32.00 129.00 -97.00 0.00 -32.00 64.00 0.00 32.00 32.00 64.00 97.00 65.00 -32.00 96.00 0.00 129.00 32.00 64.00 0.00 32.00 -32.00 65.00 -32.00 0.00 -65.00 32.00 0.00 64.00 -32.00 32.00 -32.00 64.00 0.00 193.00 32.00 129.00 -32.00 64.00 0.00 32.00 0.00 65.00 -32.00 128.00 -32.00 129.00 -65.00 257.00 -96.00 64.00 0.00 0.00 32.00 0.00 64.00 -64.00 161.00 0.00 32.00 64.00 32.00 65.00 0.00 161.00 -32.00 160.00 32.00 258.00 -160.00 128.00 0.00 32.00 -32.00 0.00 -65.00 -32.00 -225.00 0.00 -128.00 -32.00 -97.00 0.00 -32.00 0.00 -32.00 96.00 -97.00 33.00 -64.00 -65.00 -129.00 0.00 -160.00 65.00 -97.00 32.00 -32.00 64.00 32.00 64.00 0.00 97.00 -64.00 32.00 0.00 193.00 32.00 -32.00 -129.00 96.00 -128.00 -32.00 -32.00 32.00 -33.00 32.00 -64.00 0.00 -64.00 65.00 -32.00 32.00 -161.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 65.00 64.00 32.00 0.00 96.00 -160.00 0.00 -65.00 -32.00 0.00 -64.00 -64.00 0.00 -96.00 -97.00 -97.00 -32.00 -96.00 0.00 -32.00 161.00 -129.00 0.00 -64.00 -64.00 -65.00 -129.00 -32.00 0.00 -64.00 161.00 -97.00 0.00 -289.00 64.00 -32.00 97.00 32.00 32.00 -32.00 64.00 -97.00 32.00 -64.00 65.00 0.00 32.00 0.00 96.00 32.00 97.00 32.00 160.00 129.00 32.00 0.00 33.00 -32.00 64.00 -97.00 0.00 -64.00 64.00 -96.00 129.00 -97.00 -129.00 -225.00 0.00 -32.00 97.00 -96.00 161.00 -97.00 96.00 -161.00 32.00 -32.00 32.00 -96.00 -32.00 -33.00 0.00 -64.00 97.00 -64.00 32.00 -97.00 64.00 -32.00 32.00 -64.00 -32.00 -64.00 32.00 -225.00 418.00 32.00 161.00 0.00 804.00 0.00 2186.00 0.00 64.00 64.00 33.00 0.00 32.00 32.00 32.00 0.00 64.00 97.00 32.00 64.00 129.00 0.00 193.00 96.00 96.00 97.00 65.00 64.00 96.00 64.00 0.00 33.00 64.00 64.00 -32.00 32.00 32.00 97.00 33.00 32.00 -33.00 64.00 -32.00 32.00 0.00 32.00 0.00 33.00 32.00 64.00 65.00 32.00 64.00 129.00 -32.00 32.00 32.00 32.00 193.00 96.00 32.00 65.00 32.00 32.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 96.00 -32.00 65.00 32.00 0.00 0.00 64.00 32.00 64.00 -32.00 65.00 65.00 0.00 32.00 64.00 32.00 32.00 0.00 32.00 32.00 0.00 96.00 -96.00 65.00 -32.00 32.00 -65.00 32.00 0.00 32.00 -32.00 65.00 65.00 32.00 64.00 64.00 32.00 129.00 32.00 64.00 0.00 64.00 32.00 64.00 32.00 33.00 33.00 0.00 64.00 -33.00 64.00 -32.00 129.00 32.00 128.00 0.00 97.00 33.00 64.00 32.00 32.00 64.00 0.00 32.00 65.00 -32.00 96.00 64.00 64.00 -32.00 65.00 -64.00 96.00 0.00 32.00 32.00 32.00 225.00 161.00 32.00 0.00 33.00 -64.00 -97.00 -97.00 0.00 -64.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 128.00 32.00 65.00 64.00 128.00 0.00 64.00 0.00 33.00 97.00 32.00 64.00 0.00 64.00 -97.00 0.00 -32.00 32.00 97.00 65.00 64.00 96.00 -32.00 64.00 32.00 65.00 64.00 32.00 32.00 32.00 -32.00 64.00 0.00 33.00 129.00 321.00 129.00 32.00 128.00 -64.00 97.00 0.00 96.00 0.00 64.00 128.00 65.00 33.00 64.00 96.00 0.00 97.00 32.00 32.00 32.00 -32.00 193.00 64.00 65.00 -32.00 96.00 0.00 0.00 -65.00 96.00 0.00 97.00 -64.00 0.00 -96.00 0.00 -33.00 32.00 -32.00 -32.00 -64.00 32.00 -64.00 64.00 -65.00 0.00 -160.00 32.00 -65.00 33.00 0.00 96.00 65.00 96.00 0.00 65.00 32.00 64.00 -64.00 0.00 -33.00 64.00 -32.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 -65.00 64.00 0.00 64.00 -32.00 32.00 97.00 33.00 32.00 128.00 -32.00 97.00 32.00 32.00 32.00 64.00 32.00 32.00 32.00 -32.00 97.00 32.00 32.00 97.00 193.00 64.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 129.00 64.00 32.00 0.00 65.00 0.00 0.00 32.00 0.00 33.00 32.00 32.00 32.00 128.00 96.00 97.00 32.00 96.00 65.00 65.00 -97.00 128.00 -32.00 32.00 -128.00 258.00 -33.00 96.00 0.00 97.00 -64.00 64.00 0.00 64.00 -32.00 0.00 -32.00 97.00 0.00 64.00 0.00 64.00 0.00 65.00 64.00 96.00 32.00 32.00 32.00 97.00 33.00 32.00 0.00 64.00 0.00 32.00 -33.00 161.00 33.00 64.00 -33.00 33.00 -32.00 -33.00 -96.00 -32.00 -97.00 0.00 -64.00 32.00 -32.00 65.00 -161.00 0.00 0.00 32.00 0.00 64.00 32.00 32.00 64.00 -32.00 0.00 32.00 -32.00 97.00 32.00 64.00 -32.00 32.00 -32.00 64.00 0.00 33.00 0.00 96.00 64.00 -32.00 0.00 32.00 65.00 32.00 96.00 0.00 65.00 65.00 64.00 32.00 -64.00 32.00 64.00 96.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -97.00 96.00 32.00 32.00 0.00 33.00 32.00 32.00 33.00 32.00 193.00 96.00 -129.00 32.00 0.00 33.00 96.00 96.00 65.00 -32.00 0.00 64.00 32.00 0.00 0.00 129.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 161.00 32.00 64.00 32.00 0.00 32.00 -32.00 0.00 32.00 33.00 0.00 -33.00 32.00 -64.00 129.00 -64.00 0.00 32.00 96.00 0.00 65.00 -96.00 32.00 -33.00 64.00 -64.00 0.00 -32.00 -32.00 -129.00 64.00 32.00 33.00 65.00 0.00 128.00 64.00 0.00 96.00 -96.00 129.00 64.00 32.00 65.00 32.00 0.00 32.00 -33.00 65.00 65.00 32.00 0.00 96.00 32.00 97.00 0.00 32.00 0.00 96.00 -64.00 65.00 0.00 128.00 -33.00 32.00 33.00 33.00 0.00 32.00 -33.00 0.00 -32.00 64.00 32.00 32.00 0.00 97.00 -64.00 32.00 0.00 32.00 -64.00 161.00 -97.00 64.00 0.00 32.00 -32.00 32.00 32.00 97.00 -32.00 0.00 0.00 64.00 -32.00 64.00 0.00 65.00 -32.00 160.00 0.00 33.00 96.00 0.00 0.00 32.00 97.00 32.00 0.00 32.00 0.00 64.00 32.00 33.00 -129.00 32.00 0.00 64.00 0.00 32.00 0.00 97.00 32.00 64.00 65.00 96.00 64.00 97.00 -64.00 32.00 32.00 64.00 32.00 0.00 32.00 65.00 65.00 0.00 32.00 0.00 32.00 96.00 32.00 0.00 0.00 129.00 32.00 64.00 32.00 0.00 32.00 32.00 65.00 32.00 -32.00 32.00 0.00 33.00 32.00 0.00 32.00 0.00 -32.00 160.00 -32.00 33.00 32.00 32.00 -65.00 128.00 0.00 193.00 65.00 64.00 0.00 65.00 -65.00 64.00 33.00 97.00 -33.00 32.00 33.00 64.00 -65.00 97.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 64.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 96.00 64.00 64.00 33.00 0.00 0.00 33.00 -65.00 32.00 0.00 32.00 32.00 64.00 0.00 65.00 33.00 32.00 -33.00 96.00 33.00 65.00 -65.00 0.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 64.00 0.00 96.00 -64.00 33.00 0.00 64.00 0.00 128.00 -33.00 0.00 33.00 33.00 0.00 64.00 32.00 0.00 0.00 64.00 -32.00 97.00 0.00 64.00 -33.00 32.00 0.00 97.00 -32.00 0.00 -64.00 0.00 0.00 32.00 579.00 32.00 2025.00 0.00 2573.00 0.00 32.00 0.00 0.00 96.00 32.00 33.00 32.00 0.00 -32.00 128.00 32.00 0.00 32.00 -32.00 64.00 32.00 33.00 32.00 -33.00 97.00 33.00 0.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 96.00 65.00 32.00 -32.00 -32.00 0.00 32.00 -97.00 -32.00 -32.00 64.00 32.00 97.00 -96.00 32.00 0.00 32.00 -33.00 32.00 33.00 32.00 0.00 33.00 0.00 0.00 32.00 0.00 64.00 0.00 32.00 32.00 32.00 32.00 0.00 96.00 0.00 32.00 0.00 65.00 33.00 64.00 32.00 32.00 0.00 65.00 32.00 32.00 -64.00 32.00 0.00 96.00 -33.00 33.00 33.00 32.00 32.00 64.00 -32.00 64.00 32.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 -33.00 32.00 33.00 32.00 128.00 129.00 -32.00 32.00 -32.00 32.00 64.00 32.00 0.00 33.00 -64.00 0.00 32.00 64.00 0.00 64.00 0.00 0.00 -32.00 65.00 32.00 -33.00 97.00 -32.00 -33.00 32.00 65.00 -64.00 0.00 0.00 32.00 32.00 32.00 0.00 32.00 32.00 64.00 65.00 0.00 0.00 33.00 32.00 0.00 -32.00 32.00 -32.00 32.00 -33.00 0.00 0.00 64.00 0.00 97.00 65.00 96.00 0.00 64.00 32.00 65.00 0.00 64.00 64.00 64.00 97.00 32.00 32.00 97.00 0.00 64.00 -32.00 32.00 32.00 0.00 -32.00 33.00 32.00 96.00 0.00 64.00 0.00 32.00 -32.00 65.00 0.00 32.00 -33.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -96.00 0.00 -65.00 161.00 -64.00 32.00 -32.00 32.00 -32.00 33.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 0.00 32.00 -64.00 64.00 -64.00 97.00 0.00 32.00 -97.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 32.00 32.00 -32.00 0.00 32.00 33.00 -64.00 0.00 32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 32.00 32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 0.00 0.00 64.00 0.00 33.00 0.00 96.00 -32.00 0.00 32.00 32.00 0.00 65.00 0.00 32.00 -32.00 32.00 64.00 32.00 -32.00 32.00 32.00 97.00 0.00 64.00 33.00 0.00 0.00 32.00 0.00 32.00 -33.00 0.00 0.00 32.00 33.00 0.00 0.00 33.00 -33.00 32.00 65.00 0.00 0.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 0.00 32.00 65.00 -65.00 32.00 33.00 -32.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 64.00 32.00 65.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 64.00 96.00 32.00 0.00 32.00 33.00 -32.00 64.00 32.00 64.00 0.00 32.00 0.00 32.00 -32.00 0.00 97.00 65.00 -32.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 65.00 32.00 0.00 33.00 -32.00 64.00 -33.00 64.00 65.00 0.00 0.00 64.00 32.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 97.00 64.00 32.00 97.00 32.00 0.00 64.00 96.00 0.00 193.00 0.00 64.00 0.00 33.00 -32.00 32.00 0.00 64.00 32.00 96.00 0.00 33.00 32.00 64.00 0.00 32.00 0.00 32.00 32.00 0.00 547.00 450.00 -96.00 33.00 -65.00 64.00 0.00 32.00 -64.00 64.00 0.00 65.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -65.00 64.00 32.00 161.00 -32.00 64.00 -32.00 33.00 -64.00 32.00 -64.00 -32.00 -33.00 -33.00 -64.00 33.00 0.00 -33.00 -32.00 33.00 -32.00 0.00 -64.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 0.00 32.00 -96.00 32.00 -96.00 129.00 -129.00 32.00 -32.00 32.00 -65.00 64.00 -32.00 33.00 0.00 64.00 -32.00 96.00 -32.00 0.00 -64.00 32.00 -65.00 65.00 32.00 64.00 0.00 64.00 -64.00 97.00 0.00 129.00 -64.00 160.00 0.00 65.00 0.00 32.00 64.00 160.00 0.00 129.00 -32.00 161.00 32.00 225.00 -32.00 96.00 -96.00 97.00 -65.00 193.00 -64.00 0.00 -32.00 64.00 -32.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 -96.00 -32.00 -32.00 32.00 0.00 32.00 -33.00 32.00 -32.00 65.00 -32.00 32.00 0.00 96.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 0.00 65.00 -32.00 64.00 -32.00 0.00 -64.00 97.00 -64.00 0.00 0.00 64.00 -33.00 32.00 33.00 32.00 0.00 32.00 0.00 32.00 32.00 33.00 -32.00 64.00 64.00 32.00 -129.00 161.00 -32.00 0.00 -32.00 0.00 0.00 64.00 0.00 32.00 -64.00 97.00 0.00 64.00 -32.00 0.00 0.00 129.00 -33.00 0.00 -32.00 96.00 -64.00 0.00 0.00 32.00 0.00 65.00 -32.00 32.00 0.00 -32.00 0.00 32.00 0.00 32.00 -32.00 64.00 -33.00 0.00 33.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 -33.00 0.00 0.00 32.00 -32.00 0.00 0.00 97.00 65.00 64.00 -65.00 32.00 0.00 33.00 0.00 96.00 -32.00 64.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -97.00 97.00 0.00 32.00 -128.00 32.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 -32.00 -96.00 32.00 -129.00 97.00 0.00 96.00 -64.00 0.00 0.00 32.00 -33.00 0.00 -32.00 33.00 -96.00 64.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -64.00 -32.00 -96.00 32.00 0.00 32.00 -33.00 32.00 0.00 32.00 0.00 33.00 -32.00 -33.00 -32.00 65.00 -64.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -65.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00 0.00 32.00 32.00 32.00 -32.00 32.00 -129.00 -64.00 -64.00 32.00 -64.00 -32.00 0.00 -97.00 -33.00 0.00 -64.00 -32.00 -96.00 -32.00 -33.00 -64.00 -64.00 -33.00 -64.00 0.00 -161.00 -64.00 -32.00 -64.00 -129.00 -97.00 -32.00 -64.00 -32.00 -64.00 32.00 -65.00 -32.00 -32.00 -32.00 0.00 -97.00 65.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -97.00 33.00 -32.00 -129.00 32.00 0.00 32.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 32.00 -33.00 32.00 33.00 33.00 -33.00 -129.00 -64.00 -64.00 32.00 -65.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 97.00 32.00 -33.00 33.00 -64.00 32.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 0.00 65.00 -32.00 64.00 0.00 32.00 -32.00 32.00 -97.00 -64.00 -64.00 64.00 32.00 -96.00 -32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 -65.00 0.00 0.00 -32.00 -32.00 64.00 32.00 32.00 -64.00 64.00 -64.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 -32.00 0.00 -65.00 0.00 -64.00 33.00 -32.00 -33.00 0.00 -64.00 -64.00 -32.00 -33.00 0.00 33.00 96.00 -65.00 33.00 -128.00 0.00 0.00 64.00 -65.00 0.00 -160.00 0.00 -97.00 32.00 32.00 64.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -193.00 65.00 -97.00 -65.00 -96.00 0.00 -64.00 -32.00 -65.00 -32.00 0.00 -32.00 -96.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 -97.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -64.00 0.00 -65.00 65.00 -32.00 0.00 0.00 -65.00 -32.00 0.00 0.00 65.00 -32.00 0.00 -64.00 -32.00 0.00 64.00 -32.00 0.00 -97.00 -32.00 0.00 -32.00 -64.00 32.00 -64.00 -65.00 32.00 33.00 -65.00 32.00 -96.00 64.00 -32.00 -32.00 0.00 32.00 -65.00 0.00 -32.00 -32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -32.00 0.00 0.00 -96.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -96.00 -32.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -65.00 32.00 -32.00 65.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 -64.00 -32.00 0.00 -96.00 -65.00 -65.00 0.00 -96.00 0.00 -97.00 -64.00 -128.00 0.00 -32.00 -64.00 32.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 -64.00 -65.00 -32.00 32.00 -32.00 -32.00 -65.00 0.00 33.00 -64.00 -33.00 -32.00 -32.00 0.00 32.00 -65.00 -32.00 -32.00 -96.00 -32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -65.00 -96.00 0.00 -129.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 -64.00 -97.00 -65.00 0.00 0.00 -129.00 -64.00 33.00 -64.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 -65.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 -96.00 -32.00 -32.00 -32.00 -161.00 32.00 -64.00 -32.00 -33.00 -32.00 -32.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 -65.00 -32.00 -32.00 -32.00 -32.00 0.00 -97.00 -64.00 0.00 0.00 65.00 0.00 32.00 0.00 32.00 -33.00 64.00 -64.00 -32.00 0.00 -128.00 -64.00 -65.00 -32.00 0.00 -32.00 65.00 -33.00 -33.00 -32.00 0.00 -32.00 129.00 -64.00 0.00 0.00 32.00 -64.00 -32.00 32.00 64.00 -32.00 0.00 -65.00 -64.00 -32.00 32.00 -32.00 -64.00 -64.00 0.00 -33.00 64.00 -32.00 -64.00 -64.00 64.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 32.00 -64.00 -64.00 -32.00 32.00 -32.00 -32.00 0.00 -65.00 0.00 -32.00 -65.00 97.00 -32.00 -65.00 -64.00 -64.00 0.00 -96.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -33.00 -32.00 33.00 -65.00 0.00 -32.00 -33.00 0.00 -32.00 65.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 -32.00 32.00 32.00 65.00 -97.00 32.00 -96.00 -97.00 -64.00 32.00 -65.00 0.00 -64.00 -32.00 -257.00 -128.00 0.00 -65.00 64.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -33.00 -32.00 33.00 -64.00 0.00 -32.00 -33.00 0.00 -64.00 0.00 32.00 -97.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 -65.00 65.00 -96.00 0.00 0.00 64.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 64.00 0.00 32.00 0.00 32.00 -64.00 -64.00 0.00 -64.00 -32.00 0.00 -32.00 96.00 -97.00 -32.00 -64.00 -96.00 -64.00 -129.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 -97.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 33.00 -64.00 -65.00 -64.00 -32.00 0.00 -64.00 -129.00 -64.00 -32.00 0.00 -96.00 -65.00 -33.00 -64.00 -64.00 -64.00 0.00 -33.00 32.00 0.00 32.00 -32.00 33.00 0.00 -65.00 -64.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 -129.00 -32.00 -32.00 -64.00 32.00 -97.00 -64.00 0.00 0.00 -96.00 -65.00 -32.00 -64.00 -193.00 -32.00 -65.00 -64.00 0.00 -65.00 -32.00 32.00 -96.00 65.00 -32.00 0.00 -32.00 -32.00 -33.00 -33.00 0.00 -96.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -64.00 0.00 -64.00 0.00 -33.00 0.00 0.00 -65.00 -64.00 33.00 0.00 -33.00 0.00 -32.00 -64.00 0.00 0.00 -96.00 -32.00 0.00 -33.00 32.00 33.00 64.00 -65.00 32.00 -64.00 -64.00 -32.00 -32.00 -32.00 32.00 32.00 64.00 0.00 33.00 -32.00 32.00 -97.00 0.00 -32.00 32.00 -96.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 33.00 -64.00 0.00 -33.00 -33.00 -32.00 0.00 -160.00 0.00 -161.00 -64.00 -97.00 -64.00 -96.00 32.00 -32.00 -32.00 -129.00 -97.00 -32.00 -128.00 -64.00 -33.00 -33.00 33.00 -32.00 -33.00 -32.00 -32.00 97.00 0.00 -65.00 -64.00 0.00 -96.00 -160.00 0.00 -161.00 0.00 -129.00 -97.00 -96.00 -193.00 -97.00 -32.00 -96.00 -32.00 -97.00 -32.00 -32.00 -65.00 -161.00 -64.00 -96.00 32.00 -64.00 -64.00 -226.00 -64.00 -128.00 0.00 -97.00 -65.00 -32.00 32.00 -64.00 65.00 -32.00 32.00 -32.00 -32.00 -65.00 96.00 -96.00 -32.00 -96.00 -64.00 -65.00 0.00 -32.00 32.00 0.00 64.00 -32.00 97.00 0.00 64.00 0.00 32.00 -32.00 32.00 -65.00 0.00 -96.00 65.00 -97.00 32.00 -32.00 -32.00 -128.00 -97.00 -32.00 0.00 0.00 32.00 -33.00 33.00 -64.00 -65.00 -64.00 65.00 -32.00 0.00 -32.00 -97.00 -65.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -33.00 0.00 -32.00 32.00 -64.00 64.00 -32.00 0.00 0.00 -96.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 128.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 0.00 -129.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 -64.00 -96.00 129.00 -97.00 32.00 -32.00 64.00 -32.00 32.00 -32.00 -32.00 -32.00 -32.00 32.00 -97.00 0.00 -64.00 -161.00 0.00 -96.00 0.00 -257.00 -32.00 -65.00 -64.00 -32.00 -33.00 -129.00 -128.00 -64.00 -97.00 -64.00 -32.00 -129.00 -64.00 -32.00 -96.00 0.00 -33.00 32.00 -64.00 32.00 -161.00 0.00 -161.00 -32.00 -160.00 -32.00 -32.00 -64.00 32.00 -129.00 64.00 -32.00 0.00 -64.00 -96.00 -32.00 -33.00 -65.00 0.00 -128.00 0.00 -258.00 -96.00 -128.00 -32.00 -65.00 -64.00 -32.00 -161.00 32.00 -97.00 65.00 -96.00 0.00 -32.00 -65.00 -65.00 -32.00 33.00 -96.00 32.00 32.00 96.00 0.00 97.00 -32.00 96.00 -64.00 0.00 -33.00 0.00 -32.00 -64.00 65.00 -161.00 -33.00 -32.00 -32.00 -32.00 -96.00 -65.00 -65.00 0.00 -32.00 65.00 -96.00 128.00 -32.00 0.00 -32.00 -64.00 0.00 -64.00 64.00 -97.00 64.00 -32.00 32.00 -64.00 -32.00 -65.00 -64.00 -128.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 -128.00 0.00 -161.00 96.00 -64.00 -64.00 -65.00 -97.00 -32.00 -32.00 -64.00 32.00 -32.00 97.00 -33.00 0.00 -32.00 0.00 -64.00 -129.00 -32.00 0.00 -97.00 32.00 -32.00 0.00 0.00 -64.00 32.00 -64.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 64.00 -97.00 65.00 -225.00 -32.00 -32.00 -65.00 -32.00 -128.00 0.00 -65.00 -97.00 0.00 -32.00 65.00 -161.00 0.00 -160.00 -97.00 -290.00 0.00 -64.00 -32.00 -64.00 -64.00 0.00 -129.00 64.00 -257.00 0.00 -32.00 32.00 64.00 64.00 0.00 33.00 0.00 32.00 -64.00 0.00 -193.00 -97.00 -129.00 -96.00 -32.00 -32.00 32.00 -32.00 129.00 -129.00 64.00 -129.00 0.00 -32.00 -64.00 -128.00 0.00 -33.00 32.00 -64.00 -64.00 -64.00 0.00 -65.00 96.00 -96.00 32.00 -96.00 -32.00 -33.00 -32.00 -32.00 -161.00 0.00 -193.00 -64.00 -32.00 0.00 -32.00 -64.00 -64.00 -354.00 0.00 -161.00 -65.00 -161.00 32.00 -64.00 161.00 -32.00 32.00 -32.00 -32.00 -65.00 -193.00 0.00 -32.00 -32.00 -64.00 -257.00 0.00 -161.00 32.00 -32.00 129.00 -32.00 32.00 -32.00 -32.00 -64.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -64.00 -193.00 0.00 -65.00 64.00 -64.00 96.00 -96.00 226.00 -65.00 32.00 -64.00 -32.00 -64.00 -65.00 -129.00 -32.00 -32.00 161.00 -129.00 96.00 -64.00 0.00 -32.00 -96.00 -97.00 -32.00 -96.00 -32.00 -97.00 0.00 -32.00 96.00 32.00 -64.00 -257.00 -193.00 -257.00 -97.00 -64.00 -64.00 0.00 -64.00 -32.00 0.00 -97.00 64.00 0.00 32.00 -96.00 -32.00 -97.00 32.00 -129.00 0.00 -96.00 -32.00 -96.00 -32.00 -97.00 -97.00 -32.00 -96.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -128.00 -64.00 -97.00 32.00 -128.00 -65.00 -65.00 -32.00 -64.00 32.00 -96.00 97.00 0.00 64.00 -65.00 64.00 -96.00 0.00 -161.00 -64.00 -128.00 64.00 -97.00 65.00 -32.00 96.00 -129.00 97.00 -96.00 64.00 -193.00 32.00 -32.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 -129.00 0.00 -96.00 32.00 -129.00 -32.00 -193.00 -64.00 -64.00 -32.00 -129.00 -33.00 -64.00 65.00 -225.00 -32.00 -129.00 -33.00 -64.00 0.00 -96.00 0.00 -65.00 33.00 -128.00 160.00 -161.00 33.00 -129.00 -33.00 -64.00 -128.00 -96.00 -65.00 -161.00 -64.00 -129.00 -32.00 -128.00 -64.00 -65.00 -129.00 -128.00 -257.00 -97.00 0.00 32.00 32.00 32.00 0.00 33.00 -32.00 64.00 -129.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 32.00 65.00 -96.00 32.00 0.00 160.00 0.00 65.00 0.00 32.00 -65.00 32.00 -96.00 -64.00 -32.00 128.00 -65.00 0.00 -32.00 33.00 0.00 32.00 32.00 96.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -128.00 32.00 0.00 -96.00 -33.00 0.00 -64.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 -129.00 -32.00 0.00 -33.00 65.00 0.00 -32.00 -32.00 -33.00 65.00 -64.00 -33.00 0.00 -32.00 0.00 -64.00 -64.00 -97.00 96.00 0.00 65.00 -96.00 -33.00 64.00 -96.00 -64.00 -64.00 0.00 -33.00 32.00 0.00 64.00 0.00 32.00 0.00 33.00 -32.00 -33.00 0.00 0.00 -64.00 -64.00 32.00 -32.00 32.00 -64.00 0.00 -65.00 0.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -64.00 -65.00 -64.00 -32.00 32.00 -64.00 0.00 -64.00 -65.00 32.00 0.00 32.00 33.00 96.00 -33.00 33.00 -32.00 64.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 64.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 64.00 -65.00 0.00 0.00 65.00 -32.00 32.00 0.00 32.00 -96.00 0.00 -65.00 0.00 32.00 -64.00 0.00 -32.00 33.00 -33.00 -33.00 -32.00 -32.00 -32.00 -64.00 0.00 -64.00 32.00 0.00 32.00 -65.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 33.00 0.00 -33.00 -32.00 -32.00 -65.00 32.00 -64.00 33.00 -32.00 128.00 64.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 65.00 -32.00 -33.00 -32.00 0.00 0.00 -64.00 -97.00 97.00 -32.00 0.00 -64.00 -129.00 -161.00 0.00 -65.00 32.00 33.00 32.00 -33.00 0.00 -32.00 65.00 -32.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -64.00 0.00 0.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -96.00 32.00 0.00 64.00 -97.00 0.00 0.00 33.00 32.00 64.00 -32.00 -32.00 -32.00 32.00 32.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 -32.00 -96.00 -64.00 0.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 -33.00 0.00 -64.00 32.00 0.00 -64.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -128.00 0.00 -33.00 32.00 0.00 32.00 0.00 65.00 -128.00 32.00 -97.00 -32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 64.00 0.00 -64.00 0.00 -32.00 -33.00 32.00 -96.00 -64.00 -32.00 -33.00 32.00 -64.00 0.00 32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 0.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -97.00 -32.00 0.00 64.00 -64.00 -32.00 -32.00 0.00 32.00 32.00 -32.00 33.00 -33.00 -33.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -161.00 -33.00 -868.00 -385.00z\"\n          },\n          ac: {\n            name: \"AC\",\n            path: \"M6610.00 62120.00l290.00 160.00 1961.00 869.00 2186.00 996.00 836.00 418.00 161.00 65.00 2219.00 450.00 64.00 32.00 707.00 225.00 97.00 32.00 96.00 0.00 1962.00 482.00 289.00 65.00 1254.00 289.00 1447.00 354.00 1736.00 353.00 515.00 129.00 450.00 97.00 353.00 225.00 772.00 418.00 1769.00 964.00 964.00 547.00 547.00 289.00 1222.00 643.00 900.00 450.00 965.00 547.00 160.00 64.00 129.00 65.00 514.00 225.00 2058.00 900.00 1158.00 514.00 2893.00 1254.00 772.00 322.00 129.00 96.00 160.00 33.00 193.00 96.00 1222.00 515.00 868.00 385.00 -32.00 33.00 0.00 64.00 -32.00 0.00 32.00 64.00 -32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 -32.00 -32.00 -33.00 0.00 33.00 0.00 -33.00 -65.00 33.00 32.00 32.00 -32.00 64.00 -32.00 -32.00 0.00 64.00 -96.00 0.00 -97.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 33.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 64.00 -32.00 -32.00 -64.00 32.00 0.00 33.00 -65.00 32.00 0.00 32.00 0.00 32.00 -64.00 0.00 -32.00 64.00 -64.00 0.00 0.00 33.00 0.00 64.00 -65.00 32.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 32.00 64.00 0.00 32.00 -32.00 -32.00 -33.00 64.00 0.00 -32.00 0.00 65.00 -32.00 -33.00 -32.00 33.00 0.00 32.00 0.00 32.00 -64.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 32.00 32.00 0.00 32.00 -65.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 128.00 -32.00 32.00 0.00 -64.00 -32.00 64.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -64.00 65.00 0.00 -32.00 0.00 64.00 -32.00 32.00 64.00 0.00 -32.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -129.00 65.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 32.00 0.00 64.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -64.00 33.00 -32.00 32.00 -64.00 0.00 -65.00 -65.00 -96.00 0.00 -32.00 -32.00 -65.00 0.00 -32.00 32.00 -96.00 33.00 -32.00 -33.00 -65.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 32.00 -33.00 33.00 65.00 64.00 -32.00 64.00 32.00 65.00 0.00 32.00 -32.00 0.00 -33.00 32.00 -64.00 -32.00 -64.00 0.00 0.00 64.00 -64.00 -64.00 -65.00 32.00 -64.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 96.00 33.00 64.00 0.00 129.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -32.00 33.00 -129.00 32.00 -32.00 32.00 -64.00 32.00 -65.00 -32.00 -64.00 32.00 0.00 64.00 -96.00 0.00 -32.00 0.00 -65.00 32.00 -96.00 33.00 -32.00 32.00 -97.00 160.00 -32.00 97.00 -96.00 96.00 -33.00 65.00 -96.00 96.00 -97.00 -64.00 -128.00 546.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -65.00 -64.00 0.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 0.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 64.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 0.00 32.00 -65.00 -32.00 -96.00 64.00 -65.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 0.00 0.00 64.00 -32.00 0.00 -64.00 0.00 -64.00 33.00 0.00 64.00 -32.00 -32.00 -33.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 65.00 0.00 32.00 0.00 64.00 32.00 0.00 32.00 32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -64.00 32.00 -33.00 65.00 -64.00 32.00 0.00 32.00 -64.00 32.00 -65.00 96.00 -32.00 0.00 -32.00 97.00 -64.00 0.00 -32.00 96.00 -32.00 0.00 32.00 32.00 -32.00 97.00 -65.00 32.00 -32.00 64.00 0.00 33.00 0.00 64.00 -32.00 64.00 -64.00 32.00 -33.00 33.00 -64.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 -97.00 0.00 -32.00 32.00 -32.00 64.00 -32.00 33.00 -65.00 -65.00 -32.00 0.00 -160.00 65.00 -33.00 64.00 33.00 32.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 -64.00 -64.00 64.00 -193.00 32.00 -96.00 65.00 0.00 64.00 -65.00 64.00 -96.00 65.00 0.00 32.00 -322.00 64.00 -514.00 129.00 32.00 -97.00 -64.00 -64.00 32.00 -64.00 -64.00 -33.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 32.00 -64.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 0.00 -32.00 33.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 65.00 0.00 -65.00 -65.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 32.00 -64.00 0.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 -64.00 32.00 0.00 65.00 -32.00 0.00 -33.00 -33.00 -32.00 0.00 -32.00 33.00 32.00 0.00 0.00 -33.00 32.00 65.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 0.00 -64.00 65.00 -65.00 -32.00 -64.00 -65.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 -33.00 0.00 -64.00 32.00 -32.00 0.00 32.00 64.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -64.00 32.00 -32.00 -97.00 -32.00 65.00 -32.00 -32.00 -65.00 32.00 -64.00 -32.00 -32.00 64.00 -32.00 -64.00 -64.00 0.00 0.00 -33.00 -33.00 33.00 -32.00 0.00 32.00 -33.00 -32.00 0.00 0.00 -32.00 -64.00 32.00 -64.00 -32.00 -33.00 -32.00 -64.00 0.00 -64.00 32.00 -32.00 -32.00 -65.00 -64.00 -32.00 64.00 -64.00 -32.00 32.00 0.00 0.00 -32.00 -96.00 32.00 -33.00 32.00 33.00 0.00 -33.00 32.00 -32.00 -64.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -97.00 -32.00 0.00 -32.00 -32.00 64.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 0.00 32.00 -65.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -33.00 -64.00 -32.00 32.00 -32.00 -65.00 -32.00 0.00 -32.00 65.00 -97.00 0.00 0.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 0.00 -64.00 -32.00 32.00 -64.00 -32.00 -96.00 0.00 0.00 64.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 -161.00 -32.00 0.00 32.00 0.00 32.00 -64.00 -32.00 -64.00 0.00 0.00 64.00 -32.00 -32.00 -65.00 32.00 -128.00 -32.00 -32.00 64.00 -33.00 -32.00 -64.00 32.00 -32.00 33.00 -32.00 -33.00 -64.00 65.00 -33.00 -65.00 -64.00 65.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 -64.00 -33.00 0.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 -65.00 0.00 0.00 33.00 -96.00 0.00 -32.00 0.00 -65.00 -33.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 -97.00 -32.00 -64.00 32.00 -32.00 33.00 -32.00 -33.00 -32.00 0.00 -97.00 0.00 0.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -33.00 -32.00 -32.00 64.00 -32.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 33.00 -65.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 64.00 -32.00 0.00 32.00 -32.00 -64.00 32.00 0.00 64.00 0.00 -32.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -64.00 32.00 0.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 0.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 -33.00 -32.00 0.00 -33.00 33.00 -96.00 32.00 -64.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 -33.00 -96.00 33.00 -33.00 -33.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 -64.00 -129.00 -97.00 -64.00 -32.00 -96.00 -64.00 -33.00 -32.00 0.00 -32.00 -64.00 -65.00 0.00 0.00 -32.00 -64.00 -32.00 -418.00 289.00 -32.00 -1383.00 0.00 -1221.00 0.00 -483.00 0.00 -1414.00 32.00 -547.00 0.00 -675.00 0.00 -32.00 32.00 -97.00 65.00 0.00 32.00 32.00 32.00 -96.00 32.00 -32.00 96.00 32.00 65.00 -32.00 32.00 -65.00 0.00 -96.00 32.00 0.00 0.00 -64.00 32.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 0.00 -64.00 -161.00 -32.00 0.00 0.00 -64.00 -65.00 0.00 -64.00 -64.00 32.00 -32.00 -64.00 -32.00 -64.00 -161.00 32.00 -32.00 32.00 -65.00 -32.00 0.00 32.00 -32.00 0.00 -64.00 -64.00 -32.00 0.00 -32.00 64.00 -33.00 -32.00 97.00 32.00 0.00 32.00 -32.00 64.00 64.00 32.00 0.00 33.00 -32.00 -33.00 -64.00 -64.00 0.00 0.00 -33.00 32.00 -32.00 -32.00 -64.00 32.00 0.00 32.00 32.00 65.00 0.00 32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -97.00 64.00 33.00 0.00 -65.00 32.00 0.00 65.00 -64.00 32.00 64.00 0.00 -32.00 -65.00 -96.00 -32.00 -65.00 32.00 -32.00 33.00 32.00 32.00 0.00 -32.00 -96.00 32.00 0.00 32.00 0.00 32.00 -97.00 -32.00 33.00 -32.00 -33.00 -65.00 33.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 -32.00 -33.00 -32.00 65.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -64.00 32.00 -32.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 0.00 0.00 65.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -65.00 -32.00 33.00 32.00 -65.00 0.00 0.00 32.00 0.00 33.00 0.00 -33.00 -32.00 33.00 32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -65.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 32.00 0.00 0.00 32.00 -32.00 32.00 -65.00 -64.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -97.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 33.00 -64.00 0.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 64.00 -64.00 32.00 0.00 -32.00 -97.00 64.00 -64.00 64.00 0.00 33.00 -32.00 0.00 -32.00 128.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 64.00 -128.00 0.00 0.00 32.00 0.00 -32.00 -33.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 -64.00 161.00 -32.00 -32.00 0.00 96.00 0.00 33.00 0.00 32.00 -129.00 0.00 -64.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 -97.00 64.00 -161.00 65.00 -96.00 64.00 -32.00 32.00 -33.00 32.00 -32.00 129.00 -32.00 32.00 -32.00 64.00 -64.00 65.00 0.00 96.00 -97.00 0.00 -96.00 -32.00 -32.00 0.00 0.00 64.00 -65.00 0.00 -192.00 65.00 -33.00 0.00 -96.00 -97.00 -65.00 32.00 0.00 65.00 -32.00 0.00 -32.00 -33.00 -64.00 97.00 -1318.00 0.00 -2573.00 0.00 0.00 -64.00 97.00 -33.00 32.00 -64.00 0.00 -64.00 0.00 -64.00 -64.00 -33.00 -32.00 -32.00 32.00 -64.00 64.00 -32.00 32.00 -97.00 64.00 -32.00 -32.00 -32.00 -64.00 -64.00 0.00 -129.00 -32.00 -32.00 0.00 -32.00 96.00 -97.00 65.00 -32.00 -129.00 -64.00 -129.00 -64.00 -64.00 0.00 -64.00 -33.00 -32.00 -32.00 -33.00 32.00 -64.00 -64.00 -64.00 0.00 0.00 -32.00 32.00 -96.00 0.00 -65.00 32.00 -96.00 0.00 -97.00 32.00 -64.00 -64.00 -96.00 32.00 -129.00 -32.00 0.00 -32.00 0.00 -97.00 -64.00 33.00 -290.00 -65.00 -32.00 -96.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -64.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -65.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -97.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -128.00 32.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 -65.00 -33.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -322.00 0.00 -1864.00 0.00 64.00 -64.00 32.00 -129.00 0.00 -32.00 64.00 -32.00 97.00 -32.00 32.00 -65.00 64.00 -32.00 32.00 -96.00 129.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -32.00 96.00 -32.00 97.00 -161.00 96.00 -64.00 32.00 64.00 32.00 0.00 97.00 -64.00 0.00 -32.00 64.00 -32.00 32.00 -33.00 32.00 -32.00 0.00 -32.00 -96.00 -32.00 -32.00 -32.00 96.00 -65.00 129.00 -64.00 64.00 -64.00 64.00 -161.00 0.00 -128.00 33.00 -65.00 -33.00 -64.00 0.00 -129.00 -32.00 -64.00 0.00 -32.00 32.00 -32.00 33.00 -65.00 -129.00 -32.00 -96.00 -289.00 -97.00 -32.00 -64.00 0.00 0.00 -129.00 -32.00 97.00 -32.00 32.00 -65.00 -65.00 -32.00 -128.00 0.00 -65.00 -32.00 -32.00 0.00 -96.00 -64.00 0.00 -65.00 -97.00 0.00 -128.00 -96.00 -97.00 -32.00 -193.00 -33.00 -96.00 -64.00 -32.00 -64.00 -97.00 -64.00 0.00 -97.00 -32.00 -64.00 32.00 -64.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -64.00 -65.00 0.00 -96.00 -32.00 -32.00 -33.00 32.00 0.00 -64.00 -32.00 -32.00 -64.00 32.00 -32.00 -129.00 32.00 -32.00 32.00 -129.00 -64.00 -257.00 -65.00 -161.00 -96.00 0.00 -32.00 -32.00 -65.00 0.00 -96.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 32.00 -65.00 -96.00 -32.00 -129.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 -64.00 -129.00 -33.00 -32.00 0.00 0.00 -64.00 -64.00 0.00 -64.00 -32.00 -97.00 -129.00 32.00 -160.00 -64.00 -65.00 32.00 -128.00 -64.00 -97.00 -32.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 -97.00 -64.00 -32.00 32.00 -96.00 0.00 -65.00 -32.00 -128.00 32.00 -97.00 -32.00 -128.00 -64.00 -65.00 -65.00 -96.00 -64.00 -32.00 32.00 -97.00 0.00 -96.00 -96.00 -97.00 -97.00 33.00 -64.00 0.00 -32.00 -161.00 -65.00 -65.00 -96.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 -33.00 -33.00 -32.00 0.00 -96.00 -32.00 -64.00 -96.00 -97.00 32.00 -32.00 64.00 0.00 -64.00 -129.00 32.00 -64.00 32.00 0.00 65.00 96.00 128.00 0.00 32.00 0.00 65.00 -96.00 32.00 -64.00 0.00 -97.00 32.00 -161.00 -32.00 -96.00 -65.00 -32.00 -160.00 -97.00 -32.00 -32.00 -225.00 -64.00 -129.00 0.00 -32.00 -32.00 -65.00 -97.00 -32.00 -96.00 -96.00 0.00 -97.00 -97.00 -32.00 -128.00 -96.00 -32.00 -97.00 -97.00 -193.00 -193.00 -64.00 0.00 -32.00 -161.00 32.00 0.00 64.00 0.00 97.00 -32.00 96.00 -160.00 0.00 -65.00 65.00 -64.00 -65.00 -64.00 0.00 -161.00 -64.00 -64.00 -96.00 -225.00 0.00 -65.00 32.00 -32.00 32.00 32.00 32.00 65.00 32.00 -33.00 32.00 0.00 97.00 97.00 193.00 32.00 32.00 -64.00 32.00 -97.00 129.00 -64.00 64.00 0.00 96.00 32.00 129.00 -64.00 32.00 0.00 0.00 32.00 0.00 64.00 32.00 0.00 161.00 -96.00 96.00 -129.00 0.00 -32.00 -64.00 -129.00 0.00 -160.00 -64.00 -65.00 -97.00 -64.00 -32.00 -32.00 -32.00 -161.00 -64.00 -64.00 -32.00 -65.00 -65.00 -64.00 0.00 -32.00 -32.00 -64.00z\"\n          },\n          am: {\n            name: \"AM\",\n            path: \"M6610.00 62120.00l32.00 -33.00 97.00 -96.00 161.00 -193.00 64.00 -128.00 0.00 -65.00 -64.00 -32.00 0.00 -96.00 0.00 -65.00 -65.00 -128.00 0.00 -33.00 65.00 -128.00 96.00 -97.00 32.00 -96.00 0.00 -32.00 32.00 -97.00 32.00 0.00 33.00 -32.00 64.00 -96.00 64.00 -32.00 97.00 -161.00 32.00 -65.00 129.00 -96.00 32.00 -32.00 96.00 -64.00 32.00 0.00 97.00 0.00 32.00 -97.00 161.00 -128.00 96.00 -33.00 64.00 0.00 33.00 -32.00 96.00 0.00 97.00 -64.00 32.00 0.00 64.00 -32.00 64.00 0.00 97.00 -32.00 0.00 -97.00 32.00 -32.00 64.00 -32.00 32.00 -64.00 65.00 0.00 32.00 32.00 32.00 -32.00 64.00 0.00 65.00 0.00 96.00 -33.00 161.00 0.00 64.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 32.00 33.00 32.00 64.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 33.00 32.00 32.00 0.00 64.00 -96.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 32.00 -96.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 -33.00 -96.00 33.00 -32.00 32.00 0.00 0.00 -65.00 -32.00 -64.00 -65.00 -32.00 -32.00 -129.00 -32.00 -32.00 -32.00 -161.00 -32.00 32.00 0.00 -64.00 -32.00 -64.00 0.00 -64.00 0.00 -33.00 0.00 -32.00 -97.00 -96.00 -32.00 0.00 -32.00 -97.00 -64.00 -32.00 -33.00 -32.00 0.00 -64.00 0.00 -33.00 0.00 -128.00 -160.00 -161.00 0.00 -64.00 0.00 -129.00 96.00 -96.00 -32.00 -32.00 32.00 -33.00 -32.00 -192.00 32.00 0.00 64.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 32.00 -128.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -64.00 32.00 32.00 0.00 -64.00 0.00 -32.00 0.00 -65.00 65.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 0.00 97.00 -33.00 0.00 -128.00 32.00 -32.00 64.00 0.00 0.00 -33.00 97.00 -32.00 64.00 -96.00 32.00 0.00 0.00 -97.00 32.00 0.00 32.00 -96.00 33.00 0.00 64.00 -32.00 0.00 -65.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 32.00 32.00 -32.00 -32.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 32.00 -97.00 64.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -33.00 0.00 -96.00 -32.00 -64.00 0.00 -129.00 0.00 -32.00 32.00 -129.00 32.00 -64.00 -32.00 -32.00 65.00 -32.00 32.00 -97.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 0.00 -65.00 64.00 -32.00 0.00 -32.00 33.00 -96.00 0.00 -65.00 64.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -97.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -64.00 -96.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 32.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -64.00 64.00 0.00 0.00 32.00 96.00 -32.00 32.00 -32.00 33.00 -129.00 64.00 32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 33.00 32.00 32.00 -32.00 32.00 -65.00 64.00 33.00 0.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 65.00 0.00 0.00 -32.00 64.00 0.00 0.00 -32.00 96.00 64.00 65.00 -32.00 32.00 0.00 64.00 32.00 32.00 -64.00 32.00 0.00 0.00 32.00 65.00 -32.00 96.00 -65.00 0.00 -96.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 64.00 -32.00 33.00 -32.00 64.00 0.00 32.00 -32.00 97.00 -96.00 32.00 0.00 64.00 0.00 32.00 -97.00 64.00 0.00 0.00 64.00 33.00 0.00 32.00 -64.00 32.00 32.00 0.00 32.00 32.00 0.00 0.00 -32.00 0.00 -64.00 97.00 -32.00 0.00 -65.00 -33.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 64.00 32.00 -32.00 32.00 64.00 32.00 0.00 0.00 -64.00 64.00 0.00 0.00 -64.00 -32.00 -32.00 32.00 0.00 33.00 32.00 64.00 -64.00 64.00 0.00 0.00 -97.00 0.00 -32.00 0.00 -64.00 32.00 -33.00 33.00 -96.00 96.00 0.00 64.00 -64.00 65.00 0.00 0.00 -32.00 -33.00 -33.00 33.00 0.00 64.00 0.00 32.00 -32.00 129.00 32.00 -32.00 33.00 0.00 64.00 64.00 -32.00 64.00 -129.00 32.00 64.00 65.00 -32.00 96.00 -32.00 0.00 -64.00 32.00 -32.00 65.00 64.00 32.00 -32.00 -32.00 -32.00 128.00 -65.00 32.00 0.00 0.00 -32.00 65.00 -32.00 32.00 -32.00 64.00 32.00 129.00 -96.00 32.00 -65.00 64.00 -32.00 -32.00 -32.00 96.00 -97.00 97.00 -32.00 32.00 -64.00 0.00 -64.00 97.00 32.00 32.00 32.00 32.00 32.00 0.00 -64.00 0.00 -32.00 96.00 0.00 32.00 -65.00 33.00 -32.00 32.00 32.00 96.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 33.00 0.00 0.00 -32.00 -33.00 -64.00 97.00 -32.00 0.00 64.00 32.00 -32.00 0.00 -64.00 32.00 32.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 64.00 32.00 64.00 -64.00 65.00 -32.00 128.00 -32.00 64.00 -32.00 65.00 0.00 32.00 -33.00 32.00 65.00 0.00 32.00 64.00 0.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 64.00 0.00 65.00 64.00 0.00 64.00 64.00 33.00 0.00 64.00 -32.00 96.00 32.00 65.00 -64.00 32.00 64.00 128.00 -96.00 -32.00 -33.00 32.00 -32.00 33.00 -32.00 0.00 32.00 0.00 32.00 -33.00 97.00 -64.00 32.00 0.00 32.00 64.00 32.00 33.00 33.00 64.00 0.00 96.00 -65.00 65.00 -64.00 64.00 -129.00 64.00 32.00 0.00 -64.00 32.00 -32.00 65.00 32.00 96.00 64.00 32.00 0.00 0.00 -32.00 -64.00 -64.00 0.00 -96.00 64.00 32.00 33.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 64.00 0.00 64.00 65.00 33.00 0.00 32.00 32.00 0.00 32.00 64.00 0.00 96.00 -129.00 65.00 -64.00 64.00 64.00 64.00 -32.00 32.00 -32.00 33.00 32.00 0.00 65.00 32.00 0.00 96.00 0.00 33.00 32.00 0.00 32.00 32.00 -32.00 0.00 -65.00 -65.00 -32.00 -32.00 -64.00 65.00 0.00 64.00 96.00 64.00 33.00 64.00 -65.00 33.00 -32.00 -33.00 -128.00 -32.00 -65.00 32.00 0.00 97.00 32.00 64.00 -32.00 32.00 0.00 0.00 97.00 32.00 0.00 33.00 -129.00 32.00 0.00 32.00 32.00 -32.00 65.00 32.00 128.00 64.00 -64.00 0.00 -64.00 32.00 -33.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 65.00 64.00 -32.00 -32.00 -65.00 96.00 0.00 97.00 129.00 32.00 -64.00 0.00 -65.00 32.00 -32.00 65.00 -32.00 32.00 32.00 -32.00 64.00 32.00 33.00 96.00 -65.00 0.00 -64.00 64.00 0.00 -32.00 96.00 65.00 33.00 32.00 0.00 32.00 -65.00 64.00 0.00 32.00 0.00 65.00 0.00 32.00 -64.00 -32.00 -64.00 -33.00 -33.00 0.00 -32.00 65.00 32.00 32.00 33.00 32.00 64.00 97.00 32.00 32.00 32.00 32.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -33.00 33.00 -96.00 64.00 -32.00 96.00 -32.00 -32.00 -97.00 32.00 -32.00 129.00 -64.00 -64.00 -97.00 -33.00 -64.00 65.00 0.00 64.00 32.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 32.00 -96.00 33.00 -32.00 32.00 -65.00 96.00 33.00 65.00 -97.00 32.00 -32.00 32.00 0.00 64.00 0.00 97.00 96.00 96.00 33.00 32.00 0.00 32.00 64.00 65.00 0.00 32.00 -64.00 0.00 -97.00 0.00 -128.00 32.00 32.00 32.00 32.00 32.00 64.00 0.00 -193.00 97.00 0.00 32.00 0.00 0.00 65.00 -64.00 128.00 0.00 64.00 32.00 33.00 32.00 32.00 64.00 -32.00 97.00 -33.00 64.00 -32.00 64.00 -32.00 32.00 -32.00 65.00 -64.00 -32.00 -65.00 160.00 33.00 33.00 96.00 -65.00 129.00 32.00 32.00 65.00 0.00 32.00 -129.00 32.00 -32.00 96.00 64.00 33.00 0.00 0.00 -64.00 96.00 0.00 32.00 -32.00 -64.00 -64.00 64.00 -33.00 65.00 33.00 128.00 0.00 32.00 -33.00 65.00 33.00 64.00 128.00 32.00 64.00 64.00 33.00 33.00 -65.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 64.00 64.00 64.00 32.00 32.00 32.00 0.00 129.00 33.00 161.00 -33.00 32.00 -96.00 32.00 0.00 64.00 129.00 97.00 -65.00 64.00 65.00 0.00 160.00 -64.00 0.00 32.00 -32.00 32.00 -64.00 32.00 32.00 65.00 64.00 32.00 97.00 0.00 32.00 32.00 32.00 -32.00 32.00 32.00 32.00 161.00 33.00 32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 32.00 -32.00 97.00 -32.00 0.00 -32.00 -97.00 -64.00 65.00 -129.00 32.00 -32.00 64.00 32.00 32.00 32.00 64.00 -32.00 33.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 97.00 32.00 32.00 64.00 0.00 65.00 0.00 -65.00 64.00 32.00 97.00 33.00 0.00 96.00 32.00 32.00 32.00 0.00 64.00 32.00 0.00 129.00 -64.00 128.00 -64.00 97.00 -129.00 32.00 -161.00 0.00 -192.00 64.00 -65.00 33.00 0.00 225.00 -1318.00 225.00 -1254.00 707.00 -3987.00 354.00 -2090.00 450.00 -2669.00 321.00 -1800.00 -32.00 -161.00 32.00 -64.00 65.00 -65.00 0.00 -64.00 0.00 -193.00 32.00 -96.00 0.00 -65.00 64.00 -32.00 97.00 -32.00 0.00 -64.00 -65.00 -129.00 0.00 -193.00 0.00 -32.00 -64.00 -129.00 -32.00 -128.00 32.00 -97.00 64.00 -128.00 0.00 -129.00 65.00 -64.00 0.00 -64.00 0.00 -97.00 -129.00 -161.00 -32.00 -32.00 32.00 -129.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -64.00 64.00 0.00 -32.00 -65.00 -64.00 -32.00 -65.00 32.00 -64.00 -96.00 0.00 -64.00 -96.00 -97.00 -65.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -161.00 0.00 -65.00 -64.00 -64.00 -33.00 0.00 -128.00 -96.00 64.00 -97.00 0.00 -64.00 -64.00 -32.00 -32.00 0.00 -33.00 -64.00 -128.00 -97.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 -65.00 0.00 33.00 -65.00 0.00 -32.00 32.00 -32.00 64.00 0.00 -32.00 -64.00 32.00 -33.00 64.00 -96.00 33.00 -96.00 32.00 -65.00 32.00 -64.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -33.00 0.00 -32.00 -65.00 -64.00 -32.00 32.00 -64.00 32.00 -97.00 -64.00 -96.00 -32.00 -32.00 32.00 -129.00 -64.00 -64.00 -65.00 0.00 -32.00 0.00 0.00 -97.00 -128.00 -32.00 -97.00 -32.00 0.00 -32.00 -128.00 -32.00 -65.00 -32.00 -32.00 -33.00 -32.00 -64.00 -32.00 0.00 -65.00 -96.00 -64.00 -33.00 -64.00 0.00 0.00 -64.00 -97.00 -32.00 -64.00 0.00 -96.00 -193.00 -65.00 32.00 -128.00 -32.00 -32.00 32.00 -129.00 -96.00 -64.00 -65.00 -33.00 -64.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 -97.00 -129.00 -32.00 -32.00 -32.00 -64.00 -257.00 -225.00 -32.00 -33.00 0.00 -128.00 32.00 -65.00 32.00 -96.00 -32.00 -547.00 0.00 -385.00 32.00 -901.00 0.00 -1125.00 0.00 -386.00 32.00 0.00 32.00 0.00 33.00 64.00 32.00 33.00 64.00 0.00 32.00 -33.00 32.00 -64.00 -64.00 -64.00 129.00 0.00 32.00 64.00 128.00 32.00 65.00 -64.00 64.00 -96.00 32.00 32.00 65.00 -32.00 32.00 64.00 128.00 -32.00 65.00 -32.00 32.00 0.00 32.00 -33.00 64.00 33.00 32.00 0.00 0.00 64.00 97.00 -64.00 32.00 -65.00 96.00 -32.00 65.00 -97.00 64.00 65.00 64.00 -32.00 33.00 -129.00 64.00 -32.00 64.00 0.00 0.00 -64.00 32.00 -33.00 129.00 33.00 32.00 32.00 64.00 96.00 32.00 0.00 33.00 32.00 64.00 0.00 0.00 -32.00 64.00 0.00 0.00 -96.00 129.00 -65.00 0.00 -64.00 129.00 0.00 32.00 0.00 0.00 -64.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 -65.00 32.00 -32.00 97.00 -32.00 32.00 0.00 32.00 32.00 32.00 64.00 65.00 0.00 32.00 33.00 0.00 64.00 32.00 32.00 96.00 64.00 0.00 65.00 193.00 192.00 65.00 65.00 32.00 -32.00 32.00 -33.00 0.00 -64.00 96.00 32.00 65.00 -32.00 32.00 -64.00 64.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 96.00 0.00 33.00 0.00 64.00 0.00 64.00 -32.00 0.00 32.00 129.00 -32.00 64.00 32.00 0.00 -64.00 0.00 -65.00 32.00 -32.00 0.00 -64.00 65.00 -32.00 32.00 32.00 64.00 0.00 64.00 32.00 65.00 0.00 32.00 32.00 32.00 0.00 32.00 -64.00 -161.00 -257.00 -96.00 -65.00 -64.00 -32.00 -33.00 -32.00 0.00 -96.00 65.00 -65.00 64.00 0.00 32.00 0.00 32.00 -96.00 -32.00 -129.00 -32.00 -32.00 -32.00 -64.00 0.00 -97.00 64.00 -32.00 65.00 0.00 0.00 -32.00 32.00 -64.00 -65.00 -65.00 -32.00 0.00 -96.00 -64.00 -65.00 0.00 0.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 -32.00 97.00 -32.00 -32.00 -64.00 -161.00 -65.00 -64.00 -64.00 96.00 -64.00 -32.00 -65.00 -32.00 -32.00 -257.00 -225.00 -33.00 0.00 -64.00 32.00 -32.00 -64.00 -64.00 0.00 0.00 -32.00 -65.00 -64.00 -128.00 0.00 -64.00 32.00 -65.00 -32.00 -32.00 32.00 -161.00 161.00 -96.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 -65.00 32.00 -160.00 -32.00 -129.00 32.00 -225.00 0.00 -97.00 -32.00 -96.00 -97.00 -64.00 0.00 -33.00 65.00 -96.00 0.00 -96.00 32.00 -65.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 -64.00 0.00 -97.00 0.00 -64.00 -97.00 32.00 -32.00 0.00 -96.00 0.00 -129.00 97.00 -64.00 32.00 -33.00 96.00 -32.00 32.00 -96.00 -32.00 -64.00 -64.00 0.00 -1029.00 0.00 -1351.00 0.00 -707.00 96.00 0.00 -32.00 32.00 32.00 32.00 129.00 -32.00 64.00 32.00 0.00 -32.00 32.00 -64.00 32.00 0.00 129.00 -96.00 64.00 0.00 65.00 0.00 32.00 -33.00 32.00 33.00 96.00 0.00 0.00 32.00 65.00 0.00 64.00 0.00 32.00 -32.00 64.00 32.00 32.00 -65.00 33.00 0.00 96.00 -64.00 161.00 -64.00 64.00 -65.00 290.00 129.00 32.00 -32.00 0.00 32.00 32.00 32.00 32.00 -64.00 32.00 32.00 32.00 32.00 32.00 -32.00 129.00 32.00 161.00 97.00 0.00 64.00 32.00 -32.00 965.00 0.00 2282.00 0.00 2541.00 0.00 32.00 0.00 0.00 -64.00 -32.00 -33.00 -97.00 0.00 64.00 -96.00 -96.00 -64.00 -64.00 0.00 -32.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 -129.00 32.00 -161.00 -32.00 0.00 -97.00 0.00 0.00 -64.00 0.00 -96.00 65.00 -65.00 32.00 -257.00 32.00 -32.00 64.00 -64.00 65.00 -65.00 64.00 0.00 64.00 -96.00 64.00 -32.00 65.00 64.00 64.00 -32.00 32.00 0.00 65.00 64.00 32.00 129.00 64.00 32.00 32.00 129.00 32.00 32.00 32.00 0.00 65.00 32.00 96.00 -32.00 97.00 96.00 96.00 97.00 161.00 160.00 161.00 0.00 32.00 -32.00 32.00 -64.00 64.00 -32.00 32.00 -64.00 -32.00 -129.00 129.00 -32.00 128.00 -97.00 97.00 -128.00 32.00 -32.00 64.00 -65.00 161.00 -321.00 65.00 -32.00 96.00 0.00 225.00 96.00 225.00 0.00 161.00 0.00 64.00 -64.00 97.00 -257.00 128.00 -97.00 32.00 -161.00 65.00 -96.00 64.00 -65.00 354.00 -160.00 64.00 -129.00 32.00 -64.00 97.00 0.00 96.00 0.00 97.00 64.00 128.00 129.00 32.00 514.00 32.00 97.00 0.00 257.00 129.00 482.00 64.00 193.00 32.00 64.00 161.00 97.00 65.00 -32.00 257.00 32.00 96.00 32.00 97.00 129.00 64.00 128.00 32.00 129.00 97.00 193.00 -33.00 128.00 33.00 129.00 32.00 96.00 32.00 97.00 32.00 675.00 0.00 129.00 32.00 161.00 -64.00 192.00 -32.00 386.00 0.00 450.00 32.00 129.00 -32.00 193.00 1093.00 -322.00 1222.00 1126.00 1350.00 1190.00 483.00 -129.00 128.00 32.00 32.00 32.00 65.00 65.00 32.00 64.00 32.00 0.00 161.00 -32.00 32.00 -65.00 32.00 0.00 64.00 33.00 65.00 -65.00 0.00 -32.00 32.00 -96.00 0.00 -33.00 64.00 0.00 97.00 -32.00 96.00 32.00 64.00 0.00 65.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -64.00 65.00 -64.00 0.00 -97.00 64.00 -32.00 0.00 -96.00 32.00 -33.00 96.00 0.00 33.00 33.00 32.00 -65.00 64.00 -32.00 32.00 -96.00 -32.00 -65.00 97.00 33.00 128.00 -65.00 97.00 -64.00 32.00 32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 33.00 32.00 32.00 -32.00 32.00 -65.00 32.00 0.00 64.00 -96.00 65.00 0.00 64.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 32.00 32.00 33.00 32.00 32.00 -64.00 96.00 -65.00 129.00 129.00 -32.00 -96.00 64.00 0.00 32.00 -33.00 0.00 33.00 97.00 32.00 32.00 -32.00 32.00 96.00 32.00 -32.00 64.00 0.00 -32.00 32.00 32.00 64.00 65.00 0.00 32.00 65.00 32.00 32.00 -32.00 32.00 64.00 64.00 0.00 33.00 64.00 64.00 -32.00 96.00 0.00 32.00 97.00 0.00 0.00 33.00 -65.00 64.00 33.00 128.00 -33.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 32.00 64.00 -32.00 96.00 -64.00 0.00 0.00 33.00 -32.00 96.00 -33.00 0.00 -96.00 64.00 0.00 97.00 -64.00 96.00 32.00 32.00 32.00 33.00 64.00 160.00 32.00 32.00 0.00 65.00 33.00 0.00 32.00 32.00 64.00 -97.00 129.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 97.00 0.00 64.00 -32.00 0.00 -32.00 64.00 -64.00 33.00 -97.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 64.00 32.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -129.00 64.00 -32.00 32.00 -97.00 32.00 -32.00 32.00 0.00 33.00 -64.00 96.00 -64.00 -32.00 -32.00 64.00 -65.00 64.00 -193.00 33.00 33.00 96.00 -65.00 129.00 0.00 32.00 0.00 32.00 32.00 -32.00 33.00 32.00 32.00 32.00 -32.00 65.00 32.00 96.00 -32.00 64.00 0.00 32.00 64.00 -32.00 32.00 65.00 0.00 64.00 -64.00 64.00 -129.00 32.00 -161.00 32.00 -32.00 33.00 -96.00 -97.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -129.00 0.00 -128.00 33.00 -97.00 -33.00 -96.00 65.00 0.00 96.00 -32.00 0.00 -65.00 97.00 -64.00 64.00 64.00 32.00 0.00 32.00 -32.00 65.00 65.00 -32.00 96.00 32.00 32.00 64.00 -32.00 129.00 32.00 0.00 -64.00 64.00 -32.00 64.00 -97.00 97.00 -96.00 64.00 -97.00 -32.00 -32.00 -32.00 -96.00 64.00 -65.00 32.00 0.00 32.00 33.00 0.00 32.00 32.00 32.00 65.00 -32.00 32.00 -65.00 64.00 -64.00 -32.00 -32.00 64.00 0.00 32.00 0.00 0.00 96.00 65.00 0.00 32.00 0.00 0.00 -64.00 64.00 -96.00 -32.00 -32.00 193.00 -129.00 64.00 -97.00 32.00 33.00 65.00 128.00 -32.00 32.00 0.00 33.00 64.00 64.00 96.00 128.00 33.00 33.00 32.00 0.00 128.00 -65.00 0.00 -64.00 32.00 0.00 33.00 -96.00 0.00 -33.00 0.00 -32.00 32.00 -32.00 64.00 32.00 32.00 0.00 65.00 -32.00 32.00 0.00 64.00 -64.00 64.00 -97.00 32.00 0.00 65.00 -64.00 96.00 0.00 65.00 -96.00 -33.00 0.00 33.00 -65.00 -33.00 -32.00 65.00 -32.00 96.00 -161.00 97.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 32.00 96.00 -32.00 65.00 -65.00 64.00 -64.00 96.00 -64.00 32.00 32.00 33.00 0.00 96.00 -65.00 0.00 -32.00 64.00 -64.00 0.00 -32.00 65.00 -64.00 64.00 32.00 32.00 0.00 97.00 0.00 32.00 96.00 -65.00 97.00 -96.00 96.00 32.00 32.00 -32.00 32.00 -64.00 129.00 0.00 32.00 -32.00 97.00 32.00 32.00 64.00 0.00 96.00 0.00 33.00 32.00 32.00 64.00 32.00 32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 -64.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 96.00 -64.00 0.00 -33.00 65.00 0.00 32.00 -64.00 64.00 -32.00 32.00 -32.00 65.00 32.00 32.00 0.00 96.00 -96.00 32.00 -65.00 65.00 -96.00 0.00 -65.00 32.00 0.00 64.00 0.00 64.00 -32.00 32.00 0.00 65.00 0.00 64.00 -32.00 0.00 -96.00 64.00 -65.00 33.00 -96.00 64.00 -64.00 32.00 -129.00 0.00 -32.00 32.00 -97.00 -32.00 0.00 -32.00 -96.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 0.00 0.00 -32.00 64.00 -161.00 0.00 -64.00 32.00 -32.00 -32.00 -64.00 32.00 0.00 0.00 -97.00 -64.00 0.00 0.00 -32.00 32.00 -161.00 0.00 -64.00 0.00 -96.00 0.00 -65.00 65.00 -32.00 32.00 -32.00 96.00 -32.00 0.00 -65.00 32.00 0.00 65.00 -64.00 32.00 -32.00 32.00 0.00 64.00 -64.00 32.00 32.00 32.00 -32.00 33.00 32.00 64.00 0.00 64.00 32.00 97.00 -64.00 32.00 0.00 32.00 32.00 32.00 32.00 161.00 0.00 32.00 96.00 64.00 -32.00 33.00 -96.00 128.00 0.00 64.00 32.00 33.00 -32.00 32.00 -65.00 32.00 0.00 64.00 33.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 128.00 -97.00 33.00 33.00 32.00 32.00 -32.00 64.00 96.00 0.00 32.00 32.00 32.00 -32.00 0.00 -64.00 -32.00 -129.00 32.00 -32.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 -96.00 32.00 0.00 0.00 -33.00 0.00 -64.00 64.00 0.00 65.00 -64.00 32.00 0.00 96.00 -32.00 32.00 -33.00 97.00 0.00 129.00 65.00 0.00 32.00 96.00 0.00 64.00 -64.00 33.00 -65.00 32.00 0.00 96.00 65.00 32.00 0.00 32.00 -33.00 33.00 0.00 96.00 -64.00 32.00 0.00 0.00 -64.00 0.00 -32.00 32.00 -97.00 -32.00 0.00 0.00 -64.00 129.00 -64.00 32.00 64.00 257.00 161.00 129.00 64.00 96.00 -32.00 322.00 -97.00 128.00 0.00 33.00 32.00 96.00 0.00 0.00 65.00 0.00 96.00 32.00 97.00 65.00 128.00 64.00 65.00 96.00 96.00 65.00 97.00 225.00 128.00 193.00 -32.00 160.00 -64.00 129.00 32.00 386.00 64.00 64.00 0.00 64.00 97.00 0.00 32.00 322.00 96.00 96.00 65.00 33.00 0.00 64.00 64.00 32.00 161.00 -32.00 160.00 -129.00 290.00 32.00 514.00 -32.00 65.00 -128.00 96.00 -33.00 32.00 -32.00 64.00 -128.00 129.00 -32.00 129.00 0.00 64.00 0.00 32.00 128.00 64.00 97.00 129.00 32.00 64.00 64.00 33.00 32.00 128.00 65.00 64.00 96.00 65.00 96.00 96.00 129.00 65.00 32.00 0.00 32.00 32.00 65.00 160.00 0.00 33.00 -32.00 64.00 32.00 96.00 64.00 33.00 96.00 482.00 161.00 386.00 32.00 257.00 97.00 193.00 32.00 0.00 161.00 0.00 32.00 0.00 32.00 0.00 0.00 32.00 -32.00 96.00 0.00 65.00 32.00 32.00 -32.00 64.00 32.00 64.00 64.00 97.00 65.00 96.00 0.00 65.00 -32.00 128.00 -97.00 97.00 -64.00 225.00 32.00 128.00 64.00 65.00 32.00 32.00 0.00 193.00 -32.00 32.00 -161.00 129.00 -128.00 193.00 -32.00 96.00 -32.00 64.00 96.00 451.00 -32.00 192.00 -32.00 193.00 64.00 97.00 0.00 225.00 64.00 0.00 97.00 -65.00 96.00 129.00 32.00 32.00 33.00 129.00 32.00 64.00 -32.00 32.00 0.00 33.00 -33.00 64.00 -32.00 96.00 32.00 97.00 -32.00 193.00 65.00 160.00 0.00 161.00 64.00 65.00 64.00 128.00 0.00 129.00 0.00 128.00 0.00 129.00 64.00 96.00 97.00 65.00 96.00 32.00 32.00 64.00 97.00 32.00 96.00 290.00 0.00 32.00 0.00 32.00 0.00 96.00 -32.00 0.00 0.00 33.00 32.00 32.00 33.00 64.00 0.00 64.00 96.00 129.00 32.00 64.00 32.00 65.00 65.00 64.00 64.00 0.00 64.00 32.00 0.00 32.00 -32.00 65.00 32.00 96.00 -64.00 32.00 0.00 97.00 32.00 64.00 64.00 0.00 -32.00 64.00 -64.00 32.00 0.00 33.00 64.00 96.00 -32.00 32.00 32.00 32.00 32.00 32.00 33.00 0.00 32.00 -32.00 160.00 97.00 -32.00 32.00 0.00 129.00 -32.00 32.00 -32.00 32.00 32.00 96.00 -64.00 32.00 0.00 33.00 -32.00 0.00 -32.00 96.00 -65.00 32.00 -32.00 32.00 -128.00 65.00 0.00 64.00 32.00 0.00 -32.00 64.00 -33.00 -32.00 -32.00 32.00 0.00 65.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 32.00 97.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 64.00 0.00 65.00 32.00 32.00 64.00 64.00 0.00 64.00 -64.00 0.00 0.00 33.00 32.00 32.00 32.00 64.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 65.00 -64.00 32.00 -32.00 -32.00 0.00 32.00 -97.00 0.00 0.00 32.00 0.00 64.00 32.00 0.00 33.00 32.00 -33.00 33.00 -96.00 -33.00 -32.00 33.00 0.00 32.00 -64.00 32.00 -33.00 -64.00 -32.00 -33.00 -32.00 -32.00 0.00 -32.00 -128.00 0.00 -65.00 -32.00 0.00 32.00 -96.00 -64.00 -32.00 32.00 0.00 96.00 -65.00 33.00 0.00 96.00 32.00 0.00 33.00 97.00 -65.00 32.00 0.00 32.00 32.00 96.00 97.00 65.00 64.00 -32.00 32.00 64.00 33.00 0.00 32.00 32.00 0.00 -32.00 64.00 0.00 32.00 32.00 129.00 32.00 32.00 64.00 64.00 33.00 0.00 32.00 32.00 32.00 0.00 32.00 -32.00 32.00 64.00 32.00 0.00 32.00 33.00 0.00 96.00 129.00 32.00 64.00 65.00 0.00 32.00 65.00 64.00 64.00 0.00 32.00 64.00 -32.00 65.00 64.00 64.00 97.00 129.00 0.00 64.00 32.00 64.00 0.00 0.00 96.00 129.00 33.00 32.00 32.00 64.00 64.00 32.00 0.00 33.00 32.00 64.00 0.00 64.00 129.00 -32.00 64.00 32.00 32.00 32.00 32.00 33.00 33.00 64.00 32.00 64.00 0.00 64.00 0.00 97.00 96.00 96.00 97.00 32.00 64.00 97.00 225.00 0.00 96.00 129.00 129.00 32.00 96.00 32.00 161.00 129.00 161.00 64.00 97.00 32.00 128.00 32.00 97.00 129.00 32.00 128.00 0.00 65.00 0.00 64.00 -32.00 64.00 -65.00 64.00 -32.00 97.00 32.00 129.00 32.00 96.00 97.00 289.00 96.00 97.00 32.00 161.00 65.00 160.00 128.00 65.00 97.00 64.00 161.00 257.00 225.00 32.00 32.00 33.00 0.00 0.00 -129.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 -33.00 -65.00 -160.00 -64.00 -97.00 -193.00 0.00 -96.00 0.00 -33.00 -64.00 -32.00 -129.00 0.00 -32.00 -96.00 -129.00 -32.00 -32.00 0.00 0.00 -32.00 97.00 -129.00 32.00 -32.00 32.00 -64.00 0.00 -65.00 -129.00 -128.00 -96.00 -33.00 32.00 -64.00 64.00 -64.00 33.00 -161.00 32.00 -96.00 32.00 -129.00 32.00 -32.00 32.00 -32.00 -32.00 -97.00 32.00 -64.00 32.00 -64.00 33.00 -32.00 -33.00 -65.00 -32.00 -32.00 0.00 -32.00 65.00 -32.00 -65.00 -65.00 0.00 -32.00 32.00 -32.00 97.00 0.00 32.00 -64.00 0.00 -129.00 -32.00 -64.00 -64.00 -64.00 0.00 -33.00 0.00 -64.00 -65.00 0.00 -32.00 -32.00 32.00 -129.00 -32.00 -96.00 32.00 -32.00 0.00 -97.00 97.00 -64.00 0.00 -161.00 64.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -129.00 0.00 -96.00 64.00 -161.00 97.00 -65.00 160.00 -128.00 33.00 -65.00 0.00 -96.00 64.00 -96.00 32.00 -33.00 96.00 0.00 33.00 -32.00 0.00 -32.00 0.00 -64.00 96.00 0.00 64.00 -64.00 129.00 -65.00 32.00 -32.00 65.00 -32.00 96.00 32.00 129.00 -129.00 64.00 0.00 32.00 0.00 225.00 -32.00 32.00 -32.00 0.00 -96.00 32.00 -32.00 -32.00 -65.00 0.00 -64.00 32.00 -32.00 33.00 0.00 64.00 32.00 96.00 0.00 97.00 32.00 0.00 -32.00 32.00 -32.00 96.00 -32.00 33.00 32.00 32.00 32.00 96.00 -32.00 32.00 0.00 129.00 64.00 32.00 129.00 32.00 32.00 65.00 0.00 32.00 0.00 128.00 64.00 129.00 0.00 64.00 0.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 -32.00 64.00 0.00 32.00 129.00 -32.00 32.00 0.00 128.00 32.00 0.00 0.00 65.00 129.00 128.00 96.00 -64.00 33.00 32.00 32.00 32.00 0.00 65.00 0.00 32.00 32.00 96.00 161.00 0.00 64.00 32.00 0.00 161.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 33.00 32.00 32.00 33.00 -32.00 32.00 64.00 -32.00 64.00 -33.00 32.00 0.00 33.00 97.00 32.00 -32.00 64.00 32.00 32.00 -32.00 64.00 32.00 65.00 32.00 32.00 -32.00 64.00 96.00 -32.00 97.00 64.00 32.00 -32.00 161.00 64.00 32.00 0.00 -32.00 65.00 32.00 32.00 64.00 -64.00 97.00 -33.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 97.00 32.00 0.00 -96.00 160.00 64.00 0.00 32.00 65.00 0.00 32.00 32.00 32.00 0.00 129.00 -128.00 0.00 -32.00 -65.00 -32.00 65.00 -65.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 64.00 -64.00 32.00 0.00 65.00 0.00 96.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 65.00 -32.00 96.00 0.00 32.00 -65.00 97.00 0.00 32.00 0.00 32.00 -32.00 129.00 -64.00 32.00 0.00 32.00 -64.00 0.00 -97.00 -32.00 0.00 32.00 -96.00 -64.00 -65.00 0.00 -96.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 -32.00 -32.00 -32.00 -65.00 -64.00 -32.00 0.00 -64.00 -65.00 32.00 -32.00 -64.00 32.00 -33.00 0.00 -64.00 -64.00 -32.00 0.00 -32.00 -32.00 -193.00 64.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -64.00 193.00 -129.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 32.00 -96.00 65.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 -96.00 0.00 -32.00 96.00 0.00 0.00 -129.00 32.00 -32.00 32.00 -32.00 -96.00 -129.00 32.00 -32.00 32.00 -129.00 -32.00 -96.00 32.00 -32.00 32.00 32.00 65.00 -32.00 32.00 -64.00 0.00 -65.00 32.00 -32.00 64.00 32.00 -32.00 -64.00 97.00 -97.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 32.00 -64.00 64.00 -129.00 0.00 -128.00 129.00 -129.00 -32.00 -32.00 64.00 0.00 64.00 -96.00 97.00 -32.00 -32.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 64.00 -65.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 96.00 -97.00 0.00 -32.00 161.00 -64.00 64.00 -32.00 65.00 -65.00 32.00 -321.00 64.00 -161.00 2862.00 0.00 1125.00 0.00 1415.00 0.00 0.00 1350.00 0.00 33.00 32.00 64.00 0.00 128.00 32.00 33.00 32.00 0.00 65.00 64.00 -33.00 289.00 33.00 32.00 0.00 65.00 -97.00 193.00 0.00 160.00 32.00 161.00 32.00 0.00 0.00 65.00 0.00 32.00 -32.00 64.00 0.00 225.00 129.00 97.00 129.00 64.00 0.00 32.00 96.00 0.00 0.00 32.00 32.00 -32.00 64.00 32.00 65.00 97.00 96.00 32.00 32.00 96.00 33.00 0.00 32.00 32.00 -32.00 161.00 32.00 129.00 32.00 32.00 32.00 64.00 0.00 97.00 0.00 32.00 -32.00 64.00 -64.00 0.00 0.00 97.00 32.00 32.00 0.00 96.00 -32.00 32.00 0.00 65.00 64.00 64.00 0.00 32.00 32.00 0.00 32.00 129.00 0.00 32.00 97.00 32.00 96.00 96.00 0.00 33.00 32.00 32.00 32.00 -32.00 65.00 32.00 96.00 193.00 64.00 32.00 65.00 0.00 0.00 32.00 64.00 64.00 32.00 0.00 0.00 33.00 32.00 32.00 0.00 32.00 193.00 128.00 0.00 33.00 32.00 0.00 33.00 -33.00 32.00 33.00 32.00 -33.00 0.00 65.00 32.00 64.00 32.00 0.00 32.00 64.00 32.00 0.00 0.00 -32.00 33.00 0.00 128.00 97.00 0.00 32.00 -96.00 32.00 32.00 64.00 -32.00 97.00 128.00 96.00 0.00 65.00 65.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -33.00 64.00 33.00 33.00 -33.00 96.00 65.00 64.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 32.00 97.00 97.00 0.00 129.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 -32.00 32.00 96.00 97.00 33.00 -32.00 64.00 257.00 -32.00 0.00 -32.00 64.00 0.00 65.00 128.00 128.00 32.00 97.00 161.00 64.00 32.00 96.00 129.00 33.00 -32.00 128.00 -161.00 32.00 -32.00 0.00 -97.00 129.00 -32.00 64.00 -64.00 -32.00 -32.00 32.00 -65.00 193.00 -128.00 32.00 0.00 65.00 32.00 32.00 64.00 0.00 32.00 32.00 97.00 129.00 32.00 32.00 32.00 0.00 64.00 -32.00 97.00 64.00 64.00 0.00 97.00 -32.00 32.00 -97.00 289.00 0.00 97.00 -32.00 32.00 0.00 64.00 0.00 64.00 64.00 65.00 65.00 0.00 -32.00 32.00 0.00 64.00 96.00 32.00 0.00 97.00 32.00 0.00 64.00 -32.00 97.00 32.00 32.00 32.00 -32.00 64.00 32.00 32.00 32.00 -32.00 32.00 64.00 97.00 -64.00 64.00 0.00 97.00 32.00 0.00 32.00 96.00 33.00 0.00 32.00 32.00 0.00 32.00 96.00 33.00 32.00 32.00 65.00 32.00 0.00 32.00 0.00 0.00 64.00 0.00 32.00 32.00 0.00 64.00 -32.00 65.00 32.00 0.00 -32.00 96.00 32.00 64.00 -32.00 0.00 161.00 33.00 64.00 32.00 64.00 -32.00 65.00 64.00 0.00 64.00 96.00 97.00 -64.00 32.00 32.00 193.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 64.00 -32.00 32.00 32.00 64.00 32.00 -32.00 97.00 64.00 64.00 0.00 32.00 0.00 32.00 97.00 65.00 0.00 -32.00 129.00 96.00 -65.00 32.00 65.00 32.00 32.00 65.00 -32.00 0.00 64.00 32.00 64.00 193.00 -64.00 0.00 32.00 -32.00 64.00 64.00 33.00 64.00 -97.00 65.00 0.00 0.00 64.00 32.00 33.00 32.00 0.00 0.00 64.00 -64.00 32.00 32.00 64.00 96.00 -64.00 97.00 96.00 64.00 -32.00 -32.00 -64.00 96.00 32.00 97.00 64.00 32.00 -96.00 128.00 0.00 0.00 32.00 33.00 0.00 32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 64.00 32.00 33.00 0.00 32.00 -32.00 64.00 -32.00 32.00 64.00 32.00 0.00 32.00 -32.00 33.00 64.00 64.00 -64.00 0.00 32.00 -32.00 129.00 32.00 32.00 0.00 32.00 64.00 0.00 97.00 0.00 64.00 129.00 96.00 -97.00 65.00 65.00 0.00 32.00 0.00 32.00 64.00 32.00 32.00 32.00 0.00 32.00 -64.00 65.00 32.00 96.00 64.00 65.00 97.00 225.00 32.00 32.00 193.00 -32.00 32.00 64.00 64.00 64.00 33.00 97.00 32.00 32.00 193.00 32.00 32.00 0.00 32.00 32.00 96.00 64.00 97.00 129.00 64.00 32.00 64.00 0.00 193.00 0.00 129.00 -64.00 64.00 0.00 65.00 64.00 32.00 32.00 32.00 97.00 0.00 96.00 0.00 32.00 -32.00 97.00 -97.00 96.00 -96.00 129.00 0.00 129.00 32.00 32.00 64.00 0.00 97.00 32.00 96.00 32.00 32.00 64.00 97.00 65.00 128.00 0.00 97.00 -33.00 64.00 0.00 32.00 33.00 33.00 -33.00 32.00 -128.00 0.00 -32.00 64.00 0.00 32.00 32.00 64.00 -32.00 33.00 -65.00 96.00 -32.00 64.00 -64.00 32.00 0.00 65.00 0.00 128.00 161.00 33.00 -32.00 64.00 -33.00 64.00 -32.00 32.00 32.00 65.00 65.00 64.00 0.00 96.00 -65.00 33.00 -64.00 64.00 -32.00 96.00 32.00 97.00 0.00 64.00 -32.00 32.00 -97.00 32.00 0.00 0.00 -64.00 33.00 -32.00 64.00 -32.00 129.00 -32.00 128.00 -161.00 97.00 32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 64.00 0.00 65.00 0.00 64.00 0.00 225.00 -65.00 0.00 32.00 -32.00 65.00 -161.00 257.00 -129.00 225.00 -128.00 129.00 -129.00 96.00 -193.00 129.00 -321.00 161.00 -161.00 32.00 -96.00 64.00 -33.00 32.00 -96.00 225.00 -32.00 65.00 0.00 96.00 -32.00 64.00 -193.00 258.00 0.00 32.00 32.00 32.00 96.00 32.00 65.00 32.00 64.00 0.00 32.00 32.00 -128.00 290.00 -258.00 578.00 -257.00 515.00 -161.00 418.00 -353.00 772.00 -547.00 1221.00 -32.00 33.00 -193.00 450.00 -354.00 803.00 -128.00 322.00 -193.00 450.00 -322.00 708.00 -1093.00 2379.00 -1415.00 3087.00 -321.00 771.00 -418.00 901.00 -740.00 1672.00 -1897.00 4212.00 -32.00 64.00 -64.00 32.00 0.00 32.00 -33.00 0.00 -128.00 0.00 -32.00 32.00 -32.00 161.00 -33.00 64.00 -64.00 97.00 -96.00 32.00 -258.00 225.00 -96.00 161.00 -97.00 96.00 -64.00 129.00 0.00 418.00 64.00 96.00 33.00 161.00 128.00 354.00 129.00 161.00 64.00 32.00 32.00 96.00 33.00 0.00 128.00 32.00 64.00 65.00 65.00 64.00 160.00 289.00 97.00 97.00 96.00 32.00 33.00 0.00 64.00 129.00 32.00 64.00 64.00 32.00 33.00 129.00 96.00 96.00 64.00 257.00 -32.00 193.00 32.00 161.00 0.00 64.00 97.00 129.00 64.00 64.00 -32.00 33.00 -161.00 160.00 -161.00 322.00 -32.00 161.00 -32.00 160.00 32.00 129.00 32.00 161.00 33.00 64.00 0.00 96.00 -161.00 161.00 -65.00 129.00 -128.00 128.00 -32.00 33.00 0.00 128.00 0.00 65.00 -65.00 96.00 -160.00 161.00 -193.00 96.00 -32.00 65.00 -33.00 0.00 0.00 64.00 65.00 64.00 0.00 225.00 96.00 161.00 97.00 129.00 32.00 128.00 0.00 65.00 32.00 96.00 128.00 225.00 33.00 64.00 -33.00 97.00 33.00 96.00 -33.00 65.00 -128.00 64.00 -32.00 96.00 64.00 193.00 -64.00 97.00 32.00 193.00 -32.00 64.00 0.00 64.00 32.00 32.00 32.00 97.00 -32.00 32.00 -129.00 64.00 -32.00 65.00 32.00 64.00 -32.00 64.00 0.00 65.00 -128.00 160.00 -33.00 65.00 -64.00 96.00 -32.00 32.00 -64.00 129.00 32.00 96.00 32.00 65.00 0.00 64.00 -32.00 129.00 64.00 64.00 32.00 64.00 0.00 64.00 -32.00 33.00 -32.00 96.00 -32.00 64.00 -129.00 290.00 32.00 32.00 97.00 32.00 128.00 -64.00 33.00 0.00 128.00 -32.00 129.00 64.00 0.00 32.00 -32.00 32.00 -97.00 65.00 -193.00 192.00 -64.00 65.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 32.00 -289.00 32.00 -2830.00 0.00 -128.00 0.00 -3473.00 0.00 -2669.00 -32.00 -1543.00 0.00 -418.00 0.00 -64.00 0.00 -3473.00 0.00 -32.00 0.00 -64.00 0.00 -97.00 -193.00 -32.00 -32.00 32.00 -97.00 -32.00 -32.00 -64.00 -32.00 -32.00 -32.00 -97.00 -32.00 -128.00 32.00 -33.00 -32.00 -32.00 -97.00 -64.00 32.00 -64.00 0.00 -33.00 65.00 33.00 32.00 -33.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 -64.00 64.00 -65.00 -32.00 -96.00 0.00 -96.00 -65.00 -33.00 0.00 -32.00 65.00 0.00 160.00 -64.00 65.00 -32.00 64.00 32.00 64.00 -32.00 32.00 0.00 33.00 0.00 96.00 -97.00 64.00 -96.00 0.00 0.00 65.00 -96.00 0.00 -65.00 32.00 -193.00 -64.00 -32.00 32.00 -32.00 -32.00 0.00 -97.00 -64.00 -96.00 -65.00 -33.00 -64.00 -128.00 -96.00 0.00 -97.00 0.00 -128.00 64.00 -129.00 -32.00 -129.00 -321.00 0.00 -33.00 32.00 -64.00 -32.00 -32.00 -64.00 -32.00 -32.00 -65.00 32.00 -64.00 -64.00 -96.00 -97.00 -65.00 32.00 -32.00 97.00 0.00 0.00 -64.00 -32.00 -64.00 -33.00 -97.00 -64.00 0.00 -128.00 0.00 -65.00 -64.00 -128.00 -32.00 -32.00 32.00 -65.00 32.00 -32.00 32.00 0.00 64.00 97.00 97.00 -33.00 64.00 -32.00 0.00 -225.00 -161.00 -32.00 -32.00 0.00 -32.00 64.00 -96.00 32.00 -65.00 -64.00 -64.00 32.00 -96.00 -32.00 -65.00 -64.00 0.00 -32.00 -32.00 -33.00 -64.00 0.00 -97.00 -32.00 -128.00 32.00 -129.00 33.00 -64.00 0.00 -64.00 -33.00 -33.00 -64.00 -32.00 -64.00 -32.00 -64.00 0.00 -129.00 -32.00 -64.00 -32.00 -32.00 -64.00 -65.00 -65.00 -32.00 32.00 -32.00 0.00 -32.00 65.00 -65.00 32.00 -96.00 96.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 -65.00 0.00 32.00 -65.00 -32.00 -64.00 0.00 -64.00 -32.00 0.00 32.00 -65.00 -32.00 -96.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -65.00 -193.00 -96.00 -32.00 -32.00 32.00 -32.00 -64.00 -129.00 -65.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 32.00 -32.00 33.00 -64.00 -33.00 -32.00 -32.00 -97.00 32.00 -32.00 -64.00 -64.00 0.00 -33.00 -96.00 -64.00 -65.00 -64.00 -96.00 -97.00 -193.00 -96.00 -129.00 0.00 -32.00 -64.00 -64.00 -97.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 -64.00 -2186.00 0.00 -804.00 0.00 -161.00 0.00 -418.00 -32.00 -32.00 225.00 32.00 64.00 -32.00 64.00 -64.00 32.00 -32.00 97.00 -97.00 64.00 0.00 64.00 32.00 33.00 -32.00 96.00 -32.00 32.00 -96.00 161.00 -161.00 97.00 -97.00 96.00 0.00 32.00 129.00 225.00 -129.00 97.00 -64.00 96.00 0.00 64.00 -64.00 97.00 -33.00 32.00 -32.00 0.00 -160.00 -129.00 -97.00 -32.00 -96.00 -32.00 -32.00 0.00 -65.00 0.00 -32.00 64.00 -64.00 97.00 -32.00 32.00 -97.00 -32.00 -64.00 32.00 0.00 289.00 -161.00 97.00 0.00 64.00 129.00 32.00 64.00 65.00 0.00 64.00 -161.00 129.00 0.00 32.00 32.00 96.00 97.00 97.00 0.00 96.00 64.00 64.00 32.00 0.00 0.00 65.00 -96.00 160.00 -32.00 0.00 -65.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 161.00 -65.00 32.00 0.00 64.00 -32.00 64.00 -32.00 33.00 32.00 32.00 -96.00 128.00 32.00 129.00 -193.00 -32.00 -32.00 0.00 -97.00 64.00 -64.00 0.00 -64.00 -32.00 -32.00 32.00 -65.00 97.00 0.00 160.00 65.00 129.00 -33.00 64.00 -96.00 97.00 0.00 32.00 0.00 32.00 32.00 97.00 0.00 128.00 32.00 225.00 0.00 65.00 -32.00 32.00 -128.00 0.00 -258.00 160.00 -160.00 -32.00 -161.00 32.00 -65.00 0.00 -64.00 -32.00 0.00 -32.00 64.00 -161.00 0.00 -64.00 0.00 -32.00 -64.00 0.00 -257.00 96.00 -129.00 65.00 -128.00 32.00 -65.00 32.00 -32.00 0.00 -64.00 0.00 -129.00 32.00 -193.00 -32.00 -64.00 0.00 -32.00 32.00 -64.00 32.00 -32.00 0.00 0.00 65.00 -65.00 32.00 -32.00 32.00 -64.00 0.00 -129.00 -32.00 -96.00 0.00 -65.00 32.00 -64.00 -97.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -129.00 97.00 -96.00 32.00 -33.00 0.00 -96.00 -129.00 -32.00 -32.00 -65.00 0.00 -64.00 0.00 -128.00 32.00 -129.00 97.00 -97.00 64.00 -32.00 65.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 128.00 -64.00 225.00 -33.00 33.00 0.00 32.00 0.00 64.00 33.00 32.00 0.00 129.00 0.00 32.00 32.00 64.00 0.00 32.00 32.00 65.00 -32.00 32.00 -32.00 64.00 -33.00 97.00 0.00 32.00 -64.00 32.00 0.00 32.00 -64.00 64.00 -97.00 0.00 -64.00 65.00 0.00 64.00 -64.00 64.00 32.00 65.00 -64.00 0.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 32.00 96.00 -64.00 65.00 0.00 32.00 -32.00 32.00 -129.00 0.00 -32.00 0.00 -32.00 32.00 32.00 64.00 -64.00 33.00 -65.00 0.00 -128.00 96.00 -65.00 -64.00 -96.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -65.00 64.00 -96.00 0.00 -64.00 -96.00 -33.00 0.00 -32.00 32.00 -128.00 -97.00 -161.00 0.00 -64.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 -160.00 -96.00 -33.00 0.00 -160.00 64.00 -65.00 64.00 -225.00 129.00 -32.00 64.00 -129.00 0.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -96.00 -64.00 -129.00 -64.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 0.00 128.00 -32.00 161.00 0.00 32.00 32.00 64.00 64.00 161.00 0.00 65.00 -32.00 -33.00 -64.00 33.00 -65.00 -65.00 -32.00 65.00 -96.00 32.00 -32.00 -32.00 0.00 -65.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -161.00 -129.00 -64.00 -32.00 -96.00 0.00 -32.00 0.00 -97.00 32.00 -96.00 33.00 -32.00 32.00 -33.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 -33.00 257.00 -64.00 32.00 -128.00 258.00 -33.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -64.00 0.00 -33.00 32.00 -64.00 64.00 -32.00 0.00 -32.00 -96.00 -32.00 -32.00 -32.00 0.00 -33.00 -161.00 -64.00 32.00 -32.00 0.00 0.00 -96.00 -32.00 -33.00 -32.00 0.00 -97.00 -96.00 -64.00 0.00 -97.00 -32.00 -32.00 -64.00 -32.00 -97.00 -96.00 -64.00 -33.00 -32.00 -64.00 -33.00 0.00 -64.00 -96.00 0.00 -65.00 -32.00 -160.00 0.00 -33.00 0.00 0.00 32.00 -64.00 32.00 -193.00 0.00 -96.00 -32.00 -32.00 0.00 -33.00 0.00 -96.00 64.00 -32.00 0.00 -64.00 65.00 -161.00 -65.00 -65.00 0.00 -64.00 33.00 -32.00 0.00 -97.00 -97.00 -32.00 0.00 -96.00 0.00 32.00 97.00 -32.00 32.00 -97.00 0.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 -64.00 65.00 -97.00 -65.00 -64.00 32.00 -32.00 0.00 -161.00 -64.00 -32.00 32.00 0.00 32.00 96.00 65.00 33.00 96.00 0.00 225.00 -161.00 129.00 -64.00 129.00 -129.00 128.00 -129.00 97.00 -32.00 64.00 0.00 64.00 0.00 32.00 -193.00 33.00 -64.00 96.00 -129.00 32.00 -32.00 32.00 -96.00 -32.00 -65.00 64.00 -289.00 161.00 -32.00 97.00 -64.00 64.00 -97.00 64.00 -129.00 0.00 -64.00 0.00 -64.00 -32.00 -32.00 32.00 32.00 32.00 0.00 129.00 -129.00 97.00 -1222.00 -515.00 -193.00 -96.00 -160.00 -33.00 -129.00 -96.00 -772.00 -322.00 -2893.00 -1254.00 -1158.00 -514.00 -2058.00 -900.00 -514.00 -225.00 -129.00 -65.00 -160.00 -64.00 -965.00 -547.00 -900.00 -450.00 -1222.00 -643.00 -547.00 -289.00 -964.00 -547.00 -1769.00 -964.00 -772.00 -418.00 -353.00 -225.00 -450.00 -97.00 -515.00 -129.00 -1736.00 -353.00 -1447.00 -354.00 -1254.00 -289.00 -289.00 -65.00 -1962.00 -482.00 -96.00 0.00 -97.00 -32.00 -707.00 -225.00 -64.00 -32.00 -2219.00 -450.00 -161.00 -65.00 -836.00 -418.00 -2186.00 -996.00 -1961.00 -869.00 -290.00 -160.00z\"\n          },\n          rr: {\n            name: \"RR\",\n            path: \"M52171.00 10353.00l0.00 -64.00 0.00 -161.00 0.00 -129.00 -96.00 -128.00 -193.00 -193.00 -64.00 -97.00 -97.00 -64.00 0.00 -32.00 -64.00 -161.00 -161.00 -97.00 -64.00 -64.00 -225.00 -128.00 -97.00 -33.00 -96.00 -64.00 -97.00 -32.00 -128.00 32.00 -32.00 -32.00 -97.00 -129.00 -96.00 -160.00 -129.00 -97.00 -96.00 -96.00 -32.00 -225.00 -97.00 -33.00 -96.00 -64.00 -65.00 -128.00 -96.00 -65.00 -97.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 -129.00 -96.00 -129.00 -65.00 -193.00 -64.00 -64.00 -96.00 -64.00 -129.00 -97.00 -129.00 -96.00 -64.00 -193.00 0.00 -161.00 32.00 -96.00 97.00 -97.00 64.00 0.00 418.00 193.00 161.00 161.00 160.00 354.00 161.00 128.00 161.00 65.00 64.00 -65.00 97.00 0.00 96.00 32.00 0.00 -32.00 225.00 -32.00 129.00 -64.00 129.00 0.00 64.00 0.00 257.00 32.00 129.00 -32.00 64.00 -32.00 96.00 0.00 0.00 64.00 33.00 0.00 64.00 0.00 96.00 32.00 65.00 32.00 128.00 0.00 97.00 -64.00 32.00 0.00 64.00 96.00 64.00 0.00 97.00 97.00 96.00 161.00 0.00 64.00 -32.00 32.00 32.00 64.00 97.00 97.00 129.00 257.00 64.00 32.00 0.00 32.00 161.00 33.00 0.00 128.00 64.00 32.00 32.00 0.00 64.00 129.00 32.00 0.00 0.00 -64.00 0.00 -33.00 33.00 33.00 32.00 -65.00 32.00 -32.00 32.00 -64.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -33.00 32.00 33.00 129.00 -65.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 97.00 0.00 96.00 33.00 129.00 -33.00 64.00 0.00 96.00 33.00 -32.00 32.00 32.00 32.00 65.00 32.00 32.00 32.00 32.00 0.00 0.00 -32.00 65.00 0.00 64.00 32.00 96.00 -96.00 -64.00 0.00 -32.00 -32.00 0.00 -33.00 -64.00 0.00 -33.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 32.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 64.00 0.00 64.00 32.00 32.00 32.00 65.00 129.00 64.00 32.00 64.00 96.00 97.00 97.00 32.00 64.00 -32.00 64.00 32.00 32.00 -32.00 32.00 0.00 33.00 64.00 0.00 32.00 0.00 97.00 -33.00 0.00 97.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 65.00 65.00 32.00 -33.00 32.00 65.00 0.00 -65.00 -32.00 -96.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 0.00 64.00 32.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 97.00 -97.00 32.00 -32.00 -64.00 -64.00 32.00 -32.00 0.00 -33.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 0.00 -32.00 96.00 -96.00 65.00 0.00 96.00 -33.00 193.00 129.00 97.00 0.00 64.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -65.00 32.00 33.00 33.00 32.00 32.00 0.00 32.00 64.00 128.00 -32.00 33.00 32.00 128.00 32.00 64.00 0.00 -64.00 257.00 -64.00 65.00 0.00 160.00 32.00 33.00 0.00 32.00 96.00 128.00 65.00 0.00 64.00 0.00 64.00 33.00 65.00 0.00 64.00 0.00 64.00 0.00 97.00 64.00 96.00 64.00 0.00 64.00 65.00 65.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 129.00 -32.00 64.00 -65.00 0.00 65.00 32.00 192.00 97.00 0.00 96.00 65.00 0.00 64.00 97.00 64.00 64.00 33.00 32.00 64.00 0.00 32.00 0.00 32.00 -32.00 129.00 -129.00 32.00 -64.00 0.00 -96.00 64.00 0.00 97.00 -65.00 64.00 -64.00 96.00 -64.00 97.00 -129.00 64.00 32.00 32.00 0.00 33.00 0.00 32.00 64.00 32.00 0.00 32.00 97.00 32.00 0.00 32.00 64.00 97.00 65.00 32.00 0.00 0.00 -65.00 32.00 0.00 0.00 -64.00 32.00 -32.00 -32.00 -65.00 32.00 -96.00 -32.00 -96.00 0.00 -97.00 -32.00 -32.00 64.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -97.00 -64.00 0.00 -32.00 97.00 -65.00 -32.00 0.00 0.00 -32.00 -65.00 -32.00 -32.00 -64.00 0.00 -32.00 -64.00 -33.00 32.00 -128.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 96.00 -32.00 65.00 -64.00 32.00 -96.00 -97.00 -33.00 -32.00 -128.00 32.00 0.00 65.00 -65.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 161.00 64.00 64.00 -32.00 64.00 0.00 97.00 0.00 0.00 -32.00 32.00 -32.00 97.00 32.00 96.00 0.00 32.00 32.00 64.00 0.00 33.00 64.00 0.00 33.00 32.00 0.00 96.00 0.00 -32.00 -33.00 0.00 -64.00 64.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 -96.00 -33.00 32.00 -64.00 -32.00 32.00 0.00 32.00 -64.00 -32.00 -65.00 65.00 0.00 96.00 -32.00 0.00 -32.00 -64.00 -64.00 128.00 32.00 0.00 -32.00 32.00 -32.00 33.00 0.00 32.00 32.00 32.00 32.00 32.00 -64.00 32.00 0.00 32.00 0.00 0.00 -65.00 33.00 0.00 -33.00 -32.00 -64.00 0.00 32.00 -64.00 32.00 -32.00 33.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 96.00 0.00 0.00 -32.00 32.00 32.00 33.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 96.00 96.00 32.00 0.00 0.00 -32.00 65.00 0.00 0.00 97.00 32.00 0.00 64.00 64.00 32.00 -32.00 33.00 0.00 0.00 32.00 64.00 0.00 64.00 -32.00 32.00 64.00 129.00 0.00 64.00 64.00 32.00 -32.00 33.00 32.00 64.00 32.00 96.00 -32.00 0.00 32.00 0.00 65.00 97.00 32.00 32.00 0.00 32.00 0.00 64.00 32.00 0.00 32.00 33.00 -32.00 32.00 -32.00 96.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 64.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -33.00 64.00 -32.00 97.00 65.00 32.00 -33.00 32.00 -32.00 0.00 32.00 0.00 33.00 32.00 -33.00 64.00 0.00 33.00 -64.00 32.00 32.00 32.00 -64.00 32.00 -32.00 32.00 0.00 -32.00 32.00 0.00 64.00 32.00 32.00 129.00 129.00 32.00 96.00 64.00 33.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 33.00 -128.00 0.00 -33.00 64.00 0.00 32.00 -32.00 64.00 32.00 32.00 0.00 33.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 64.00 0.00 0.00 32.00 64.00 32.00 65.00 0.00 0.00 -32.00 32.00 -96.00 -32.00 -65.00 64.00 0.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 64.00 -33.00 0.00 33.00 33.00 0.00 64.00 0.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 129.00 -32.00 32.00 -64.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 96.00 -32.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 0.00 32.00 65.00 0.00 0.00 64.00 32.00 0.00 32.00 0.00 32.00 -64.00 64.00 -32.00 33.00 64.00 64.00 0.00 96.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 64.00 -65.00 33.00 0.00 0.00 -32.00 32.00 -96.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 -33.00 -64.00 33.00 0.00 32.00 -32.00 -32.00 -97.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 128.00 -33.00 65.00 -64.00 32.00 0.00 32.00 -64.00 64.00 0.00 32.00 0.00 32.00 32.00 -32.00 32.00 65.00 0.00 0.00 -32.00 32.00 0.00 64.00 0.00 0.00 32.00 161.00 0.00 96.00 32.00 65.00 0.00 0.00 -64.00 96.00 0.00 -32.00 -64.00 64.00 -33.00 0.00 -32.00 129.00 0.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -65.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 32.00 -96.00 96.00 0.00 0.00 -33.00 33.00 33.00 64.00 0.00 32.00 32.00 32.00 0.00 0.00 -65.00 64.00 33.00 33.00 64.00 32.00 -64.00 128.00 64.00 0.00 -64.00 65.00 96.00 32.00 -32.00 32.00 0.00 64.00 64.00 33.00 32.00 32.00 0.00 0.00 32.00 64.00 0.00 0.00 65.00 64.00 -65.00 32.00 0.00 0.00 -32.00 97.00 -32.00 64.00 -64.00 64.00 32.00 33.00 0.00 32.00 -32.00 96.00 0.00 129.00 0.00 0.00 32.00 64.00 0.00 64.00 0.00 0.00 -32.00 33.00 -97.00 96.00 0.00 32.00 -32.00 32.00 -64.00 -32.00 -97.00 97.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 64.00 -64.00 -32.00 -33.00 0.00 -64.00 -65.00 -32.00 0.00 -64.00 33.00 0.00 64.00 0.00 0.00 -32.00 64.00 -33.00 32.00 -64.00 0.00 -96.00 65.00 -65.00 96.00 0.00 32.00 33.00 97.00 32.00 96.00 -129.00 32.00 0.00 65.00 -32.00 -33.00 -32.00 33.00 -32.00 96.00 0.00 0.00 -33.00 129.00 -32.00 64.00 32.00 32.00 -32.00 32.00 -64.00 32.00 0.00 33.00 -32.00 -33.00 0.00 33.00 -32.00 -33.00 -33.00 33.00 -32.00 64.00 -64.00 64.00 0.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 64.00 -64.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 129.00 -32.00 0.00 -64.00 64.00 -64.00 32.00 -33.00 65.00 0.00 32.00 -160.00 -32.00 -65.00 -33.00 -128.00 -64.00 -32.00 0.00 -65.00 -64.00 -64.00 -32.00 -96.00 -65.00 -33.00 32.00 -128.00 -32.00 -65.00 32.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 -96.00 32.00 -65.00 -32.00 -64.00 -96.00 -64.00 0.00 -65.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -96.00 0.00 -65.00 -32.00 65.00 -96.00 64.00 0.00 64.00 -33.00 65.00 -32.00 96.00 32.00 32.00 0.00 64.00 33.00 65.00 32.00 64.00 -32.00 32.00 32.00 32.00 -32.00 33.00 0.00 0.00 64.00 96.00 64.00 129.00 0.00 32.00 -32.00 64.00 -32.00 129.00 32.00 96.00 0.00 32.00 0.00 32.00 0.00 65.00 0.00 32.00 96.00 32.00 0.00 96.00 -64.00 0.00 -64.00 0.00 -32.00 65.00 32.00 96.00 -64.00 65.00 32.00 0.00 32.00 0.00 32.00 64.00 -32.00 32.00 0.00 64.00 0.00 33.00 0.00 64.00 0.00 32.00 -97.00 129.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -64.00 96.00 0.00 65.00 -32.00 32.00 -33.00 64.00 -32.00 64.00 32.00 33.00 65.00 0.00 64.00 96.00 64.00 64.00 -32.00 97.00 -64.00 32.00 96.00 129.00 161.00 32.00 225.00 0.00 32.00 96.00 0.00 32.00 33.00 32.00 32.00 0.00 32.00 33.00 64.00 32.00 0.00 96.00 64.00 0.00 33.00 32.00 -33.00 65.00 33.00 32.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 -64.00 64.00 64.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 64.00 129.00 -32.00 32.00 32.00 32.00 -32.00 65.00 32.00 64.00 -32.00 0.00 0.00 64.00 -32.00 65.00 -32.00 64.00 -32.00 321.00 -33.00 33.00 -32.00 32.00 -32.00 64.00 32.00 32.00 -32.00 64.00 -32.00 33.00 64.00 64.00 0.00 64.00 0.00 97.00 -64.00 128.00 64.00 33.00 0.00 32.00 -161.00 160.00 -64.00 97.00 -32.00 32.00 32.00 32.00 0.00 64.00 0.00 65.00 -128.00 64.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 32.00 97.00 -64.00 0.00 32.00 64.00 -64.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 64.00 32.00 33.00 -32.00 128.00 32.00 32.00 97.00 0.00 32.00 0.00 129.00 0.00 -33.00 -64.00 97.00 -32.00 0.00 32.00 0.00 32.00 64.00 -32.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 97.00 0.00 32.00 33.00 64.00 -33.00 33.00 33.00 32.00 -33.00 32.00 0.00 32.00 65.00 64.00 32.00 33.00 -32.00 0.00 32.00 32.00 0.00 -32.00 -32.00 32.00 -97.00 32.00 0.00 0.00 32.00 96.00 33.00 32.00 -33.00 0.00 33.00 65.00 32.00 -32.00 32.00 96.00 32.00 -32.00 32.00 32.00 32.00 64.00 -64.00 65.00 0.00 32.00 -64.00 0.00 32.00 64.00 32.00 -32.00 64.00 32.00 32.00 32.00 0.00 32.00 0.00 65.00 -32.00 32.00 32.00 64.00 33.00 32.00 -33.00 0.00 -64.00 32.00 0.00 33.00 97.00 64.00 0.00 0.00 32.00 64.00 0.00 65.00 96.00 64.00 0.00 64.00 65.00 32.00 32.00 97.00 96.00 64.00 -32.00 64.00 64.00 -64.00 33.00 32.00 96.00 0.00 32.00 -64.00 32.00 -64.00 65.00 0.00 64.00 -33.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 0.00 32.00 0.00 33.00 64.00 0.00 32.00 32.00 -128.00 160.00 32.00 33.00 0.00 96.00 32.00 97.00 0.00 32.00 64.00 64.00 33.00 32.00 96.00 65.00 193.00 0.00 129.00 64.00 -33.00 96.00 -32.00 32.00 -96.00 193.00 32.00 0.00 64.00 65.00 65.00 0.00 0.00 32.00 0.00 64.00 96.00 32.00 0.00 65.00 -32.00 0.00 -32.00 -33.00 0.00 33.00 32.00 32.00 64.00 -65.00 0.00 65.00 -32.00 32.00 32.00 32.00 32.00 -32.00 33.00 0.00 -33.00 32.00 33.00 32.00 -65.00 65.00 0.00 32.00 65.00 0.00 32.00 32.00 32.00 -64.00 64.00 0.00 0.00 32.00 97.00 0.00 32.00 64.00 0.00 32.00 32.00 32.00 -64.00 32.00 0.00 33.00 0.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 -96.00 0.00 0.00 128.00 -65.00 -64.00 33.00 64.00 -65.00 0.00 -32.00 33.00 0.00 96.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 65.00 32.00 32.00 0.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 33.00 0.00 32.00 -32.00 32.00 -32.00 -64.00 -32.00 64.00 -65.00 32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -65.00 32.00 -32.00 64.00 -64.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 64.00 -64.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -33.00 32.00 -32.00 33.00 -32.00 32.00 0.00 32.00 -96.00 0.00 -32.00 32.00 -33.00 97.00 -64.00 0.00 32.00 32.00 -64.00 0.00 -64.00 64.00 -33.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 64.00 -32.00 -32.00 -65.00 32.00 -64.00 0.00 0.00 64.00 -32.00 65.00 -32.00 32.00 32.00 0.00 0.00 32.00 -64.00 32.00 32.00 32.00 96.00 0.00 0.00 65.00 32.00 64.00 97.00 32.00 64.00 64.00 0.00 97.00 -96.00 32.00 0.00 32.00 64.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -33.00 64.00 0.00 32.00 0.00 64.00 33.00 0.00 64.00 -32.00 32.00 0.00 -32.00 97.00 32.00 160.00 32.00 33.00 0.00 64.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 32.00 97.00 -32.00 32.00 -33.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 129.00 -64.00 0.00 -32.00 96.00 0.00 65.00 -33.00 32.00 65.00 64.00 -65.00 32.00 -96.00 0.00 0.00 32.00 -32.00 129.00 64.00 161.00 -32.00 32.00 -64.00 0.00 32.00 0.00 32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 64.00 0.00 0.00 65.00 -32.00 0.00 -32.00 -33.00 -32.00 65.00 -65.00 32.00 0.00 64.00 -64.00 32.00 0.00 33.00 32.00 96.00 -32.00 64.00 -32.00 65.00 0.00 64.00 64.00 64.00 -32.00 32.00 -32.00 161.00 0.00 32.00 -97.00 129.00 -32.00 96.00 65.00 32.00 0.00 33.00 -65.00 64.00 32.00 64.00 -32.00 32.00 32.00 65.00 -32.00 32.00 0.00 32.00 0.00 161.00 -32.00 96.00 32.00 193.00 -32.00 64.00 32.00 193.00 0.00 33.00 65.00 96.00 32.00 32.00 -32.00 65.00 0.00 32.00 64.00 64.00 0.00 64.00 32.00 32.00 -64.00 0.00 0.00 65.00 32.00 0.00 96.00 64.00 65.00 64.00 -33.00 65.00 97.00 128.00 -32.00 32.00 0.00 65.00 32.00 32.00 0.00 32.00 96.00 64.00 -32.00 65.00 32.00 32.00 0.00 32.00 -32.00 96.00 64.00 65.00 -32.00 0.00 0.00 64.00 -64.00 64.00 0.00 32.00 64.00 129.00 65.00 64.00 32.00 -64.00 32.00 64.00 64.00 65.00 0.00 32.00 32.00 0.00 32.00 64.00 33.00 -32.00 32.00 -32.00 0.00 64.00 96.00 32.00 32.00 65.00 65.00 64.00 32.00 0.00 32.00 -32.00 97.00 0.00 64.00 0.00 0.00 32.00 64.00 32.00 -32.00 64.00 64.00 65.00 0.00 64.00 -64.00 32.00 32.00 129.00 -32.00 0.00 32.00 32.00 -32.00 64.00 -32.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 64.00 64.00 -32.00 33.00 32.00 32.00 0.00 32.00 0.00 64.00 -64.00 32.00 -32.00 97.00 32.00 128.00 32.00 0.00 0.00 33.00 32.00 32.00 -32.00 32.00 64.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 97.00 -32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 97.00 0.00 96.00 -65.00 32.00 33.00 65.00 -33.00 32.00 65.00 96.00 -32.00 97.00 32.00 64.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 -32.00 97.00 0.00 32.00 64.00 32.00 32.00 64.00 -64.00 -32.00 -64.00 32.00 -32.00 0.00 32.00 65.00 96.00 -32.00 97.00 0.00 32.00 -33.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -32.00 65.00 32.00 32.00 -32.00 32.00 0.00 32.00 96.00 0.00 32.00 65.00 0.00 32.00 33.00 -32.00 96.00 32.00 32.00 32.00 65.00 64.00 32.00 -32.00 96.00 0.00 32.00 -32.00 65.00 -32.00 64.00 64.00 32.00 -32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 33.00 32.00 0.00 65.00 64.00 64.00 0.00 64.00 32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 32.00 0.00 129.00 0.00 32.00 32.00 64.00 97.00 32.00 96.00 0.00 33.00 129.00 64.00 32.00 -32.00 97.00 32.00 64.00 64.00 0.00 65.00 -32.00 0.00 32.00 0.00 64.00 64.00 65.00 0.00 32.00 32.00 0.00 -32.00 64.00 64.00 0.00 32.00 0.00 0.00 32.00 32.00 -32.00 0.00 -64.00 97.00 0.00 32.00 32.00 0.00 32.00 32.00 129.00 -32.00 32.00 0.00 64.00 64.00 0.00 32.00 -32.00 33.00 0.00 64.00 64.00 32.00 32.00 -32.00 33.00 32.00 32.00 32.00 96.00 -32.00 32.00 32.00 0.00 32.00 32.00 33.00 33.00 32.00 32.00 96.00 0.00 32.00 64.00 97.00 32.00 0.00 -32.00 64.00 0.00 32.00 0.00 65.00 64.00 32.00 33.00 32.00 0.00 32.00 32.00 32.00 0.00 64.00 0.00 65.00 32.00 64.00 -32.00 32.00 32.00 32.00 -32.00 33.00 64.00 32.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 64.00 129.00 -32.00 64.00 32.00 65.00 0.00 0.00 -32.00 32.00 32.00 32.00 65.00 32.00 32.00 32.00 -32.00 32.00 0.00 225.00 -33.00 0.00 65.00 -32.00 32.00 0.00 32.00 32.00 32.00 65.00 32.00 64.00 97.00 -64.00 32.00 0.00 32.00 -32.00 32.00 64.00 32.00 0.00 4727.00 -1415.00 0.00 -1125.00 0.00 -2862.00 0.00 -64.00 161.00 -32.00 321.00 -65.00 65.00 -64.00 32.00 -161.00 64.00 0.00 32.00 -96.00 97.00 0.00 64.00 32.00 32.00 32.00 32.00 -64.00 65.00 0.00 64.00 0.00 32.00 -32.00 32.00 32.00 65.00 -97.00 32.00 -64.00 96.00 -64.00 0.00 32.00 32.00 -129.00 129.00 0.00 128.00 -64.00 129.00 -32.00 64.00 -32.00 65.00 32.00 32.00 0.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -97.00 97.00 32.00 64.00 -64.00 -32.00 -32.00 32.00 0.00 65.00 -32.00 64.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 32.00 96.00 -32.00 129.00 -32.00 32.00 96.00 129.00 -32.00 32.00 -32.00 32.00 0.00 129.00 -96.00 0.00 0.00 32.00 32.00 96.00 -32.00 65.00 0.00 32.00 -65.00 32.00 -32.00 96.00 -32.00 33.00 32.00 32.00 -32.00 32.00 32.00 32.00 0.00 64.00 -193.00 129.00 0.00 64.00 -32.00 65.00 0.00 32.00 -64.00 32.00 32.00 193.00 0.00 32.00 64.00 32.00 0.00 64.00 -32.00 33.00 32.00 64.00 65.00 -32.00 0.00 64.00 64.00 32.00 32.00 65.00 32.00 32.00 65.00 64.00 32.00 0.00 32.00 0.00 0.00 96.00 64.00 65.00 -32.00 96.00 32.00 0.00 0.00 97.00 -32.00 64.00 -32.00 0.00 -129.00 64.00 -32.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 65.00 -96.00 0.00 -65.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -96.00 0.00 -65.00 0.00 -32.00 0.00 -64.00 64.00 -32.00 33.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -65.00 65.00 65.00 32.00 0.00 32.00 -129.00 128.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 0.00 -32.00 -160.00 -64.00 0.00 96.00 -97.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -97.00 33.00 -64.00 64.00 -32.00 -32.00 32.00 -65.00 -32.00 0.00 -161.00 -64.00 -32.00 32.00 -97.00 -64.00 -96.00 32.00 32.00 -64.00 -32.00 -32.00 -32.00 -65.00 32.00 -64.00 -32.00 -32.00 32.00 -64.00 -97.00 -32.00 0.00 -33.00 33.00 -32.00 32.00 -64.00 -32.00 -64.00 -33.00 32.00 -32.00 -32.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -161.00 -64.00 -32.00 -161.00 0.00 -32.00 -96.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 -33.00 -32.00 -96.00 64.00 -129.00 -128.00 0.00 -65.00 -32.00 0.00 0.00 -128.00 32.00 -32.00 -32.00 -129.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 0.00 -129.00 0.00 -128.00 -64.00 -32.00 0.00 -65.00 0.00 -32.00 -32.00 -32.00 -129.00 -129.00 -64.00 -32.00 0.00 -96.00 32.00 -32.00 -32.00 -33.00 -32.00 -96.00 32.00 -32.00 32.00 0.00 32.00 -97.00 -32.00 -96.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 64.00 32.00 65.00 -32.00 32.00 0.00 96.00 -32.00 32.00 -225.00 32.00 -32.00 0.00 -64.00 0.00 -129.00 129.00 -96.00 -32.00 -65.00 32.00 -32.00 32.00 -129.00 65.00 -64.00 64.00 -96.00 0.00 0.00 64.00 0.00 32.00 -33.00 32.00 -96.00 0.00 -32.00 33.00 -64.00 96.00 0.00 96.00 -33.00 65.00 -160.00 128.00 -97.00 65.00 -64.00 161.00 0.00 96.00 0.00 129.00 32.00 32.00 0.00 32.00 -64.00 64.00 0.00 161.00 -97.00 64.00 0.00 97.00 -32.00 32.00 32.00 96.00 -32.00 129.00 32.00 32.00 65.00 0.00 0.00 64.00 0.00 33.00 64.00 64.00 32.00 64.00 0.00 129.00 -32.00 64.00 -97.00 0.00 -32.00 32.00 0.00 32.00 65.00 65.00 -65.00 32.00 0.00 32.00 32.00 32.00 33.00 65.00 -33.00 32.00 -32.00 64.00 -32.00 64.00 32.00 97.00 -32.00 32.00 -32.00 32.00 -32.00 129.00 -32.00 96.00 -33.00 161.00 -64.00 64.00 -32.00 64.00 96.00 33.00 129.00 128.00 0.00 65.00 -32.00 64.00 -32.00 32.00 -97.00 129.00 0.00 32.00 32.00 0.00 129.00 32.00 32.00 96.00 129.00 0.00 64.00 32.00 0.00 33.00 0.00 96.00 97.00 193.00 160.00 64.00 33.00 65.00 32.00 32.00 0.00 64.00 -32.00 32.00 0.00 129.00 -33.00 0.00 -32.00 -32.00 -257.00 -225.00 -64.00 -161.00 -65.00 -97.00 -160.00 -128.00 -161.00 -65.00 -97.00 -32.00 -289.00 -96.00 -96.00 -97.00 -129.00 -32.00 -97.00 -32.00 -64.00 32.00 -64.00 65.00 -64.00 32.00 -65.00 0.00 -128.00 0.00 -129.00 -32.00 -32.00 -97.00 -32.00 -128.00 -64.00 -97.00 -129.00 -161.00 -32.00 -161.00 -32.00 -96.00 -129.00 -129.00 0.00 -96.00 -97.00 -225.00 -32.00 -64.00 -96.00 -97.00 -97.00 -96.00 -64.00 0.00 -64.00 0.00 -64.00 -32.00 -33.00 -33.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 -64.00 -129.00 -64.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 -64.00 -32.00 -32.00 -129.00 -33.00 0.00 -96.00 -64.00 0.00 -64.00 -32.00 -129.00 0.00 -64.00 -97.00 -65.00 -64.00 -64.00 32.00 0.00 -32.00 -64.00 -64.00 -32.00 -65.00 -65.00 0.00 -32.00 -64.00 -96.00 -129.00 -33.00 0.00 0.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -33.00 -32.00 -64.00 -129.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 -64.00 -64.00 32.00 -97.00 -65.00 -32.00 -96.00 0.00 -32.00 65.00 -32.00 -33.00 -97.00 -32.00 0.00 0.00 -96.00 65.00 -33.00 0.00 -96.00 32.00 -32.00 96.00 64.00 0.00 -32.00 65.00 32.00 128.00 0.00 0.00 32.00 32.00 32.00 32.00 33.00 33.00 64.00 64.00 -32.00 0.00 -32.00 32.00 -33.00 96.00 33.00 33.00 -33.00 -33.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 97.00 0.00 0.00 -32.00 32.00 32.00 64.00 -32.00 0.00 -65.00 32.00 0.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 -32.00 0.00 -33.00 64.00 0.00 0.00 -64.00 -64.00 -64.00 -32.00 -32.00 0.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -97.00 32.00 -32.00 32.00 0.00 32.00 -64.00 0.00 -65.00 32.00 -32.00 33.00 32.00 32.00 -64.00 -32.00 0.00 0.00 -64.00 128.00 -65.00 32.00 -32.00 65.00 -32.00 32.00 -96.00 32.00 0.00 0.00 -33.00 64.00 -32.00 -32.00 -96.00 32.00 -32.00 32.00 -32.00 0.00 -129.00 32.00 -32.00 -160.00 -97.00 -32.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 -96.00 0.00 -33.00 64.00 -32.00 32.00 -64.00 -64.00 0.00 -32.00 -64.00 0.00 -97.00 64.00 -32.00 -32.00 -96.00 32.00 -65.00 0.00 -32.00 -64.00 -32.00 -64.00 0.00 -65.00 -64.00 -32.00 -65.00 -32.00 -64.00 -96.00 -129.00 0.00 -64.00 -33.00 -64.00 -32.00 -32.00 0.00 -33.00 32.00 0.00 0.00 -96.00 0.00 -32.00 0.00 -32.00 -96.00 -290.00 -97.00 -32.00 -32.00 -64.00 -96.00 -32.00 -97.00 -65.00 -64.00 -96.00 0.00 -129.00 0.00 -128.00 0.00 -129.00 -64.00 -128.00 -64.00 -65.00 0.00 -161.00 -65.00 -160.00 32.00 -193.00 -32.00 -97.00 32.00 -96.00 33.00 -64.00 0.00 -33.00 32.00 -32.00 -32.00 -64.00 -33.00 -129.00 -32.00 -32.00 -96.00 -129.00 -97.00 65.00 -64.00 0.00 0.00 -225.00 -64.00 -97.00 32.00 -193.00 32.00 -192.00 -96.00 -451.00 32.00 -64.00 32.00 -96.00 128.00 -193.00 161.00 -129.00 32.00 -32.00 0.00 -193.00 -32.00 -32.00 -64.00 -65.00 -32.00 -128.00 64.00 -225.00 97.00 -97.00 32.00 -128.00 0.00 -65.00 -65.00 -96.00 -64.00 -97.00 -32.00 -64.00 32.00 -64.00 -32.00 -32.00 0.00 -65.00 32.00 -96.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -161.00 0.00 -32.00 0.00 -97.00 -193.00 -32.00 -257.00 -161.00 -386.00 -96.00 -482.00 -64.00 -33.00 -32.00 -96.00 32.00 -64.00 0.00 -33.00 -65.00 -160.00 -32.00 -32.00 -32.00 0.00 -129.00 -65.00 -96.00 -96.00 -96.00 -65.00 -65.00 -64.00 -32.00 -128.00 -64.00 -33.00 -32.00 -64.00 -97.00 -129.00 -128.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 -129.00 128.00 -129.00 32.00 -64.00 33.00 -32.00 128.00 -96.00 32.00 -65.00 -32.00 -514.00 129.00 -290.00 32.00 -160.00 -32.00 -161.00 -64.00 -64.00 -33.00 0.00 -96.00 -65.00 -322.00 -96.00 0.00 -32.00 -64.00 -97.00 -64.00 0.00 -386.00 -64.00 -129.00 -32.00 -160.00 64.00 -193.00 32.00 -225.00 -128.00 -65.00 -97.00 -96.00 -96.00 -64.00 -65.00 -65.00 -128.00 -32.00 -97.00 0.00 -96.00 0.00 -65.00 -96.00 0.00 -33.00 -32.00 -128.00 0.00 -322.00 97.00 -96.00 32.00 -129.00 -64.00 -257.00 -161.00 -32.00 -64.00 -161.00 -161.00 0.00 -32.00 32.00 -97.00 -32.00 -128.00 -96.00 -322.00 0.00 -64.00 128.00 -161.00 0.00 -96.00 -64.00 -33.00 -161.00 -32.00 -257.00 32.00 -450.00 97.00 -290.00 96.00 -160.00 32.00 -193.00 0.00 -258.00 0.00 -225.00 -96.00 -160.00 -64.00 -129.00 -32.00 -322.00 -129.00 -96.00 -64.00 -32.00 32.00 -64.00 -64.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -33.00 -64.00 -32.00 0.00 -32.00 -65.00 0.00 -32.00 -32.00 32.00 -64.00 33.00 -97.00 0.00 -64.00 32.00 -65.00 0.00 -64.00 0.00 -32.00 32.00 32.00 32.00 0.00 0.00 -96.00 96.00 -65.00 0.00 -64.00 65.00 -64.00 32.00 -64.00 0.00 -65.00 -32.00 -64.00 32.00 0.00 0.00 -64.00 -64.00 -65.00 0.00 -32.00 64.00 -64.00 32.00 0.00 -32.00 -65.00 -64.00 -32.00 0.00 -96.00 32.00 -32.00 0.00 -32.00 -65.00 0.00 0.00 -33.00 0.00 -32.00 -32.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 -160.00 -97.00 -33.00 -64.00 -64.00 -129.00 0.00 -289.00 -161.00 -65.00 -32.00 -64.00 -64.00 -96.00 -32.00 -97.00 -161.00 -161.00 -64.00 -128.00 -193.00 -161.00 -97.00 -96.00 32.00 -65.00 65.00 -128.00 32.00 -97.00 0.00 -64.00 0.00 -193.00 0.00 -96.00 -129.00 -354.00 32.00 -322.00 -96.00 -64.00 -32.00 -64.00 32.00 -97.00 64.00 -64.00 161.00 -161.00 64.00 -96.00 32.00 32.00z\"\n          },\n          ap: {\n            name: \"AP\",\n            path: \"M96286.00 15497.00l353.00 -32.00 225.00 -128.00 290.00 96.00 -32.00 418.00 161.00 193.00 257.00 -64.00 804.00 611.00 1157.00 160.00 900.00 -257.00 65.00 -32.00 64.00 32.00 32.00 -64.00 64.00 0.00 33.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 64.00 0.00 0.00 64.00 65.00 32.00 32.00 -96.00 32.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 -64.00 64.00 0.00 32.00 32.00 33.00 -32.00 32.00 32.00 32.00 0.00 96.00 -32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 96.00 -33.00 33.00 -64.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 33.00 0.00 64.00 0.00 64.00 0.00 32.00 32.00 -32.00 0.00 -64.00 32.00 64.00 32.00 32.00 -32.00 33.00 64.00 32.00 -32.00 -32.00 64.00 -65.00 33.00 32.00 64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 64.00 0.00 33.00 -32.00 96.00 32.00 64.00 0.00 32.00 65.00 33.00 0.00 0.00 -33.00 96.00 0.00 0.00 33.00 32.00 -33.00 0.00 97.00 97.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 64.00 0.00 65.00 64.00 32.00 0.00 64.00 0.00 65.00 65.00 96.00 0.00 64.00 -33.00 32.00 0.00 65.00 33.00 64.00 -33.00 64.00 33.00 65.00 -33.00 0.00 -32.00 -33.00 -32.00 -32.00 -64.00 32.00 0.00 129.00 64.00 32.00 -64.00 32.00 0.00 33.00 -32.00 64.00 0.00 32.00 -65.00 64.00 0.00 32.00 -32.00 33.00 -32.00 32.00 -64.00 0.00 -65.00 64.00 -32.00 64.00 0.00 33.00 64.00 32.00 -32.00 32.00 65.00 0.00 64.00 32.00 32.00 64.00 32.00 65.00 0.00 0.00 65.00 96.00 32.00 0.00 64.00 64.00 32.00 65.00 -32.00 32.00 64.00 -129.00 97.00 -32.00 -32.00 0.00 96.00 -32.00 32.00 -64.00 0.00 32.00 32.00 -32.00 65.00 -33.00 32.00 0.00 32.00 33.00 32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 97.00 0.00 64.00 -32.00 161.00 -32.00 193.00 0.00 96.00 0.00 65.00 64.00 0.00 32.00 64.00 64.00 32.00 32.00 161.00 0.00 128.00 65.00 193.00 -32.00 32.00 -97.00 -32.00 -32.00 32.00 0.00 33.00 32.00 0.00 -32.00 64.00 0.00 32.00 32.00 32.00 -32.00 32.00 -96.00 33.00 -33.00 0.00 -64.00 64.00 -32.00 0.00 -96.00 96.00 0.00 0.00 -33.00 -32.00 -64.00 97.00 0.00 0.00 -32.00 32.00 0.00 160.00 -64.00 65.00 -65.00 32.00 32.00 0.00 -64.00 32.00 32.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -33.00 258.00 -192.00 32.00 -65.00 -32.00 -32.00 96.00 -96.00 0.00 -65.00 32.00 -32.00 32.00 -32.00 65.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 96.00 0.00 0.00 -97.00 97.00 -96.00 64.00 0.00 0.00 -65.00 -32.00 -96.00 64.00 -32.00 32.00 0.00 0.00 -33.00 32.00 -64.00 33.00 0.00 -33.00 -96.00 -96.00 -65.00 32.00 -64.00 -64.00 -64.00 64.00 -64.00 32.00 -33.00 32.00 33.00 65.00 -161.00 32.00 -65.00 64.00 -128.00 65.00 -129.00 0.00 -32.00 32.00 -64.00 -32.00 -65.00 32.00 -64.00 96.00 -161.00 32.00 -96.00 129.00 -193.00 64.00 -64.00 32.00 32.00 32.00 0.00 65.00 -97.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 0.00 32.00 -65.00 64.00 -128.00 0.00 -65.00 0.00 -32.00 32.00 -96.00 32.00 -32.00 65.00 -129.00 64.00 -129.00 -96.00 -96.00 32.00 -64.00 32.00 -33.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 33.00 -64.00 32.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 32.00 -65.00 64.00 -32.00 65.00 32.00 -32.00 -161.00 64.00 -64.00 0.00 -64.00 64.00 -32.00 64.00 -32.00 0.00 -33.00 33.00 -32.00 32.00 32.00 32.00 65.00 64.00 -32.00 32.00 -33.00 129.00 -193.00 32.00 -32.00 0.00 -64.00 161.00 -193.00 32.00 -96.00 193.00 -386.00 64.00 -65.00 32.00 -128.00 33.00 -32.00 64.00 -65.00 -32.00 -32.00 96.00 -32.00 161.00 -354.00 96.00 -96.00 33.00 -64.00 32.00 -225.00 32.00 -33.00 32.00 -32.00 32.00 -161.00 65.00 -64.00 128.00 32.00 32.00 -96.00 -32.00 -129.00 32.00 -64.00 65.00 -32.00 32.00 -32.00 64.00 0.00 64.00 -32.00 65.00 -97.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 96.00 -33.00 33.00 -64.00 0.00 -32.00 96.00 -64.00 64.00 -97.00 33.00 -96.00 0.00 -97.00 0.00 -64.00 32.00 -64.00 96.00 -97.00 32.00 -32.00 161.00 -32.00 64.00 -32.00 65.00 -65.00 96.00 -32.00 97.00 -64.00 0.00 -97.00 0.00 -64.00 32.00 -64.00 96.00 -257.00 64.00 -129.00 33.00 -128.00 0.00 -161.00 32.00 -33.00 32.00 -128.00 32.00 -418.00 97.00 -354.00 32.00 -32.00 32.00 -32.00 128.00 -32.00 65.00 64.00 64.00 0.00 161.00 161.00 128.00 96.00 386.00 386.00 450.00 483.00 0.00 32.00 97.00 128.00 32.00 97.00 64.00 96.00 97.00 289.00 0.00 33.00 32.00 32.00 0.00 193.00 32.00 96.00 0.00 129.00 0.00 96.00 32.00 32.00 225.00 129.00 129.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 0.00 193.00 -32.00 97.00 0.00 225.00 0.00 64.00 0.00 65.00 -32.00 32.00 32.00 96.00 -32.00 64.00 0.00 65.00 0.00 128.00 32.00 226.00 65.00 707.00 -65.00 161.00 0.00 -33.00 -32.00 33.00 0.00 32.00 0.00 289.00 32.00 97.00 290.00 803.00 -33.00 97.00 -32.00 64.00 0.00 97.00 0.00 64.00 32.00 129.00 97.00 96.00 0.00 64.00 -32.00 65.00 0.00 96.00 32.00 64.00 32.00 97.00 64.00 64.00 0.00 129.00 0.00 64.00 33.00 129.00 32.00 64.00 32.00 96.00 96.00 97.00 0.00 129.00 0.00 96.00 33.00 97.00 -33.00 64.00 97.00 -32.00 64.00 64.00 32.00 0.00 32.00 64.00 -32.00 65.00 0.00 64.00 65.00 32.00 32.00 64.00 0.00 258.00 64.00 32.00 96.00 96.00 0.00 65.00 33.00 32.00 0.00 193.00 0.00 32.00 0.00 32.00 32.00 64.00 32.00 193.00 -32.00 129.00 -65.00 32.00 -32.00 64.00 32.00 0.00 0.00 -32.00 33.00 0.00 32.00 0.00 96.00 -64.00 65.00 0.00 64.00 32.00 32.00 64.00 0.00 65.00 64.00 96.00 33.00 32.00 0.00 97.00 -33.00 96.00 33.00 64.00 32.00 65.00 -32.00 96.00 64.00 32.00 32.00 64.00 0.00 161.00 32.00 65.00 64.00 96.00 0.00 97.00 0.00 96.00 33.00 0.00 32.00 32.00 64.00 129.00 32.00 64.00 32.00 96.00 0.00 97.00 -32.00 32.00 -64.00 0.00 0.00 32.00 161.00 -64.00 321.00 -129.00 97.00 -32.00 257.00 -96.00 193.00 0.00 128.00 0.00 65.00 32.00 0.00 32.00 32.00 0.00 64.00 64.00 32.00 97.00 129.00 161.00 0.00 32.00 32.00 32.00 32.00 64.00 32.00 0.00 65.00 65.00 32.00 32.00 -32.00 64.00 32.00 32.00 0.00 32.00 64.00 97.00 0.00 64.00 97.00 64.00 0.00 161.00 32.00 32.00 32.00 65.00 128.00 321.00 161.00 418.00 322.00 -64.00 321.00 128.00 65.00 0.00 160.00 65.00 97.00 32.00 161.00 96.00 385.00 225.00 33.00 33.00 0.00 64.00 -33.00 32.00 0.00 32.00 65.00 0.00 32.00 193.00 64.00 450.00 32.00 290.00 0.00 96.00 0.00 64.00 -32.00 225.00 32.00 65.00 -64.00 289.00 -96.00 161.00 32.00 96.00 32.00 225.00 32.00 65.00 0.00 128.00 -96.00 161.00 -33.00 97.00 -64.00 128.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 322.00 32.00 32.00 0.00 129.00 0.00 64.00 -32.00 64.00 -97.00 97.00 -32.00 0.00 -96.00 161.00 -32.00 96.00 -97.00 193.00 -96.00 64.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 64.00 32.00 0.00 0.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 65.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -33.00 386.00 -289.00 0.00 -193.00 0.00 -161.00 32.00 -64.00 32.00 -321.00 64.00 -161.00 65.00 -225.00 160.00 -32.00 32.00 -33.00 0.00 -128.00 129.00 -65.00 129.00 -96.00 193.00 -32.00 257.00 -32.00 96.00 -97.00 129.00 -96.00 289.00 -64.00 129.00 -97.00 193.00 -96.00 193.00 -97.00 96.00 -128.00 97.00 -97.00 96.00 -96.00 129.00 -354.00 257.00 -193.00 96.00 -161.00 33.00 -418.00 128.00 -64.00 0.00 -64.00 32.00 -193.00 161.00 -32.00 32.00 -97.00 129.00 0.00 32.00 -32.00 0.00 -97.00 129.00 -32.00 32.00 -64.00 96.00 -96.00 97.00 -97.00 64.00 -32.00 0.00 -96.00 64.00 -290.00 33.00 -193.00 64.00 -161.00 257.00 -64.00 129.00 -128.00 160.00 -65.00 97.00 -96.00 96.00 -32.00 33.00 -65.00 96.00 -32.00 64.00 0.00 32.00 -32.00 258.00 -225.00 225.00 -64.00 64.00 -65.00 225.00 -96.00 193.00 -161.00 161.00 -129.00 96.00 -64.00 65.00 -193.00 225.00 -128.00 128.00 -322.00 547.00 -32.00 32.00 -32.00 64.00 -32.00 33.00 0.00 32.00 0.00 128.00 -33.00 322.00 0.00 161.00 -32.00 0.00 32.00 353.00 33.00 97.00 0.00 96.00 -33.00 64.00 -64.00 97.00 -353.00 354.00 -129.00 96.00 -386.00 32.00 -32.00 -32.00 -129.00 -128.00 -64.00 32.00 -64.00 128.00 0.00 32.00 -32.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 -128.00 0.00 -33.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 161.00 -32.00 32.00 0.00 32.00 -97.00 -32.00 -128.00 32.00 -65.00 33.00 -64.00 32.00 0.00 32.00 32.00 32.00 64.00 64.00 0.00 32.00 -32.00 65.00 -96.00 32.00 -129.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 32.00 -96.00 -64.00 -161.00 0.00 -32.00 -129.00 0.00 -64.00 -64.00 -64.00 0.00 -226.00 0.00 -64.00 -33.00 -193.00 0.00 -128.00 -64.00 -129.00 0.00 -96.00 -225.00 -33.00 -32.00 -128.00 -32.00 -65.00 -65.00 -96.00 65.00 -32.00 -33.00 -32.00 -32.00 64.00 -64.00 32.00 -96.00 -32.00 -33.00 0.00 -160.00 -96.00 -97.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -33.00 64.00 0.00 32.00 0.00 32.00 -128.00 -32.00 -65.00 -64.00 -96.00 -64.00 -32.00 -65.00 -64.00 -32.00 -33.00 -64.00 65.00 -32.00 0.00 -97.00 32.00 -96.00 32.00 -64.00 0.00 -65.00 0.00 32.00 -64.00 129.00 -161.00 -64.00 -32.00 0.00 -64.00 0.00 -65.00 96.00 -161.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 -32.00 -64.00 -32.00 -64.00 0.00 -33.00 0.00 -96.00 0.00 -96.00 -32.00 -161.00 -65.00 -65.00 -160.00 0.00 -129.00 33.00 -96.00 64.00 -65.00 0.00 -64.00 -32.00 -129.00 -193.00 0.00 -32.00 0.00 -65.00 -64.00 -64.00 -64.00 -96.00 32.00 -97.00 -64.00 -64.00 128.00 -193.00 -32.00 -32.00 -64.00 -129.00 0.00 -96.00 64.00 -129.00 0.00 -129.00 -32.00 -64.00 -64.00 -64.00 -65.00 0.00 -96.00 -64.00 -64.00 -65.00 -33.00 -128.00 -353.00 -258.00 -32.00 -64.00 -33.00 -64.00 -32.00 -32.00 -96.00 -33.00 -129.00 33.00 -128.00 -33.00 -33.00 -32.00 -128.00 -353.00 -32.00 -129.00 -32.00 -161.00 0.00 -160.00 -33.00 -33.00 -96.00 -64.00 -64.00 -64.00 32.00 -193.00 -97.00 -32.00 -32.00 -65.00 0.00 -96.00 -32.00 -32.00 -32.00 -65.00 -97.00 -64.00 -64.00 -96.00 -64.00 -32.00 -32.00 -161.00 32.00 -97.00 32.00 -32.00 -97.00 -161.00 -96.00 -64.00 -32.00 -129.00 -32.00 -96.00 -97.00 -64.00 -32.00 -97.00 64.00 -96.00 0.00 -32.00 0.00 -65.00 -32.00 -128.00 65.00 -161.00 -33.00 -32.00 -64.00 -32.00 64.00 -97.00 -32.00 -32.00 65.00 -64.00 32.00 -32.00 0.00 -65.00 -32.00 -64.00 0.00 -64.00 32.00 -97.00 128.00 -161.00 32.00 -193.00 33.00 -32.00 0.00 -32.00 -97.00 -64.00 -64.00 32.00 -32.00 -32.00 -32.00 -97.00 -33.00 -64.00 -128.00 -96.00 -32.00 -97.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 -193.00 -129.00 -96.00 -64.00 -65.00 -129.00 -64.00 -64.00 -257.00 -129.00 -32.00 -32.00 -225.00 -160.00 -32.00 -97.00 32.00 -32.00 0.00 -129.00 -32.00 -32.00 -33.00 -32.00 -32.00 -97.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 0.00 0.00 -65.00 -64.00 -64.00 -32.00 -32.00 0.00 -161.00 0.00 -64.00 0.00 -64.00 64.00 -65.00 32.00 0.00 64.00 32.00 65.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -96.00 -32.00 -65.00 -64.00 -64.00 -33.00 -96.00 0.00 -97.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -161.00 -32.00 -257.00 129.00 -64.00 0.00 -32.00 -64.00 0.00 -33.00 64.00 -64.00 32.00 -96.00 -32.00 -65.00 -96.00 -32.00 -33.00 0.00 0.00 -128.00 65.00 -33.00 64.00 -32.00 -32.00 -96.00 -32.00 -32.00 -97.00 0.00 0.00 32.00 -32.00 32.00 -96.00 -96.00 -193.00 32.00 -33.00 64.00 -64.00 0.00 -32.00 -64.00 64.00 -32.00 32.00 -33.00 -32.00 -96.00 32.00 -64.00 -32.00 -65.00 -64.00 32.00 -32.00 129.00 -64.00 0.00 0.00 -32.00 -33.00 -32.00 -64.00 64.00 -32.00 -32.00 -32.00 -64.00 96.00 -97.00 0.00 -32.00 -96.00 -64.00 -32.00 32.00 32.00 64.00 0.00 32.00 -64.00 65.00 0.00 32.00 -129.00 -32.00 -32.00 -65.00 -32.00 65.00 -33.00 0.00 -32.00 -33.00 -32.00 -64.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 65.00 64.00 32.00 33.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 -96.00 32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 -64.00 32.00 -97.00 -32.00 -32.00 32.00 0.00 -32.00 32.00 -128.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -97.00 0.00 0.00 65.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 -64.00 -32.00 0.00 -64.00 -32.00 -33.00 32.00 0.00 -64.00 -64.00 -33.00 -32.00 65.00 -64.00 -32.00 -65.00 32.00 0.00 -65.00 0.00 -96.00 -32.00 -64.00 -64.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 32.00 32.00 -65.00 0.00 0.00 -32.00 33.00 -64.00 -33.00 -32.00 33.00 -64.00 -65.00 -129.00 -96.00 0.00 0.00 -32.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 0.00 -32.00 33.00 0.00 0.00 -32.00 -65.00 -65.00 32.00 -32.00 -64.00 0.00 0.00 -64.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 0.00 -65.00 -32.00 0.00 -32.00 65.00 0.00 96.00 -32.00 -32.00 -32.00 -96.00 -65.00 -33.00 -64.00 -32.00 0.00 -64.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 32.00 -32.00 32.00 -32.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 32.00 -32.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 -128.00 -64.00 -32.00 97.00 -65.00 -65.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 -129.00 -32.00 -32.00 0.00 0.00 32.00 -64.00 -32.00 0.00 32.00 -65.00 33.00 -32.00 -33.00 -32.00 0.00 -64.00 -32.00 -33.00 -32.00 -32.00 -32.00 -161.00 -32.00 0.00 -32.00 -64.00 32.00 -96.00 -32.00 -32.00 32.00 -65.00 -32.00 -96.00 64.00 -32.00 0.00 -97.00 32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 32.00 -97.00 0.00 -129.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 97.00 -65.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -32.00 -32.00 0.00 -129.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -161.00 32.00 0.00 32.00 -64.00 0.00 -33.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 0.00 32.00 -64.00 -64.00 -33.00 -32.00 -32.00 -33.00 -32.00 -32.00 -64.00 -32.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 -32.00 -129.00 64.00 -32.00 -32.00 -64.00 32.00 -65.00 -32.00 -32.00 32.00 0.00 0.00 -64.00 65.00 -32.00 32.00 -32.00 0.00 -33.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 -97.00 -96.00 -32.00 -97.00 0.00 -96.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 32.00 0.00 -32.00 -96.00 -32.00 -65.00 -257.00 -289.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 32.00 -33.00z\"\n          },\n          to: {\n            name: \"TO\",\n            path: \"M115835.00 83244.00l64.00 -128.00 0.00 -129.00 65.00 -128.00 32.00 -97.00 0.00 -64.00 32.00 -65.00 32.00 -32.00 64.00 -64.00 65.00 -32.00 32.00 -193.00 32.00 -129.00 -32.00 -96.00 0.00 -64.00 -32.00 -129.00 32.00 -96.00 0.00 -65.00 64.00 -32.00 32.00 -96.00 97.00 -65.00 0.00 -32.00 32.00 -64.00 0.00 -129.00 -32.00 -64.00 0.00 -129.00 -32.00 -96.00 32.00 -64.00 -65.00 -161.00 65.00 -97.00 96.00 -96.00 0.00 -65.00 -32.00 -64.00 -64.00 -32.00 0.00 -129.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -65.00 97.00 -161.00 -32.00 -96.00 0.00 -64.00 -33.00 -65.00 0.00 -96.00 -96.00 -64.00 0.00 -65.00 96.00 -96.00 65.00 -97.00 32.00 -64.00 64.00 0.00 32.00 0.00 33.00 -32.00 32.00 -97.00 64.00 -96.00 -32.00 -97.00 32.00 -96.00 0.00 -96.00 96.00 -33.00 33.00 0.00 32.00 -32.00 -32.00 -96.00 64.00 -322.00 128.00 -64.00 33.00 -64.00 96.00 -65.00 32.00 -32.00 -32.00 -96.00 0.00 -32.00 97.00 -225.00 32.00 -161.00 64.00 -161.00 -32.00 -225.00 -32.00 0.00 0.00 -32.00 32.00 -161.00 64.00 -129.00 65.00 -64.00 32.00 -96.00 64.00 -65.00 129.00 -64.00 64.00 -64.00 32.00 -97.00 0.00 -128.00 64.00 -97.00 0.00 -64.00 65.00 -97.00 0.00 -128.00 96.00 -193.00 97.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -96.00 32.00 -97.00 32.00 -161.00 193.00 -225.00 0.00 -64.00 32.00 -32.00 0.00 -97.00 65.00 -96.00 0.00 -129.00 64.00 -32.00 32.00 -64.00 32.00 -65.00 0.00 -96.00 32.00 -64.00 65.00 -65.00 -33.00 -96.00 -64.00 -97.00 0.00 -32.00 32.00 0.00 0.00 -64.00 0.00 -64.00 65.00 -225.00 128.00 -129.00 32.00 -129.00 0.00 -32.00 0.00 -128.00 0.00 -33.00 33.00 -128.00 0.00 -32.00 64.00 -65.00 64.00 -64.00 97.00 -32.00 32.00 -193.00 128.00 0.00 129.00 -161.00 161.00 -128.00 0.00 -33.00 0.00 -64.00 32.00 -32.00 129.00 -193.00 64.00 -128.00 32.00 -97.00 0.00 -64.00 32.00 -97.00 257.00 -225.00 33.00 -96.00 64.00 -129.00 64.00 -64.00 64.00 -97.00 65.00 -32.00 225.00 -193.00 193.00 -64.00 128.00 0.00 97.00 -32.00 32.00 -65.00 96.00 -128.00 129.00 -193.00 225.00 -322.00 64.00 -96.00 33.00 -129.00 64.00 -64.00 32.00 -96.00 193.00 -161.00 64.00 -97.00 0.00 -64.00 32.00 -289.00 33.00 -65.00 32.00 -96.00 128.00 -193.00 33.00 0.00 128.00 -64.00 97.00 -65.00 64.00 -64.00 64.00 -161.00 32.00 -96.00 33.00 -257.00 96.00 -193.00 64.00 -129.00 32.00 -64.00 33.00 -97.00 32.00 -160.00 -32.00 -97.00 32.00 -64.00 0.00 -97.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 -64.00 0.00 -161.00 0.00 -64.00 -32.00 -161.00 65.00 -97.00 0.00 -128.00 32.00 -129.00 -32.00 -225.00 0.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 -64.00 0.00 -32.00 -32.00 -65.00 -65.00 -32.00 -128.00 -32.00 -97.00 -64.00 -96.00 -129.00 -97.00 -64.00 -160.00 -129.00 -129.00 -64.00 -64.00 -64.00 -32.00 -65.00 -97.00 -225.00 0.00 -32.00 -96.00 -193.00 0.00 -96.00 32.00 -257.00 64.00 -33.00 64.00 -128.00 129.00 -161.00 193.00 -193.00 64.00 -64.00 0.00 -32.00 65.00 -97.00 96.00 -128.00 96.00 -129.00 33.00 -129.00 96.00 -160.00 32.00 -97.00 -32.00 -128.00 -32.00 -290.00 0.00 -289.00 0.00 -32.00 0.00 -129.00 0.00 -64.00 -64.00 -225.00 -33.00 -33.00 0.00 -64.00 0.00 -96.00 33.00 -65.00 96.00 -96.00 32.00 -64.00 32.00 0.00 97.00 -33.00 193.00 -96.00 128.00 -129.00 193.00 -128.00 65.00 -65.00 64.00 -96.00 225.00 0.00 129.00 -64.00 64.00 -33.00 64.00 -32.00 193.00 -32.00 129.00 0.00 32.00 0.00 64.00 0.00 64.00 0.00 161.00 -64.00 32.00 0.00 65.00 -64.00 96.00 -161.00 257.00 -64.00 97.00 -65.00 32.00 -64.00 32.00 -64.00 0.00 -129.00 -64.00 -193.00 0.00 -64.00 32.00 -97.00 64.00 -64.00 0.00 -96.00 65.00 -97.00 32.00 -32.00 64.00 -129.00 225.00 -193.00 64.00 -32.00 97.00 -96.00 32.00 -65.00 64.00 -96.00 32.00 -32.00 258.00 0.00 96.00 32.00 129.00 96.00 64.00 33.00 32.00 -33.00 32.00 -128.00 -32.00 -97.00 -32.00 -32.00 -64.00 -32.00 -64.00 -32.00 -33.00 -64.00 0.00 -32.00 33.00 -33.00 -33.00 -64.00 -32.00 -161.00 -32.00 -96.00 0.00 -97.00 0.00 -96.00 64.00 -64.00 65.00 -65.00 64.00 -32.00 129.00 32.00 160.00 -64.00 129.00 -96.00 64.00 -65.00 32.00 -96.00 0.00 -65.00 -96.00 -128.00 -129.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 -64.00 65.00 -97.00 64.00 -64.00 64.00 -32.00 193.00 -32.00 97.00 -64.00 0.00 -97.00 0.00 -32.00 -65.00 -97.00 0.00 -32.00 -128.00 -128.00 -65.00 -97.00 -32.00 -32.00 0.00 -32.00 -32.00 -225.00 0.00 -32.00 0.00 -129.00 32.00 -64.00 32.00 -65.00 65.00 -32.00 225.00 32.00 96.00 -32.00 32.00 0.00 33.00 -32.00 64.00 -32.00 64.00 -96.00 97.00 -193.00 32.00 -65.00 0.00 -96.00 0.00 -64.00 -193.00 -129.00 -64.00 -32.00 -33.00 -32.00 -64.00 -65.00 -96.00 0.00 -161.00 -32.00 -64.00 -32.00 -65.00 -32.00 -32.00 -32.00 -96.00 -129.00 -33.00 -32.00 0.00 32.00 0.00 -64.00 -64.00 -97.00 -32.00 -64.00 0.00 -64.00 0.00 -32.00 -64.00 -65.00 -32.00 -32.00 -33.00 -64.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 -96.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -96.00 32.00 -65.00 0.00 -225.00 -32.00 -160.00 0.00 -65.00 0.00 -128.00 -32.00 -65.00 -129.00 -32.00 0.00 -128.00 -32.00 -193.00 0.00 0.00 -32.00 -65.00 0.00 -64.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 97.00 32.00 32.00 -32.00 32.00 -129.00 32.00 -32.00 65.00 -32.00 128.00 32.00 64.00 32.00 33.00 64.00 96.00 32.00 32.00 -32.00 97.00 -96.00 64.00 -161.00 0.00 -96.00 32.00 -97.00 0.00 -64.00 97.00 -129.00 96.00 -64.00 161.00 32.00 96.00 -64.00 483.00 -65.00 64.00 33.00 161.00 128.00 128.00 0.00 97.00 64.00 128.00 65.00 65.00 32.00 32.00 0.00 64.00 64.00 97.00 32.00 64.00 33.00 321.00 32.00 129.00 32.00 161.00 -32.00 161.00 -161.00 32.00 0.00 64.00 0.00 161.00 32.00 96.00 0.00 32.00 0.00 226.00 97.00 32.00 64.00 32.00 96.00 0.00 33.00 0.00 32.00 0.00 160.00 128.00 161.00 65.00 64.00 160.00 0.00 129.00 -32.00 129.00 0.00 257.00 161.00 96.00 32.00 225.00 193.00 193.00 65.00 65.00 -33.00 32.00 0.00 289.00 290.00 65.00 193.00 0.00 160.00 32.00 129.00 0.00 64.00 0.00 129.00 -65.00 225.00 -32.00 96.00 65.00 129.00 64.00 64.00 128.00 290.00 33.00 161.00 32.00 32.00 0.00 321.00 -97.00 290.00 65.00 96.00 32.00 129.00 0.00 32.00 0.00 96.00 -32.00 129.00 32.00 129.00 64.00 289.00 64.00 161.00 65.00 96.00 32.00 97.00 0.00 96.00 0.00 64.00 -129.00 258.00 0.00 32.00 -32.00 160.00 -32.00 129.00 -32.00 129.00 -32.00 32.00 96.00 257.00 -32.00 64.00 -32.00 0.00 -129.00 193.00 0.00 65.00 -32.00 32.00 0.00 128.00 0.00 97.00 0.00 32.00 -64.00 96.00 -97.00 193.00 32.00 97.00 -32.00 32.00 0.00 64.00 0.00 225.00 -96.00 161.00 -65.00 193.00 0.00 32.00 33.00 0.00 0.00 32.00 64.00 161.00 32.00 97.00 -32.00 64.00 -97.00 193.00 0.00 128.00 -32.00 65.00 -32.00 96.00 0.00 32.00 -32.00 65.00 -129.00 128.00 -64.00 32.00 -129.00 161.00 -32.00 129.00 -96.00 128.00 -64.00 33.00 -65.00 -33.00 -96.00 -32.00 -65.00 0.00 -32.00 32.00 -160.00 97.00 0.00 32.00 0.00 97.00 0.00 64.00 64.00 64.00 193.00 97.00 96.00 96.00 97.00 225.00 32.00 0.00 32.00 0.00 64.00 0.00 97.00 -161.00 64.00 -32.00 225.00 0.00 32.00 32.00 193.00 129.00 65.00 129.00 32.00 64.00 -32.00 161.00 -129.00 64.00 0.00 32.00 -257.00 97.00 -65.00 32.00 -64.00 128.00 129.00 32.00 64.00 -32.00 96.00 -32.00 65.00 0.00 64.00 0.00 0.00 64.00 32.00 161.00 65.00 65.00 0.00 160.00 32.00 32.00 32.00 0.00 32.00 -64.00 129.00 0.00 32.00 32.00 32.00 32.00 0.00 33.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 64.00 32.00 32.00 0.00 33.00 32.00 -33.00 65.00 97.00 64.00 0.00 96.00 -32.00 65.00 0.00 32.00 32.00 64.00 64.00 32.00 64.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 -64.00 0.00 -33.00 64.00 0.00 32.00 0.00 33.00 65.00 64.00 32.00 64.00 64.00 32.00 32.00 -32.00 33.00 -32.00 0.00 -64.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 161.00 32.00 0.00 64.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 33.00 33.00 -33.00 32.00 0.00 64.00 33.00 0.00 32.00 32.00 32.00 -32.00 64.00 32.00 32.00 -32.00 0.00 32.00 0.00 32.00 65.00 0.00 0.00 33.00 -33.00 64.00 33.00 -32.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 96.00 32.00 65.00 -32.00 32.00 64.00 0.00 -64.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 32.00 32.00 32.00 33.00 33.00 64.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 64.00 -32.00 0.00 64.00 32.00 0.00 0.00 32.00 0.00 32.00 65.00 65.00 32.00 32.00 0.00 32.00 64.00 0.00 0.00 96.00 0.00 65.00 64.00 -32.00 33.00 0.00 32.00 96.00 32.00 -32.00 -32.00 96.00 32.00 32.00 32.00 -32.00 0.00 32.00 0.00 33.00 -32.00 0.00 64.00 64.00 -64.00 32.00 129.00 0.00 96.00 97.00 0.00 96.00 64.00 32.00 -32.00 32.00 65.00 32.00 0.00 33.00 96.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 -97.00 32.00 33.00 0.00 -33.00 96.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 0.00 32.00 -65.00 64.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 0.00 33.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 0.00 -65.00 64.00 -32.00 0.00 32.00 32.00 33.00 33.00 -33.00 32.00 -32.00 32.00 65.00 32.00 0.00 0.00 -33.00 32.00 0.00 97.00 -32.00 32.00 -32.00 32.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 32.00 32.00 0.00 32.00 -96.00 32.00 32.00 32.00 -32.00 32.00 0.00 33.00 0.00 32.00 -33.00 32.00 0.00 32.00 -32.00 64.00 32.00 32.00 0.00 65.00 0.00 32.00 -64.00 32.00 0.00 64.00 32.00 33.00 0.00 64.00 -64.00 96.00 0.00 65.00 32.00 0.00 32.00 64.00 0.00 32.00 32.00 64.00 33.00 0.00 32.00 0.00 64.00 65.00 32.00 128.00 64.00 129.00 97.00 32.00 64.00 0.00 32.00 32.00 33.00 0.00 32.00 0.00 128.00 0.00 65.00 65.00 64.00 0.00 64.00 -33.00 32.00 -64.00 0.00 -32.00 65.00 0.00 64.00 -97.00 257.00 0.00 32.00 0.00 33.00 65.00 32.00 64.00 64.00 -32.00 32.00 -64.00 64.00 -33.00 97.00 33.00 161.00 -65.00 96.00 -64.00 64.00 -64.00 65.00 -65.00 32.00 -96.00 0.00 -64.00 32.00 -65.00 0.00 -128.00 -64.00 -129.00 64.00 -64.00 32.00 -65.00 32.00 -96.00 33.00 -32.00 64.00 -32.00 32.00 -32.00 64.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -97.00 -32.00 0.00 32.00 0.00 32.00 -32.00 0.00 32.00 65.00 -64.00 32.00 -32.00 -32.00 32.00 96.00 0.00 32.00 0.00 32.00 -32.00 65.00 32.00 32.00 -96.00 96.00 -33.00 32.00 -32.00 -64.00 -32.00 32.00 0.00 32.00 -64.00 0.00 0.00 65.00 32.00 64.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 33.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 0.00 64.00 -32.00 -32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 32.00 0.00 0.00 32.00 33.00 -32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 33.00 -32.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 65.00 32.00 32.00 0.00 -32.00 33.00 64.00 0.00 -32.00 32.00 32.00 32.00 32.00 64.00 -32.00 32.00 -32.00 0.00 -65.00 65.00 0.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 97.00 32.00 32.00 0.00 64.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 97.00 -32.00 32.00 0.00 96.00 -33.00 32.00 33.00 33.00 -33.00 32.00 -32.00 0.00 0.00 32.00 32.00 32.00 -32.00 32.00 -96.00 0.00 -65.00 65.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 65.00 -64.00 32.00 0.00 32.00 -64.00 32.00 0.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 33.00 32.00 64.00 0.00 32.00 -32.00 32.00 0.00 32.00 -64.00 0.00 0.00 -32.00 0.00 32.00 -32.00 65.00 0.00 32.00 -97.00 0.00 -32.00 32.00 64.00 32.00 32.00 -32.00 0.00 32.00 33.00 0.00 0.00 32.00 -65.00 32.00 0.00 33.00 0.00 32.00 -32.00 0.00 32.00 32.00 -64.00 0.00 0.00 32.00 96.00 64.00 0.00 -32.00 65.00 0.00 64.00 32.00 64.00 -32.00 -32.00 65.00 32.00 0.00 32.00 0.00 0.00 -33.00 65.00 0.00 64.00 33.00 161.00 -65.00 96.00 0.00 32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 64.00 -32.00 0.00 32.00 65.00 32.00 0.00 65.00 0.00 32.00 -32.00 32.00 -33.00 0.00 33.00 0.00 64.00 32.00 0.00 129.00 32.00 32.00 32.00 32.00 64.00 -32.00 97.00 0.00 32.00 64.00 32.00 64.00 -32.00 0.00 32.00 33.00 65.00 -33.00 64.00 -32.00 64.00 65.00 97.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -64.00 32.00 0.00 32.00 0.00 33.00 32.00 64.00 97.00 -32.00 32.00 0.00 0.00 64.00 64.00 96.00 64.00 65.00 32.00 32.00 33.00 32.00 64.00 97.00 -32.00 96.00 0.00 32.00 96.00 32.00 0.00 -32.00 32.00 -32.00 65.00 -32.00 128.00 0.00 97.00 -32.00 32.00 0.00 64.00 64.00 97.00 32.00 -32.00 32.00 -33.00 65.00 0.00 64.00 33.00 32.00 64.00 64.00 64.00 0.00 64.00 33.00 33.00 64.00 96.00 -32.00 64.00 32.00 0.00 64.00 -64.00 64.00 0.00 33.00 64.00 96.00 0.00 32.00 97.00 32.00 0.00 33.00 -193.00 128.00 -64.00 32.00 0.00 97.00 -65.00 96.00 0.00 129.00 -32.00 64.00 -193.00 129.00 32.00 128.00 0.00 65.00 33.00 32.00 0.00 32.00 64.00 0.00 161.00 0.00 96.00 64.00 32.00 65.00 -32.00 32.00 -32.00 96.00 0.00 32.00 96.00 33.00 97.00 0.00 128.00 -65.00 33.00 65.00 64.00 64.00 -32.00 96.00 32.00 0.00 64.00 65.00 -64.00 32.00 0.00 32.00 96.00 32.00 0.00 97.00 -32.00 32.00 0.00 96.00 65.00 64.00 -65.00 65.00 32.00 128.00 -32.00 65.00 97.00 128.00 0.00 161.00 32.00 32.00 32.00 97.00 96.00 32.00 33.00 0.00 160.00 193.00 65.00 225.00 96.00 32.00 97.00 64.00 64.00 -64.00 64.00 32.00 129.00 0.00 161.00 -32.00 128.00 -32.00 64.00 32.00 33.00 32.00 32.00 32.00 96.00 129.00 129.00 -32.00 193.00 32.00 225.00 -161.00 64.00 -32.00 32.00 0.00 32.00 32.00 33.00 289.00 64.00 97.00 32.00 -32.00 97.00 -32.00 128.00 64.00 97.00 -32.00 225.00 -65.00 193.00 97.00 225.00 32.00 225.00 -129.00 64.00 -64.00 32.00 -96.00 -32.00 -97.00 -32.00 -64.00 64.00 -97.00 32.00 65.00 97.00 0.00 0.00 64.00 -32.00 32.00 32.00 129.00 0.00 128.00 0.00 97.00 0.00 32.00 -32.00 32.00 -32.00 65.00 -65.00 160.00 -64.00 129.00 -64.00 32.00 -193.00 0.00 -65.00 32.00 -64.00 32.00 -32.00 0.00 0.00 33.00 0.00 32.00 -32.00 64.00 64.00 96.00 -32.00 129.00 -32.00 0.00 -161.00 0.00 -96.00 64.00 -65.00 65.00 -32.00 64.00 -193.00 129.00 -64.00 32.00 -32.00 96.00 -65.00 0.00 -64.00 32.00 -96.00 0.00 -33.00 32.00 -32.00 129.00 -128.00 32.00 0.00 97.00 -32.00 32.00 -65.00 32.00 -96.00 -32.00 -97.00 96.00 -96.00 0.00 -97.00 33.00 -32.00 -33.00 -96.00 33.00 0.00 32.00 -65.00 32.00 -64.00 32.00 0.00 32.00 32.00 32.00 65.00 97.00 32.00 32.00 0.00 32.00 -32.00 129.00 -97.00 64.00 -193.00 129.00 32.00 0.00 97.00 32.00 0.00 128.00 -32.00 65.00 -65.00 32.00 -128.00 64.00 -32.00 32.00 -32.00 65.00 -33.00 96.00 0.00 32.00 65.00 129.00 0.00 32.00 -161.00 96.00 -64.00 97.00 -161.00 96.00 -32.00 33.00 -33.00 64.00 -96.00 64.00 -32.00 0.00 0.00 97.00 -97.00 96.00 -96.00 257.00 -32.00 322.00 -97.00 161.00 -64.00 96.00 -64.00 0.00 -386.00 193.00 -129.00 32.00 32.00 64.00 -32.00 97.00 -32.00 0.00 0.00 64.00 32.00 32.00 0.00 65.00 32.00 128.00 65.00 97.00 96.00 32.00 32.00 0.00 65.00 32.00 0.00 129.00 0.00 32.00 96.00 64.00 0.00 32.00 0.00 161.00 32.00 96.00 32.00 33.00 33.00 32.00 96.00 32.00 32.00 64.00 32.00 0.00 65.00 0.00 64.00 0.00 96.00 32.00 33.00 65.00 32.00 32.00 32.00 0.00 64.00 -32.00 32.00 0.00 97.00 0.00 64.00 32.00 161.00 -32.00 129.00 64.00 96.00 32.00 32.00 0.00 64.00 32.00 65.00 0.00 64.00 65.00 0.00 32.00 32.00 64.00 64.00 32.00 65.00 32.00 32.00 -32.00 64.00 -32.00 32.00 64.00 97.00 0.00 64.00 -32.00 32.00 32.00 97.00 33.00 32.00 0.00 32.00 32.00 0.00 64.00 0.00 32.00 -225.00 32.00 -96.00 32.00 -97.00 -32.00 -64.00 32.00 -161.00 -64.00 -161.00 -96.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 -32.00 -64.00 32.00 0.00 64.00 32.00 64.00 32.00 33.00 32.00 96.00 0.00 64.00 -64.00 33.00 -96.00 160.00 -161.00 65.00 -65.00 32.00 33.00 32.00 96.00 -32.00 64.00 64.00 65.00 32.00 0.00 32.00 -65.00 33.00 0.00 32.00 33.00 32.00 -33.00 64.00 -64.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 -64.00 -32.00 -33.00 32.00 33.00 64.00 -33.00 64.00 65.00 97.00 64.00 -32.00 32.00 32.00 65.00 64.00 64.00 0.00 129.00 -64.00 96.00 32.00 64.00 32.00 65.00 32.00 128.00 -32.00 64.00 -64.00 65.00 0.00 32.00 0.00 32.00 64.00 0.00 64.00 -96.00 97.00 -97.00 0.00 -161.00 64.00 -192.00 32.00 -65.00 0.00 -128.00 32.00 -33.00 65.00 -32.00 32.00 -64.00 32.00 -97.00 97.00 0.00 64.00 -32.00 0.00 -64.00 32.00 0.00 64.00 64.00 65.00 0.00 32.00 32.00 32.00 -64.00 32.00 32.00 64.00 0.00 33.00 65.00 32.00 32.00 64.00 -32.00 64.00 0.00 65.00 -33.00 96.00 0.00 32.00 -64.00 32.00 32.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 97.00 32.00 0.00 64.00 32.00 33.00 -32.00 96.00 -65.00 32.00 32.00 0.00 65.00 97.00 -32.00 32.00 -33.00 64.00 97.00 32.00 32.00 0.00 97.00 32.00 32.00 0.00 0.00 33.00 -129.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 32.00 32.00 -32.00 32.00 65.00 65.00 32.00 32.00 0.00 96.00 64.00 33.00 64.00 -33.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 32.00 32.00 33.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 64.00 32.00 65.00 0.00 32.00 -32.00 64.00 0.00 161.00 129.00 32.00 225.00 -96.00 96.00 -33.00 33.00 65.00 -33.00 64.00 33.00 64.00 -33.00 97.00 -193.00 0.00 -128.00 32.00 -97.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 32.00 32.00 64.00 -64.00 161.00 64.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 65.00 -64.00 64.00 -64.00 32.00 -65.00 97.00 33.00 0.00 0.00 32.00 64.00 32.00 32.00 32.00 0.00 129.00 -64.00 32.00 32.00 64.00 0.00 64.00 -32.00 33.00 0.00 64.00 0.00 64.00 32.00 32.00 32.00 33.00 32.00 64.00 -64.00 64.00 -97.00 65.00 65.00 96.00 -32.00 64.00 -33.00 65.00 0.00 64.00 -32.00 161.00 97.00 -33.00 32.00 -64.00 32.00 0.00 225.00 32.00 96.00 -64.00 65.00 0.00 225.00 -96.00 64.00 32.00 65.00 32.00 -33.00 32.00 -128.00 64.00 -65.00 -32.00 -96.00 32.00 0.00 32.00 -32.00 33.00 -32.00 32.00 -129.00 0.00 -96.00 32.00 0.00 -32.00 -161.00 64.00 -32.00 -32.00 -32.00 32.00 -97.00 32.00 -129.00 0.00 0.00 32.00 -128.00 33.00 -65.00 -33.00 33.00 -64.00 -33.00 -32.00 33.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -96.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 -65.00 -32.00 0.00 -65.00 0.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -65.00 546.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 129.00 -129.00 0.00 -739.00 0.00 -547.00 -32.00 -321.00 193.00 -33.00 0.00 33.00 32.00 -65.00 32.00 0.00 64.00 -32.00 0.00 -32.00 65.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 -97.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 64.00 -65.00 32.00 -64.00 65.00 0.00 32.00 -96.00 32.00 -33.00 64.00 -64.00 0.00 -64.00 65.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 32.00 0.00 64.00 -64.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 32.00 -64.00 33.00 -32.00 -33.00 0.00 33.00 -64.00 0.00 0.00 32.00 0.00 32.00 -33.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 32.00 -65.00 0.00 -64.00 64.00 32.00 0.00 0.00 64.00 -64.00 33.00 -64.00 -33.00 -32.00 33.00 -65.00 -33.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 -64.00 -32.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 0.00 32.00 -96.00 33.00 32.00 96.00 -32.00 32.00 -65.00 0.00 0.00 65.00 -32.00 0.00 -32.00 64.00 -64.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -97.00 0.00 -32.00 32.00 -96.00 -32.00 -65.00 0.00 -64.00 -65.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 33.00 0.00 64.00 -97.00 32.00 -32.00 96.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -97.00 -96.00 32.00 -33.00 97.00 -32.00 -32.00 -32.00 -65.00 -32.00 -64.00 32.00 -129.00 -32.00 0.00 -64.00 65.00 -129.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -64.00 32.00 -96.00 -32.00 -32.00 -161.00 32.00 -128.00 -32.00 -33.00 -97.00 0.00 -129.00 -64.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 33.00 0.00 32.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 33.00 -65.00 32.00 97.00 32.00 -32.00 64.00 -33.00 32.00 33.00 0.00 -33.00 32.00 33.00 33.00 -33.00 0.00 0.00 32.00 65.00 32.00 0.00 32.00 -32.00 32.00 64.00 32.00 0.00 33.00 32.00 64.00 -64.00 64.00 -32.00 0.00 0.00 97.00 0.00 32.00 32.00 64.00 -32.00 32.00 32.00 97.00 0.00 64.00 64.00 64.00 64.00 0.00 0.00 97.00 -32.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 -32.00 65.00 -33.00 32.00 -32.00 64.00 -32.00 97.00 -579.00 -643.00 0.00 -33.00 -96.00 -64.00 -97.00 32.00 -96.00 -32.00 -32.00 32.00 -64.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 -33.00 -32.00 97.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -97.00 -64.00 0.00 -97.00 32.00 -32.00 -64.00 -32.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 -96.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 32.00 129.00 -32.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 0.00 -32.00 33.00 -33.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 33.00 -96.00 32.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 64.00 -97.00 0.00 -160.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 33.00 0.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -33.00 0.00 0.00 32.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -32.00 33.00 0.00 -65.00 0.00 32.00 -33.00 0.00 -32.00 0.00 0.00 65.00 0.00 32.00 -96.00 32.00 32.00 0.00 -32.00 0.00 32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 32.00 32.00 -32.00 32.00 32.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 0.00 -32.00 33.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 33.00 -32.00 -65.00 -65.00 0.00 0.00 -96.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 33.00 0.00 -65.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -97.00 0.00 -32.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 64.00 0.00 129.00 -32.00 64.00 0.00 32.00 -64.00 32.00 -65.00 32.00 0.00 97.00 32.00 32.00 -32.00 32.00 0.00 97.00 -32.00 96.00 32.00 32.00 0.00 97.00 -64.00 64.00 -32.00 0.00 -32.00 0.00 -97.00 -96.00 32.00 -65.00 33.00 -96.00 0.00 -32.00 -33.00 -32.00 -32.00 -65.00 32.00 0.00 65.00 -64.00 0.00 -64.00 0.00 -97.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -65.00 -33.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 0.00 -64.00 32.00 -32.00 -32.00 -97.00 -65.00 0.00 33.00 -32.00 -33.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -33.00 -97.00 0.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -64.00 -32.00 0.00 0.00 -97.00 0.00 -64.00 -32.00 -65.00 32.00 -64.00 -32.00 -64.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -33.00 -97.00 -96.00 0.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 0.00 -65.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 33.00 -450.00 675.00 -32.00 -65.00 -97.00 -64.00 -32.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 -129.00 0.00 -32.00 -65.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 65.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 -97.00 0.00 -64.00 -64.00 -32.00 0.00 -64.00 -225.00 -97.00 64.00 -32.00 97.00 -32.00 0.00 -64.00 64.00 -97.00 64.00 -32.00 32.00 0.00 65.00 -64.00 32.00 -33.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -64.00 32.00 0.00 97.00 -32.00 64.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -64.00 129.00 0.00 32.00 32.00 0.00 0.00 65.00 -32.00 0.00 -97.00 160.00 -96.00 129.00 -64.00 64.00 -97.00 193.00 0.00 32.00 65.00 32.00 0.00 65.00 -33.00 64.00 -32.00 64.00 65.00 97.00 -33.00 64.00 33.00 64.00 -33.00 65.00 33.00 96.00 0.00 32.00 0.00 65.00 -129.00 96.00 -450.00 -257.00 -675.00 -386.00 -1415.00 -836.00 -32.00 -32.00 -33.00 0.00 -96.00 -32.00 -64.00 0.00 -129.00 -97.00 -32.00 32.00 -64.00 -64.00 -65.00 -32.00 -96.00 32.00 -32.00 0.00 -32.00 -64.00 -97.00 0.00 -32.00 -64.00 -129.00 0.00 -32.00 32.00 -64.00 -32.00 -129.00 -33.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 0.00 32.00 -64.00 -32.00 0.00 -64.00 -33.00 0.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 -64.00 0.00 0.00 -32.00 -64.00 0.00 32.00 0.00 -65.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 32.00 -64.00 32.00 -32.00 -32.00 -65.00 64.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 -97.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 32.00 -32.00 0.00 32.00 0.00 33.00 0.00 -33.00 32.00 0.00 32.00 33.00 0.00 -65.00 32.00 32.00 33.00 0.00 -33.00 -32.00 33.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 32.00 32.00 32.00 -32.00 -32.00 -129.00 32.00 -96.00 32.00 0.00 0.00 32.00 33.00 0.00 96.00 -64.00 0.00 -32.00 64.00 0.00 -32.00 -33.00 -32.00 -32.00 0.00 32.00 -32.00 33.00 0.00 -65.00 -64.00 -32.00 -33.00 -64.00 65.00 -64.00 0.00 -161.00 32.00 0.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -33.00 32.00 0.00 0.00 -96.00 64.00 -96.00 -128.00 64.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 32.00 65.00 32.00 0.00 32.00 -65.00 0.00 -64.00 33.00 -32.00 0.00 64.00 32.00 -96.00 0.00 -33.00 64.00 -96.00 0.00 -32.00 97.00 -32.00 0.00 -97.00 0.00 0.00 32.00 -128.00 64.00 -33.00 32.00 0.00 32.00 33.00 33.00 0.00 32.00 -65.00 -32.00 -32.00 0.00 32.00 64.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 32.00 -64.00 0.00 -33.00 0.00 33.00 32.00 -33.00 32.00 0.00 65.00 0.00 32.00 -64.00 0.00 -32.00 64.00 -32.00 64.00 32.00 0.00 -32.00 33.00 -65.00 32.00 -32.00 32.00 32.00 96.00 -32.00 33.00 -64.00 -33.00 -64.00 65.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 32.00 -32.00 0.00 -97.00 0.00 0.00 32.00 -64.00 32.00 0.00 32.00 32.00 32.00 32.00 32.00 -32.00 33.00 -64.00 32.00 0.00 32.00 0.00 32.00 64.00 0.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -32.00 65.00 32.00 128.00 -32.00 0.00 -33.00 33.00 33.00 32.00 -33.00 64.00 -64.00 97.00 0.00 -65.00 -32.00 -64.00 -64.00 32.00 -161.00 0.00 -161.00 -64.00 0.00 -32.00 97.00 -65.00 0.00 -32.00 -33.00 0.00 -96.00 0.00 -32.00 97.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 64.00 -129.00 -97.00 0.00 33.00 -64.00 0.00 -128.00 -65.00 -65.00 32.00 -96.00 -64.00 0.00 -32.00 -129.00 32.00 -64.00 0.00 -64.00 -32.00 -33.00 -225.00 33.00 0.00 -129.00 -32.00 -64.00 32.00 -65.00 32.00 -32.00 96.00 32.00 33.00 0.00 0.00 -64.00 -97.00 -64.00 32.00 -97.00 65.00 -64.00 32.00 -161.00 64.00 -96.00 -32.00 -129.00 64.00 -32.00 65.00 32.00 0.00 -32.00 32.00 -129.00 -65.00 -32.00 33.00 -161.00 -33.00 -96.00 -64.00 -96.00 32.00 -97.00 -32.00 -32.00 0.00 -97.00 0.00 -32.00 64.00 -64.00 0.00 -64.00 -64.00 -97.00 0.00 -128.00 -32.00 -33.00 -129.00 33.00 -32.00 -97.00 32.00 -64.00 0.00 -161.00 32.00 -64.00 0.00 -97.00 33.00 -193.00 0.00 -96.00 -97.00 -97.00 0.00 -32.00 32.00 -96.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 129.00 -128.00 0.00 -97.00 -64.00 -96.00 32.00 -65.00 96.00 -32.00 0.00 -96.00 -96.00 -97.00 -97.00 0.00 -32.00 -32.00 0.00 -161.00 -32.00 -64.00 -32.00 -64.00 -32.00 -161.00 -32.00 -64.00 -33.00 -65.00 0.00 -32.00 129.00 -128.00 32.00 -32.00 64.00 -33.00 33.00 -64.00 32.00 -32.00 0.00 -129.00 -32.00 -96.00 32.00 -64.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 -128.00 -32.00 -33.00 0.00 -96.00 -193.00 32.00 -129.00 -32.00 -64.00 0.00 -129.00 0.00 -64.00 0.00 -97.00z\"\n          },\n          mt: {\n            name: \"MT\",\n            path: \"M64261.00 72698.00l0.00 -64.00 0.00 -32.00 161.00 0.00 32.00 -65.00 64.00 -32.00 97.00 0.00 96.00 32.00 32.00 33.00 33.00 -33.00 -33.00 -64.00 33.00 -161.00 0.00 -32.00 0.00 -64.00 -33.00 -32.00 -32.00 -97.00 -32.00 -32.00 -64.00 -96.00 0.00 -65.00 0.00 -64.00 0.00 -64.00 32.00 -97.00 32.00 0.00 0.00 -64.00 64.00 -64.00 0.00 -97.00 33.00 -96.00 128.00 -258.00 32.00 -32.00 97.00 -128.00 -65.00 -65.00 -32.00 -96.00 -96.00 -97.00 -32.00 -128.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 -65.00 0.00 -32.00 0.00 -129.00 -64.00 -32.00 0.00 -32.00 -32.00 3473.00 0.00 64.00 0.00 418.00 0.00 1543.00 0.00 2669.00 32.00 3473.00 0.00 128.00 0.00 2830.00 0.00 289.00 -32.00 64.00 -32.00 33.00 0.00 32.00 0.00 32.00 0.00 64.00 -65.00 193.00 -192.00 97.00 -65.00 32.00 -32.00 0.00 -32.00 -129.00 -64.00 -128.00 32.00 -33.00 0.00 -128.00 64.00 -97.00 -32.00 -32.00 -32.00 129.00 -290.00 32.00 -64.00 32.00 -96.00 32.00 -33.00 0.00 -64.00 -32.00 -64.00 -64.00 -64.00 32.00 -129.00 0.00 -64.00 -32.00 -65.00 -32.00 -96.00 64.00 -129.00 32.00 -32.00 64.00 -96.00 33.00 -65.00 128.00 -160.00 0.00 -65.00 32.00 -64.00 -32.00 -64.00 32.00 -65.00 129.00 -64.00 32.00 -32.00 -32.00 -97.00 -32.00 -32.00 0.00 -64.00 32.00 -64.00 -32.00 -193.00 64.00 -97.00 -64.00 -193.00 32.00 -96.00 128.00 -64.00 33.00 -65.00 -33.00 -96.00 33.00 -97.00 -33.00 -64.00 -128.00 -225.00 -32.00 -96.00 0.00 -65.00 -32.00 -128.00 -97.00 -129.00 -96.00 -161.00 0.00 -225.00 -65.00 -64.00 0.00 -64.00 33.00 0.00 32.00 -65.00 193.00 -96.00 160.00 -161.00 65.00 -96.00 0.00 -65.00 0.00 -128.00 32.00 -33.00 128.00 -128.00 65.00 -129.00 161.00 -161.00 0.00 -96.00 -33.00 -64.00 -32.00 -161.00 -32.00 -129.00 32.00 -160.00 32.00 -161.00 161.00 -322.00 161.00 -160.00 32.00 -33.00 0.00 -32.00 64.00 32.00 257.00 161.00 33.00 64.00 128.00 258.00 161.00 160.00 129.00 225.00 128.00 322.00 0.00 32.00 32.00 225.00 33.00 32.00 64.00 0.00 64.00 33.00 32.00 64.00 65.00 418.00 32.00 193.00 161.00 289.00 32.00 97.00 32.00 353.00 0.00 97.00 129.00 128.00 128.00 258.00 225.00 192.00 32.00 258.00 32.00 64.00 33.00 32.00 128.00 32.00 65.00 33.00 96.00 160.00 0.00 65.00 0.00 32.00 -64.00 160.00 -32.00 161.00 -65.00 97.00 0.00 32.00 0.00 64.00 65.00 129.00 0.00 32.00 0.00 32.00 -97.00 161.00 0.00 32.00 32.00 96.00 129.00 161.00 0.00 65.00 -32.00 64.00 0.00 32.00 96.00 64.00 32.00 32.00 -32.00 97.00 -64.00 64.00 32.00 97.00 0.00 32.00 64.00 32.00 65.00 32.00 -32.00 225.00 32.00 32.00 64.00 97.00 64.00 193.00 -32.00 161.00 32.00 96.00 129.00 0.00 161.00 -64.00 225.00 128.00 96.00 65.00 65.00 0.00 96.00 0.00 64.00 64.00 0.00 128.00 -32.00 129.00 32.00 32.00 65.00 32.00 96.00 97.00 161.00 0.00 161.00 32.00 32.00 97.00 32.00 32.00 64.00 0.00 161.00 -32.00 32.00 -33.00 64.00 33.00 97.00 32.00 64.00 32.00 32.00 32.00 258.00 321.00 192.00 97.00 33.00 96.00 64.00 97.00 64.00 32.00 0.00 97.00 65.00 32.00 32.00 64.00 0.00 64.00 -97.00 129.00 32.00 96.00 -32.00 65.00 0.00 32.00 32.00 32.00 65.00 64.00 32.00 65.00 64.00 32.00 64.00 32.00 65.00 32.00 193.00 -32.00 64.00 32.00 289.00 32.00 33.00 0.00 64.00 -32.00 64.00 32.00 129.00 32.00 64.00 97.00 97.00 257.00 32.00 0.00 0.00 64.00 0.00 161.00 32.00 64.00 0.00 65.00 32.00 64.00 32.00 0.00 97.00 -32.00 96.00 -64.00 0.00 -33.00 32.00 0.00 64.00 0.00 129.00 -32.00 1865.00 161.00 547.00 32.00 1736.00 161.00 3762.00 289.00 1254.00 129.00 579.00 32.00 2379.00 193.00 2476.00 193.00 2154.00 161.00 2154.00 160.00 257.00 0.00 1737.00 129.00 3762.00 257.00 739.00 65.00 1158.00 64.00 1029.00 64.00 2926.00 193.00 0.00 32.00 0.00 32.00 -97.00 97.00 -96.00 193.00 0.00 128.00 -65.00 97.00 0.00 64.00 -64.00 97.00 0.00 128.00 -32.00 97.00 -64.00 64.00 -129.00 64.00 -64.00 65.00 -32.00 96.00 -65.00 64.00 -64.00 129.00 -32.00 161.00 0.00 32.00 32.00 0.00 32.00 225.00 -64.00 161.00 -32.00 161.00 -97.00 225.00 0.00 32.00 32.00 96.00 -32.00 32.00 -96.00 65.00 -33.00 64.00 -128.00 64.00 -64.00 322.00 32.00 96.00 -32.00 32.00 -33.00 0.00 -96.00 33.00 0.00 96.00 -32.00 96.00 32.00 97.00 -64.00 96.00 -32.00 97.00 -33.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 64.00 -65.00 97.00 -96.00 96.00 0.00 65.00 96.00 64.00 0.00 96.00 33.00 65.00 0.00 64.00 32.00 96.00 -97.00 161.00 0.00 65.00 0.00 32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 -32.00 64.00 0.00 32.00 0.00 129.00 64.00 32.00 32.00 64.00 0.00 65.00 -96.00 96.00 -65.00 97.00 65.00 161.00 -32.00 64.00 32.00 96.00 0.00 129.00 32.00 64.00 0.00 129.00 -32.00 64.00 0.00 32.00 -97.00 65.00 -32.00 96.00 -64.00 32.00 0.00 65.00 -32.00 96.00 32.00 129.00 0.00 64.00 32.00 96.00 -32.00 129.00 -32.00 193.00 -65.00 32.00 -64.00 64.00 -32.00 32.00 -32.00 65.00 0.00 64.00 -32.00 97.00 -65.00 128.00 0.00 129.00 -64.00 128.00 0.00 97.00 0.00 64.00 0.00 129.00 32.00 64.00 -32.00 129.00 96.00 193.00 33.00 0.00 128.00 32.00 64.00 0.00 33.00 0.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 -32.00 64.00 32.00 96.00 0.00 129.00 -32.00 32.00 -33.00 64.00 -64.00 33.00 -32.00 32.00 -129.00 128.00 0.00 32.00 33.00 65.00 32.00 64.00 32.00 161.00 32.00 64.00 32.00 64.00 0.00 161.00 32.00 32.00 97.00 0.00 96.00 97.00 0.00 96.00 -96.00 32.00 -32.00 65.00 64.00 96.00 0.00 97.00 -129.00 128.00 -32.00 65.00 32.00 32.00 0.00 32.00 -32.00 96.00 0.00 32.00 97.00 97.00 0.00 96.00 -33.00 193.00 0.00 97.00 -32.00 64.00 0.00 161.00 -32.00 64.00 32.00 97.00 129.00 -33.00 32.00 33.00 0.00 128.00 64.00 97.00 0.00 64.00 -64.00 64.00 0.00 32.00 0.00 97.00 32.00 32.00 -32.00 97.00 64.00 96.00 33.00 96.00 -33.00 161.00 65.00 32.00 -32.00 129.00 0.00 32.00 -65.00 -32.00 -64.00 32.00 32.00 129.00 -64.00 96.00 -32.00 161.00 -65.00 64.00 -32.00 97.00 97.00 64.00 0.00 64.00 -33.00 0.00 -96.00 -32.00 -32.00 32.00 -32.00 65.00 32.00 64.00 0.00 129.00 225.00 -33.00 32.00 33.00 0.00 64.00 -32.00 64.00 32.00 129.00 64.00 0.00 -32.00 96.00 65.00 65.00 0.00 128.00 -33.00 64.00 97.00 0.00 -64.00 129.00 0.00 64.00 32.00 33.00 32.00 0.00 32.00 -97.00 96.00 0.00 33.00 0.00 0.00 32.00 -97.00 65.00 0.00 32.00 161.00 64.00 161.00 0.00 64.00 -32.00 32.00 64.00 0.00 65.00 32.00 64.00 0.00 64.00 -32.00 64.00 -32.00 97.00 -32.00 96.00 0.00 193.00 -97.00 32.00 -64.00 97.00 -32.00 0.00 -64.00 -32.00 -65.00 32.00 32.00 96.00 65.00 32.00 0.00 33.00 -32.00 64.00 -129.00 32.00 -32.00 32.00 64.00 129.00 32.00 32.00 0.00 64.00 -32.00 161.00 32.00 129.00 -32.00 64.00 -32.00 64.00 32.00 0.00 64.00 65.00 0.00 64.00 0.00 129.00 -64.00 96.00 -32.00 32.00 0.00 161.00 -32.00 32.00 -64.00 97.00 -65.00 64.00 -32.00 64.00 -96.00 64.00 0.00 129.00 32.00 129.00 -32.00 64.00 -65.00 32.00 -64.00 129.00 -96.00 96.00 -129.00 65.00 -96.00 128.00 -33.00 322.00 -64.00 96.00 -32.00 161.00 -64.00 193.00 -97.00 128.00 -64.00 -32.00 -65.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 64.00 96.00 128.00 -32.00 161.00 32.00 65.00 -32.00 96.00 65.00 129.00 0.00 32.00 0.00 96.00 0.00 32.00 0.00 65.00 0.00 128.00 0.00 65.00 -97.00 96.00 0.00 97.00 64.00 96.00 0.00 129.00 97.00 225.00 -32.00 96.00 -32.00 64.00 -129.00 97.00 -96.00 0.00 -65.00 -64.00 -32.00 0.00 -32.00 0.00 0.00 64.00 32.00 128.00 0.00 97.00 -64.00 64.00 -64.00 129.00 -97.00 193.00 -64.00 193.00 -32.00 64.00 32.00 161.00 -32.00 96.00 -65.00 32.00 32.00 129.00 0.00 32.00 -32.00 65.00 -32.00 64.00 64.00 96.00 0.00 65.00 65.00 64.00 32.00 64.00 -32.00 97.00 32.00 128.00 -161.00 258.00 32.00 160.00 -128.00 257.00 -33.00 0.00 -32.00 65.00 32.00 96.00 0.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 64.00 -32.00 32.00 0.00 97.00 64.00 96.00 -32.00 65.00 -96.00 64.00 -97.00 161.00 0.00 96.00 0.00 64.00 -32.00 97.00 64.00 64.00 0.00 32.00 -32.00 0.00 -193.00 129.00 -32.00 0.00 -64.00 96.00 0.00 97.00 -225.00 128.00 -225.00 129.00 -129.00 32.00 -96.00 -32.00 -33.00 -64.00 -32.00 -161.00 -96.00 -64.00 -65.00 0.00 -32.00 64.00 -64.00 64.00 -96.00 65.00 -97.00 -65.00 -129.00 32.00 -64.00 129.00 -64.00 0.00 -32.00 64.00 -65.00 65.00 -193.00 -32.00 -32.00 32.00 -64.00 64.00 -64.00 161.00 -129.00 32.00 -96.00 225.00 -33.00 32.00 -128.00 0.00 -97.00 64.00 0.00 129.00 -64.00 97.00 0.00 96.00 32.00 64.00 65.00 32.00 0.00 33.00 -97.00 64.00 -64.00 32.00 -32.00 97.00 0.00 160.00 64.00 65.00 0.00 64.00 -129.00 193.00 0.00 32.00 32.00 64.00 0.00 32.00 -64.00 97.00 32.00 96.00 0.00 32.00 0.00 33.00 -32.00 32.00 -96.00 32.00 -32.00 64.00 0.00 32.00 32.00 97.00 0.00 64.00 -65.00 0.00 -64.00 0.00 -32.00 -96.00 -64.00 0.00 0.00 32.00 -32.00 0.00 32.00 96.00 96.00 258.00 0.00 64.00 -32.00 96.00 -32.00 32.00 -161.00 290.00 0.00 64.00 -129.00 64.00 -96.00 161.00 -32.00 65.00 -97.00 96.00 -32.00 96.00 -32.00 33.00 -96.00 -97.00 -193.00 0.00 -32.00 64.00 0.00 65.00 0.00 32.00 -65.00 -32.00 -64.00 32.00 -64.00 161.00 -65.00 32.00 -225.00 32.00 -96.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 -32.00 -96.00 64.00 -322.00 -64.00 -64.00 32.00 -129.00 0.00 -96.00 0.00 32.00 96.00 -32.00 129.00 -32.00 0.00 0.00 64.00 -129.00 97.00 0.00 96.00 -32.00 32.00 -64.00 65.00 -33.00 96.00 -32.00 64.00 0.00 33.00 -32.00 96.00 0.00 32.00 -96.00 65.00 -33.00 -33.00 -32.00 33.00 -32.00 32.00 -32.00 32.00 -97.00 -32.00 -192.00 96.00 -97.00 65.00 -64.00 0.00 -64.00 32.00 -33.00 32.00 -32.00 0.00 -64.00 -32.00 -64.00 32.00 0.00 96.00 -97.00 32.00 32.00 65.00 -32.00 64.00 0.00 161.00 -32.00 0.00 -64.00 0.00 0.00 32.00 96.00 129.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 -65.00 -33.00 0.00 -32.00 65.00 0.00 32.00 -96.00 0.00 -65.00 64.00 -64.00 0.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -97.00 64.00 0.00 65.00 -32.00 0.00 -32.00 64.00 32.00 32.00 0.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 0.00 64.00 64.00 64.00 -64.00 33.00 0.00 32.00 64.00 64.00 129.00 0.00 32.00 0.00 0.00 32.00 0.00 65.00 32.00 32.00 97.00 64.00 -33.00 32.00 0.00 32.00 33.00 -32.00 64.00 32.00 -64.00 33.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 -33.00 0.00 -64.00 0.00 0.00 65.00 32.00 0.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 64.00 -64.00 -32.00 0.00 65.00 -64.00 -65.00 -33.00 0.00 0.00 65.00 33.00 32.00 -65.00 0.00 32.00 64.00 -32.00 32.00 -64.00 0.00 -64.00 -64.00 -32.00 0.00 32.00 129.00 -97.00 -65.00 -32.00 0.00 -32.00 0.00 32.00 65.00 -32.00 32.00 0.00 32.00 64.00 0.00 32.00 129.00 -32.00 32.00 -32.00 -65.00 -32.00 -32.00 -32.00 32.00 -32.00 33.00 64.00 96.00 -32.00 -32.00 -65.00 32.00 -64.00 32.00 0.00 32.00 64.00 0.00 -32.00 32.00 0.00 129.00 -64.00 0.00 -32.00 64.00 0.00 32.00 0.00 65.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 -96.00 96.00 -32.00 0.00 0.00 65.00 -32.00 0.00 0.00 -33.00 -33.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 65.00 -64.00 0.00 -65.00 32.00 33.00 0.00 -33.00 32.00 -64.00 32.00 0.00 64.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 0.00 -65.00 -33.00 0.00 0.00 32.00 -32.00 0.00 65.00 65.00 -33.00 64.00 33.00 0.00 0.00 32.00 -129.00 0.00 32.00 0.00 32.00 65.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 33.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 64.00 32.00 32.00 -32.00 0.00 0.00 64.00 -33.00 33.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 0.00 32.00 -32.00 64.00 0.00 -32.00 -32.00 0.00 0.00 129.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 -32.00 0.00 0.00 33.00 -33.00 0.00 33.00 64.00 -33.00 0.00 0.00 32.00 33.00 0.00 0.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 -32.00 33.00 -33.00 0.00 0.00 32.00 0.00 -32.00 0.00 64.00 -32.00 -32.00 -32.00 0.00 32.00 32.00 -64.00 0.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 33.00 0.00 32.00 0.00 32.00 -32.00 96.00 -32.00 0.00 0.00 32.00 -32.00 33.00 -32.00 64.00 -32.00 -32.00 -33.00 32.00 0.00 64.00 -32.00 97.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 96.00 -32.00 33.00 -32.00 64.00 -65.00 0.00 33.00 96.00 -65.00 33.00 0.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 64.00 33.00 32.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 65.00 0.00 -33.00 32.00 -32.00 0.00 32.00 0.00 0.00 65.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 33.00 -32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 0.00 64.00 0.00 33.00 0.00 32.00 0.00 -32.00 -32.00 64.00 0.00 32.00 -32.00 64.00 0.00 33.00 0.00 64.00 0.00 -32.00 0.00 32.00 -33.00 64.00 0.00 32.00 33.00 0.00 -33.00 0.00 0.00 65.00 33.00 32.00 -33.00 32.00 33.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 0.00 32.00 -33.00 32.00 0.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 65.00 32.00 64.00 0.00 64.00 33.00 0.00 -33.00 33.00 33.00 32.00 0.00 32.00 -33.00 32.00 33.00 0.00 0.00 32.00 32.00 32.00 -32.00 32.00 96.00 65.00 0.00 -32.00 32.00 32.00 64.00 32.00 0.00 32.00 33.00 32.00 32.00 32.00 32.00 0.00 32.00 65.00 32.00 0.00 -32.00 32.00 64.00 64.00 -32.00 32.00 32.00 65.00 65.00 64.00 0.00 32.00 32.00 64.00 -32.00 161.00 32.00 32.00 32.00 32.00 0.00 33.00 32.00 32.00 -32.00 96.00 161.00 97.00 64.00 128.00 32.00 32.00 32.00 65.00 0.00 289.00 -482.00 0.00 -96.00 -32.00 -33.00 -64.00 -32.00 0.00 -64.00 -32.00 -64.00 -33.00 -32.00 0.00 -97.00 -32.00 -193.00 -32.00 -128.00 32.00 -33.00 32.00 -32.00 0.00 -96.00 -32.00 -97.00 32.00 -96.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -64.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 97.00 -33.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -64.00 -32.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 0.00 -64.00 -32.00 -65.00 0.00 0.00 -65.00 -32.00 0.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 -97.00 -32.00 -32.00 -64.00 0.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -129.00 0.00 0.00 32.00 -64.00 32.00 -32.00 32.00 -33.00 32.00 -32.00 65.00 -32.00 -65.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -161.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 -32.00 -32.00 -65.00 32.00 0.00 -64.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 0.00 32.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 33.00 -64.00 -33.00 0.00 33.00 -32.00 -33.00 -65.00 0.00 -32.00 0.00 -32.00 33.00 -64.00 32.00 -32.00 0.00 -65.00 128.00 -160.00 33.00 -65.00 32.00 -64.00 0.00 -32.00 64.00 -129.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 33.00 -32.00 0.00 -97.00 64.00 -32.00 161.00 -64.00 32.00 -32.00 32.00 0.00 64.00 0.00 32.00 0.00 97.00 0.00 32.00 0.00 64.00 -65.00 65.00 32.00 64.00 -32.00 32.00 0.00 97.00 -1993.00 -65.00 -32.00 0.00 -65.00 -64.00 -32.00 -129.00 32.00 -64.00 65.00 -32.00 0.00 -32.00 0.00 0.00 64.00 -32.00 32.00 -65.00 97.00 -96.00 0.00 -65.00 32.00 -32.00 96.00 -32.00 32.00 -32.00 97.00 32.00 96.00 -193.00 64.00 -32.00 33.00 -32.00 64.00 -129.00 129.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -64.00 64.00 -33.00 32.00 -96.00 33.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -128.00 32.00 -32.00 64.00 -33.00 65.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 64.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 65.00 0.00 64.00 0.00 32.00 -96.00 97.00 0.00 32.00 -32.00 64.00 32.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 65.00 -65.00 32.00 -32.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 32.00 -96.00 -64.00 -64.00 -32.00 32.00 -33.00 32.00 -96.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 32.00 0.00 -32.00 0.00 -32.00 -97.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -161.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 32.00 -65.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -64.00 -32.00 -96.00 0.00 -33.00 -32.00 -32.00 0.00 -96.00 64.00 -32.00 -64.00 -33.00 32.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 -129.00 64.00 -96.00 32.00 -64.00 -32.00 -32.00 32.00 -65.00 33.00 -32.00 0.00 0.00 32.00 -64.00 -32.00 -32.00 -33.00 0.00 65.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -32.00 64.00 0.00 32.00 -32.00 65.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -64.00 0.00 -65.00 64.00 -32.00 0.00 -64.00 65.00 -32.00 0.00 0.00 32.00 0.00 32.00 -97.00 32.00 -32.00 0.00 -64.00 32.00 -97.00 -32.00 -64.00 32.00 -32.00 -64.00 -32.00 0.00 -161.00 0.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -33.00 -32.00 -32.00 64.00 -32.00 -32.00 -32.00 65.00 0.00 32.00 -32.00 -32.00 -64.00 -33.00 0.00 33.00 -33.00 -33.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -33.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 33.00 -33.00 -33.00 -32.00 65.00 -64.00 64.00 -64.00 -32.00 0.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -96.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 0.00 -65.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 32.00 -32.00 -64.00 -32.00 32.00 -33.00 -32.00 0.00 -96.00 33.00 -33.00 -33.00 -32.00 33.00 32.00 0.00 0.00 32.00 -64.00 -32.00 0.00 -33.00 0.00 33.00 -64.00 0.00 0.00 -97.00 -32.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 -64.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -64.00 0.00 -32.00 -32.00 0.00 -33.00 -65.00 -32.00 32.00 0.00 -64.00 -64.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 0.00 -65.00 33.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 -32.00 33.00 -64.00 -33.00 0.00 33.00 -33.00 -65.00 33.00 -32.00 -33.00 -64.00 -64.00 0.00 64.00 -32.00 -32.00 -65.00 -64.00 -32.00 -64.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 -64.00 64.00 -32.00 -64.00 -33.00 64.00 -32.00 -64.00 -64.00 64.00 -32.00 -64.00 -65.00 64.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -33.00 -33.00 0.00 -32.00 33.00 -32.00 -65.00 -32.00 32.00 0.00 33.00 -96.00 -97.00 32.00 -64.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 -65.00 -33.00 33.00 -64.00 -97.00 -32.00 32.00 32.00 32.00 -64.00 33.00 -32.00 -33.00 32.00 -32.00 -65.00 32.00 0.00 -32.00 33.00 0.00 32.00 -32.00 -129.00 0.00 -64.00 -32.00 0.00 32.00 0.00 32.00 -65.00 32.00 -64.00 -96.00 32.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -33.00 64.00 0.00 -97.00 -32.00 0.00 -32.00 33.00 0.00 -65.00 -32.00 32.00 0.00 -96.00 0.00 -32.00 -32.00 32.00 0.00 -64.00 64.00 0.00 -64.00 -65.00 -64.00 -32.00 -65.00 -64.00 -32.00 0.00 32.00 64.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -96.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 129.00 -64.00 -32.00 -32.00 32.00 -33.00 0.00 33.00 64.00 -65.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 -32.00 -64.00 0.00 0.00 64.00 -33.00 -32.00 0.00 32.00 33.00 65.00 -65.00 -33.00 -32.00 33.00 32.00 0.00 -64.00 0.00 -32.00 0.00 0.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -64.00 0.00 0.00 32.00 -65.00 -65.00 0.00 -32.00 32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -96.00 33.00 0.00 32.00 -33.00 64.00 -64.00 0.00 -32.00 64.00 -32.00 -32.00 -64.00 32.00 -65.00 65.00 -32.00 -33.00 0.00 -64.00 -64.00 32.00 0.00 -64.00 -32.00 0.00 0.00 32.00 -97.00 -64.00 -32.00 0.00 0.00 -64.00 -32.00 64.00 -32.00 -32.00 32.00 64.00 -32.00 0.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 -96.00 64.00 -97.00 -32.00 -32.00 0.00 32.00 65.00 -64.00 0.00 -32.00 0.00 -64.00 0.00 -33.00 0.00 0.00 -33.00 -64.00 0.00 0.00 33.00 -64.00 -33.00 -32.00 -32.00 0.00 32.00 32.00 33.00 -32.00 32.00 -33.00 -65.00 -32.00 0.00 32.00 33.00 -32.00 32.00 -64.00 -32.00 0.00 -33.00 -32.00 -32.00 -65.00 32.00 33.00 -32.00 -129.00 0.00 -32.00 -32.00 -64.00 0.00 0.00 64.00 -33.00 0.00 -64.00 0.00 0.00 65.00 -64.00 32.00 32.00 32.00 0.00 32.00 -96.00 64.00 -33.00 33.00 33.00 64.00 -33.00 0.00 -64.00 -32.00 -129.00 32.00 0.00 96.00 -64.00 33.00 64.00 32.00 33.00 0.00 32.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 65.00 32.00 0.00 32.00 -33.00 33.00 -64.00 0.00 -32.00 32.00 32.00 64.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 32.00 33.00 -32.00 64.00 -32.00 0.00 -33.00 96.00 -64.00 32.00 -64.00 -32.00 -65.00 32.00 -96.00 33.00 -64.00 96.00 -65.00 0.00 -32.00 64.00 -32.00 0.00 32.00 65.00 -32.00 32.00 0.00 32.00 32.00 32.00 65.00 -32.00 0.00 32.00 -97.00 129.00 -32.00 96.00 -64.00 65.00 -33.00 0.00 -32.00 0.00 -32.00 64.00 0.00 32.00 -64.00 0.00 -32.00 193.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 64.00 -65.00 32.00 0.00 97.00 -96.00 0.00 0.00 32.00 -129.00 -64.00 -64.00 64.00 -96.00 0.00 -97.00 32.00 -96.00 0.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 -64.00 64.00 -32.00 -32.00 32.00 65.00 64.00 0.00 0.00 32.00 -96.00 0.00 -64.00 32.00 -97.00 -32.00 0.00 64.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 32.00 0.00 32.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 97.00 -64.00 -33.00 0.00 33.00 -33.00 32.00 0.00 32.00 -64.00 -32.00 -64.00 96.00 -64.00 0.00 32.00 97.00 -32.00 64.00 -65.00 -32.00 -64.00 -97.00 0.00 -96.00 -161.00 32.00 -129.00 -64.00 33.00 -65.00 -97.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 -97.00 -129.00 33.00 0.00 -33.00 -32.00 -96.00 32.00 0.00 32.00 -32.00 -64.00 -32.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 -32.00 -64.00 -65.00 -64.00 -32.00 0.00 0.00 32.00 -96.00 32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -64.00 -33.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 -33.00 0.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 0.00 -32.00 -128.00 0.00 -64.00 0.00 -65.00 -65.00 -32.00 0.00 -129.00 -64.00 -64.00 -64.00 32.00 -64.00 129.00 -611.00 -547.00 -450.00 290.00 -97.00 32.00 0.00 -64.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 -33.00 -32.00 0.00 -64.00 -32.00 0.00 -128.00 -64.00 -65.00 -65.00 0.00 -64.00 65.00 -161.00 -65.00 0.00 -160.00 -32.00 -33.00 -64.00 33.00 -32.00 -33.00 -32.00 -32.00 32.00 -96.00 -161.00 32.00 -96.00 -32.00 32.00 -65.00 -32.00 -64.00 -97.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -64.00 -33.00 0.00 -128.00 -65.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -97.00 -65.00 0.00 -32.00 -32.00 0.00 -64.00 -96.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 -97.00 -65.00 -32.00 -257.00 64.00 -96.00 -32.00 -33.00 -32.00 0.00 -96.00 33.00 -33.00 0.00 0.00 -33.00 0.00 -96.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 65.00 -64.00 -65.00 0.00 0.00 -32.00 0.00 -32.00 65.00 0.00 0.00 -32.00 -65.00 0.00 0.00 -97.00 32.00 -32.00 33.00 -64.00 -65.00 0.00 -64.00 -65.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 32.00 -64.00 -32.00 -33.00 -33.00 33.00 -32.00 -33.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 33.00 -65.00 -33.00 0.00 33.00 -128.00 -33.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 -33.00 -33.00 0.00 33.00 -32.00 -65.00 -96.00 0.00 -32.00 0.00 -129.00 65.00 0.00 0.00 -32.00 0.00 -32.00 -33.00 -97.00 -32.00 -64.00 32.00 -129.00 0.00 -64.00 33.00 -193.00 0.00 -64.00 128.00 -290.00 32.00 -32.00 33.00 -64.00 128.00 -64.00 32.00 -97.00 129.00 -64.00 64.00 -64.00 65.00 -129.00 0.00 -64.00 -65.00 -97.00 -64.00 -128.00 64.00 -161.00 0.00 -32.00 32.00 -33.00 33.00 33.00 32.00 -33.00 96.00 -64.00 -32.00 -32.00 32.00 -161.00 0.00 -96.00 -64.00 -97.00 0.00 -128.00 -97.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -97.00 -64.00 -32.00 193.00 -64.00 64.00 -129.00 64.00 -1672.00 -96.00 -3247.00 -129.00 -3312.00 -64.00 -161.00 -1865.00 -161.00 -1994.00 -1543.00 -1800.00 290.00 -32.00 1221.00 0.00 -128.00 -2348.00 -97.00 33.00 -128.00 -65.00 -32.00 -160.00 -33.00 -65.00 33.00 0.00 -33.00 -64.00 0.00 -64.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 -96.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -64.00 -97.00 -64.00 32.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 33.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 -33.00 -32.00 33.00 -33.00 -33.00 -64.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 0.00 -65.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -64.00 64.00 -32.00 -64.00 -64.00 64.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 0.00 65.00 -32.00 96.00 -96.00 0.00 -33.00 32.00 -64.00 65.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 32.00 0.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 -32.00 -129.00 0.00 -64.00 -97.00 32.00 32.00 32.00 -64.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 -33.00 -32.00 0.00 32.00 33.00 -32.00 0.00 0.00 -161.00 -32.00 -64.00 32.00 -33.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 0.00 33.00 -32.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 -64.00 33.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 96.00 -97.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 32.00 -32.00 -64.00 -32.00 0.00 -33.00 32.00 0.00 32.00 0.00 -32.00 -32.00 -96.00 0.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -96.00 0.00 64.00 -64.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 0.00 64.00 -33.00 0.00 -32.00 -64.00 -64.00 0.00 32.00 -65.00 -64.00 0.00 32.00 -32.00 -64.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -64.00 -65.00 -32.00 65.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 0.00 32.00 -64.00 -32.00 -64.00 -65.00 -33.00 -96.00 -32.00 32.00 0.00 64.00 -64.00 -64.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 0.00 32.00 -65.00 32.00 33.00 0.00 -33.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 96.00 -32.00 64.00 32.00 33.00 0.00 32.00 -32.00 32.00 0.00 96.00 -64.00 32.00 -33.00 33.00 0.00 0.00 -32.00 64.00 0.00 0.00 -96.00 129.00 -97.00 96.00 -32.00 0.00 32.00 32.00 -32.00 64.00 -32.00 33.00 32.00 128.00 -32.00 0.00 -32.00 97.00 -97.00 32.00 0.00 0.00 -32.00 64.00 0.00 32.00 -64.00 0.00 -96.00 0.00 -33.00 65.00 -32.00 -65.00 -64.00 0.00 -97.00 32.00 0.00 0.00 -32.00 33.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -33.00 -65.00 33.00 0.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 64.00 0.00 32.00 -96.00 33.00 0.00 0.00 -129.00 32.00 0.00 0.00 -64.00 64.00 -97.00 0.00 -32.00 0.00 -64.00 32.00 0.00 32.00 0.00 129.00 -161.00 -64.00 -32.00 32.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -64.00 64.00 0.00 64.00 -97.00 32.00 0.00 32.00 -64.00 0.00 -65.00 65.00 0.00 32.00 -32.00 32.00 0.00 0.00 -96.00 32.00 -32.00 32.00 -65.00 33.00 -32.00 0.00 -32.00 32.00 -32.00 96.00 32.00 32.00 -32.00 33.00 0.00 32.00 0.00 32.00 32.00 32.00 -64.00 64.00 0.00 65.00 -193.00 96.00 -97.00 32.00 -96.00 -32.00 -225.00 32.00 -161.00 0.00 -129.00 -64.00 -160.00 0.00 -32.00 0.00 -65.00 64.00 -160.00 0.00 -129.00 64.00 -97.00 0.00 -64.00 -32.00 -64.00 65.00 -65.00 64.00 -32.00 32.00 0.00 32.00 -96.00 0.00 -64.00 32.00 -33.00 65.00 -64.00 32.00 -32.00 129.00 -32.00 96.00 -129.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 0.00 32.00 0.00 32.00 -33.00 0.00 33.00 64.00 -33.00 33.00 33.00 64.00 32.00 64.00 -32.00 32.00 -33.00 32.00 -64.00 -32.00 -161.00 65.00 -64.00 0.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -65.00 64.00 -64.00 0.00 -32.00 65.00 -64.00 96.00 -33.00 -547.00 -450.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 -96.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -193.00 -64.00 -96.00 -32.00 0.00 -32.00 -97.00 -97.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 -65.00 0.00 33.00 -64.00 32.00 -64.00 0.00 -33.00 -65.00 -32.00 33.00 0.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -97.00 -65.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -64.00 -32.00 -33.00 -32.00 0.00 -64.00 -96.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 32.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 -33.00 32.00 65.00 -32.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 -65.00 0.00 33.00 -32.00 0.00 -33.00 -33.00 0.00 0.00 -32.00 33.00 0.00 0.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -64.00 -32.00 -97.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 32.00 0.00 0.00 -96.00 0.00 -33.00 0.00 -64.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 32.00 0.00 -32.00 -32.00 64.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 97.00 -32.00 0.00 -32.00 64.00 -97.00 64.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 32.00 33.00 -32.00 32.00 -33.00 32.00 -32.00 64.00 -32.00 65.00 -161.00 96.00 0.00 32.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -64.00 -32.00 -96.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -64.00 -32.00 -97.00 -97.00 -32.00 -64.00 -64.00 0.00 -64.00 -32.00 -65.00 0.00 -64.00 -65.00 -96.00 0.00 -97.00 0.00 -64.00 33.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -33.00 -65.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -65.00 32.00 33.00 33.00 -97.00 -65.00 -32.00 0.00 32.00 -64.00 0.00 -64.00 0.00 0.00 -32.00 -33.00 64.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 -129.00 32.00 -32.00 -128.00 -32.00 -33.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 -32.00 -64.00 32.00 -32.00 -32.00 -33.00 -33.00 -96.00 33.00 -32.00 0.00 -32.00 64.00 -65.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 -33.00 -32.00 0.00 -96.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -97.00 96.00 -64.00 -32.00 32.00 32.00 -32.00 97.00 32.00 0.00 -32.00 32.00 -96.00 -65.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 33.00 -97.00 -33.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 32.00 -128.00 -32.00 0.00 -32.00 -33.00 0.00 -96.00 -32.00 0.00 -2573.00 0.00 -2025.00 0.00 -579.00 -32.00 0.00 -32.00 64.00 0.00 32.00 0.00 0.00 -97.00 33.00 -32.00 0.00 -64.00 32.00 -97.00 0.00 -64.00 -32.00 0.00 0.00 -64.00 -33.00 -33.00 33.00 0.00 0.00 -128.00 0.00 -64.00 64.00 -33.00 0.00 -96.00 32.00 -64.00 -32.00 -65.00 32.00 -32.00 32.00 -32.00 0.00 32.00 32.00 32.00 0.00 33.00 65.00 0.00 -33.00 -65.00 33.00 -96.00 -33.00 -32.00 0.00 -65.00 -32.00 -64.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 -33.00 0.00 -64.00 -64.00 0.00 -96.00 32.00 -32.00 32.00 0.00 0.00 -33.00 0.00 -64.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 65.00 -97.00 -33.00 -64.00 33.00 -32.00 -33.00 -97.00 65.00 -64.00 0.00 -65.00 -65.00 -64.00 0.00 -193.00 65.00 -128.00 -32.00 -32.00 32.00 -33.00 32.00 -160.00 -32.00 0.00 -32.00 0.00 0.00 -33.00 32.00 -32.00 -65.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 0.00 -129.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -65.00 0.00 -32.00 -65.00 -32.00 0.00 -32.00 -64.00 64.00 -32.00 -64.00 -97.00 -65.00 -96.00 -32.00 -64.00 0.00 -97.00 0.00 -32.00 0.00 -64.00 129.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 -32.00 -97.00 -32.00 0.00 -32.00 -96.00 0.00 0.00 -33.00 32.00 -160.00 0.00 -65.00 32.00 -64.00 0.00 -64.00 32.00 0.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 97.00 -64.00 64.00 -161.00 0.00 -32.00 64.00 -32.00 0.00 -97.00 -32.00 -32.00 32.00 -64.00 33.00 0.00 0.00 -32.00 -33.00 -33.00 33.00 -32.00 0.00 -128.00 64.00 -65.00 0.00 -96.00 0.00 -32.00 -32.00 -97.00 0.00 -96.00 -65.00 -32.00 33.00 -65.00 0.00 -32.00 -65.00 -32.00 -64.00 -32.00 96.00 -129.00 0.00 -96.00 -128.00 -64.00 -65.00 0.00 -32.00 -33.00 129.00 -64.00 32.00 32.00 64.00 0.00 33.00 -64.00 96.00 -32.00 0.00 -65.00 -32.00 -96.00 64.00 0.00 64.00 -129.00 33.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -64.00 32.00 -161.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -129.00 -32.00 0.00 0.00 -64.00 -65.00 32.00 -96.00 -96.00 0.00 -33.00 129.00 -32.00 -193.00 -96.00 -33.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 97.00 -96.00 32.00 0.00 0.00 -65.00 32.00 -32.00 -64.00 -96.00 64.00 -32.00 -64.00 -32.00 -65.00 -65.00 -96.00 0.00 -65.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 -96.00 0.00 -33.00 32.00 -64.00 32.00 -32.00 -32.00 -64.00 32.00 -97.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00z\"\n          },\n          go: {\n            name: \"GO\",\n            path: \"M104003.00 112858.00lz\"\n          },\n          ms: {\n            name: \"MS\",\n            path: \"M81302.00 122857.00l708.00 -1479.00 482.00 -1061.00 354.00 0.00 64.00 -96.00 -32.00 0.00 32.00 -65.00 -64.00 -64.00 -33.00 -32.00 -32.00 0.00 0.00 -386.00 -225.00 0.00 997.00 -3215.00 482.00 -32.00 0.00 -33.00 -64.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 0.00 32.00 -353.00 -322.00 -33.00 -128.00 -64.00 -290.00 -579.00 -1093.00 193.00 0.00 0.00 -96.00 -193.00 -161.00 65.00 -193.00 -65.00 -64.00 -32.00 0.00 -64.00 -129.00 -32.00 0.00 -65.00 -161.00 -64.00 -32.00 -32.00 -64.00 32.00 -65.00 0.00 -64.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 32.00 -64.00 -64.00 0.00 32.00 0.00 32.00 -65.00 -64.00 33.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 161.00 32.00 64.00 -129.00 64.00 -32.00 64.00 64.00 0.00 129.00 65.00 32.00 0.00 65.00 0.00 64.00 32.00 128.00 32.00 0.00 0.00 65.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 33.00 0.00 -33.00 32.00 -32.00 32.00 0.00 32.00 0.00 64.00 -32.00 32.00 64.00 33.00 0.00 32.00 33.00 0.00 0.00 32.00 96.00 -32.00 0.00 -32.00 32.00 0.00 65.00 64.00 32.00 64.00 32.00 32.00 -32.00 0.00 32.00 65.00 64.00 32.00 -32.00 32.00 -32.00 0.00 32.00 96.00 0.00 33.00 129.00 -33.00 32.00 97.00 64.00 0.00 32.00 32.00 97.00 64.00 -33.00 65.00 129.00 64.00 161.00 -32.00 0.00 96.00 64.00 97.00 65.00 32.00 32.00 -64.00 -32.00 -97.00 64.00 0.00 64.00 -96.00 64.00 32.00 0.00 -32.00 33.00 -32.00 0.00 -33.00 64.00 33.00 64.00 -97.00 32.00 0.00 32.00 32.00 33.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 64.00 0.00 0.00 -32.00 65.00 -32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 -32.00 32.00 32.00 32.00 0.00 -64.00 97.00 32.00 64.00 -32.00 96.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 32.00 32.00 64.00 -64.00 33.00 32.00 0.00 -32.00 32.00 0.00 96.00 0.00 97.00 -32.00 96.00 0.00 64.00 -64.00 129.00 64.00 0.00 -32.00 96.00 0.00 0.00 -97.00 65.00 -32.00 32.00 -64.00 64.00 0.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 -193.00 64.00 0.00 0.00 -32.00 32.00 -64.00 32.00 0.00 33.00 0.00 64.00 -65.00 32.00 -96.00 97.00 -129.00 0.00 -32.00 -65.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 -64.00 65.00 0.00 64.00 -96.00 96.00 -33.00 65.00 -32.00 64.00 32.00 64.00 -32.00 33.00 -96.00 32.00 0.00 32.00 -64.00 -32.00 -33.00 32.00 -64.00 32.00 32.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 64.00 0.00 33.00 -33.00 0.00 -32.00 -65.00 -32.00 32.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -32.00 -33.00 0.00 -64.00 -32.00 64.00 -33.00 0.00 -96.00 129.00 -32.00 64.00 32.00 33.00 0.00 -33.00 -64.00 33.00 -33.00 96.00 -64.00 0.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -65.00 64.00 0.00 33.00 0.00 0.00 -64.00 64.00 0.00 32.00 32.00 129.00 0.00 -33.00 32.00 65.00 -32.00 32.00 32.00 0.00 33.00 64.00 32.00 32.00 -32.00 -32.00 -33.00 32.00 0.00 33.00 65.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 32.00 64.00 33.00 0.00 -33.00 64.00 0.00 0.00 33.00 33.00 0.00 64.00 0.00 32.00 0.00 64.00 0.00 -32.00 -65.00 32.00 0.00 97.00 32.00 96.00 -64.00 32.00 32.00 32.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -64.00 32.00 32.00 32.00 -64.00 0.00 64.00 32.00 0.00 97.00 64.00 0.00 -32.00 32.00 0.00 0.00 64.00 64.00 -32.00 0.00 64.00 32.00 33.00 65.00 -65.00 64.00 -32.00 32.00 32.00 32.00 -64.00 64.00 0.00 33.00 -64.00 0.00 -32.00 96.00 -33.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 65.00 65.00 0.00 -32.00 64.00 0.00 0.00 -33.00 32.00 -32.00 32.00 0.00 32.00 32.00 33.00 -32.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 -32.00 0.00 32.00 -33.00 65.00 33.00 -33.00 -65.00 0.00 -32.00 33.00 32.00 0.00 -64.00 64.00 0.00 32.00 32.00 64.00 0.00 0.00 -32.00 65.00 32.00 -33.00 -64.00 33.00 0.00 32.00 -32.00 64.00 32.00 0.00 -129.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 32.00 96.00 32.00 65.00 -32.00 32.00 0.00 32.00 0.00 32.00 64.00 32.00 0.00 -32.00 -64.00 32.00 0.00 65.00 64.00 64.00 32.00 64.00 65.00 -64.00 0.00 0.00 64.00 32.00 -32.00 0.00 32.00 0.00 96.00 32.00 -32.00 0.00 65.00 32.00 -33.00 32.00 0.00 0.00 97.00 33.00 -64.00 32.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 -32.00 32.00 64.00 96.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 32.00 129.00 0.00 -32.00 32.00 -33.00 0.00 0.00 32.00 65.00 -32.00 -32.00 32.00 32.00 33.00 64.00 -33.00 -32.00 -32.00 32.00 -32.00 64.00 97.00 33.00 -33.00 32.00 65.00 32.00 32.00 32.00 -32.00 32.00 0.00 -32.00 32.00 32.00 32.00 32.00 -32.00 65.00 0.00 32.00 0.00 -32.00 64.00 96.00 97.00 0.00 -33.00 32.00 -32.00 32.00 65.00 32.00 -33.00 33.00 0.00 32.00 33.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 64.00 65.00 -64.00 32.00 64.00 64.00 -64.00 32.00 64.00 33.00 -64.00 32.00 64.00 64.00 -64.00 0.00 32.00 0.00 32.00 64.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 64.00 65.00 64.00 32.00 32.00 0.00 -64.00 64.00 64.00 32.00 33.00 65.00 -33.00 -33.00 33.00 33.00 0.00 -33.00 64.00 33.00 32.00 -33.00 0.00 33.00 32.00 -33.00 0.00 0.00 65.00 33.00 32.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 64.00 32.00 0.00 32.00 32.00 0.00 -32.00 64.00 64.00 -32.00 0.00 65.00 32.00 0.00 33.00 32.00 32.00 64.00 0.00 0.00 64.00 32.00 0.00 32.00 0.00 0.00 32.00 33.00 -32.00 0.00 32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 64.00 64.00 0.00 33.00 33.00 0.00 0.00 32.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 32.00 65.00 -32.00 64.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 32.00 32.00 65.00 32.00 32.00 0.00 0.00 97.00 64.00 0.00 0.00 -33.00 0.00 33.00 64.00 32.00 0.00 -32.00 -32.00 0.00 32.00 -33.00 33.00 33.00 96.00 -33.00 32.00 0.00 -32.00 33.00 64.00 32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 33.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 -32.00 32.00 32.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 65.00 32.00 -32.00 -32.00 32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 33.00 0.00 0.00 32.00 64.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 96.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 65.00 -32.00 32.00 32.00 0.00 33.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 0.00 65.00 0.00 0.00 32.00 64.00 32.00 64.00 -64.00 32.00 -65.00 33.00 33.00 0.00 -33.00 32.00 33.00 32.00 -33.00 32.00 33.00 0.00 -33.00 32.00 33.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 -32.00 0.00 32.00 64.00 0.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 33.00 33.00 0.00 -33.00 64.00 33.00 32.00 32.00 0.00 -32.00 32.00 -65.00 32.00 32.00 32.00 -64.00 33.00 32.00 0.00 -32.00 64.00 0.00 32.00 -32.00 161.00 0.00 32.00 0.00 32.00 64.00 64.00 -32.00 97.00 32.00 64.00 -32.00 32.00 0.00 97.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -65.00 32.00 0.00 65.00 -64.00 64.00 0.00 32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 97.00 -32.00 32.00 0.00 32.00 0.00 65.00 -32.00 0.00 -65.00 32.00 33.00 64.00 32.00 0.00 -32.00 32.00 0.00 65.00 -33.00 32.00 -32.00 64.00 32.00 96.00 -32.00 129.00 -64.00 32.00 -32.00 64.00 32.00 0.00 32.00 33.00 -32.00 32.00 64.00 96.00 -64.00 32.00 0.00 33.00 32.00 96.00 0.00 64.00 32.00 33.00 0.00 0.00 32.00 32.00 0.00 -32.00 65.00 32.00 0.00 0.00 32.00 32.00 64.00 161.00 32.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 33.00 32.00 32.00 32.00 32.00 97.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 0.00 65.00 32.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 -32.00 96.00 -32.00 33.00 64.00 32.00 96.00 64.00 0.00 -32.00 0.00 32.00 33.00 0.00 64.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 -32.00 32.00 0.00 64.00 0.00 32.00 -32.00 65.00 -32.00 32.00 -65.00 64.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 64.00 -32.00 32.00 32.00 65.00 0.00 32.00 32.00 32.00 -32.00 32.00 64.00 65.00 -32.00 32.00 32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 64.00 0.00 65.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 96.00 -97.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 32.00 0.00 -32.00 32.00 0.00 33.00 -65.00 32.00 -64.00 128.00 -32.00 32.00 0.00 33.00 32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 96.00 -33.00 33.00 -32.00 64.00 -64.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 129.00 -129.00 32.00 -64.00 32.00 -33.00 193.00 -64.00 -32.00 -96.00 32.00 -97.00 32.00 -32.00 32.00 -96.00 65.00 -32.00 96.00 0.00 65.00 -97.00 32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 0.00 64.00 -65.00 129.00 -32.00 64.00 32.00 0.00 65.00 65.00 32.00 -97.00 1993.00 -32.00 0.00 -64.00 32.00 -65.00 -32.00 -64.00 65.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 -161.00 64.00 -64.00 32.00 0.00 97.00 -33.00 32.00 -64.00 32.00 0.00 32.00 -32.00 32.00 -64.00 129.00 0.00 32.00 -32.00 64.00 -33.00 65.00 -128.00 160.00 0.00 65.00 -32.00 32.00 -33.00 64.00 0.00 32.00 0.00 32.00 33.00 65.00 -33.00 32.00 33.00 0.00 -33.00 64.00 33.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 64.00 0.00 33.00 0.00 0.00 -32.00 32.00 0.00 64.00 0.00 32.00 64.00 32.00 0.00 -32.00 -32.00 32.00 0.00 0.00 64.00 65.00 -32.00 32.00 32.00 0.00 33.00 32.00 -33.00 0.00 33.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 -32.00 33.00 0.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 33.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 32.00 161.00 -32.00 32.00 0.00 33.00 32.00 32.00 -32.00 32.00 0.00 0.00 32.00 64.00 0.00 32.00 65.00 32.00 -65.00 33.00 -32.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 129.00 0.00 32.00 32.00 0.00 -32.00 64.00 0.00 0.00 32.00 32.00 64.00 97.00 32.00 0.00 32.00 64.00 0.00 32.00 -32.00 32.00 0.00 0.00 65.00 65.00 0.00 64.00 32.00 64.00 0.00 32.00 32.00 33.00 0.00 32.00 32.00 64.00 32.00 32.00 -32.00 32.00 0.00 32.00 -64.00 33.00 -32.00 0.00 -97.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 -32.00 33.00 64.00 32.00 -32.00 0.00 32.00 32.00 0.00 96.00 64.00 97.00 -32.00 96.00 32.00 32.00 0.00 33.00 -32.00 128.00 -32.00 193.00 32.00 97.00 32.00 32.00 0.00 64.00 33.00 64.00 32.00 32.00 0.00 33.00 64.00 96.00 32.00 482.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -129.00 0.00 -32.00 33.00 -64.00 32.00 -32.00 64.00 32.00 96.00 32.00 193.00 0.00 97.00 96.00 289.00 0.00 129.00 33.00 128.00 0.00 193.00 160.00 161.00 129.00 0.00 64.00 32.00 32.00 0.00 33.00 -128.00 160.00 -97.00 161.00 -32.00 129.00 0.00 225.00 64.00 225.00 0.00 32.00 0.00 96.00 33.00 65.00 32.00 96.00 64.00 0.00 32.00 32.00 32.00 -32.00 97.00 -96.00 96.00 -65.00 129.00 -192.00 32.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 129.00 -97.00 64.00 -32.00 65.00 -32.00 96.00 -129.00 32.00 -96.00 129.00 0.00 32.00 32.00 64.00 0.00 65.00 64.00 64.00 32.00 64.00 -32.00 64.00 97.00 0.00 32.00 33.00 0.00 96.00 193.00 32.00 128.00 65.00 0.00 32.00 33.00 0.00 64.00 32.00 64.00 -32.00 129.00 64.00 96.00 0.00 65.00 32.00 96.00 0.00 64.00 32.00 161.00 -64.00 32.00 0.00 161.00 32.00 32.00 32.00 64.00 -32.00 129.00 0.00 32.00 -32.00 97.00 -64.00 64.00 -32.00 0.00 -33.00 96.00 0.00 65.00 33.00 0.00 32.00 96.00 32.00 129.00 64.00 128.00 0.00 97.00 193.00 0.00 32.00 64.00 32.00 0.00 33.00 0.00 32.00 64.00 32.00 0.00 32.00 97.00 96.00 0.00 33.00 64.00 0.00 -32.00 32.00 97.00 0.00 0.00 64.00 -33.00 0.00 65.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 64.00 33.00 65.00 32.00 64.00 0.00 0.00 -65.00 96.00 0.00 65.00 33.00 0.00 -33.00 64.00 65.00 128.00 0.00 65.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 64.00 -32.00 32.00 0.00 0.00 32.00 33.00 0.00 0.00 32.00 32.00 32.00 0.00 65.00 32.00 0.00 32.00 32.00 32.00 32.00 32.00 0.00 33.00 32.00 32.00 0.00 64.00 32.00 0.00 -32.00 32.00 32.00 0.00 65.00 32.00 32.00 -32.00 0.00 64.00 64.00 33.00 0.00 -33.00 0.00 0.00 32.00 33.00 0.00 32.00 32.00 64.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 32.00 0.00 33.00 0.00 -33.00 64.00 33.00 32.00 0.00 32.00 32.00 -32.00 32.00 0.00 32.00 32.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 32.00 64.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 -32.00 -64.00 32.00 32.00 33.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 64.00 0.00 0.00 32.00 32.00 0.00 33.00 64.00 64.00 0.00 32.00 65.00 0.00 32.00 32.00 0.00 32.00 64.00 32.00 0.00 0.00 32.00 65.00 65.00 32.00 0.00 0.00 -33.00 32.00 0.00 32.00 0.00 -32.00 33.00 0.00 32.00 97.00 0.00 128.00 64.00 -32.00 0.00 64.00 32.00 -32.00 0.00 65.00 32.00 32.00 -32.00 64.00 65.00 64.00 0.00 32.00 0.00 -32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 33.00 -32.00 32.00 64.00 32.00 0.00 32.00 -32.00 32.00 32.00 -32.00 0.00 64.00 64.00 32.00 -32.00 161.00 97.00 65.00 -33.00 32.00 0.00 64.00 33.00 64.00 0.00 0.00 32.00 65.00 -32.00 32.00 -33.00 64.00 0.00 0.00 33.00 97.00 0.00 32.00 32.00 32.00 0.00 64.00 0.00 97.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 64.00 0.00 32.00 -32.00 65.00 64.00 32.00 -32.00 32.00 0.00 32.00 32.00 64.00 0.00 33.00 0.00 32.00 32.00 32.00 0.00 -32.00 33.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 97.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 96.00 -33.00 65.00 33.00 128.00 0.00 0.00 96.00 32.00 0.00 33.00 32.00 32.00 32.00 32.00 -32.00 0.00 64.00 96.00 33.00 32.00 32.00 33.00 -32.00 64.00 0.00 0.00 -33.00 32.00 0.00 32.00 0.00 32.00 33.00 33.00 -33.00 0.00 33.00 64.00 0.00 32.00 64.00 64.00 32.00 129.00 0.00 64.00 64.00 65.00 0.00 32.00 33.00 64.00 0.00 32.00 0.00 0.00 32.00 97.00 64.00 0.00 32.00 32.00 -32.00 32.00 32.00 64.00 64.00 0.00 65.00 32.00 0.00 32.00 96.00 33.00 32.00 0.00 33.00 -65.00 32.00 97.00 32.00 32.00 -32.00 32.00 32.00 -32.00 32.00 96.00 0.00 0.00 96.00 97.00 0.00 64.00 65.00 32.00 32.00 33.00 32.00 0.00 32.00 -65.00 32.00 -64.00 65.00 0.00 64.00 161.00 225.00 32.00 64.00 0.00 97.00 0.00 64.00 -64.00 0.00 -33.00 0.00 -96.00 -32.00 -32.00 0.00 -65.00 32.00 -32.00 64.00 -96.00 258.00 -32.00 32.00 -65.00 128.00 -32.00 161.00 -32.00 32.00 0.00 33.00 96.00 96.00 -64.00 96.00 32.00 65.00 0.00 32.00 65.00 64.00 0.00 161.00 0.00 129.00 32.00 64.00 64.00 96.00 0.00 33.00 0.00 32.00 0.00 32.00 -96.00 225.00 64.00 161.00 0.00 128.00 -32.00 97.00 -32.00 32.00 64.00 96.00 32.00 65.00 0.00 64.00 -129.00 257.00 -96.00 225.00 -64.00 193.00 -32.00 65.00 -161.00 128.00 -64.00 32.00 -65.00 65.00 -64.00 32.00 -32.00 0.00 -97.00 32.00 -128.00 32.00 -193.00 0.00 -290.00 64.00 -96.00 65.00 -97.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 129.00 -64.00 32.00 -161.00 289.00 0.00 32.00 -64.00 33.00 -129.00 96.00 -64.00 64.00 -161.00 258.00 -32.00 96.00 -97.00 96.00 -225.00 129.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 -32.00 32.00 -161.00 354.00 -32.00 160.00 64.00 97.00 0.00 32.00 0.00 32.00 -32.00 161.00 0.00 161.00 32.00 96.00 64.00 64.00 -32.00 225.00 -32.00 65.00 -193.00 128.00 -32.00 0.00 -193.00 0.00 -64.00 32.00 -129.00 161.00 -32.00 97.00 -64.00 96.00 0.00 97.00 -65.00 160.00 -96.00 33.00 -32.00 64.00 -32.00 0.00 -97.00 32.00 -129.00 0.00 -32.00 32.00 -32.00 64.00 32.00 161.00 -32.00 65.00 32.00 32.00 65.00 96.00 32.00 193.00 32.00 32.00 -32.00 161.00 -32.00 129.00 0.00 32.00 0.00 32.00 0.00 32.00 -33.00 32.00 -192.00 161.00 -33.00 129.00 -32.00 96.00 -32.00 97.00 -96.00 96.00 -65.00 96.00 -32.00 33.00 -128.00 64.00 -97.00 0.00 -193.00 -32.00 -32.00 0.00 -64.00 32.00 -65.00 128.00 -64.00 97.00 32.00 64.00 161.00 129.00 0.00 96.00 64.00 129.00 0.00 96.00 0.00 33.00 -128.00 225.00 -65.00 64.00 -32.00 64.00 -193.00 65.00 -96.00 64.00 -97.00 225.00 0.00 64.00 -32.00 97.00 -225.00 160.00 -64.00 97.00 -64.00 32.00 0.00 32.00 -65.00 0.00 -160.00 193.00 -33.00 97.00 -128.00 418.00 -161.00 225.00 -64.00 64.00 -33.00 32.00 -32.00 97.00 -225.00 160.00 -32.00 33.00 -96.00 96.00 -32.00 64.00 -33.00 0.00 -32.00 32.00 -96.00 33.00 -129.00 64.00 -161.00 32.00 -96.00 97.00 -97.00 64.00 -64.00 32.00 -96.00 64.00 -193.00 65.00 -129.00 96.00 -96.00 32.00 -258.00 161.00 -32.00 64.00 -160.00 129.00 -65.00 129.00 -32.00 0.00 -128.00 64.00 -258.00 64.00 -32.00 32.00 -32.00 0.00 -193.00 97.00 -64.00 96.00 -32.00 32.00 -193.00 65.00 -32.00 32.00 -97.00 96.00 -96.00 129.00 -33.00 64.00 0.00 32.00 0.00 33.00 33.00 32.00 -97.00 160.00 -32.00 0.00 -225.00 290.00 -64.00 64.00 -33.00 32.00 -96.00 0.00 -96.00 0.00 0.00 32.00 -33.00 0.00 -289.00 97.00 -96.00 32.00 -65.00 32.00 -64.00 32.00 -32.00 32.00 -65.00 97.00 -128.00 32.00 -32.00 0.00 0.00 32.00 -97.00 97.00 -96.00 32.00 -161.00 96.00 -161.00 65.00 -64.00 32.00 -64.00 32.00 -65.00 96.00 0.00 33.00 -64.00 64.00 -64.00 32.00 -97.00 64.00 -32.00 129.00 -96.00 129.00 0.00 64.00 0.00 546.00 -129.00 129.00 0.00 64.00 -129.00 193.00 -64.00 225.00 -64.00 161.00 0.00 32.00 -64.00 129.00 -161.00 225.00 -32.00 32.00 -226.00 64.00 -289.00 193.00 -257.00 129.00 -129.00 -32.00 -32.00 32.00 -64.00 32.00 0.00 32.00 -129.00 225.00 0.00 193.00 -64.00 193.00 -32.00 193.00 -32.00 129.00 -33.00 64.00 -32.00 97.00 -32.00 192.00 0.00 33.00 -96.00 160.00 -32.00 193.00 -33.00 97.00 33.00 32.00 -33.00 64.00 33.00 97.00 0.00 128.00 -97.00 290.00 -32.00 64.00 -97.00 96.00 -193.00 97.00 -353.00 257.00 -129.00 32.00 -32.00 0.00 -32.00 32.00 -129.00 -96.00 0.00 -64.00 -32.00 -65.00 0.00 -64.00 -96.00 -32.00 -65.00 32.00 -64.00 -64.00 -64.00 -32.00 -97.00 -97.00 -64.00 -32.00 -64.00 -161.00 0.00 -64.00 -32.00 -32.00 -65.00 -32.00 -160.00 -33.00 -97.00 -96.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 -32.00 -97.00 32.00 0.00 -32.00 33.00 -64.00 -97.00 -33.00 0.00 -64.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 -64.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -32.00 -64.00 -65.00 0.00 -32.00 -33.00 -64.00 97.00 -64.00 64.00 0.00 65.00 -33.00 32.00 -193.00 32.00 0.00 -64.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 0.00 32.00 -64.00 32.00 -32.00 32.00 -96.00 -32.00 -65.00 64.00 0.00 65.00 -32.00 -32.00 -96.00 32.00 -33.00 -65.00 -32.00 0.00 -32.00 65.00 -64.00 0.00 0.00 64.00 -64.00 0.00 0.00 32.00 0.00 32.00 -33.00 32.00 33.00 97.00 -65.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -65.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 -65.00 32.00 -64.00 32.00 -64.00 32.00 -32.00 0.00 -33.00 65.00 -64.00 -32.00 0.00 -33.00 -32.00 33.00 -64.00 -33.00 -32.00 -64.00 -33.00 -32.00 -64.00 64.00 -32.00 0.00 0.00 32.00 -64.00 33.00 -33.00 0.00 -32.00 -33.00 -32.00 33.00 -96.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 32.00 0.00 32.00 -193.00 0.00 -96.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 -33.00 -32.00 -96.00 -64.00 -64.00 0.00 -97.00 161.00 -32.00 0.00 -64.00 -32.00 -32.00 -33.00 -65.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -64.00 0.00 -33.00 -64.00 0.00 32.00 -64.00 -96.00 -64.00 32.00 -64.00 32.00 -129.00 -32.00 -64.00 0.00 -161.00 0.00 -32.00 -32.00 -32.00 64.00 -129.00 0.00 -97.00 -64.00 -64.00 32.00 0.00 -32.00 -64.00 32.00 -97.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 -32.00 32.00 -96.00 -32.00 -33.00 -32.00 0.00 0.00 -128.00 -32.00 -65.00 -32.00 33.00 -32.00 -33.00 -65.00 -32.00 0.00 -32.00 -96.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -129.00 32.00 -64.00 0.00 -32.00 32.00 -32.00 -64.00 -65.00 0.00 -64.00 -32.00 -64.00 0.00 -32.00 -33.00 -97.00 -32.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 64.00 0.00 33.00 -97.00 -33.00 -32.00 161.00 -193.00 32.00 -161.00 -32.00 -64.00 -32.00 0.00 0.00 -64.00 -64.00 -97.00 -97.00 -64.00 32.00 -64.00 -32.00 -97.00 0.00 -32.00 97.00 -32.00 64.00 -64.00 -32.00 -33.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -65.00 -96.00 65.00 0.00 32.00 -65.00 32.00 -32.00 -96.00 -96.00 0.00 -97.00 -65.00 -32.00 -64.00 -32.00 -32.00 0.00 -97.00 32.00 0.00 -96.00 0.00 -65.00 -32.00 -64.00 -64.00 -129.00 32.00 0.00 0.00 -96.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 -32.00 -32.00 -65.00 -32.00 33.00 -128.00 -33.00 -33.00 65.00 -32.00 -65.00 -128.00 0.00 -33.00 0.00 -32.00 -64.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 -97.00 0.00 -64.00 -64.00 -32.00 32.00 -65.00 -32.00 -96.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 64.00 -33.00 0.00 -64.00 33.00 -32.00 64.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -96.00 -32.00 -96.00 32.00 -33.00 -32.00 -64.00 0.00 -96.00 -32.00 -33.00 0.00 -96.00 -97.00 -96.00 -96.00 -65.00 -32.00 -32.00 -65.00 0.00 -32.00 -64.00 -32.00 -65.00 -129.00 -64.00 -96.00 -257.00 0.00 -64.00 -32.00 -65.00 32.00 -64.00 32.00 0.00 0.00 -32.00 32.00 -97.00 -32.00 -128.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 -97.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -64.00 -32.00 32.00 -64.00 0.00 -32.00 -129.00 -65.00 -32.00 -96.00 -32.00 -129.00 -64.00 -64.00 -193.00 0.00 -97.00 -32.00 -32.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -64.00 -64.00 -97.00 32.00 0.00 64.00 -32.00 0.00 -32.00 -32.00 -129.00 -32.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 -64.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 -96.00 -65.00 0.00 -64.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 -65.00 -65.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 -64.00 0.00 -32.00 -32.00 0.00 -33.00 -64.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -96.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -65.00 -32.00 32.00 -33.00 0.00 -96.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -33.00 64.00 -96.00 0.00 -32.00 33.00 0.00 32.00 -65.00 0.00 0.00 64.00 -32.00 32.00 0.00 32.00 32.00 33.00 -32.00 0.00 0.00 64.00 -64.00 -32.00 0.00 64.00 32.00 0.00 -96.00 64.00 0.00 65.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -33.00 64.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 0.00 33.00 -97.00 64.00 -32.00 0.00 -32.00 0.00 32.00 96.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 0.00 32.00 32.00 33.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 64.00 -64.00 -32.00 32.00 -32.00 -32.00 -32.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 33.00 -32.00 -33.00 0.00 -64.00 32.00 0.00 64.00 0.00 33.00 0.00 64.00 -64.00 32.00 -32.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -64.00 -32.00 -33.00 -32.00 33.00 -65.00 -33.00 -64.00 -32.00 0.00 -64.00 32.00 0.00 32.00 -32.00 33.00 -32.00 -33.00 -33.00 -32.00 33.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 -32.00 -32.00 -64.00 -65.00 32.00 -64.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 -65.00 65.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -65.00 0.00 32.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 -32.00 32.00 -97.00 -64.00 33.00 -96.00 -33.00 -65.00 33.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 32.00 33.00 -64.00 0.00 0.00 32.00 -97.00 64.00 -64.00 -64.00 -97.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 -64.00 32.00 0.00 33.00 -65.00 32.00 33.00 32.00 -33.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -33.00 -33.00 33.00 -64.00 0.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -97.00 -32.00 -64.00 32.00 32.00 -32.00 -64.00 0.00 -64.00 -64.00 -33.00 32.00 0.00 32.00 0.00 -64.00 -32.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -65.00 0.00 -64.00 -65.00 -32.00 0.00 -32.00 32.00 -65.00 33.00 -128.00 -33.00 -32.00 0.00 -33.00 -64.00 0.00 -96.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 -33.00 -129.00 65.00 -128.00 0.00 -33.00 -32.00 -64.00 -65.00 -32.00 32.00 -64.00 0.00 0.00 33.00 -33.00 32.00 0.00 32.00 -64.00 -64.00 -32.00 32.00 -32.00 0.00 0.00 64.00 32.00 0.00 0.00 64.00 -64.00 33.00 -32.00 0.00 -33.00 0.00 -96.00 -65.00 -32.00 32.00 -32.00 97.00 -32.00 0.00 -33.00 -64.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 -161.00 64.00 32.00 33.00 -64.00 -33.00 -64.00 0.00 -33.00 -32.00 -64.00 0.00 -128.00 0.00 32.00 -64.00 -32.00 -32.00 -33.00 -97.00 -64.00 0.00 -32.00 -32.00 -32.00 64.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 32.00 -160.00 -32.00 -33.00 -64.00 0.00 0.00 -64.00 32.00 -64.00 161.00 -97.00 0.00 -32.00 0.00 -96.00 64.00 -64.00 64.00 -226.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 97.00 -64.00 64.00 0.00 32.00 -33.00 -32.00 -32.00 -257.00 -128.00 0.00 -32.00 96.00 -33.00 97.00 -32.00 96.00 -193.00 0.00 -96.00 -64.00 0.00 -65.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 -64.00 193.00 -129.00 65.00 -64.00 0.00 -32.00 -193.00 -97.00 -32.00 -64.00 -65.00 -128.00 65.00 -97.00 96.00 -32.00 0.00 -32.00 -64.00 -65.00 -161.00 -64.00 -32.00 -96.00 0.00 -97.00 32.00 -96.00 64.00 -32.00 65.00 -97.00 32.00 -64.00 0.00 -64.00 64.00 -161.00 32.00 -97.00 193.00 -225.00 32.00 -64.00 32.00 -97.00 -32.00 -32.00 -193.00 -32.00 -64.00 -64.00 -64.00 -64.00 32.00 -33.00 289.00 -193.00 32.00 -64.00 0.00 -161.00 -64.00 -257.00 0.00 -32.00 97.00 -161.00 -97.00 -161.00 -32.00 -128.00 96.00 -64.00 97.00 -161.00 64.00 -65.00 -32.00 -64.00 0.00 -128.00 0.00 -33.00 -64.00 0.00 -65.00 65.00 -64.00 0.00 -32.00 -32.00 -64.00 -129.00 -33.00 -32.00 -64.00 -32.00 -64.00 32.00 -64.00 -32.00 32.00 -65.00 96.00 -64.00 193.00 -129.00 32.00 -96.00 -32.00 -64.00 -161.00 -129.00 -64.00 0.00 -96.00 64.00 -65.00 0.00 -64.00 -32.00 0.00 -32.00 64.00 -161.00 65.00 -32.00 64.00 -32.00 193.00 32.00 64.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 -65.00 -129.00 -160.00 -32.00 -65.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 193.00 -161.00 0.00 0.00 -64.00 0.00 -32.00 33.00 -97.00 32.00 -96.00 0.00 -32.00 -97.00 0.00 -96.00 -129.00 0.00 -97.00 64.00 -96.00 -96.00 -289.00 32.00 -129.00 96.00 -161.00 0.00 -64.00 -128.00 -193.00 -193.00 -32.00 -129.00 -97.00 -64.00 -225.00 32.00 -96.00 32.00 -161.00 0.00 -64.00 -32.00 -32.00 -32.00 -32.00 -97.00 0.00 -32.00 32.00 -64.00 64.00 0.00 32.00 -97.00 -64.00 -32.00 -129.00 32.00 -32.00 33.00 -64.00 128.00 -32.00 32.00 -65.00 -32.00 -32.00 -32.00 -32.00 -129.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 33.00 -64.00 96.00 0.00 96.00 -32.00 33.00 -96.00 96.00 -65.00 193.00 -32.00 0.00 -32.00 64.00 -161.00 65.00 -32.00 96.00 0.00 64.00 0.00 65.00 -32.00 64.00 -129.00 64.00 -32.00 32.00 0.00 65.00 32.00 96.00 97.00 64.00 -129.00 129.00 -161.00 32.00 -64.00 -1318.00 -1029.00 482.00 -1029.00z\"\n          },\n          mg: {\n            name: \"MG\",\n            path: \"M114452.00 124015.00l-32.00 -65.00 64.00 -96.00 -96.00 -96.00 0.00 -33.00 32.00 -32.00 32.00 -161.00 65.00 -128.00 32.00 -32.00 96.00 -258.00 32.00 -64.00 65.00 -32.00 32.00 0.00 96.00 32.00 33.00 0.00 64.00 0.00 0.00 -64.00 0.00 -97.00 -32.00 -64.00 -161.00 -225.00 0.00 -64.00 64.00 -65.00 65.00 -32.00 160.00 65.00 290.00 96.00 32.00 0.00 64.00 -64.00 0.00 -32.00 -64.00 -97.00 -161.00 -129.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 64.00 -64.00 32.00 -129.00 65.00 -97.00 0.00 -96.00 32.00 -64.00 0.00 -32.00 64.00 -97.00 129.00 -129.00 96.00 0.00 97.00 -128.00 32.00 -64.00 0.00 -33.00 0.00 -64.00 32.00 -64.00 257.00 -65.00 32.00 -64.00 -32.00 -96.00 32.00 -32.00 65.00 0.00 64.00 0.00 289.00 0.00 65.00 -65.00 128.00 -64.00 0.00 -32.00 33.00 0.00 64.00 -129.00 128.00 -193.00 0.00 -128.00 -32.00 -32.00 32.00 -97.00 -64.00 -161.00 0.00 -64.00 64.00 -32.00 129.00 -64.00 32.00 0.00 97.00 -129.00 96.00 -257.00 0.00 -32.00 32.00 -33.00 97.00 -32.00 64.00 0.00 32.00 -32.00 97.00 -257.00 160.00 -225.00 65.00 -65.00 64.00 -32.00 32.00 -32.00 64.00 -32.00 97.00 -32.00 161.00 32.00 96.00 0.00 161.00 -96.00 386.00 64.00 96.00 -97.00 65.00 -64.00 64.00 -161.00 32.00 -32.00 64.00 0.00 161.00 0.00 32.00 64.00 193.00 33.00 129.00 0.00 96.00 -65.00 32.00 0.00 33.00 32.00 32.00 33.00 64.00 0.00 64.00 64.00 97.00 0.00 96.00 32.00 32.00 0.00 33.00 0.00 32.00 -64.00 32.00 -65.00 64.00 -32.00 64.00 32.00 33.00 0.00 64.00 -32.00 96.00 -64.00 65.00 -32.00 64.00 0.00 32.00 0.00 97.00 64.00 32.00 0.00 32.00 -64.00 -97.00 -97.00 33.00 -32.00 0.00 -32.00 96.00 -32.00 257.00 -32.00 65.00 32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -129.00 32.00 -32.00 32.00 0.00 65.00 -32.00 96.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 97.00 0.00 64.00 32.00 96.00 226.00 225.00 64.00 161.00 32.00 0.00 64.00 32.00 97.00 -32.00 32.00 -32.00 32.00 -97.00 97.00 -96.00 64.00 -161.00 32.00 0.00 96.00 32.00 33.00 -32.00 32.00 -96.00 32.00 -32.00 32.00 -32.00 32.00 0.00 97.00 -33.00 32.00 -96.00 64.00 -129.00 64.00 -64.00 65.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 -97.00 -64.00 0.00 -32.00 33.00 -32.00 96.00 32.00 129.00 -32.00 32.00 -32.00 128.00 -97.00 97.00 0.00 0.00 32.00 -32.00 32.00 0.00 33.00 64.00 0.00 32.00 32.00 64.00 0.00 0.00 32.00 129.00 -64.00 32.00 -65.00 0.00 -64.00 97.00 -64.00 96.00 32.00 32.00 0.00 33.00 -64.00 32.00 0.00 0.00 -97.00 32.00 0.00 32.00 -32.00 64.00 -32.00 97.00 -97.00 96.00 0.00 32.00 65.00 129.00 0.00 32.00 64.00 161.00 32.00 32.00 32.00 32.00 161.00 64.00 0.00 65.00 -96.00 64.00 -33.00 64.00 33.00 97.00 -65.00 96.00 32.00 97.00 -32.00 64.00 32.00 64.00 -32.00 65.00 0.00 64.00 0.00 64.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 193.00 32.00 33.00 0.00 32.00 -32.00 96.00 0.00 32.00 32.00 0.00 64.00 32.00 32.00 97.00 0.00 64.00 65.00 97.00 -65.00 32.00 0.00 32.00 33.00 -32.00 64.00 32.00 32.00 161.00 -96.00 64.00 32.00 64.00 -32.00 33.00 0.00 32.00 0.00 0.00 64.00 32.00 0.00 161.00 0.00 64.00 -32.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 64.00 65.00 0.00 32.00 0.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 128.00 -97.00 65.00 -64.00 32.00 0.00 32.00 0.00 32.00 64.00 129.00 0.00 0.00 65.00 32.00 32.00 128.00 0.00 97.00 32.00 64.00 0.00 0.00 64.00 64.00 64.00 0.00 65.00 97.00 32.00 64.00 32.00 97.00 32.00 32.00 0.00 64.00 0.00 32.00 -32.00 33.00 -64.00 32.00 0.00 32.00 32.00 32.00 64.00 64.00 32.00 65.00 32.00 0.00 33.00 32.00 32.00 32.00 0.00 96.00 -65.00 0.00 33.00 0.00 64.00 0.00 64.00 32.00 0.00 33.00 0.00 0.00 97.00 32.00 32.00 32.00 -32.00 64.00 -32.00 32.00 0.00 33.00 -97.00 32.00 -32.00 128.00 64.00 33.00 -32.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 32.00 65.00 33.00 32.00 0.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 -32.00 32.00 -33.00 32.00 33.00 32.00 0.00 -32.00 32.00 32.00 32.00 33.00 0.00 32.00 32.00 64.00 -32.00 32.00 -32.00 65.00 0.00 0.00 -32.00 -33.00 -33.00 33.00 -64.00 32.00 -32.00 32.00 0.00 -32.00 -64.00 128.00 0.00 0.00 64.00 32.00 0.00 33.00 0.00 64.00 -64.00 0.00 -32.00 32.00 0.00 32.00 0.00 65.00 -161.00 32.00 0.00 32.00 32.00 0.00 32.00 64.00 -32.00 32.00 0.00 0.00 -32.00 65.00 -65.00 -65.00 -32.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 64.00 -33.00 -32.00 -64.00 65.00 -32.00 0.00 32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 32.00 0.00 32.00 0.00 -64.00 -33.00 64.00 0.00 33.00 -32.00 32.00 -64.00 32.00 0.00 64.00 -64.00 32.00 0.00 0.00 32.00 0.00 96.00 0.00 32.00 32.00 33.00 0.00 -33.00 0.00 -32.00 65.00 -32.00 0.00 -64.00 64.00 -32.00 32.00 32.00 32.00 -32.00 33.00 0.00 -33.00 -32.00 33.00 -33.00 0.00 -32.00 64.00 32.00 0.00 -32.00 32.00 0.00 64.00 -64.00 32.00 0.00 33.00 32.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 64.00 0.00 0.00 33.00 32.00 -33.00 65.00 0.00 0.00 -32.00 -65.00 0.00 65.00 -32.00 0.00 -64.00 32.00 32.00 32.00 -32.00 64.00 0.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 65.00 32.00 32.00 -32.00 96.00 -64.00 32.00 0.00 65.00 32.00 -32.00 -64.00 32.00 0.00 32.00 0.00 32.00 -33.00 0.00 -64.00 -32.00 -64.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 32.00 0.00 0.00 -65.00 -96.00 -64.00 0.00 -64.00 -32.00 0.00 0.00 -33.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 33.00 0.00 -65.00 -32.00 32.00 0.00 33.00 -33.00 -33.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 64.00 -64.00 32.00 -65.00 0.00 -64.00 33.00 -32.00 32.00 0.00 0.00 -32.00 64.00 0.00 64.00 -64.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -64.00 64.00 0.00 0.00 -97.00 0.00 -64.00 -32.00 -64.00 -64.00 -97.00 -96.00 -96.00 -33.00 -65.00 -32.00 -64.00 -64.00 -32.00 -97.00 32.00 -96.00 -32.00 -64.00 -32.00 -65.00 0.00 -64.00 32.00 -161.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -128.00 -65.00 96.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -97.00 0.00 -64.00 -32.00 -32.00 -32.00 -64.00 -97.00 -33.00 -32.00 0.00 32.00 -64.00 65.00 0.00 0.00 -64.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 -33.00 65.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -32.00 33.00 32.00 32.00 -32.00 0.00 -97.00 -32.00 -32.00 96.00 -64.00 -32.00 0.00 0.00 -65.00 0.00 33.00 64.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 97.00 -32.00 32.00 64.00 32.00 -32.00 -32.00 -32.00 64.00 0.00 0.00 32.00 32.00 -32.00 -64.00 -64.00 32.00 0.00 0.00 -33.00 32.00 0.00 33.00 -32.00 64.00 32.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 96.00 -32.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -32.00 65.00 0.00 32.00 32.00 32.00 -32.00 -32.00 -33.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 64.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 33.00 0.00 0.00 -32.00 -33.00 -33.00 -32.00 -32.00 32.00 0.00 33.00 0.00 32.00 0.00 -65.00 -32.00 33.00 -32.00 -33.00 -32.00 97.00 0.00 32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 32.00 64.00 -32.00 33.00 65.00 32.00 -33.00 -32.00 -32.00 64.00 -32.00 64.00 32.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -65.00 32.00 65.00 0.00 -97.00 33.00 32.00 0.00 -32.00 32.00 32.00 32.00 0.00 0.00 -96.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 97.00 32.00 -32.00 -32.00 32.00 -33.00 32.00 33.00 32.00 -33.00 -32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 -32.00 -32.00 0.00 0.00 -96.00 32.00 0.00 0.00 32.00 65.00 32.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 32.00 0.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -64.00 0.00 96.00 -32.00 33.00 -33.00 -33.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 -32.00 -33.00 -32.00 33.00 0.00 -33.00 -33.00 -32.00 97.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 -64.00 -32.00 0.00 -64.00 32.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 64.00 0.00 0.00 -32.00 -32.00 -97.00 64.00 -64.00 -96.00 32.00 0.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 0.00 0.00 -65.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -33.00 0.00 -64.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -97.00 -32.00 33.00 -32.00 -33.00 64.00 -32.00 -32.00 -32.00 -32.00 0.00 32.00 0.00 -32.00 -64.00 -33.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -33.00 -32.00 33.00 0.00 -65.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 -64.00 -32.00 32.00 32.00 -64.00 -32.00 -32.00 0.00 32.00 -64.00 64.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 0.00 -33.00 -65.00 0.00 0.00 -32.00 -64.00 32.00 0.00 33.00 -32.00 0.00 0.00 -33.00 0.00 -64.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -33.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 32.00 -32.00 -65.00 0.00 0.00 -64.00 -32.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 -96.00 32.00 -33.00 32.00 -64.00 65.00 -32.00 32.00 -97.00 -32.00 -128.00 32.00 -32.00 32.00 -33.00 64.00 -32.00 97.00 -160.00 32.00 -65.00 32.00 0.00 32.00 -96.00 32.00 -32.00 0.00 -65.00 33.00 -32.00 -33.00 -32.00 33.00 -64.00 64.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -96.00 -32.00 -97.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 65.00 -32.00 0.00 -33.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 -32.00 0.00 -33.00 33.00 0.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -33.00 0.00 33.00 -32.00 -33.00 0.00 65.00 -32.00 0.00 -64.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 32.00 97.00 0.00 32.00 32.00 64.00 -32.00 32.00 0.00 32.00 0.00 33.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 32.00 33.00 0.00 32.00 -32.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -65.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 0.00 32.00 32.00 -32.00 64.00 65.00 -32.00 64.00 65.00 32.00 32.00 32.00 -32.00 32.00 32.00 33.00 -32.00 128.00 -97.00 450.00 -96.00 643.00 -161.00 65.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 -97.00 -161.00 33.00 -32.00 -33.00 -32.00 65.00 -128.00 -65.00 -161.00 0.00 -97.00 -96.00 -96.00 -64.00 -129.00 32.00 -161.00 -32.00 -64.00 32.00 -64.00 0.00 -32.00 -129.00 -32.00 0.00 -33.00 -32.00 0.00 -64.00 -64.00 -97.00 -32.00 -128.00 -97.00 0.00 -64.00 0.00 -161.00 64.00 -193.00 0.00 -192.00 96.00 -129.00 65.00 -64.00 64.00 -32.00 96.00 -33.00 65.00 -64.00 0.00 -32.00 -97.00 -32.00 65.00 -65.00 64.00 0.00 32.00 -128.00 -161.00 -193.00 -96.00 0.00 0.00 -225.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -64.00 64.00 -64.00 -128.00 32.00 -32.00 -32.00 -97.00 96.00 -129.00 32.00 -96.00 65.00 -129.00 32.00 -64.00 32.00 -32.00 -64.00 -32.00 0.00 -65.00 -65.00 -32.00 -64.00 -64.00 0.00 -64.00 32.00 -32.00 257.00 -161.00 33.00 -65.00 160.00 33.00 193.00 32.00 129.00 64.00 129.00 32.00 128.00 65.00 97.00 32.00 128.00 96.00 65.00 32.00 64.00 32.00 96.00 -32.00 32.00 0.00 65.00 -32.00 64.00 32.00 64.00 -64.00 32.00 -32.00 33.00 0.00 64.00 -64.00 32.00 0.00 64.00 32.00 33.00 -32.00 -33.00 -129.00 -32.00 -32.00 0.00 -32.00 -64.00 -33.00 32.00 -96.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -64.00 -33.00 -32.00 -32.00 0.00 -64.00 -32.00 -64.00 32.00 -161.00 32.00 -64.00 64.00 -161.00 -64.00 -97.00 -32.00 0.00 -97.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -65.00 97.00 -64.00 0.00 -96.00 32.00 0.00 96.00 -33.00 32.00 -32.00 33.00 -32.00 -33.00 -64.00 33.00 -65.00 64.00 33.00 96.00 -33.00 0.00 33.00 33.00 96.00 96.00 0.00 64.00 97.00 129.00 64.00 128.00 128.00 33.00 0.00 32.00 33.00 32.00 0.00 96.00 32.00 0.00 64.00 65.00 0.00 0.00 96.00 0.00 65.00 32.00 32.00 64.00 0.00 -32.00 96.00 -32.00 33.00 0.00 32.00 -32.00 64.00 32.00 0.00 32.00 32.00 64.00 0.00 0.00 64.00 33.00 33.00 128.00 0.00 64.00 -33.00 65.00 0.00 32.00 97.00 64.00 0.00 0.00 -32.00 32.00 0.00 129.00 64.00 96.00 -96.00 -32.00 -97.00 32.00 0.00 0.00 32.00 65.00 65.00 32.00 0.00 32.00 -33.00 64.00 0.00 33.00 65.00 32.00 0.00 64.00 0.00 32.00 -32.00 32.00 -129.00 65.00 32.00 64.00 -96.00 32.00 -65.00 32.00 0.00 0.00 33.00 64.00 0.00 97.00 96.00 -32.00 129.00 64.00 0.00 32.00 64.00 97.00 32.00 0.00 97.00 0.00 128.00 -32.00 32.00 0.00 32.00 0.00 161.00 -161.00 161.00 -32.00 32.00 0.00 64.00 -65.00 33.00 0.00 64.00 -64.00 32.00 -32.00 64.00 0.00 33.00 32.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 -64.00 32.00 -65.00 0.00 0.00 33.00 -64.00 0.00 -32.00 32.00 -97.00 0.00 0.00 64.00 97.00 64.00 0.00 97.00 32.00 64.00 32.00 -32.00 0.00 32.00 32.00 64.00 129.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 97.00 0.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 -97.00 -33.00 -32.00 65.00 0.00 0.00 -96.00 64.00 -64.00 161.00 -33.00 225.00 129.00 32.00 -32.00 32.00 0.00 0.00 -32.00 64.00 0.00 33.00 -32.00 32.00 0.00 0.00 -65.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 65.00 32.00 64.00 -32.00 64.00 32.00 64.00 0.00 33.00 0.00 64.00 0.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -33.00 33.00 33.00 0.00 -33.00 64.00 0.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 65.00 -96.00 32.00 -65.00 -32.00 -32.00 32.00 -64.00 32.00 0.00 0.00 32.00 32.00 -96.00 32.00 32.00 0.00 32.00 65.00 -32.00 32.00 -32.00 32.00 -97.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -64.00 32.00 32.00 0.00 -32.00 97.00 -97.00 0.00 -32.00 64.00 0.00 32.00 -32.00 32.00 0.00 33.00 0.00 64.00 64.00 32.00 0.00 64.00 -32.00 65.00 64.00 96.00 -64.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 33.00 -32.00 -33.00 0.00 65.00 -32.00 32.00 -65.00 32.00 0.00 0.00 33.00 32.00 0.00 97.00 -65.00 96.00 -96.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 32.00 33.00 0.00 0.00 -32.00 0.00 -32.00 96.00 0.00 32.00 -64.00 32.00 32.00 33.00 -64.00 -33.00 -65.00 33.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 64.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 33.00 -64.00 32.00 32.00 32.00 -65.00 32.00 -32.00 32.00 32.00 64.00 -64.00 0.00 -64.00 65.00 -32.00 32.00 -65.00 96.00 33.00 0.00 -33.00 32.00 0.00 33.00 0.00 0.00 -32.00 64.00 -32.00 -32.00 32.00 64.00 32.00 289.00 33.00 33.00 0.00 32.00 -33.00 64.00 -96.00 64.00 -129.00 33.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -64.00 193.00 -65.00 0.00 -32.00 64.00 32.00 0.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 64.00 -64.00 33.00 32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 96.00 -33.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 0.00 32.00 -32.00 64.00 0.00 0.00 -32.00 0.00 32.00 65.00 -96.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -65.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 0.00 65.00 0.00 -33.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -32.00 -65.00 -32.00 0.00 -32.00 97.00 32.00 32.00 -32.00 -32.00 -33.00 64.00 0.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 65.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -65.00 32.00 33.00 32.00 -65.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 -64.00 33.00 0.00 0.00 -64.00 32.00 0.00 0.00 -32.00 64.00 64.00 0.00 -64.00 32.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 32.00 0.00 33.00 32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 32.00 32.00 -96.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 0.00 64.00 -65.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 32.00 0.00 -64.00 64.00 0.00 65.00 0.00 32.00 -33.00 0.00 33.00 32.00 -33.00 32.00 33.00 32.00 0.00 32.00 -33.00 32.00 -32.00 33.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 64.00 -32.00 64.00 -64.00 97.00 -32.00 32.00 -33.00 32.00 0.00 32.00 0.00 0.00 33.00 33.00 -33.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 65.00 0.00 0.00 -32.00 96.00 -32.00 96.00 64.00 33.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 96.00 0.00 33.00 64.00 0.00 -32.00 -33.00 0.00 33.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 96.00 0.00 0.00 -32.00 0.00 -33.00 32.00 33.00 0.00 64.00 33.00 0.00 0.00 32.00 96.00 0.00 64.00 64.00 33.00 0.00 0.00 -64.00 128.00 32.00 0.00 64.00 -32.00 0.00 32.00 33.00 64.00 -33.00 33.00 -96.00 32.00 0.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 33.00 33.00 0.00 32.00 0.00 32.00 -33.00 0.00 33.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 33.00 -65.00 64.00 0.00 0.00 -32.00 32.00 0.00 96.00 0.00 -32.00 0.00 65.00 32.00 0.00 33.00 32.00 -33.00 32.00 0.00 32.00 65.00 32.00 0.00 0.00 64.00 0.00 -64.00 32.00 0.00 33.00 64.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 33.00 32.00 0.00 -32.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 65.00 -32.00 0.00 32.00 -33.00 0.00 33.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 64.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 33.00 32.00 -33.00 33.00 65.00 64.00 0.00 32.00 32.00 -96.00 129.00 0.00 32.00 -65.00 64.00 -64.00 225.00 -32.00 97.00 -32.00 32.00 -129.00 289.00 -32.00 193.00 0.00 32.00 -32.00 97.00 0.00 32.00 0.00 32.00 32.00 -32.00 0.00 96.00 32.00 0.00 0.00 65.00 -64.00 32.00 64.00 32.00 -64.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 64.00 32.00 0.00 32.00 33.00 65.00 0.00 193.00 64.00 96.00 0.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 32.00 128.00 0.00 32.00 32.00 33.00 33.00 0.00 32.00 -33.00 32.00 0.00 32.00 65.00 0.00 32.00 -32.00 64.00 0.00 0.00 32.00 32.00 0.00 33.00 0.00 32.00 32.00 32.00 32.00 161.00 33.00 64.00 32.00 32.00 0.00 64.00 -32.00 65.00 0.00 32.00 64.00 161.00 96.00 32.00 32.00 -32.00 0.00 0.00 65.00 32.00 64.00 32.00 0.00 32.00 -64.00 32.00 32.00 0.00 -64.00 65.00 0.00 32.00 -33.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -32.00 -64.00 -64.00 32.00 -32.00 64.00 0.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 65.00 0.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 97.00 -64.00 128.00 -65.00 33.00 0.00 64.00 0.00 64.00 -64.00 32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 32.00 64.00 0.00 32.00 -32.00 0.00 -33.00 225.00 -32.00 33.00 0.00 96.00 0.00 32.00 -32.00 32.00 0.00 65.00 32.00 0.00 -32.00 128.00 64.00 97.00 0.00 64.00 65.00 32.00 0.00 0.00 -32.00 32.00 32.00 65.00 32.00 32.00 64.00 32.00 -32.00 32.00 0.00 32.00 -64.00 32.00 64.00 33.00 0.00 64.00 -32.00 32.00 0.00 0.00 32.00 97.00 64.00 32.00 -32.00 96.00 32.00 32.00 -32.00 97.00 65.00 64.00 0.00 32.00 32.00 32.00 96.00 0.00 32.00 33.00 0.00 32.00 33.00 0.00 -33.00 32.00 97.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 32.00 32.00 0.00 33.00 -32.00 32.00 32.00 -32.00 0.00 0.00 32.00 64.00 32.00 32.00 65.00 64.00 0.00 0.00 32.00 32.00 32.00 129.00 96.00 64.00 65.00 161.00 32.00 32.00 64.00 65.00 64.00 64.00 33.00 0.00 32.00 64.00 -32.00 -32.00 0.00 64.00 0.00 0.00 32.00 33.00 0.00 -33.00 32.00 65.00 32.00 32.00 32.00 32.00 -32.00 64.00 64.00 0.00 -32.00 32.00 64.00 33.00 0.00 -33.00 0.00 97.00 65.00 64.00 64.00 32.00 -64.00 65.00 -65.00 64.00 33.00 32.00 32.00 32.00 32.00 65.00 96.00 32.00 0.00 96.00 33.00 0.00 64.00 65.00 0.00 32.00 0.00 96.00 64.00 97.00 129.00 160.00 0.00 0.00 64.00 -32.00 129.00 129.00 32.00 96.00 64.00 97.00 -32.00 32.00 32.00 64.00 97.00 97.00 -97.00 32.00 0.00 32.00 64.00 32.00 33.00 129.00 32.00 32.00 64.00 32.00 -32.00 64.00 64.00 65.00 -64.00 96.00 -64.00 65.00 32.00 64.00 -32.00 32.00 32.00 64.00 -32.00 0.00 -65.00 32.00 0.00 33.00 65.00 64.00 0.00 0.00 64.00 32.00 32.00 32.00 32.00 64.00 32.00 65.00 65.00 32.00 96.00 32.00 0.00 0.00 97.00 32.00 0.00 32.00 0.00 65.00 -33.00 193.00 -64.00 160.00 -32.00 33.00 32.00 64.00 0.00 128.00 64.00 97.00 -32.00 0.00 -64.00 64.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 64.00 -32.00 32.00 -97.00 65.00 0.00 64.00 -32.00 129.00 -32.00 32.00 -32.00 32.00 0.00 1157.00 1061.00 450.00 418.00 354.00 353.00 129.00 97.00 0.00 32.00 96.00 675.00 32.00 515.00 33.00 0.00 96.00 0.00 64.00 -33.00 32.00 0.00 65.00 65.00 96.00 -32.00 65.00 -33.00 96.00 0.00 96.00 65.00 33.00 0.00 96.00 32.00 64.00 32.00 65.00 32.00 32.00 -32.00 32.00 -96.00 32.00 0.00 129.00 -33.00 96.00 -96.00 97.00 32.00 96.00 -64.00 129.00 0.00 96.00 -97.00 32.00 0.00 0.00 -96.00 33.00 -32.00 32.00 -32.00 0.00 -65.00 64.00 65.00 64.00 0.00 32.00 0.00 33.00 0.00 64.00 0.00 32.00 160.00 64.00 0.00 32.00 0.00 129.00 -32.00 32.00 -32.00 32.00 32.00 33.00 -64.00 32.00 0.00 0.00 -97.00 0.00 -32.00 64.00 0.00 0.00 32.00 129.00 65.00 32.00 64.00 -32.00 64.00 32.00 65.00 64.00 32.00 97.00 -32.00 32.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 -64.00 64.00 0.00 64.00 -32.00 33.00 0.00 0.00 32.00 32.00 0.00 64.00 96.00 0.00 33.00 97.00 32.00 64.00 128.00 32.00 0.00 32.00 -64.00 32.00 0.00 65.00 96.00 32.00 0.00 32.00 33.00 0.00 32.00 -32.00 32.00 64.00 32.00 0.00 32.00 129.00 32.00 -32.00 65.00 32.00 64.00 64.00 0.00 64.00 -32.00 97.00 0.00 0.00 -64.00 32.00 -65.00 64.00 -32.00 32.00 32.00 33.00 32.00 32.00 -32.00 64.00 -96.00 32.00 32.00 32.00 0.00 97.00 96.00 32.00 129.00 32.00 32.00 0.00 -32.00 64.00 64.00 0.00 -32.00 33.00 32.00 64.00 0.00 32.00 32.00 32.00 -32.00 64.00 -32.00 33.00 32.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 97.00 0.00 64.00 -32.00 32.00 32.00 33.00 -32.00 32.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 64.00 0.00 32.00 33.00 0.00 0.00 65.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 64.00 32.00 0.00 0.00 32.00 32.00 -32.00 97.00 65.00 32.00 0.00 0.00 128.00 -65.00 32.00 33.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 64.00 33.00 0.00 64.00 -32.00 32.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 65.00 -32.00 0.00 32.00 -33.00 65.00 33.00 32.00 32.00 0.00 32.00 -65.00 32.00 0.00 -32.00 97.00 0.00 -32.00 0.00 64.00 -32.00 0.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 32.00 32.00 33.00 -32.00 0.00 0.00 32.00 64.00 0.00 33.00 32.00 -33.00 0.00 33.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 64.00 32.00 0.00 0.00 33.00 33.00 0.00 0.00 -33.00 64.00 0.00 0.00 65.00 96.00 0.00 0.00 -65.00 33.00 0.00 128.00 0.00 32.00 33.00 32.00 0.00 -32.00 0.00 -64.00 96.00 0.00 32.00 64.00 0.00 97.00 97.00 0.00 64.00 64.00 32.00 32.00 64.00 0.00 65.00 65.00 0.00 0.00 64.00 32.00 32.00 0.00 65.00 -97.00 64.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 64.00 32.00 0.00 32.00 64.00 -32.00 129.00 -64.00 32.00 0.00 32.00 -65.00 32.00 0.00 33.00 -96.00 128.00 32.00 65.00 32.00 32.00 32.00 96.00 -96.00 0.00 -32.00 32.00 -64.00 33.00 -33.00 128.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -65.00 32.00 0.00 33.00 -32.00 32.00 -32.00 32.00 -64.00 161.00 -32.00 64.00 0.00 32.00 -33.00 97.00 -64.00 0.00 0.00 64.00 -32.00 64.00 -64.00 32.00 -33.00 -64.00 -32.00 0.00 32.00 -64.00 -32.00 -65.00 -32.00 65.00 -32.00 96.00 -32.00 65.00 -32.00 0.00 -65.00 128.00 -96.00 97.00 -32.00 32.00 -32.00 0.00 0.00 64.00 -33.00 0.00 33.00 32.00 32.00 0.00 0.00 97.00 32.00 0.00 0.00 64.00 0.00 32.00 -64.00 0.00 -97.00 -32.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 -97.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 0.00 -64.00 129.00 0.00 32.00 -32.00 64.00 -32.00 161.00 -65.00 128.00 0.00 65.00 33.00 32.00 32.00 32.00 -32.00 64.00 0.00 97.00 -65.00 32.00 -64.00 161.00 -64.00 32.00 64.00 32.00 64.00 32.00 129.00 0.00 32.00 32.00 64.00 -32.00 65.00 32.00 0.00 65.00 32.00 32.00 0.00 64.00 32.00 32.00 -32.00 32.00 0.00 33.00 -64.00 0.00 0.00 32.00 -33.00 32.00 0.00 96.00 -32.00 65.00 -64.00 0.00 -32.00 -65.00 -65.00 65.00 -32.00 0.00 -32.00 32.00 -64.00 -65.00 -32.00 0.00 0.00 -32.00 -97.00 -64.00 -32.00 32.00 -96.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 0.00 -32.00 -32.00 0.00 -32.00 -96.00 0.00 -65.00 32.00 0.00 97.00 -64.00 128.00 -64.00 161.00 -97.00 96.00 -32.00 0.00 -32.00 129.00 0.00 32.00 0.00 32.00 -96.00 193.00 0.00 65.00 0.00 32.00 64.00 0.00 0.00 32.00 -32.00 193.00 -65.00 96.00 33.00 161.00 96.00 32.00 0.00 65.00 -64.00 64.00 32.00 96.00 -32.00 32.00 -32.00 0.00 0.00 65.00 32.00 32.00 0.00 64.00 96.00 65.00 -128.00 32.00 -65.00 96.00 -32.00 0.00 0.00 64.00 -64.00 0.00 0.00 65.00 64.00 32.00 -64.00 64.00 32.00 32.00 0.00 65.00 0.00 32.00 0.00 32.00 -129.00 64.00 97.00 65.00 32.00 32.00 96.00 -32.00 65.00 32.00 64.00 64.00 161.00 32.00 0.00 32.00 0.00 32.00 64.00 97.00 32.00 0.00 0.00 64.00 65.00 0.00 0.00 97.00 -33.00 64.00 33.00 32.00 32.00 32.00 64.00 161.00 97.00 64.00 64.00 -64.00 96.00 0.00 -32.00 32.00 32.00 65.00 -32.00 0.00 0.00 32.00 0.00 64.00 64.00 32.00 33.00 64.00 64.00 -64.00 32.00 0.00 64.00 97.00 32.00 64.00 33.00 -97.00 0.00 -64.00 32.00 32.00 32.00 65.00 64.00 32.00 -32.00 64.00 32.00 32.00 65.00 32.00 32.00 33.00 0.00 96.00 32.00 32.00 32.00 0.00 32.00 97.00 32.00 32.00 97.00 -32.00 32.00 64.00 32.00 0.00 64.00 0.00 65.00 96.00 -32.00 65.00 32.00 64.00 -32.00 64.00 64.00 65.00 32.00 64.00 -32.00 64.00 32.00 -32.00 64.00 32.00 32.00 65.00 0.00 32.00 -160.00 225.00 -257.00 128.00 0.00 32.00 32.00 33.00 96.00 64.00 64.00 32.00 0.00 129.00 -128.00 -65.00 -64.00 -32.00 -33.00 0.00 -96.00 -64.00 0.00 -32.00 -64.00 32.00 -33.00 -64.00 -32.00 0.00 -64.00 -65.00 -64.00 0.00 -33.00 32.00 -64.00 -32.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 -129.00 0.00 -64.00 0.00 -129.00 -32.00 -32.00 64.00 -96.00 -96.00 -97.00 0.00 -64.00 -96.00 -32.00 0.00 -97.00 64.00 -96.00 64.00 -97.00 0.00 0.00 97.00 -64.00 0.00 -64.00 0.00 0.00 32.00 0.00 32.00 -32.00 64.00 32.00 32.00 -65.00 33.00 0.00 64.00 -96.00 32.00 -32.00 64.00 -32.00 33.00 -65.00 -33.00 -32.00 33.00 -32.00 -33.00 -97.00 65.00 -32.00 -32.00 0.00 -65.00 -64.00 0.00 -64.00 0.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 -96.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 32.00 -65.00 -32.00 -64.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -97.00 129.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 -65.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 611.00 579.00 32.00 225.00 -128.00 32.00 -33.00 -32.00 -96.00 -32.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 0.00 0.00 -64.00 -64.00 -32.00 -65.00 0.00 0.00 -64.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 64.00 0.00 33.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 -33.00 -32.00 33.00 -32.00 96.00 -96.00 0.00 0.00 -64.00 -65.00 0.00 -32.00 96.00 -32.00 0.00 32.00 -64.00 -96.00 32.00 0.00 32.00 0.00 32.00 -65.00 0.00 -128.00 65.00 0.00 64.00 -32.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 -161.00 129.00 -96.00 96.00 -33.00 32.00 0.00 129.00 33.00 32.00 0.00 97.00 0.00 64.00 0.00 32.00 -65.00 0.00 0.00 64.00 0.00 65.00 97.00 0.00 -65.00 32.00 -64.00 32.00 -64.00 96.00 32.00 32.00 418.00 33.00 129.00 0.00 160.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 -32.00 290.00 0.00 96.00 -32.00 0.00 -32.00 257.00 32.00 32.00 0.00 32.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 0.00 32.00 64.00 32.00 -32.00 32.00 64.00 -32.00 0.00 32.00 32.00 0.00 -32.00 32.00 64.00 0.00 65.00 65.00 64.00 0.00 32.00 32.00 161.00 32.00 32.00 32.00 32.00 193.00 0.00 32.00 0.00 193.00 65.00 64.00 -33.00 33.00 65.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -33.00 32.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 -64.00 32.00 -290.00 0.00 -96.00 0.00 -161.00 0.00 -64.00 0.00 -65.00 0.00 -64.00 -97.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 -64.00 32.00 -65.00 0.00 -32.00 0.00 -289.00 0.00 -65.00 96.00 33.00 65.00 -33.00 64.00 33.00 0.00 -33.00 32.00 33.00 32.00 32.00 0.00 64.00 97.00 32.00 -33.00 0.00 -32.00 0.00 -64.00 64.00 64.00 33.00 0.00 96.00 -32.00 32.00 32.00 32.00 65.00 0.00 32.00 33.00 0.00 32.00 0.00 64.00 32.00 32.00 64.00 32.00 32.00 0.00 65.00 32.00 0.00 33.00 32.00 96.00 32.00 0.00 32.00 64.00 0.00 0.00 32.00 33.00 65.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -128.00 97.00 -65.00 0.00 0.00 64.00 -32.00 32.00 65.00 64.00 -33.00 65.00 33.00 32.00 32.00 0.00 0.00 64.00 96.00 0.00 32.00 64.00 32.00 -32.00 33.00 0.00 0.00 65.00 32.00 -33.00 0.00 65.00 0.00 32.00 32.00 0.00 64.00 0.00 32.00 32.00 33.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 65.00 64.00 0.00 -32.00 64.00 32.00 32.00 32.00 32.00 0.00 65.00 32.00 0.00 0.00 32.00 33.00 0.00 -33.00 32.00 33.00 32.00 0.00 64.00 -33.00 33.00 -32.00 0.00 0.00 64.00 32.00 32.00 -32.00 32.00 32.00 0.00 65.00 32.00 0.00 97.00 -65.00 0.00 -64.00 32.00 32.00 32.00 65.00 0.00 -33.00 32.00 0.00 32.00 33.00 0.00 32.00 0.00 32.00 0.00 32.00 33.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 96.00 0.00 65.00 65.00 32.00 -33.00 32.00 0.00 32.00 -128.00 97.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 32.00 33.00 0.00 64.00 64.00 32.00 -32.00 32.00 0.00 32.00 -96.00 129.00 0.00 32.00 -161.00 0.00 -97.00 -32.00 -96.00 -32.00 0.00 64.00 32.00 64.00 -32.00 97.00 32.00 64.00 32.00 65.00 0.00 32.00 -96.00 32.00 0.00 32.00 -97.00 0.00 0.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 161.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -64.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 96.00 32.00 33.00 -32.00 32.00 0.00 64.00 0.00 32.00 -32.00 65.00 32.00 32.00 -64.00 32.00 0.00 64.00 64.00 32.00 32.00 65.00 -32.00 0.00 0.00 32.00 64.00 32.00 -32.00 64.00 -32.00 97.00 -32.00 0.00 32.00 64.00 0.00 32.00 -32.00 0.00 0.00 193.00 -32.00 32.00 -65.00 65.00 -32.00 -33.00 -96.00 33.00 0.00 64.00 -65.00 96.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -129.00 0.00 -32.00 32.00 -32.00 129.00 -32.00 32.00 32.00 64.00 0.00 33.00 32.00 64.00 -64.00 64.00 0.00 97.00 -32.00 32.00 -33.00 32.00 0.00 32.00 -32.00 97.00 -32.00 32.00 0.00 64.00 -32.00 64.00 32.00 33.00 -64.00 64.00 32.00 0.00 -32.00 32.00 -32.00 64.00 -33.00 32.00 0.00 33.00 -32.00 96.00 -96.00 64.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -193.00 0.00 -997.00 0.00 -450.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 129.00 -33.00 32.00 -32.00 96.00 32.00 32.00 -32.00 33.00 -96.00 0.00 0.00 32.00 -32.00 32.00 -65.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 65.00 -64.00 32.00 0.00 32.00 -33.00 96.00 65.00 0.00 0.00 33.00 64.00 160.00 161.00 32.00 0.00 65.00 0.00 64.00 0.00 161.00 -32.00 64.00 0.00 97.00 -32.00 32.00 32.00 96.00 0.00 32.00 0.00 33.00 -65.00 0.00 -32.00 32.00 0.00 32.00 -64.00 96.00 0.00 65.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 32.00 96.00 0.00 65.00 0.00 -33.00 65.00 33.00 32.00 0.00 -32.00 32.00 32.00 -32.00 32.00 -33.00 32.00 -32.00 0.00 32.00 32.00 -64.00 32.00 -32.00 65.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -33.00 32.00 33.00 32.00 -33.00 33.00 -32.00 0.00 32.00 32.00 33.00 96.00 -33.00 0.00 0.00 -32.00 -64.00 0.00 0.00 64.00 0.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 32.00 32.00 -64.00 129.00 64.00 64.00 -32.00 32.00 -32.00 33.00 -65.00 32.00 -32.00 32.00 32.00 32.00 -64.00 32.00 0.00 64.00 -32.00 33.00 32.00 32.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 0.00 64.00 -97.00 -32.00 -32.00 32.00 -96.00 -32.00 -65.00 0.00 -32.00 32.00 -96.00 33.00 -97.00 0.00 -32.00 -33.00 -64.00 65.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 -64.00 32.00 -64.00 64.00 0.00 32.00 64.00 33.00 0.00 32.00 64.00 64.00 33.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 64.00 65.00 33.00 32.00 0.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 32.00 0.00 32.00 0.00 32.00 -96.00 97.00 0.00 32.00 -65.00 0.00 0.00 64.00 -32.00 32.00 0.00 32.00 -128.00 0.00 0.00 65.00 0.00 64.00 -33.00 0.00 -32.00 64.00 -32.00 32.00 -32.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 64.00 129.00 -32.00 32.00 0.00 64.00 32.00 32.00 0.00 -32.00 32.00 32.00 -32.00 65.00 32.00 32.00 -32.00 32.00 -32.00 32.00 -64.00 32.00 -33.00 32.00 -32.00 33.00 0.00 128.00 -32.00 64.00 0.00 33.00 32.00 0.00 32.00 32.00 -64.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -64.00 32.00 0.00 32.00 -64.00 32.00 32.00 0.00 64.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 97.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 96.00 32.00 0.00 32.00 65.00 96.00 -33.00 33.00 -64.00 32.00 -32.00 96.00 -64.00 0.00 -33.00 32.00 0.00 32.00 -32.00 33.00 0.00 32.00 -96.00 32.00 0.00 32.00 32.00 32.00 -96.00 65.00 -33.00 32.00 -96.00 128.00 32.00 33.00 32.00 0.00 -64.00 64.00 32.00 32.00 32.00 0.00 65.00 0.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 32.00 32.00 33.00 -32.00 0.00 32.00 64.00 32.00 -32.00 32.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 -193.00 64.00 0.00 32.00 -128.00 32.00 -97.00 0.00 -96.00 32.00 -32.00 0.00 -32.00 65.00 -322.00 96.00 -32.00 32.00 -322.00 129.00 -225.00 96.00 0.00 65.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -128.00 32.00 -97.00 32.00 -32.00 32.00 -193.00 65.00 -193.00 96.00 -32.00 32.00 -129.00 65.00 -257.00 64.00 -161.00 64.00 0.00 33.00 -128.00 128.00 -193.00 64.00 -64.00 33.00 -33.00 0.00 -128.00 96.00 -32.00 0.00 -97.00 32.00 -64.00 32.00 0.00 32.00 32.00 33.00 -32.00 32.00 -64.00 96.00 -129.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 0.00 -96.00 32.00 0.00 65.00 -64.00 32.00 -33.00 -64.00 -32.00 -97.00 0.00 -32.00 97.00 -64.00 0.00 -65.00 0.00 -64.00 -65.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 -129.00 96.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 -65.00 0.00 -96.00 32.00 -64.00 -32.00 -33.00 -33.00 -32.00 33.00 -64.00 0.00 -32.00 -33.00 -32.00 0.00 -65.00 33.00 0.00 32.00 -96.00 64.00 -129.00 96.00 -64.00 0.00 -32.00 33.00 -129.00 64.00 -64.00 0.00 -64.00 0.00 -65.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -161.00 32.00 -32.00 32.00 -32.00 -32.00 -64.00 -32.00 0.00 -97.00 -33.00 33.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 32.00 -65.00 -64.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -64.00 0.00 0.00 64.00 -32.00 32.00 0.00 -32.00 -33.00 -64.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 0.00 -64.00 97.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -128.00 96.00 -33.00 0.00 -32.00 0.00 -64.00 32.00 -64.00 33.00 -65.00 -33.00 -32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 64.00 -64.00 0.00 -33.00 32.00 -192.00 64.00 -65.00 33.00 -32.00 0.00 -96.00 32.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 -64.00 -97.00 0.00 0.00 32.00 -128.00 32.00 -33.00 0.00 0.00 64.00 -32.00 0.00 -32.00 33.00 0.00 -33.00 -64.00 -32.00 0.00 32.00 0.00 33.00 -64.00 32.00 -33.00 -32.00 0.00 32.00 0.00 32.00 0.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 33.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 32.00 -33.00 0.00 0.00 -32.00 -64.00 32.00 0.00 32.00 -64.00 32.00 -32.00 33.00 -33.00 -33.00 -32.00 33.00 -32.00 -129.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 64.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 0.00 -65.00 0.00 -32.00 -32.00 -64.00 64.00 -32.00 33.00 -33.00 0.00 -32.00 0.00 0.00 -65.00 -96.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -129.00 128.00 -96.00 32.00 0.00 33.00 -65.00 32.00 0.00 32.00 -64.00 0.00 0.00 -32.00 -97.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 0.00 64.00 -96.00 33.00 0.00 32.00 -65.00 64.00 0.00 32.00 -32.00 -32.00 -64.00 0.00 -64.00 -32.00 -65.00 32.00 -96.00 -64.00 -32.00 0.00 -65.00 64.00 -64.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 65.00 0.00 32.00 -64.00 32.00 -65.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 32.00 -32.00 97.00 -64.00 0.00 -129.00 0.00 -96.00 64.00 -33.00 32.00 -128.00 -32.00 -32.00 0.00 -65.00 0.00 -64.00 0.00 0.00 -32.00 -64.00 32.00 -97.00 32.00 -96.00 65.00 -65.00 -33.00 -32.00 33.00 -64.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 33.00 0.00 32.00 32.00 32.00 -64.00 64.00 -129.00 32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -160.00 97.00 32.00 32.00 -32.00 64.00 0.00 33.00 -32.00 0.00 -33.00 32.00 -96.00 -32.00 -161.00 32.00 -32.00 32.00 -64.00 0.00 -33.00 64.00 -64.00 0.00 -96.00 64.00 -32.00 0.00 -65.00 0.00 32.00 -96.00 -32.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 -33.00 -33.00 0.00 -96.00 -64.00 -32.00 0.00 32.00 32.00 -64.00 161.00 -65.00 -32.00 -128.00 96.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 -128.00 33.00 -33.00 -33.00 0.00 -32.00 33.00 -32.00 96.00 -64.00 -32.00 -64.00 -64.00 0.00 0.00 -65.00 -65.00 65.00 32.00 0.00 -32.00 32.00 -64.00 0.00 -64.00 96.00 -161.00 32.00 -64.00 32.00 -33.00 0.00 -64.00 -64.00 32.00 -32.00 0.00 -32.00 65.00 -64.00 -33.00 0.00 33.00 -65.00 32.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -32.00 -96.00 64.00 -97.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 32.00 32.00 33.00 0.00 32.00 64.00 0.00 33.00 96.00 64.00 32.00 0.00 32.00 32.00 0.00 -96.00 33.00 -33.00 32.00 -64.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 32.00 -33.00 0.00 0.00 32.00 -96.00 32.00 -32.00 32.00 -129.00 33.00 -32.00 128.00 64.00 64.00 33.00 0.00 96.00 -32.00 96.00 -32.00 33.00 0.00 96.00 0.00 32.00 0.00 -32.00 0.00 64.00 97.00 0.00 64.00 33.00 0.00 0.00 64.00 -33.00 32.00 -32.00 0.00 -32.00 65.00 0.00 32.00 32.00 32.00 32.00 32.00 33.00 0.00 0.00 32.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 -33.00 64.00 -64.00 0.00 32.00 161.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -65.00 -32.00 0.00 32.00 -64.00 -32.00 0.00 32.00 -64.00 0.00 -33.00 0.00 -32.00 64.00 -32.00 0.00 0.00 64.00 0.00 32.00 -32.00 0.00 -64.00 33.00 -32.00 0.00 0.00 -65.00 0.00 -32.00 -33.00 0.00 0.00 -64.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 32.00 -65.00 -32.00 0.00 -64.00 32.00 0.00 33.00 -64.00 64.00 -65.00 0.00 -32.00 32.00 -32.00 32.00 -64.00 32.00 -65.00 32.00 0.00 33.00 -64.00 32.00 -32.00 32.00 -97.00 -32.00 -96.00 64.00 -129.00 -32.00 -96.00 32.00 -64.00 64.00 -65.00 0.00 -64.00 65.00 -64.00 -32.00 32.00 -33.00 32.00 -96.00 0.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 32.00 -161.00 32.00 -32.00 -32.00 -33.00 32.00 -160.00 65.00 -32.00 64.00 -33.00 -32.00 -64.00 0.00 0.00 -64.00 -32.00 0.00 -64.00 0.00 -65.00 96.00 -96.00 -32.00 -97.00 32.00 -32.00 32.00 -96.00 -32.00 -32.00 -64.00 -33.00 -32.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 65.00 0.00 -33.00 -96.00 33.00 -32.00 -33.00 -32.00 0.00 -65.00 65.00 -128.00 64.00 -33.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -96.00 0.00 -32.00 32.00 -65.00 -96.00 -32.00 0.00 0.00 -33.00 -32.00 33.00 -64.00 0.00 -97.00 -65.00 0.00 32.00 -64.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 -96.00 -65.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 65.00 32.00 0.00 -32.00 96.00 -32.00 32.00 -32.00 65.00 32.00 32.00 -32.00 32.00 32.00 -32.00 32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 0.00 -32.00 97.00 -32.00 -97.00 -97.00 65.00 -64.00 -97.00 0.00 0.00 -64.00 97.00 -97.00 0.00 -64.00 -32.00 32.00 -33.00 0.00 -64.00 -32.00 0.00 -32.00 -64.00 0.00 0.00 -65.00 -64.00 0.00 -97.00 0.00 -32.00 -32.00 -64.00 32.00 0.00 -64.00 -161.00 -64.00 32.00 -32.00 0.00 -65.00 -64.00 -32.00 -33.00 0.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -64.00 -33.00 0.00 33.00 -96.00 -33.00 -32.00 -32.00 -33.00 0.00 0.00 -32.00 -96.00 -32.00 0.00 -32.00 32.00 -97.00 -32.00 -32.00 32.00 -64.00 -64.00 0.00 -32.00 -64.00 -33.00 0.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -33.00 32.00 0.00 64.00 -64.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -64.00 32.00 32.00 -32.00 -64.00 97.00 -65.00 -32.00 -32.00 64.00 -160.00 -32.00 -33.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 -96.00 128.00 -32.00 64.00 -64.00 0.00 -33.00 -64.00 0.00 -32.00 -96.00 -64.00 -32.00 -65.00 -65.00 -96.00 33.00 -64.00 -33.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 32.00 64.00 -32.00 65.00 0.00 96.00 -32.00 0.00 -32.00 -64.00 -33.00 -65.00 -64.00 33.00 -64.00 32.00 0.00 0.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -33.00 96.00 65.00 32.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -65.00 -97.00 0.00 -64.00 -64.00 -32.00 32.00 -65.00 -64.00 -64.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 -32.00 -64.00 -96.00 -32.00 0.00 -32.00 0.00 -33.00 -65.00 33.00 -64.00 64.00 -32.00 0.00 -32.00 96.00 -97.00 -32.00 -64.00 32.00 0.00 33.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 193.00 32.00 64.00 -32.00 0.00 -97.00 64.00 -32.00 33.00 0.00 -33.00 -64.00 33.00 -32.00 64.00 0.00 0.00 -65.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 0.00 0.00 -32.00 -65.00 -65.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -64.00 65.00 -65.00 -33.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 0.00 -64.00 -32.00 0.00 -32.00 -129.00 64.00 0.00 32.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -65.00 -33.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -64.00 96.00 -32.00 -64.00 -32.00 -32.00 0.00 32.00 -65.00 0.00 -96.00 -64.00 -32.00 -32.00 32.00 -65.00 -32.00 0.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 -128.00 -32.00 -65.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -96.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 -64.00 32.00 0.00 32.00 -64.00 -32.00 -64.00 32.00 -33.00 33.00 -32.00 -33.00 -32.00 -64.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -65.00 -33.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 -65.00 -64.00 33.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -64.00 -64.00 -97.00 0.00 -32.00 -32.00 -32.00 32.00 -97.00 -97.00 -96.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -33.00 -97.00 -32.00 -32.00 -32.00 -32.00 0.00 32.00 -96.00 -32.00 -65.00 -32.00 -96.00 -32.00 -97.00 32.00 -32.00 0.00 -64.00 32.00 -97.00 -32.00 -32.00 -64.00 -32.00 -32.00 -64.00 -65.00 0.00 -32.00 -64.00 0.00 -65.00 -96.00 0.00 -65.00 -64.00 -64.00 -129.00 64.00 -160.00 65.00 -129.00 -65.00 -129.00 65.00 -32.00 32.00 -96.00 32.00 0.00 32.00 -32.00 32.00 -129.00 32.00 0.00 -32.00 -64.00 65.00 -65.00 0.00 -32.00 32.00 -32.00 64.00 32.00 161.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -64.00 0.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -65.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -33.00 0.00 -64.00 -128.00 32.00 -32.00 -32.00 -65.00 0.00 -64.00 -32.00 0.00 -32.00 -64.00 -129.00 -32.00 -64.00 -33.00 -64.00 0.00 -97.00 -96.00 -96.00 -32.00 -32.00 -64.00 -65.00 0.00 -96.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -96.00 64.00 -32.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 0.00 0.00 -96.00 32.00 -65.00 32.00 0.00 65.00 -96.00 32.00 0.00 64.00 -161.00 0.00 -32.00 -64.00 -97.00 -32.00 -64.00 -32.00 0.00 0.00 -96.00 -33.00 -65.00 -32.00 0.00 -96.00 -32.00 -64.00 -128.00 -129.00 -33.00 -64.00 -64.00 -65.00 0.00 -64.00 -96.00 -129.00 0.00 -32.00 0.00 -32.00 -97.00 -129.00 -64.00 0.00 -64.00 0.00 -33.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -65.00 -65.00 -96.00 -96.00 0.00 -32.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 -64.00 64.00 -129.00 0.00 -64.00 32.00 0.00 33.00 -129.00 0.00 -64.00 32.00 0.00 96.00 -96.00 97.00 -65.00 0.00 -64.00 32.00 -64.00 -64.00 -32.00 -33.00 -65.00 -64.00 0.00 -32.00 0.00 -32.00 -161.00 -129.00 -32.00 0.00 -96.00 32.00 -64.00 32.00 -97.00 -32.00 -161.00 0.00 -160.00 65.00 -65.00 -33.00 -32.00 0.00 -64.00 97.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 64.00 0.00 65.00 0.00 64.00 -32.00 64.00 -97.00 97.00 -32.00 0.00 -129.00 -65.00 -64.00 -96.00 -32.00 -161.00 -129.00 -96.00 -32.00 0.00 -32.00 32.00 0.00 161.00 -32.00 64.00 -32.00 64.00 -65.00 97.00 -96.00 -33.00 -32.00 97.00 -129.00 64.00 -96.00 0.00 -97.00 -32.00 -64.00 -64.00 -97.00 -32.00 -32.00 -97.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -96.00 -97.00 -161.00 -64.00 -32.00 -32.00 -33.00 -97.00 0.00 -32.00 33.00 32.00 32.00 -32.00 161.00 0.00 32.00 161.00 160.00 0.00 33.00 -32.00 64.00 -32.00 0.00 -65.00 32.00 -96.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -64.00 -64.00 -96.00 -33.00 -97.00 0.00 -64.00 33.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -128.00 -33.00 -161.00 33.00 -64.00 0.00 -161.00 64.00 -129.00 0.00 -96.00 0.00 -97.00 -32.00 -128.00 0.00 -65.00 32.00 -128.00 128.00 -97.00 33.00 -96.00 0.00 -32.00 -33.00 -97.00 0.00 -161.00 -64.00 -32.00 0.00 -96.00 32.00 -129.00 32.00 -193.00 0.00 -32.00 0.00 -96.00 65.00 -32.00 32.00 -33.00 96.00 33.00 65.00 0.00 32.00 -33.00 32.00 -64.00 64.00 -64.00 129.00 0.00 96.00 0.00 33.00 64.00 96.00 -32.00 161.00 64.00 161.00 0.00 32.00 0.00 64.00 0.00 32.00 -64.00 129.00 -32.00 32.00 -65.00 0.00 -289.00 -193.00 -32.00 -32.00 32.00 -547.00 0.00 -96.00 -32.00 -257.00 -64.00 -161.00 -32.00 -65.00 -129.00 -32.00 -64.00 -32.00 -129.00 0.00 -32.00 32.00 -129.00 258.00 -128.00 289.00 -65.00 64.00 -193.00 129.00 0.00 32.00 -32.00 0.00 -64.00 -32.00 -161.00 -32.00 -32.00 0.00 -129.00 -193.00 0.00 -64.00 -32.00 -97.00 -161.00 -289.00 0.00 -258.00 -32.00 -64.00 0.00 -32.00 0.00 -129.00 65.00 -257.00 64.00 -64.00 96.00 0.00 65.00 -32.00 0.00 -65.00 0.00 -64.00 -32.00 -32.00 -33.00 0.00 -160.00 -32.00 -97.00 32.00 -96.00 64.00 -97.00 32.00 -386.00 -32.00 -96.00 0.00 -129.00 -128.00 -32.00 -33.00 -64.00 -128.00 -97.00 -32.00 -128.00 -32.00 -32.00 32.00 -97.00 0.00 -128.00 32.00 -97.00 32.00 0.00 32.00 -64.00 0.00 -322.00 0.00 -161.00 -32.00 -32.00 0.00 -160.00 0.00 -33.00 0.00 -192.00 32.00 -97.00 64.00 -96.00 0.00 -97.00 0.00 -64.00 -32.00 -257.00 -96.00 -258.00 32.00 -64.00 -32.00 -64.00 0.00 -32.00 -32.00 -129.00 -129.00 -64.00 -32.00 -33.00 -32.00 -32.00 0.00 -160.00 0.00 -97.00 32.00 -32.00 0.00 -32.00 -32.00 -129.00 -32.00 -96.00 0.00 -129.00 64.00 -193.00 -64.00 -128.00 32.00 -33.00 0.00 -64.00 -32.00 -96.00 0.00 0.00 -65.00 -97.00 -32.00 -193.00 -225.00 -96.00 -32.00 -97.00 -32.00 -64.00 -32.00 -64.00 32.00 -65.00 32.00 -96.00 0.00 -64.00 32.00 -65.00 64.00 -96.00 0.00 -64.00 0.00 -33.00 65.00 -96.00 128.00 -64.00 32.00 -65.00 65.00 -96.00 161.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 -225.00 64.00 -257.00 64.00 -64.00 0.00 0.00 32.00 -97.00 65.00 -128.00 32.00 -33.00 32.00 -96.00 96.00 -64.00 0.00 -65.00 0.00 -64.00 0.00 0.00 65.00 -96.00 64.00 -65.00 64.00 -32.00 0.00 -64.00 0.00 0.00 33.00 -161.00 225.00 -32.00 -65.00 -64.00 -96.00 32.00 -32.00 32.00 -97.00 0.00 -128.00 -64.00 -161.00 96.00 -225.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -64.00 -96.00 -32.00 -64.00 0.00 -129.00 0.00 -161.00 -65.00 -64.00 0.00 -32.00z\"\n          },\n          pr: {\n            name: \"PR\",\n            path: \"M97540.00 151634.00l32.00 -32.00 0.00 -64.00 64.00 -129.00 32.00 -64.00 65.00 -96.00 96.00 -65.00 129.00 -161.00 64.00 -96.00 64.00 -129.00 33.00 -192.00 64.00 -97.00 32.00 -96.00 64.00 -97.00 65.00 0.00 32.00 -64.00 -32.00 -129.00 -33.00 -64.00 -64.00 -64.00 -32.00 -65.00 32.00 -64.00 -32.00 -96.00 0.00 -97.00 96.00 -257.00 0.00 -193.00 65.00 -129.00 32.00 -128.00 64.00 -258.00 97.00 -289.00 32.00 -96.00 64.00 -33.00 32.00 -64.00 65.00 -161.00 32.00 -96.00 64.00 -161.00 32.00 -353.00 0.00 -65.00 -64.00 -225.00 -32.00 -129.00 64.00 -225.00 129.00 -128.00 96.00 -129.00 64.00 -161.00 33.00 -64.00 -65.00 -257.00 -64.00 -97.00 -161.00 -160.00 -32.00 -97.00 0.00 -96.00 0.00 -32.00 0.00 -65.00 -64.00 -160.00 0.00 -65.00 -32.00 -32.00 64.00 -129.00 128.00 -96.00 97.00 -129.00 32.00 -32.00 32.00 0.00 129.00 -32.00 353.00 -257.00 193.00 -97.00 97.00 -96.00 32.00 -64.00 97.00 -290.00 0.00 -128.00 -33.00 -97.00 33.00 -64.00 -33.00 -32.00 33.00 -97.00 32.00 -193.00 96.00 -160.00 0.00 -33.00 32.00 -192.00 32.00 -97.00 33.00 -64.00 32.00 -129.00 32.00 -193.00 64.00 -193.00 0.00 -193.00 129.00 -225.00 0.00 -32.00 64.00 -32.00 32.00 -32.00 129.00 32.00 257.00 -129.00 289.00 -193.00 226.00 -64.00 32.00 -32.00 161.00 -225.00 64.00 -129.00 0.00 -32.00 64.00 -161.00 64.00 -225.00 129.00 -193.00 0.00 -64.00 129.00 -129.00 0.00 -546.00 0.00 -64.00 96.00 -129.00 32.00 -129.00 97.00 -64.00 64.00 -32.00 64.00 -64.00 0.00 -33.00 65.00 -96.00 64.00 -32.00 64.00 -32.00 161.00 -65.00 161.00 -96.00 96.00 -32.00 97.00 -97.00 0.00 -32.00 32.00 0.00 128.00 -32.00 65.00 -97.00 32.00 -32.00 64.00 -32.00 65.00 -32.00 96.00 -32.00 289.00 -97.00 33.00 0.00 0.00 -32.00 96.00 0.00 96.00 0.00 33.00 -32.00 64.00 -64.00 225.00 -290.00 32.00 0.00 97.00 -160.00 32.00 96.00 32.00 97.00 64.00 -97.00 129.00 -32.00 64.00 -64.00 64.00 -65.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 64.00 -32.00 33.00 -32.00 225.00 -33.00 96.00 33.00 225.00 160.00 64.00 33.00 161.00 -65.00 97.00 0.00 32.00 0.00 32.00 32.00 129.00 33.00 128.00 64.00 97.00 0.00 193.00 -64.00 289.00 -193.00 64.00 -33.00 32.00 0.00 65.00 97.00 128.00 129.00 32.00 0.00 65.00 32.00 96.00 64.00 32.00 0.00 161.00 -96.00 64.00 0.00 0.00 -33.00 65.00 0.00 32.00 33.00 32.00 0.00 64.00 32.00 161.00 64.00 225.00 0.00 97.00 32.00 64.00 -64.00 64.00 -32.00 129.00 -32.00 32.00 32.00 64.00 96.00 0.00 129.00 0.00 32.00 32.00 0.00 129.00 -64.00 64.00 -33.00 129.00 -32.00 -32.00 -193.00 0.00 -32.00 32.00 -128.00 0.00 -33.00 32.00 -96.00 65.00 -96.00 32.00 -33.00 64.00 -32.00 32.00 0.00 64.00 32.00 161.00 97.00 129.00 0.00 32.00 0.00 129.00 32.00 160.00 96.00 97.00 0.00 193.00 161.00 32.00 32.00 32.00 33.00 64.00 64.00 97.00 32.00 32.00 0.00 354.00 -96.00 64.00 32.00 32.00 0.00 32.00 32.00 65.00 0.00 0.00 32.00 32.00 129.00 32.00 64.00 96.00 0.00 97.00 -64.00 64.00 0.00 161.00 0.00 64.00 32.00 129.00 96.00 96.00 32.00 65.00 33.00 32.00 -33.00 128.00 -32.00 32.00 32.00 65.00 0.00 128.00 -64.00 33.00 0.00 96.00 -129.00 96.00 0.00 129.00 65.00 64.00 0.00 65.00 -32.00 128.00 32.00 65.00 0.00 128.00 32.00 32.00 0.00 97.00 -32.00 64.00 32.00 64.00 64.00 33.00 0.00 32.00 129.00 96.00 64.00 32.00 0.00 97.00 32.00 64.00 32.00 97.00 65.00 193.00 64.00 257.00 0.00 257.00 129.00 64.00 0.00 65.00 -33.00 96.00 0.00 64.00 97.00 33.00 0.00 64.00 -32.00 32.00 0.00 129.00 0.00 32.00 32.00 193.00 129.00 64.00 128.00 32.00 32.00 32.00 97.00 97.00 32.00 0.00 32.00 0.00 32.00 -32.00 193.00 32.00 32.00 96.00 0.00 97.00 0.00 32.00 32.00 32.00 33.00 32.00 0.00 32.00 0.00 97.00 -33.00 128.00 -225.00 32.00 -32.00 33.00 -32.00 32.00 0.00 64.00 0.00 32.00 64.00 97.00 33.00 64.00 32.00 64.00 -32.00 65.00 -65.00 128.00 32.00 65.00 33.00 32.00 32.00 32.00 64.00 32.00 32.00 64.00 32.00 65.00 -64.00 32.00 0.00 96.00 64.00 64.00 -32.00 97.00 32.00 32.00 -64.00 32.00 0.00 0.00 -96.00 32.00 -33.00 65.00 0.00 64.00 -32.00 97.00 65.00 0.00 32.00 64.00 64.00 32.00 64.00 96.00 0.00 65.00 0.00 32.00 -64.00 64.00 0.00 64.00 -32.00 129.00 64.00 32.00 32.00 0.00 32.00 32.00 0.00 65.00 -32.00 64.00 32.00 97.00 0.00 96.00 -32.00 64.00 -64.00 97.00 32.00 64.00 0.00 32.00 0.00 64.00 -96.00 65.00 0.00 64.00 32.00 97.00 -97.00 0.00 -32.00 96.00 32.00 64.00 0.00 33.00 97.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 96.00 64.00 0.00 33.00 33.00 64.00 -33.00 96.00 -32.00 32.00 0.00 33.00 97.00 96.00 96.00 0.00 64.00 32.00 97.00 65.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 64.00 0.00 32.00 0.00 97.00 64.00 0.00 64.00 64.00 32.00 -32.00 33.00 32.00 32.00 32.00 64.00 0.00 97.00 -32.00 32.00 32.00 32.00 32.00 32.00 0.00 0.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 65.00 0.00 64.00 32.00 64.00 -32.00 65.00 0.00 32.00 32.00 32.00 32.00 -64.00 97.00 32.00 32.00 64.00 32.00 32.00 64.00 32.00 -32.00 0.00 32.00 33.00 32.00 96.00 0.00 -32.00 33.00 32.00 32.00 96.00 160.00 0.00 65.00 0.00 32.00 33.00 32.00 32.00 0.00 -32.00 64.00 32.00 33.00 64.00 128.00 0.00 97.00 32.00 64.00 0.00 64.00 -32.00 65.00 -32.00 -33.00 0.00 65.00 0.00 32.00 96.00 0.00 97.00 64.00 0.00 32.00 32.00 32.00 -32.00 33.00 -32.00 -33.00 -97.00 33.00 0.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 64.00 64.00 0.00 -32.00 33.00 32.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 -65.00 -32.00 0.00 64.00 -32.00 32.00 32.00 64.00 -32.00 0.00 -32.00 33.00 32.00 32.00 97.00 64.00 -32.00 32.00 32.00 64.00 -32.00 65.00 32.00 32.00 0.00 32.00 -65.00 64.00 -32.00 65.00 32.00 32.00 0.00 32.00 0.00 32.00 33.00 0.00 0.00 32.00 -33.00 32.00 65.00 33.00 0.00 32.00 64.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 33.00 33.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 -32.00 64.00 0.00 32.00 32.00 65.00 -32.00 0.00 -65.00 -32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 65.00 32.00 -33.00 32.00 0.00 33.00 33.00 64.00 0.00 64.00 0.00 32.00 0.00 33.00 -65.00 32.00 -64.00 32.00 -32.00 0.00 0.00 32.00 32.00 32.00 -64.00 -32.00 -32.00 0.00 64.00 32.00 -32.00 32.00 -32.00 0.00 32.00 33.00 0.00 64.00 32.00 32.00 32.00 64.00 64.00 -64.00 0.00 96.00 32.00 33.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 64.00 32.00 0.00 -32.00 65.00 -32.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 -32.00 0.00 -65.00 0.00 33.00 65.00 32.00 -33.00 32.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 -64.00 0.00 0.00 32.00 32.00 0.00 64.00 32.00 0.00 32.00 -32.00 33.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 0.00 33.00 32.00 0.00 0.00 64.00 32.00 32.00 32.00 32.00 64.00 32.00 0.00 32.00 33.00 0.00 -33.00 33.00 33.00 32.00 0.00 32.00 32.00 0.00 96.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 96.00 32.00 0.00 33.00 33.00 -33.00 32.00 33.00 32.00 -33.00 32.00 33.00 0.00 32.00 97.00 64.00 32.00 0.00 0.00 32.00 32.00 32.00 -64.00 33.00 0.00 64.00 0.00 96.00 0.00 65.00 -65.00 32.00 32.00 32.00 129.00 96.00 0.00 33.00 64.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 33.00 32.00 -33.00 64.00 33.00 32.00 32.00 33.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 -32.00 32.00 0.00 65.00 64.00 32.00 0.00 0.00 65.00 96.00 0.00 32.00 32.00 65.00 0.00 32.00 32.00 -97.00 96.00 -32.00 0.00 -64.00 97.00 -64.00 96.00 0.00 32.00 32.00 33.00 32.00 -65.00 32.00 0.00 0.00 32.00 -32.00 65.00 -64.00 64.00 32.00 32.00 -32.00 64.00 32.00 0.00 0.00 33.00 0.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 0.00 64.00 -96.00 32.00 -32.00 0.00 32.00 65.00 0.00 64.00 32.00 32.00 -32.00 32.00 -32.00 65.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 64.00 0.00 33.00 -32.00 0.00 64.00 32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 32.00 -32.00 97.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 64.00 32.00 0.00 0.00 32.00 33.00 0.00 96.00 97.00 64.00 0.00 33.00 0.00 64.00 32.00 32.00 0.00 129.00 0.00 0.00 -64.00 64.00 0.00 0.00 -32.00 32.00 -33.00 64.00 0.00 33.00 0.00 32.00 0.00 128.00 0.00 32.00 33.00 65.00 32.00 32.00 -65.00 32.00 0.00 0.00 33.00 64.00 0.00 0.00 -33.00 32.00 0.00 33.00 65.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 -32.00 -33.00 32.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 64.00 32.00 64.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 96.00 64.00 -32.00 33.00 0.00 0.00 64.00 64.00 0.00 0.00 32.00 64.00 0.00 32.00 65.00 65.00 -65.00 64.00 0.00 32.00 0.00 32.00 33.00 32.00 0.00 0.00 -33.00 32.00 0.00 161.00 -32.00 65.00 32.00 32.00 0.00 -65.00 -64.00 33.00 -32.00 64.00 64.00 64.00 -64.00 32.00 32.00 32.00 64.00 65.00 0.00 64.00 33.00 32.00 96.00 65.00 -32.00 32.00 -64.00 32.00 0.00 0.00 64.00 32.00 0.00 64.00 -32.00 129.00 -32.00 32.00 32.00 32.00 32.00 0.00 -64.00 0.00 -33.00 0.00 -32.00 65.00 32.00 32.00 33.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 64.00 32.00 32.00 -64.00 64.00 -32.00 0.00 -32.00 65.00 0.00 64.00 -65.00 32.00 32.00 32.00 -32.00 32.00 32.00 33.00 33.00 32.00 -33.00 32.00 65.00 32.00 32.00 0.00 32.00 32.00 64.00 64.00 0.00 0.00 33.00 33.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 64.00 0.00 0.00 -32.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 65.00 -32.00 0.00 0.00 64.00 -64.00 32.00 -32.00 32.00 -97.00 65.00 0.00 64.00 0.00 32.00 -32.00 32.00 -32.00 64.00 32.00 65.00 -32.00 32.00 96.00 0.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 33.00 32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 0.00 0.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 32.00 33.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 -64.00 32.00 0.00 32.00 -33.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 33.00 0.00 0.00 32.00 32.00 32.00 0.00 64.00 64.00 0.00 0.00 32.00 32.00 33.00 0.00 64.00 32.00 32.00 32.00 32.00 65.00 64.00 32.00 0.00 32.00 -64.00 32.00 -32.00 64.00 -96.00 33.00 -33.00 64.00 0.00 0.00 -64.00 32.00 -129.00 193.00 -128.00 64.00 0.00 33.00 -32.00 96.00 32.00 64.00 32.00 0.00 32.00 32.00 0.00 97.00 97.00 0.00 32.00 0.00 32.00 64.00 0.00 0.00 32.00 32.00 -32.00 32.00 0.00 0.00 96.00 -32.00 0.00 0.00 65.00 65.00 -65.00 32.00 -64.00 64.00 -64.00 0.00 -32.00 32.00 0.00 32.00 64.00 33.00 0.00 0.00 -64.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 64.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 33.00 64.00 32.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 32.00 32.00 0.00 32.00 64.00 97.00 0.00 32.00 65.00 64.00 0.00 32.00 64.00 32.00 64.00 33.00 -32.00 32.00 -32.00 0.00 0.00 64.00 -32.00 64.00 -97.00 32.00 33.00 65.00 64.00 32.00 64.00 0.00 32.00 64.00 32.00 32.00 161.00 129.00 65.00 -32.00 64.00 -32.00 32.00 32.00 32.00 -32.00 65.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 33.00 -289.00 257.00 -64.00 64.00 0.00 64.00 32.00 0.00 -32.00 32.00 -161.00 129.00 -97.00 97.00 -128.00 193.00 -97.00 128.00 -32.00 161.00 -32.00 32.00 -64.00 0.00 -129.00 32.00 -129.00 64.00 -128.00 33.00 161.00 96.00 -65.00 161.00 -32.00 0.00 0.00 64.00 0.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 64.00 -193.00 0.00 -97.00 32.00 -160.00 129.00 -129.00 160.00 -161.00 290.00 -257.00 418.00 -32.00 193.00 0.00 64.00 -32.00 -32.00 -33.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 32.00 32.00 -64.00 129.00 -64.00 225.00 -33.00 32.00 33.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -32.00 -33.00 -96.00 65.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -161.00 0.00 -515.00 0.00 -675.00 0.00 64.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 0.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 -65.00 -33.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -64.00 -64.00 0.00 -65.00 -33.00 32.00 -64.00 0.00 0.00 33.00 -32.00 0.00 -32.00 -65.00 -32.00 32.00 -65.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 65.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 -33.00 -33.00 0.00 -32.00 33.00 -64.00 0.00 0.00 32.00 -64.00 0.00 -33.00 32.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 32.00 -64.00 33.00 0.00 32.00 0.00 32.00 0.00 32.00 -65.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 32.00 33.00 -32.00 0.00 32.00 0.00 0.00 32.00 -65.00 0.00 33.00 32.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -96.00 64.00 -32.00 32.00 -33.00 0.00 0.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 0.00 -33.00 0.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 64.00 -64.00 -32.00 0.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 -64.00 -32.00 0.00 -64.00 0.00 -32.00 64.00 -65.00 65.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 64.00 0.00 -32.00 0.00 32.00 -32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 -65.00 -32.00 0.00 0.00 33.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 0.00 -32.00 64.00 -65.00 -32.00 -64.00 -97.00 0.00 65.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -65.00 -33.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -64.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 64.00 -64.00 32.00 0.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 64.00 -65.00 -64.00 0.00 -32.00 -64.00 -65.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 -64.00 64.00 -64.00 -64.00 0.00 -65.00 0.00 0.00 -97.00 -64.00 -32.00 -32.00 -64.00 -32.00 0.00 0.00 32.00 32.00 0.00 0.00 64.00 -32.00 0.00 -32.00 -96.00 -33.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 -97.00 -32.00 33.00 -32.00 0.00 -32.00 -65.00 0.00 -64.00 -33.00 32.00 -32.00 0.00 65.00 -32.00 0.00 -64.00 -33.00 -32.00 0.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 -129.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -32.00 -97.00 32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 32.00 64.00 32.00 -129.00 129.00 32.00 -65.00 0.00 -96.00 -32.00 -32.00 -96.00 -32.00 0.00 32.00 -64.00 0.00 0.00 32.00 32.00 64.00 -32.00 32.00 -97.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 33.00 0.00 -33.00 -32.00 -96.00 -32.00 96.00 -97.00 65.00 -32.00 -32.00 -32.00 64.00 -64.00 -97.00 -65.00 65.00 0.00 -32.00 32.00 -97.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 -64.00 0.00 -65.00 -96.00 -32.00 0.00 32.00 0.00 65.00 -64.00 -33.00 -65.00 33.00 -96.00 32.00 -97.00 64.00 0.00 64.00 -64.00 0.00 32.00 65.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 64.00 0.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 -64.00 -32.00 -32.00 -32.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 33.00 -64.00 -33.00 -65.00 -160.00 -96.00 0.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -33.00 -33.00 33.00 -32.00 -65.00 -32.00 0.00 32.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 0.00 64.00 -32.00 -32.00 32.00 0.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 -64.00 32.00 -129.00 64.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -97.00 -32.00 0.00 -97.00 97.00 0.00 96.00 32.00 33.00 33.00 0.00 64.00 -33.00 32.00 0.00 32.00 0.00 0.00 65.00 -32.00 32.00 -32.00 0.00 -97.00 32.00 -64.00 0.00 -128.00 -32.00 -65.00 64.00 -32.00 64.00 -64.00 65.00 64.00 128.00 -32.00 0.00 -32.00 33.00 -65.00 32.00 -32.00 32.00 -32.00 64.00 -64.00 97.00 -32.00 32.00 -129.00 64.00 97.00 193.00 -33.00 32.00 -64.00 0.00 -64.00 0.00 0.00 -96.00 -32.00 -32.00 -193.00 32.00 -32.00 32.00 -33.00 32.00 -64.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 -32.00 -97.00 -129.00 -32.00 0.00 -32.00 96.00 -32.00 97.00 -32.00 32.00 -33.00 0.00 -64.00 0.00 0.00 -161.00 -96.00 -96.00 -32.00 0.00 -33.00 32.00 65.00 129.00 -32.00 64.00 -33.00 0.00 -32.00 -64.00 -96.00 0.00 0.00 -97.00 -97.00 -64.00 -32.00 -32.00 -257.00 96.00 -32.00 -32.00 -97.00 -64.00 -32.00 96.00 -32.00 0.00 0.00 64.00 -32.00 33.00 -32.00 32.00 -65.00 32.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 65.00 -32.00 32.00 -96.00 32.00 0.00 32.00 -33.00 0.00 -32.00 64.00 32.00 0.00 0.00 33.00 -64.00 64.00 32.00 32.00 32.00 32.00 -96.00 32.00 -32.00 32.00 0.00 65.00 -64.00 -32.00 0.00 32.00 32.00 32.00 -65.00 32.00 0.00 32.00 33.00 65.00 96.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 64.00 32.00 -32.00 32.00 32.00 32.00 -64.00 33.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 65.00 32.00 0.00 33.00 64.00 32.00 0.00 0.00 32.00 64.00 32.00 -32.00 32.00 0.00 32.00 64.00 33.00 -32.00 32.00 0.00 32.00 0.00 64.00 -64.00 32.00 32.00 65.00 -32.00 32.00 0.00 32.00 -97.00 0.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -32.00 0.00 0.00 65.00 -97.00 0.00 -32.00 -33.00 -64.00 33.00 0.00 -33.00 -32.00 0.00 -97.00 33.00 -64.00 0.00 -64.00 32.00 -65.00 0.00 -64.00 64.00 64.00 64.00 0.00 65.00 -32.00 32.00 -64.00 32.00 32.00 -64.00 -129.00 -65.00 -32.00 -96.00 -64.00 -64.00 0.00 -65.00 -32.00 -64.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 32.00 -64.00 -32.00 -33.00 -32.00 -64.00 -64.00 -32.00 -97.00 32.00 -257.00 0.00 -64.00 0.00 -97.00 0.00 -64.00 0.00 -64.00 -64.00 -97.00 -65.00 -129.00 97.00 -64.00 0.00 -128.00 -32.00 -258.00 64.00 -64.00 0.00 -96.00 -32.00 -97.00 64.00 -64.00 -32.00 -65.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -96.00 -32.00 -129.00 0.00 -96.00 -64.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 0.00 -33.00 -129.00 33.00 -32.00 -65.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -65.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -32.00 -65.00 -33.00 0.00 -32.00 -32.00 0.00 -96.00 -64.00 -33.00 -64.00 0.00 -32.00 -32.00 -65.00 0.00 -64.00 0.00 -129.00 -128.00 -64.00 64.00 -97.00 32.00 -96.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 -96.00 -96.00 -97.00 0.00 -64.00 32.00 -32.00 -65.00 -32.00 65.00 -65.00 -65.00 -64.00 33.00 -32.00 0.00 -32.00 -33.00 -33.00 -32.00 -32.00 32.00 -64.00 33.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -97.00 -65.00 0.00 -128.00 -96.00 -97.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 64.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -64.00 -33.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -97.00 -96.00 -96.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 -65.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 -64.00 -33.00 -64.00 33.00 -33.00 0.00 -32.00 -33.00 -32.00 0.00 -64.00 0.00 -64.00 0.00 -33.00 0.00 -128.00 65.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 -64.00 32.00 -33.00 0.00 -64.00 32.00 -193.00 -97.00 -193.00 129.00 -96.00 32.00 -129.00 64.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 -33.00 0.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 -32.00 -65.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 -32.00 -33.00 -64.00 0.00 -65.00 -64.00 -32.00 0.00 0.00 -32.00 -128.00 -64.00 -65.00 -65.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -97.00 -32.00 0.00 0.00 -64.00 -129.00 64.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 -64.00 -32.00 32.00 -193.00 129.00 -32.00 32.00 -64.00 0.00 -97.00 64.00 -32.00 0.00 -32.00 0.00 -96.00 32.00 -129.00 -32.00 -128.00 0.00 0.00 -32.00 -97.00 -64.00 -32.00 0.00 -32.00 -97.00 -97.00 32.00 -64.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 64.00 -97.00 -64.00 -32.00 0.00 -64.00 -32.00 0.00 -64.00 -97.00 -32.00 -32.00 -97.00 -64.00 -32.00 -64.00 -32.00 -65.00 -32.00 0.00 -97.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 32.00 -96.00 33.00 0.00 0.00 -32.00 0.00 -32.00 -33.00 -65.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -65.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -33.00 0.00 0.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 -32.00 -128.00 32.00 0.00 32.00 0.00 0.00 -64.00 32.00 64.00 32.00 0.00 -32.00 -64.00 32.00 -33.00 -32.00 0.00 -64.00 33.00 32.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 0.00 -64.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 64.00 0.00 0.00 -32.00 32.00 0.00 32.00 -33.00 -64.00 0.00 32.00 -64.00 -64.00 0.00 32.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 32.00 0.00 -32.00 32.00 -65.00 32.00 0.00 0.00 -32.00 32.00 -32.00 64.00 32.00 0.00 -32.00 -64.00 0.00 32.00 -64.00 0.00 -32.00 -96.00 0.00 64.00 -33.00 0.00 -32.00 -64.00 -32.00 -64.00 -32.00 32.00 -32.00 64.00 0.00 -32.00 -32.00 64.00 0.00 -96.00 -65.00 -65.00 33.00 33.00 -97.00 0.00 -32.00 -65.00 0.00 32.00 -32.00 -64.00 -32.00 64.00 0.00 -32.00 -65.00 65.00 32.00 0.00 33.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -32.00 -33.00 -65.00 -64.00 -32.00 -64.00 32.00 32.00 -64.00 32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 -97.00 64.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -33.00 -64.00 33.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 33.00 -33.00 0.00 33.00 64.00 -33.00 64.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -97.00 -64.00 -32.00 -32.00 -32.00 -65.00 -64.00 -32.00 -32.00 32.00 -65.00 65.00 -32.00 32.00 -64.00 -64.00 -32.00 -65.00 -64.00 0.00 -33.00 97.00 0.00 160.00 -32.00 0.00 0.00 33.00 -64.00 -97.00 -64.00 -161.00 0.00 -64.00 128.00 -161.00 0.00 -96.00 -32.00 -32.00 -32.00 0.00 -161.00 128.00 -96.00 97.00 -33.00 0.00 -96.00 -32.00 -64.00 32.00 -32.00 64.00 32.00 0.00 128.00 64.00 0.00 33.00 32.00 32.00 -32.00 0.00 -96.00 0.00 -129.00 -97.00 -32.00 0.00 -32.00 32.00 0.00 129.00 -64.00 0.00 -65.00 -64.00 -64.00 -129.00 -64.00 0.00 -161.00 97.00 -96.00 160.00 -33.00 0.00 -96.00 -64.00 -64.00 32.00 0.00 32.00 0.00 65.00 -33.00 64.00 -160.00 128.00 32.00 129.00 -32.00 32.00 -32.00 0.00 -65.00 -161.00 -96.00 -128.00 -64.00 -32.00 -97.00 -65.00 -96.00 65.00 -33.00 0.00 -32.00 -65.00 32.00 -64.00 -64.00 -32.00 -64.00 -32.00 -32.00 0.00 -129.00 32.00 0.00 -257.00 -32.00 -97.00 0.00 -193.00 -97.00 -64.00 0.00 -64.00 0.00 -32.00 65.00 -33.00z\"\n          },\n          rs: {\n            name: \"RS\",\n            path: \"M84646.00 173756.00l32.00 -193.00 -32.00 -193.00 0.00 -64.00 161.00 -258.00 225.00 -192.00 97.00 -33.00 257.00 0.00 193.00 -64.00 32.00 -32.00 128.00 -96.00 226.00 -193.00 289.00 -386.00 96.00 -129.00 161.00 -128.00 129.00 -193.00 225.00 -129.00 128.00 -64.00 65.00 -65.00 96.00 -64.00 97.00 -129.00 0.00 -96.00 0.00 -64.00 32.00 -161.00 64.00 -32.00 193.00 0.00 64.00 -32.00 225.00 -418.00 33.00 -97.00 -33.00 -128.00 97.00 -193.00 129.00 -161.00 64.00 -193.00 96.00 -32.00 161.00 0.00 129.00 -97.00 64.00 -32.00 322.00 -32.00 64.00 0.00 32.00 -193.00 64.00 -96.00 -96.00 -97.00 32.00 -128.00 64.00 -65.00 65.00 -32.00 225.00 -64.00 64.00 -65.00 96.00 -128.00 33.00 -64.00 0.00 -129.00 -33.00 -225.00 33.00 -97.00 64.00 -32.00 96.00 -64.00 354.00 0.00 129.00 -161.00 64.00 -128.00 96.00 -129.00 386.00 -322.00 129.00 -64.00 64.00 -64.00 32.00 -64.00 -64.00 -65.00 -64.00 -96.00 0.00 -65.00 0.00 -64.00 64.00 -96.00 129.00 -32.00 160.00 -33.00 161.00 -32.00 129.00 -32.00 32.00 -32.00 0.00 -32.00 -97.00 -225.00 0.00 -65.00 0.00 -32.00 129.00 -193.00 129.00 -32.00 128.00 64.00 290.00 0.00 96.00 33.00 32.00 32.00 32.00 96.00 33.00 65.00 32.00 64.00 64.00 0.00 32.00 -64.00 0.00 -97.00 97.00 -257.00 0.00 -64.00 -161.00 -97.00 -129.00 -96.00 -193.00 -65.00 -32.00 -96.00 32.00 -64.00 193.00 -65.00 161.00 -32.00 193.00 -161.00 32.00 -32.00 64.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -64.00 64.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 -64.00 64.00 0.00 65.00 32.00 0.00 32.00 -33.00 64.00 0.00 32.00 129.00 65.00 32.00 0.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 65.00 -64.00 96.00 -32.00 65.00 -129.00 32.00 -64.00 64.00 0.00 64.00 96.00 65.00 0.00 32.00 0.00 32.00 -64.00 128.00 -129.00 193.00 -96.00 33.00 -32.00 0.00 -65.00 -65.00 -96.00 -32.00 0.00 0.00 -64.00 64.00 -65.00 129.00 0.00 32.00 -32.00 32.00 -128.00 32.00 -65.00 33.00 0.00 64.00 0.00 129.00 32.00 64.00 0.00 32.00 -64.00 96.00 -161.00 193.00 -160.00 65.00 0.00 64.00 32.00 64.00 96.00 65.00 64.00 32.00 33.00 32.00 -33.00 32.00 -32.00 -32.00 -128.00 32.00 -32.00 64.00 -33.00 129.00 -32.00 129.00 65.00 96.00 32.00 32.00 -65.00 0.00 -64.00 -32.00 -64.00 -225.00 -97.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 97.00 -32.00 160.00 128.00 33.00 32.00 64.00 -32.00 32.00 -96.00 64.00 0.00 97.00 32.00 32.00 0.00 64.00 -32.00 32.00 -65.00 0.00 -32.00 129.00 -128.00 0.00 -129.00 0.00 -193.00 0.00 -96.00 32.00 -65.00 64.00 0.00 129.00 0.00 32.00 -32.00 32.00 -96.00 33.00 -161.00 96.00 -193.00 32.00 0.00 64.00 32.00 33.00 193.00 64.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 -64.00 96.00 0.00 193.00 64.00 32.00 -32.00 0.00 -64.00 -32.00 -129.00 0.00 -64.00 32.00 -65.00 32.00 0.00 33.00 33.00 64.00 160.00 64.00 0.00 32.00 0.00 32.00 -64.00 33.00 -96.00 96.00 -161.00 0.00 -64.00 32.00 -65.00 32.00 0.00 32.00 32.00 97.00 97.00 64.00 128.00 32.00 0.00 65.00 -32.00 32.00 -64.00 32.00 -32.00 129.00 0.00 96.00 0.00 64.00 -32.00 0.00 -65.00 -32.00 -32.00 -96.00 -64.00 0.00 -64.00 32.00 0.00 129.00 0.00 32.00 -33.00 64.00 -64.00 32.00 0.00 97.00 64.00 0.00 33.00 96.00 128.00 32.00 32.00 65.00 33.00 64.00 -33.00 0.00 -64.00 -32.00 -96.00 0.00 -65.00 0.00 -32.00 32.00 0.00 64.00 32.00 64.00 65.00 65.00 96.00 32.00 0.00 96.00 -32.00 0.00 -129.00 33.00 -64.00 32.00 -32.00 96.00 0.00 64.00 -32.00 33.00 -65.00 0.00 -64.00 0.00 -64.00 32.00 -97.00 64.00 -96.00 0.00 -64.00 32.00 -129.00 64.00 -64.00 33.00 0.00 32.00 32.00 0.00 32.00 0.00 129.00 64.00 32.00 64.00 0.00 97.00 0.00 32.00 0.00 129.00 0.00 32.00 -65.00 64.00 -128.00 129.00 -32.00 64.00 -97.00 0.00 -96.00 32.00 -65.00 97.00 -32.00 64.00 0.00 64.00 0.00 0.00 -64.00 0.00 -97.00 32.00 -32.00 65.00 0.00 64.00 32.00 32.00 65.00 65.00 0.00 64.00 -97.00 32.00 -96.00 32.00 -32.00 97.00 0.00 64.00 160.00 32.00 33.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 -32.00 128.00 -97.00 65.00 32.00 64.00 161.00 64.00 0.00 65.00 -32.00 32.00 0.00 32.00 -32.00 64.00 -32.00 32.00 -33.00 65.00 0.00 32.00 0.00 64.00 33.00 0.00 32.00 32.00 32.00 0.00 64.00 0.00 97.00 32.00 32.00 33.00 0.00 64.00 -161.00 32.00 0.00 64.00 0.00 33.00 0.00 128.00 -64.00 65.00 0.00 32.00 0.00 96.00 96.00 64.00 32.00 33.00 0.00 64.00 0.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 0.00 32.00 0.00 64.00 0.00 32.00 64.00 65.00 32.00 225.00 -64.00 32.00 -64.00 32.00 -97.00 64.00 -64.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 64.00 32.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 96.00 0.00 0.00 33.00 32.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 -96.00 161.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 0.00 32.00 0.00 64.00 -97.00 193.00 -96.00 65.00 -32.00 32.00 0.00 160.00 96.00 65.00 0.00 32.00 -32.00 32.00 -161.00 0.00 -32.00 32.00 0.00 32.00 -32.00 33.00 32.00 64.00 129.00 0.00 32.00 32.00 0.00 96.00 -32.00 193.00 -65.00 0.00 -64.00 0.00 -32.00 -32.00 -97.00 0.00 -32.00 0.00 -32.00 97.00 -96.00 32.00 0.00 96.00 0.00 32.00 0.00 33.00 32.00 -33.00 64.00 -96.00 129.00 0.00 96.00 32.00 32.00 32.00 0.00 129.00 -96.00 32.00 0.00 32.00 64.00 32.00 0.00 0.00 64.00 -64.00 97.00 -32.00 32.00 0.00 96.00 32.00 0.00 32.00 33.00 65.00 32.00 32.00 -32.00 0.00 -161.00 32.00 -97.00 32.00 0.00 96.00 33.00 0.00 128.00 33.00 32.00 32.00 0.00 96.00 -32.00 65.00 -32.00 0.00 -32.00 128.00 -64.00 32.00 0.00 32.00 32.00 0.00 128.00 0.00 32.00 33.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 32.00 64.00 0.00 32.00 0.00 0.00 33.00 32.00 0.00 0.00 32.00 -32.00 96.00 0.00 32.00 65.00 33.00 0.00 32.00 32.00 -32.00 64.00 -65.00 32.00 -32.00 32.00 0.00 33.00 64.00 32.00 97.00 0.00 32.00 32.00 32.00 32.00 0.00 64.00 -64.00 0.00 -97.00 32.00 -32.00 33.00 0.00 32.00 0.00 64.00 97.00 64.00 32.00 32.00 0.00 33.00 -32.00 96.00 -32.00 32.00 -33.00 97.00 0.00 32.00 0.00 64.00 -32.00 64.00 97.00 161.00 32.00 97.00 0.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 160.00 -96.00 33.00 0.00 32.00 0.00 0.00 32.00 -32.00 96.00 0.00 32.00 0.00 65.00 96.00 96.00 32.00 32.00 32.00 33.00 32.00 0.00 33.00 -33.00 -33.00 -128.00 0.00 -32.00 33.00 0.00 32.00 0.00 0.00 32.00 32.00 0.00 -32.00 128.00 32.00 97.00 64.00 -32.00 65.00 -65.00 32.00 0.00 64.00 65.00 64.00 32.00 65.00 64.00 32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 -32.00 -65.00 0.00 -64.00 0.00 -32.00 32.00 0.00 96.00 0.00 65.00 0.00 32.00 -32.00 96.00 64.00 -32.00 32.00 -96.00 32.00 -65.00 65.00 0.00 32.00 129.00 32.00 32.00 0.00 64.00 96.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -96.00 64.00 -65.00 33.00 -32.00 32.00 0.00 32.00 32.00 -32.00 161.00 32.00 0.00 32.00 0.00 64.00 -32.00 65.00 0.00 32.00 -32.00 64.00 32.00 0.00 32.00 0.00 64.00 0.00 65.00 32.00 32.00 65.00 0.00 64.00 -32.00 96.00 32.00 32.00 0.00 33.00 0.00 96.00 -65.00 32.00 0.00 0.00 65.00 -64.00 32.00 32.00 32.00 0.00 32.00 64.00 32.00 33.00 32.00 64.00 -32.00 96.00 0.00 65.00 32.00 0.00 65.00 -32.00 0.00 -161.00 0.00 -32.00 0.00 -33.00 0.00 0.00 32.00 0.00 32.00 65.00 32.00 64.00 0.00 97.00 0.00 96.00 97.00 0.00 32.00 0.00 32.00 -129.00 97.00 33.00 32.00 64.00 0.00 64.00 -32.00 64.00 -33.00 33.00 0.00 32.00 33.00 0.00 160.00 64.00 97.00 64.00 0.00 0.00 -32.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 97.00 0.00 64.00 0.00 0.00 32.00 -64.00 161.00 32.00 32.00 64.00 -32.00 65.00 -32.00 96.00 96.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -64.00 -65.00 0.00 -64.00 64.00 0.00 161.00 -32.00 0.00 32.00 64.00 32.00 65.00 65.00 32.00 0.00 32.00 -33.00 32.00 -96.00 32.00 -32.00 65.00 0.00 64.00 32.00 0.00 32.00 -32.00 64.00 32.00 65.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 -97.00 64.00 0.00 32.00 0.00 0.00 32.00 32.00 0.00 -64.00 193.00 32.00 32.00 64.00 0.00 65.00 -96.00 64.00 0.00 32.00 0.00 0.00 32.00 0.00 32.00 -32.00 129.00 32.00 64.00 32.00 32.00 32.00 0.00 33.00 -64.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 32.00 129.00 -32.00 96.00 0.00 32.00 64.00 32.00 0.00 0.00 129.00 33.00 32.00 32.00 32.00 32.00 0.00 0.00 32.00 96.00 97.00 0.00 64.00 0.00 32.00 65.00 0.00 32.00 -64.00 32.00 -32.00 32.00 -33.00 64.00 -32.00 65.00 32.00 0.00 33.00 -32.00 128.00 64.00 32.00 64.00 65.00 97.00 -65.00 64.00 32.00 32.00 0.00 0.00 33.00 0.00 64.00 32.00 32.00 -32.00 32.00 0.00 64.00 97.00 33.00 64.00 -33.00 32.00 65.00 0.00 64.00 96.00 64.00 33.00 65.00 32.00 32.00 32.00 -32.00 32.00 -32.00 64.00 32.00 97.00 0.00 64.00 64.00 97.00 64.00 96.00 0.00 0.00 32.00 32.00 97.00 0.00 32.00 32.00 0.00 97.00 -32.00 32.00 0.00 64.00 32.00 32.00 32.00 -32.00 97.00 32.00 32.00 97.00 0.00 0.00 32.00 0.00 64.00 0.00 65.00 64.00 64.00 97.00 64.00 0.00 97.00 0.00 32.00 32.00 32.00 0.00 32.00 64.00 0.00 32.00 -96.00 32.00 -32.00 33.00 32.00 32.00 64.00 128.00 64.00 65.00 0.00 32.00 32.00 -32.00 65.00 64.00 64.00 -32.00 32.00 161.00 32.00 64.00 65.00 0.00 32.00 0.00 32.00 0.00 64.00 -32.00 65.00 -65.00 32.00 -32.00 32.00 97.00 32.00 32.00 32.00 32.00 64.00 -32.00 97.00 32.00 32.00 32.00 0.00 32.00 0.00 97.00 -96.00 32.00 0.00 64.00 96.00 0.00 32.00 129.00 -32.00 0.00 32.00 32.00 0.00 -32.00 65.00 32.00 96.00 -32.00 64.00 0.00 33.00 64.00 32.00 32.00 -65.00 33.00 33.00 0.00 32.00 32.00 32.00 0.00 96.00 0.00 97.00 32.00 0.00 161.00 96.00 64.00 0.00 32.00 0.00 0.00 97.00 64.00 32.00 32.00 32.00 65.00 96.00 -32.00 97.00 96.00 32.00 97.00 96.00 -33.00 65.00 33.00 64.00 64.00 0.00 64.00 -64.00 32.00 0.00 65.00 64.00 64.00 97.00 64.00 32.00 32.00 32.00 33.00 0.00 32.00 0.00 0.00 -97.00 32.00 0.00 32.00 0.00 96.00 33.00 129.00 0.00 64.00 0.00 65.00 64.00 32.00 32.00 64.00 0.00 129.00 0.00 32.00 64.00 32.00 0.00 32.00 0.00 32.00 -96.00 33.00 -32.00 32.00 0.00 32.00 32.00 0.00 128.00 0.00 65.00 32.00 -32.00 32.00 0.00 -32.00 -97.00 32.00 0.00 32.00 -32.00 65.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 64.00 33.00 97.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 96.00 -64.00 0.00 32.00 64.00 129.00 33.00 32.00 32.00 -32.00 64.00 -65.00 32.00 0.00 32.00 32.00 33.00 0.00 32.00 0.00 64.00 97.00 0.00 96.00 32.00 33.00 97.00 -33.00 -33.00 -64.00 -64.00 -96.00 32.00 0.00 32.00 -65.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 64.00 32.00 0.00 32.00 -32.00 32.00 -32.00 65.00 0.00 32.00 64.00 0.00 64.00 64.00 65.00 -64.00 64.00 32.00 32.00 0.00 129.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -33.00 65.00 33.00 64.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 64.00 33.00 0.00 32.00 0.00 32.00 65.00 32.00 64.00 64.00 -32.00 -32.00 -32.00 -32.00 -32.00 32.00 -33.00 32.00 0.00 97.00 65.00 32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 64.00 32.00 33.00 -32.00 64.00 32.00 32.00 0.00 -32.00 0.00 -97.00 32.00 65.00 33.00 0.00 64.00 0.00 32.00 0.00 32.00 128.00 0.00 -32.00 32.00 32.00 33.00 65.00 -97.00 64.00 32.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 96.00 32.00 0.00 32.00 32.00 33.00 33.00 32.00 -33.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 64.00 -32.00 0.00 -32.00 32.00 0.00 0.00 128.00 -32.00 32.00 32.00 33.00 96.00 -33.00 0.00 33.00 33.00 0.00 -33.00 32.00 65.00 64.00 -65.00 64.00 -32.00 65.00 32.00 0.00 65.00 32.00 32.00 96.00 32.00 32.00 32.00 -32.00 0.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 65.00 0.00 32.00 64.00 -32.00 32.00 -33.00 33.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 -64.00 0.00 -129.00 33.00 0.00 -65.00 -64.00 65.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 -33.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 -64.00 32.00 -32.00 33.00 -33.00 0.00 0.00 32.00 33.00 0.00 0.00 64.00 32.00 0.00 32.00 32.00 -64.00 0.00 -33.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 0.00 -65.00 -96.00 0.00 32.00 0.00 -64.00 0.00 0.00 32.00 0.00 65.00 -33.00 64.00 33.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 64.00 -96.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 33.00 -65.00 0.00 -32.00 64.00 0.00 64.00 64.00 32.00 -32.00 0.00 0.00 33.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 65.00 -64.00 -32.00 0.00 96.00 0.00 32.00 32.00 0.00 -32.00 129.00 64.00 -32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -33.00 32.00 97.00 -32.00 0.00 64.00 32.00 -32.00 64.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 32.00 -64.00 32.00 32.00 32.00 -65.00 32.00 33.00 32.00 96.00 0.00 -32.00 0.00 0.00 65.00 -32.00 0.00 0.00 96.00 64.00 32.00 32.00 33.00 64.00 32.00 -64.00 32.00 -32.00 -32.00 0.00 32.00 0.00 64.00 -32.00 -32.00 -32.00 32.00 0.00 65.00 -65.00 64.00 97.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 -225.00 97.00 96.00 0.00 0.00 32.00 0.00 -32.00 96.00 -32.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 0.00 32.00 -64.00 0.00 32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 0.00 32.00 -65.00 0.00 0.00 64.00 33.00 0.00 -33.00 33.00 0.00 64.00 33.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 32.00 64.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -97.00 0.00 33.00 32.00 0.00 65.00 0.00 32.00 -65.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 32.00 33.00 -64.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 0.00 -65.00 -64.00 65.00 0.00 -32.00 -32.00 -33.00 32.00 0.00 -64.00 0.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 0.00 -64.00 0.00 -65.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 33.00 0.00 0.00 64.00 32.00 0.00 -32.00 0.00 0.00 32.00 0.00 96.00 32.00 -32.00 -32.00 32.00 32.00 33.00 -65.00 32.00 33.00 -65.00 -97.00 65.00 0.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -64.00 -96.00 0.00 0.00 -32.00 -64.00 0.00 32.00 -32.00 -64.00 0.00 0.00 -32.00 -65.00 64.00 65.00 0.00 32.00 32.00 0.00 32.00 -97.00 32.00 32.00 0.00 -32.00 33.00 32.00 0.00 33.00 32.00 -33.00 0.00 -96.00 64.00 32.00 0.00 32.00 0.00 0.00 32.00 65.00 0.00 -33.00 0.00 0.00 97.00 -32.00 32.00 32.00 0.00 0.00 32.00 33.00 32.00 0.00 32.00 32.00 0.00 0.00 -64.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 32.00 64.00 32.00 -32.00 0.00 32.00 32.00 65.00 0.00 32.00 33.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 96.00 0.00 0.00 32.00 -32.00 32.00 65.00 0.00 64.00 32.00 -129.00 -193.00 -64.00 0.00 -64.00 -64.00 -65.00 -64.00 -32.00 0.00 -32.00 -129.00 32.00 0.00 32.00 0.00 65.00 0.00 96.00 -32.00 32.00 0.00 0.00 -32.00 97.00 0.00 32.00 -32.00 129.00 -65.00 32.00 33.00 64.00 -33.00 64.00 -32.00 32.00 -64.00 33.00 -32.00 64.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 65.00 0.00 64.00 32.00 96.00 32.00 65.00 0.00 32.00 65.00 0.00 32.00 32.00 0.00 32.00 32.00 -32.00 0.00 0.00 32.00 64.00 32.00 -32.00 32.00 0.00 33.00 32.00 0.00 33.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 64.00 0.00 32.00 0.00 97.00 64.00 32.00 0.00 64.00 -32.00 32.00 32.00 0.00 32.00 33.00 33.00 0.00 -33.00 0.00 33.00 32.00 0.00 -65.00 32.00 0.00 32.00 33.00 0.00 32.00 0.00 96.00 0.00 -96.00 96.00 0.00 65.00 -97.00 96.00 -257.00 289.00 -547.00 804.00 -64.00 97.00 -32.00 64.00 -64.00 64.00 -32.00 65.00 -129.00 257.00 -129.00 257.00 -128.00 225.00 -97.00 225.00 -64.00 97.00 -193.00 450.00 -129.00 289.00 -64.00 161.00 -64.00 161.00 -193.00 514.00 -64.00 161.00 -65.00 161.00 0.00 64.00 -64.00 97.00 -32.00 128.00 -129.00 386.00 -96.00 225.00 -129.00 225.00 -161.00 290.00 -353.00 450.00 -161.00 225.00 -418.00 611.00 -515.00 707.00 -32.00 64.00 -289.00 451.00 -129.00 192.00 -160.00 161.00 -226.00 257.00 -160.00 193.00 -225.00 193.00 -97.00 65.00 -418.00 353.00 -386.00 354.00 -257.00 193.00 -64.00 96.00 -161.00 193.00 -129.00 161.00 -353.00 257.00 -354.00 290.00 -321.00 225.00 -290.00 160.00 -450.00 258.00 -450.00 225.00 -450.00 257.00 -322.00 225.00 -193.00 161.00 -257.00 257.00 -450.00 482.00 -32.00 97.00 0.00 128.00 -97.00 -128.00 -96.00 32.00 -161.00 129.00 -161.00 96.00 -193.00 225.00 -160.00 193.00 -225.00 322.00 -161.00 289.00 -129.00 321.00 -225.00 579.00 -32.00 161.00 -97.00 450.00 -96.00 322.00 -225.00 514.00 -193.00 322.00 -225.00 482.00 -129.00 225.00 -160.00 225.00 -354.00 450.00 -290.00 257.00 -1157.00 933.00 -514.00 450.00 -451.00 354.00 -128.00 96.00 -483.00 322.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 -96.00 0.00 -64.00 -32.00 -32.00 -386.00 -33.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -65.00 32.00 -32.00 32.00 -64.00 -64.00 -64.00 32.00 -65.00 32.00 -32.00 0.00 -321.00 64.00 -354.00 33.00 -514.00 -97.00 -483.00 32.00 -482.00 322.00 -482.00 450.00 -258.00 225.00 33.00 289.00 -354.00 -289.00 -97.00 96.00 -96.00 33.00 64.00 -33.00 0.00 33.00 32.00 32.00 0.00 -65.00 -96.00 483.00 -225.00 128.00 -193.00 -32.00 -32.00 97.00 -97.00 289.00 -64.00 64.00 -161.00 -482.00 -418.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -161.00 -32.00 -96.00 -64.00 -33.00 -129.00 -128.00 32.00 -32.00 65.00 -33.00 0.00 -32.00 -33.00 -32.00 -32.00 -96.00 -64.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -64.00 -97.00 -33.00 0.00 -64.00 65.00 -96.00 -65.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 -64.00 -128.00 -64.00 -97.00 0.00 -32.00 -33.00 -64.00 0.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 0.00 -128.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 -96.00 -64.00 0.00 -32.00 -65.00 0.00 -32.00 -64.00 -96.00 -32.00 0.00 -65.00 -65.00 -32.00 -64.00 -64.00 0.00 -65.00 0.00 -32.00 -161.00 -64.00 32.00 -32.00 33.00 -129.00 -33.00 -64.00 0.00 -64.00 -64.00 -33.00 0.00 -32.00 32.00 0.00 32.00 -64.00 -64.00 -32.00 0.00 -64.00 -64.00 -33.00 -32.00 -64.00 0.00 -96.00 -65.00 -97.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -96.00 -97.00 0.00 33.00 -33.00 0.00 -32.00 -65.00 -128.00 32.00 -32.00 -32.00 -33.00 65.00 33.00 32.00 -33.00 -97.00 -32.00 0.00 -64.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -65.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 32.00 -96.00 -32.00 -32.00 -64.00 -65.00 -32.00 0.00 -33.00 -96.00 -32.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 -64.00 0.00 -32.00 32.00 0.00 0.00 -33.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -129.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -64.00 64.00 -32.00 -32.00 -65.00 97.00 0.00 -33.00 -64.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -161.00 -64.00 0.00 -65.00 -64.00 -64.00 -1415.00 -1061.00 32.00 -64.00 -32.00 -32.00 -32.00 -33.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 -65.00 -32.00 33.00 -32.00 -97.00 -32.00 -32.00 -65.00 -32.00 32.00 -32.00 -128.00 -193.00 -32.00 -32.00 -33.00 -33.00 -96.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -97.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -33.00 -418.00 0.00 -64.00 -64.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 -64.00 0.00 -32.00 -64.00 -161.00 -32.00 -128.00 64.00 -65.00 -32.00 -32.00 32.00 -96.00 0.00 -32.00 32.00 -97.00 -128.00 -32.00 0.00 32.00 -33.00 -96.00 -64.00 -65.00 -64.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -96.00 -32.00 -33.00 32.00 -32.00 0.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 -97.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -64.00 -32.00 32.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 0.00 33.00 -64.00 96.00 -32.00 32.00 -33.00 0.00 0.00 32.00 0.00 32.00 -64.00 0.00 -32.00 -32.00 -96.00 -32.00 -33.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 -64.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 -32.00 -258.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -161.00 -32.00 -32.00 32.00 -32.00 -64.00 -65.00 -97.00 0.00 0.00 -32.00 65.00 -32.00 -32.00 -32.00 -65.00 -32.00 0.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 32.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 -64.00 0.00 -64.00 -97.00 0.00 33.00 -32.00 -33.00 32.00 -32.00 0.00 -96.00 -32.00 0.00 -65.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -64.00 0.00 -64.00 -32.00 32.00 -64.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 -64.00 0.00 -33.00 -64.00 -96.00 32.00 -32.00 -32.00 0.00 -33.00 0.00 -64.00 -64.00 -32.00 -33.00 -32.00 0.00 -64.00 -96.00 -33.00 -32.00 33.00 0.00 -33.00 -65.00 -32.00 -32.00 -64.00 -32.00 -32.00 0.00 -65.00 -32.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 65.00 -32.00 -32.00 -32.00 64.00 64.00 32.00 -32.00 0.00 0.00 64.00 64.00 65.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 33.00 0.00 32.00 -64.00 0.00 -65.00 0.00 0.00 -32.00 -32.00 -33.00 -32.00 65.00 -32.00 0.00 -32.00 -65.00 -33.00 0.00 33.00 33.00 -33.00 0.00 0.00 96.00 -32.00 32.00 32.00 32.00 -96.00 0.00 0.00 32.00 -32.00 65.00 -97.00 -32.00 32.00 64.00 -64.00 32.00 -128.00 0.00 -33.00 0.00 0.00 32.00 -64.00 97.00 0.00 32.00 -96.00 -32.00 -32.00 32.00 -65.00 129.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -65.00 -65.00 -32.00 33.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -97.00 -32.00 -96.00 -32.00 -65.00 32.00 0.00 32.00 -96.00 -32.00 0.00 -32.00 -32.00 -129.00 0.00 -225.00 32.00 -97.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -32.00 -32.00 0.00 64.00 -129.00 -32.00 -32.00 0.00 -97.00 96.00 -128.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 -32.00 -96.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 -64.00 -32.00 0.00 -64.00 0.00 -32.00 -65.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 -33.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -33.00 0.00 -64.00 64.00 -32.00 0.00 -32.00 -128.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 0.00 -64.00 64.00 -33.00 0.00 -32.00 -64.00 0.00 -65.00 -64.00 -32.00 -64.00 32.00 -65.00 -64.00 -32.00 -32.00 -32.00 64.00 -64.00 -96.00 -32.00 -129.00 0.00 -32.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -33.00 0.00 0.00 -64.00 33.00 -32.00 -33.00 -32.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 0.00 -33.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 -65.00 32.00 -96.00 -32.00 -32.00 0.00 0.00 -65.00 -65.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -96.00 0.00 -33.00 -32.00 33.00 0.00 0.00 -32.00 -65.00 0.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 0.00 -64.00 -64.00 0.00 -32.00 -97.00 -32.00 33.00 -65.00 0.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -64.00 -129.00 -65.00 33.00 -32.00 64.00 -32.00 0.00 -32.00 -64.00 -32.00 -33.00 0.00 -64.00 -65.00 -32.00 -128.00 0.00 0.00 -32.00 -32.00 -65.00 64.00 -32.00 0.00 -96.00 -32.00 -32.00 -32.00 64.00 -97.00 -96.00 0.00 -65.00 -96.00 32.00 -32.00 0.00 -65.00 33.00 -32.00 -33.00 65.00 -64.00 -33.00 -96.00 -64.00 32.00 -64.00 -65.00 32.00 0.00 32.00 0.00 0.00 -32.00 -64.00 -64.00 -32.00 -64.00 -97.00 0.00 0.00 -32.00 97.00 -33.00 0.00 -32.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -65.00 32.00 -64.00 -64.00 0.00 -64.00 -32.00 0.00 -64.00 -33.00 -129.00 -32.00 -96.00 0.00 -32.00 -64.00 32.00 -96.00 0.00 -33.00 -97.00 -32.00 -32.00 -64.00 -64.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 0.00 -96.00 0.00 0.00 -32.00 -65.00 0.00 -96.00 128.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -33.00 -32.00 -64.00 -32.00 -96.00 32.00 -97.00 0.00 -32.00 -64.00 -64.00 0.00 -129.00 0.00 -32.00 32.00 0.00 64.00 -64.00 0.00 -65.00 -32.00 -64.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 64.00 -32.00 64.00 32.00 0.00 -32.00 32.00 -33.00 0.00 -96.00 -32.00 0.00 64.00 64.00 0.00 0.00 65.00 -64.00 32.00 -64.00 0.00 -65.00 128.00 -64.00 65.00 0.00 64.00 -64.00 0.00 0.00 64.00 32.00 33.00 -32.00 0.00 32.00 0.00 0.00 32.00 32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -97.00 65.00 -32.00 96.00 -64.00 32.00 -129.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -65.00 64.00 -32.00 0.00 -32.00 -64.00 -64.00 -96.00 -32.00 -33.00 -33.00 65.00 -160.00 64.00 -33.00 -64.00 -32.00 32.00 -96.00 64.00 0.00 65.00 -32.00 0.00 -65.00 0.00 -64.00 0.00 0.00 -65.00 32.00 -32.00 -64.00 -32.00 -96.00 0.00 -65.00 -32.00 -96.00 0.00 -32.00 0.00 -33.00 96.00 -128.00 -32.00 -129.00 -32.00 -32.00 -64.00 -32.00 -33.00 32.00 -192.00 -32.00 -33.00 -225.00 -96.00 -97.00 -32.00 -64.00 32.00 64.00 -64.00 225.00 0.00 161.00 -65.00 322.00 -193.00 96.00 -96.00 65.00 -161.00 96.00 -96.00 96.00 -97.00 290.00 -161.00 96.00 -128.00z\"\n          },\n          ba: {\n            name: \"BA\",\n            path: \"M135416.00 82601.00l-32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 -97.00 -32.00 -64.00 129.00 -32.00 386.00 -193.00 64.00 0.00 64.00 -96.00 97.00 -161.00 32.00 -322.00 96.00 -257.00 97.00 -96.00 0.00 -97.00 32.00 0.00 96.00 -64.00 33.00 -64.00 32.00 -33.00 161.00 -96.00 64.00 -97.00 161.00 -96.00 0.00 -32.00 -65.00 -129.00 0.00 -32.00 33.00 -96.00 32.00 -65.00 32.00 -32.00 128.00 -64.00 65.00 -32.00 32.00 -65.00 0.00 -128.00 -97.00 -32.00 -32.00 0.00 193.00 -129.00 97.00 -64.00 32.00 -129.00 0.00 -32.00 -32.00 -32.00 -65.00 -97.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 65.00 -32.00 0.00 -32.00 96.00 -33.00 32.00 33.00 97.00 -33.00 96.00 0.00 97.00 -96.00 96.00 32.00 65.00 -32.00 32.00 -32.00 0.00 -97.00 128.00 -32.00 32.00 -129.00 33.00 -32.00 96.00 0.00 64.00 -32.00 65.00 0.00 32.00 -96.00 64.00 -32.00 193.00 -129.00 32.00 -64.00 65.00 -65.00 96.00 -64.00 161.00 0.00 32.00 0.00 32.00 -129.00 -64.00 -96.00 32.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 0.00 64.00 -32.00 65.00 -32.00 193.00 0.00 64.00 -32.00 64.00 -129.00 65.00 -160.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -97.00 0.00 -128.00 -32.00 -129.00 32.00 -32.00 0.00 -64.00 -97.00 0.00 -32.00 -65.00 32.00 0.00 65.00 0.00 96.00 0.00 64.00 -32.00 97.00 -96.00 64.00 0.00 161.00 -97.00 32.00 0.00 64.00 65.00 65.00 96.00 0.00 97.00 0.00 128.00 0.00 65.00 64.00 96.00 129.00 96.00 32.00 33.00 0.00 160.00 32.00 33.00 96.00 64.00 33.00 32.00 64.00 32.00 64.00 129.00 129.00 96.00 32.00 65.00 -32.00 160.00 32.00 97.00 129.00 96.00 0.00 65.00 -33.00 32.00 -128.00 128.00 -64.00 97.00 32.00 64.00 0.00 96.00 -32.00 65.00 32.00 96.00 32.00 225.00 0.00 33.00 32.00 32.00 32.00 32.00 32.00 0.00 65.00 32.00 64.00 0.00 32.00 64.00 32.00 32.00 0.00 33.00 64.00 289.00 161.00 129.00 161.00 32.00 97.00 32.00 0.00 32.00 64.00 161.00 32.00 32.00 129.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 257.00 32.00 97.00 0.00 96.00 0.00 32.00 33.00 97.00 -33.00 64.00 0.00 32.00 33.00 64.00 32.00 33.00 32.00 64.00 32.00 64.00 96.00 64.00 0.00 33.00 0.00 96.00 33.00 32.00 0.00 0.00 32.00 193.00 161.00 97.00 -97.00 32.00 0.00 32.00 -32.00 64.00 0.00 97.00 -97.00 32.00 0.00 32.00 65.00 129.00 -97.00 32.00 -32.00 32.00 -32.00 0.00 -96.00 96.00 -193.00 32.00 0.00 97.00 0.00 0.00 -97.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 64.00 -32.00 129.00 32.00 96.00 -32.00 0.00 -33.00 32.00 -96.00 -64.00 -193.00 32.00 0.00 0.00 -32.00 32.00 -32.00 65.00 -32.00 32.00 0.00 64.00 0.00 64.00 -33.00 32.00 -32.00 65.00 -128.00 64.00 -32.00 129.00 0.00 128.00 96.00 33.00 0.00 32.00 0.00 32.00 0.00 96.00 -32.00 65.00 -64.00 32.00 -65.00 32.00 -32.00 32.00 0.00 129.00 32.00 96.00 -32.00 32.00 -32.00 193.00 -225.00 32.00 -32.00 65.00 0.00 64.00 32.00 32.00 32.00 32.00 32.00 97.00 193.00 96.00 64.00 97.00 33.00 32.00 0.00 96.00 -65.00 32.00 0.00 97.00 65.00 64.00 32.00 65.00 32.00 32.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 -65.00 65.00 -128.00 32.00 -32.00 96.00 0.00 32.00 -33.00 33.00 -64.00 96.00 -321.00 32.00 -33.00 65.00 -64.00 0.00 -32.00 -33.00 -161.00 33.00 -128.00 32.00 -65.00 64.00 0.00 64.00 32.00 129.00 65.00 129.00 0.00 96.00 0.00 0.00 -32.00 32.00 -161.00 64.00 -64.00 33.00 -97.00 32.00 -32.00 64.00 -64.00 97.00 -65.00 64.00 -64.00 0.00 -129.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 193.00 -193.00 96.00 -129.00 32.00 -225.00 0.00 -96.00 -32.00 -65.00 65.00 -96.00 32.00 -32.00 128.00 0.00 161.00 0.00 0.00 -65.00 32.00 -96.00 97.00 -64.00 32.00 -129.00 -32.00 -64.00 -65.00 -33.00 -96.00 -96.00 64.00 -129.00 0.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 -32.00 64.00 0.00 0.00 -65.00 97.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 -65.00 0.00 -32.00 -64.00 -64.00 -65.00 -32.00 -64.00 -65.00 -64.00 0.00 -32.00 0.00 -33.00 -64.00 -192.00 -64.00 -33.00 -32.00 -64.00 -33.00 -64.00 -192.00 0.00 -65.00 0.00 -32.00 0.00 -64.00 -129.00 -225.00 -96.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 0.00 -64.00 -32.00 0.00 -129.00 -32.00 -128.00 0.00 -65.00 160.00 -257.00 97.00 -64.00 64.00 -129.00 64.00 -64.00 97.00 -32.00 289.00 -97.00 97.00 -64.00 193.00 -161.00 64.00 -32.00 96.00 -129.00 97.00 -96.00 32.00 0.00 96.00 -32.00 33.00 0.00 64.00 -64.00 129.00 -129.00 64.00 -32.00 96.00 -32.00 65.00 32.00 32.00 0.00 64.00 32.00 129.00 161.00 32.00 64.00 96.00 161.00 97.00 96.00 96.00 0.00 32.00 0.00 65.00 97.00 64.00 32.00 32.00 0.00 32.00 128.00 32.00 0.00 33.00 0.00 32.00 -64.00 128.00 0.00 65.00 -32.00 32.00 0.00 64.00 0.00 32.00 64.00 32.00 32.00 97.00 -64.00 64.00 -161.00 64.00 0.00 65.00 65.00 0.00 -65.00 32.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 0.00 33.00 33.00 0.00 64.00 32.00 0.00 32.00 32.00 0.00 64.00 0.00 32.00 0.00 0.00 96.00 193.00 -32.00 33.00 0.00 96.00 -32.00 64.00 32.00 65.00 64.00 0.00 33.00 32.00 32.00 -32.00 96.00 0.00 65.00 32.00 128.00 32.00 64.00 0.00 33.00 96.00 64.00 97.00 0.00 64.00 32.00 97.00 129.00 32.00 0.00 32.00 0.00 64.00 -65.00 32.00 0.00 32.00 65.00 0.00 96.00 65.00 97.00 0.00 96.00 64.00 0.00 193.00 -32.00 32.00 -32.00 0.00 -97.00 65.00 -32.00 64.00 -64.00 64.00 -64.00 0.00 -97.00 0.00 -32.00 32.00 32.00 97.00 32.00 0.00 32.00 64.00 0.00 96.00 -32.00 65.00 0.00 64.00 -32.00 32.00 32.00 97.00 -128.00 32.00 -65.00 32.00 -32.00 97.00 32.00 96.00 -32.00 129.00 32.00 128.00 -32.00 32.00 -64.00 -32.00 -64.00 32.00 -33.00 65.00 -32.00 96.00 32.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -129.00 32.00 -32.00 96.00 -64.00 129.00 -64.00 32.00 -33.00 32.00 0.00 0.00 -128.00 161.00 -97.00 32.00 -64.00 32.00 0.00 97.00 -32.00 96.00 0.00 32.00 -32.00 97.00 -65.00 64.00 -32.00 32.00 0.00 65.00 32.00 64.00 0.00 64.00 -32.00 193.00 0.00 97.00 0.00 96.00 -32.00 161.00 -96.00 64.00 0.00 64.00 0.00 65.00 -32.00 128.00 64.00 129.00 -97.00 64.00 97.00 32.00 0.00 65.00 0.00 64.00 64.00 32.00 0.00 32.00 -32.00 33.00 -64.00 96.00 -32.00 64.00 -65.00 32.00 0.00 65.00 32.00 64.00 0.00 64.00 -289.00 97.00 -97.00 0.00 -96.00 96.00 -96.00 32.00 0.00 65.00 -65.00 128.00 -96.00 0.00 -129.00 0.00 -96.00 33.00 -129.00 0.00 -32.00 225.00 0.00 32.00 -64.00 0.00 -65.00 193.00 -32.00 32.00 0.00 0.00 -64.00 64.00 0.00 32.00 -64.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 0.00 32.00 64.00 97.00 -32.00 0.00 -129.00 64.00 -32.00 32.00 -129.00 32.00 0.00 32.00 -64.00 0.00 -64.00 33.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -96.00 64.00 0.00 64.00 -64.00 129.00 -161.00 32.00 32.00 65.00 -161.00 64.00 -128.00 32.00 -97.00 64.00 -64.00 0.00 -32.00 65.00 0.00 32.00 0.00 128.00 96.00 97.00 0.00 96.00 65.00 32.00 0.00 65.00 -33.00 64.00 -64.00 97.00 0.00 0.00 -32.00 32.00 -32.00 32.00 0.00 96.00 32.00 32.00 -32.00 33.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 225.00 -32.00 -32.00 64.00 0.00 32.00 -32.00 32.00 0.00 33.00 32.00 64.00 32.00 32.00 0.00 32.00 32.00 32.00 33.00 65.00 96.00 0.00 0.00 32.00 32.00 -32.00 32.00 0.00 65.00 0.00 64.00 0.00 32.00 0.00 32.00 128.00 -32.00 129.00 64.00 32.00 97.00 -64.00 32.00 0.00 64.00 -33.00 97.00 33.00 0.00 64.00 64.00 0.00 129.00 -32.00 0.00 64.00 64.00 64.00 32.00 0.00 0.00 33.00 0.00 96.00 64.00 64.00 0.00 65.00 97.00 32.00 0.00 128.00 64.00 0.00 0.00 161.00 32.00 64.00 33.00 65.00 32.00 64.00 0.00 32.00 0.00 32.00 32.00 33.00 0.00 96.00 32.00 32.00 -32.00 65.00 64.00 32.00 32.00 64.00 65.00 0.00 0.00 32.00 64.00 -32.00 64.00 32.00 32.00 0.00 0.00 64.00 33.00 0.00 64.00 33.00 96.00 64.00 32.00 0.00 97.00 0.00 32.00 64.00 64.00 32.00 -32.00 65.00 0.00 64.00 0.00 32.00 -32.00 64.00 0.00 33.00 -64.00 96.00 32.00 64.00 0.00 65.00 32.00 0.00 0.00 64.00 -32.00 32.00 -97.00 32.00 0.00 32.00 0.00 33.00 -64.00 32.00 -96.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 32.00 97.00 128.00 -32.00 33.00 32.00 64.00 -64.00 64.00 32.00 65.00 0.00 64.00 0.00 32.00 -32.00 0.00 -65.00 32.00 0.00 97.00 -32.00 64.00 -32.00 64.00 129.00 -64.00 128.00 0.00 32.00 32.00 161.00 97.00 129.00 32.00 128.00 32.00 161.00 -64.00 64.00 0.00 33.00 0.00 32.00 -33.00 64.00 -64.00 32.00 0.00 32.00 -129.00 32.00 -32.00 97.00 -32.00 32.00 0.00 32.00 0.00 97.00 32.00 32.00 32.00 64.00 -96.00 97.00 -193.00 64.00 -64.00 64.00 0.00 97.00 96.00 96.00 32.00 32.00 0.00 129.00 -128.00 0.00 -97.00 0.00 -32.00 64.00 -193.00 65.00 -64.00 64.00 -354.00 32.00 -96.00 -32.00 -129.00 32.00 -161.00 64.00 -192.00 97.00 -97.00 32.00 -32.00 64.00 0.00 32.00 0.00 33.00 32.00 32.00 0.00 96.00 97.00 97.00 64.00 32.00 64.00 64.00 0.00 97.00 0.00 192.00 -96.00 65.00 -65.00 64.00 -64.00 129.00 0.00 160.00 0.00 33.00 0.00 64.00 -32.00 96.00 -32.00 193.00 -225.00 32.00 -33.00 33.00 -96.00 64.00 -32.00 96.00 -193.00 -32.00 -129.00 -96.00 -193.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 96.00 -33.00 258.00 -64.00 64.00 32.00 64.00 0.00 193.00 -128.00 225.00 32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 32.00 -33.00 -32.00 -96.00 0.00 -64.00 0.00 -32.00 -32.00 -161.00 -65.00 -129.00 33.00 -96.00 128.00 0.00 64.00 0.00 97.00 -33.00 96.00 0.00 193.00 -64.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 128.00 -32.00 32.00 -33.00 193.00 -64.00 97.00 -64.00 0.00 -64.00 32.00 -33.00 64.00 0.00 64.00 0.00 33.00 -96.00 32.00 0.00 128.00 -32.00 33.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 64.00 64.00 65.00 0.00 128.00 0.00 65.00 0.00 32.00 33.00 32.00 64.00 0.00 32.00 0.00 32.00 32.00 97.00 64.00 32.00 32.00 32.00 33.00 64.00 -33.00 32.00 0.00 161.00 0.00 32.00 33.00 65.00 32.00 32.00 32.00 32.00 32.00 0.00 0.00 -32.00 97.00 32.00 96.00 -32.00 32.00 -32.00 32.00 -33.00 65.00 65.00 0.00 32.00 128.00 32.00 161.00 32.00 129.00 32.00 128.00 33.00 32.00 0.00 65.00 64.00 128.00 64.00 65.00 129.00 64.00 32.00 32.00 32.00 32.00 0.00 32.00 0.00 97.00 -32.00 193.00 -32.00 64.00 -32.00 64.00 0.00 225.00 32.00 33.00 0.00 32.00 32.00 128.00 96.00 129.00 129.00 96.00 32.00 65.00 64.00 32.00 97.00 32.00 161.00 0.00 96.00 32.00 64.00 65.00 129.00 128.00 64.00 64.00 -32.00 33.00 0.00 64.00 -128.00 0.00 -290.00 32.00 -64.00 161.00 -257.00 96.00 -33.00 193.00 33.00 129.00 96.00 64.00 64.00 -32.00 129.00 -32.00 64.00 -129.00 97.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 32.00 65.00 64.00 96.00 97.00 97.00 128.00 96.00 65.00 32.00 64.00 32.00 96.00 33.00 97.00 -97.00 129.00 -129.00 32.00 0.00 64.00 -32.00 97.00 0.00 0.00 65.00 96.00 96.00 32.00 97.00 0.00 32.00 -32.00 32.00 -96.00 64.00 -33.00 65.00 33.00 64.00 64.00 0.00 -97.00 96.00 33.00 129.00 32.00 32.00 32.00 32.00 64.00 97.00 64.00 160.00 -32.00 65.00 161.00 353.00 64.00 193.00 129.00 129.00 32.00 96.00 32.00 33.00 0.00 64.00 -32.00 32.00 0.00 64.00 32.00 32.00 97.00 0.00 96.00 97.00 64.00 -32.00 97.00 32.00 32.00 -32.00 32.00 0.00 129.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 0.00 65.00 65.00 64.00 0.00 32.00 0.00 64.00 64.00 65.00 64.00 -32.00 97.00 -33.00 64.00 0.00 32.00 -32.00 32.00 -32.00 32.00 32.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 0.00 97.00 32.00 64.00 64.00 32.00 32.00 32.00 33.00 32.00 64.00 33.00 32.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 64.00 -32.00 64.00 -64.00 33.00 0.00 32.00 0.00 32.00 0.00 64.00 0.00 97.00 0.00 96.00 64.00 129.00 32.00 0.00 0.00 32.00 97.00 96.00 96.00 33.00 32.00 0.00 32.00 32.00 -32.00 64.00 -32.00 64.00 32.00 32.00 0.00 33.00 -64.00 64.00 0.00 96.00 -64.00 97.00 0.00 32.00 64.00 32.00 96.00 193.00 33.00 32.00 32.00 0.00 64.00 -32.00 64.00 0.00 0.00 64.00 33.00 0.00 64.00 0.00 96.00 32.00 32.00 -32.00 226.00 129.00 32.00 64.00 0.00 65.00 0.00 32.00 0.00 96.00 128.00 257.00 97.00 129.00 0.00 64.00 -32.00 161.00 0.00 32.00 64.00 32.00 128.00 611.00 0.00 32.00 33.00 33.00 -129.00 64.00 -96.00 0.00 -33.00 32.00 -96.00 64.00 -32.00 0.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -33.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 -96.00 32.00 32.00 65.00 -32.00 32.00 161.00 289.00 32.00 97.00 0.00 32.00 0.00 32.00 -32.00 64.00 0.00 64.00 0.00 -32.00 -32.00 32.00 0.00 33.00 -65.00 0.00 0.00 32.00 32.00 32.00 0.00 32.00 33.00 32.00 0.00 32.00 64.00 547.00 -579.00 225.00 -161.00 64.00 -128.00 65.00 -129.00 0.00 0.00 -129.00 0.00 -32.00 -64.00 -64.00 -32.00 0.00 -33.00 -65.00 -32.00 0.00 -96.00 32.00 -32.00 -32.00 -32.00 -32.00 -65.00 64.00 -64.00 -32.00 -32.00 65.00 -65.00 0.00 -64.00 -33.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -97.00 32.00 -32.00 0.00 -32.00 65.00 0.00 64.00 0.00 64.00 0.00 65.00 -32.00 96.00 -33.00 64.00 -32.00 0.00 -32.00 33.00 32.00 64.00 -32.00 64.00 32.00 0.00 32.00 97.00 -32.00 32.00 -32.00 64.00 0.00 64.00 64.00 97.00 0.00 96.00 65.00 32.00 0.00 33.00 32.00 -33.00 32.00 0.00 0.00 65.00 97.00 32.00 0.00 32.00 -33.00 64.00 33.00 33.00 32.00 64.00 128.00 64.00 32.00 64.00 33.00 33.00 32.00 0.00 0.00 -65.00 64.00 32.00 32.00 33.00 0.00 32.00 32.00 64.00 -32.00 0.00 0.00 32.00 32.00 32.00 33.00 0.00 0.00 32.00 32.00 0.00 0.00 33.00 32.00 0.00 0.00 64.00 -32.00 96.00 -32.00 0.00 0.00 33.00 32.00 64.00 64.00 32.00 32.00 0.00 0.00 32.00 -32.00 65.00 32.00 32.00 -32.00 32.00 64.00 32.00 65.00 64.00 64.00 32.00 32.00 -32.00 97.00 97.00 32.00 -32.00 64.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 32.00 65.00 -32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 -32.00 33.00 0.00 32.00 -64.00 32.00 0.00 64.00 64.00 97.00 -32.00 0.00 0.00 32.00 64.00 32.00 -64.00 0.00 0.00 32.00 32.00 32.00 32.00 -32.00 0.00 32.00 32.00 97.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 64.00 0.00 0.00 65.00 33.00 -33.00 32.00 0.00 0.00 33.00 -32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 0.00 -64.00 32.00 0.00 0.00 -32.00 65.00 0.00 32.00 32.00 32.00 0.00 0.00 64.00 0.00 32.00 32.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 32.00 0.00 65.00 32.00 -65.00 0.00 -32.00 0.00 65.00 32.00 0.00 33.00 96.00 -33.00 0.00 33.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 64.00 32.00 0.00 65.00 33.00 32.00 0.00 32.00 32.00 -32.00 32.00 0.00 64.00 64.00 32.00 32.00 -32.00 32.00 32.00 65.00 0.00 32.00 33.00 32.00 -33.00 64.00 65.00 97.00 0.00 0.00 64.00 32.00 0.00 32.00 0.00 64.00 -32.00 33.00 0.00 -33.00 96.00 65.00 0.00 64.00 32.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 -32.00 -64.00 32.00 0.00 32.00 0.00 0.00 -65.00 33.00 32.00 32.00 -32.00 32.00 0.00 32.00 65.00 32.00 32.00 32.00 0.00 33.00 0.00 64.00 -32.00 32.00 0.00 32.00 0.00 -32.00 64.00 32.00 32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 0.00 33.00 32.00 32.00 0.00 161.00 0.00 0.00 -64.00 64.00 -65.00 64.00 0.00 129.00 0.00 32.00 0.00 64.00 -32.00 129.00 -96.00 96.00 -97.00 97.00 -96.00 32.00 0.00 32.00 -64.00 64.00 0.00 33.00 0.00 -33.00 0.00 33.00 32.00 -33.00 64.00 -193.00 193.00 -128.00 193.00 -354.00 739.00 -128.00 225.00 -226.00 547.00 -257.00 547.00 -32.00 160.00 -129.00 193.00 -96.00 161.00 -64.00 97.00 -32.00 96.00 -33.00 64.00 -289.00 483.00 -96.00 128.00 -258.00 354.00 -193.00 289.00 -32.00 32.00 0.00 33.00 -32.00 64.00 -32.00 0.00 -96.00 161.00 -129.00 160.00 -64.00 97.00 -65.00 129.00 -64.00 128.00 -96.00 161.00 -65.00 32.00 -64.00 64.00 -64.00 65.00 0.00 96.00 0.00 32.00 -65.00 0.00 -32.00 65.00 -64.00 32.00 -64.00 96.00 -161.00 161.00 -225.00 321.00 -97.00 65.00 -96.00 128.00 -97.00 97.00 -64.00 96.00 -64.00 97.00 -65.00 0.00 -96.00 96.00 -96.00 161.00 -129.00 129.00 -64.00 0.00 -33.00 0.00 -64.00 0.00 -64.00 32.00 -161.00 96.00 -129.00 129.00 -96.00 32.00 -64.00 0.00 -65.00 -32.00 0.00 32.00 -160.00 -32.00 -226.00 -32.00 97.00 -225.00 32.00 -97.00 -32.00 -64.00 -257.00 64.00 64.00 129.00 -64.00 96.00 0.00 32.00 -32.00 0.00 -65.00 97.00 -32.00 32.00 -64.00 96.00 -32.00 33.00 -32.00 0.00 -129.00 96.00 -64.00 0.00 -65.00 64.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 96.00 0.00 33.00 -96.00 32.00 -64.00 32.00 32.00 0.00 -65.00 32.00 -64.00 32.00 -128.00 65.00 -65.00 32.00 -32.00 64.00 -96.00 32.00 -97.00 64.00 0.00 33.00 -64.00 0.00 -65.00 32.00 -64.00 96.00 -64.00 225.00 0.00 32.00 -32.00 258.00 32.00 128.00 64.00 97.00 32.00 32.00 129.00 -97.00 32.00 33.00 32.00 64.00 -32.00 32.00 32.00 0.00 0.00 64.00 0.00 65.00 32.00 32.00 33.00 64.00 -33.00 32.00 33.00 32.00 -65.00 97.00 -64.00 -32.00 0.00 64.00 32.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 -96.00 65.00 0.00 64.00 -33.00 161.00 0.00 64.00 33.00 32.00 64.00 0.00 0.00 32.00 0.00 32.00 64.00 33.00 -32.00 32.00 0.00 96.00 64.00 0.00 33.00 -32.00 0.00 32.00 0.00 97.00 -33.00 64.00 -96.00 97.00 0.00 -33.00 -32.00 -64.00 -65.00 0.00 -64.00 64.00 -96.00 0.00 32.00 33.00 0.00 64.00 -32.00 32.00 -97.00 96.00 -32.00 129.00 0.00 193.00 64.00 193.00 65.00 96.00 96.00 161.00 0.00 32.00 64.00 32.00 33.00 97.00 0.00 128.00 0.00 33.00 -65.00 289.00 0.00 64.00 -32.00 161.00 -32.00 97.00 0.00 64.00 -96.00 289.00 -33.00 161.00 -32.00 96.00 0.00 97.00 0.00 32.00 -32.00 193.00 32.00 96.00 0.00 -32.00 32.00 32.00 0.00 65.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -64.00 129.00 0.00 129.00 -64.00 257.00 -32.00 257.00 -65.00 129.00 0.00 160.00 -32.00 129.00 -32.00 64.00 -64.00 322.00 0.00 193.00 0.00 128.00 0.00 226.00 64.00 128.00 64.00 32.00 32.00 0.00 33.00 -64.00 0.00 64.00 -33.00 0.00 0.00 97.00 -32.00 32.00 32.00 0.00 0.00 -32.00 33.00 0.00 0.00 193.00 0.00 193.00 32.00 192.00 32.00 97.00 0.00 64.00 64.00 193.00 0.00 482.00 0.00 547.00 0.00 129.00 0.00 96.00 32.00 193.00 -32.00 32.00 32.00 32.00 65.00 418.00 96.00 354.00 0.00 32.00 32.00 32.00 32.00 258.00 0.00 321.00 32.00 322.00 65.00 257.00 32.00 0.00 64.00 225.00 0.00 32.00 32.00 32.00 129.00 257.00 32.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 64.00 32.00 0.00 32.00 -32.00 33.00 -32.00 64.00 -96.00 161.00 -129.00 450.00 -97.00 225.00 -64.00 193.00 -32.00 32.00 0.00 129.00 0.00 64.00 32.00 96.00 -32.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 96.00 -65.00 33.00 -96.00 128.00 0.00 32.00 -32.00 0.00 -32.00 129.00 0.00 32.00 64.00 -96.00 -64.00 161.00 32.00 128.00 32.00 32.00 32.00 0.00 0.00 32.00 -32.00 65.00 0.00 128.00 -64.00 32.00 -65.00 65.00 -96.00 161.00 0.00 96.00 -32.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 65.00 -32.00 32.00 0.00 64.00 -97.00 193.00 0.00 129.00 -32.00 160.00 0.00 65.00 0.00 96.00 -32.00 97.00 32.00 32.00 -64.00 64.00 0.00 129.00 0.00 96.00 -32.00 0.00 -33.00 32.00 -32.00 65.00 0.00 64.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 193.00 32.00 322.00 64.00 96.00 65.00 64.00 -65.00 33.00 -128.00 193.00 0.00 192.00 -97.00 161.00 0.00 193.00 32.00 32.00 -32.00 32.00 -32.00 65.00 0.00 128.00 -32.00 65.00 -64.00 32.00 -33.00 64.00 -32.00 129.00 0.00 353.00 0.00 65.00 -32.00 161.00 32.00 257.00 0.00 96.00 32.00 225.00 65.00 225.00 0.00 322.00 32.00 225.00 -32.00 32.00 0.00 64.00 32.00 193.00 225.00 322.00 32.00 0.00 -32.00 32.00 -225.00 193.00 32.00 96.00 -96.00 65.00 -33.00 64.00 -257.00 257.00 -32.00 65.00 0.00 64.00 32.00 32.00 -32.00 32.00 -257.00 129.00 -65.00 0.00 -32.00 -32.00 -64.00 32.00 -64.00 64.00 -32.00 0.00 -97.00 32.00 -225.00 129.00 -129.00 128.00 -96.00 129.00 -129.00 225.00 -128.00 257.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 32.00 64.00 64.00 -32.00 -32.00 32.00 32.00 65.00 33.00 -33.00 -161.00 226.00 -225.00 418.00 0.00 64.00 -97.00 193.00 0.00 32.00 -32.00 129.00 32.00 32.00 -64.00 128.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -64.00 -32.00 -1062.00 -676.00 -32.00 -32.00 -128.00 -96.00 -547.00 -354.00 -772.00 -482.00 0.00 -129.00 -64.00 -32.00 -96.00 -64.00 -32.00 -33.00 0.00 -32.00 257.00 -128.00 160.00 -225.00 0.00 -32.00 -32.00 -65.00 -64.00 -32.00 -32.00 32.00 32.00 -64.00 -32.00 -64.00 -64.00 -65.00 32.00 -64.00 -32.00 -64.00 32.00 -65.00 -65.00 -96.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 -97.00 32.00 -32.00 -32.00 -32.00 -97.00 -32.00 0.00 -32.00 -32.00 0.00 -96.00 -32.00 -33.00 -65.00 -32.00 -32.00 -32.00 32.00 -64.00 -64.00 -32.00 -32.00 -65.00 -32.00 -32.00 0.00 64.00 -33.00 97.00 -32.00 -64.00 -64.00 -97.00 -32.00 0.00 -64.00 64.00 -33.00 -64.00 -64.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 -32.00 -96.00 0.00 -64.00 64.00 -97.00 -64.00 -64.00 -161.00 -32.00 -32.00 -33.00 -32.00 33.00 -64.00 0.00 -97.00 -65.00 0.00 0.00 -64.00 -32.00 0.00 -64.00 -97.00 0.00 -32.00 0.00 -32.00 -161.00 -32.00 -64.00 -64.00 -65.00 -32.00 -96.00 32.00 -32.00 -32.00 -97.00 -65.00 129.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 64.00 -64.00 -64.00 -32.00 0.00 -65.00 64.00 0.00 0.00 -64.00 32.00 0.00 65.00 -96.00 128.00 -32.00 -96.00 -65.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -96.00 64.00 -64.00 0.00 -65.00 -96.00 -32.00 -33.00 -161.00 65.00 -96.00 32.00 -193.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 0.00 -65.00 96.00 -193.00 0.00 -32.00 0.00 -32.00 32.00 -129.00 32.00 0.00 97.00 -96.00 64.00 -161.00 64.00 -128.00 0.00 -97.00 65.00 -32.00 96.00 0.00 0.00 32.00 32.00 32.00 65.00 0.00 32.00 0.00 64.00 32.00 32.00 0.00 32.00 -32.00 33.00 0.00 96.00 -32.00 32.00 -32.00 97.00 64.00 0.00 32.00 32.00 0.00 64.00 65.00 32.00 -32.00 32.00 0.00 65.00 -65.00 32.00 65.00 64.00 0.00 32.00 -65.00 0.00 -96.00 33.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 -65.00 -32.00 -64.00 32.00 -32.00 -32.00 -129.00 0.00 -64.00 -32.00 -64.00 -32.00 64.00 -32.00 64.00 -161.00 65.00 -32.00 0.00 -97.00 32.00 -64.00 -32.00 -32.00 -33.00 -32.00 0.00 -65.00 65.00 -128.00 32.00 -161.00 32.00 -64.00 0.00 -32.00 64.00 -129.00 65.00 0.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 97.00 64.00 64.00 0.00 0.00 -32.00 32.00 32.00 97.00 32.00 64.00 0.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 -33.00 -32.00 33.00 0.00 0.00 -64.00 32.00 0.00 32.00 -32.00 96.00 -97.00 65.00 -128.00 32.00 0.00 32.00 -65.00 32.00 -96.00 32.00 -65.00 32.00 65.00 -32.00 64.00 32.00 0.00 33.00 64.00 64.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 0.00 33.00 -97.00 0.00 -32.00 32.00 -64.00 64.00 -161.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 65.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 -128.00 64.00 -33.00 32.00 -32.00 96.00 0.00 -32.00 -96.00 -32.00 -32.00 -32.00 -65.00 96.00 -128.00 0.00 -33.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 -129.00 -32.00 -64.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 97.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 -65.00 0.00 0.00 -65.00 -32.00 -64.00 -64.00 -32.00 0.00 -64.00 -97.00 -97.00 -64.00 0.00 0.00 -32.00 64.00 -96.00 32.00 0.00 -32.00 0.00 -32.00 -33.00 -128.00 0.00 -33.00 0.00 0.00 65.00 -96.00 0.00 0.00 -65.00 -64.00 0.00 0.00 33.00 -33.00 0.00 0.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 -32.00 -64.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 32.00 0.00 0.00 -64.00 0.00 32.00 32.00 -97.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 -32.00 33.00 -65.00 0.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -33.00 0.00 0.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 65.00 -32.00 0.00 -128.00 -32.00 0.00 -97.00 -65.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 -33.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 -64.00 32.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 32.00 -32.00 -32.00 -32.00 -129.00 -97.00 -96.00 -32.00 0.00 -32.00 -32.00 -64.00 96.00 -32.00 32.00 -33.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 65.00 0.00 64.00 -97.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 -64.00 32.00 -65.00 -129.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 0.00 -65.00 -96.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -64.00 -128.00 -97.00 -32.00 0.00 -33.00 -64.00 -96.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 64.00 32.00 65.00 -32.00 0.00 -32.00 32.00 -97.00 32.00 -64.00 -32.00 -32.00 -65.00 32.00 -64.00 -32.00 -64.00 -129.00 -65.00 0.00 -32.00 -64.00 0.00 0.00 32.00 0.00 97.00 -32.00 0.00 -33.00 64.00 -32.00 -32.00 -32.00 32.00 -129.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 -160.00 -64.00 0.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 -64.00 -65.00 0.00 65.00 -32.00 32.00 -33.00 32.00 0.00 96.00 -32.00 0.00 -96.00 97.00 -129.00 0.00 -96.00 64.00 -97.00 -32.00 -96.00 96.00 -129.00 33.00 -32.00 0.00 -32.00 96.00 -32.00 32.00 -65.00 -32.00 -64.00 -32.00 -96.00 -32.00 -33.00 0.00 -96.00 -65.00 -96.00 0.00 -65.00 33.00 -96.00 32.00 -65.00 -65.00 -32.00 0.00 -64.00 33.00 -96.00 0.00 -33.00 0.00 -32.00 -515.00 -96.00 -675.00 0.00 -32.00 -129.00 -97.00 -354.00 -353.00 -450.00 -418.00 -1157.00 -1061.00 -32.00 0.00 -32.00 32.00 -129.00 32.00 -64.00 32.00 -65.00 0.00 -32.00 97.00 -64.00 32.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 0.00 0.00 64.00 -97.00 32.00 -128.00 -64.00 -64.00 0.00 -33.00 -32.00 -160.00 32.00 -193.00 64.00 -65.00 33.00 -32.00 0.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 -32.00 -96.00 -65.00 -65.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -64.00 0.00 -33.00 -65.00 -32.00 0.00 0.00 65.00 -64.00 32.00 -32.00 -32.00 -64.00 32.00 -65.00 -32.00 -96.00 64.00 -65.00 64.00 -64.00 -64.00 -32.00 32.00 -32.00 -64.00 -129.00 -32.00 -32.00 -33.00 -32.00 -64.00 -32.00 0.00 -97.00 97.00 -64.00 -97.00 -32.00 -32.00 -97.00 32.00 -96.00 -64.00 -129.00 -32.00 32.00 -129.00 0.00 -64.00 -160.00 0.00 -97.00 -129.00 -96.00 -64.00 -32.00 0.00 -65.00 0.00 0.00 -64.00 -96.00 -33.00 -32.00 0.00 -65.00 -96.00 -32.00 -32.00 -32.00 -32.00 -64.00 -33.00 -65.00 65.00 -32.00 64.00 -64.00 -64.00 -97.00 -65.00 33.00 0.00 -33.00 0.00 -32.00 -64.00 0.00 32.00 -64.00 -64.00 -32.00 32.00 -32.00 -32.00 -65.00 -32.00 33.00 -32.00 -33.00 0.00 0.00 -32.00 -64.00 0.00 32.00 0.00 -64.00 32.00 0.00 -32.00 -64.00 -33.00 -65.00 -64.00 -32.00 -64.00 -161.00 -32.00 -64.00 -65.00 -129.00 -96.00 -32.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -97.00 0.00 33.00 -32.00 -33.00 -33.00 0.00 0.00 -32.00 -32.00 -96.00 -32.00 -32.00 -64.00 0.00 -97.00 -65.00 -32.00 32.00 -96.00 -32.00 -32.00 32.00 -97.00 -64.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 -64.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 -64.00 -65.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -64.00 -65.00 -97.00 0.00 -128.00 -64.00 0.00 32.00 -65.00 -32.00 -32.00 0.00 -32.00 32.00 -96.00 0.00 -33.00 0.00 -225.00 32.00 0.00 33.00 -32.00 32.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 64.00 -64.00 0.00 -33.00 0.00 -128.00 65.00 -97.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -65.00 0.00 -32.00 32.00 32.00 65.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 64.00 64.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 -65.00 0.00 0.00 64.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 -64.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 -161.00 -96.00 -32.00 -64.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 -64.00 -32.00 -161.00 -33.00 -32.00 -32.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 -33.00 -33.00 -32.00 -32.00 -128.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -96.00 0.00 -193.00 -64.00 -65.00 0.00 -32.00 -33.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 64.00 0.00 -64.00 -32.00 64.00 -32.00 0.00 -65.00 -32.00 0.00 0.00 -96.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 32.00 -97.00 0.00 -32.00 32.00 -193.00 129.00 -289.00 32.00 -32.00 32.00 -97.00 64.00 -225.00 65.00 -64.00 0.00 -32.00 96.00 -129.00 -32.00 -32.00 -64.00 0.00 -33.00 -65.00 -32.00 33.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 33.00 0.00 0.00 -32.00 -65.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 32.00 -33.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -64.00 -32.00 0.00 0.00 64.00 0.00 -64.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -32.00 33.00 0.00 -33.00 -65.00 -32.00 32.00 0.00 -96.00 0.00 -32.00 0.00 0.00 32.00 -64.00 0.00 -33.00 65.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 33.00 -32.00 0.00 -33.00 0.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 -33.00 96.00 -64.00 33.00 -32.00 -33.00 32.00 0.00 0.00 -64.00 -128.00 -32.00 0.00 64.00 -33.00 0.00 -64.00 -64.00 -96.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -64.00 -32.00 -33.00 0.00 33.00 0.00 32.00 -96.00 0.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -33.00 32.00 33.00 0.00 0.00 32.00 -33.00 -64.00 -96.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -96.00 -64.00 -96.00 32.00 0.00 32.00 -65.00 0.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -33.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 -97.00 32.00 -64.00 64.00 -64.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 0.00 -33.00 -32.00 33.00 -65.00 0.00 -64.00 0.00 0.00 64.00 -64.00 -32.00 0.00 32.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 65.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 96.00 -32.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 65.00 32.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 64.00 -64.00 -64.00 0.00 32.00 -32.00 0.00 0.00 64.00 -33.00 0.00 0.00 64.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 65.00 -32.00 -33.00 0.00 65.00 -65.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -64.00 0.00 32.00 33.00 -32.00 32.00 -97.00 -32.00 0.00 32.00 65.00 32.00 -33.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 33.00 33.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 32.00 -32.00 -32.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 96.00 0.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -96.00 33.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -64.00 64.00 32.00 32.00 -64.00 0.00 0.00 32.00 0.00 32.00 -64.00 -32.00 0.00 32.00 -193.00 65.00 0.00 64.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 -64.00 129.00 -64.00 96.00 -32.00 33.00 -33.00 0.00 -289.00 -33.00 -64.00 -32.00 32.00 -32.00 -64.00 32.00 0.00 32.00 -33.00 0.00 -32.00 0.00 0.00 33.00 -96.00 -33.00 -32.00 65.00 -65.00 32.00 0.00 64.00 -64.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 65.00 -32.00 -32.00 -33.00 64.00 -64.00 32.00 0.00 32.00 32.00 32.00 -64.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 33.00 65.00 -33.00 64.00 -32.00 -32.00 -32.00 64.00 -96.00 0.00 0.00 32.00 0.00 32.00 -33.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 33.00 0.00 32.00 0.00 32.00 -32.00 0.00 -96.00 96.00 -97.00 65.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 -32.00 65.00 -65.00 32.00 33.00 0.00 -33.00 32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -96.00 64.00 -65.00 -64.00 -64.00 32.00 -32.00 0.00 -64.00 -64.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -97.00 97.00 0.00 32.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 97.00 -32.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 96.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 65.00 -65.00 96.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -64.00 0.00 0.00 33.00 -33.00 -33.00 0.00 33.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 0.00 -33.00 0.00 -64.00 0.00 -64.00 -32.00 -64.00 32.00 -65.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 65.00 -32.00 0.00 -33.00 32.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -225.00 -129.00 -161.00 33.00 -64.00 64.00 0.00 96.00 -65.00 0.00 33.00 32.00 -33.00 97.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 0.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 32.00 32.00 -129.00 32.00 -32.00 -64.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 0.00 -97.00 -97.00 -64.00 0.00 -64.00 97.00 0.00 32.00 -32.00 64.00 0.00 0.00 -33.00 65.00 0.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 64.00 -32.00 0.00 -64.00 65.00 -33.00 0.00 -64.00 32.00 -32.00 161.00 -161.00 0.00 -161.00 0.00 -32.00 32.00 -32.00 0.00 -128.00 0.00 -97.00 -97.00 -32.00 -32.00 -64.00 -64.00 0.00 32.00 -129.00 -97.00 -96.00 -64.00 0.00 0.00 -33.00 32.00 -96.00 -64.00 -97.00 -32.00 0.00 0.00 -32.00 64.00 -32.00 64.00 -32.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 0.00 -64.00 32.00 0.00 0.00 -96.00 0.00 -33.00 -32.00 0.00 -65.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 65.00 0.00 0.00 -32.00 0.00 32.00 32.00 0.00 64.00 -32.00 0.00 -64.00 -32.00 -32.00 64.00 -64.00 0.00 -33.00 -96.00 -96.00 64.00 -32.00 32.00 -97.00 -32.00 -32.00 -32.00 0.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 64.00 32.00 33.00 -32.00 -33.00 -33.00 -64.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 -64.00 -64.00 -32.00 -32.00 32.00 -64.00 32.00 -33.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 64.00 96.00 97.00 32.00 32.00 -32.00 32.00 0.00 64.00 -64.00 65.00 0.00 32.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 -32.00 -64.00 0.00 -65.00 -32.00 -32.00 -64.00 -32.00 -33.00 -32.00 -192.00 -64.00 -33.00 -97.00 0.00 32.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 32.00 -33.00 0.00 0.00 -32.00 -32.00 -64.00 -64.00 0.00 -96.00 -65.00 64.00 -128.00 -64.00 -65.00 -65.00 33.00 -64.00 32.00 -32.00 0.00 0.00 -65.00 -97.00 0.00 33.00 -96.00 -33.00 -64.00 -64.00 -33.00 -96.00 33.00 -161.00 -33.00 -65.00 -32.00 0.00 -96.00 0.00 -32.00 -64.00 0.00 -96.00 -65.00 -97.00 0.00 -64.00 -32.00 64.00 -64.00 32.00 32.00 33.00 0.00 64.00 -96.00 -32.00 -65.00 -32.00 0.00 -33.00 0.00 97.00 -64.00 64.00 -129.00 32.00 -32.00 -64.00 -64.00 32.00 -96.00 -32.00 -33.00 -64.00 -32.00 -161.00 -96.00 32.00 -97.00 0.00 -128.00 129.00 -225.00 0.00 -33.00 0.00 -32.00 -65.00 -64.00 -96.00 0.00 0.00 -32.00 32.00 -64.00 -96.00 -65.00 32.00 -32.00 225.00 -64.00 32.00 -32.00 -64.00 -129.00 -97.00 32.00 -64.00 -32.00 0.00 -32.00 129.00 -97.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 -65.00 -32.00 -32.00 -32.00 32.00 -32.00 65.00 -129.00 64.00 -64.00 32.00 0.00 32.00 -65.00 129.00 -64.00 128.00 -129.00 -32.00 -32.00 -96.00 -96.00 -129.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 -65.00 -32.00 -64.00 64.00 -64.00 32.00 -65.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 96.00 -32.00 0.00 -32.00 -64.00 -97.00 -32.00 -64.00 -64.00 32.00 0.00 -32.00 0.00 -32.00 96.00 -65.00 32.00 -64.00 97.00 -32.00 96.00 -32.00 97.00 -32.00 96.00 -33.00 32.00 -32.00 65.00 -32.00 64.00 -128.00 64.00 -33.00 161.00 -96.00 32.00 -129.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -161.00 64.00 -64.00 32.00 -65.00 0.00 -32.00 32.00 -193.00 129.00 -161.00 32.00 -64.00 -32.00 -96.00 97.00 -129.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 -97.00 0.00 -64.00 -33.00 0.00 -96.00 -64.00 64.00 -97.00 0.00 -64.00 0.00 -64.00 -128.00 0.00 0.00 -32.00 32.00 -33.00 32.00 -96.00 0.00 -64.00 64.00 -33.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 64.00 -32.00 -32.00 -65.00 64.00 -32.00 0.00 -96.00 -32.00 -32.00 -32.00 0.00 -32.00 -65.00 -32.00 -64.00 96.00 -96.00 32.00 -65.00 33.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 -64.00 96.00 -32.00 32.00 -32.00 33.00 0.00 32.00 0.00 64.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 -32.00 96.00 -33.00 32.00 -32.00 65.00 0.00 64.00 -64.00 64.00 -32.00 65.00 -129.00 0.00 -64.00 -65.00 -32.00 -64.00 -32.00 -225.00 96.00 -65.00 0.00 -96.00 64.00 -225.00 -32.00 -32.00 0.00 -32.00 64.00 -97.00 33.00 32.00 -161.00 0.00 -64.00 33.00 -65.00 32.00 -64.00 -65.00 -96.00 97.00 -65.00 64.00 -64.00 -32.00 -64.00 -32.00 -33.00 -32.00 -32.00 0.00 -64.00 0.00 -64.00 32.00 -33.00 0.00 -64.00 -32.00 -64.00 64.00 -32.00 0.00 -129.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 65.00 -97.00 64.00 -32.00 64.00 -64.00 -32.00 -65.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 64.00 -161.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 32.00 -97.00 32.00 -32.00 32.00 0.00 97.00 -32.00 128.00 -32.00 193.00 0.00 33.00 -97.00 -33.00 -64.00 33.00 -64.00 -33.00 -65.00 -96.00 33.00 -225.00 96.00 -129.00 -32.00 0.00 -161.00 32.00 -64.00 0.00 -32.00 -32.00 -65.00 -64.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 33.00 -32.00 -33.00 -64.00 -96.00 -64.00 -32.00 0.00 -65.00 -32.00 -32.00 -65.00 -32.00 32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 129.00 -32.00 0.00 -33.00 -32.00 0.00 -97.00 -32.00 -32.00 0.00 -97.00 -32.00 33.00 -64.00 32.00 -32.00 -65.00 -97.00 -32.00 0.00 65.00 -32.00 32.00 -96.00 -32.00 -33.00 0.00 -64.00 -97.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -33.00 64.00 -32.00 0.00 -32.00 33.00 -96.00 0.00 -65.00 32.00 -64.00 -32.00 -64.00 -65.00 -32.00 0.00 -33.00 -32.00 -64.00 64.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -65.00 0.00 -64.00 64.00 -32.00 32.00 0.00 0.00 -64.00 97.00 -97.00 64.00 -32.00 32.00 -32.00 33.00 -65.00 128.00 -32.00 65.00 0.00 192.00 -32.00 161.00 -64.00 97.00 0.00 96.00 -97.00 0.00 -64.00 -32.00 -64.00 -32.00 0.00 -65.00 0.00 -64.00 64.00 -128.00 32.00 -65.00 -32.00 -64.00 -32.00 -96.00 -32.00 -129.00 64.00 -64.00 0.00 -65.00 -64.00 -32.00 -32.00 -64.00 32.00 -65.00 -97.00 33.00 -64.00 -33.00 -64.00 33.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 -32.00 33.00 -64.00 -33.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 -65.00 -32.00 -64.00 -64.00 -96.00 32.00 -33.00 -32.00 65.00 -32.00 161.00 -65.00 96.00 -160.00 64.00 -33.00 0.00 -64.00 -32.00 -96.00 -32.00 -33.00 -32.00 -64.00 0.00 -64.00 64.00 -32.00 65.00 32.00 64.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 161.00 96.00 161.00 64.00 64.00 -32.00 97.00 32.00 96.00 -32.00 225.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -32.00 0.00 -97.00 -33.00 -32.00 -32.00 -64.00 32.00 -97.00 0.00 -32.00 -64.00 -64.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 -64.00 -65.00 -65.00 0.00 -64.00 -32.00 -32.00 0.00 -96.00 -32.00 -129.00 -64.00 -161.00 32.00 -64.00 -32.00 -97.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 -65.00 -96.00 -32.00 -64.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 -64.00 -96.00 -32.00 -33.00 -32.00 -32.00 -33.00 -32.00 -96.00 0.00 -161.00 0.00 -32.00 -96.00 -64.00 0.00 -32.00 0.00 -129.00 -65.00 -32.00 -32.00 0.00 -96.00 -32.00 -65.00 -97.00 -32.00 -128.00 0.00 -65.00z\"\n          },\n          pi: {\n            name: \"PI\",\n            path: \"M138535.00 77489.00l-32.00 -193.00 32.00 -64.00 0.00 -65.00 65.00 0.00 32.00 0.00 32.00 -96.00 32.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -96.00 33.00 -96.00 32.00 -33.00 64.00 -192.00 -64.00 -65.00 32.00 0.00 0.00 -64.00 32.00 -129.00 0.00 -32.00 64.00 -64.00 0.00 -65.00 32.00 -96.00 0.00 -32.00 33.00 -64.00 -33.00 -97.00 -32.00 -32.00 -32.00 -32.00 0.00 -129.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -97.00 0.00 -32.00 32.00 -128.00 0.00 -33.00 33.00 -32.00 64.00 -32.00 32.00 -96.00 0.00 -33.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 64.00 -97.00 -32.00 -128.00 32.00 -97.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 -64.00 0.00 -64.00 64.00 -65.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 32.00 -97.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -64.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -65.00 0.00 -32.00 -97.00 -128.00 -32.00 -65.00 -64.00 -64.00 -33.00 -32.00 -64.00 0.00 -64.00 -32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 33.00 -65.00 -33.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 -64.00 0.00 -33.00 64.00 0.00 0.00 -64.00 -32.00 -64.00 0.00 -64.00 32.00 -97.00 -32.00 0.00 0.00 -96.00 -32.00 -97.00 32.00 0.00 32.00 -32.00 -64.00 -64.00 -32.00 -33.00 -32.00 -96.00 -32.00 -32.00 0.00 -129.00 0.00 -64.00 32.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 -33.00 -32.00 33.00 -64.00 -33.00 -65.00 0.00 -64.00 -96.00 -64.00 -32.00 -97.00 -65.00 -64.00 0.00 -32.00 -32.00 -97.00 -32.00 -64.00 64.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 65.00 -32.00 -32.00 -32.00 32.00 -33.00 32.00 -64.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -64.00 -33.00 -32.00 -32.00 32.00 -64.00 64.00 -32.00 33.00 -64.00 0.00 -33.00 32.00 0.00 96.00 -96.00 64.00 32.00 33.00 -128.00 64.00 -33.00 64.00 0.00 -32.00 -64.00 64.00 -32.00 65.00 0.00 96.00 -225.00 32.00 -32.00 -32.00 -33.00 32.00 -96.00 32.00 -64.00 33.00 0.00 0.00 -32.00 96.00 32.00 64.00 -65.00 -128.00 -64.00 0.00 -32.00 128.00 -96.00 32.00 -33.00 0.00 -64.00 33.00 -32.00 -33.00 -64.00 33.00 -33.00 64.00 -96.00 -32.00 -32.00 32.00 -97.00 -32.00 -128.00 32.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -32.00 65.00 -33.00 32.00 0.00 32.00 -32.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 0.00 -97.00 64.00 -64.00 0.00 -97.00 65.00 -64.00 0.00 -193.00 257.00 -225.00 -32.00 -64.00 32.00 -32.00 32.00 -65.00 64.00 0.00 32.00 -64.00 -32.00 -96.00 32.00 -65.00 33.00 -64.00 -33.00 -64.00 65.00 -129.00 0.00 -96.00 32.00 -33.00 -64.00 -96.00 64.00 -64.00 32.00 0.00 32.00 0.00 0.00 -32.00 -96.00 -65.00 64.00 -96.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 0.00 64.00 -33.00 0.00 -32.00 -97.00 -64.00 97.00 -32.00 0.00 -32.00 -64.00 -33.00 -33.00 -64.00 33.00 0.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 32.00 -65.00 -32.00 -96.00 64.00 -32.00 0.00 -65.00 32.00 32.00 33.00 -32.00 -33.00 -32.00 33.00 -64.00 -33.00 -64.00 33.00 -33.00 0.00 33.00 32.00 0.00 0.00 -33.00 -32.00 -64.00 32.00 -64.00 64.00 -32.00 0.00 -33.00 0.00 -64.00 32.00 0.00 65.00 -32.00 -65.00 -32.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 0.00 -32.00 -64.00 32.00 -33.00 64.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -32.00 0.00 -64.00 32.00 -65.00 32.00 0.00 64.00 32.00 129.00 -128.00 32.00 -64.00 64.00 -33.00 97.00 0.00 32.00 0.00 64.00 -32.00 97.00 32.00 64.00 -64.00 32.00 -32.00 32.00 0.00 65.00 32.00 0.00 32.00 32.00 0.00 64.00 -64.00 96.00 -32.00 33.00 -97.00 96.00 -64.00 32.00 32.00 65.00 0.00 32.00 -32.00 193.00 -64.00 96.00 32.00 32.00 0.00 65.00 32.00 128.00 -96.00 64.00 0.00 65.00 -65.00 32.00 0.00 64.00 0.00 65.00 -32.00 96.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -64.00 33.00 -65.00 32.00 -64.00 32.00 -32.00 64.00 32.00 65.00 -32.00 32.00 -64.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 129.00 -64.00 32.00 -64.00 128.00 32.00 32.00 32.00 193.00 -64.00 65.00 128.00 64.00 32.00 32.00 0.00 32.00 0.00 65.00 0.00 32.00 -160.00 32.00 -33.00 32.00 -128.00 32.00 0.00 65.00 -32.00 32.00 -33.00 96.00 -32.00 97.00 -161.00 0.00 -32.00 96.00 -64.00 32.00 -32.00 32.00 -97.00 161.00 -32.00 32.00 0.00 33.00 -128.00 64.00 -65.00 64.00 0.00 0.00 -32.00 129.00 -64.00 128.00 -32.00 97.00 -97.00 64.00 -64.00 97.00 -32.00 64.00 0.00 161.00 -65.00 96.00 65.00 32.00 0.00 97.00 -161.00 64.00 -64.00 0.00 -32.00 -32.00 -97.00 32.00 -64.00 32.00 -64.00 0.00 -97.00 64.00 0.00 65.00 0.00 161.00 -193.00 0.00 -129.00 64.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -96.00 0.00 -32.00 65.00 -97.00 128.00 -64.00 32.00 -97.00 32.00 -32.00 33.00 0.00 0.00 97.00 32.00 0.00 32.00 0.00 32.00 -65.00 -96.00 -128.00 0.00 -32.00 0.00 -33.00 32.00 0.00 96.00 0.00 64.00 97.00 33.00 0.00 32.00 -64.00 0.00 -129.00 32.00 -64.00 64.00 0.00 32.00 -33.00 225.00 -32.00 65.00 -64.00 64.00 0.00 64.00 32.00 0.00 64.00 65.00 33.00 32.00 0.00 32.00 -65.00 32.00 -32.00 161.00 32.00 129.00 -96.00 160.00 -32.00 32.00 -65.00 33.00 -32.00 32.00 -32.00 96.00 64.00 65.00 -64.00 32.00 0.00 128.00 0.00 65.00 -32.00 32.00 0.00 0.00 32.00 32.00 32.00 129.00 -32.00 64.00 32.00 96.00 32.00 97.00 97.00 96.00 32.00 65.00 64.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 97.00 33.00 32.00 160.00 64.00 33.00 33.00 32.00 64.00 32.00 64.00 128.00 65.00 0.00 -33.00 65.00 -32.00 96.00 32.00 64.00 0.00 65.00 -32.00 32.00 0.00 0.00 -96.00 129.00 32.00 64.00 -129.00 193.00 32.00 128.00 -32.00 97.00 -64.00 32.00 -64.00 32.00 0.00 193.00 -33.00 161.00 33.00 96.00 64.00 32.00 0.00 65.00 0.00 128.00 -64.00 97.00 -97.00 96.00 0.00 65.00 64.00 64.00 0.00 129.00 -32.00 32.00 0.00 64.00 -64.00 32.00 -129.00 161.00 -64.00 129.00 -161.00 32.00 -96.00 0.00 -32.00 0.00 -32.00 32.00 -193.00 96.00 -129.00 0.00 -64.00 0.00 -97.00 65.00 -128.00 -65.00 -32.00 0.00 -33.00 32.00 -32.00 65.00 -32.00 -32.00 -96.00 32.00 -97.00 -65.00 -96.00 0.00 -32.00 97.00 -161.00 0.00 -97.00 32.00 -32.00 96.00 -96.00 0.00 -32.00 -32.00 -33.00 -64.00 33.00 -32.00 -33.00 32.00 -96.00 32.00 -129.00 -32.00 -64.00 0.00 -64.00 -32.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 0.00 -97.00 -32.00 -96.00 -32.00 -97.00 -129.00 -96.00 0.00 -65.00 -64.00 -32.00 -32.00 -32.00 -193.00 0.00 -32.00 -64.00 -32.00 -64.00 -33.00 -129.00 0.00 -64.00 -64.00 -33.00 -129.00 -96.00 -96.00 0.00 -32.00 32.00 -32.00 64.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 -32.00 0.00 -96.00 -33.00 -33.00 -64.00 -64.00 -64.00 -64.00 0.00 -64.00 -32.00 -129.00 -32.00 -32.00 0.00 -65.00 96.00 -160.00 -96.00 -193.00 32.00 -97.00 -32.00 -64.00 -33.00 -161.00 33.00 -64.00 0.00 -32.00 96.00 0.00 0.00 -65.00 -64.00 -225.00 32.00 -160.00 0.00 -32.00 -32.00 -33.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 -65.00 161.00 -32.00 64.00 0.00 32.00 -64.00 32.00 -97.00 97.00 -64.00 32.00 -193.00 96.00 -96.00 0.00 -32.00 32.00 -129.00 33.00 -32.00 128.00 -32.00 65.00 -65.00 32.00 -128.00 32.00 -32.00 128.00 -33.00 65.00 -32.00 0.00 -64.00 128.00 -64.00 65.00 -32.00 32.00 -65.00 32.00 -160.00 0.00 -65.00 0.00 -32.00 -64.00 -161.00 0.00 -64.00 128.00 -161.00 0.00 -96.00 -32.00 -161.00 -32.00 -96.00 -32.00 -193.00 -65.00 -97.00 -32.00 0.00 0.00 -64.00 0.00 -129.00 -96.00 -225.00 0.00 -64.00 32.00 -161.00 -64.00 -64.00 0.00 -32.00 -129.00 -129.00 0.00 -32.00 0.00 -129.00 -32.00 -96.00 -161.00 -161.00 -32.00 0.00 -32.00 -96.00 0.00 -97.00 96.00 -96.00 33.00 -65.00 0.00 -64.00 -97.00 -64.00 -32.00 -32.00 -32.00 -65.00 32.00 -64.00 64.00 -64.00 65.00 -33.00 0.00 -32.00 32.00 -32.00 160.00 -225.00 33.00 -64.00 32.00 -64.00 0.00 -33.00 -32.00 -128.00 64.00 -97.00 0.00 -96.00 32.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -96.00 -64.00 -33.00 -64.00 33.00 -129.00 -65.00 -64.00 -193.00 -129.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -64.00 0.00 0.00 -32.00 0.00 -129.00 0.00 -96.00 -97.00 -161.00 0.00 -64.00 -32.00 -161.00 0.00 -96.00 32.00 -97.00 193.00 -225.00 32.00 -32.00 32.00 -32.00 193.00 0.00 0.00 -32.00 -96.00 -65.00 32.00 -64.00 32.00 -32.00 97.00 -32.00 64.00 -65.00 0.00 -96.00 64.00 -193.00 32.00 -32.00 65.00 -193.00 64.00 0.00 32.00 32.00 32.00 0.00 32.00 -96.00 33.00 -97.00 225.00 -161.00 64.00 -64.00 0.00 -96.00 0.00 -32.00 0.00 -65.00 193.00 -321.00 32.00 -32.00 32.00 -33.00 -32.00 -64.00 -32.00 -96.00 32.00 -32.00 32.00 -65.00 0.00 -64.00 -64.00 -129.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 96.00 -97.00 97.00 -128.00 64.00 0.00 32.00 -65.00 0.00 -32.00 33.00 -96.00 96.00 -65.00 64.00 -32.00 65.00 -64.00 128.00 -161.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -65.00 97.00 -64.00 0.00 -96.00 32.00 -65.00 32.00 32.00 32.00 0.00 0.00 97.00 65.00 64.00 32.00 0.00 32.00 0.00 64.00 -32.00 65.00 -96.00 32.00 0.00 32.00 0.00 0.00 64.00 32.00 32.00 64.00 -32.00 33.00 -64.00 0.00 -65.00 96.00 32.00 64.00 0.00 129.00 -96.00 32.00 32.00 129.00 64.00 32.00 0.00 64.00 -32.00 161.00 -64.00 161.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 -32.00 -97.00 64.00 -32.00 0.00 -32.00 161.00 -32.00 64.00 -129.00 64.00 -32.00 0.00 -32.00 0.00 -64.00 33.00 -65.00 32.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -129.00 0.00 0.00 -65.00 32.00 -32.00 65.00 -64.00 161.00 0.00 64.00 -32.00 161.00 -32.00 96.00 0.00 64.00 -32.00 65.00 -97.00 32.00 0.00 0.00 -32.00 32.00 -97.00 32.00 -64.00 32.00 0.00 65.00 32.00 32.00 0.00 0.00 -161.00 0.00 -32.00 64.00 -64.00 0.00 -96.00 0.00 -33.00 32.00 -32.00 65.00 -32.00 64.00 -32.00 96.00 -129.00 32.00 -64.00 129.00 -96.00 64.00 -32.00 33.00 -161.00 0.00 -32.00 96.00 -97.00 -32.00 -96.00 -32.00 -33.00 -129.00 -96.00 -32.00 -32.00 -64.00 -97.00 -65.00 -64.00 32.00 -128.00 0.00 -97.00 97.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 -160.00 96.00 -97.00 65.00 -64.00 64.00 32.00 64.00 129.00 161.00 128.00 96.00 32.00 33.00 0.00 192.00 193.00 129.00 65.00 0.00 32.00 129.00 96.00 193.00 97.00 32.00 0.00 96.00 -32.00 32.00 0.00 97.00 64.00 128.00 0.00 65.00 -64.00 64.00 0.00 161.00 32.00 32.00 32.00 32.00 -32.00 64.00 32.00 97.00 -32.00 128.00 64.00 33.00 0.00 128.00 64.00 32.00 -32.00 33.00 0.00 0.00 129.00 32.00 0.00 0.00 32.00 96.00 64.00 64.00 0.00 65.00 0.00 0.00 65.00 64.00 96.00 0.00 64.00 32.00 65.00 -32.00 0.00 32.00 32.00 -32.00 64.00 0.00 32.00 -32.00 65.00 32.00 0.00 0.00 96.00 -64.00 32.00 0.00 32.00 -65.00 0.00 0.00 65.00 -64.00 64.00 -96.00 96.00 -32.00 65.00 0.00 96.00 -290.00 515.00 -64.00 160.00 0.00 32.00 -64.00 65.00 0.00 64.00 -33.00 64.00 0.00 33.00 97.00 -33.00 0.00 65.00 0.00 96.00 32.00 0.00 32.00 65.00 161.00 0.00 32.00 0.00 0.00 32.00 0.00 96.00 0.00 64.00 64.00 65.00 33.00 128.00 0.00 32.00 64.00 -32.00 64.00 0.00 -96.00 32.00 -32.00 33.00 0.00 160.00 -65.00 97.00 -128.00 0.00 0.00 32.00 -33.00 32.00 0.00 32.00 65.00 33.00 64.00 32.00 64.00 160.00 -32.00 225.00 -32.00 33.00 32.00 32.00 65.00 32.00 96.00 0.00 64.00 0.00 65.00 64.00 96.00 0.00 97.00 65.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 161.00 64.00 64.00 -64.00 96.00 -161.00 161.00 0.00 32.00 64.00 -64.00 0.00 32.00 33.00 0.00 32.00 97.00 0.00 32.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 65.00 32.00 64.00 65.00 64.00 64.00 129.00 -64.00 161.00 -32.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -32.00 32.00 32.00 64.00 33.00 65.00 -97.00 64.00 0.00 32.00 32.00 0.00 65.00 -32.00 64.00 -32.00 64.00 0.00 64.00 -32.00 33.00 32.00 32.00 -32.00 0.00 32.00 64.00 32.00 32.00 0.00 97.00 32.00 96.00 0.00 32.00 32.00 0.00 32.00 -64.00 65.00 32.00 64.00 -64.00 193.00 -32.00 32.00 64.00 97.00 0.00 64.00 64.00 32.00 129.00 32.00 -64.00 64.00 -161.00 258.00 64.00 386.00 0.00 64.00 0.00 32.00 -64.00 32.00 -64.00 129.00 -65.00 64.00 0.00 32.00 0.00 129.00 -64.00 128.00 0.00 33.00 0.00 128.00 -64.00 97.00 0.00 128.00 -65.00 65.00 -32.00 96.00 -32.00 0.00 -32.00 97.00 -64.00 0.00 -33.00 0.00 33.00 32.00 64.00 0.00 0.00 32.00 0.00 32.00 -32.00 96.00 0.00 65.00 128.00 64.00 97.00 129.00 32.00 32.00 -129.00 161.00 -128.00 128.00 -32.00 65.00 0.00 32.00 -65.00 32.00 0.00 32.00 65.00 32.00 128.00 32.00 0.00 32.00 -64.00 33.00 -32.00 96.00 0.00 32.00 -65.00 32.00 33.00 161.00 -65.00 64.00 97.00 129.00 -32.00 64.00 64.00 97.00 0.00 64.00 32.00 0.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 -64.00 65.00 32.00 161.00 225.00 32.00 -32.00 32.00 0.00 0.00 64.00 64.00 33.00 0.00 96.00 -32.00 129.00 161.00 0.00 0.00 64.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 65.00 129.00 64.00 64.00 -64.00 32.00 0.00 32.00 96.00 65.00 -32.00 0.00 96.00 128.00 65.00 32.00 96.00 33.00 -32.00 32.00 0.00 64.00 96.00 64.00 0.00 32.00 0.00 33.00 65.00 -33.00 96.00 33.00 129.00 -97.00 64.00 97.00 64.00 32.00 0.00 32.00 65.00 -64.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 64.00 32.00 0.00 64.00 -32.00 96.00 -65.00 33.00 -32.00 96.00 32.00 32.00 65.00 97.00 32.00 64.00 -32.00 32.00 -97.00 0.00 -32.00 32.00 0.00 32.00 32.00 65.00 32.00 32.00 33.00 32.00 32.00 64.00 0.00 33.00 -65.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 -32.00 32.00 32.00 64.00 0.00 64.00 97.00 65.00 0.00 128.00 32.00 65.00 32.00 64.00 -32.00 129.00 -32.00 64.00 -97.00 32.00 -32.00 32.00 32.00 64.00 33.00 129.00 64.00 96.00 -32.00 65.00 32.00 128.00 32.00 129.00 -32.00 161.00 32.00 96.00 64.00 161.00 -32.00 96.00 97.00 97.00 0.00 257.00 -33.00 97.00 -32.00 32.00 0.00 32.00 -64.00 64.00 0.00 97.00 0.00 32.00 0.00 32.00 96.00 -32.00 65.00 64.00 64.00 225.00 64.00 129.00 -32.00 96.00 0.00 65.00 0.00 32.00 0.00 32.00 0.00 128.00 0.00 97.00 129.00 161.00 64.00 161.00 32.00 32.00 65.00 32.00 32.00 32.00 0.00 64.00 0.00 65.00 0.00 32.00 -32.00 160.00 -65.00 33.00 0.00 64.00 33.00 161.00 0.00 161.00 0.00 64.00 32.00 128.00 0.00 65.00 0.00 64.00 193.00 193.00 64.00 161.00 0.00 32.00 64.00 64.00 0.00 32.00 -64.00 129.00 32.00 32.00 96.00 97.00 258.00 0.00 96.00 96.00 97.00 64.00 32.00 32.00 193.00 33.00 225.00 32.00 128.00 0.00 65.00 32.00 32.00 32.00 64.00 64.00 0.00 32.00 32.00 97.00 33.00 32.00 32.00 97.00 32.00 32.00 64.00 0.00 64.00 -65.00 65.00 -32.00 96.00 32.00 0.00 33.00 -64.00 64.00 -32.00 32.00 -65.00 64.00 -32.00 65.00 -32.00 0.00 -64.00 32.00 0.00 128.00 -32.00 65.00 64.00 160.00 -32.00 65.00 0.00 225.00 96.00 32.00 0.00 32.00 -96.00 32.00 0.00 33.00 -32.00 -33.00 0.00 65.00 32.00 0.00 0.00 32.00 -64.00 64.00 0.00 32.00 -65.00 129.00 -64.00 32.00 0.00 32.00 -97.00 129.00 33.00 64.00 -65.00 193.00 0.00 64.00 -32.00 33.00 -32.00 160.00 -32.00 257.00 32.00 129.00 -32.00 64.00 -129.00 65.00 32.00 64.00 -64.00 257.00 -482.00 193.00 -32.00 64.00 -65.00 33.00 -161.00 32.00 -32.00 64.00 0.00 64.00 97.00 258.00 32.00 32.00 161.00 193.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 97.00 0.00 32.00 -97.00 193.00 -64.00 193.00 32.00 193.00 97.00 96.00 128.00 32.00 258.00 97.00 32.00 0.00 32.00 32.00 64.00 64.00 0.00 33.00 32.00 96.00 0.00 64.00 -32.00 386.00 0.00 32.00 0.00 65.00 -161.00 289.00 -32.00 96.00 -64.00 161.00 -32.00 129.00 32.00 64.00 32.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 -161.00 -64.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -64.00 0.00 -33.00 32.00 0.00 65.00 -32.00 32.00 -64.00 0.00 -32.00 64.00 -32.00 32.00 -33.00 64.00 0.00 33.00 -96.00 0.00 -32.00 32.00 -32.00 32.00 -97.00 32.00 -32.00 32.00 -64.00 32.00 32.00 129.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 65.00 -129.00 32.00 0.00 32.00 -32.00 32.00 32.00 129.00 -96.00 96.00 -97.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 -32.00 -97.00 0.00 -32.00 64.00 32.00 0.00 0.00 96.00 -32.00 0.00 -32.00 33.00 0.00 64.00 0.00 64.00 -32.00 64.00 -64.00 65.00 -65.00 -65.00 -96.00 -64.00 -32.00 -32.00 0.00 -32.00 -65.00 -64.00 -64.00 32.00 -32.00 0.00 -32.00 96.00 -161.00 32.00 -32.00 97.00 -32.00 161.00 -129.00 -33.00 0.00 97.00 -32.00 96.00 -32.00 32.00 -32.00 0.00 -33.00 65.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 0.00 64.00 -65.00 129.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 0.00 65.00 32.00 96.00 -64.00 64.00 -64.00 0.00 -32.00 32.00 -65.00 33.00 -161.00 0.00 -96.00 128.00 -32.00 32.00 -129.00 65.00 -96.00 0.00 -32.00 0.00 -65.00 0.00 0.00 32.00 -64.00 64.00 -32.00 97.00 -64.00 128.00 -65.00 161.00 -32.00 -32.00 -129.00 161.00 -64.00 64.00 -64.00 0.00 -32.00 96.00 -32.00 0.00 0.00 33.00 -33.00 32.00 0.00 64.00 -32.00 64.00 -32.00 0.00 -32.00 129.00 -64.00 32.00 0.00 129.00 -97.00 32.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 0.00 0.00 64.00 -32.00 0.00 -193.00 32.00 0.00 65.00 -32.00 64.00 -225.00 0.00 0.00 32.00 -33.00 129.00 0.00 96.00 0.00 129.00 -128.00 96.00 -65.00 65.00 -32.00 0.00 -96.00 96.00 0.00 96.00 -97.00 97.00 -64.00 289.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 65.00 -96.00 32.00 -33.00 64.00 -32.00 32.00 -32.00 0.00 -64.00 -64.00 -65.00 0.00 -32.00 0.00 -64.00 -97.00 -129.00 97.00 -128.00 -64.00 -65.00 32.00 -64.00 0.00 -64.00 0.00 -161.00 96.00 -96.00 32.00 -97.00 0.00 -193.00 0.00 -64.00 32.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 32.00 -97.00 65.00 -32.00 32.00 -96.00 0.00 -97.00 32.00 -32.00 0.00 -32.00 64.00 -161.00 97.00 0.00 128.00 -32.00 0.00 -32.00 33.00 -129.00 64.00 -96.00 64.00 -32.00 32.00 0.00 129.00 -32.00 32.00 -65.00 32.00 -32.00 32.00 -96.00 -32.00 -65.00 32.00 -32.00 33.00 32.00 64.00 -32.00 64.00 -128.00 32.00 -129.00 -32.00 -96.00 32.00 -97.00 -32.00 -32.00 32.00 -32.00 65.00 -97.00 128.00 -32.00 -32.00 -64.00 32.00 -65.00 0.00 -96.00 32.00 -64.00 0.00 0.00 -32.00 -97.00 -32.00 -32.00 -32.00 0.00 32.00 0.00 97.00 -64.00 64.00 -64.00 64.00 -65.00 32.00 0.00 97.00 -32.00 32.00 -193.00 32.00 -64.00 0.00 0.00 -96.00 -65.00 -97.00 0.00 -96.00 -32.00 -65.00 -32.00 0.00 -64.00 65.00 -32.00 0.00 -32.00 0.00 -97.00 -129.00 -64.00 -32.00 -97.00 0.00 -96.00 -64.00 0.00 -33.00 -32.00 -64.00 -32.00 -128.00 0.00 -65.00 32.00 -96.00 -32.00 -32.00 0.00 -33.00 -65.00 -64.00 -64.00 -32.00 -96.00 32.00 -33.00 0.00 -193.00 32.00 0.00 -96.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 -33.00 0.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 65.00 -65.00 -65.00 -64.00 0.00 -64.00 161.00 -97.00 64.00 -32.00 -32.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -65.00 32.00 -128.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 0.00 -32.00 -128.00 -32.00 0.00 -64.00 -32.00 -65.00 -97.00 -32.00 0.00 -96.00 0.00 -97.00 -96.00 -96.00 -161.00 -32.00 -64.00 -129.00 -161.00 -64.00 -32.00 -32.00 0.00 -65.00 -32.00 -96.00 32.00 -64.00 32.00 -129.00 129.00 -64.00 64.00 -33.00 0.00 -96.00 32.00 -32.00 0.00 -97.00 96.00 -96.00 129.00 -64.00 32.00 -193.00 161.00 -97.00 64.00 -289.00 97.00 -97.00 32.00 -64.00 64.00 -64.00 129.00 -97.00 64.00 -160.00 257.00 0.00 65.00 32.00 128.00 0.00 129.00 64.00 32.00 -32.00 0.00 0.00 32.00 -32.00 65.00 96.00 32.00 129.00 225.00 0.00 64.00 0.00 32.00 0.00 65.00 64.00 192.00 64.00 33.00 33.00 32.00 192.00 64.00 33.00 64.00 32.00 0.00 64.00 0.00 64.00 65.00 65.00 32.00 64.00 64.00 0.00 32.00 -64.00 65.00 0.00 64.00 -32.00 64.00 -97.00 32.00 0.00 65.00 -64.00 0.00 0.00 32.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 32.00 -64.00 129.00 96.00 96.00 65.00 33.00 32.00 64.00 -32.00 129.00 -97.00 64.00 -32.00 96.00 0.00 65.00 -161.00 0.00 -128.00 0.00 -32.00 32.00 -65.00 96.00 32.00 65.00 0.00 96.00 -32.00 225.00 -96.00 129.00 -193.00 193.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 0.00 129.00 -64.00 64.00 -97.00 65.00 -64.00 64.00 -32.00 32.00 -33.00 97.00 -64.00 64.00 -32.00 161.00 0.00 32.00 -96.00 0.00 -129.00 0.00 -129.00 -65.00 -64.00 -32.00 -64.00 0.00 -32.00 65.00 -33.00 128.00 33.00 161.00 0.00 32.00 -65.00 64.00 -32.00 33.00 -96.00 321.00 -33.00 64.00 -32.00 33.00 -96.00 0.00 -32.00 32.00 -65.00 128.00 -32.00 65.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -64.00 -32.00 -97.00 -65.00 -32.00 0.00 -96.00 65.00 -32.00 0.00 -97.00 -33.00 -96.00 -64.00 -97.00 -193.00 -32.00 -32.00 -32.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 -193.00 225.00 -32.00 32.00 -96.00 32.00 -129.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 65.00 -65.00 64.00 -96.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -128.00 -96.00 -129.00 0.00 -64.00 32.00 -65.00 128.00 -32.00 32.00 -64.00 33.00 -64.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 64.00 193.00 -32.00 96.00 0.00 33.00 -96.00 32.00 -129.00 -32.00 -64.00 32.00 -32.00 32.00 -97.00 32.00 -32.00 32.00 0.00 97.00 -97.00 0.00 -32.00 0.00 -96.00 193.00 0.00 96.00 -32.00 32.00 -32.00 32.00 -129.00 97.00 -32.00 -65.00 -32.00 0.00 -97.00 97.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -97.00 97.00 -193.00 -161.00 0.00 -32.00 -32.00 0.00 -96.00 -33.00 -33.00 0.00 -64.00 0.00 -64.00 -96.00 -64.00 -32.00 -33.00 -32.00 -64.00 -32.00 -32.00 -33.00 -64.00 0.00 -97.00 33.00 -32.00 -33.00 -96.00 0.00 -97.00 0.00 -257.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -129.00 0.00 -32.00 -32.00 -64.00 -161.00 0.00 -32.00 -97.00 -32.00 -161.00 -32.00 -161.00 -129.00 -64.00 -289.00 0.00 -33.00 -32.00 -32.00 -32.00 -64.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -225.00 -32.00 -96.00 32.00 -65.00 0.00 -96.00 -32.00 -64.00 64.00 -97.00 128.00 -128.00 33.00 -32.00 0.00 -65.00 -129.00 -96.00 -32.00 -97.00 32.00 -160.00 -32.00 -65.00 -129.00 -96.00 -64.00 -129.00 -64.00 -32.00 -33.00 -32.00 -96.00 -64.00 -32.00 -33.00 0.00 -160.00 -32.00 -33.00 -129.00 -96.00 -64.00 -96.00 0.00 -65.00 0.00 -128.00 0.00 -97.00 -65.00 -96.00 -64.00 -65.00 -32.00 0.00 -161.00 97.00 -64.00 0.00 -97.00 96.00 -64.00 32.00 -96.00 0.00 -65.00 0.00 -32.00 0.00 -64.00 97.00 32.00 64.00 32.00 97.00 -32.00 96.00 -64.00 64.00 -225.00 129.00 -225.00 -32.00 -193.00 -97.00 -225.00 65.00 -97.00 32.00z\"\n          },\n          ce: {\n            name: \"CE\",\n            path: \"M160014.00 43760.00l0.00 -64.00 64.00 -65.00 0.00 -32.00 64.00 -160.00 290.00 -515.00 0.00 -96.00 32.00 -65.00 96.00 -96.00 64.00 -64.00 0.00 -65.00 65.00 0.00 0.00 -32.00 64.00 -32.00 0.00 -96.00 -32.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 0.00 -32.00 -65.00 0.00 -64.00 -64.00 -96.00 0.00 -65.00 -65.00 0.00 -64.00 0.00 -96.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -129.00 225.00 -128.00 32.00 -33.00 64.00 -32.00 129.00 32.00 193.00 0.00 64.00 -32.00 257.00 32.00 97.00 33.00 32.00 -33.00 32.00 33.00 129.00 0.00 257.00 -33.00 64.00 -32.00 129.00 -32.00 64.00 -32.00 193.00 0.00 32.00 -64.00 32.00 32.00 97.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 96.00 65.00 -32.00 64.00 0.00 97.00 -32.00 96.00 -96.00 64.00 0.00 129.00 0.00 225.00 0.00 64.00 -33.00 129.00 33.00 257.00 -33.00 97.00 -32.00 32.00 -32.00 160.00 -64.00 65.00 -65.00 0.00 -64.00 96.00 -32.00 193.00 96.00 97.00 33.00 160.00 0.00 129.00 0.00 225.00 -33.00 193.00 33.00 129.00 0.00 0.00 -33.00 193.00 33.00 160.00 32.00 -32.00 -32.00 161.00 96.00 32.00 32.00 97.00 -32.00 0.00 -32.00 160.00 0.00 97.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 0.00 96.00 32.00 32.00 -32.00 -64.00 0.00 32.00 -32.00 161.00 97.00 64.00 0.00 -64.00 -33.00 -65.00 0.00 65.00 0.00 161.00 65.00 -65.00 -32.00 129.00 32.00 32.00 64.00 96.00 32.00 33.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 129.00 97.00 128.00 96.00 65.00 32.00 128.00 97.00 97.00 32.00 128.00 129.00 32.00 0.00 97.00 64.00 129.00 0.00 64.00 32.00 64.00 64.00 32.00 33.00 32.00 0.00 65.00 -33.00 64.00 33.00 64.00 96.00 65.00 96.00 32.00 33.00 64.00 0.00 97.00 64.00 160.00 96.00 161.00 65.00 97.00 128.00 128.00 32.00 97.00 32.00 96.00 97.00 64.00 32.00 97.00 -32.00 96.00 32.00 97.00 97.00 32.00 32.00 32.00 0.00 64.00 32.00 65.00 32.00 96.00 0.00 32.00 0.00 65.00 64.00 64.00 65.00 193.00 225.00 96.00 160.00 32.00 0.00 0.00 33.00 97.00 64.00 64.00 0.00 32.00 0.00 33.00 0.00 32.00 96.00 96.00 129.00 97.00 64.00 0.00 -32.00 64.00 65.00 64.00 0.00 65.00 -33.00 32.00 0.00 32.00 -32.00 64.00 0.00 161.00 97.00 64.00 128.00 64.00 32.00 0.00 65.00 33.00 0.00 32.00 128.00 64.00 65.00 97.00 0.00 96.00 96.00 64.00 64.00 97.00 33.00 64.00 0.00 32.00 0.00 32.00 32.00 161.00 193.00 32.00 64.00 97.00 96.00 64.00 0.00 129.00 65.00 193.00 193.00 32.00 32.00 96.00 32.00 129.00 0.00 64.00 32.00 64.00 0.00 65.00 32.00 64.00 32.00 32.00 33.00 32.00 0.00 65.00 32.00 32.00 0.00 64.00 0.00 32.00 32.00 65.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 64.00 65.00 161.00 289.00 0.00 32.00 161.00 225.00 160.00 257.00 97.00 129.00 129.00 96.00 64.00 65.00 32.00 32.00 -64.00 -32.00 32.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 64.00 0.00 33.00 32.00 64.00 96.00 128.00 161.00 33.00 32.00 96.00 129.00 32.00 32.00 65.00 97.00 128.00 192.00 32.00 33.00 129.00 225.00 129.00 64.00 225.00 257.00 32.00 32.00 128.00 129.00 97.00 64.00 32.00 32.00 129.00 129.00 193.00 193.00 128.00 96.00 193.00 129.00 64.00 0.00 129.00 97.00 64.00 0.00 32.00 0.00 65.00 32.00 32.00 -32.00 32.00 128.00 -32.00 0.00 64.00 97.00 64.00 128.00 65.00 129.00 96.00 96.00 65.00 32.00 32.00 33.00 96.00 128.00 64.00 65.00 65.00 64.00 225.00 193.00 128.00 64.00 129.00 32.00 64.00 -32.00 129.00 -64.00 32.00 32.00 64.00 64.00 0.00 32.00 65.00 0.00 257.00 129.00 161.00 32.00 64.00 32.00 32.00 32.00 0.00 -32.00 0.00 32.00 65.00 0.00 64.00 33.00 128.00 96.00 65.00 97.00 32.00 64.00 64.00 225.00 65.00 161.00 -33.00 32.00 -450.00 96.00 -450.00 97.00 -96.00 32.00 -804.00 193.00 -65.00 193.00 -32.00 160.00 -96.00 258.00 -161.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 129.00 -161.00 161.00 -32.00 257.00 -65.00 96.00 0.00 65.00 33.00 32.00 0.00 64.00 -33.00 97.00 0.00 64.00 33.00 64.00 0.00 32.00 -33.00 0.00 -32.00 33.00 -64.00 64.00 -129.00 96.00 -64.00 32.00 -32.00 97.00 0.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 -97.00 129.00 0.00 32.00 0.00 32.00 -32.00 161.00 -32.00 32.00 -32.00 64.00 -64.00 32.00 -65.00 0.00 -64.00 129.00 -64.00 32.00 -161.00 96.00 0.00 33.00 -32.00 32.00 0.00 64.00 -65.00 64.00 -96.00 193.00 -97.00 33.00 -96.00 96.00 -32.00 32.00 0.00 129.00 -32.00 96.00 0.00 64.00 64.00 -32.00 64.00 0.00 0.00 32.00 65.00 0.00 -65.00 129.00 -64.00 129.00 -161.00 160.00 0.00 33.00 -64.00 64.00 32.00 64.00 -64.00 193.00 -65.00 64.00 -32.00 65.00 -64.00 64.00 0.00 64.00 0.00 33.00 -64.00 32.00 -32.00 0.00 -33.00 32.00 -64.00 32.00 -193.00 161.00 -32.00 64.00 0.00 161.00 -32.00 32.00 -32.00 0.00 -65.00 64.00 0.00 32.00 -64.00 0.00 -64.00 65.00 -64.00 -32.00 -97.00 0.00 -32.00 -65.00 0.00 65.00 -97.00 64.00 -32.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -96.00 97.00 -64.00 32.00 32.00 64.00 -65.00 64.00 -32.00 0.00 -32.00 97.00 -32.00 64.00 0.00 32.00 -129.00 129.00 0.00 64.00 -128.00 32.00 0.00 97.00 32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 65.00 -65.00 -33.00 -32.00 97.00 -32.00 32.00 -64.00 32.00 0.00 32.00 32.00 0.00 0.00 65.00 0.00 32.00 -65.00 64.00 0.00 64.00 33.00 97.00 64.00 32.00 -32.00 32.00 -32.00 0.00 0.00 64.00 -65.00 0.00 0.00 33.00 -32.00 32.00 -32.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 0.00 32.00 33.00 0.00 128.00 0.00 32.00 0.00 65.00 -32.00 64.00 64.00 -32.00 0.00 -161.00 129.00 0.00 32.00 0.00 32.00 -64.00 32.00 0.00 97.00 -129.00 128.00 -64.00 65.00 -32.00 64.00 32.00 32.00 -64.00 97.00 0.00 32.00 -33.00 32.00 0.00 32.00 -64.00 32.00 64.00 65.00 0.00 64.00 -64.00 64.00 -32.00 32.00 -32.00 32.00 0.00 65.00 64.00 32.00 0.00 64.00 -32.00 32.00 -64.00 33.00 32.00 0.00 -32.00 0.00 -32.00 96.00 0.00 32.00 32.00 97.00 32.00 32.00 0.00 64.00 32.00 32.00 0.00 32.00 0.00 32.00 64.00 0.00 32.00 65.00 65.00 32.00 0.00 64.00 -65.00 -32.00 -64.00 0.00 32.00 32.00 0.00 32.00 -64.00 33.00 -32.00 32.00 -32.00 32.00 -65.00 64.00 33.00 32.00 0.00 33.00 -33.00 32.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -64.00 0.00 0.00 64.00 -65.00 0.00 -32.00 0.00 0.00 33.00 -129.00 32.00 -32.00 32.00 32.00 32.00 0.00 64.00 33.00 65.00 -65.00 32.00 32.00 64.00 65.00 0.00 0.00 32.00 32.00 32.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 32.00 32.00 32.00 33.00 0.00 96.00 64.00 64.00 33.00 33.00 0.00 96.00 32.00 0.00 64.00 97.00 32.00 0.00 32.00 -33.00 65.00 33.00 32.00 32.00 32.00 32.00 32.00 0.00 32.00 -32.00 97.00 -32.00 64.00 -33.00 32.00 0.00 129.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 65.00 97.00 -33.00 96.00 0.00 32.00 33.00 65.00 0.00 32.00 32.00 -32.00 64.00 32.00 32.00 0.00 64.00 64.00 33.00 32.00 32.00 64.00 32.00 129.00 -64.00 32.00 32.00 -32.00 32.00 32.00 64.00 32.00 0.00 0.00 64.00 33.00 97.00 -33.00 64.00 -32.00 32.00 0.00 65.00 0.00 32.00 0.00 32.00 -64.00 64.00 -64.00 97.00 -33.00 96.00 -32.00 32.00 -32.00 65.00 64.00 0.00 0.00 96.00 -64.00 0.00 0.00 32.00 -32.00 32.00 0.00 33.00 -193.00 32.00 0.00 32.00 32.00 32.00 32.00 64.00 -64.00 65.00 -32.00 64.00 32.00 32.00 -64.00 0.00 32.00 32.00 0.00 65.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 -97.00 32.00 -32.00 33.00 -96.00 0.00 -32.00 32.00 0.00 96.00 -33.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 -64.00 32.00 32.00 32.00 -32.00 32.00 -32.00 64.00 -32.00 0.00 -33.00 0.00 -64.00 33.00 -32.00 -33.00 0.00 33.00 -32.00 32.00 -64.00 0.00 -65.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 64.00 32.00 0.00 64.00 -32.00 97.00 -64.00 0.00 -64.00 0.00 -33.00 0.00 -64.00 -32.00 -64.00 64.00 0.00 96.00 -65.00 33.00 -32.00 -33.00 -64.00 0.00 0.00 65.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 64.00 32.00 65.00 -32.00 64.00 -32.00 64.00 -32.00 32.00 0.00 33.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -96.00 -32.00 0.00 -32.00 -32.00 -97.00 -32.00 0.00 -32.00 32.00 -129.00 -32.00 -64.00 97.00 -129.00 96.00 -32.00 -32.00 64.00 -64.00 -32.00 -65.00 0.00 -64.00 -32.00 -129.00 -32.00 -64.00 0.00 -64.00 -97.00 -65.00 -32.00 -96.00 -64.00 -32.00 -129.00 0.00 -64.00 -97.00 -97.00 -32.00 -64.00 32.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 -96.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 33.00 -129.00 0.00 0.00 -65.00 32.00 -32.00 0.00 -96.00 32.00 -33.00 65.00 -64.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -64.00 -97.00 -32.00 -128.00 0.00 -32.00 -64.00 -33.00 -129.00 -128.00 -64.00 -64.00 -129.00 -97.00 -32.00 0.00 -64.00 -32.00 -129.00 -64.00 -32.00 0.00 -129.00 -33.00 -64.00 -64.00 -32.00 -64.00 -65.00 -64.00 -32.00 0.00 -128.00 -97.00 -97.00 -64.00 -64.00 -64.00 -64.00 -97.00 -33.00 0.00 -32.00 -32.00 -96.00 0.00 -97.00 -64.00 -64.00 -65.00 -32.00 0.00 -96.00 32.00 -97.00 0.00 -225.00 33.00 -161.00 32.00 -64.00 0.00 -64.00 0.00 -65.00 0.00 -96.00 -32.00 -32.00 32.00 -161.00 64.00 -64.00 -32.00 -33.00 0.00 -225.00 257.00 -96.00 32.00 -129.00 -32.00 -64.00 64.00 -257.00 0.00 -354.00 65.00 -450.00 96.00 -129.00 -193.00 -32.00 -32.00 -64.00 0.00 -129.00 -64.00 -257.00 64.00 -225.00 0.00 -386.00 0.00 -225.00 32.00 64.00 -257.00 -32.00 -64.00 129.00 -65.00 32.00 -64.00 -32.00 -129.00 32.00 -257.00 32.00 -160.00 32.00 -33.00 0.00 -64.00 65.00 -193.00 -33.00 -64.00 97.00 -129.00 0.00 -32.00 64.00 -32.00 65.00 -129.00 0.00 -32.00 64.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 32.00 33.00 0.00 -33.00 96.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -225.00 32.00 -65.00 -64.00 -160.00 32.00 -65.00 0.00 -128.00 64.00 -32.00 32.00 0.00 32.00 -65.00 65.00 -64.00 32.00 -32.00 64.00 -64.00 0.00 -33.00 -96.00 -32.00 -65.00 32.00 -64.00 65.00 -64.00 0.00 -32.00 -32.00 -32.00 -97.00 -33.00 -32.00 -32.00 -97.00 0.00 -32.00 -64.00 -64.00 -32.00 -32.00 -65.00 -32.00 -128.00 0.00 -225.00 -32.00 -193.00 -33.00 -32.00 -32.00 -97.00 -64.00 -96.00 -96.00 -258.00 0.00 -96.00 -97.00 -32.00 -32.00 64.00 -129.00 0.00 -32.00 -64.00 -64.00 0.00 -32.00 -64.00 -161.00 -193.00 -193.00 0.00 -64.00 0.00 -65.00 -32.00 -128.00 0.00 -64.00 0.00 -161.00 -33.00 -161.00 0.00 -64.00 65.00 -33.00 32.00 -160.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 -32.00 -32.00 -65.00 -32.00 -32.00 -32.00 -64.00 -161.00 -129.00 -161.00 0.00 -97.00 0.00 -128.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -96.00 -64.00 -129.00 -64.00 -225.00 -65.00 -64.00 -96.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 64.00 -64.00 0.00 -32.00 32.00 -32.00 33.00 -97.00 0.00 -257.00 -97.00 -97.00 32.00 -96.00 -64.00 -161.00 -32.00 -96.00 32.00 -161.00 -32.00 -129.00 -32.00 -128.00 32.00 -65.00 -64.00 -96.00 -33.00 -129.00 -32.00 -64.00 32.00 -32.00 97.00 -32.00 32.00 -64.00 32.00 -129.00 -32.00 -64.00 -32.00 -65.00 0.00 -128.00 -97.00 -65.00 0.00 -64.00 -32.00 -64.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -64.00 0.00 -33.00 -32.00 -64.00 -33.00 -32.00 -32.00 -32.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 97.00 0.00 32.00 -32.00 -32.00 -64.00 -65.00 -97.00 -32.00 -32.00 32.00 -96.00 65.00 -33.00 32.00 -96.00 0.00 -64.00 -64.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 64.00 -32.00 -32.00 -65.00 -32.00 0.00 -97.00 -64.00 97.00 -64.00 -33.00 -129.00 33.00 -96.00 -33.00 -65.00 -32.00 0.00 -64.00 0.00 -64.00 -96.00 -32.00 0.00 -33.00 32.00 -32.00 -96.00 -128.00 -65.00 0.00 -96.00 -65.00 32.00 -32.00 -96.00 -32.00 0.00 -64.00 64.00 -129.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -161.00 0.00 32.00 -129.00 0.00 -96.00 -64.00 -33.00 0.00 -64.00 -32.00 0.00 -32.00 32.00 -161.00 -225.00 -65.00 -32.00 -32.00 64.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -64.00 -97.00 32.00 -64.00 -97.00 -129.00 65.00 -64.00 -33.00 -161.00 65.00 -32.00 0.00 -32.00 32.00 -96.00 64.00 -33.00 0.00 -32.00 -128.00 -32.00 -65.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -65.00 128.00 -128.00 129.00 -161.00 -32.00 -32.00 -97.00 -129.00 -128.00 -64.00 0.00 -65.00 32.00 -96.00 0.00 -32.00 0.00 -32.00 -64.00 0.00 -33.00 -32.00 33.00 0.00 64.00 0.00 32.00 -97.00 32.00 0.00 32.00 -96.00 65.00 -65.00 0.00 -128.00 64.00 -97.00 0.00 -128.00 0.00 -33.00 64.00 -128.00 0.00 -129.00 0.00 -32.00 65.00 -64.00 64.00 -129.00 64.00 -32.00 0.00 -32.00 0.00 -64.00 -64.00 -386.00 161.00 -258.00 64.00 -64.00 -129.00 -32.00 -64.00 -32.00 0.00 -64.00 -64.00 -97.00 32.00 -32.00 64.00 -193.00 -32.00 -64.00 64.00 -65.00 0.00 -32.00 -32.00 -32.00 -96.00 0.00 -97.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -64.00 32.00 -64.00 0.00 -64.00 32.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 97.00 -64.00 -33.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 64.00 -161.00 -64.00 -129.00 -65.00 -64.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -97.00 -33.00 0.00 0.00 -32.00 -64.00 64.00 0.00 -32.00 161.00 -161.00 64.00 -96.00 -64.00 -64.00 32.00 -161.00 32.00 -32.00 65.00 0.00 0.00 -32.00 -97.00 -65.00 -96.00 0.00 -65.00 -64.00 -64.00 0.00 -96.00 0.00 -65.00 -32.00 -32.00 -32.00 32.00 -33.00 32.00 -225.00 -64.00 -160.00 -64.00 -32.00 -65.00 -33.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 128.00 0.00 65.00 -97.00 0.00 -160.00 32.00 -33.00 96.00 -32.00 -64.00 0.00 -64.00 32.00 0.00 -32.00 -33.00 -128.00 -64.00 -65.00 0.00 -64.00 0.00 -96.00 0.00 -32.00 -32.00 0.00 -161.00 0.00 -32.00 -65.00 -32.00 0.00 0.00 -96.00 0.00 -65.00 -97.00 33.00 0.00 -33.00 33.00 -64.00z\"\n          },\n          rn: {\n            name: \"RN\",\n            path: \"M173454.00 58068.00l0.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 -97.00 65.00 33.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -97.00 128.00 -32.00 0.00 -64.00 129.00 -129.00 0.00 -32.00 32.00 -64.00 32.00 -97.00 32.00 0.00 65.00 -64.00 -32.00 -64.00 64.00 -32.00 96.00 -97.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 -32.00 0.00 64.00 32.00 0.00 0.00 32.00 32.00 65.00 32.00 32.00 97.00 -64.00 0.00 -65.00 32.00 65.00 97.00 0.00 64.00 32.00 64.00 -65.00 64.00 0.00 0.00 -32.00 65.00 -64.00 32.00 0.00 32.00 -32.00 0.00 -161.00 32.00 -64.00 193.00 -161.00 64.00 -32.00 33.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -33.00 0.00 -64.00 64.00 -64.00 32.00 -65.00 65.00 -64.00 64.00 -193.00 -32.00 -64.00 64.00 -64.00 0.00 -33.00 161.00 -160.00 64.00 -129.00 65.00 -129.00 -65.00 0.00 0.00 -32.00 -64.00 0.00 -64.00 32.00 0.00 -64.00 32.00 -96.00 0.00 -129.00 32.00 -32.00 96.00 -96.00 97.00 -33.00 96.00 -193.00 65.00 -64.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 161.00 -96.00 64.00 -32.00 64.00 -129.00 65.00 0.00 64.00 -32.00 32.00 -64.00 32.00 -32.00 32.00 -161.00 0.00 -32.00 0.00 -32.00 97.00 -129.00 32.00 -64.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 32.00 -97.00 64.00 -32.00 129.00 -96.00 64.00 -64.00 32.00 -33.00 33.00 0.00 0.00 -32.00 -33.00 -64.00 0.00 -64.00 33.00 -97.00 0.00 -64.00 -33.00 -32.00 0.00 -65.00 65.00 -96.00 32.00 -257.00 161.00 -161.00 32.00 -129.00 32.00 -32.00 32.00 -32.00 161.00 -64.00 96.00 -258.00 32.00 -160.00 65.00 -193.00 804.00 -193.00 96.00 -32.00 450.00 -97.00 450.00 -96.00 33.00 -32.00 32.00 64.00 96.00 161.00 64.00 64.00 129.00 129.00 96.00 64.00 33.00 0.00 96.00 32.00 64.00 -32.00 65.00 -32.00 64.00 0.00 64.00 32.00 129.00 64.00 64.00 32.00 65.00 -32.00 128.00 -64.00 97.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 193.00 128.00 97.00 32.00 96.00 0.00 96.00 97.00 97.00 128.00 193.00 193.00 161.00 65.00 96.00 64.00 64.00 -32.00 -32.00 32.00 65.00 64.00 32.00 -32.00 32.00 -32.00 32.00 0.00 0.00 96.00 64.00 33.00 97.00 -33.00 193.00 33.00 32.00 -65.00 64.00 32.00 32.00 -32.00 32.00 0.00 33.00 0.00 128.00 32.00 32.00 -32.00 129.00 0.00 96.00 -64.00 97.00 0.00 225.00 32.00 161.00 32.00 160.00 65.00 97.00 0.00 32.00 -33.00 64.00 33.00 97.00 32.00 0.00 32.00 96.00 -64.00 65.00 0.00 160.00 32.00 418.00 0.00 129.00 -32.00 129.00 -65.00 96.00 -64.00 97.00 0.00 96.00 -64.00 129.00 0.00 32.00 -33.00 96.00 0.00 161.00 0.00 193.00 65.00 128.00 64.00 129.00 0.00 129.00 32.00 128.00 -32.00 32.00 32.00 33.00 0.00 64.00 32.00 64.00 33.00 193.00 32.00 32.00 32.00 65.00 0.00 257.00 64.00 32.00 32.00 32.00 -32.00 64.00 0.00 0.00 -32.00 226.00 129.00 160.00 32.00 129.00 64.00 96.00 0.00 97.00 129.00 32.00 64.00 64.00 32.00 129.00 97.00 129.00 160.00 32.00 65.00 32.00 32.00 32.00 96.00 64.00 258.00 32.00 64.00 65.00 64.00 64.00 32.00 64.00 65.00 0.00 64.00 65.00 96.00 32.00 0.00 0.00 161.00 32.00 32.00 64.00 65.00 32.00 32.00 0.00 -32.00 0.00 96.00 33.00 64.00 0.00 33.00 32.00 32.00 0.00 96.00 32.00 64.00 32.00 97.00 32.00 0.00 0.00 32.00 0.00 129.00 32.00 96.00 32.00 0.00 0.00 193.00 0.00 32.00 33.00 65.00 64.00 0.00 0.00 32.00 -32.00 225.00 0.00 64.00 32.00 32.00 0.00 97.00 32.00 64.00 32.00 0.00 0.00 32.00 0.00 322.00 32.00 64.00 33.00 32.00 32.00 -32.00 32.00 0.00 0.00 96.00 0.00 97.00 0.00 32.00 0.00 64.00 32.00 129.00 97.00 0.00 32.00 96.00 32.00 0.00 0.00 33.00 32.00 64.00 -32.00 129.00 32.00 96.00 0.00 32.00 32.00 0.00 0.00 97.00 0.00 257.00 0.00 32.00 32.00 225.00 0.00 -32.00 32.00 32.00 0.00 32.00 33.00 97.00 32.00 64.00 32.00 0.00 32.00 32.00 96.00 0.00 0.00 32.00 33.00 258.00 0.00 96.00 -33.00 32.00 33.00 129.00 32.00 96.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 32.00 129.00 64.00 193.00 0.00 97.00 0.00 64.00 0.00 64.00 -32.00 32.00 -64.00 32.00 -97.00 33.00 -32.00 0.00 -32.00 0.00 -65.00 64.00 -96.00 32.00 -32.00 0.00 -129.00 -129.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 128.00 -65.00 0.00 -64.00 97.00 -32.00 0.00 -64.00 32.00 -129.00 -32.00 -32.00 0.00 -32.00 -65.00 -33.00 -96.00 -32.00 0.00 -32.00 64.00 -128.00 0.00 -97.00 64.00 -257.00 0.00 -64.00 -32.00 -97.00 -128.00 -64.00 -32.00 -97.00 -65.00 -32.00 0.00 -96.00 -32.00 -65.00 0.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 0.00 -32.00 -97.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 -64.00 -65.00 0.00 -32.00 0.00 -64.00 -33.00 -96.00 -32.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -64.00 -32.00 -97.00 97.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -225.00 32.00 -32.00 32.00 -354.00 0.00 -418.00 32.00 -96.00 -32.00 -65.00 0.00 -128.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -65.00 -129.00 -32.00 -64.00 -64.00 -65.00 -129.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -64.00 33.00 -33.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 0.00 -64.00 0.00 -129.00 32.00 -193.00 0.00 -32.00 0.00 -129.00 32.00 -32.00 -161.00 -64.00 -32.00 -97.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -33.00 0.00 -32.00 64.00 -96.00 0.00 -161.00 0.00 -32.00 -64.00 -64.00 -64.00 -65.00 -161.00 97.00 -96.00 32.00 -161.00 -64.00 -161.00 321.00 -129.00 0.00 -192.00 -32.00 -33.00 161.00 0.00 64.00 -96.00 161.00 -32.00 64.00 0.00 65.00 32.00 96.00 0.00 96.00 32.00 0.00 97.00 65.00 64.00 32.00 32.00 96.00 32.00 32.00 64.00 33.00 33.00 0.00 32.00 32.00 0.00 193.00 32.00 128.00 0.00 32.00 -64.00 -32.00 -33.00 32.00 -64.00 -96.00 -161.00 -64.00 -32.00 -32.00 -64.00 32.00 32.00 64.00 -96.00 193.00 -32.00 225.00 -65.00 64.00 65.00 97.00 64.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 33.00 97.00 -33.00 193.00 -32.00 32.00 -96.00 32.00 -64.00 64.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 32.00 64.00 0.00 32.00 -193.00 289.00 -32.00 0.00 -97.00 0.00 -96.00 -32.00 -161.00 0.00 -96.00 258.00 -32.00 0.00 -129.00 -65.00 -96.00 -161.00 32.00 -96.00 0.00 -64.00 64.00 -97.00 64.00 -225.00 -193.00 32.00 0.00 -257.00 -321.00 -289.00 -161.00 64.00 -161.00 64.00 -32.00 0.00 -128.00 65.00 -97.00 96.00 0.00 -32.00 32.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 -65.00 0.00 -64.00 -32.00 -96.00 -33.00 -65.00 -64.00 0.00 -161.00 129.00 -32.00 32.00 -96.00 32.00 -64.00 32.00 -226.00 65.00 -32.00 0.00 -96.00 128.00 -193.00 129.00 -193.00 0.00 -96.00 -64.00 0.00 -65.00 -33.00 -32.00 0.00 -32.00 -64.00 -64.00 32.00 -65.00 0.00 -128.00 -64.00 -32.00 -64.00 -65.00 32.00 -64.00 -129.00 -32.00 -128.00 64.00 -258.00 -32.00 -64.00 0.00 -354.00 64.00 65.00 -160.00 -33.00 -33.00 33.00 -64.00 -33.00 -64.00 0.00 -129.00 0.00 -64.00 -32.00 0.00 0.00 -64.00 32.00 -129.00 -32.00 -32.00 0.00 -32.00 65.00 -97.00 32.00 0.00 96.00 0.00 32.00 0.00 97.00 0.00 96.00 -96.00 32.00 -290.00 33.00 -96.00 -33.00 -32.00 -32.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -65.00 0.00 -128.00 32.00 -97.00 32.00 0.00 129.00 -64.00 32.00 -32.00 32.00 -97.00 64.00 -32.00 97.00 32.00 64.00 0.00 0.00 -160.00 97.00 -97.00 64.00 -64.00 32.00 0.00 32.00 -32.00 97.00 -33.00 64.00 -32.00 0.00 -64.00 96.00 -32.00 32.00 -32.00 33.00 -97.00 -33.00 0.00 -64.00 -32.00 64.00 -161.00 -32.00 -64.00 0.00 -64.00 -32.00 -161.00 32.00 -32.00 -96.00 0.00 -64.00 -32.00 -97.00 32.00 -32.00 -64.00 -64.00 -33.00 -32.00 0.00 -33.00 33.00 -32.00 64.00 -32.00 64.00 -64.00 0.00 -65.00 -32.00 -32.00 32.00 -128.00 32.00 -97.00 97.00 -96.00 0.00 -32.00 0.00 -65.00 128.00 -64.00 0.00 -96.00 0.00 -97.00 0.00 -32.00 33.00 0.00 128.00 -129.00 32.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -97.00 0.00 -64.00 0.00 0.00 65.00 -96.00 0.00 -65.00 -33.00 -64.00 33.00 -64.00 64.00 -97.00 0.00 -96.00 0.00 -32.00 64.00 -161.00 0.00 -97.00 -32.00 -32.00 -32.00 -32.00 0.00 -161.00 96.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -64.00 64.00 64.00 32.00 -64.00 32.00 64.00 65.00 -32.00 32.00 0.00 64.00 32.00 65.00 32.00 0.00 -96.00 0.00 -97.00 0.00 -64.00 0.00 -64.00 96.00 32.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 65.00 32.00 32.00 -32.00 64.00 0.00 32.00 -64.00 32.00 -32.00 32.00 -129.00 -64.00 0.00 129.00 32.00 32.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 -65.00 33.00 -64.00 0.00 -64.00 -65.00 0.00 -32.00 -33.00 32.00 -32.00 65.00 -32.00 32.00 -161.00 0.00 33.00 32.00 -65.00 64.00 32.00 97.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 -64.00 -64.00 -33.00 0.00 -64.00 -33.00 0.00 0.00 64.00 -32.00 0.00 0.00 33.00 -32.00 0.00 -32.00 32.00 -32.00 96.00 -64.00 32.00 -33.00 65.00 -64.00 64.00 -32.00 0.00 -64.00 0.00 -65.00 -129.00 -64.00 32.00 -129.00 0.00 -64.00 -64.00 -129.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -161.00 97.00 0.00 -97.00 -96.00 0.00 -32.00 -64.00 -65.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -33.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -32.00 -64.00 -32.00 -33.00 -32.00 -32.00 -33.00 0.00 -96.00 32.00 -96.00 -64.00 -33.00 -32.00 -64.00 0.00 -96.00 32.00 32.00 -96.00 -32.00 -65.00 64.00 -96.00 64.00 -97.00 -64.00 33.00 -64.00 32.00 -32.00 0.00 -65.00 64.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 32.00 32.00 -96.00 0.00 -64.00 -32.00 -33.00 -97.00 0.00 -64.00 65.00 -64.00 0.00 -32.00 0.00 -65.00 -32.00 0.00z\"\n          },\n          al: {\n            name: \"AL\",\n            path: \"M175061.00 72955.00l161.00 -160.00 97.00 -33.00 128.00 -128.00 0.00 -64.00 0.00 -33.00 64.00 -128.00 97.00 -97.00 96.00 -96.00 33.00 -32.00 64.00 0.00 64.00 0.00 64.00 -33.00 33.00 0.00 64.00 0.00 32.00 -64.00 64.00 0.00 65.00 0.00 32.00 0.00 64.00 -32.00 32.00 -96.00 65.00 -65.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -64.00 129.00 -129.00 32.00 -64.00 64.00 -33.00 32.00 33.00 32.00 -97.00 0.00 -32.00 65.00 -32.00 64.00 -65.00 32.00 -64.00 32.00 -32.00 33.00 -193.00 -33.00 -32.00 65.00 -64.00 0.00 -65.00 -32.00 -32.00 96.00 -64.00 32.00 0.00 97.00 -97.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 65.00 0.00 64.00 32.00 32.00 33.00 0.00 0.00 32.00 32.00 32.00 32.00 65.00 64.00 64.00 0.00 32.00 32.00 64.00 65.00 33.00 0.00 64.00 0.00 32.00 -32.00 32.00 -33.00 32.00 0.00 32.00 65.00 -32.00 0.00 65.00 128.00 -65.00 0.00 32.00 -32.00 33.00 32.00 32.00 65.00 32.00 128.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 65.00 -64.00 64.00 -32.00 96.00 32.00 97.00 -96.00 64.00 32.00 32.00 0.00 65.00 32.00 96.00 0.00 0.00 32.00 0.00 96.00 -32.00 33.00 129.00 128.00 96.00 0.00 64.00 0.00 97.00 65.00 64.00 64.00 322.00 129.00 32.00 64.00 64.00 0.00 0.00 32.00 0.00 32.00 64.00 64.00 97.00 129.00 64.00 64.00 32.00 32.00 65.00 65.00 0.00 32.00 0.00 32.00 32.00 64.00 32.00 0.00 0.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 96.00 -96.00 65.00 -32.00 193.00 128.00 -65.00 65.00 0.00 64.00 0.00 32.00 32.00 32.00 97.00 -64.00 64.00 -32.00 65.00 -97.00 32.00 0.00 128.00 65.00 33.00 32.00 96.00 128.00 -32.00 97.00 32.00 64.00 0.00 -64.00 32.00 64.00 129.00 0.00 96.00 161.00 129.00 64.00 96.00 97.00 32.00 0.00 33.00 -33.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 96.00 -65.00 0.00 -32.00 -32.00 -32.00 64.00 -128.00 65.00 -65.00 32.00 0.00 96.00 -32.00 -32.00 0.00 32.00 -32.00 97.00 0.00 32.00 32.00 32.00 64.00 193.00 0.00 193.00 -96.00 289.00 32.00 64.00 32.00 97.00 129.00 64.00 32.00 0.00 -32.00 32.00 32.00 32.00 0.00 0.00 32.00 33.00 32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 33.00 64.00 -33.00 33.00 0.00 64.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -129.00 321.00 -96.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 33.00 0.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 0.00 0.00 64.00 32.00 32.00 33.00 -64.00 32.00 32.00 64.00 0.00 64.00 -32.00 65.00 32.00 32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 64.00 32.00 32.00 0.00 32.00 -32.00 33.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 65.00 -33.00 32.00 33.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 97.00 -32.00 0.00 -33.00 -65.00 -32.00 0.00 -64.00 -32.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 96.00 0.00 65.00 0.00 64.00 -64.00 0.00 -65.00 32.00 0.00 32.00 -32.00 32.00 -96.00 32.00 0.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 0.00 0.00 -33.00 64.00 -32.00 64.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 -64.00 -32.00 -32.00 -64.00 32.00 -64.00 193.00 -65.00 96.00 -128.00 161.00 -32.00 129.00 32.00 64.00 -65.00 64.00 0.00 33.00 0.00 32.00 0.00 0.00 -32.00 64.00 -32.00 32.00 -32.00 64.00 0.00 33.00 0.00 32.00 -64.00 0.00 -33.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 129.00 -32.00 64.00 65.00 32.00 0.00 65.00 0.00 32.00 -65.00 64.00 32.00 64.00 -64.00 33.00 0.00 32.00 64.00 0.00 -32.00 0.00 65.00 -32.00 64.00 32.00 32.00 -32.00 32.00 32.00 0.00 32.00 32.00 64.00 33.00 65.00 32.00 64.00 -32.00 32.00 0.00 32.00 0.00 32.00 -33.00 65.00 33.00 32.00 -65.00 96.00 0.00 65.00 -64.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 -65.00 97.00 0.00 32.00 -64.00 32.00 -32.00 32.00 0.00 33.00 0.00 32.00 -64.00 64.00 0.00 32.00 -33.00 32.00 -32.00 0.00 65.00 65.00 -65.00 64.00 0.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 33.00 0.00 -33.00 65.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 -32.00 65.00 32.00 0.00 0.00 32.00 32.00 32.00 97.00 0.00 0.00 -32.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 64.00 225.00 64.00 258.00 65.00 32.00 0.00 64.00 0.00 129.00 64.00 64.00 -32.00 64.00 32.00 65.00 0.00 32.00 0.00 128.00 0.00 97.00 64.00 0.00 65.00 0.00 32.00 -64.00 64.00 -33.00 97.00 -32.00 96.00 -32.00 32.00 -96.00 97.00 -65.00 96.00 -32.00 32.00 -32.00 97.00 0.00 64.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -64.00 65.00 0.00 32.00 0.00 32.00 -65.00 64.00 0.00 32.00 -64.00 33.00 0.00 96.00 -32.00 32.00 -32.00 0.00 0.00 97.00 0.00 32.00 -32.00 64.00 -65.00 32.00 -32.00 32.00 0.00 33.00 -32.00 64.00 -64.00 32.00 0.00 32.00 -33.00 97.00 -96.00 96.00 -64.00 32.00 -65.00 97.00 -64.00 32.00 -32.00 32.00 32.00 0.00 -96.00 32.00 -33.00 32.00 0.00 32.00 -96.00 33.00 -32.00 32.00 -97.00 96.00 -32.00 65.00 -32.00 160.00 -64.00 129.00 -65.00 0.00 0.00 64.00 -32.00 0.00 -96.00 97.00 -32.00 64.00 -129.00 96.00 0.00 97.00 -64.00 0.00 -65.00 64.00 0.00 32.00 -64.00 33.00 -64.00 64.00 -32.00 0.00 -65.00 96.00 -64.00 65.00 -32.00 64.00 -64.00 96.00 0.00 65.00 0.00 96.00 -65.00 0.00 -64.00 97.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -129.00 32.00 -128.00 161.00 -33.00 0.00 -96.00 97.00 -32.00 64.00 32.00 -32.00 -193.00 225.00 -96.00 161.00 -65.00 96.00 -64.00 161.00 -193.00 161.00 -96.00 193.00 -65.00 96.00 -128.00 193.00 -129.00 225.00 -64.00 64.00 0.00 65.00 -64.00 64.00 -65.00 -32.00 -64.00 64.00 -129.00 161.00 -32.00 64.00 -64.00 64.00 0.00 33.00 -64.00 -33.00 -65.00 33.00 -64.00 64.00 -64.00 129.00 -129.00 64.00 -129.00 161.00 -160.00 128.00 -97.00 129.00 -32.00 64.00 0.00 64.00 0.00 97.00 32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -129.00 193.00 -193.00 418.00 -32.00 32.00 -32.00 33.00 -32.00 -33.00 -32.00 -64.00 -97.00 -193.00 -32.00 -96.00 -32.00 0.00 -97.00 -65.00 -32.00 -32.00 -96.00 65.00 0.00 32.00 -32.00 0.00 -97.00 32.00 -32.00 0.00 0.00 -32.00 32.00 0.00 -128.00 0.00 -32.00 32.00 -97.00 -64.00 32.00 -129.00 -32.00 -129.00 0.00 -160.00 -32.00 -65.00 -64.00 -96.00 -33.00 -64.00 -96.00 -65.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 64.00 -96.00 0.00 -33.00 32.00 -64.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 -64.00 -64.00 -32.00 -32.00 0.00 32.00 -33.00 0.00 -32.00 -97.00 -32.00 -32.00 0.00 -161.00 -32.00 -32.00 -32.00 -96.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -65.00 0.00 -64.00 -65.00 -161.00 -32.00 -32.00 -64.00 -64.00 -97.00 -65.00 -64.00 -32.00 -96.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -96.00 0.00 -33.00 0.00 -64.00 -32.00 -64.00 0.00 -32.00 -129.00 -65.00 -32.00 0.00 -32.00 0.00 -96.00 65.00 -33.00 0.00 -64.00 0.00 -128.00 -129.00 -258.00 -225.00 -96.00 -64.00 -225.00 -32.00 -129.00 0.00 -64.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 -65.00 -97.00 -96.00 -96.00 -65.00 -32.00 -96.00 -32.00 -129.00 -97.00 -32.00 -32.00 -32.00 -32.00 -64.00 0.00 -97.00 -32.00 -128.00 -65.00 -32.00 -32.00 -193.00 -32.00 -386.00 -64.00 -97.00 0.00 -64.00 -32.00 -354.00 -225.00 0.00 -33.00 -32.00 -64.00 -32.00 -64.00 -64.00 -32.00 -129.00 -65.00 -161.00 -32.00 -32.00 0.00 -128.00 65.00 -33.00 0.00 -32.00 -97.00 -64.00 -64.00 -32.00 -65.00 -32.00 0.00 -65.00 0.00 0.00 -64.00 -32.00 0.00 -193.00 -161.00 -32.00 -32.00 -32.00 0.00 -96.00 32.00 -193.00 -64.00 -161.00 -32.00 -64.00 -64.00 32.00 -97.00 -65.00 -64.00 -64.00 -64.00 -32.00 0.00 -64.00 0.00 -65.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -129.00 -32.00 -32.00 0.00 -32.00 32.00 -97.00 -32.00 -64.00 32.00 -96.00 -97.00 -97.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -64.00 -32.00 -33.00 -32.00 -96.00 -129.00 -129.00z\"\n          },\n          se: {\n            name: \"SE\",\n            path: \"M175061.00 80093.00l32.00 0.00 33.00 -64.00 32.00 -96.00 0.00 -65.00 0.00 -64.00 0.00 -64.00 32.00 -65.00 32.00 0.00 97.00 -32.00 32.00 64.00 64.00 0.00 32.00 0.00 64.00 33.00 65.00 0.00 32.00 -65.00 64.00 32.00 65.00 -64.00 32.00 32.00 32.00 32.00 96.00 -32.00 32.00 0.00 33.00 65.00 32.00 0.00 64.00 64.00 0.00 32.00 0.00 129.00 129.00 0.00 128.00 -65.00 161.00 -64.00 579.00 -225.00 -64.00 -547.00 0.00 -32.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 65.00 0.00 0.00 -33.00 32.00 -32.00 0.00 32.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 -32.00 -97.00 -161.00 -289.00 32.00 -32.00 -32.00 -65.00 96.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 0.00 32.00 0.00 0.00 -32.00 32.00 -33.00 32.00 0.00 96.00 -64.00 33.00 -32.00 96.00 0.00 129.00 -64.00 -33.00 -33.00 0.00 -32.00 -128.00 -611.00 -64.00 -32.00 0.00 -32.00 32.00 -161.00 0.00 -64.00 -97.00 -129.00 -128.00 -257.00 0.00 -96.00 0.00 -32.00 0.00 -65.00 -32.00 -64.00 -226.00 -129.00 -32.00 32.00 -96.00 -32.00 -64.00 0.00 -33.00 0.00 0.00 -64.00 -64.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 -32.00 -96.00 -193.00 -64.00 -32.00 0.00 -32.00 64.00 -97.00 0.00 -96.00 64.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 32.00 -64.00 -32.00 -32.00 -32.00 0.00 -96.00 -33.00 -97.00 -96.00 0.00 -32.00 -32.00 0.00 -64.00 -129.00 0.00 -96.00 0.00 -97.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -64.00 65.00 -64.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 -33.00 -33.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 -64.00 0.00 -97.00 0.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -64.00 64.00 64.00 161.00 32.00 193.00 64.00 96.00 -32.00 32.00 0.00 32.00 32.00 193.00 161.00 32.00 0.00 0.00 64.00 65.00 0.00 32.00 0.00 32.00 65.00 64.00 64.00 32.00 97.00 33.00 0.00 128.00 -65.00 32.00 0.00 161.00 32.00 129.00 65.00 64.00 32.00 32.00 64.00 32.00 64.00 0.00 33.00 354.00 225.00 64.00 32.00 97.00 0.00 386.00 64.00 193.00 32.00 32.00 32.00 128.00 65.00 97.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 129.00 97.00 96.00 32.00 65.00 32.00 96.00 96.00 65.00 97.00 32.00 64.00 0.00 32.00 32.00 33.00 64.00 0.00 129.00 0.00 225.00 32.00 96.00 64.00 258.00 225.00 128.00 129.00 64.00 0.00 33.00 0.00 96.00 -65.00 32.00 0.00 32.00 0.00 129.00 65.00 0.00 32.00 32.00 64.00 0.00 64.00 0.00 33.00 0.00 96.00 0.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 32.00 96.00 65.00 64.00 64.00 97.00 32.00 64.00 161.00 32.00 64.00 65.00 65.00 0.00 32.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 32.00 33.00 96.00 64.00 32.00 32.00 161.00 32.00 32.00 0.00 97.00 32.00 0.00 32.00 -32.00 33.00 32.00 0.00 64.00 32.00 65.00 64.00 32.00 0.00 64.00 32.00 32.00 0.00 64.00 0.00 33.00 -32.00 96.00 0.00 64.00 -64.00 32.00 0.00 33.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 96.00 65.00 33.00 64.00 64.00 96.00 32.00 65.00 0.00 160.00 32.00 129.00 -32.00 129.00 97.00 64.00 32.00 -32.00 128.00 0.00 -32.00 0.00 0.00 32.00 32.00 0.00 97.00 -32.00 32.00 0.00 0.00 -32.00 96.00 -65.00 32.00 32.00 97.00 65.00 32.00 0.00 32.00 96.00 97.00 193.00 32.00 64.00 0.00 33.00 0.00 32.00 0.00 64.00 -32.00 -32.00 -161.00 32.00 -289.00 64.00 -386.00 161.00 -193.00 97.00 -161.00 128.00 -129.00 97.00 -225.00 96.00 -386.00 257.00 -160.00 161.00 -32.00 32.00 -418.00 418.00 -129.00 161.00 -129.00 193.00 -160.00 225.00 0.00 64.00 -129.00 161.00 -354.00 515.00 -128.00 257.00 32.00 32.00 -257.00 289.00 -258.00 322.00 -160.00 289.00 -129.00 386.00 -32.00 32.00 0.00 65.00 -64.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 64.00 -32.00 0.00 -97.00 96.00 -96.00 97.00 -129.00 96.00 -64.00 32.00 -32.00 0.00 -129.00 0.00 -64.00 0.00 -64.00 65.00 0.00 64.00 -161.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -65.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 32.00 64.00 -64.00 64.00 0.00 32.00 0.00 32.00 -64.00 -32.00 -65.00 0.00 33.00 -96.00 -33.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -97.00 0.00 -64.00 -65.00 -32.00 33.00 -32.00 -33.00 -65.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -33.00 -96.00 33.00 0.00 -33.00 -65.00 -32.00 32.00 0.00 65.00 0.00 -65.00 -32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 0.00 32.00 -32.00 0.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 0.00 -33.00 33.00 0.00 -65.00 -64.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 64.00 0.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 -64.00 -97.00 0.00 -64.00 64.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 32.00 -97.00 -97.00 -32.00 32.00 -64.00 -32.00 -65.00 -64.00 -64.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 -64.00 0.00 -33.00 32.00 0.00 32.00 -96.00 0.00 -64.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -33.00 -64.00 -32.00 0.00 65.00 -32.00 0.00 -33.00 -33.00 -32.00 -64.00 -128.00 -64.00 -32.00 -64.00 -33.00 -33.00 33.00 -64.00 0.00 -32.00 -97.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 33.00 0.00 -33.00 -65.00 -32.00 0.00 -96.00 -64.00 -97.00 0.00 -64.00 32.00 -64.00 32.00 -32.00 -32.00 -97.00 -32.00 0.00 32.00 -64.00 -32.00 -64.00 32.00 -33.00z\"\n          },\n          df: {\n            name: \"DF\",\n            path: \"M127474.00 104691.00l0.00 -33.00 65.00 -96.00 128.00 -32.00 33.00 -64.00 96.00 -129.00 32.00 0.00 32.00 -64.00 -32.00 -129.00 -32.00 -64.00 -64.00 32.00 -65.00 -32.00 0.00 -97.00 33.00 -128.00 32.00 -97.00 64.00 -96.00 64.00 0.00 0.00 -515.00 0.00 -64.00 708.00 0.00 96.00 0.00 1222.00 0.00 547.00 0.00 450.00 0.00 321.00 0.00 386.00 0.00 0.00 225.00 64.00 0.00 65.00 96.00 32.00 0.00 0.00 33.00 32.00 32.00 129.00 0.00 96.00 32.00 32.00 0.00 32.00 32.00 -32.00 32.00 -64.00 161.00 32.00 64.00 0.00 65.00 0.00 64.00 -32.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 65.00 -32.00 64.00 0.00 64.00 32.00 32.00 0.00 33.00 -32.00 0.00 0.00 64.00 0.00 -32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -32.00 97.00 -32.00 32.00 0.00 32.00 -33.00 0.00 0.00 64.00 -32.00 0.00 -32.00 33.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 0.00 0.00 33.00 -32.00 64.00 -32.00 0.00 32.00 0.00 0.00 64.00 32.00 32.00 -32.00 32.00 64.00 0.00 -32.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 -64.00 0.00 32.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 33.00 32.00 0.00 0.00 32.00 65.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 -32.00 32.00 64.00 32.00 0.00 0.00 32.00 65.00 0.00 -33.00 32.00 33.00 0.00 0.00 33.00 -1480.00 0.00 -289.00 0.00 -643.00 32.00 -579.00 0.00 -386.00 0.00 -64.00 0.00 -257.00 0.00 -900.00 0.00 0.00 -32.00 32.00 -97.00 0.00 -96.00 32.00 -65.00 32.00 -96.00 -32.00 -32.00 64.00 -64.00 0.00 -65.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -65.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 -33.00 -161.00 0.00 -64.00z\"\n          },\n          pe: {\n            name: \"PE\",\n            path: \"M160271.00 69901.00l96.00 0.00 129.00 -65.00 32.00 -32.00 96.00 -128.00 161.00 0.00 65.00 -33.00 32.00 -32.00 64.00 0.00 64.00 -64.00 -32.00 -96.00 0.00 -65.00 32.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 65.00 -129.00 0.00 -64.00 64.00 0.00 32.00 32.00 32.00 0.00 64.00 -32.00 33.00 -65.00 32.00 0.00 32.00 -32.00 32.00 -96.00 0.00 -97.00 129.00 33.00 32.00 -161.00 32.00 -97.00 161.00 -32.00 32.00 -96.00 32.00 0.00 64.00 -32.00 65.00 64.00 0.00 32.00 32.00 32.00 96.00 64.00 65.00 65.00 64.00 -65.00 32.00 -64.00 0.00 -64.00 0.00 -64.00 32.00 -33.00 32.00 0.00 0.00 -96.00 -32.00 0.00 32.00 -64.00 97.00 0.00 32.00 32.00 32.00 64.00 0.00 32.00 97.00 0.00 96.00 -96.00 -32.00 -129.00 32.00 -32.00 0.00 -32.00 129.00 -32.00 0.00 -65.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -129.00 64.00 -32.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 32.00 -32.00 96.00 0.00 0.00 -33.00 33.00 -64.00 32.00 -32.00 32.00 -64.00 64.00 0.00 32.00 -32.00 0.00 -65.00 33.00 -32.00 64.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 161.00 64.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 -32.00 -32.00 -32.00 -64.00 32.00 -129.00 64.00 -161.00 32.00 -96.00 161.00 -289.00 0.00 -65.00 0.00 -32.00 32.00 -386.00 0.00 -64.00 -32.00 -96.00 0.00 -33.00 -64.00 -64.00 -32.00 -32.00 -32.00 0.00 -258.00 -97.00 -128.00 -32.00 -97.00 -96.00 -32.00 -193.00 64.00 -193.00 97.00 -193.00 0.00 -32.00 0.00 -97.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -161.00 -193.00 -32.00 -32.00 -97.00 -258.00 0.00 -64.00 32.00 -64.00 161.00 -32.00 65.00 -33.00 32.00 -64.00 482.00 -193.00 225.00 -32.00 386.00 0.00 225.00 0.00 257.00 -64.00 129.00 64.00 64.00 0.00 32.00 32.00 129.00 193.00 450.00 -96.00 354.00 -65.00 257.00 0.00 64.00 -64.00 129.00 32.00 96.00 -32.00 225.00 -257.00 33.00 0.00 64.00 32.00 161.00 -64.00 32.00 -32.00 96.00 32.00 65.00 0.00 64.00 0.00 64.00 0.00 161.00 -32.00 225.00 -33.00 97.00 0.00 96.00 -32.00 32.00 0.00 64.00 65.00 97.00 64.00 96.00 0.00 32.00 32.00 33.00 0.00 64.00 97.00 64.00 64.00 97.00 64.00 128.00 97.00 32.00 0.00 65.00 64.00 32.00 64.00 64.00 64.00 129.00 33.00 32.00 0.00 129.00 64.00 64.00 32.00 32.00 0.00 129.00 97.00 64.00 64.00 129.00 128.00 64.00 33.00 0.00 32.00 32.00 128.00 64.00 97.00 33.00 32.00 32.00 0.00 32.00 32.00 -32.00 0.00 -65.00 64.00 -32.00 33.00 0.00 96.00 -32.00 32.00 0.00 65.00 129.00 0.00 32.00 -33.00 32.00 33.00 0.00 32.00 96.00 32.00 0.00 64.00 0.00 32.00 -32.00 32.00 65.00 0.00 32.00 -32.00 64.00 0.00 64.00 -32.00 97.00 32.00 64.00 97.00 129.00 0.00 64.00 32.00 32.00 96.00 97.00 65.00 0.00 64.00 32.00 64.00 32.00 129.00 0.00 64.00 32.00 65.00 -64.00 64.00 32.00 32.00 129.00 -96.00 64.00 -97.00 129.00 32.00 32.00 -32.00 32.00 0.00 32.00 97.00 0.00 32.00 96.00 32.00 33.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -64.00 32.00 -64.00 -32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 0.00 0.00 -65.00 64.00 0.00 32.00 33.00 65.00 -33.00 0.00 -96.00 64.00 -64.00 64.00 32.00 33.00 0.00 64.00 0.00 64.00 0.00 32.00 -97.00 0.00 -64.00 -64.00 -32.00 32.00 -64.00 32.00 0.00 0.00 32.00 65.00 0.00 64.00 0.00 32.00 -32.00 0.00 -33.00 32.00 33.00 64.00 -33.00 33.00 0.00 32.00 0.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 32.00 0.00 0.00 -33.00 65.00 0.00 32.00 65.00 64.00 0.00 65.00 128.00 32.00 0.00 64.00 65.00 0.00 32.00 32.00 0.00 0.00 32.00 97.00 32.00 0.00 97.00 32.00 0.00 32.00 64.00 0.00 64.00 64.00 32.00 0.00 65.00 64.00 0.00 33.00 -65.00 0.00 65.00 32.00 -32.00 32.00 32.00 96.00 -32.00 65.00 32.00 64.00 -32.00 97.00 0.00 0.00 -65.00 32.00 -32.00 96.00 0.00 64.00 -64.00 97.00 0.00 32.00 64.00 64.00 0.00 32.00 0.00 33.00 -64.00 -33.00 -32.00 129.00 -33.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 64.00 96.00 32.00 -32.00 32.00 32.00 32.00 -32.00 33.00 32.00 0.00 65.00 0.00 32.00 32.00 0.00 -32.00 64.00 32.00 32.00 32.00 32.00 -64.00 97.00 96.00 0.00 -32.00 32.00 32.00 32.00 -32.00 64.00 32.00 129.00 64.00 64.00 32.00 33.00 65.00 -33.00 32.00 0.00 96.00 0.00 0.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 64.00 -32.00 97.00 -65.00 64.00 -64.00 64.00 32.00 32.00 0.00 33.00 65.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 193.00 32.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -65.00 0.00 -64.00 32.00 -32.00 129.00 -96.00 96.00 32.00 65.00 32.00 0.00 64.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 32.00 32.00 -32.00 33.00 -32.00 64.00 -32.00 0.00 -65.00 96.00 -64.00 0.00 -96.00 65.00 0.00 64.00 0.00 32.00 0.00 -32.00 -33.00 -32.00 -32.00 32.00 -32.00 64.00 -32.00 97.00 -129.00 32.00 -32.00 64.00 -32.00 161.00 0.00 64.00 -96.00 32.00 0.00 33.00 0.00 32.00 32.00 0.00 64.00 32.00 0.00 0.00 64.00 64.00 65.00 0.00 -32.00 64.00 -33.00 0.00 -64.00 -32.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -64.00 33.00 0.00 32.00 -96.00 32.00 0.00 64.00 -33.00 0.00 -64.00 0.00 -32.00 129.00 -32.00 0.00 -65.00 96.00 -64.00 32.00 64.00 33.00 -32.00 64.00 32.00 64.00 -32.00 32.00 -32.00 0.00 -64.00 97.00 -32.00 96.00 -65.00 97.00 -32.00 96.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -97.00 32.00 -32.00 0.00 -64.00 -32.00 -64.00 32.00 -32.00 97.00 -33.00 128.00 33.00 32.00 -33.00 33.00 0.00 64.00 33.00 32.00 -33.00 96.00 0.00 193.00 -96.00 -32.00 -64.00 32.00 -65.00 65.00 -96.00 96.00 0.00 32.00 0.00 97.00 0.00 32.00 -65.00 96.00 0.00 33.00 0.00 96.00 0.00 96.00 65.00 65.00 32.00 96.00 64.00 32.00 65.00 32.00 64.00 33.00 0.00 64.00 0.00 32.00 64.00 32.00 -32.00 32.00 32.00 65.00 32.00 96.00 0.00 65.00 33.00 0.00 32.00 32.00 64.00 64.00 0.00 0.00 -32.00 32.00 0.00 97.00 64.00 64.00 64.00 -64.00 97.00 64.00 0.00 0.00 32.00 -32.00 32.00 32.00 64.00 32.00 33.00 64.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 -64.00 65.00 -32.00 -33.00 -96.00 33.00 0.00 32.00 -129.00 32.00 -64.00 64.00 -97.00 0.00 -64.00 64.00 -97.00 0.00 -64.00 97.00 -96.00 64.00 -65.00 65.00 -32.00 96.00 -32.00 96.00 -64.00 33.00 0.00 32.00 0.00 32.00 0.00 64.00 64.00 65.00 32.00 32.00 0.00 32.00 32.00 64.00 32.00 32.00 65.00 65.00 0.00 96.00 64.00 64.00 -96.00 129.00 0.00 32.00 32.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -32.00 -33.00 -32.00 0.00 -32.00 33.00 -97.00 64.00 -32.00 -32.00 -32.00 32.00 -64.00 32.00 32.00 32.00 64.00 0.00 0.00 97.00 -96.00 32.00 -32.00 32.00 32.00 32.00 0.00 64.00 -193.00 129.00 -97.00 0.00 0.00 32.00 -64.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 33.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -96.00 32.00 -33.00 0.00 0.00 32.00 -32.00 97.00 65.00 0.00 0.00 32.00 96.00 -64.00 64.00 0.00 65.00 0.00 64.00 32.00 64.00 -32.00 97.00 0.00 32.00 32.00 32.00 -32.00 0.00 32.00 64.00 0.00 0.00 -65.00 65.00 -32.00 64.00 32.00 0.00 97.00 32.00 32.00 32.00 0.00 0.00 32.00 64.00 0.00 33.00 32.00 32.00 33.00 0.00 64.00 0.00 64.00 -32.00 97.00 0.00 64.00 64.00 96.00 -32.00 65.00 32.00 96.00 0.00 32.00 -32.00 0.00 -32.00 65.00 32.00 64.00 -65.00 32.00 0.00 32.00 33.00 32.00 64.00 33.00 96.00 -33.00 0.00 65.00 0.00 64.00 0.00 64.00 129.00 129.00 32.00 96.00 193.00 32.00 32.00 0.00 97.00 129.00 128.00 64.00 65.00 -32.00 96.00 0.00 32.00 0.00 32.00 -32.00 0.00 -64.00 97.00 -32.00 96.00 -97.00 33.00 -64.00 96.00 0.00 96.00 -64.00 225.00 -97.00 33.00 -64.00 64.00 0.00 64.00 0.00 65.00 32.00 32.00 -32.00 32.00 -64.00 32.00 -33.00 97.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 96.00 0.00 -32.00 -96.00 32.00 -33.00 97.00 -32.00 128.00 -32.00 65.00 -32.00 0.00 -64.00 -33.00 -33.00 -64.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 97.00 -64.00 0.00 -193.00 0.00 -129.00 32.00 -32.00 0.00 -64.00 32.00 -97.00 129.00 32.00 32.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 -97.00 32.00 -32.00 32.00 -32.00 64.00 -32.00 65.00 32.00 193.00 97.00 64.00 -33.00 32.00 33.00 64.00 -33.00 97.00 0.00 0.00 -32.00 32.00 -64.00 32.00 0.00 0.00 -64.00 -32.00 -33.00 32.00 -32.00 0.00 -160.00 0.00 -65.00 32.00 -32.00 65.00 0.00 64.00 -32.00 96.00 0.00 65.00 -32.00 32.00 32.00 257.00 0.00 32.00 0.00 32.00 32.00 97.00 64.00 32.00 0.00 64.00 0.00 32.00 -64.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 -33.00 161.00 -128.00 32.00 32.00 32.00 96.00 97.00 -32.00 161.00 0.00 96.00 0.00 32.00 0.00 64.00 -32.00 161.00 32.00 97.00 97.00 32.00 -32.00 32.00 0.00 64.00 64.00 97.00 0.00 32.00 32.00 32.00 -64.00 32.00 0.00 65.00 -65.00 64.00 0.00 64.00 0.00 32.00 -32.00 161.00 32.00 96.00 -64.00 0.00 -64.00 0.00 -32.00 33.00 -32.00 64.00 0.00 96.00 -33.00 65.00 33.00 32.00 0.00 32.00 0.00 96.00 -65.00 65.00 0.00 96.00 -64.00 32.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 96.00 -33.00 32.00 0.00 0.00 -32.00 65.00 -32.00 32.00 32.00 32.00 0.00 32.00 0.00 97.00 0.00 32.00 0.00 64.00 -64.00 32.00 -32.00 64.00 -64.00 0.00 -33.00 33.00 -32.00 64.00 0.00 32.00 0.00 64.00 0.00 65.00 32.00 128.00 -32.00 32.00 -32.00 65.00 0.00 -97.00 -129.00 32.00 -64.00 33.00 0.00 0.00 -32.00 32.00 -64.00 -65.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 33.00 -96.00 0.00 -97.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -64.00 0.00 -65.00 32.00 -160.00 97.00 -33.00 128.00 33.00 64.00 0.00 33.00 64.00 64.00 32.00 32.00 0.00 32.00 -64.00 129.00 -65.00 32.00 -32.00 32.00 0.00 64.00 0.00 0.00 -32.00 0.00 -64.00 33.00 0.00 64.00 0.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 96.00 -97.00 193.00 -64.00 64.00 32.00 129.00 32.00 64.00 32.00 32.00 0.00 65.00 -32.00 64.00 32.00 32.00 0.00 97.00 32.00 32.00 0.00 96.00 33.00 64.00 -33.00 33.00 -32.00 32.00 0.00 32.00 32.00 96.00 65.00 65.00 64.00 128.00 96.00 97.00 65.00 0.00 64.00 -32.00 64.00 32.00 65.00 0.00 32.00 64.00 64.00 64.00 97.00 33.00 0.00 96.00 -65.00 32.00 32.00 32.00 33.00 32.00 0.00 33.00 0.00 0.00 32.00 32.00 0.00 32.00 -65.00 96.00 65.00 65.00 -32.00 64.00 32.00 32.00 0.00 32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 64.00 32.00 65.00 32.00 32.00 0.00 64.00 65.00 64.00 0.00 65.00 -65.00 96.00 -64.00 193.00 -32.00 0.00 -32.00 32.00 32.00 32.00 64.00 0.00 -32.00 65.00 32.00 64.00 32.00 96.00 -64.00 225.00 0.00 97.00 -64.00 0.00 0.00 32.00 32.00 64.00 0.00 33.00 0.00 32.00 32.00 0.00 0.00 160.00 64.00 65.00 0.00 96.00 0.00 32.00 -32.00 225.00 -32.00 129.00 0.00 97.00 -129.00 128.00 0.00 32.00 0.00 32.00 -96.00 225.00 -129.00 354.00 -32.00 97.00 0.00 96.00 -32.00 97.00 32.00 0.00 -96.00 160.00 -32.00 97.00 -32.00 64.00 0.00 32.00 64.00 32.00 -64.00 161.00 0.00 32.00 32.00 0.00 32.00 33.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 65.00 64.00 -129.00 289.00 -32.00 129.00 -32.00 64.00 -33.00 65.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 65.00 32.00 64.00 -32.00 32.00 0.00 64.00 0.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 32.00 -33.00 64.00 -32.00 32.00 0.00 64.00 0.00 33.00 -96.00 160.00 -32.00 32.00 32.00 97.00 -64.00 32.00 -33.00 64.00 33.00 65.00 0.00 32.00 -33.00 32.00 -32.00 64.00 32.00 65.00 -96.00 128.00 0.00 65.00 32.00 0.00 -32.00 64.00 -32.00 0.00 -97.00 128.00 0.00 97.00 33.00 96.00 0.00 33.00 -65.00 32.00 -64.00 193.00 0.00 -65.00 -97.00 -64.00 -128.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 -32.00 -64.00 32.00 -129.00 -64.00 -64.00 0.00 -32.00 0.00 -258.00 -65.00 -225.00 -64.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 0.00 32.00 -97.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -65.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -65.00 0.00 0.00 33.00 -32.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 65.00 0.00 -65.00 -32.00 32.00 -32.00 33.00 -64.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 -97.00 0.00 -64.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 64.00 -96.00 0.00 -32.00 65.00 -65.00 -33.00 -32.00 33.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 -32.00 -64.00 -33.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 -65.00 0.00 32.00 -32.00 -64.00 -33.00 0.00 -64.00 64.00 -64.00 -32.00 -32.00 65.00 -65.00 0.00 -32.00 0.00 -64.00 -65.00 -129.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 33.00 -32.00 64.00 -33.00 0.00 -64.00 0.00 -32.00 32.00 -64.00 32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -64.00 65.00 -129.00 -32.00 -161.00 32.00 -96.00 128.00 -193.00 65.00 -32.00 64.00 32.00 64.00 64.00 32.00 32.00 65.00 -32.00 32.00 0.00 32.00 -64.00 64.00 -64.00 32.00 0.00 33.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 96.00 -32.00 32.00 -32.00 0.00 0.00 65.00 -64.00 64.00 -65.00 0.00 -96.00 0.00 0.00 64.00 32.00 32.00 0.00 33.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 64.00 65.00 32.00 0.00 33.00 -97.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -33.00 -65.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 32.00 -33.00 64.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 32.00 32.00 33.00 -32.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 32.00 -64.00 0.00 -32.00 -32.00 -33.00 64.00 -32.00 -32.00 0.00 -64.00 -64.00 0.00 0.00 32.00 -64.00 32.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -33.00 32.00 -321.00 96.00 0.00 129.00 32.00 0.00 0.00 32.00 0.00 32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -64.00 33.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 -97.00 -129.00 -64.00 -32.00 -289.00 -32.00 -193.00 96.00 -193.00 0.00 -32.00 -64.00 -32.00 -32.00 -97.00 0.00 -32.00 32.00 32.00 0.00 -96.00 32.00 -32.00 0.00 -65.00 65.00 -64.00 128.00 32.00 32.00 0.00 32.00 -96.00 65.00 0.00 64.00 32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 -96.00 -97.00 -129.00 -64.00 -96.00 -161.00 -129.00 0.00 -32.00 -64.00 0.00 64.00 -32.00 -64.00 32.00 -97.00 -96.00 -128.00 -33.00 -32.00 -128.00 -65.00 -32.00 0.00 -65.00 97.00 -64.00 32.00 -97.00 64.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 65.00 -65.00 -193.00 -128.00 -65.00 32.00 -96.00 96.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 -65.00 -65.00 -32.00 -32.00 -64.00 -64.00 -97.00 -129.00 -64.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 -64.00 -322.00 -129.00 -64.00 -64.00 -97.00 -65.00 -64.00 0.00 -96.00 0.00 -129.00 -128.00 32.00 -33.00 0.00 -96.00 0.00 -32.00 -96.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 -32.00 -97.00 96.00 -96.00 -32.00 -64.00 32.00 -65.00 64.00 -32.00 65.00 32.00 32.00 -32.00 32.00 -128.00 0.00 -65.00 -32.00 -32.00 -32.00 32.00 -33.00 0.00 -32.00 -128.00 65.00 0.00 -65.00 -65.00 32.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 -65.00 -33.00 -32.00 -64.00 0.00 -32.00 -64.00 -64.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -64.00 -64.00 -65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -97.00 97.00 -32.00 0.00 -96.00 64.00 32.00 32.00 0.00 65.00 -65.00 64.00 33.00 32.00 -33.00 193.00 -32.00 32.00 -32.00 64.00 -64.00 65.00 -65.00 32.00 0.00 32.00 -32.00 97.00 -32.00 -33.00 -64.00 33.00 -32.00 64.00 -129.00 129.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -65.00 65.00 -32.00 96.00 -64.00 32.00 -32.00 0.00 -65.00 0.00 -64.00 0.00 -32.00 64.00 -64.00 0.00 -33.00 0.00 -64.00 33.00 -64.00 0.00 -64.00 0.00 -33.00 32.00 -96.00 96.00 -97.00 97.00 -64.00 128.00 0.00 33.00 0.00 64.00 -128.00 128.00 -97.00 33.00 -161.00 160.00 -64.00 -193.00 -161.00 -353.00 32.00 -65.00 -64.00 -160.00 -64.00 -97.00 -32.00 -32.00 -32.00 -32.00 -33.00 -129.00 97.00 -96.00 -64.00 0.00 -33.00 -64.00 33.00 -65.00 96.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 -97.00 -96.00 -96.00 0.00 -65.00 -97.00 0.00 -64.00 32.00 -32.00 0.00 -129.00 129.00 -97.00 97.00 -96.00 -33.00 -64.00 -32.00 -65.00 -32.00 -128.00 -96.00 -97.00 -97.00 -64.00 -96.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 129.00 -97.00 32.00 -64.00 32.00 -129.00 -64.00 -64.00 -129.00 -96.00 -193.00 -33.00 -96.00 33.00 -161.00 257.00 -32.00 64.00 0.00 290.00 -64.00 128.00 -33.00 0.00 -64.00 32.00 -128.00 -64.00 -65.00 -129.00 -32.00 -64.00 0.00 -96.00 -32.00 -161.00 -32.00 -97.00 -65.00 -64.00 -96.00 -32.00 -129.00 -129.00 -128.00 -96.00 -32.00 -32.00 -33.00 0.00 -225.00 -32.00 -64.00 0.00 -64.00 32.00 -193.00 32.00 -97.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 -65.00 -129.00 -128.00 -64.00 -65.00 -64.00 -32.00 0.00 -128.00 -33.00 -129.00 -32.00 -161.00 -32.00 -128.00 -32.00 0.00 -32.00 -65.00 -65.00 -32.00 33.00 -32.00 32.00 -96.00 32.00 -97.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -33.00 -65.00 0.00 -32.00 0.00 -161.00 33.00 -32.00 -33.00 -64.00 -32.00 -32.00 -64.00 -32.00 -32.00 -97.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 -33.00 -65.00 0.00 -128.00 0.00 -65.00 0.00 -64.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 0.00 -128.00 32.00 -32.00 0.00 -33.00 96.00 -64.00 0.00 -64.00 0.00 -32.00 33.00 0.00 64.00 -97.00 64.00 -193.00 64.00 -32.00 33.00 -128.00 32.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -193.00 64.00 -96.00 0.00 -97.00 33.00 -64.00 0.00 -128.00 0.00 -33.00 96.00 65.00 129.00 32.00 161.00 0.00 32.00 0.00 64.00 32.00 96.00 -32.00 33.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 -225.00 -32.00 -193.00 128.00 -64.00 0.00 -64.00 -32.00 -258.00 64.00 -96.00 33.00 -32.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 96.00 193.00 32.00 129.00 -96.00 193.00 -64.00 32.00 -33.00 96.00 -32.00 33.00 -193.00 225.00 -96.00 32.00 -64.00 32.00 -33.00 0.00 -160.00 0.00 -129.00 0.00 -64.00 64.00 -65.00 65.00 -192.00 96.00 -97.00 0.00 -64.00 0.00 -32.00 -64.00 -97.00 -64.00 -96.00 -97.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 -97.00 97.00 -64.00 192.00 -32.00 161.00 32.00 129.00 -32.00 96.00 -64.00 354.00 -65.00 64.00 -64.00 193.00 0.00 32.00 0.00 97.00 -129.00 128.00 -32.00 0.00 -96.00 -32.00 -97.00 -96.00 -64.00 0.00 -64.00 64.00 -97.00 193.00 -64.00 96.00 -32.00 -32.00 -97.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 -32.00 129.00 -32.00 0.00 -64.00 64.00 -32.00 33.00 -33.00 0.00 -64.00 0.00 -161.00 64.00 -128.00 -32.00 -129.00 -32.00 -161.00 -97.00 -32.00 -32.00 -128.00 0.00 -129.00 64.00 32.00 -64.00 32.00 -64.00 0.00 -97.00 65.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 64.00 -64.00 -32.00 -64.00 32.00 -33.00 -97.00 -128.00 33.00 -32.00 32.00 0.00 0.00 -32.00 96.00 32.00 64.00 -32.00 0.00 -33.00 0.00 -32.00 97.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 -65.00 -32.00 -64.00 64.00 -96.00 0.00 -33.00 32.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 -64.00 -32.00 -32.00 -64.00 -97.00 0.00 -32.00 0.00 -96.00 -64.00 -64.00 -33.00 -33.00 0.00 0.00 -64.00 -32.00 0.00 -64.00 -32.00 -64.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 -64.00 -64.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 -96.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -33.00 -65.00 -32.00 -64.00 0.00 -161.00 -64.00 0.00 0.00 -128.00 -97.00 -32.00 0.00 -65.00 -64.00 -64.00 0.00 -96.00 0.00 -33.00 -32.00 0.00 -64.00 -64.00 0.00 -64.00 -129.00 32.00 -64.00 0.00 0.00 -64.00 -97.00 -33.00 -64.00 33.00 -32.00 0.00 -97.00 64.00 -64.00 -32.00 32.00 -129.00 -32.00 -128.00 -32.00 0.00 -64.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -96.00 0.00 -33.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 -225.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 32.00 -96.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -97.00 0.00 -64.00 64.00 -65.00 33.00 -32.00 0.00 -96.00 -65.00 -97.00 0.00 -128.00 -96.00z\"\n          },\n          ma: {\n            name: \"MA\",\n            path: \"M125256.00 53503.00l932.00 -772.00 450.00 -322.00 33.00 -64.00 96.00 -64.00 -32.00 -65.00 32.00 -32.00 32.00 0.00 32.00 32.00 97.00 -64.00 900.00 -707.00 64.00 -65.00 547.00 -450.00 97.00 -64.00 160.00 -129.00 386.00 -321.00 611.00 -482.00 64.00 -97.00 65.00 -64.00 96.00 32.00 64.00 0.00 33.00 64.00 32.00 -32.00 64.00 32.00 64.00 0.00 65.00 0.00 96.00 32.00 129.00 -96.00 64.00 -96.00 64.00 -33.00 65.00 -32.00 32.00 -32.00 128.00 -161.00 65.00 -193.00 160.00 -160.00 65.00 -97.00 64.00 -96.00 0.00 -65.00 64.00 -64.00 0.00 -64.00 65.00 -65.00 -32.00 0.00 32.00 -64.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 128.00 -65.00 32.00 -64.00 33.00 0.00 32.00 0.00 0.00 -64.00 64.00 32.00 32.00 -65.00 32.00 0.00 65.00 -96.00 32.00 0.00 32.00 0.00 -32.00 -129.00 32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -33.00 64.00 -32.00 33.00 32.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 -33.00 -64.00 33.00 -32.00 0.00 -32.00 64.00 -65.00 0.00 -32.00 0.00 -64.00 32.00 0.00 0.00 -64.00 32.00 -33.00 65.00 0.00 -33.00 33.00 33.00 0.00 0.00 -33.00 64.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 64.00 0.00 0.00 -32.00 97.00 -65.00 32.00 -64.00 64.00 0.00 33.00 0.00 32.00 -64.00 32.00 0.00 32.00 -64.00 32.00 32.00 0.00 -65.00 32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 0.00 33.00 -32.00 0.00 -97.00 64.00 -32.00 64.00 -64.00 32.00 32.00 0.00 -32.00 0.00 -97.00 32.00 0.00 33.00 0.00 32.00 0.00 32.00 0.00 32.00 -96.00 64.00 -32.00 33.00 -65.00 -33.00 -64.00 65.00 -32.00 0.00 -32.00 0.00 -64.00 64.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 -64.00 32.00 -65.00 0.00 -64.00 -32.00 -32.00 64.00 -32.00 0.00 -65.00 -32.00 -128.00 97.00 -65.00 -32.00 -32.00 -33.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 0.00 -33.00 0.00 33.00 -32.00 -33.00 -33.00 33.00 -32.00 32.00 -64.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -64.00 64.00 -32.00 0.00 -33.00 65.00 0.00 32.00 -32.00 64.00 -32.00 -32.00 -32.00 64.00 0.00 -64.00 -97.00 0.00 -32.00 64.00 0.00 0.00 32.00 32.00 0.00 -32.00 -128.00 97.00 32.00 0.00 -64.00 -33.00 0.00 0.00 -32.00 33.00 0.00 -33.00 -33.00 65.00 0.00 -32.00 -64.00 -33.00 0.00 0.00 -64.00 33.00 0.00 0.00 -32.00 0.00 32.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -96.00 32.00 32.00 32.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 0.00 32.00 -32.00 33.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 64.00 -64.00 32.00 -32.00 32.00 32.00 0.00 32.00 64.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 0.00 33.00 65.00 32.00 0.00 0.00 -32.00 0.00 -65.00 64.00 32.00 32.00 -64.00 32.00 0.00 65.00 0.00 0.00 -64.00 -65.00 -32.00 65.00 -65.00 -65.00 -64.00 33.00 0.00 32.00 0.00 32.00 0.00 0.00 -128.00 32.00 -33.00 32.00 33.00 32.00 0.00 32.00 -65.00 -32.00 -32.00 32.00 -32.00 65.00 0.00 32.00 32.00 0.00 -32.00 0.00 -32.00 -64.00 -32.00 64.00 -33.00 0.00 -32.00 -97.00 -64.00 65.00 0.00 64.00 64.00 32.00 -32.00 -32.00 -96.00 64.00 0.00 33.00 0.00 32.00 -65.00 -32.00 -32.00 0.00 -64.00 -65.00 32.00 -32.00 -64.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 -65.00 32.00 0.00 0.00 97.00 32.00 0.00 32.00 -32.00 -32.00 -129.00 96.00 -32.00 33.00 32.00 0.00 -96.00 32.00 -32.00 -32.00 -65.00 0.00 -96.00 64.00 -32.00 -32.00 -32.00 64.00 -65.00 -64.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 32.00 32.00 -64.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 -33.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 32.00 0.00 -64.00 -65.00 -32.00 0.00 0.00 -32.00 64.00 -32.00 64.00 0.00 32.00 32.00 33.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 64.00 32.00 64.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 64.00 0.00 65.00 64.00 32.00 -32.00 32.00 0.00 -64.00 -32.00 32.00 0.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 -97.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -32.00 -64.00 0.00 -64.00 0.00 -65.00 0.00 -64.00 -32.00 0.00 -33.00 32.00 -32.00 -96.00 0.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 -32.00 -65.00 64.00 -96.00 64.00 -32.00 0.00 -32.00 65.00 32.00 0.00 -32.00 0.00 -33.00 64.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 0.00 65.00 128.00 32.00 -32.00 0.00 -129.00 64.00 -32.00 32.00 0.00 64.00 0.00 65.00 -32.00 161.00 -32.00 -33.00 -129.00 65.00 -32.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 -32.00 32.00 0.00 32.00 32.00 65.00 0.00 225.00 -64.00 0.00 -32.00 -65.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 -64.00 32.00 -65.00 -32.00 0.00 0.00 -32.00 0.00 -96.00 0.00 -97.00 64.00 -64.00 33.00 -64.00 32.00 -65.00 0.00 -32.00 -65.00 -32.00 -96.00 129.00 -32.00 0.00 -64.00 -33.00 0.00 -32.00 0.00 -64.00 128.00 -96.00 32.00 -33.00 0.00 -64.00 0.00 -96.00 32.00 -33.00 33.00 -160.00 -65.00 -65.00 0.00 -32.00 97.00 -32.00 32.00 64.00 64.00 33.00 64.00 -33.00 33.00 -96.00 64.00 0.00 64.00 -32.00 0.00 -32.00 65.00 -129.00 64.00 -64.00 96.00 -32.00 65.00 -65.00 -65.00 -32.00 0.00 -32.00 97.00 -97.00 32.00 -32.00 0.00 -96.00 -32.00 -64.00 0.00 -97.00 32.00 -64.00 32.00 -32.00 64.00 -97.00 0.00 -96.00 65.00 -161.00 64.00 -289.00 -32.00 -129.00 -64.00 0.00 0.00 -32.00 160.00 -225.00 -32.00 -65.00 -32.00 -32.00 -32.00 -64.00 -161.00 -32.00 -96.00 32.00 -32.00 0.00 -33.00 -32.00 -64.00 64.00 -32.00 -32.00 -32.00 -161.00 32.00 -128.00 32.00 -33.00 32.00 -32.00 65.00 0.00 128.00 0.00 97.00 -32.00 64.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 0.00 96.00 -32.00 64.00 -65.00 33.00 -64.00 0.00 -64.00 -33.00 -32.00 0.00 -33.00 0.00 -96.00 65.00 -97.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 96.00 -32.00 -64.00 -289.00 0.00 -65.00 -65.00 -64.00 -32.00 -32.00 -64.00 -65.00 193.00 -160.00 0.00 -33.00 -97.00 -64.00 129.00 -96.00 32.00 -129.00 32.00 -32.00 33.00 -96.00 32.00 -65.00 0.00 -32.00 -129.00 32.00 0.00 -32.00 0.00 -96.00 -96.00 0.00 -65.00 -161.00 129.00 -129.00 -64.00 -128.00 96.00 -97.00 97.00 -32.00 32.00 0.00 0.00 32.00 128.00 -32.00 0.00 -193.00 32.00 -32.00 0.00 64.00 33.00 -32.00 0.00 -64.00 32.00 -64.00 32.00 0.00 0.00 32.00 0.00 64.00 64.00 96.00 0.00 -32.00 -32.00 -64.00 0.00 -96.00 0.00 -65.00 32.00 -64.00 32.00 0.00 65.00 -129.00 0.00 32.00 0.00 -64.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 64.00 32.00 0.00 0.00 -128.00 0.00 -32.00 32.00 32.00 0.00 -65.00 129.00 0.00 0.00 65.00 -64.00 0.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 64.00 32.00 0.00 0.00 32.00 -64.00 33.00 0.00 -33.00 -65.00 0.00 -32.00 0.00 97.00 0.00 0.00 97.00 -32.00 0.00 -33.00 64.00 33.00 -32.00 64.00 -32.00 32.00 0.00 0.00 -32.00 0.00 32.00 0.00 96.00 0.00 33.00 -96.00 0.00 -65.00 32.00 32.00 32.00 -32.00 32.00 -32.00 32.00 64.00 -32.00 0.00 32.00 0.00 32.00 33.00 -32.00 -33.00 -32.00 33.00 -64.00 64.00 0.00 0.00 32.00 32.00 -32.00 64.00 0.00 -32.00 64.00 0.00 32.00 32.00 0.00 -32.00 64.00 0.00 97.00 -32.00 32.00 32.00 32.00 -32.00 129.00 32.00 32.00 32.00 -32.00 33.00 -161.00 0.00 -32.00 128.00 -257.00 32.00 32.00 -32.00 -32.00 64.00 -129.00 33.00 0.00 0.00 -32.00 64.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 96.00 -97.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 96.00 -33.00 -32.00 0.00 32.00 0.00 33.00 0.00 -33.00 0.00 33.00 33.00 32.00 160.00 -32.00 65.00 0.00 -32.00 0.00 32.00 -65.00 64.00 0.00 32.00 0.00 32.00 -128.00 33.00 0.00 32.00 -129.00 128.00 0.00 32.00 -32.00 33.00 32.00 0.00 32.00 0.00 -32.00 64.00 -32.00 0.00 0.00 32.00 64.00 -32.00 0.00 -97.00 65.00 -96.00 64.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 0.00 33.00 -64.00 0.00 0.00 32.00 64.00 -32.00 32.00 -33.00 32.00 -32.00 0.00 32.00 -64.00 97.00 64.00 -32.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 -65.00 65.00 -64.00 0.00 64.00 32.00 0.00 32.00 -64.00 0.00 -32.00 0.00 32.00 0.00 32.00 0.00 -32.00 64.00 32.00 32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 96.00 0.00 96.00 -65.00 0.00 32.00 -96.00 65.00 0.00 64.00 32.00 -32.00 64.00 -97.00 0.00 65.00 -160.00 128.00 0.00 32.00 128.00 0.00 -32.00 33.00 -32.00 32.00 32.00 32.00 0.00 -64.00 32.00 -33.00 65.00 -160.00 32.00 -161.00 0.00 -32.00 64.00 64.00 32.00 64.00 -32.00 97.00 -32.00 64.00 64.00 -161.00 -64.00 -192.00 64.00 -65.00 65.00 -32.00 32.00 32.00 0.00 32.00 32.00 -32.00 -32.00 65.00 -32.00 32.00 -33.00 96.00 0.00 32.00 65.00 65.00 -107.00 160.00 10.00 0.00 0.00 25.00 32.00 -25.00 0.00 -32.00 33.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 32.00 32.00 -32.00 64.00 32.00 0.00 32.00 64.00 -96.00 65.00 -65.00 -32.00 0.00 32.00 32.00 -32.00 65.00 32.00 64.00 -32.00 0.00 32.00 32.00 -32.00 -32.00 0.00 -32.00 -129.00 64.00 -129.00 32.00 -128.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 32.00 65.00 -129.00 0.00 -64.00 32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -64.00 -32.00 129.00 -33.00 96.00 0.00 32.00 33.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 65.00 -33.00 64.00 -32.00 32.00 0.00 64.00 -32.00 0.00 32.00 65.00 -64.00 64.00 -32.00 0.00 32.00 0.00 32.00 -32.00 64.00 0.00 33.00 96.00 64.00 97.00 0.00 64.00 -32.00 64.00 32.00 65.00 -97.00 0.00 -32.00 64.00 -32.00 96.00 32.00 33.00 0.00 -33.00 32.00 -64.00 0.00 -64.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 0.00 96.00 64.00 32.00 -128.00 65.00 -32.00 32.00 -33.00 0.00 0.00 64.00 -64.00 0.00 -32.00 32.00 -64.00 -64.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 32.00 32.00 -32.00 64.00 0.00 33.00 -32.00 64.00 -64.00 96.00 -32.00 32.00 -33.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -65.00 0.00 65.00 -32.00 32.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 32.00 32.00 32.00 0.00 -32.00 -32.00 0.00 -96.00 129.00 -97.00 32.00 97.00 0.00 -33.00 64.00 -96.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -193.00 0.00 -128.00 32.00 -97.00 0.00 -64.00 33.00 -64.00 32.00 32.00 0.00 -32.00 0.00 -33.00 -65.00 0.00 33.00 -32.00 32.00 -32.00 32.00 64.00 32.00 0.00 0.00 65.00 0.00 128.00 0.00 32.00 -32.00 33.00 0.00 -33.00 -64.00 97.00 -33.00 128.00 0.00 65.00 33.00 0.00 0.00 32.00 0.00 64.00 0.00 32.00 -65.00 65.00 0.00 96.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 -32.00 -32.00 32.00 96.00 32.00 0.00 0.00 -64.00 0.00 -32.00 0.00 32.00 33.00 32.00 -33.00 64.00 0.00 65.00 -64.00 32.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 0.00 0.00 -28.00 -225.00 28.00 0.00 -32.00 -32.00 160.00 -65.00 65.00 -32.00 64.00 32.00 -64.00 65.00 -32.00 32.00 -33.00 32.00 33.00 32.00 0.00 -64.00 -65.00 0.00 -32.00 32.00 -32.00 96.00 0.00 -32.00 32.00 65.00 -32.00 128.00 0.00 32.00 -32.00 65.00 -97.00 0.00 -64.00 0.00 -32.00 -32.00 -64.00 32.00 -161.00 32.00 -32.00 96.00 -33.00 0.00 33.00 0.00 -33.00 32.00 -32.00 33.00 32.00 -33.00 33.00 33.00 32.00 -65.00 96.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 0.00 161.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 -64.00 32.00 32.00 0.00 32.00 33.00 33.00 -33.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -64.00 32.00 -65.00 65.00 -96.00 64.00 -32.00 0.00 32.00 -32.00 32.00 129.00 -97.00 32.00 0.00 -32.00 129.00 -65.00 -32.00 -32.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 -64.00 33.00 0.00 32.00 -32.00 64.00 -64.00 0.00 0.00 32.00 32.00 -32.00 64.00 0.00 32.00 -96.00 65.00 -33.00 0.00 33.00 0.00 32.00 32.00 0.00 -32.00 32.00 -33.00 32.00 -32.00 -32.00 -64.00 32.00 0.00 64.00 32.00 33.00 -32.00 32.00 -32.00 96.00 32.00 -64.00 64.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 0.00 32.00 32.00 33.00 0.00 64.00 -64.00 0.00 -64.00 32.00 -65.00 64.00 -32.00 -32.00 64.00 0.00 33.00 0.00 32.00 -32.00 64.00 -32.00 64.00 -32.00 33.00 32.00 -33.00 32.00 -32.00 0.00 65.00 -32.00 32.00 0.00 32.00 -97.00 32.00 97.00 0.00 32.00 -64.00 0.00 32.00 32.00 64.00 -96.00 129.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 64.00 -33.00 -32.00 0.00 65.00 -128.00 32.00 -32.00 0.00 32.00 64.00 -64.00 0.00 -33.00 -32.00 33.00 -64.00 32.00 0.00 -32.00 64.00 -65.00 32.00 32.00 0.00 -96.00 0.00 -32.00 64.00 0.00 33.00 0.00 0.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 128.00 -32.00 65.00 97.00 -33.00 96.00 -32.00 64.00 -32.00 33.00 -64.00 -97.00 32.00 64.00 0.00 33.00 -32.00 0.00 0.00 32.00 -64.00 32.00 0.00 -64.00 0.00 64.00 -33.00 0.00 -64.00 32.00 0.00 96.00 -64.00 129.00 32.00 32.00 0.00 64.00 -32.00 0.00 -32.00 -32.00 64.00 97.00 0.00 32.00 -64.00 96.00 64.00 0.00 32.00 65.00 -32.00 64.00 32.00 -32.00 64.00 0.00 0.00 96.00 -32.00 65.00 -64.00 -32.00 -32.00 64.00 -32.00 -32.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 -32.00 129.00 64.00 0.00 -32.00 -33.00 0.00 33.00 -64.00 0.00 -97.00 -65.00 -96.00 0.00 -33.00 65.00 -64.00 0.00 -64.00 96.00 -129.00 32.00 0.00 0.00 -32.00 32.00 32.00 -32.00 64.00 0.00 97.00 -32.00 32.00 32.00 32.00 32.00 65.00 32.00 32.00 -96.00 -129.00 64.00 -32.00 0.00 -64.00 32.00 -33.00 33.00 33.00 0.00 32.00 -33.00 0.00 0.00 32.00 33.00 32.00 -33.00 -32.00 0.00 -32.00 33.00 32.00 32.00 -32.00 -65.00 -65.00 33.00 -64.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 -96.00 0.00 -32.00 -64.00 64.00 -64.00 64.00 -33.00 0.00 -32.00 65.00 32.00 -33.00 0.00 0.00 65.00 0.00 -65.00 65.00 0.00 -32.00 -32.00 -65.00 -32.00 -32.00 0.00 32.00 64.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 33.00 -65.00 64.00 33.00 -64.00 0.00 0.00 32.00 64.00 -32.00 32.00 64.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 -97.00 -64.00 0.00 -32.00 65.00 -32.00 128.00 32.00 33.00 64.00 0.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 97.00 0.00 32.00 0.00 64.00 0.00 65.00 0.00 -129.00 32.00 0.00 32.00 257.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 32.00 0.00 33.00 -65.00 0.00 -128.00 64.00 -129.00 64.00 0.00 32.00 -32.00 33.00 0.00 64.00 32.00 96.00 32.00 0.00 -32.00 0.00 -32.00 -160.00 32.00 0.00 64.00 -65.00 65.00 0.00 32.00 0.00 0.00 97.00 -65.00 32.00 0.00 64.00 -32.00 65.00 0.00 32.00 -32.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 129.00 -32.00 0.00 0.00 32.00 32.00 -32.00 32.00 -129.00 32.00 0.00 32.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 65.00 -65.00 0.00 -32.00 32.00 -64.00 32.00 -65.00 32.00 33.00 32.00 32.00 -32.00 64.00 -32.00 0.00 64.00 32.00 0.00 32.00 0.00 -32.00 0.00 -161.00 65.00 33.00 64.00 64.00 -64.00 96.00 0.00 65.00 -33.00 64.00 0.00 64.00 -32.00 32.00 -64.00 129.00 0.00 32.00 -32.00 32.00 32.00 97.00 0.00 32.00 -64.00 -64.00 -33.00 32.00 -32.00 0.00 32.00 32.00 33.00 -64.00 64.00 64.00 -97.00 193.00 0.00 32.00 -64.00 0.00 -32.00 32.00 -64.00 0.00 0.00 65.00 -32.00 0.00 -33.00 64.00 33.00 -64.00 32.00 0.00 32.00 -65.00 32.00 32.00 32.00 -32.00 32.00 -32.00 -64.00 97.00 32.00 32.00 -64.00 64.00 64.00 -64.00 0.00 -65.00 32.00 -32.00 32.00 0.00 -32.00 161.00 32.00 64.00 33.00 65.00 0.00 -33.00 64.00 0.00 0.00 -96.00 0.00 -129.00 32.00 -32.00 64.00 -193.00 0.00 -161.00 33.00 -32.00 96.00 -32.00 64.00 97.00 0.00 32.00 33.00 -32.00 32.00 64.00 64.00 -32.00 0.00 -32.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -97.00 0.00 -32.00 129.00 -96.00 64.00 -65.00 32.00 0.00 32.00 33.00 33.00 -65.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 -32.00 33.00 0.00 0.00 32.00 0.00 32.00 -33.00 0.00 33.00 33.00 0.00 32.00 0.00 32.00 0.00 -32.00 0.00 -32.00 -33.00 32.00 33.00 64.00 32.00 32.00 -97.00 65.00 32.00 0.00 65.00 -65.00 0.00 97.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -64.00 32.00 -65.00 -32.00 -96.00 0.00 -97.00 0.00 -64.00 32.00 -32.00 0.00 -64.00 32.00 -33.00 32.00 -96.00 32.00 -32.00 -32.00 -64.00 0.00 32.00 0.00 -32.00 0.00 -1.00 -32.00 -32.00 16.00 0.00 -16.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 32.00 -32.00 64.00 32.00 32.00 -32.00 33.00 -32.00 160.00 64.00 129.00 -32.00 64.00 -32.00 65.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 32.00 -32.00 64.00 32.00 0.00 0.00 -64.00 33.00 0.00 -33.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 65.00 33.00 32.00 -33.00 -97.00 -32.00 33.00 -96.00 64.00 64.00 0.00 32.00 0.00 32.00 -32.00 33.00 -65.00 32.00 65.00 -32.00 0.00 32.00 64.00 -65.00 0.00 -96.00 -64.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 129.00 32.00 -97.00 32.00 32.00 32.00 65.00 -32.00 -33.00 -32.00 33.00 32.00 0.00 -32.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 161.00 0.00 64.00 -64.00 97.00 64.00 -65.00 32.00 -96.00 -32.00 -32.00 64.00 -33.00 65.00 65.00 0.00 64.00 0.00 -64.00 96.00 0.00 32.00 -32.00 32.00 0.00 33.00 32.00 64.00 64.00 64.00 0.00 32.00 64.00 33.00 0.00 -33.00 -64.00 0.00 -32.00 33.00 -64.00 64.00 -33.00 32.00 65.00 -64.00 0.00 0.00 32.00 0.00 64.00 32.00 32.00 -32.00 -64.00 32.00 -32.00 32.00 64.00 64.00 0.00 -64.00 0.00 -32.00 -64.00 193.00 -32.00 -32.00 0.00 -65.00 0.00 0.00 -32.00 32.00 -33.00 97.00 -128.00 64.00 -32.00 65.00 64.00 -33.00 -97.00 65.00 65.00 -32.00 -65.00 0.00 -32.00 64.00 0.00 -32.00 0.00 -32.00 -32.00 64.00 -32.00 64.00 32.00 0.00 -32.00 -32.00 0.00 96.00 0.00 -32.00 0.00 65.00 0.00 32.00 0.00 32.00 64.00 -64.00 32.00 0.00 -32.00 -65.00 97.00 32.00 193.00 -64.00 -32.00 0.00 -129.00 -32.00 64.00 0.00 97.00 -96.00 -32.00 -97.00 0.00 64.00 0.00 97.00 64.00 32.00 0.00 -32.00 0.00 -64.00 0.00 -33.00 0.00 65.00 32.00 -32.00 32.00 -33.00 32.00 -64.00 33.00 64.00 0.00 -32.00 64.00 0.00 32.00 -64.00 32.00 -64.00 0.00 32.00 64.00 -32.00 65.00 32.00 64.00 0.00 96.00 32.00 33.00 0.00 -33.00 64.00 0.00 65.00 -32.00 64.00 65.00 32.00 64.00 0.00 -32.00 96.00 -129.00 0.00 -96.00 33.00 0.00 96.00 96.00 0.00 64.00 32.00 65.00 -32.00 32.00 32.00 0.00 32.00 -32.00 -64.00 -97.00 32.00 0.00 97.00 129.00 -33.00 64.00 -96.00 97.00 96.00 -32.00 33.00 -97.00 0.00 -64.00 -33.00 -32.00 -32.00 -129.00 0.00 -32.00 65.00 0.00 -33.00 -32.00 33.00 0.00 0.00 32.00 32.00 -32.00 32.00 -65.00 0.00 129.00 -32.00 129.00 32.00 0.00 0.00 64.00 32.00 -32.00 32.00 -32.00 -96.00 -33.00 64.00 -32.00 64.00 65.00 -32.00 -97.00 0.00 -32.00 129.00 -96.00 32.00 -33.00 32.00 0.00 32.00 33.00 0.00 -33.00 0.00 -32.00 0.00 129.00 -96.00 96.00 0.00 65.00 0.00 32.00 -64.00 0.00 64.00 0.00 32.00 -65.00 64.00 -64.00 0.00 -32.00 33.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 -33.00 0.00 33.00 32.00 32.00 -128.00 32.00 -65.00 32.00 33.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 97.00 33.00 64.00 0.00 96.00 -65.00 97.00 -32.00 -32.00 -32.00 -65.00 -32.00 33.00 -32.00 -33.00 0.00 33.00 -65.00 0.00 0.00 -65.00 -32.00 65.00 -161.00 0.00 -32.00 -33.00 -32.00 0.00 32.00 0.00 32.00 65.00 -64.00 96.00 -32.00 0.00 -32.00 32.00 -65.00 -64.00 -64.00 64.00 64.00 -64.00 0.00 64.00 33.00 0.00 0.00 33.00 -33.00 0.00 -64.00 64.00 -32.00 0.00 0.00 32.00 64.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 33.00 32.00 96.00 32.00 -64.00 65.00 -97.00 0.00 0.00 32.00 32.00 -32.00 65.00 32.00 64.00 -32.00 0.00 -65.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 96.00 0.00 32.00 32.00 65.00 32.00 96.00 0.00 32.00 -32.00 32.00 0.00 0.00 97.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 0.00 32.00 32.00 -129.00 96.00 -32.00 33.00 -129.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 32.00 32.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 65.00 -65.00 0.00 -64.00 32.00 129.00 -32.00 32.00 -33.00 64.00 0.00 64.00 -96.00 97.00 0.00 225.00 -64.00 0.00 32.00 -32.00 64.00 -65.00 32.00 -64.00 0.00 -32.00 32.00 64.00 -32.00 32.00 0.00 129.00 -96.00 0.00 64.00 64.00 0.00 -64.00 0.00 32.00 -64.00 32.00 -97.00 65.00 0.00 96.00 -32.00 32.00 -96.00 32.00 32.00 0.00 64.00 -32.00 32.00 -32.00 129.00 -32.00 0.00 -64.00 0.00 0.00 32.00 -32.00 0.00 0.00 97.00 64.00 -129.00 32.00 32.00 32.00 -32.00 32.00 -97.00 65.00 -64.00 0.00 32.00 -33.00 65.00 33.00 32.00 -33.00 -32.00 33.00 -97.00 -33.00 -64.00 0.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 -65.00 -33.00 0.00 -64.00 65.00 32.00 96.00 0.00 129.00 97.00 -32.00 32.00 -33.00 -32.00 -128.00 193.00 -32.00 64.00 64.00 129.00 -32.00 32.00 64.00 -32.00 32.00 -33.00 -32.00 0.00 0.00 -96.00 0.00 -32.00 129.00 -97.00 64.00 32.00 0.00 33.00 -129.00 64.00 33.00 64.00 -33.00 32.00 -32.00 0.00 65.00 97.00 0.00 32.00 0.00 32.00 64.00 65.00 64.00 -33.00 65.00 -64.00 32.00 -64.00 32.00 -32.00 64.00 64.00 0.00 64.00 -96.00 97.00 -97.00 64.00 -32.00 0.00 -64.00 64.00 -32.00 0.00 -33.00 32.00 33.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 0.00 32.00 0.00 33.00 0.00 32.00 32.00 32.00 0.00 -32.00 -32.00 -65.00 129.00 -64.00 0.00 64.00 32.00 -32.00 0.00 32.00 32.00 33.00 0.00 -33.00 0.00 -96.00 32.00 0.00 33.00 32.00 64.00 193.00 32.00 32.00 32.00 32.00 0.00 129.00 -64.00 -32.00 0.00 -65.00 -32.00 33.00 -32.00 -33.00 -33.00 33.00 0.00 32.00 33.00 -32.00 32.00 32.00 96.00 64.00 -32.00 64.00 32.00 -32.00 32.00 0.00 0.00 97.00 -64.00 32.00 64.00 64.00 32.00 0.00 33.00 -32.00 0.00 32.00 -33.00 97.00 -96.00 32.00 -32.00 32.00 0.00 225.00 0.00 193.00 64.00 -32.00 97.00 32.00 32.00 32.00 128.00 97.00 32.00 64.00 -32.00 0.00 -32.00 64.00 32.00 -32.00 32.00 0.00 33.00 0.00 64.00 96.00 64.00 33.00 -64.00 32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 64.00 -32.00 0.00 -32.00 32.00 32.00 0.00 96.00 65.00 161.00 -33.00 -32.00 -32.00 64.00 32.00 -32.00 65.00 0.00 96.00 225.00 -32.00 32.00 32.00 33.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -97.00 32.00 97.00 0.00 64.00 64.00 0.00 32.00 -32.00 65.00 -65.00 96.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 193.00 225.00 32.00 0.00 193.00 225.00 64.00 -32.00 32.00 -32.00 65.00 -32.00 128.00 0.00 32.00 0.00 161.00 -32.00 32.00 -32.00 129.00 -33.00 64.00 -32.00 65.00 -32.00 64.00 -32.00 64.00 -32.00 -32.00 -32.00 64.00 0.00 0.00 -32.00 97.00 -33.00 0.00 33.00 0.00 -33.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 -32.00 0.00 32.00 33.00 32.00 -33.00 0.00 33.00 32.00 -33.00 -32.00 -32.00 -64.00 0.00 0.00 -32.00 129.00 0.00 193.00 32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 -32.00 32.00 32.00 161.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 32.00 0.00 32.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 65.00 0.00 -32.00 32.00 -129.00 32.00 -32.00 32.00 -64.00 33.00 32.00 0.00 64.00 -33.00 0.00 -32.00 64.00 32.00 97.00 0.00 -65.00 0.00 33.00 33.00 32.00 64.00 32.00 -97.00 96.00 0.00 258.00 33.00 96.00 64.00 -96.00 321.00 -97.00 161.00 97.00 -32.00 96.00 -161.00 161.00 -160.00 128.00 -226.00 33.00 -128.00 128.00 -161.00 32.00 -64.00 161.00 -129.00 161.00 -96.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 65.00 32.00 32.00 32.00 -64.00 -64.00 160.00 -354.00 65.00 -32.00 225.00 -96.00 160.00 -161.00 97.00 -32.00 129.00 64.00 96.00 64.00 225.00 483.00 64.00 96.00 65.00 32.00 32.00 -64.00 161.00 -96.00 64.00 -33.00 161.00 0.00 96.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 129.00 33.00 32.00 0.00 161.00 0.00 547.00 160.00 96.00 65.00 289.00 128.00 418.00 225.00 129.00 65.00 193.00 64.00 482.00 257.00 257.00 129.00 161.00 0.00 -64.00 32.00 32.00 0.00 64.00 0.00 33.00 -32.00 -33.00 -65.00 -32.00 33.00 0.00 -33.00 32.00 -32.00 65.00 129.00 0.00 32.00 0.00 32.00 64.00 32.00 129.00 0.00 32.00 129.00 -32.00 32.00 -33.00 97.00 65.00 32.00 -32.00 -32.00 64.00 -97.00 -32.00 -161.00 -65.00 -64.00 -64.00 32.00 -32.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 32.00 -33.00 32.00 0.00 96.00 33.00 322.00 353.00 225.00 161.00 129.00 97.00 96.00 0.00 0.00 32.00 193.00 -32.00 96.00 128.00 32.00 32.00 -32.00 -96.00 65.00 0.00 193.00 64.00 289.00 32.00 193.00 -96.00 32.00 -32.00 32.00 0.00 64.00 32.00 129.00 0.00 64.00 0.00 129.00 -129.00 32.00 0.00 32.00 0.00 0.00 97.00 33.00 64.00 0.00 -32.00 -33.00 0.00 33.00 -32.00 257.00 32.00 225.00 0.00 128.00 -32.00 97.00 0.00 64.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 129.00 225.00 32.00 64.00 32.00 -64.00 32.00 -64.00 -32.00 -65.00 64.00 -32.00 129.00 32.00 64.00 0.00 32.00 0.00 193.00 0.00 32.00 0.00 65.00 0.00 160.00 0.00 193.00 0.00 0.00 33.00 -32.00 -33.00 65.00 97.00 -65.00 64.00 -96.00 97.00 0.00 160.00 32.00 65.00 0.00 32.00 -97.00 32.00 0.00 97.00 -32.00 128.00 65.00 64.00 64.00 97.00 32.00 32.00 129.00 96.00 32.00 33.00 32.00 96.00 -96.00 97.00 0.00 32.00 -33.00 161.00 -64.00 32.00 -129.00 96.00 -32.00 64.00 -96.00 129.00 -64.00 32.00 -65.00 32.00 -32.00 32.00 0.00 33.00 0.00 96.00 -64.00 64.00 0.00 32.00 0.00 161.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 97.00 0.00 32.00 -32.00 0.00 -65.00 97.00 -64.00 32.00 -96.00 0.00 -161.00 32.00 -64.00 32.00 -161.00 0.00 -65.00 64.00 -32.00 32.00 0.00 65.00 129.00 0.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 0.00 -32.00 32.00 -33.00 65.00 0.00 64.00 0.00 32.00 -64.00 32.00 -64.00 129.00 -161.00 32.00 0.00 32.00 -64.00 32.00 32.00 97.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -161.00 -32.00 -161.00 64.00 -64.00 32.00 -32.00 0.00 -129.00 -64.00 -32.00 -32.00 -129.00 96.00 -64.00 0.00 -96.00 -32.00 0.00 65.00 -33.00 64.00 -64.00 32.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 96.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 0.00 -97.00 -32.00 0.00 -32.00 -32.00 -32.00 65.00 0.00 96.00 -97.00 64.00 -32.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 -128.00 161.00 -65.00 64.00 -64.00 32.00 -96.00 65.00 -33.00 96.00 0.00 32.00 -32.00 65.00 -64.00 0.00 -97.00 128.00 -96.00 97.00 -32.00 64.00 0.00 32.00 0.00 32.00 64.00 129.00 0.00 64.00 -32.00 65.00 -32.00 32.00 32.00 96.00 32.00 64.00 -32.00 33.00 -32.00 32.00 -193.00 321.00 0.00 65.00 0.00 32.00 0.00 96.00 -64.00 64.00 -225.00 161.00 -33.00 97.00 -32.00 96.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -65.00 193.00 -32.00 32.00 -64.00 193.00 0.00 96.00 -64.00 65.00 -97.00 32.00 -32.00 32.00 -32.00 64.00 96.00 65.00 0.00 32.00 -193.00 0.00 -32.00 32.00 -32.00 32.00 -193.00 225.00 -32.00 97.00 0.00 96.00 32.00 161.00 0.00 64.00 97.00 161.00 0.00 96.00 0.00 129.00 0.00 32.00 64.00 0.00 64.00 -32.00 32.00 0.00 0.00 32.00 193.00 129.00 65.00 64.00 -33.00 129.00 33.00 64.00 96.00 64.00 0.00 32.00 0.00 33.00 0.00 32.00 -32.00 0.00 0.00 96.00 -64.00 97.00 32.00 128.00 0.00 33.00 -32.00 64.00 -33.00 64.00 -160.00 225.00 -32.00 32.00 0.00 32.00 -65.00 33.00 -64.00 64.00 -32.00 64.00 32.00 65.00 32.00 32.00 97.00 64.00 0.00 64.00 -33.00 65.00 -96.00 96.00 0.00 97.00 32.00 96.00 32.00 0.00 161.00 161.00 32.00 96.00 0.00 129.00 0.00 32.00 129.00 129.00 0.00 32.00 64.00 64.00 -32.00 161.00 0.00 64.00 96.00 225.00 0.00 129.00 0.00 64.00 32.00 0.00 65.00 97.00 32.00 193.00 32.00 96.00 32.00 161.00 0.00 96.00 -128.00 161.00 0.00 64.00 64.00 161.00 0.00 32.00 0.00 65.00 -32.00 160.00 -32.00 65.00 -65.00 32.00 -128.00 64.00 0.00 64.00 -65.00 32.00 -128.00 33.00 -32.00 32.00 -32.00 128.00 -65.00 65.00 -128.00 32.00 -33.00 32.00 -32.00 129.00 0.00 32.00 -96.00 96.00 -32.00 193.00 -97.00 64.00 -32.00 97.00 -32.00 64.00 -64.00 0.00 -161.00 32.00 -32.00 65.00 -32.00 32.00 0.00 64.00 32.00 32.00 32.00 33.00 0.00 32.00 -32.00 160.00 64.00 225.00 0.00 65.00 -96.00 0.00 0.00 32.00 -33.00 64.00 33.00 161.00 32.00 64.00 -32.00 97.00 96.00 193.00 -96.00 160.00 0.00 65.00 32.00 32.00 32.00 129.00 0.00 64.00 64.00 64.00 64.00 64.00 33.00 33.00 0.00 96.00 0.00 32.00 -33.00 32.00 0.00 33.00 -64.00 32.00 -32.00 32.00 0.00 32.00 96.00 96.00 33.00 129.00 64.00 64.00 129.00 0.00 64.00 33.00 64.00 32.00 0.00 32.00 32.00 193.00 32.00 32.00 65.00 64.00 96.00 0.00 97.00 129.00 96.00 32.00 97.00 32.00 32.00 0.00 0.00 32.00 32.00 65.00 32.00 32.00 0.00 64.00 32.00 64.00 -32.00 129.00 -32.00 96.00 32.00 33.00 64.00 -33.00 32.00 33.00 0.00 32.00 -96.00 96.00 -32.00 32.00 0.00 97.00 -97.00 161.00 0.00 32.00 65.00 96.00 -32.00 97.00 32.00 96.00 -65.00 32.00 -32.00 32.00 0.00 33.00 65.00 32.00 -65.00 128.00 0.00 97.00 0.00 64.00 -96.00 129.00 -32.00 193.00 0.00 32.00 0.00 32.00 -32.00 96.00 -129.00 161.00 -161.00 64.00 -32.00 129.00 -64.00 64.00 -32.00 0.00 -129.00 32.00 -64.00 0.00 -65.00 -64.00 -96.00 0.00 -97.00 97.00 -128.00 64.00 -65.00 0.00 -32.00 0.00 -96.00 -64.00 -161.00 -33.00 -193.00 33.00 -32.00 0.00 -32.00 64.00 -97.00 64.00 -128.00 32.00 -193.00 -32.00 -64.00 129.00 -129.00 -32.00 0.00 96.00 -32.00 0.00 -65.00 32.00 -64.00 0.00 -96.00 -32.00 -65.00 32.00 0.00 33.00 -128.00 -65.00 -32.00 -64.00 -32.00 -64.00 -33.00 -33.00 -160.00 -64.00 -33.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 -96.00 -32.00 -97.00 -97.00 -96.00 -32.00 -64.00 -32.00 -129.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -65.00 32.00 -128.00 0.00 -32.00 0.00 -65.00 64.00 -96.00 -64.00 -32.00 32.00 -33.00 32.00 -32.00 65.00 -160.00 32.00 -129.00 96.00 -161.00 -32.00 -32.00 32.00 -32.00 65.00 -32.00 0.00 -65.00 -33.00 0.00 -64.00 -64.00 -32.00 -64.00 0.00 -65.00 64.00 -225.00 32.00 -32.00 33.00 -64.00 0.00 -32.00 64.00 0.00 129.00 -32.00 64.00 -33.00 0.00 -64.00 -97.00 -96.00 0.00 -32.00 0.00 0.00 33.00 0.00 32.00 96.00 128.00 -32.00 65.00 -32.00 0.00 -32.00 0.00 0.00 -97.00 -33.00 0.00 -32.00 32.00 -32.00 97.00 -128.00 64.00 -65.00 97.00 0.00 32.00 0.00 96.00 0.00 32.00 -64.00 0.00 -64.00 32.00 0.00 129.00 -161.00 193.00 -65.00 0.00 -64.00 0.00 0.00 97.00 -32.00 64.00 -32.00 64.00 32.00 97.00 0.00 32.00 -64.00 64.00 -97.00 161.00 -32.00 0.00 -96.00 -65.00 -161.00 65.00 -64.00 0.00 -97.00 32.00 -64.00 64.00 -97.00 97.00 -128.00 32.00 -129.00 64.00 0.00 32.00 -64.00 0.00 -64.00 65.00 -33.00 128.00 -32.00 0.00 -161.00 32.00 -32.00 97.00 -32.00 32.00 -96.00 64.00 0.00 32.00 -97.00 161.00 -96.00 32.00 -32.00 33.00 -65.00 32.00 -32.00 0.00 -32.00 128.00 -32.00 33.00 -32.00 160.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 -128.00 -193.00 64.00 -32.00 -32.00 -128.00 -32.00 -32.00 64.00 -129.00 64.00 -32.00 32.00 0.00 32.00 -32.00 33.00 -32.00 64.00 -65.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 64.00 -33.00 65.00 -32.00 64.00 -32.00 32.00 -32.00 -32.00 -96.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -65.00 65.00 -64.00 0.00 -128.00 96.00 -65.00 -32.00 -32.00 0.00 -96.00 -32.00 -193.00 64.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 -96.00 64.00 -33.00 97.00 -96.00 32.00 -64.00 64.00 -32.00 0.00 0.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 32.00 -64.00 64.00 -97.00 -32.00 -64.00 32.00 -32.00 0.00 -97.00 0.00 -64.00 33.00 -32.00 64.00 -129.00 128.00 -64.00 -32.00 -32.00 0.00 -32.00 65.00 0.00 64.00 -33.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 0.00 -32.00 33.00 32.00 64.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 0.00 32.00 65.00 32.00 -65.00 32.00 -32.00 0.00 0.00 64.00 0.00 33.00 -64.00 32.00 -32.00 64.00 32.00 64.00 0.00 33.00 -32.00 0.00 0.00 -33.00 -33.00 33.00 33.00 64.00 -33.00 64.00 33.00 32.00 -33.00 32.00 -32.00 -32.00 0.00 65.00 -64.00 32.00 32.00 96.00 -32.00 65.00 -64.00 32.00 0.00 64.00 -32.00 32.00 -33.00 0.00 33.00 64.00 64.00 33.00 0.00 32.00 -97.00 32.00 97.00 64.00 0.00 32.00 -64.00 33.00 -33.00 0.00 0.00 32.00 0.00 64.00 -32.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 -32.00 32.00 -64.00 96.00 96.00 65.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 64.00 64.00 96.00 -32.00 33.00 0.00 96.00 -65.00 129.00 33.00 64.00 -33.00 64.00 -32.00 65.00 32.00 96.00 -32.00 64.00 -64.00 0.00 -32.00 65.00 -32.00 32.00 32.00 64.00 -257.00 225.00 0.00 193.00 -65.00 64.00 0.00 97.00 -64.00 64.00 0.00 97.00 0.00 32.00 -64.00 32.00 32.00 64.00 -32.00 32.00 -32.00 0.00 -65.00 33.00 32.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 -32.00 32.00 32.00 128.00 -32.00 97.00 32.00 32.00 -64.00 96.00 -33.00 33.00 33.00 64.00 -33.00 32.00 0.00 64.00 -32.00 33.00 -128.00 96.00 0.00 32.00 128.00 64.00 -64.00 65.00 -96.00 -32.00 0.00 32.00 -33.00 0.00 -32.00 64.00 -32.00 96.00 32.00 33.00 -32.00 32.00 -96.00 225.00 -65.00 0.00 -64.00 32.00 32.00 64.00 -64.00 0.00 -64.00 33.00 -33.00 128.00 -64.00 -32.00 -96.00 96.00 -32.00 0.00 0.00 33.00 -33.00 64.00 -64.00 32.00 -32.00 64.00 32.00 32.00 64.00 33.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 -32.00 33.00 32.00 32.00 -65.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 -64.00 64.00 32.00 64.00 32.00 97.00 0.00 32.00 65.00 64.00 32.00 97.00 96.00 64.00 0.00 64.00 33.00 65.00 -33.00 64.00 33.00 32.00 32.00 32.00 0.00 65.00 0.00 32.00 32.00 0.00 0.00 64.00 -32.00 0.00 0.00 64.00 0.00 129.00 32.00 32.00 32.00 96.00 32.00 33.00 64.00 64.00 -32.00 32.00 -32.00 0.00 32.00 97.00 0.00 96.00 32.00 0.00 -32.00 97.00 0.00 64.00 32.00 64.00 0.00 64.00 -64.00 0.00 0.00 33.00 32.00 64.00 0.00 32.00 32.00 0.00 0.00 64.00 33.00 0.00 -33.00 65.00 33.00 32.00 32.00 -32.00 32.00 32.00 64.00 32.00 64.00 0.00 33.00 32.00 64.00 64.00 32.00 65.00 97.00 128.00 0.00 32.00 0.00 65.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 33.00 32.00 64.00 -64.00 32.00 0.00 32.00 -65.00 32.00 -32.00 97.00 0.00 32.00 -64.00 32.00 32.00 64.00 -64.00 65.00 0.00 64.00 32.00 64.00 -32.00 32.00 32.00 33.00 32.00 32.00 32.00 64.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 97.00 32.00 128.00 -64.00 97.00 64.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 32.00 64.00 -32.00 32.00 32.00 64.00 0.00 32.00 0.00 33.00 -32.00 96.00 -64.00 32.00 -33.00 32.00 0.00 33.00 -32.00 128.00 0.00 32.00 -64.00 97.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 129.00 32.00 32.00 32.00 32.00 33.00 97.00 -33.00 64.00 0.00 32.00 -32.00 96.00 0.00 65.00 -64.00 64.00 0.00 32.00 -32.00 129.00 0.00 64.00 -32.00 0.00 64.00 65.00 -64.00 192.00 -32.00 33.00 -33.00 96.00 -32.00 96.00 -64.00 33.00 0.00 32.00 -32.00 32.00 -32.00 96.00 -32.00 0.00 -65.00 0.00 0.00 65.00 -32.00 64.00 32.00 193.00 -128.00 -64.00 -97.00 32.00 -32.00 32.00 -64.00 -97.00 -33.00 -289.00 -32.00 -32.00 -32.00 0.00 -64.00 32.00 -225.00 161.00 -193.00 -32.00 -129.00 32.00 -96.00 -129.00 -32.00 -32.00 -33.00 -32.00 -64.00 -32.00 -128.00 32.00 -161.00 32.00 -129.00 0.00 -64.00 -32.00 -64.00 64.00 -97.00 -64.00 -96.00 -32.00 -65.00 -225.00 -160.00 -193.00 -33.00 0.00 -96.00 -32.00 -32.00 -97.00 -32.00 -32.00 0.00 -161.00 -97.00 -128.00 32.00 -65.00 -32.00 -128.00 65.00 -65.00 -65.00 -64.00 0.00 -96.00 32.00 -32.00 0.00 -97.00 -96.00 -32.00 0.00 -32.00 64.00 -32.00 -64.00 -65.00 -32.00 0.00 32.00 -96.00 -64.00 -64.00 -33.00 -65.00 -128.00 65.00 -97.00 0.00 -96.00 -33.00 0.00 -32.00 32.00 -96.00 32.00 -32.00 -32.00 -65.00 -96.00 -64.00 -161.00 0.00 -64.00 0.00 0.00 -32.00 -33.00 -32.00 0.00 -65.00 -32.00 -128.00 193.00 -129.00 32.00 -64.00 0.00 -129.00 65.00 -96.00 0.00 -97.00 64.00 -32.00 193.00 -128.00 0.00 -33.00 -97.00 -32.00 0.00 -32.00 -64.00 -96.00 0.00 -33.00 64.00 -64.00 0.00 -64.00 -64.00 -32.00 -96.00 32.00 -33.00 -64.00 -64.00 -33.00 -64.00 0.00 -64.00 -64.00 -33.00 -32.00 0.00 -64.00 33.00 -65.00 32.00 -32.00 -97.00 -32.00 -64.00 -64.00 -32.00 0.00 -97.00 32.00 -128.00 0.00 -65.00 32.00 -32.00 32.00 0.00 32.00 -96.00 -32.00 0.00 -32.00 32.00 -96.00 -64.00 -97.00 -33.00 -32.00 -32.00 -32.00 -64.00 -65.00 -64.00 -96.00 0.00 -64.00 -32.00 0.00 -97.00 32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 -65.00 -97.00 32.00 -64.00 33.00 -64.00 -33.00 -65.00 0.00 -32.00 -64.00 32.00 -64.00 -32.00 0.00 -32.00 32.00 -97.00 -32.00 -64.00 -32.00 -32.00 -129.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -33.00 -32.00 33.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 -65.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -65.00 -96.00 0.00 -161.00 65.00 -64.00 -33.00 -65.00 0.00 0.00 33.00 -32.00 0.00 -32.00 0.00 32.00 -65.00 -64.00 32.00 -64.00 -32.00 -65.00 0.00 0.00 32.00 -96.00 -64.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -33.00 65.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 32.00 -32.00 97.00 0.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 32.00 64.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -33.00 32.00 0.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -64.00 64.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 -32.00 65.00 -65.00 96.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -32.00 -33.00 -33.00 33.00 -32.00 0.00 -96.00 32.00 -32.00 -32.00 -97.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -32.00 -97.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -96.00 65.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 -64.00 0.00 32.00 -33.00 -32.00 0.00 -65.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 32.00 0.00 0.00 -32.00 33.00 32.00 32.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -64.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 32.00 32.00 33.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 64.00 0.00 0.00 -32.00 32.00 -32.00 32.00 64.00 33.00 -32.00 96.00 -96.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 -96.00 32.00 32.00 64.00 -32.00 -32.00 -65.00 32.00 0.00 0.00 -32.00 0.00 -32.00 97.00 32.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 32.00 -64.00 32.00 -32.00 32.00 -64.00 96.00 -33.00 65.00 -32.00 64.00 -32.00 129.00 -64.00 128.00 64.00 65.00 0.00 64.00 -32.00 96.00 0.00 65.00 -32.00 64.00 -65.00 64.00 -64.00 65.00 -96.00 -33.00 -161.00 33.00 -97.00 64.00 -64.00 32.00 -32.00 -64.00 -64.00 -65.00 -32.00 0.00 -33.00 0.00 -32.00 97.00 -257.00 0.00 -64.00 32.00 -65.00 64.00 0.00 33.00 -32.00 0.00 -64.00 -65.00 -64.00 0.00 -65.00 0.00 -128.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 -129.00 -97.00 -128.00 -64.00 -65.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -33.00 -32.00 -32.00 -64.00 0.00 0.00 -32.00 -65.00 -32.00 -96.00 0.00 -64.00 64.00 -33.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -65.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 96.00 -32.00 0.00 0.00 -32.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -97.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00 -32.00 -65.00 -32.00 32.00 -33.00 33.00 -32.00 -33.00 0.00 -32.00 -64.00 32.00 0.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 65.00 -33.00 0.00 0.00 32.00 0.00 64.00 -64.00 32.00 32.00 32.00 -96.00 32.00 0.00 33.00 -32.00 -33.00 -32.00 97.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -96.00 0.00 0.00 -33.00 -65.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -96.00 -96.00 -97.00 -129.00 0.00 64.00 -32.00 -64.00 -64.00 32.00 0.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 -96.00 -32.00 32.00 -32.00 -96.00 -33.00 0.00 -64.00 32.00 0.00 -65.00 0.00 -96.00 -64.00 0.00 0.00 -32.00 -32.00 -32.00 -65.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -33.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 64.00 -32.00 -64.00 0.00 32.00 -32.00 -32.00 -65.00 -32.00 -96.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 33.00 -64.00 0.00 -33.00 -65.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 0.00 -64.00 33.00 -32.00 -33.00 -33.00 0.00 -32.00 33.00 32.00 32.00 0.00 0.00 -64.00 -161.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 32.00 0.00 32.00 -33.00 -32.00 -32.00 -64.00 -64.00 -64.00 -32.00 -33.00 -65.00 -32.00 0.00 -64.00 0.00 0.00 33.00 32.00 64.00 64.00 0.00 0.00 32.00 -64.00 64.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 -96.00 -97.00 -64.00 33.00 -65.00 -33.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 -32.00 -32.00 -129.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 -160.00 -65.00 -65.00 -32.00 -161.00 0.00 -64.00 -64.00 0.00 -65.00 0.00 -96.00 32.00 -64.00 32.00 -129.00 -32.00 64.00 -128.00 65.00 -32.00 257.00 -97.00 0.00 -32.00 129.00 -64.00 32.00 -161.00 -32.00 -64.00 -65.00 -129.00 -193.00 -129.00 -32.00 -32.00 -225.00 0.00 -64.00 32.00 -97.00 161.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 -225.00 -96.00 -96.00 -193.00 -97.00 -64.00 -64.00 0.00 -64.00 0.00 -97.00 0.00 -32.00 160.00 -97.00 32.00 -32.00 65.00 0.00 96.00 32.00 65.00 33.00 64.00 -33.00 96.00 -128.00 32.00 -129.00 129.00 -161.00 64.00 -32.00 129.00 -128.00 32.00 -65.00 0.00 -32.00 32.00 -96.00 32.00 -65.00 0.00 -128.00 97.00 -193.00 32.00 -64.00 -32.00 -97.00 -64.00 -161.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 65.00 -193.00 96.00 -161.00 0.00 -225.00 0.00 -64.00 32.00 -32.00 -32.00 -97.00 97.00 -193.00 64.00 -96.00 0.00 -32.00 0.00 -97.00 0.00 -128.00 32.00 -32.00 0.00 -65.00 129.00 -193.00 32.00 0.00 32.00 -64.00 -96.00 -257.00 32.00 -32.00 32.00 -129.00 32.00 -129.00 32.00 -160.00 0.00 -32.00 129.00 -258.00 0.00 -64.00 0.00 -96.00 -32.00 -97.00 -65.00 -96.00 -64.00 -161.00 -64.00 -289.00 -32.00 -129.00 32.00 -129.00 0.00 -96.00 0.00 -32.00 -32.00 -129.00 -65.00 -96.00 97.00 -290.00 0.00 -321.00 -32.00 -32.00 -33.00 -161.00 -128.00 -290.00 -64.00 -64.00 -65.00 -129.00 32.00 -96.00 65.00 -225.00 0.00 -129.00 0.00 -64.00 -32.00 -129.00 0.00 -160.00 -65.00 -193.00 -289.00 -290.00 -32.00 0.00 -65.00 33.00 -193.00 -65.00 -225.00 -193.00 -96.00 -32.00 -257.00 -161.00 -129.00 0.00 -129.00 32.00 -160.00 0.00 -65.00 -64.00 -128.00 -161.00 0.00 -160.00 0.00 -32.00 0.00 -33.00 -32.00 -96.00 -32.00 -64.00 -226.00 -97.00 -32.00 0.00 -96.00 0.00 -161.00 -32.00 -64.00 0.00 -32.00 0.00 -161.00 161.00 -161.00 32.00 -129.00 -32.00 -321.00 -32.00 -64.00 -33.00 -97.00 -32.00 -64.00 -64.00 -32.00 0.00 -65.00 -32.00 -128.00 -65.00 -97.00 -64.00 -128.00 0.00 -161.00 -128.00 -64.00 -33.00 -483.00 65.00 -96.00 64.00 -161.00 -32.00 -96.00 64.00 -97.00 129.00 0.00 64.00 -32.00 97.00 0.00 96.00 -64.00 161.00 -97.00 96.00 -32.00 32.00 -96.00 -32.00 -33.00 -64.00 -64.00 -32.00 -128.00 -32.00 -65.00 32.00 -32.00 32.00 -32.00 129.00 -32.00 32.00 -97.00 -32.00 -32.00 32.00 -64.00 -32.00zm13890.00 -20450.00l0.00 -32.00 0.00 32.00zm2476.00 1286.00l0.00 -32.00 -32.00 -64.00 -32.00 64.00 -33.00 -32.00 33.00 32.00 32.00 -32.00 0.00 64.00 32.00 0.00zm1157.00 -353.00l0.00 -33.00 0.00 -64.00 33.00 -32.00 0.00 32.00 0.00 32.00 -33.00 32.00 33.00 0.00 64.00 225.00 -32.00 33.00 0.00 -33.00 -32.00 -128.00 0.00 -64.00 -33.00 0.00zm33.00 -33.00l-33.00 0.00 0.00 33.00 33.00 -33.00zm-2862.00 -353.00l32.00 0.00 -32.00 -33.00 0.00 33.00zm32.00 0.00l-32.00 64.00 -32.00 32.00 0.00 32.00 0.00 65.00 32.00 0.00 -32.00 -97.00 64.00 -32.00 32.00 -32.00 -32.00 -32.00zm4244.00 1993.00l32.00 0.00 0.00 22.00 33.00 -22.00 32.00 65.00 -65.00 32.00 -64.00 -32.00 48.00 -33.00 -16.00 0.00 0.00 -32.00zm-32.00 -418.00l-32.00 0.00 32.00 -32.00 0.00 32.00zm-5048.00 -1608.00l-64.00 33.00 -32.00 64.00 32.00 64.00 64.00 0.00 0.00 65.00 32.00 32.00 32.00 -32.00 33.00 64.00 0.00 64.00 0.00 32.00 0.00 -32.00 32.00 -64.00 -65.00 -64.00 -32.00 32.00 -32.00 -32.00 0.00 -65.00 -32.00 -32.00 -64.00 -32.00 32.00 -32.00 86.00 -65.00 -22.00 0.00zm6463.00 4245.00l0.00 -32.00 0.00 32.00 32.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00zm-2026.00 -3859.00l0.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 32.00 96.00 32.00 -129.00 65.00 -32.00 0.00 0.00 -33.00 0.00 -32.00 0.00 65.00 32.00 0.00 97.00 -33.00 32.00 0.00 -32.00 33.00 -129.00 96.00 0.00 32.00 -32.00 0.00 -64.00 0.00 0.00 -32.00 0.00 96.00 -64.00 65.00 -33.00 0.00 0.00 -32.00 -32.00 64.00 -64.00 0.00 -129.00 -97.00 -32.00 -160.00 0.00 32.00 0.00 -32.00 64.00 -65.00 -64.00 0.00 -32.00 -32.00 32.00 -64.00 64.00 -32.00 33.00 32.00 32.00 32.00 96.00 32.00 0.00 -32.00 32.00 -32.00 97.00 96.00 0.00 -32.00 -97.00 -64.00 33.00 -32.00 0.00 -32.00 0.00 32.00 -65.00 0.00 32.00 -65.00 -64.00 33.00 -32.00 -33.00 64.00 -96.00 32.00 -32.00 65.00 0.00 32.00 32.00 64.00 0.00 32.00 64.00 0.00 32.00 32.00 0.00 -32.00 -64.00 0.00 -64.00 97.00 0.00 96.00 32.00 129.00 64.00 32.00 97.00 0.00 32.00 0.00 32.00 32.00 32.00 -96.00 32.00 -65.00 65.00 33.00 -161.00 -33.00 64.00 0.00 32.00 -32.00 0.00zm482.00 1094.00l33.00 -33.00 0.00 33.00 -33.00 0.00zm-5112.00 -1512.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm5884.00 2573.00l0.00 -33.00 32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00zm-4823.00 -2380.00l-32.00 65.00 32.00 0.00 0.00 -33.00 0.00 -32.00zm322.00 -128.00l32.00 -33.00 32.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 33.00 -32.00 0.00zm3504.00 1414.00l33.00 0.00 -33.00 -96.00 33.00 -32.00 96.00 -64.00 32.00 -97.00 0.00 -32.00 97.00 -64.00 64.00 0.00 -64.00 -65.00 0.00 -32.00 96.00 -32.00 64.00 64.00 0.00 225.00 -32.00 33.00 -96.00 0.00 -65.00 32.00 -32.00 0.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 64.00 -32.00 33.00 -96.00 -33.00 32.00 33.00 0.00 32.00 -32.00 -32.00 -33.00 -33.00zm3859.00 4148.00l0.00 -64.00 32.00 0.00 32.00 -32.00 0.00 64.00 -32.00 -32.00 -32.00 64.00zm-4759.00 -4951.00l32.00 0.00 65.00 32.00 0.00 32.00 -33.00 0.00 -64.00 -64.00zm-2251.00 -33.00l33.00 -32.00 32.00 -64.00 -65.00 32.00 0.00 64.00zm4084.00 1994.00l0.00 -32.00 32.00 32.00 0.00 96.00 -32.00 -96.00zm836.00 1125.00l32.00 -96.00 32.00 64.00 -32.00 32.00 -32.00 0.00zm-1351.00 -1736.00l33.00 -32.00 64.00 -32.00 0.00 32.00 0.00 64.00 -97.00 -32.00zm-3183.00 -1286.00l32.00 -64.00 33.00 0.00 0.00 64.00 -33.00 32.00 -32.00 -32.00zm4405.00 3247.00l193.00 -96.00 -32.00 64.00 -96.00 32.00 -65.00 0.00zm-32.00 193.00l64.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 32.00 32.00 0.00 -32.00 32.00 0.00 64.00 0.00 33.00 -33.00 0.00 33.00 -33.00 -97.00 -32.00zm-2894.00 -3408.00l65.00 -64.00 32.00 -129.00 0.00 -32.00 64.00 0.00 0.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 -65.00 96.00 0.00 64.00 -32.00 -64.00zm-3311.00 -1061.00l32.00 -64.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 64.00 -32.00 65.00 -64.00 -65.00 0.00 -64.00zm-97.00 -354.00l0.00 -32.00 64.00 -32.00 65.00 32.00 0.00 32.00 -32.00 0.00 32.00 65.00 -65.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -97.00zm5723.00 3441.00l32.00 32.00 33.00 0.00 -33.00 -32.00 -32.00 0.00zm-96.00 109.00l-32.00 19.00 96.00 65.00 64.00 -32.00 33.00 -65.00 -33.00 32.00 -64.00 33.00 -64.00 -33.00 0.00 -19.00zm-579.00 -1363.00l0.00 -97.00 32.00 -32.00 32.00 -64.00 33.00 0.00 64.00 64.00 0.00 32.00 -32.00 32.00 -129.00 97.00 0.00 -32.00zm-1029.00 -1158.00l-32.00 97.00 32.00 -65.00 0.00 -32.00zm-32.00 97.00l-96.00 -65.00 -33.00 0.00 97.00 65.00 64.00 160.00 32.00 0.00 -32.00 -32.00 -32.00 -128.00zm1833.00 2411.00l-32.00 -96.00 32.00 -97.00 32.00 0.00 32.00 0.00 0.00 -64.00 32.00 0.00 32.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 32.00 -32.00 -32.00 64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00zm-4437.00 -3022.00l-32.00 0.00 -33.00 -32.00 -64.00 0.00 -96.00 32.00 -65.00 64.00 -32.00 0.00 97.00 -96.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 64.00 32.00 0.00 32.00 65.00 32.00 32.00 97.00 -32.00 0.00 0.00 -33.00 0.00 65.00zm-643.00 96.00l-97.00 64.00 -64.00 -96.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 32.00 96.00 32.00 0.00 32.00 65.00 -32.00 -65.00 -32.00 -32.00 0.00 -64.00 32.00 -64.00 65.00 128.00 32.00 32.00 -32.00 97.00 32.00 32.00 -32.00 32.00zm4147.00 1351.00l32.00 -65.00 97.00 -128.00 0.00 -32.00 -161.00 225.00 -64.00 32.00 96.00 -32.00zm-578.00 -997.00l64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 64.00zm32.00 -64.00l-32.00 0.00 0.00 32.00 32.00 -32.00zm-32.00 0.00l32.00 -33.00 -32.00 0.00 0.00 33.00z\"\n          },\n          pa: {\n            name: \"PA\",\n            path: \"M77219.00 21381.00l64.00 0.00 32.00 33.00 32.00 96.00 33.00 0.00 32.00 97.00 32.00 0.00 64.00 -33.00 32.00 33.00 0.00 64.00 33.00 0.00 64.00 -64.00 32.00 32.00 32.00 -65.00 64.00 0.00 33.00 33.00 32.00 -65.00 64.00 -64.00 64.00 64.00 129.00 -193.00 -32.00 -32.00 0.00 -64.00 32.00 -129.00 0.00 -32.00 32.00 -32.00 64.00 0.00 65.00 0.00 0.00 64.00 64.00 32.00 64.00 -64.00 65.00 32.00 32.00 -32.00 64.00 32.00 32.00 32.00 97.00 33.00 0.00 32.00 32.00 0.00 32.00 -65.00 0.00 -32.00 32.00 0.00 32.00 -64.00 0.00 32.00 65.00 0.00 32.00 0.00 32.00 97.00 0.00 32.00 32.00 -32.00 32.00 64.00 0.00 -64.00 32.00 -33.00 65.00 33.00 32.00 0.00 0.00 -129.00 64.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -160.00 65.00 -97.00 -33.00 -32.00 0.00 32.00 -96.00 -64.00 32.00 -32.00 -128.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 -32.00 -33.00 0.00 -64.00 64.00 -32.00 32.00 32.00 64.00 0.00 65.00 -32.00 64.00 64.00 32.00 -64.00 64.00 0.00 33.00 0.00 160.00 0.00 65.00 -64.00 -32.00 -33.00 -33.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 129.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -33.00 32.00 -32.00 33.00 -64.00 32.00 -32.00 64.00 32.00 -32.00 129.00 128.00 0.00 0.00 -33.00 97.00 33.00 32.00 -33.00 32.00 33.00 0.00 32.00 65.00 32.00 32.00 32.00 128.00 -96.00 65.00 0.00 0.00 -33.00 64.00 33.00 96.00 32.00 33.00 64.00 0.00 32.00 0.00 65.00 32.00 64.00 0.00 32.00 96.00 32.00 64.00 0.00 65.00 -64.00 64.00 0.00 0.00 32.00 96.00 0.00 0.00 -64.00 33.00 -32.00 96.00 32.00 64.00 64.00 0.00 -32.00 97.00 64.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -33.00 -33.00 -64.00 33.00 -64.00 -33.00 -97.00 33.00 0.00 0.00 -64.00 -129.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -33.00 65.00 0.00 32.00 33.00 32.00 -33.00 32.00 33.00 32.00 32.00 129.00 0.00 64.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 -32.00 128.00 64.00 0.00 -64.00 33.00 -64.00 0.00 32.00 32.00 0.00 64.00 0.00 64.00 -32.00 33.00 32.00 32.00 -32.00 -32.00 -65.00 32.00 0.00 0.00 -96.00 64.00 32.00 32.00 -64.00 32.00 32.00 32.00 0.00 0.00 32.00 65.00 -32.00 64.00 32.00 64.00 -32.00 32.00 32.00 -32.00 0.00 65.00 0.00 -33.00 -64.00 33.00 0.00 32.00 64.00 0.00 32.00 64.00 32.00 64.00 0.00 0.00 -32.00 33.00 65.00 32.00 32.00 32.00 0.00 0.00 32.00 96.00 -32.00 0.00 -32.00 65.00 0.00 64.00 32.00 32.00 -32.00 64.00 -33.00 33.00 0.00 0.00 65.00 32.00 0.00 32.00 -32.00 64.00 32.00 0.00 -32.00 64.00 0.00 0.00 -65.00 -32.00 -32.00 65.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -96.00 32.00 -33.00 33.00 0.00 32.00 -32.00 32.00 0.00 129.00 -32.00 0.00 -32.00 32.00 -64.00 32.00 -33.00 -32.00 -64.00 64.00 -64.00 -32.00 -64.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -96.00 32.00 0.00 129.00 -32.00 0.00 -33.00 64.00 -32.00 64.00 32.00 32.00 0.00 65.00 -96.00 0.00 -32.00 -65.00 -32.00 65.00 -33.00 0.00 -32.00 32.00 -64.00 32.00 32.00 64.00 -32.00 65.00 32.00 32.00 -96.00 128.00 64.00 65.00 0.00 -33.00 32.00 65.00 64.00 32.00 65.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 -96.00 97.00 -33.00 64.00 -96.00 64.00 0.00 33.00 -32.00 32.00 -32.00 96.00 32.00 32.00 -65.00 129.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 0.00 64.00 32.00 33.00 -32.00 32.00 32.00 0.00 64.00 32.00 32.00 32.00 33.00 0.00 128.00 32.00 65.00 32.00 0.00 33.00 0.00 64.00 32.00 32.00 32.00 32.00 64.00 32.00 65.00 32.00 0.00 33.00 32.00 96.00 0.00 32.00 32.00 32.00 -64.00 33.00 -33.00 32.00 0.00 32.00 0.00 128.00 -32.00 65.00 65.00 0.00 32.00 64.00 32.00 32.00 32.00 97.00 0.00 32.00 0.00 0.00 32.00 64.00 -32.00 32.00 32.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 32.00 32.00 0.00 64.00 33.00 -32.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 -33.00 32.00 -64.00 32.00 -32.00 32.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -65.00 96.00 32.00 97.00 33.00 0.00 -33.00 32.00 33.00 129.00 0.00 0.00 -65.00 32.00 0.00 64.00 -64.00 32.00 -32.00 65.00 64.00 32.00 0.00 32.00 32.00 64.00 97.00 97.00 0.00 32.00 -32.00 64.00 0.00 64.00 -33.00 32.00 -64.00 97.00 0.00 64.00 -96.00 65.00 32.00 96.00 -32.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 32.00 64.00 64.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -64.00 97.00 0.00 64.00 -32.00 64.00 32.00 33.00 0.00 64.00 64.00 64.00 0.00 32.00 65.00 33.00 0.00 32.00 0.00 64.00 64.00 64.00 64.00 97.00 32.00 32.00 -96.00 96.00 -32.00 33.00 32.00 32.00 0.00 96.00 0.00 32.00 -32.00 32.00 64.00 33.00 0.00 32.00 0.00 64.00 64.00 32.00 33.00 0.00 64.00 64.00 0.00 0.00 32.00 33.00 -32.00 64.00 32.00 32.00 -32.00 32.00 0.00 0.00 64.00 32.00 0.00 0.00 -32.00 65.00 0.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 32.00 0.00 128.00 64.00 0.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 64.00 32.00 97.00 -128.00 96.00 -65.00 64.00 -32.00 0.00 -96.00 -96.00 -65.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 -64.00 -193.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -33.00 -128.00 -64.00 32.00 -64.00 0.00 -32.00 -32.00 0.00 -65.00 -65.00 -96.00 33.00 -32.00 -97.00 32.00 -32.00 -32.00 0.00 0.00 -64.00 -32.00 -33.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 -96.00 -64.00 0.00 -97.00 0.00 -32.00 -65.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 64.00 -32.00 32.00 -64.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -64.00 -33.00 32.00 -32.00 -64.00 -64.00 32.00 -64.00 0.00 -33.00 -32.00 -32.00 -32.00 -64.00 -33.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 65.00 -64.00 0.00 -65.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 64.00 32.00 64.00 32.00 33.00 97.00 32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -33.00 0.00 0.00 -64.00 65.00 -32.00 0.00 -33.00 32.00 -64.00 32.00 0.00 32.00 -64.00 64.00 -32.00 33.00 -32.00 0.00 -33.00 -33.00 0.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 0.00 -64.00 96.00 -64.00 0.00 -65.00 33.00 -32.00 32.00 -32.00 -65.00 -32.00 0.00 -64.00 33.00 -33.00 32.00 -32.00 32.00 0.00 161.00 -32.00 64.00 32.00 0.00 32.00 64.00 0.00 32.00 33.00 33.00 32.00 32.00 32.00 32.00 64.00 32.00 0.00 32.00 32.00 65.00 0.00 0.00 65.00 96.00 32.00 225.00 32.00 32.00 -32.00 64.00 32.00 33.00 64.00 -33.00 32.00 33.00 33.00 64.00 96.00 129.00 32.00 64.00 0.00 32.00 -96.00 97.00 32.00 96.00 -32.00 64.00 32.00 65.00 0.00 64.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -33.00 32.00 33.00 65.00 -33.00 32.00 65.00 96.00 -32.00 97.00 0.00 0.00 -33.00 129.00 -32.00 96.00 32.00 257.00 0.00 193.00 97.00 193.00 -161.00 -64.00 -128.00 193.00 -193.00 193.00 0.00 192.00 64.00 129.00 -97.00 161.00 -193.00 257.00 -32.00 97.00 193.00 192.00 -128.00 258.00 -193.00 257.00 64.00 64.00 289.00 97.00 97.00 225.00 321.00 -32.00 33.00 0.00 64.00 32.00 32.00 32.00 32.00 257.00 289.00 32.00 65.00 32.00 96.00 -32.00 0.00 -32.00 65.00 32.00 32.00 -32.00 32.00 0.00 96.00 32.00 97.00 97.00 96.00 32.00 32.00 32.00 65.00 32.00 0.00 0.00 64.00 -32.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 -32.00 32.00 -65.00 32.00 0.00 64.00 -32.00 0.00 32.00 32.00 -32.00 65.00 32.00 64.00 -64.00 32.00 32.00 129.00 -32.00 0.00 0.00 64.00 32.00 32.00 0.00 65.00 32.00 64.00 32.00 64.00 33.00 32.00 32.00 32.00 64.00 33.00 -32.00 64.00 64.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 33.00 -32.00 64.00 -32.00 0.00 32.00 161.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 64.00 0.00 129.00 32.00 32.00 33.00 32.00 0.00 32.00 32.00 0.00 -97.00 65.00 32.00 64.00 -32.00 32.00 0.00 32.00 32.00 33.00 0.00 32.00 129.00 32.00 97.00 0.00 0.00 -32.00 32.00 32.00 64.00 0.00 32.00 32.00 97.00 -32.00 32.00 0.00 96.00 -64.00 65.00 32.00 32.00 -32.00 96.00 32.00 64.00 -32.00 0.00 32.00 161.00 32.00 32.00 32.00 33.00 32.00 64.00 32.00 32.00 0.00 32.00 33.00 65.00 -33.00 0.00 -32.00 64.00 32.00 0.00 -32.00 32.00 0.00 129.00 32.00 64.00 -32.00 32.00 0.00 64.00 0.00 65.00 65.00 32.00 -97.00 128.00 64.00 0.00 33.00 33.00 0.00 0.00 32.00 64.00 0.00 32.00 -32.00 0.00 32.00 32.00 0.00 64.00 0.00 -32.00 32.00 32.00 0.00 33.00 32.00 32.00 0.00 0.00 32.00 64.00 -32.00 -32.00 32.00 -32.00 32.00 64.00 32.00 32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 33.00 -32.00 32.00 32.00 32.00 0.00 32.00 65.00 -32.00 32.00 32.00 64.00 0.00 0.00 64.00 64.00 32.00 65.00 33.00 32.00 96.00 32.00 32.00 0.00 -96.00 32.00 -65.00 32.00 0.00 0.00 65.00 32.00 0.00 65.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 64.00 64.00 0.00 -32.00 32.00 65.00 65.00 0.00 32.00 -33.00 0.00 0.00 32.00 33.00 0.00 32.00 64.00 32.00 -32.00 32.00 -32.00 0.00 32.00 -32.00 64.00 -32.00 65.00 0.00 32.00 96.00 0.00 65.00 129.00 -33.00 64.00 33.00 32.00 -33.00 64.00 0.00 32.00 65.00 0.00 -32.00 -32.00 64.00 -32.00 32.00 32.00 32.00 0.00 64.00 -64.00 65.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 64.00 -32.00 32.00 64.00 0.00 96.00 0.00 65.00 65.00 -32.00 64.00 32.00 32.00 -65.00 64.00 33.00 0.00 64.00 33.00 -32.00 64.00 32.00 32.00 0.00 -32.00 64.00 0.00 32.00 -32.00 33.00 0.00 32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 97.00 0.00 32.00 65.00 64.00 0.00 0.00 32.00 -32.00 128.00 0.00 32.00 32.00 -32.00 97.00 32.00 64.00 -32.00 0.00 32.00 -32.00 33.00 0.00 32.00 96.00 -32.00 32.00 32.00 65.00 0.00 32.00 -32.00 -32.00 -33.00 -65.00 -64.00 32.00 -32.00 65.00 0.00 64.00 32.00 32.00 64.00 32.00 33.00 33.00 0.00 32.00 -65.00 32.00 65.00 129.00 32.00 0.00 -32.00 64.00 -65.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 96.00 64.00 0.00 32.00 -96.00 97.00 32.00 64.00 32.00 32.00 64.00 -64.00 33.00 32.00 0.00 32.00 64.00 0.00 32.00 -129.00 64.00 -32.00 32.00 65.00 -32.00 64.00 32.00 96.00 -32.00 33.00 -64.00 32.00 32.00 64.00 64.00 0.00 33.00 -64.00 193.00 -32.00 96.00 96.00 32.00 -32.00 0.00 -32.00 97.00 0.00 32.00 32.00 32.00 96.00 -64.00 32.00 -65.00 33.00 0.00 128.00 33.00 0.00 96.00 32.00 32.00 65.00 -32.00 96.00 -64.00 64.00 0.00 33.00 32.00 64.00 64.00 0.00 257.00 -129.00 161.00 32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 0.00 97.00 33.00 96.00 64.00 64.00 32.00 65.00 -32.00 96.00 0.00 32.00 -32.00 32.00 -65.00 0.00 -64.00 -32.00 -32.00 0.00 -64.00 65.00 0.00 64.00 0.00 64.00 0.00 161.00 32.00 32.00 64.00 64.00 0.00 65.00 32.00 0.00 32.00 64.00 0.00 32.00 -32.00 32.00 0.00 32.00 32.00 97.00 33.00 32.00 32.00 32.00 0.00 129.00 -32.00 32.00 32.00 97.00 225.00 160.00 32.00 32.00 257.00 129.00 64.00 64.00 65.00 129.00 96.00 64.00 193.00 129.00 32.00 32.00 32.00 0.00 33.00 32.00 32.00 97.00 128.00 96.00 33.00 64.00 32.00 97.00 32.00 32.00 64.00 -32.00 97.00 64.00 0.00 32.00 -33.00 32.00 -32.00 193.00 -128.00 161.00 -32.00 97.00 0.00 64.00 32.00 64.00 0.00 65.00 -32.00 32.00 -65.00 64.00 32.00 32.00 -64.00 97.00 64.00 32.00 33.00 32.00 -65.00 161.00 32.00 128.00 0.00 65.00 0.00 32.00 -64.00 96.00 32.00 97.00 97.00 64.00 32.00 96.00 32.00 129.00 96.00 64.00 97.00 161.00 -32.00 32.00 -32.00 97.00 32.00 161.00 64.00 32.00 64.00 96.00 97.00 64.00 32.00 65.00 32.00 32.00 0.00 96.00 32.00 65.00 97.00 32.00 -32.00 193.00 64.00 64.00 96.00 64.00 33.00 33.00 0.00 160.00 32.00 161.00 32.00 129.00 128.00 353.00 33.00 32.00 128.00 33.00 129.00 -33.00 96.00 33.00 32.00 32.00 33.00 64.00 32.00 64.00 353.00 258.00 33.00 128.00 64.00 65.00 96.00 64.00 65.00 0.00 64.00 64.00 32.00 64.00 0.00 129.00 -64.00 129.00 0.00 96.00 64.00 129.00 32.00 32.00 -128.00 193.00 64.00 64.00 -32.00 97.00 64.00 96.00 64.00 64.00 0.00 65.00 0.00 32.00 129.00 193.00 64.00 32.00 65.00 0.00 96.00 -64.00 129.00 -33.00 160.00 0.00 65.00 65.00 32.00 161.00 0.00 96.00 0.00 96.00 0.00 33.00 32.00 64.00 32.00 64.00 0.00 97.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 -96.00 161.00 0.00 65.00 0.00 64.00 64.00 32.00 -129.00 161.00 -32.00 64.00 65.00 0.00 64.00 0.00 96.00 -32.00 97.00 -32.00 32.00 0.00 64.00 -65.00 32.00 33.00 65.00 64.00 64.00 32.00 64.00 96.00 32.00 65.00 -32.00 128.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 -32.00 32.00 0.00 32.00 0.00 64.00 96.00 97.00 0.00 160.00 32.00 33.00 -32.00 96.00 -64.00 64.00 32.00 32.00 32.00 33.00 96.00 -65.00 65.00 65.00 128.00 32.00 33.00 32.00 96.00 225.00 129.00 0.00 128.00 64.00 193.00 0.00 64.00 33.00 226.00 0.00 64.00 0.00 64.00 64.00 129.00 0.00 0.00 32.00 64.00 161.00 -32.00 96.00 0.00 64.00 32.00 33.00 32.00 0.00 129.00 64.00 96.00 -32.00 32.00 -65.00 0.00 -32.00 -64.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 65.00 -33.00 128.00 -32.00 97.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -161.00 32.00 -32.00 32.00 0.00 64.00 32.00 0.00 33.00 0.00 128.00 0.00 32.00 33.00 0.00 32.00 32.00 0.00 -32.00 64.00 -128.00 64.00 -32.00 129.00 128.00 32.00 32.00 386.00 -32.00 129.00 -96.00 353.00 -354.00 64.00 -97.00 33.00 -64.00 0.00 -96.00 -33.00 -97.00 -32.00 -353.00 32.00 0.00 0.00 -161.00 33.00 -322.00 0.00 -128.00 0.00 -32.00 32.00 -33.00 32.00 -64.00 32.00 -32.00 322.00 -547.00 128.00 -128.00 193.00 -225.00 64.00 -65.00 129.00 -96.00 161.00 -161.00 96.00 -193.00 65.00 -225.00 64.00 -64.00 225.00 -225.00 32.00 -258.00 0.00 -32.00 32.00 -64.00 65.00 -96.00 32.00 -33.00 96.00 -96.00 65.00 -97.00 128.00 -160.00 64.00 -129.00 161.00 -257.00 193.00 -64.00 290.00 -33.00 96.00 -64.00 32.00 0.00 97.00 -64.00 96.00 -97.00 64.00 -96.00 32.00 -32.00 97.00 -129.00 32.00 0.00 0.00 -32.00 97.00 -129.00 32.00 -32.00 193.00 -161.00 64.00 -32.00 64.00 0.00 418.00 -128.00 161.00 -33.00 193.00 -96.00 354.00 -257.00 96.00 -129.00 97.00 -96.00 128.00 -97.00 97.00 -96.00 96.00 -193.00 97.00 -193.00 64.00 -129.00 96.00 -289.00 97.00 -129.00 32.00 -96.00 32.00 -257.00 96.00 -193.00 65.00 -129.00 128.00 -129.00 33.00 0.00 32.00 -32.00 225.00 -160.00 161.00 -65.00 321.00 -64.00 64.00 -32.00 161.00 -32.00 193.00 0.00 289.00 0.00 33.00 289.00 160.00 129.00 65.00 225.00 32.00 321.00 -32.00 97.00 -32.00 418.00 0.00 128.00 -65.00 193.00 225.00 0.00 161.00 65.00 32.00 0.00 32.00 0.00 33.00 -33.00 64.00 33.00 64.00 32.00 0.00 -32.00 97.00 32.00 32.00 32.00 289.00 -129.00 32.00 -32.00 65.00 64.00 64.00 -32.00 64.00 0.00 65.00 0.00 96.00 -64.00 64.00 64.00 65.00 65.00 0.00 -33.00 -33.00 -64.00 0.00 -32.00 33.00 -32.00 0.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 161.00 -32.00 32.00 64.00 32.00 0.00 -32.00 64.00 32.00 0.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 96.00 65.00 65.00 225.00 64.00 96.00 129.00 225.00 193.00 290.00 225.00 321.00 32.00 32.00 32.00 33.00 32.00 -33.00 64.00 33.00 33.00 32.00 64.00 0.00 0.00 32.00 128.00 32.00 0.00 32.00 33.00 32.00 0.00 33.00 -33.00 32.00 -32.00 0.00 0.00 32.00 97.00 0.00 32.00 64.00 1704.00 772.00 64.00 128.00 193.00 97.00 129.00 96.00 64.00 32.00 64.00 0.00 33.00 0.00 0.00 -32.00 96.00 -32.00 129.00 0.00 64.00 32.00 32.00 -32.00 64.00 32.00 33.00 -32.00 64.00 0.00 32.00 32.00 64.00 65.00 33.00 0.00 96.00 64.00 129.00 0.00 64.00 32.00 64.00 0.00 65.00 -32.00 32.00 -32.00 160.00 -65.00 161.00 0.00 32.00 33.00 33.00 -33.00 96.00 33.00 32.00 32.00 32.00 -32.00 97.00 0.00 64.00 0.00 64.00 32.00 161.00 -65.00 161.00 65.00 64.00 64.00 65.00 0.00 32.00 32.00 32.00 32.00 32.00 33.00 32.00 128.00 -32.00 290.00 0.00 32.00 -193.00 160.00 -64.00 97.00 -32.00 257.00 -97.00 129.00 1126.00 386.00 1125.00 418.00 0.00 64.00 0.00 96.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 -64.00 32.00 0.00 0.00 -32.00 32.00 -64.00 33.00 -32.00 0.00 -65.00 0.00 -64.00 64.00 -64.00 64.00 32.00 65.00 -64.00 32.00 32.00 32.00 -65.00 0.00 -64.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -64.00 32.00 -32.00 65.00 0.00 96.00 0.00 32.00 96.00 0.00 33.00 0.00 32.00 64.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 32.00 97.00 -32.00 64.00 -32.00 96.00 -32.00 32.00 0.00 33.00 -32.00 64.00 32.00 0.00 32.00 -32.00 32.00 -32.00 32.00 64.00 33.00 0.00 64.00 -64.00 0.00 -97.00 0.00 -32.00 32.00 -32.00 -32.00 -97.00 0.00 -64.00 64.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 64.00 -64.00 65.00 32.00 0.00 32.00 0.00 32.00 -65.00 65.00 0.00 32.00 32.00 0.00 97.00 -32.00 32.00 32.00 -32.00 32.00 64.00 129.00 -32.00 96.00 32.00 -32.00 32.00 -64.00 0.00 -65.00 33.00 -32.00 0.00 -32.00 -33.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 97.00 32.00 32.00 -64.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 0.00 65.00 32.00 -32.00 32.00 64.00 128.00 -32.00 33.00 -32.00 64.00 64.00 32.00 0.00 -32.00 32.00 0.00 97.00 -64.00 64.00 32.00 32.00 96.00 32.00 65.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 -32.00 128.00 32.00 0.00 32.00 32.00 32.00 -32.00 33.00 32.00 160.00 -289.00 -32.00 -96.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 97.00 32.00 0.00 64.00 64.00 32.00 64.00 97.00 -32.00 64.00 0.00 32.00 32.00 32.00 33.00 0.00 -33.00 65.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 32.00 97.00 193.00 0.00 32.00 -33.00 97.00 65.00 -32.00 32.00 32.00 0.00 -64.00 0.00 -97.00 0.00 -129.00 -32.00 -225.00 32.00 -128.00 -64.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 0.00 160.00 -64.00 97.00 32.00 32.00 32.00 -32.00 129.00 0.00 32.00 -32.00 32.00 0.00 64.00 32.00 -64.00 32.00 64.00 0.00 -32.00 32.00 64.00 32.00 0.00 65.00 -64.00 0.00 -64.00 96.00 0.00 0.00 -32.00 -64.00 -32.00 0.00 -33.00 0.00 -32.00 128.00 0.00 33.00 0.00 96.00 -32.00 32.00 -32.00 97.00 32.00 96.00 32.00 -32.00 32.00 0.00 33.00 -32.00 -65.00 0.00 32.00 32.00 65.00 -32.00 0.00 0.00 64.00 0.00 32.00 64.00 -32.00 32.00 64.00 32.00 -32.00 33.00 32.00 32.00 -32.00 -65.00 -64.00 33.00 -32.00 32.00 32.00 0.00 -32.00 64.00 0.00 129.00 64.00 64.00 129.00 -64.00 64.00 0.00 32.00 -32.00 0.00 -65.00 -32.00 -32.00 32.00 -32.00 96.00 96.00 -32.00 -32.00 32.00 32.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 64.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 32.00 65.00 -32.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 64.00 -32.00 32.00 32.00 193.00 -32.00 0.00 -33.00 64.00 33.00 129.00 0.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 64.00 0.00 -96.00 -32.00 0.00 0.00 -33.00 64.00 -160.00 32.00 64.00 0.00 32.00 0.00 -32.00 0.00 -64.00 0.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 0.00 33.00 0.00 64.00 -32.00 0.00 -32.00 96.00 -32.00 0.00 32.00 0.00 32.00 65.00 32.00 32.00 96.00 -97.00 33.00 33.00 32.00 32.00 32.00 32.00 32.00 -32.00 0.00 32.00 32.00 -97.00 65.00 65.00 -33.00 32.00 33.00 -32.00 32.00 32.00 64.00 0.00 32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -64.00 32.00 -97.00 -32.00 -129.00 64.00 33.00 -32.00 128.00 0.00 193.00 -32.00 97.00 0.00 32.00 32.00 0.00 32.00 -64.00 65.00 64.00 32.00 0.00 -64.00 -64.00 -33.00 0.00 0.00 -65.00 33.00 -32.00 0.00 -129.00 0.00 -64.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 96.00 -64.00 33.00 32.00 64.00 -65.00 32.00 0.00 64.00 0.00 0.00 33.00 65.00 128.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 32.00 0.00 -32.00 64.00 -64.00 32.00 0.00 32.00 32.00 33.00 32.00 -65.00 32.00 32.00 0.00 33.00 32.00 0.00 0.00 -33.00 33.00 33.00 0.00 32.00 -33.00 32.00 33.00 32.00 32.00 129.00 32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 0.00 0.00 32.00 97.00 64.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 0.00 0.00 32.00 33.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 65.00 -32.00 64.00 0.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 32.00 32.00 0.00 32.00 33.00 0.00 0.00 -96.00 64.00 -33.00 -32.00 0.00 -65.00 0.00 0.00 -32.00 33.00 0.00 64.00 0.00 64.00 65.00 0.00 32.00 -32.00 32.00 0.00 32.00 32.00 -32.00 0.00 129.00 -128.00 0.00 96.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 0.00 32.00 -64.00 65.00 32.00 0.00 64.00 -65.00 32.00 32.00 -32.00 33.00 -64.00 64.00 0.00 64.00 32.00 0.00 0.00 -64.00 32.00 -32.00 0.00 32.00 64.00 -32.00 0.00 -65.00 33.00 0.00 32.00 97.00 -32.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 -65.00 32.00 0.00 65.00 0.00 32.00 33.00 32.00 0.00 -64.00 32.00 -65.00 32.00 -64.00 96.00 97.00 -64.00 32.00 0.00 32.00 32.00 32.00 0.00 -64.00 32.00 -32.00 0.00 -65.00 -32.00 0.00 0.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -96.00 64.00 -32.00 65.00 0.00 32.00 64.00 -32.00 -97.00 32.00 -64.00 32.00 32.00 32.00 32.00 32.00 161.00 32.00 161.00 0.00 32.00 -32.00 64.00 0.00 33.00 0.00 -33.00 65.00 -64.00 32.00 -32.00 0.00 -64.00 -32.00 -97.00 32.00 -161.00 96.00 -32.00 32.00 32.00 32.00 97.00 65.00 32.00 -32.00 32.00 32.00 0.00 0.00 -64.00 32.00 0.00 0.00 32.00 32.00 -32.00 -32.00 -32.00 -64.00 0.00 -33.00 -129.00 0.00 -64.00 65.00 0.00 32.00 64.00 32.00 -32.00 -64.00 -64.00 64.00 -32.00 0.00 -33.00 32.00 0.00 65.00 33.00 0.00 32.00 -33.00 0.00 0.00 32.00 33.00 32.00 96.00 32.00 32.00 32.00 -32.00 32.00 32.00 33.00 32.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -64.00 32.00 -32.00 -64.00 0.00 32.00 32.00 64.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 65.00 97.00 -97.00 32.00 32.00 32.00 33.00 0.00 32.00 64.00 0.00 65.00 -65.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -64.00 32.00 -32.00 0.00 -33.00 33.00 65.00 64.00 32.00 0.00 -32.00 -32.00 96.00 0.00 32.00 -65.00 -32.00 65.00 32.00 0.00 65.00 0.00 96.00 -65.00 32.00 0.00 32.00 -32.00 0.00 97.00 33.00 32.00 32.00 0.00 32.00 0.00 64.00 -129.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 65.00 64.00 -32.00 33.00 0.00 32.00 0.00 128.00 32.00 97.00 0.00 32.00 0.00 -32.00 32.00 -97.00 0.00 33.00 0.00 -65.00 32.00 0.00 0.00 32.00 32.00 -64.00 -64.00 -64.00 32.00 -65.00 32.00 33.00 0.00 -97.00 32.00 -32.00 33.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 65.00 -33.00 64.00 0.00 64.00 33.00 0.00 32.00 33.00 32.00 32.00 -97.00 32.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 128.00 -32.00 33.00 64.00 0.00 65.00 -33.00 32.00 -64.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 64.00 0.00 33.00 -32.00 0.00 -32.00 32.00 32.00 32.00 32.00 -32.00 0.00 32.00 0.00 32.00 33.00 0.00 -33.00 32.00 -32.00 -32.00 32.00 64.00 33.00 33.00 -33.00 0.00 -32.00 0.00 32.00 -33.00 -64.00 33.00 -32.00 0.00 -32.00 64.00 128.00 -32.00 33.00 32.00 0.00 128.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 32.00 33.00 0.00 64.00 32.00 -32.00 0.00 32.00 -32.00 64.00 -32.00 0.00 32.00 32.00 32.00 65.00 0.00 -65.00 33.00 -64.00 64.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 96.00 -32.00 65.00 32.00 0.00 96.00 -32.00 32.00 -33.00 0.00 -32.00 33.00 0.00 64.00 32.00 0.00 0.00 -64.00 65.00 32.00 0.00 -32.00 32.00 -65.00 -32.00 -128.00 -65.00 -32.00 33.00 0.00 0.00 -65.00 32.00 0.00 32.00 -32.00 64.00 0.00 0.00 129.00 32.00 96.00 0.00 64.00 32.00 33.00 33.00 0.00 -33.00 -97.00 0.00 -64.00 33.00 32.00 0.00 -64.00 64.00 -65.00 32.00 -32.00 32.00 0.00 -32.00 32.00 64.00 65.00 0.00 96.00 0.00 64.00 -64.00 65.00 0.00 64.00 32.00 0.00 32.00 0.00 65.00 0.00 64.00 64.00 32.00 -32.00 -64.00 -64.00 -97.00 0.00 0.00 -32.00 65.00 -32.00 0.00 -65.00 0.00 -96.00 32.00 -32.00 64.00 32.00 0.00 32.00 32.00 96.00 -32.00 33.00 32.00 0.00 0.00 -33.00 65.00 0.00 -65.00 -32.00 33.00 -32.00 -33.00 -64.00 -64.00 -64.00 64.00 -65.00 33.00 32.00 64.00 -64.00 32.00 32.00 0.00 -64.00 -32.00 32.00 -64.00 -32.00 64.00 -64.00 0.00 -32.00 32.00 -97.00 32.00 0.00 0.00 -32.00 32.00 64.00 -32.00 -64.00 97.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 0.00 -65.00 64.00 -32.00 32.00 32.00 0.00 -32.00 33.00 0.00 64.00 0.00 64.00 -64.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 32.00 0.00 161.00 -65.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 64.00 96.00 -32.00 -32.00 97.00 -64.00 32.00 -32.00 -32.00 32.00 64.00 -32.00 32.00 -32.00 -32.00 0.00 64.00 -97.00 0.00 97.00 0.00 64.00 -32.00 0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 97.00 -32.00 32.00 32.00 0.00 32.00 96.00 0.00 97.00 -64.00 0.00 -32.00 64.00 -97.00 161.00 -64.00 64.00 0.00 97.00 -64.00 64.00 0.00 64.00 0.00 32.00 32.00 -64.00 64.00 -32.00 32.00 -64.00 33.00 -32.00 0.00 -97.00 64.00 -96.00 161.00 -129.00 32.00 -97.00 0.00 -160.00 32.00 -65.00 32.00 -32.00 64.00 0.00 33.00 32.00 -33.00 65.00 0.00 32.00 0.00 96.00 0.00 32.00 0.00 33.00 0.00 32.00 -64.00 64.00 -64.00 193.00 -97.00 97.00 32.00 0.00 65.00 -33.00 64.00 97.00 0.00 32.00 32.00 0.00 -64.00 -161.00 32.00 -32.00 32.00 -161.00 32.00 0.00 33.00 32.00 32.00 193.00 -32.00 33.00 32.00 0.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 -96.00 -32.00 -65.00 32.00 -64.00 32.00 -32.00 161.00 -97.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 64.00 32.00 0.00 64.00 -128.00 97.00 0.00 96.00 32.00 64.00 0.00 33.00 32.00 0.00 64.00 64.00 -64.00 129.00 0.00 128.00 -32.00 97.00 -32.00 96.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -96.00 97.00 64.00 128.00 -129.00 129.00 65.00 161.00 96.00 0.00 0.00 96.00 0.00 32.00 129.00 -32.00 0.00 32.00 -32.00 65.00 -33.00 96.00 -32.00 32.00 -32.00 129.00 -129.00 96.00 97.00 64.00 0.00 33.00 -193.00 160.00 64.00 65.00 32.00 32.00 65.00 64.00 0.00 65.00 64.00 289.00 -96.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 -65.00 97.00 0.00 96.00 0.00 33.00 33.00 32.00 0.00 64.00 -33.00 64.00 -64.00 65.00 -96.00 32.00 -33.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -97.00 32.00 -128.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 128.00 32.00 161.00 32.00 32.00 64.00 -64.00 33.00 32.00 32.00 0.00 96.00 -32.00 161.00 32.00 32.00 64.00 32.00 32.00 32.00 65.00 -160.00 225.00 0.00 32.00 64.00 0.00 32.00 129.00 -64.00 289.00 -65.00 161.00 0.00 96.00 -64.00 97.00 -32.00 32.00 -32.00 64.00 0.00 97.00 32.00 64.00 0.00 96.00 -32.00 32.00 -97.00 97.00 0.00 32.00 65.00 32.00 -65.00 65.00 -96.00 32.00 -64.00 64.00 -65.00 129.00 0.00 32.00 -64.00 32.00 -64.00 0.00 -33.00 96.00 -64.00 33.00 -64.00 -33.00 -32.00 -64.00 -97.00 32.00 0.00 32.00 65.00 65.00 -33.00 160.00 -32.00 33.00 0.00 96.00 0.00 64.00 -32.00 33.00 -128.00 96.00 0.00 64.00 0.00 32.00 64.00 33.00 32.00 0.00 96.00 -129.00 65.00 32.00 0.00 32.00 -32.00 65.00 -33.00 64.00 -64.00 64.00 0.00 97.00 0.00 96.00 0.00 32.00 32.00 0.00 -32.00 65.00 0.00 64.00 32.00 64.00 -32.00 65.00 32.00 32.00 65.00 32.00 0.00 32.00 -225.00 64.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -65.00 32.00 33.00 129.00 -161.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 0.00 129.00 -32.00 32.00 -65.00 -128.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 32.00 -64.00 32.00 0.00 33.00 0.00 32.00 -65.00 -32.00 0.00 32.00 -64.00 32.00 -64.00 96.00 32.00 65.00 0.00 32.00 64.00 -32.00 0.00 32.00 0.00 32.00 32.00 96.00 33.00 -32.00 32.00 0.00 0.00 64.00 0.00 65.00 0.00 64.00 32.00 64.00 64.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 97.00 0.00 32.00 33.00 0.00 32.00 32.00 -32.00 0.00 0.00 32.00 64.00 -32.00 0.00 32.00 -32.00 0.00 64.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 -64.00 -64.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 33.00 -64.00 32.00 -64.00 -32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -33.00 32.00 -32.00 -32.00 -64.00 0.00 -64.00 32.00 0.00 32.00 32.00 0.00 64.00 65.00 -32.00 0.00 32.00 64.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 32.00 -64.00 0.00 0.00 32.00 32.00 0.00 32.00 33.00 -32.00 64.00 -64.00 -32.00 -32.00 32.00 0.00 32.00 64.00 32.00 -64.00 65.00 32.00 32.00 -64.00 32.00 0.00 96.00 32.00 65.00 -32.00 32.00 0.00 96.00 -33.00 -32.00 -96.00 32.00 32.00 129.00 -32.00 32.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 32.00 64.00 65.00 -32.00 0.00 64.00 32.00 32.00 -32.00 65.00 -33.00 0.00 -64.00 0.00 32.00 96.00 -32.00 32.00 -64.00 -64.00 -65.00 0.00 97.00 64.00 0.00 32.00 -64.00 33.00 64.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 32.00 32.00 32.00 -32.00 65.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 0.00 128.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 65.00 64.00 -65.00 65.00 65.00 32.00 0.00 64.00 -65.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 -32.00 0.00 65.00 0.00 32.00 -32.00 0.00 -33.00 -65.00 -32.00 0.00 32.00 33.00 0.00 32.00 -64.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 64.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 -32.00 0.00 96.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 65.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -33.00 0.00 0.00 64.00 33.00 0.00 32.00 64.00 -65.00 0.00 33.00 33.00 -33.00 0.00 0.00 32.00 33.00 0.00 0.00 64.00 -97.00 -32.00 32.00 128.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 0.00 32.00 64.00 97.00 -64.00 0.00 32.00 32.00 -64.00 32.00 -32.00 32.00 -65.00 0.00 0.00 33.00 -64.00 32.00 0.00 64.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 33.00 -32.00 32.00 32.00 64.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 33.00 33.00 -33.00 32.00 33.00 0.00 -33.00 0.00 33.00 32.00 -33.00 32.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 33.00 -32.00 32.00 32.00 -97.00 65.00 32.00 128.00 0.00 65.00 -64.00 32.00 32.00 32.00 0.00 64.00 -32.00 65.00 0.00 64.00 0.00 64.00 0.00 32.00 -64.00 33.00 0.00 64.00 0.00 32.00 -65.00 32.00 33.00 64.00 -33.00 65.00 -64.00 32.00 -32.00 96.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 97.00 0.00 32.00 -32.00 -32.00 -64.00 64.00 -64.00 32.00 0.00 97.00 -33.00 32.00 -32.00 0.00 0.00 64.00 0.00 32.00 -32.00 0.00 0.00 65.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 -33.00 0.00 -64.00 0.00 -32.00 64.00 -97.00 65.00 0.00 32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 0.00 0.00 33.00 -33.00 0.00 33.00 -33.00 -65.00 0.00 -32.00 33.00 0.00 64.00 -32.00 0.00 0.00 64.00 0.00 32.00 -64.00 65.00 0.00 32.00 -33.00 32.00 33.00 64.00 0.00 65.00 32.00 32.00 -32.00 32.00 32.00 64.00 0.00 32.00 -32.00 32.00 -33.00 -32.00 -64.00 32.00 32.00 33.00 -32.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 -32.00 0.00 32.00 129.00 -32.00 0.00 -32.00 0.00 -65.00 96.00 -32.00 0.00 -32.00 65.00 -64.00 -32.00 0.00 64.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 -128.00 65.00 32.00 32.00 -32.00 32.00 0.00 64.00 -32.00 64.00 32.00 0.00 -65.00 65.00 0.00 64.00 -64.00 64.00 0.00 65.00 -64.00 96.00 -65.00 97.00 -160.00 160.00 -65.00 193.00 -128.00 161.00 -32.00 32.00 -65.00 32.00 -64.00 33.00 -64.00 96.00 -129.00 96.00 -96.00 -32.00 -65.00 0.00 -64.00 0.00 -64.00 -32.00 -32.00 32.00 -33.00 -64.00 -64.00 0.00 -96.00 -32.00 -65.00 64.00 -64.00 97.00 -611.00 482.00 -386.00 321.00 -160.00 129.00 -97.00 64.00 -547.00 450.00 -64.00 65.00 -900.00 707.00 -97.00 64.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 65.00 -96.00 64.00 -33.00 64.00 -450.00 322.00 -932.00 772.00 0.00 32.00 0.00 32.00 32.00 32.00 64.00 32.00 65.00 0.00 0.00 32.00 193.00 0.00 128.00 32.00 32.00 0.00 65.00 129.00 128.00 32.00 65.00 0.00 160.00 0.00 225.00 32.00 65.00 0.00 96.00 -32.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 0.00 96.00 -32.00 97.00 32.00 32.00 -64.00 32.00 0.00 64.00 32.00 33.00 64.00 32.00 32.00 64.00 65.00 0.00 32.00 0.00 64.00 32.00 64.00 64.00 97.00 0.00 64.00 0.00 -32.00 33.00 32.00 96.00 129.00 32.00 32.00 65.00 32.00 64.00 32.00 161.00 32.00 96.00 0.00 64.00 65.00 33.00 32.00 64.00 32.00 193.00 129.00 0.00 64.00 0.00 96.00 -32.00 65.00 -97.00 193.00 -64.00 96.00 -64.00 32.00 -33.00 32.00 -32.00 0.00 -96.00 32.00 -225.00 -32.00 -65.00 32.00 -32.00 65.00 -32.00 64.00 0.00 129.00 0.00 32.00 32.00 225.00 0.00 32.00 32.00 32.00 65.00 97.00 128.00 128.00 0.00 32.00 65.00 97.00 0.00 32.00 0.00 97.00 -97.00 64.00 -193.00 32.00 -64.00 32.00 -64.00 64.00 -65.00 97.00 -32.00 64.00 0.00 65.00 32.00 32.00 129.00 32.00 96.00 128.00 0.00 65.00 -32.00 96.00 -64.00 65.00 -129.00 96.00 -160.00 64.00 -129.00 -32.00 -64.00 32.00 -65.00 65.00 -64.00 64.00 0.00 96.00 0.00 97.00 32.00 96.00 32.00 161.00 33.00 64.00 -33.00 33.00 0.00 32.00 33.00 64.00 64.00 32.00 64.00 32.00 32.00 32.00 32.00 97.00 -32.00 128.00 -32.00 33.00 -64.00 -33.00 -129.00 -96.00 -96.00 -32.00 -258.00 0.00 -32.00 32.00 -64.00 96.00 -32.00 65.00 -97.00 96.00 -64.00 32.00 -225.00 193.00 -64.00 129.00 -32.00 32.00 -65.00 97.00 0.00 96.00 -64.00 64.00 -32.00 97.00 0.00 64.00 64.00 193.00 0.00 129.00 -32.00 64.00 -32.00 64.00 -97.00 65.00 -257.00 64.00 -96.00 161.00 -65.00 64.00 -32.00 0.00 -161.00 64.00 -64.00 0.00 -64.00 0.00 -32.00 0.00 -129.00 0.00 -193.00 32.00 -64.00 32.00 -64.00 33.00 -129.00 64.00 -225.00 0.00 -64.00 96.00 -65.00 65.00 -193.00 128.00 -128.00 129.00 -193.00 96.00 -97.00 33.00 -32.00 0.00 -32.00 64.00 -96.00 96.00 -33.00 65.00 0.00 96.00 0.00 64.00 33.00 33.00 64.00 225.00 0.00 64.00 0.00 129.00 0.00 32.00 0.00 289.00 32.00 290.00 32.00 128.00 -32.00 97.00 -96.00 160.00 -33.00 129.00 -96.00 129.00 -96.00 128.00 -65.00 97.00 0.00 32.00 -64.00 64.00 -193.00 193.00 -129.00 161.00 -64.00 128.00 -64.00 33.00 -32.00 257.00 0.00 96.00 96.00 193.00 0.00 32.00 97.00 225.00 32.00 65.00 64.00 64.00 129.00 64.00 160.00 129.00 97.00 64.00 96.00 129.00 97.00 64.00 128.00 32.00 65.00 32.00 32.00 65.00 0.00 32.00 -32.00 64.00 -32.00 32.00 0.00 97.00 0.00 32.00 32.00 225.00 -32.00 129.00 0.00 128.00 -65.00 97.00 32.00 161.00 0.00 64.00 0.00 161.00 -32.00 64.00 -64.00 32.00 0.00 32.00 -32.00 32.00 0.00 97.00 -32.00 64.00 32.00 97.00 -32.00 160.00 -33.00 97.00 -32.00 64.00 -64.00 129.00 -96.00 193.00 -33.00 257.00 -32.00 96.00 -64.00 161.00 -64.00 64.00 -97.00 65.00 -128.00 64.00 -33.00 0.00 -128.00 193.00 -32.00 96.00 -33.00 65.00 -32.00 289.00 0.00 64.00 -64.00 97.00 -193.00 161.00 -32.00 96.00 -64.00 64.00 -33.00 129.00 -64.00 96.00 -225.00 322.00 -129.00 193.00 -96.00 128.00 -32.00 65.00 -97.00 32.00 -128.00 0.00 -193.00 64.00 -225.00 193.00 -65.00 32.00 -64.00 97.00 -64.00 64.00 -64.00 129.00 -33.00 96.00 -257.00 225.00 -32.00 97.00 0.00 64.00 -32.00 97.00 -64.00 128.00 -129.00 193.00 -32.00 32.00 0.00 64.00 0.00 33.00 -161.00 128.00 -129.00 161.00 -128.00 0.00 -32.00 193.00 -97.00 32.00 -64.00 64.00 -64.00 65.00 0.00 32.00 -33.00 128.00 0.00 33.00 0.00 128.00 0.00 32.00 -32.00 129.00 -128.00 129.00 -65.00 225.00 0.00 64.00 0.00 64.00 -32.00 0.00 0.00 32.00 64.00 97.00 33.00 96.00 -65.00 65.00 -32.00 64.00 0.00 96.00 -32.00 65.00 -32.00 64.00 -64.00 32.00 0.00 129.00 -65.00 96.00 0.00 97.00 -32.00 32.00 0.00 64.00 -193.00 225.00 -32.00 161.00 -32.00 97.00 -32.00 96.00 -32.00 32.00 -2926.00 -193.00 -1029.00 -64.00 -1158.00 -64.00 -739.00 -65.00 -3762.00 -257.00 -1737.00 -129.00 -257.00 0.00 -2154.00 -160.00 -2154.00 -161.00 -2476.00 -193.00 -2379.00 -193.00 -579.00 -32.00 -1254.00 -129.00 -3762.00 -289.00 -1736.00 -161.00 -547.00 -32.00 -1865.00 -161.00 -129.00 32.00 -64.00 0.00 -32.00 0.00 0.00 33.00 -96.00 64.00 -97.00 32.00 -32.00 0.00 -32.00 -64.00 0.00 -65.00 -32.00 -64.00 0.00 -161.00 0.00 -64.00 -32.00 0.00 -97.00 -257.00 -64.00 -97.00 -129.00 -32.00 -64.00 -32.00 -64.00 32.00 -33.00 0.00 -289.00 -32.00 -64.00 -32.00 -193.00 32.00 -65.00 -32.00 -64.00 -32.00 -64.00 -32.00 -32.00 -65.00 -65.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 -96.00 97.00 -129.00 0.00 -64.00 -32.00 -64.00 -65.00 -32.00 0.00 -97.00 -64.00 -32.00 -64.00 -97.00 -33.00 -96.00 -192.00 -97.00 -258.00 -321.00 -32.00 -32.00 -64.00 -32.00 -97.00 -32.00 -64.00 -33.00 -32.00 33.00 -161.00 32.00 -64.00 0.00 -32.00 -32.00 -32.00 -97.00 -161.00 -32.00 -161.00 0.00 -96.00 -97.00 -65.00 -32.00 -32.00 -32.00 32.00 -129.00 0.00 -128.00 -64.00 -64.00 -96.00 0.00 -65.00 0.00 -96.00 -65.00 -225.00 -128.00 -161.00 64.00 -129.00 0.00 -32.00 -96.00 32.00 -161.00 -64.00 -193.00 -64.00 -97.00 -32.00 -32.00 32.00 -225.00 -65.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -97.00 64.00 -64.00 32.00 -97.00 -32.00 -32.00 -96.00 -64.00 0.00 -32.00 32.00 -64.00 0.00 -65.00 -129.00 -161.00 -32.00 -96.00 0.00 -32.00 97.00 -161.00 0.00 -32.00 0.00 -32.00 -65.00 -129.00 0.00 -64.00 0.00 -32.00 65.00 -97.00 32.00 -161.00 64.00 -160.00 0.00 -32.00 0.00 -65.00 -96.00 -160.00 -65.00 -33.00 -128.00 -32.00 -33.00 -32.00 -32.00 -64.00 -32.00 -258.00 -225.00 -192.00 -128.00 -258.00 -129.00 -128.00 0.00 -97.00 -32.00 -353.00 -32.00 -97.00 -161.00 -289.00 -32.00 -193.00 -65.00 -418.00 -32.00 -64.00 -64.00 -33.00 -64.00 0.00 -33.00 -32.00 -32.00 -225.00 0.00 -32.00 -128.00 -322.00 -129.00 -225.00 -161.00 -160.00 -128.00 -258.00 -33.00 -64.00 -257.00 -161.00 -64.00 -32.00 0.00 32.00 -64.00 -64.00 -97.00 -129.00 0.00 -64.00 -32.00 -161.00 32.00 -193.00 -64.00 -257.00 -96.00 -96.00 -33.00 -129.00 -64.00 -32.00 -32.00 -64.00 -64.00 -129.00 -33.00 0.00 -96.00 -32.00 -97.00 -97.00 -160.00 -289.00 -65.00 -64.00 -64.00 -65.00 -128.00 -32.00 -33.00 0.00 -32.00 -96.00 -64.00 -32.00 -129.00 -161.00 -128.00 -354.00 -33.00 -161.00 -64.00 -96.00 0.00 -418.00 64.00 -129.00 97.00 -96.00 96.00 -161.00 258.00 -225.00 96.00 -32.00 64.00 -97.00 33.00 -64.00 32.00 -161.00 32.00 -32.00 128.00 0.00 33.00 0.00 0.00 -32.00 64.00 -32.00 32.00 -64.00 1897.00 -4212.00 740.00 -1672.00 418.00 -901.00 321.00 -771.00 1415.00 -3087.00 1093.00 -2379.00 322.00 -708.00 193.00 -450.00 128.00 -322.00 354.00 -803.00 193.00 -450.00 32.00 -33.00 547.00 -1221.00 353.00 -772.00 161.00 -418.00 257.00 -515.00 258.00 -578.00 128.00 -290.00 -32.00 -32.00 -64.00 0.00 -65.00 -32.00 -96.00 -32.00 -32.00 -32.00 0.00 -32.00 193.00 -258.00 32.00 -64.00 0.00 -96.00 32.00 -65.00 96.00 -225.00 33.00 -32.00 96.00 -64.00 161.00 -32.00 321.00 -161.00 193.00 -129.00 129.00 -96.00 128.00 -129.00 129.00 -225.00 161.00 -257.00 32.00 -65.00 0.00 -32.00 -225.00 65.00 -64.00 0.00 -65.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -97.00 -32.00 -128.00 161.00 -129.00 32.00 -64.00 32.00 -33.00 32.00 0.00 64.00 -32.00 0.00 -32.00 97.00 -64.00 32.00 -97.00 0.00 -96.00 -32.00 -64.00 32.00 -33.00 64.00 -96.00 65.00 -64.00 0.00 -65.00 -65.00 -32.00 -32.00 -64.00 32.00 -64.00 33.00 -33.00 32.00 -128.00 -161.00 -65.00 0.00 -32.00 0.00 -64.00 64.00 -96.00 32.00 -33.00 65.00 -64.00 32.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 128.00 -33.00 33.00 -32.00 -33.00 -64.00 0.00 -97.00 33.00 -128.00 0.00 -97.00 -65.00 -32.00 -64.00 -96.00 -32.00 -97.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 -129.00 96.00 -129.00 97.00 -96.00 32.00 -97.00 0.00 -32.00 0.00 -96.00 -32.00 -97.00 -32.00 -32.00 -65.00 -64.00 -64.00 0.00 -129.00 64.00 -193.00 0.00 -64.00 0.00 -64.00 -32.00 -97.00 -129.00 -96.00 -64.00 -32.00 -32.00 -32.00 0.00 -193.00 -32.00 -32.00 -32.00 -33.00 -97.00 -64.00 -64.00 -32.00 -64.00 -193.00 32.00 -32.00 -32.00 -97.00 -225.00 -64.00 -65.00 -32.00 -96.00 64.00 -65.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -65.00 -96.00 97.00 -64.00 -129.00 -97.00 0.00 -64.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -129.00 0.00 -32.00 -64.00 64.00 -33.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 -64.00 -64.00 32.00 -32.00 32.00 -33.00 0.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 64.00 -33.00 0.00 0.00 -32.00 -128.00 0.00 -32.00 96.00 -97.00 -64.00 -96.00 -32.00 32.00 64.00 -64.00 32.00 -97.00 -96.00 -96.00 64.00 -32.00 -64.00 64.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 -65.00 0.00 -64.00 97.00 -64.00 -33.00 32.00 -64.00 0.00 -32.00 -193.00 64.00 -32.00 -64.00 0.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -65.00 -96.00 65.00 32.00 -129.00 -65.00 0.00 -32.00 -97.00 -32.00 0.00 -64.00 0.00 -97.00 -64.00 -32.00 32.00 -32.00 -64.00 32.00 -32.00 -64.00 -64.00 -32.00 32.00 0.00 32.00 -193.00 32.00 -32.00 -32.00 -97.00 64.00 -64.00 -96.00 -64.00 0.00 32.00 -65.00 -32.00 -64.00 -33.00 -64.00 0.00 -161.00 -64.00 32.00 -96.00 -32.00 0.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -33.00 -32.00 -32.00 -96.00 -32.00 0.00 0.00 -32.00 -96.00 -33.00 0.00 -32.00 -97.00 -32.00 -64.00 0.00 -97.00 64.00 -32.00 -64.00 -32.00 32.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 -97.00 -32.00 -64.00 32.00 -32.00 0.00 0.00 -97.00 -96.00 -32.00 0.00 -64.00 32.00 -32.00 -65.00 0.00 -64.00 -65.00 0.00 -64.00 0.00 -64.00 32.00 -32.00 0.00 -97.00 97.00 -289.00 32.00 -32.00 0.00 -97.00 -64.00 -64.00 32.00 -97.00 0.00 -64.00 -32.00 -32.00 -129.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 -64.00 -65.00 -32.00 -32.00 0.00 -193.00 128.00 -32.00 65.00 32.00 32.00 -64.00 64.00 -129.00 32.00 0.00 97.00 -32.00 32.00 -128.00 161.00 -33.00 32.00 -96.00 -129.00 -64.00 -32.00 -97.00 -161.00 -128.00 -32.00 -65.00 -128.00 -64.00 0.00 0.00 32.00 -257.00 32.00 32.00 -64.00 -97.00 -33.00 -32.00 -96.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -129.00 -97.00 -97.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 33.00 -96.00 -33.00 -33.00 33.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -65.00 -128.00 -96.00 32.00 -97.00 -32.00 -64.00 96.00 -32.00 0.00 -32.00 -128.00 -97.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -64.00 0.00 -65.00 -32.00 33.00 -32.00 -33.00 -33.00 33.00 -32.00 0.00 0.00 -33.00 -193.00 -128.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 0.00 -64.00 -64.00 0.00 -32.00 -65.00 0.00 -64.00 -32.00 -96.00 -193.00 -65.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -33.00 -96.00 -96.00 -97.00 -32.00 0.00 -32.00 -32.00 -129.00 -32.00 0.00 0.00 -32.00 -64.00 -64.00 0.00 -65.00 32.00 -32.00 0.00 -96.00 -32.00 -32.00 0.00 -97.00 64.00 0.00 32.00 -64.00 0.00 -32.00 0.00 -97.00 -32.00 -64.00 -32.00 -32.00 -32.00 -129.00 32.00 -161.00 -32.00 -32.00 -33.00 0.00 -32.00 -96.00 -96.00 -32.00 -65.00 -97.00 -64.00 -32.00 -32.00 32.00 0.00 -32.00 -96.00 0.00 0.00 -32.00 -129.00 -64.00 -129.00 -97.00 0.00 -225.00 32.00 -64.00 0.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 -161.00 0.00 -160.00 97.00 -193.00 0.00 -65.00 -33.00 -32.00 33.00 -289.00 -65.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 -128.00 -32.00 -64.00 0.00 -33.00 0.00 -1350.00 0.00 -4727.00zm60641.00 11254.00l0.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 -32.00 32.00 32.00 0.00 33.00 129.00 0.00 64.00 -33.00 -32.00 -64.00 -97.00 -32.00 -32.00zm-4373.00 -1768.00l-32.00 32.00 32.00 -32.00zm3858.00 1093.00l0.00 32.00 -32.00 0.00 0.00 -32.00 32.00 0.00zm-3986.00 -1061.00l32.00 0.00 -32.00 0.00 0.00 32.00 0.00 -32.00zm2057.00 514.00l32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00zm1351.00 643.00l-32.00 -32.00 32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 0.00zm-579.00 258.00l-32.00 0.00 32.00 0.00 0.00 -33.00 32.00 0.00 0.00 33.00 -32.00 0.00zm-6624.00 -1705.00l33.00 -32.00 32.00 32.00 -32.00 0.00 0.00 33.00 -33.00 32.00 0.00 -32.00 0.00 -33.00zm6913.00 1705.00l0.00 -65.00 32.00 -32.00 33.00 0.00 -33.00 32.00 0.00 97.00 -32.00 0.00 0.00 -32.00zm-3086.00 -1544.00l64.00 0.00 0.00 32.00 32.00 -32.00 32.00 32.00 -128.00 32.00 0.00 -64.00zm3022.00 1254.00l-32.00 32.00 -32.00 0.00 0.00 65.00 -129.00 96.00 32.00 -96.00 65.00 -129.00 0.00 -32.00 32.00 -32.00 32.00 32.00 32.00 32.00 0.00 32.00z\"\n          },\n          sp: {\n            name: \"SP\",\n            path: \"M104646.00 137841.00l-33.00 -32.00 0.00 -33.00 0.00 -32.00 33.00 -64.00 96.00 -129.00 97.00 -96.00 32.00 -32.00 193.00 -65.00 32.00 -32.00 64.00 -96.00 193.00 -97.00 32.00 0.00 32.00 -32.00 258.00 -64.00 128.00 -64.00 32.00 0.00 65.00 -129.00 160.00 -129.00 32.00 -64.00 258.00 -161.00 96.00 -32.00 129.00 -96.00 193.00 -65.00 96.00 -64.00 64.00 -32.00 97.00 -64.00 96.00 -97.00 161.00 -32.00 129.00 -64.00 96.00 -33.00 32.00 -32.00 33.00 0.00 32.00 -64.00 96.00 -96.00 32.00 -33.00 225.00 -160.00 32.00 -97.00 33.00 -32.00 64.00 -64.00 161.00 -225.00 128.00 -418.00 33.00 -97.00 160.00 -193.00 65.00 0.00 0.00 -32.00 64.00 -32.00 64.00 -97.00 225.00 -160.00 32.00 -97.00 0.00 -64.00 97.00 -225.00 96.00 -64.00 193.00 -65.00 32.00 -64.00 65.00 -64.00 128.00 -225.00 0.00 -33.00 0.00 -96.00 -64.00 -129.00 0.00 -96.00 -161.00 -129.00 -32.00 -64.00 64.00 -97.00 65.00 -128.00 64.00 -32.00 32.00 0.00 193.00 32.00 97.00 0.00 128.00 -64.00 32.00 -33.00 65.00 -96.00 96.00 -96.00 32.00 -97.00 32.00 -96.00 33.00 -129.00 192.00 -161.00 33.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -129.00 32.00 -161.00 -32.00 -32.00 -32.00 -193.00 -65.00 -96.00 -32.00 -32.00 32.00 -65.00 -32.00 -161.00 32.00 -64.00 32.00 -32.00 129.00 0.00 97.00 -32.00 32.00 0.00 32.00 -64.00 96.00 -33.00 65.00 -160.00 0.00 -97.00 64.00 -96.00 32.00 -97.00 129.00 -161.00 64.00 -32.00 193.00 0.00 32.00 0.00 193.00 -128.00 32.00 -65.00 32.00 -225.00 -64.00 -64.00 -32.00 -96.00 0.00 -161.00 32.00 -161.00 0.00 -32.00 0.00 -32.00 -64.00 -97.00 32.00 -160.00 161.00 -354.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -32.00 225.00 -129.00 97.00 -96.00 32.00 -96.00 161.00 -258.00 64.00 -64.00 129.00 -96.00 64.00 -33.00 0.00 -32.00 161.00 -289.00 64.00 -32.00 32.00 -129.00 32.00 -32.00 32.00 0.00 97.00 -64.00 96.00 -65.00 290.00 -64.00 193.00 0.00 128.00 -32.00 97.00 -32.00 32.00 0.00 64.00 -32.00 65.00 -65.00 64.00 -32.00 161.00 -128.00 32.00 -65.00 64.00 -193.00 96.00 -225.00 129.00 -257.00 0.00 -64.00 161.00 -225.00 0.00 -33.00 64.00 0.00 32.00 0.00 65.00 -64.00 96.00 -64.00 0.00 -65.00 64.00 0.00 65.00 0.00 64.00 0.00 96.00 -96.00 33.00 -32.00 128.00 -32.00 97.00 -65.00 0.00 -32.00 64.00 0.00 257.00 -64.00 225.00 -64.00 32.00 0.00 65.00 -32.00 32.00 0.00 96.00 -161.00 65.00 -65.00 64.00 -32.00 96.00 -128.00 33.00 -65.00 64.00 0.00 96.00 0.00 65.00 -64.00 64.00 -32.00 96.00 0.00 65.00 -32.00 64.00 -32.00 64.00 32.00 97.00 32.00 96.00 32.00 193.00 225.00 97.00 32.00 0.00 65.00 96.00 0.00 64.00 32.00 33.00 0.00 128.00 -32.00 193.00 64.00 129.00 -64.00 96.00 0.00 129.00 32.00 32.00 32.00 32.00 0.00 97.00 -32.00 160.00 0.00 32.00 0.00 33.00 32.00 64.00 32.00 129.00 129.00 32.00 32.00 64.00 0.00 64.00 32.00 258.00 -32.00 257.00 96.00 64.00 32.00 97.00 0.00 96.00 0.00 97.00 -64.00 192.00 -32.00 33.00 0.00 160.00 0.00 32.00 0.00 161.00 32.00 322.00 0.00 64.00 0.00 0.00 -32.00 97.00 -32.00 128.00 -32.00 97.00 0.00 32.00 -32.00 128.00 32.00 97.00 32.00 64.00 128.00 32.00 33.00 129.00 128.00 96.00 0.00 386.00 32.00 97.00 -32.00 96.00 -64.00 97.00 -32.00 160.00 32.00 33.00 0.00 32.00 32.00 0.00 64.00 0.00 65.00 -65.00 32.00 -96.00 0.00 -64.00 64.00 -65.00 257.00 0.00 129.00 0.00 32.00 32.00 64.00 0.00 258.00 161.00 289.00 32.00 97.00 0.00 64.00 129.00 193.00 32.00 0.00 161.00 32.00 64.00 32.00 32.00 0.00 0.00 -32.00 193.00 -129.00 65.00 -64.00 128.00 -289.00 129.00 -258.00 32.00 -32.00 129.00 0.00 64.00 32.00 129.00 32.00 32.00 65.00 64.00 161.00 32.00 257.00 0.00 96.00 -32.00 547.00 32.00 32.00 289.00 193.00 65.00 0.00 32.00 -32.00 64.00 -129.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -161.00 32.00 -161.00 -64.00 -96.00 0.00 -33.00 0.00 -96.00 64.00 -129.00 64.00 -64.00 33.00 -32.00 0.00 -32.00 -33.00 -65.00 33.00 -96.00 32.00 -32.00 96.00 -65.00 32.00 0.00 193.00 0.00 129.00 -32.00 96.00 -32.00 32.00 0.00 161.00 64.00 97.00 0.00 32.00 33.00 96.00 0.00 97.00 -33.00 128.00 -128.00 65.00 -32.00 128.00 0.00 97.00 32.00 96.00 0.00 129.00 0.00 161.00 -64.00 64.00 0.00 161.00 -33.00 128.00 33.00 32.00 0.00 65.00 0.00 32.00 0.00 64.00 -33.00 97.00 0.00 96.00 33.00 64.00 64.00 33.00 32.00 32.00 0.00 32.00 0.00 96.00 0.00 65.00 -32.00 32.00 0.00 32.00 -64.00 0.00 -33.00 -161.00 -160.00 0.00 -32.00 32.00 -161.00 -32.00 -32.00 32.00 -33.00 97.00 0.00 32.00 33.00 64.00 32.00 97.00 161.00 32.00 96.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 97.00 97.00 32.00 64.00 64.00 97.00 32.00 96.00 0.00 129.00 -64.00 32.00 -97.00 96.00 33.00 65.00 -97.00 32.00 -64.00 32.00 -64.00 0.00 -161.00 32.00 -32.00 32.00 0.00 129.00 96.00 32.00 161.00 64.00 96.00 129.00 65.00 32.00 0.00 97.00 -97.00 32.00 -64.00 0.00 -64.00 0.00 -65.00 32.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 -97.00 32.00 0.00 65.00 33.00 160.00 -65.00 161.00 0.00 97.00 32.00 64.00 -32.00 96.00 -32.00 32.00 0.00 161.00 129.00 0.00 32.00 0.00 32.00 65.00 64.00 32.00 33.00 64.00 64.00 64.00 -32.00 65.00 0.00 96.00 -97.00 0.00 -96.00 64.00 -32.00 129.00 0.00 0.00 -33.00 64.00 -32.00 129.00 0.00 64.00 -64.00 65.00 0.00 32.00 -32.00 32.00 -32.00 0.00 32.00 96.00 96.00 65.00 65.00 32.00 64.00 0.00 32.00 0.00 32.00 -65.00 32.00 0.00 33.00 0.00 64.00 129.00 64.00 32.00 97.00 32.00 0.00 129.00 0.00 64.00 96.00 65.00 0.00 64.00 64.00 129.00 33.00 64.00 128.00 96.00 32.00 32.00 0.00 33.00 65.00 0.00 96.00 32.00 0.00 32.00 64.00 64.00 97.00 0.00 32.00 -64.00 161.00 -32.00 0.00 -65.00 96.00 -32.00 0.00 -32.00 65.00 0.00 96.00 -32.00 0.00 0.00 64.00 0.00 32.00 -32.00 0.00 32.00 33.00 -64.00 32.00 32.00 96.00 0.00 32.00 0.00 33.00 0.00 32.00 32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 96.00 65.00 65.00 0.00 32.00 64.00 96.00 32.00 97.00 96.00 64.00 0.00 64.00 33.00 129.00 32.00 32.00 64.00 32.00 0.00 0.00 64.00 32.00 65.00 -32.00 32.00 64.00 128.00 33.00 0.00 0.00 33.00 0.00 32.00 0.00 32.00 64.00 32.00 0.00 32.00 0.00 65.00 64.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 0.00 65.00 -32.00 64.00 -32.00 32.00 0.00 32.00 -161.00 0.00 -64.00 -32.00 -32.00 32.00 0.00 32.00 -65.00 65.00 32.00 64.00 -32.00 0.00 -32.00 129.00 -32.00 32.00 -32.00 0.00 -32.00 96.00 -65.00 32.00 65.00 129.00 -65.00 129.00 -64.00 160.00 64.00 129.00 65.00 64.00 96.00 0.00 0.00 65.00 32.00 64.00 65.00 0.00 32.00 64.00 64.00 32.00 32.00 32.00 -32.00 97.00 0.00 64.00 -32.00 32.00 32.00 97.00 32.00 96.00 32.00 65.00 -32.00 96.00 32.00 0.00 32.00 32.00 97.00 32.00 0.00 33.00 -64.00 0.00 0.00 32.00 0.00 32.00 -65.00 32.00 97.00 96.00 -32.00 97.00 32.00 32.00 0.00 32.00 64.00 97.00 32.00 64.00 0.00 -32.00 32.00 0.00 97.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 65.00 64.00 -33.00 32.00 65.00 32.00 0.00 0.00 32.00 33.00 64.00 0.00 65.00 0.00 32.00 64.00 64.00 -32.00 32.00 32.00 0.00 32.00 64.00 0.00 33.00 32.00 64.00 64.00 32.00 33.00 32.00 -33.00 32.00 -32.00 33.00 32.00 64.00 -32.00 64.00 -32.00 0.00 32.00 64.00 0.00 33.00 -32.00 0.00 32.00 32.00 32.00 0.00 33.00 32.00 32.00 -32.00 0.00 32.00 64.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 33.00 -32.00 64.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 65.00 0.00 32.00 -32.00 32.00 0.00 32.00 -33.00 96.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 65.00 0.00 128.00 32.00 32.00 -32.00 32.00 -33.00 65.00 0.00 32.00 0.00 -32.00 65.00 32.00 32.00 96.00 64.00 65.00 0.00 0.00 -32.00 32.00 32.00 32.00 64.00 64.00 -96.00 32.00 -32.00 33.00 -32.00 32.00 0.00 32.00 -65.00 32.00 0.00 64.00 0.00 0.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 33.00 32.00 32.00 65.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 64.00 32.00 0.00 -32.00 129.00 -64.00 0.00 32.00 64.00 32.00 65.00 0.00 64.00 32.00 32.00 0.00 32.00 0.00 0.00 33.00 0.00 32.00 32.00 32.00 0.00 64.00 33.00 32.00 -65.00 65.00 0.00 64.00 -32.00 32.00 32.00 64.00 32.00 32.00 65.00 65.00 0.00 32.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 65.00 -64.00 0.00 -33.00 32.00 33.00 64.00 -33.00 0.00 -64.00 32.00 0.00 97.00 -64.00 32.00 -193.00 -32.00 0.00 64.00 -32.00 32.00 0.00 32.00 32.00 65.00 -32.00 64.00 0.00 32.00 0.00 32.00 0.00 97.00 0.00 32.00 -64.00 0.00 -33.00 32.00 -32.00 0.00 32.00 64.00 -96.00 97.00 0.00 32.00 -64.00 32.00 -33.00 64.00 33.00 65.00 32.00 0.00 32.00 0.00 64.00 96.00 0.00 32.00 32.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 64.00 64.00 -32.00 65.00 64.00 32.00 0.00 64.00 65.00 97.00 32.00 32.00 32.00 0.00 32.00 64.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 -32.00 0.00 -96.00 -65.00 -33.00 33.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 64.00 65.00 64.00 64.00 33.00 0.00 32.00 -96.00 32.00 -65.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 64.00 33.00 96.00 -33.00 65.00 65.00 64.00 32.00 32.00 96.00 64.00 0.00 0.00 33.00 -64.00 64.00 -128.00 32.00 -33.00 96.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 32.00 33.00 -64.00 160.00 32.00 32.00 -97.00 65.00 32.00 64.00 -32.00 -32.00 -32.00 64.00 -32.00 32.00 0.00 33.00 32.00 32.00 -32.00 32.00 32.00 64.00 -64.00 64.00 -32.00 0.00 32.00 33.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 33.00 33.00 0.00 32.00 64.00 64.00 0.00 -32.00 64.00 32.00 32.00 -32.00 97.00 0.00 32.00 96.00 32.00 0.00 32.00 33.00 0.00 32.00 32.00 96.00 33.00 0.00 -33.00 64.00 33.00 33.00 0.00 64.00 0.00 32.00 32.00 0.00 32.00 32.00 -32.00 64.00 0.00 33.00 32.00 -33.00 32.00 0.00 32.00 33.00 0.00 64.00 32.00 0.00 65.00 -32.00 32.00 161.00 64.00 0.00 64.00 64.00 -32.00 32.00 32.00 97.00 0.00 64.00 0.00 0.00 65.00 64.00 0.00 0.00 32.00 64.00 32.00 33.00 0.00 32.00 -32.00 0.00 64.00 -97.00 97.00 0.00 64.00 97.00 0.00 -65.00 64.00 97.00 97.00 -97.00 32.00 0.00 32.00 33.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 0.00 65.00 -64.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 32.00 -96.00 32.00 0.00 32.00 -65.00 -32.00 -32.00 32.00 0.00 32.00 32.00 32.00 -32.00 33.00 32.00 32.00 65.00 0.00 32.00 96.00 64.00 0.00 0.00 32.00 64.00 32.00 0.00 -32.00 97.00 65.00 64.00 0.00 32.00 -33.00 0.00 33.00 32.00 0.00 65.00 96.00 32.00 -32.00 96.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 33.00 -65.00 128.00 0.00 65.00 33.00 32.00 -33.00 32.00 33.00 96.00 -65.00 0.00 0.00 32.00 32.00 0.00 0.00 33.00 33.00 32.00 32.00 64.00 96.00 32.00 32.00 -32.00 97.00 -32.00 96.00 32.00 65.00 -96.00 64.00 0.00 32.00 0.00 0.00 64.00 64.00 0.00 33.00 32.00 32.00 -64.00 160.00 -65.00 33.00 -32.00 32.00 32.00 161.00 -32.00 32.00 -32.00 0.00 32.00 32.00 97.00 0.00 32.00 -32.00 96.00 -32.00 33.00 64.00 32.00 64.00 -65.00 65.00 0.00 64.00 -64.00 96.00 -32.00 129.00 32.00 96.00 -64.00 97.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -33.00 65.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 65.00 0.00 64.00 -64.00 0.00 -33.00 64.00 -32.00 32.00 0.00 -32.00 65.00 0.00 32.00 64.00 0.00 0.00 32.00 0.00 64.00 33.00 0.00 0.00 32.00 0.00 65.00 32.00 0.00 64.00 -33.00 32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 0.00 32.00 -64.00 33.00 0.00 64.00 0.00 0.00 -32.00 64.00 32.00 0.00 -32.00 65.00 32.00 0.00 64.00 32.00 32.00 32.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -161.00 64.00 0.00 33.00 -64.00 32.00 32.00 32.00 64.00 32.00 0.00 32.00 32.00 65.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -65.00 32.00 0.00 33.00 -32.00 0.00 -64.00 -33.00 0.00 0.00 -64.00 -64.00 -97.00 32.00 0.00 -32.00 0.00 -96.00 0.00 -33.00 0.00 -96.00 32.00 -96.00 32.00 -33.00 0.00 -64.00 -64.00 32.00 -128.00 129.00 -33.00 32.00 -32.00 96.00 -32.00 0.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -32.00 64.00 0.00 64.00 32.00 33.00 -32.00 96.00 -33.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 -33.00 -96.00 -64.00 0.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 97.00 32.00 96.00 -64.00 65.00 32.00 0.00 32.00 32.00 64.00 -32.00 0.00 -33.00 65.00 33.00 0.00 -65.00 64.00 0.00 32.00 -32.00 32.00 64.00 64.00 33.00 0.00 64.00 -32.00 161.00 -32.00 64.00 -96.00 64.00 0.00 32.00 -32.00 -32.00 0.00 65.00 -65.00 0.00 65.00 64.00 0.00 32.00 64.00 -96.00 64.00 -33.00 32.00 0.00 32.00 33.00 33.00 128.00 -33.00 32.00 0.00 33.00 -32.00 32.00 0.00 128.00 -96.00 65.00 32.00 64.00 -161.00 -32.00 -32.00 32.00 0.00 96.00 64.00 33.00 0.00 32.00 33.00 32.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 -32.00 96.00 65.00 0.00 32.00 0.00 96.00 -64.00 64.00 0.00 33.00 -64.00 64.00 0.00 32.00 -32.00 161.00 -32.00 96.00 32.00 33.00 -32.00 32.00 0.00 0.00 -33.00 32.00 -64.00 -32.00 -32.00 160.00 -97.00 33.00 0.00 64.00 -32.00 32.00 0.00 129.00 -32.00 64.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 64.00 -64.00 32.00 0.00 65.00 -32.00 32.00 -32.00 32.00 0.00 64.00 -32.00 32.00 -33.00 65.00 33.00 96.00 -65.00 97.00 -32.00 64.00 -32.00 0.00 32.00 64.00 0.00 65.00 0.00 32.00 0.00 128.00 32.00 33.00 -32.00 96.00 -64.00 129.00 0.00 64.00 0.00 32.00 -97.00 64.00 -32.00 33.00 -32.00 32.00 0.00 32.00 32.00 64.00 0.00 32.00 0.00 65.00 -32.00 64.00 -32.00 0.00 -32.00 128.00 0.00 65.00 32.00 64.00 0.00 64.00 64.00 65.00 65.00 32.00 128.00 0.00 32.00 -32.00 65.00 32.00 32.00 32.00 0.00 0.00 32.00 0.00 64.00 64.00 0.00 33.00 32.00 32.00 0.00 32.00 33.00 32.00 64.00 -32.00 32.00 0.00 64.00 96.00 -32.00 32.00 32.00 33.00 -32.00 32.00 32.00 -32.00 97.00 0.00 32.00 0.00 96.00 32.00 0.00 32.00 33.00 32.00 -33.00 64.00 65.00 32.00 -32.00 0.00 -33.00 33.00 33.00 32.00 64.00 32.00 0.00 64.00 -129.00 32.00 65.00 65.00 -33.00 64.00 65.00 32.00 0.00 32.00 0.00 -64.00 64.00 0.00 32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 65.00 0.00 32.00 32.00 32.00 0.00 96.00 -128.00 -32.00 -33.00 32.00 0.00 32.00 33.00 65.00 32.00 32.00 -32.00 32.00 0.00 32.00 -33.00 64.00 -32.00 65.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 0.00 32.00 0.00 -32.00 64.00 32.00 0.00 0.00 97.00 32.00 0.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 33.00 32.00 64.00 -32.00 32.00 64.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 65.00 0.00 -33.00 64.00 -32.00 96.00 65.00 33.00 -33.00 64.00 0.00 32.00 0.00 32.00 65.00 32.00 -32.00 33.00 0.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 32.00 -32.00 32.00 64.00 65.00 65.00 64.00 0.00 32.00 0.00 32.00 -33.00 32.00 -32.00 0.00 0.00 65.00 -32.00 32.00 -64.00 32.00 -32.00 0.00 0.00 32.00 32.00 0.00 -32.00 32.00 -97.00 0.00 -96.00 97.00 32.00 32.00 -65.00 0.00 -32.00 64.00 0.00 32.00 32.00 32.00 -32.00 33.00 65.00 0.00 0.00 32.00 0.00 32.00 -65.00 0.00 -64.00 129.00 -64.00 32.00 0.00 -32.00 -65.00 0.00 -96.00 64.00 0.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -225.00 96.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 64.00 -32.00 33.00 -32.00 0.00 -96.00 32.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 -64.00 64.00 -65.00 32.00 -64.00 65.00 -64.00 32.00 -97.00 -64.00 -96.00 64.00 -33.00 0.00 -128.00 64.00 -32.00 32.00 0.00 33.00 -97.00 64.00 -64.00 -64.00 -64.00 96.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -97.00 64.00 -64.00 65.00 32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 33.00 32.00 32.00 -32.00 64.00 32.00 0.00 0.00 32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 -32.00 64.00 32.00 0.00 -32.00 32.00 32.00 32.00 -64.00 33.00 32.00 32.00 -65.00 32.00 33.00 64.00 -33.00 32.00 -64.00 0.00 -32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -65.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 32.00 32.00 32.00 0.00 0.00 96.00 97.00 0.00 96.00 33.00 -32.00 32.00 64.00 32.00 0.00 32.00 33.00 32.00 -33.00 32.00 97.00 -32.00 0.00 32.00 96.00 32.00 0.00 33.00 32.00 64.00 0.00 32.00 33.00 64.00 -33.00 0.00 97.00 33.00 64.00 64.00 32.00 0.00 33.00 32.00 32.00 32.00 -32.00 0.00 -65.00 0.00 -161.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 0.00 -33.00 33.00 -64.00 0.00 -32.00 0.00 32.00 -33.00 32.00 -64.00 -96.00 -32.00 -64.00 0.00 -97.00 64.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 -96.00 0.00 -33.00 65.00 -32.00 32.00 -96.00 0.00 -32.00 32.00 0.00 64.00 -32.00 32.00 -33.00 0.00 -32.00 33.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 64.00 -32.00 32.00 -96.00 0.00 -64.00 64.00 0.00 -32.00 -33.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 0.00 33.00 0.00 64.00 32.00 32.00 32.00 32.00 65.00 -64.00 32.00 0.00 0.00 64.00 64.00 0.00 -64.00 0.00 -64.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 97.00 0.00 32.00 32.00 0.00 -64.00 64.00 0.00 65.00 -32.00 -32.00 0.00 -97.00 -65.00 0.00 -32.00 32.00 32.00 -64.00 -32.00 0.00 -32.00 32.00 -64.00 32.00 96.00 32.00 -32.00 33.00 32.00 0.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 -33.00 -33.00 33.00 33.00 -65.00 -65.00 0.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 0.00 32.00 64.00 33.00 -32.00 64.00 32.00 0.00 0.00 64.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -96.00 32.00 -65.00 64.00 0.00 32.00 65.00 32.00 0.00 -32.00 0.00 32.00 0.00 65.00 32.00 0.00 -32.00 0.00 32.00 32.00 0.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 64.00 -64.00 0.00 32.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 -64.00 -65.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -96.00 64.00 -97.00 129.00 0.00 32.00 -64.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -64.00 32.00 -64.00 97.00 0.00 161.00 32.00 96.00 32.00 96.00 32.00 0.00 65.00 0.00 0.00 65.00 -65.00 64.00 65.00 129.00 0.00 96.00 0.00 64.00 -33.00 -32.00 0.00 32.00 0.00 33.00 -64.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -97.00 -32.00 -64.00 64.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 0.00 32.00 -64.00 0.00 0.00 -64.00 -96.00 0.00 0.00 -64.00 -33.00 -33.00 -64.00 0.00 0.00 -64.00 -32.00 -32.00 -129.00 0.00 -32.00 32.00 -96.00 32.00 -32.00 0.00 -33.00 -32.00 33.00 -64.00 -65.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -65.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -129.00 0.00 0.00 -32.00 -32.00 0.00 -160.00 32.00 0.00 -32.00 -65.00 -32.00 -161.00 0.00 -257.00 32.00 -353.00 97.00 -65.00 32.00 -32.00 64.00 -64.00 -32.00 -97.00 64.00 -32.00 33.00 0.00 32.00 -32.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -33.00 -97.00 33.00 -193.00 96.00 -64.00 32.00 0.00 65.00 -32.00 0.00 -32.00 32.00 96.00 -32.00 -32.00 32.00 -32.00 64.00 0.00 64.00 -64.00 32.00 0.00 33.00 32.00 0.00 -32.00 32.00 -33.00 0.00 -96.00 64.00 0.00 64.00 32.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 -32.00 33.00 -32.00 32.00 -64.00 32.00 0.00 64.00 0.00 65.00 32.00 0.00 -64.00 0.00 -33.00 32.00 0.00 32.00 -32.00 -32.00 32.00 -32.00 -64.00 0.00 -161.00 0.00 -64.00 64.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 65.00 -32.00 64.00 0.00 -32.00 32.00 -64.00 -32.00 -33.00 -33.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 0.00 -96.00 64.00 -32.00 -32.00 -65.00 -32.00 -32.00 -97.00 -32.00 -64.00 0.00 -64.00 0.00 0.00 32.00 0.00 32.00 -33.00 -64.00 -32.00 0.00 -32.00 32.00 32.00 0.00 32.00 65.00 0.00 32.00 -64.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 65.00 -32.00 0.00 32.00 -65.00 -96.00 -32.00 -193.00 32.00 -193.00 97.00 -515.00 225.00 -482.00 289.00 -386.00 193.00 -64.00 64.00 -97.00 33.00 -321.00 225.00 -225.00 128.00 -290.00 258.00 0.00 32.00 0.00 96.00 -32.00 32.00 -64.00 65.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -97.00 32.00 -128.00 64.00 -65.00 64.00 -225.00 161.00 -193.00 129.00 -32.00 32.00 0.00 64.00 -64.00 32.00 -129.00 97.00 0.00 32.00 -128.00 32.00 -675.00 418.00 -33.00 0.00 0.00 32.00 -160.00 97.00 -33.00 64.00 -225.00 64.00 -193.00 129.00 -418.00 257.00 -160.00 129.00 -579.00 450.00 -322.00 322.00 -160.00 192.00 -32.00 97.00 -33.00 96.00 -96.00 0.00 0.00 33.00 32.00 96.00 32.00 32.00 0.00 32.00 0.00 65.00 -64.00 64.00 -32.00 129.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 64.00 -129.00 129.00 -257.00 193.00 -321.00 353.00 -32.00 0.00 0.00 -64.00 64.00 -64.00 289.00 -257.00 -32.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 33.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 32.00 -65.00 32.00 -161.00 -129.00 -32.00 -32.00 -32.00 -64.00 -64.00 0.00 -64.00 -32.00 -33.00 -65.00 97.00 -32.00 32.00 -64.00 0.00 -64.00 32.00 0.00 32.00 -32.00 -64.00 -33.00 -64.00 -32.00 0.00 -32.00 -65.00 -64.00 0.00 -32.00 -64.00 -97.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -33.00 -32.00 -32.00 -64.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 0.00 64.00 -33.00 0.00 -32.00 -64.00 -32.00 0.00 0.00 32.00 -64.00 64.00 -32.00 64.00 -65.00 65.00 0.00 -65.00 32.00 0.00 0.00 -96.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 0.00 -32.00 -97.00 -97.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 -96.00 -32.00 -33.00 32.00 -64.00 0.00 -193.00 128.00 -32.00 129.00 0.00 64.00 -64.00 0.00 -33.00 33.00 -64.00 96.00 -32.00 32.00 -32.00 64.00 -32.00 0.00 -65.00 -64.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 -64.00 0.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 -64.00 -32.00 0.00 32.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -96.00 0.00 32.00 -32.00 -32.00 -65.00 32.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 97.00 -65.00 32.00 -32.00 64.00 -32.00 0.00 -64.00 32.00 0.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 -65.00 -32.00 33.00 -33.00 -33.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -64.00 65.00 -65.00 0.00 0.00 32.00 -64.00 32.00 -32.00 64.00 -64.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -33.00 -65.00 -32.00 0.00 32.00 0.00 33.00 0.00 64.00 -32.00 -32.00 -32.00 -32.00 -129.00 32.00 -64.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 64.00 -65.00 32.00 -32.00 -96.00 -64.00 -33.00 -65.00 0.00 -32.00 -64.00 -32.00 -32.00 -64.00 64.00 -64.00 -64.00 -33.00 32.00 65.00 64.00 -32.00 0.00 -65.00 -32.00 -161.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 0.00 -64.00 0.00 -65.00 65.00 -32.00 -65.00 -64.00 0.00 0.00 -32.00 -64.00 0.00 0.00 -64.00 -33.00 0.00 -64.00 32.00 32.00 -96.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 32.00 32.00 33.00 -32.00 -33.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 -65.00 -32.00 0.00 0.00 33.00 -64.00 0.00 0.00 -33.00 -32.00 0.00 -32.00 65.00 -65.00 -32.00 -32.00 -33.00 -128.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 33.00 0.00 32.00 -64.00 0.00 0.00 64.00 -129.00 0.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -64.00 0.00 -96.00 -97.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -97.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -64.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 33.00 32.00 32.00 -65.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 32.00 0.00 96.00 -32.00 0.00 -64.00 32.00 -32.00 33.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 64.00 -64.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 -32.00 65.00 -32.00 -33.00 0.00 -32.00 64.00 -96.00 64.00 -97.00 32.00 0.00 97.00 -96.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 -96.00 0.00 0.00 -65.00 -32.00 0.00 -65.00 -64.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -33.00 -33.00 -32.00 33.00 -64.00 -33.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 -33.00 -129.00 -96.00 -32.00 -32.00 65.00 -32.00 0.00 -65.00 0.00 -96.00 0.00 -64.00 64.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -97.00 -64.00 0.00 -32.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 -33.00 33.00 0.00 -33.00 -96.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -96.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 33.00 -33.00 -33.00 0.00 0.00 -32.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 -33.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 -64.00 -32.00 -32.00 0.00 0.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -33.00 -32.00 33.00 -33.00 -65.00 65.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -65.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -33.00 -32.00 -32.00 -33.00 0.00 -96.00 -64.00 64.00 -32.00 -64.00 -32.00 -32.00 0.00 -64.00 -32.00 -33.00 32.00 0.00 32.00 -32.00 -64.00 -32.00 32.00 0.00 64.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -32.00 65.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -64.00 -33.00 -64.00 0.00 -33.00 33.00 -32.00 -65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 32.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -65.00 -33.00 33.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 65.00 -64.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 -97.00 -64.00 -32.00 -32.00 32.00 -33.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 0.00 -64.00 65.00 32.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 -64.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 97.00 -33.00 32.00 33.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 -97.00 -64.00 -96.00 0.00 0.00 -32.00 0.00 -65.00 32.00 33.00 32.00 -65.00 0.00 -64.00 -32.00 -64.00 0.00 -97.00 -64.00 -128.00 -32.00 -33.00 32.00 -64.00 -32.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 -65.00 -96.00 -160.00 -32.00 -32.00 32.00 -33.00 -96.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 -64.00 -32.00 -32.00 -32.00 64.00 -97.00 -32.00 -32.00 -32.00 -32.00 -65.00 0.00 -64.00 32.00 -64.00 -32.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -97.00 32.00 -64.00 0.00 -32.00 -32.00 -33.00 -32.00 -32.00 32.00 -64.00 -64.00 -64.00 0.00 0.00 -97.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -97.00 -65.00 -64.00 -32.00 -96.00 0.00 -97.00 -96.00 0.00 -33.00 32.00 -32.00 33.00 -96.00 -33.00 -64.00 0.00 -33.00 -96.00 -64.00 -32.00 32.00 0.00 32.00 32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 -97.00 -64.00 0.00 -96.00 -32.00 0.00 32.00 -97.00 97.00 -64.00 -32.00 -65.00 0.00 -64.00 96.00 -32.00 0.00 -64.00 0.00 -97.00 -32.00 -64.00 64.00 -96.00 32.00 -97.00 0.00 -64.00 -32.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -129.00 -64.00 -64.00 32.00 -64.00 0.00 -32.00 64.00 -65.00 0.00 -96.00 0.00 -32.00 -64.00 -64.00 -64.00 0.00 -32.00 -97.00 -65.00 -64.00 32.00 -65.00 0.00 -32.00 33.00 0.00 96.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 -64.00 32.00 -96.00 -64.00 -32.00 0.00 -65.00 64.00 -64.00 -32.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 -65.00 -33.00 -128.00 -32.00 -65.00 65.00 -64.00 32.00 -64.00 -32.00 -97.00 -33.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -128.00 225.00 -97.00 33.00 -32.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 -32.00 -97.00 0.00 -96.00 0.00 -32.00 -32.00 32.00 -193.00 0.00 -32.00 0.00 -32.00 -97.00 -32.00 -32.00 -97.00 -32.00 -32.00 -64.00 -128.00 -193.00 -129.00 -32.00 -32.00 -129.00 0.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -64.00 -97.00 -96.00 0.00 -65.00 33.00 -64.00 0.00 -257.00 -129.00 -257.00 0.00 -193.00 -64.00 -97.00 -65.00 -64.00 -32.00 -97.00 -32.00 -32.00 0.00 -96.00 -64.00 -32.00 -129.00 -33.00 0.00 -64.00 -64.00 -64.00 -32.00 -97.00 32.00 -32.00 0.00 -128.00 -32.00 -65.00 0.00 -128.00 -32.00 -65.00 32.00 -64.00 0.00 -129.00 -65.00 -96.00 0.00 -96.00 129.00 -33.00 0.00 -128.00 64.00 -65.00 0.00 -32.00 -32.00 -128.00 32.00 -32.00 33.00 -65.00 -33.00 -96.00 -32.00 -129.00 -96.00 -64.00 -32.00 -161.00 0.00 -64.00 0.00 -97.00 64.00 -96.00 0.00 -32.00 -64.00 -32.00 -129.00 0.00 -32.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -354.00 96.00 -32.00 0.00 -97.00 -32.00 -64.00 -64.00 -32.00 -33.00 -32.00 -32.00 -193.00 -161.00 -97.00 0.00 -160.00 -96.00 -129.00 -32.00 -32.00 0.00 -129.00 0.00 -161.00 -97.00 -64.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 33.00 -65.00 96.00 -32.00 96.00 0.00 33.00 -32.00 128.00 0.00 32.00 32.00 193.00 -129.00 32.00 -64.00 33.00 -129.00 64.00 -32.00 0.00 0.00 -32.00 0.00 -129.00 -64.00 -96.00 -32.00 -32.00 -129.00 32.00 -64.00 32.00 -64.00 64.00 -97.00 -32.00 -225.00 0.00 -161.00 -64.00 -64.00 -32.00 -32.00 0.00 -32.00 -33.00 -65.00 0.00 0.00 33.00 -64.00 0.00 -161.00 96.00 -32.00 0.00 -96.00 -64.00 -65.00 -32.00 -32.00 0.00 -128.00 -129.00 -65.00 -97.00 -32.00 0.00 -64.00 33.00 -289.00 193.00 -193.00 64.00 -97.00 0.00 -128.00 -64.00 -129.00 -33.00 -32.00 -32.00 -32.00 0.00 -97.00 0.00 -161.00 65.00 -64.00 -33.00 -225.00 -160.00 -96.00 -33.00 -225.00 33.00 -33.00 32.00 -64.00 32.00 -64.00 32.00 0.00 32.00 -65.00 32.00 -64.00 65.00 -64.00 64.00 -129.00 32.00 -64.00 97.00 -32.00 -97.00 -32.00 -96.00zm39098.00 3826.00l0.00 32.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 32.00m-804.00 1672.00l0.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00zm-4727.00 418.00l0.00 -32.00 0.00 32.00zm3827.00 -1447.00l32.00 0.00 -32.00 0.00zm836.00 -64.00l-32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 0.00 32.00 0.00zm643.00 -804.00l0.00 -32.00 0.00 32.00zm-1929.00 1125.00l0.00 -32.00 0.00 32.00zm64.00 1640.00l0.00 -32.00 0.00 32.00zm1833.00 -2444.00l32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00zm-1962.00 2444.00l0.00 -32.00 0.00 32.00zm225.00 -321.00l-32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 97.00 32.00 -33.00 32.00 33.00 32.00 32.00 0.00 64.00 65.00 32.00 -65.00 32.00 32.00 32.00 0.00 33.00 33.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 -32.00 33.00 0.00 32.00 -64.00 64.00 -96.00 -32.00 -65.00 -97.00 32.00 -64.00 -64.00 -96.00 -64.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -64.00 -32.00 -33.00 64.00 -192.00 32.00 -33.00 0.00 -96.00 32.00 -96.00 -32.00 -65.00 -96.00 0.00 -129.00 0.00 -32.00 32.00 0.00 65.00 -64.00 32.00 0.00 0.00 -32.00 64.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 161.00 -160.00 64.00 -33.00 0.00 -128.00 32.00 0.00 0.00 -32.00 33.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -96.00 0.00 -65.00 64.00 -32.00 64.00 32.00 33.00 33.00 96.00 0.00 0.00 32.00 64.00 0.00 33.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 65.00 32.00 0.00 -32.00 32.00 0.00 64.00 -32.00 64.00 32.00 0.00 0.00 33.00 -64.00 32.00 32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 -96.00 -32.00 -64.00 0.00 -65.00 64.00 32.00 0.00 0.00 33.00zm1158.00 -1512.00l32.00 0.00 -32.00 0.00zm-933.00 1319.00l0.00 -33.00 33.00 33.00 -33.00 0.00zm-8295.00 2700.00l32.00 0.00 -32.00 0.00zm9839.00 -4855.00l32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 32.00 0.00zm-193.00 65.00l-32.00 0.00 0.00 -33.00 32.00 0.00 0.00 33.00zm-3666.00 1961.00l33.00 0.00 -33.00 0.00zm901.00 322.00l0.00 -33.00 32.00 0.00 0.00 -32.00 0.00 32.00 0.00 33.00 -32.00 0.00zm-6560.00 2540.00l33.00 0.00 0.00 32.00 -33.00 0.00 0.00 -32.00zm33.00 96.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm9678.00 -4759.00l0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 -32.00 -32.00zm-4084.00 1865.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm2026.00 -997.00l32.00 -32.00 32.00 0.00 0.00 32.00 -64.00 0.00zm-2315.00 1287.00l0.00 -32.00 32.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 -32.00zm2958.00 -1447.00l32.00 -32.00 32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00zm0.00 1157.00l64.00 -32.00 32.00 -32.00 0.00 32.00 129.00 64.00 -32.00 33.00 -64.00 -33.00 -65.00 65.00 -32.00 -65.00 -32.00 -32.00zm482.00 -1318.00l0.00 -32.00 97.00 32.00 0.00 32.00 -97.00 32.00 -96.00 97.00 0.00 -65.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 -32.00z\"\n          },\n          rj: {\n            name: \"RJ\",\n            path: \"M143583.00 140702.00l32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -33.00 64.00 0.00 33.00 -32.00 -33.00 -64.00 65.00 -32.00 -32.00 -32.00 64.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 65.00 0.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -65.00 97.00 -64.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 -96.00 64.00 64.00 97.00 -64.00 0.00 -33.00 32.00 -32.00 128.00 -64.00 33.00 0.00 96.00 -64.00 97.00 64.00 64.00 -32.00 64.00 -65.00 65.00 -32.00 64.00 -64.00 32.00 0.00 64.00 0.00 32.00 32.00 -32.00 64.00 32.00 0.00 0.00 33.00 33.00 0.00 0.00 32.00 96.00 -32.00 32.00 0.00 32.00 -33.00 32.00 -64.00 33.00 -32.00 32.00 0.00 64.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 65.00 0.00 225.00 -96.00 32.00 32.00 -32.00 32.00 32.00 0.00 0.00 -32.00 96.00 -64.00 65.00 0.00 0.00 32.00 64.00 -32.00 64.00 -129.00 65.00 0.00 0.00 -32.00 0.00 -32.00 -65.00 0.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 -64.00 65.00 0.00 -32.00 -32.00 96.00 -97.00 97.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 0.00 33.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -64.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -33.00 0.00 -32.00 32.00 -32.00 -65.00 -32.00 0.00 -64.00 0.00 -33.00 33.00 -96.00 -65.00 -64.00 32.00 0.00 33.00 -32.00 -65.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 -64.00 32.00 -33.00 -32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 32.00 65.00 -32.00 0.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 32.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 0.00 32.00 -64.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 -64.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 -32.00 -33.00 -32.00 0.00 32.00 33.00 -96.00 128.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 0.00 -32.00 64.00 -64.00 -32.00 0.00 -32.00 0.00 -64.00 -65.00 -65.00 33.00 -32.00 -65.00 -64.00 129.00 -32.00 0.00 -32.00 -64.00 -33.00 -33.00 0.00 33.00 -32.00 32.00 -64.00 -65.00 -32.00 33.00 -32.00 -33.00 -32.00 0.00 0.00 -96.00 0.00 -32.00 32.00 -97.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 -96.00 32.00 0.00 -64.00 32.00 -32.00 -32.00 -64.00 -32.00 -33.00 -32.00 0.00 -33.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 -128.00 -65.00 -65.00 -64.00 -64.00 -64.00 0.00 -65.00 -32.00 -128.00 0.00 32.00 -65.00 32.00 -32.00 32.00 0.00 32.00 -32.00 33.00 0.00 64.00 -32.00 64.00 0.00 65.00 -64.00 32.00 0.00 96.00 64.00 65.00 -32.00 64.00 32.00 64.00 0.00 32.00 32.00 0.00 -32.00 65.00 -64.00 0.00 -32.00 96.00 -33.00 0.00 -64.00 32.00 -32.00 97.00 -32.00 32.00 0.00 32.00 32.00 64.00 -32.00 32.00 32.00 97.00 -32.00 0.00 32.00 64.00 0.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 96.00 -32.00 129.00 -128.00 32.00 32.00 0.00 -32.00 0.00 -32.00 32.00 -65.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 32.00 32.00 0.00 96.00 0.00 0.00 65.00 32.00 0.00 33.00 0.00 32.00 -33.00 64.00 -64.00 32.00 32.00 65.00 0.00 64.00 0.00 32.00 32.00 32.00 -32.00 64.00 0.00 33.00 -64.00 0.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 129.00 32.00 -33.00 33.00 33.00 32.00 -33.00 64.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 32.00 33.00 0.00 64.00 -32.00 32.00 -64.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 -33.00 32.00 -64.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 33.00 32.00 64.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 32.00 0.00 33.00 32.00 -33.00 32.00 0.00 0.00 -64.00 33.00 0.00 128.00 -32.00 0.00 -32.00 97.00 0.00 64.00 64.00 32.00 -32.00 32.00 0.00 32.00 -32.00 33.00 0.00 0.00 -32.00 96.00 -32.00 32.00 0.00 65.00 -33.00 192.00 -64.00 33.00 -32.00 64.00 0.00 0.00 -64.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -33.00 65.00 33.00 64.00 -33.00 64.00 -32.00 32.00 0.00 33.00 0.00 128.00 -96.00 32.00 0.00 33.00 0.00 0.00 32.00 32.00 32.00 -32.00 0.00 64.00 32.00 0.00 32.00 32.00 0.00 32.00 33.00 64.00 -97.00 65.00 0.00 32.00 0.00 32.00 -32.00 64.00 0.00 33.00 64.00 0.00 32.00 32.00 -32.00 0.00 -64.00 64.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 65.00 64.00 32.00 -32.00 0.00 64.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 -33.00 0.00 97.00 64.00 32.00 32.00 32.00 32.00 -32.00 161.00 -32.00 32.00 -64.00 32.00 0.00 32.00 32.00 0.00 32.00 65.00 0.00 64.00 0.00 64.00 0.00 129.00 -64.00 32.00 -33.00 64.00 0.00 129.00 -96.00 96.00 -64.00 0.00 -32.00 65.00 -33.00 32.00 0.00 32.00 33.00 64.00 0.00 32.00 -33.00 33.00 33.00 64.00 32.00 96.00 -32.00 65.00 0.00 32.00 -33.00 32.00 33.00 32.00 -33.00 32.00 33.00 0.00 32.00 32.00 32.00 33.00 0.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 32.00 129.00 -96.00 32.00 0.00 0.00 32.00 64.00 32.00 32.00 0.00 65.00 0.00 0.00 64.00 0.00 65.00 -97.00 64.00 0.00 32.00 32.00 97.00 33.00 64.00 64.00 -32.00 0.00 -65.00 96.00 -32.00 65.00 0.00 64.00 0.00 0.00 32.00 129.00 -32.00 64.00 -96.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 64.00 -32.00 97.00 -32.00 32.00 0.00 128.00 -96.00 33.00 0.00 64.00 -33.00 193.00 -64.00 128.00 -128.00 0.00 -33.00 161.00 -64.00 257.00 -64.00 129.00 -65.00 32.00 -32.00 193.00 -96.00 193.00 -65.00 32.00 -32.00 97.00 -32.00 128.00 -32.00 65.00 -32.00 32.00 0.00 32.00 0.00 64.00 -32.00 0.00 -65.00 225.00 -96.00 322.00 -129.00 32.00 -32.00 322.00 -96.00 32.00 -65.00 32.00 0.00 96.00 -32.00 97.00 0.00 128.00 -32.00 0.00 -32.00 193.00 -64.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 32.00 0.00 -32.00 -33.00 -65.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 64.00 -64.00 -32.00 0.00 -32.00 -33.00 96.00 -128.00 33.00 -32.00 96.00 -65.00 -32.00 -32.00 0.00 -32.00 96.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 33.00 -32.00 64.00 0.00 32.00 -96.00 64.00 -32.00 33.00 -33.00 -65.00 -96.00 0.00 -32.00 -96.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 -64.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 32.00 -64.00 0.00 -128.00 32.00 -33.00 33.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 -64.00 -129.00 32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 32.00 -32.00 32.00 -64.00 33.00 0.00 0.00 -64.00 0.00 -65.00 128.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 65.00 0.00 0.00 -32.00 96.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 32.00 65.00 0.00 0.00 -32.00 -33.00 -32.00 -64.00 -65.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 -64.00 0.00 -32.00 -64.00 -33.00 0.00 -32.00 64.00 -64.00 64.00 -32.00 33.00 32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 64.00 -65.00 32.00 33.00 97.00 0.00 96.00 -33.00 32.00 -32.00 65.00 0.00 96.00 32.00 32.00 -32.00 97.00 32.00 0.00 -64.00 32.00 -32.00 0.00 32.00 32.00 -64.00 -32.00 -32.00 32.00 -33.00 0.00 -64.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 65.00 -32.00 32.00 -33.00 32.00 -32.00 -64.00 -64.00 64.00 -129.00 -32.00 -32.00 64.00 0.00 32.00 0.00 33.00 0.00 32.00 -32.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 65.00 -33.00 32.00 65.00 64.00 32.00 32.00 32.00 0.00 32.00 65.00 32.00 32.00 -32.00 -32.00 65.00 64.00 0.00 32.00 -33.00 96.00 0.00 33.00 0.00 0.00 33.00 64.00 0.00 0.00 64.00 32.00 -32.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 97.00 32.00 64.00 0.00 32.00 65.00 -32.00 64.00 32.00 -32.00 0.00 -32.00 96.00 0.00 33.00 32.00 0.00 -32.00 96.00 -33.00 32.00 -32.00 0.00 32.00 97.00 65.00 32.00 0.00 128.00 32.00 0.00 0.00 65.00 -32.00 0.00 0.00 64.00 -32.00 32.00 64.00 32.00 -32.00 33.00 -32.00 0.00 0.00 32.00 32.00 64.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 0.00 64.00 33.00 0.00 0.00 33.00 32.00 0.00 -65.00 128.00 0.00 32.00 33.00 0.00 32.00 0.00 64.00 0.00 0.00 33.00 -64.00 32.00 0.00 32.00 64.00 0.00 0.00 -32.00 64.00 0.00 32.00 32.00 33.00 0.00 0.00 32.00 32.00 -32.00 32.00 0.00 0.00 32.00 64.00 32.00 0.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 96.00 65.00 97.00 -33.00 32.00 65.00 64.00 32.00 0.00 32.00 32.00 32.00 32.00 -64.00 33.00 64.00 96.00 -32.00 64.00 64.00 0.00 -64.00 32.00 0.00 33.00 32.00 64.00 0.00 32.00 0.00 0.00 65.00 64.00 32.00 65.00 32.00 32.00 32.00 64.00 0.00 64.00 -64.00 33.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 33.00 0.00 128.00 32.00 32.00 0.00 33.00 32.00 32.00 0.00 0.00 32.00 32.00 -32.00 64.00 96.00 32.00 0.00 32.00 0.00 33.00 33.00 0.00 -33.00 32.00 0.00 32.00 0.00 32.00 -64.00 64.00 0.00 33.00 0.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 64.00 0.00 32.00 33.00 32.00 0.00 33.00 0.00 0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 0.00 33.00 32.00 -33.00 -32.00 33.00 32.00 0.00 64.00 0.00 32.00 0.00 65.00 -33.00 32.00 -32.00 64.00 0.00 97.00 -32.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 65.00 32.00 64.00 97.00 64.00 -32.00 65.00 0.00 32.00 0.00 32.00 96.00 0.00 65.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 33.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 64.00 -32.00 129.00 32.00 96.00 -32.00 0.00 -65.00 161.00 -32.00 0.00 -64.00 32.00 -32.00 97.00 -97.00 128.00 -64.00 65.00 -32.00 32.00 -97.00 96.00 -32.00 129.00 0.00 161.00 97.00 193.00 32.00 64.00 64.00 32.00 64.00 0.00 33.00 32.00 0.00 -32.00 0.00 32.00 -65.00 354.00 0.00 193.00 97.00 354.00 128.00 578.00 33.00 161.00 0.00 129.00 -65.00 128.00 -32.00 65.00 -64.00 32.00 -193.00 96.00 -161.00 97.00 -225.00 160.00 -129.00 97.00 -225.00 96.00 -193.00 65.00 -225.00 96.00 -643.00 161.00 -257.00 64.00 -257.00 97.00 -193.00 96.00 -129.00 32.00 -96.00 65.00 -322.00 160.00 -225.00 193.00 -64.00 0.00 -64.00 65.00 -33.00 32.00 0.00 64.00 33.00 0.00 -33.00 32.00 33.00 32.00 -97.00 65.00 -32.00 0.00 -129.00 64.00 -96.00 96.00 -64.00 65.00 0.00 64.00 -33.00 96.00 -32.00 0.00 -32.00 33.00 -64.00 0.00 -64.00 32.00 -65.00 128.00 -32.00 33.00 -32.00 64.00 -32.00 0.00 -32.00 -64.00 -65.00 32.00 -64.00 64.00 -32.00 64.00 -64.00 193.00 -33.00 65.00 0.00 192.00 0.00 33.00 0.00 32.00 65.00 257.00 32.00 64.00 96.00 0.00 0.00 32.00 65.00 97.00 64.00 64.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 65.00 0.00 0.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -65.00 32.00 33.00 0.00 -33.00 32.00 33.00 -32.00 32.00 64.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 0.00 32.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -64.00 32.00 -32.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 -32.00 0.00 32.00 -129.00 32.00 -64.00 129.00 0.00 64.00 0.00 32.00 32.00 -32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -64.00 64.00 -32.00 32.00 -33.00 97.00 0.00 64.00 33.00 64.00 32.00 0.00 0.00 32.00 32.00 33.00 32.00 -33.00 32.00 -32.00 0.00 32.00 -32.00 33.00 32.00 0.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 65.00 -32.00 -65.00 -97.00 -32.00 33.00 -32.00 -65.00 -32.00 -160.00 -65.00 -997.00 -64.00 -354.00 -32.00 -289.00 0.00 -258.00 0.00 -64.00 32.00 -96.00 -32.00 -354.00 0.00 -225.00 0.00 -193.00 32.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 -97.00 -33.00 -450.00 33.00 -289.00 32.00 -225.00 32.00 -161.00 -32.00 -193.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 32.00 0.00 -65.00 -64.00 -128.00 -33.00 -129.00 0.00 -32.00 -32.00 0.00 -32.00 -96.00 0.00 64.00 -32.00 0.00 -64.00 32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 -64.00 -65.00 0.00 -32.00 -33.00 -32.00 0.00 -32.00 33.00 -32.00 -65.00 64.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 32.00 -65.00 32.00 -64.00 65.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -65.00 96.00 -64.00 -64.00 -32.00 -32.00 -32.00 64.00 -65.00 0.00 -32.00 32.00 -32.00 161.00 -96.00 0.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -96.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 32.00 65.00 -32.00 -33.00 -32.00 33.00 0.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 -32.00 -32.00 -32.00 -64.00 32.00 0.00 32.00 -64.00 0.00 -161.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 33.00 -32.00 0.00 32.00 32.00 -64.00 32.00 -32.00 0.00 32.00 0.00 -96.00 64.00 0.00 32.00 -33.00 32.00 33.00 0.00 -65.00 97.00 0.00 32.00 32.00 32.00 33.00 -32.00 0.00 32.00 32.00 32.00 64.00 65.00 32.00 32.00 32.00 96.00 32.00 -32.00 -32.00 -96.00 -32.00 -32.00 0.00 -33.00 -64.00 0.00 -32.00 -64.00 32.00 -32.00 32.00 32.00 32.00 0.00 0.00 -32.00 64.00 -64.00 33.00 -33.00 32.00 0.00 64.00 65.00 64.00 0.00 33.00 0.00 -33.00 -32.00 33.00 -33.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 0.00 0.00 32.00 -32.00 33.00 -64.00 64.00 0.00 32.00 32.00 64.00 32.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 65.00 -33.00 -65.00 -64.00 0.00 -32.00 -32.00 -64.00 32.00 -65.00 65.00 32.00 32.00 33.00 -32.00 0.00 32.00 32.00 32.00 -32.00 -32.00 -33.00 0.00 0.00 32.00 33.00 32.00 96.00 0.00 -64.00 32.00 32.00 32.00 -32.00 0.00 -65.00 0.00 33.00 33.00 32.00 0.00 64.00 -33.00 32.00 33.00 -64.00 64.00 32.00 32.00 64.00 -32.00 65.00 0.00 0.00 32.00 0.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 32.00 64.00 0.00 0.00 65.00 -64.00 0.00 0.00 32.00 0.00 -32.00 32.00 32.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 32.00 32.00 32.00 -64.00 64.00 0.00 -32.00 0.00 32.00 32.00 -64.00 32.00 32.00 0.00 0.00 33.00 -32.00 0.00 -96.00 64.00 0.00 32.00 32.00 32.00 -32.00 0.00 -33.00 0.00 -128.00 0.00 -129.00 65.00 -128.00 0.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -65.00 -33.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -96.00 -32.00 -65.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -33.00 32.00 33.00 32.00 -33.00 -32.00 -32.00 32.00 32.00 0.00 0.00 32.00 97.00 -32.00 0.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 129.00 0.00 64.00 32.00 -64.00 0.00 32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 128.00 0.00 64.00 0.00 0.00 33.00 33.00 0.00 32.00 32.00 64.00 32.00 -64.00 0.00 -225.00 0.00 -418.00 32.00 -97.00 32.00 -32.00 32.00 0.00 32.00 0.00 -32.00 -96.00 0.00 -65.00 32.00 -32.00 33.00 -128.00 32.00 -65.00 32.00 0.00 64.00 0.00 32.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 32.00 0.00 0.00 -32.00 -64.00 -32.00 -65.00 -32.00 -353.00 0.00 -515.00 32.00 -386.00 64.00 -450.00 65.00 -161.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -65.00 -32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 65.00 -64.00 96.00 -33.00 32.00 33.00 65.00 64.00 64.00 0.00 96.00 32.00 65.00 0.00 32.00 -32.00 0.00 -64.00 0.00 -33.00 -64.00 -32.00 -65.00 -32.00 -32.00 -32.00 32.00 32.00 65.00 32.00 128.00 65.00 161.00 64.00 161.00 0.00 418.00 -32.00 193.00 -65.00 257.00 -32.00 32.00 0.00 32.00 32.00 161.00 65.00 0.00 64.00 32.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 -33.00 -32.00 -32.00 -33.00 0.00 -32.00 -64.00 -96.00 -32.00 -32.00 -32.00 -65.00 0.00 0.00 -32.00 -64.00 0.00 -64.00 -65.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 -96.00 -33.00 32.00 0.00 -32.00 -32.00 -65.00 -160.00 -96.00 0.00 -32.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 -33.00 32.00 65.00 -64.00 32.00 -64.00 0.00 -32.00 -32.00 64.00 -32.00 32.00 -33.00 -32.00 -32.00 -97.00 0.00 -64.00 32.00 -32.00 33.00 -32.00 32.00 64.00 32.00 -32.00 64.00 0.00 32.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 65.00 -32.00 0.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 -32.00 33.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -97.00 32.00 -96.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 32.00 -64.00 0.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 0.00 33.00 -32.00 0.00 -33.00 96.00 -64.00 32.00 -32.00 -32.00 64.00 -96.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 -65.00 32.00 -32.00 33.00 0.00 32.00 32.00 32.00 -32.00 96.00 -64.00 0.00 0.00 65.00 -96.00 64.00 -129.00 64.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -65.00 32.00 32.00 0.00 0.00 33.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 32.00 -65.00 -32.00 0.00 -161.00 65.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 33.00 0.00 32.00 -97.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -64.00 -33.00 0.00 0.00 -33.00 -32.00 65.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -33.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -65.00 64.00 0.00 -64.00 -32.00 0.00 0.00 -64.00 32.00 -32.00 32.00 -33.00 97.00 0.00 0.00 -64.00 32.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 32.00 0.00 0.00 -33.00 -64.00 33.00 -32.00 -33.00 -64.00 33.00 0.00 32.00 0.00 -32.00 -32.00 -33.00 64.00 0.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 0.00 32.00 64.00 0.00 -32.00 96.00 32.00 -64.00 32.00 -32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 33.00 -32.00 -65.00 -65.00 -64.00 32.00 -32.00 -64.00 0.00 32.00 -32.00 0.00 0.00 65.00 -33.00 -33.00 0.00 33.00 -32.00 0.00 0.00 64.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 64.00 0.00 0.00 33.00 -64.00 0.00 -32.00 64.00 32.00 32.00 64.00 0.00 -64.00 32.00 -64.00 -64.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 64.00 -64.00 64.00 -32.00 -32.00 -32.00 0.00 -65.00 0.00 -96.00 64.00 -32.00 0.00 -65.00 33.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 32.00 32.00 -64.00 0.00 -32.00 -32.00 0.00 -65.00 32.00 0.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -96.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -64.00 64.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 33.00 32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 96.00 65.00 32.00 0.00 33.00 0.00 -33.00 -32.00 33.00 -33.00 0.00 0.00 32.00 0.00 32.00 33.00 0.00 -33.00 64.00 -32.00 0.00 0.00 32.00 32.00 33.00 -64.00 32.00 0.00 32.00 -32.00 0.00 32.00 0.00 32.00 0.00 -32.00 32.00 -32.00 0.00 0.00 64.00 32.00 32.00 32.00 33.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -96.00 33.00 0.00 0.00 64.00 96.00 0.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -33.00 0.00 33.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -65.00 65.00 0.00 -32.00 -64.00 -33.00 32.00 65.00 -32.00 32.00 32.00 -32.00 32.00 0.00 -64.00 64.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 32.00 0.00 -64.00 32.00 64.00 0.00 32.00 -32.00 0.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 65.00 0.00 32.00 0.00 96.00 -32.00 -64.00 64.00 -64.00 161.00 -97.00 64.00 0.00 32.00 97.00 33.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 32.00 -32.00 64.00 -128.00 97.00 -65.00 0.00 -32.00 96.00 -32.00 97.00 -32.00 0.00 -32.00 0.00 32.00 -33.00 32.00 -64.00 64.00 0.00 32.00 -32.00 65.00 32.00 32.00 97.00 32.00 32.00 -32.00 0.00 32.00 64.00 -32.00 97.00 64.00 -33.00 0.00 33.00 0.00 32.00 32.00 32.00 0.00 0.00 32.00 -32.00 33.00 -32.00 -65.00 -65.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 -32.00 -32.00 -33.00 96.00 0.00 32.00 -96.00 129.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 -96.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 -97.00 -32.00 -32.00 -32.00 32.00 -33.00 33.00 -64.00 0.00 32.00 32.00 -64.00 -32.00 -32.00 -33.00 0.00 33.00 0.00 32.00 -32.00 0.00 -65.00 -32.00 -96.00 32.00 0.00 32.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 -32.00 -33.00 -32.00 -32.00 0.00 -64.00 -64.00 -97.00 -33.00 33.00 0.00 -33.00 -64.00 0.00 -32.00 -32.00 -64.00 0.00 -33.00 -96.00 -32.00 0.00 -32.00 -97.00 32.00 33.00 -32.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 -32.00 -96.00 -33.00 -97.00 0.00 0.00 -96.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -65.00zm15112.00 -3922.00l0.00 -33.00 32.00 0.00 0.00 33.00 -32.00 0.00zm-64.00 32.00l32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 0.00 0.00 -32.00zm-7042.00 3054.00l0.00 -32.00 0.00 32.00zm-1511.00 97.00l32.00 0.00 -32.00 0.00zm-2829.00 -161.00l0.00 32.00 0.00 -32.00zm-2701.00 418.00l0.00 32.00 32.00 0.00 -32.00 0.00 0.00 -32.00zm3858.00 -772.00l0.00 -32.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 0.00 32.00 0.00 -32.00 0.00 0.00 -32.00zm-482.00 0.00l0.00 -32.00 32.00 0.00 -32.00 32.00zm3280.00 418.00l-33.00 0.00 0.00 -32.00 33.00 0.00 0.00 32.00zm-6688.00 354.00l0.00 32.00 0.00 -32.00zm96.00 643.00l-32.00 -32.00 -32.00 32.00 32.00 0.00 32.00 0.00zm-96.00 -289.00l32.00 0.00 -32.00 0.00zm546.00 450.00l0.00 -32.00 0.00 32.00zm-128.00 -900.00l32.00 0.00 -32.00 0.00 0.00 32.00 0.00 -32.00zm160.00 -161.00l33.00 0.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 0.00 32.00 -33.00 0.00 0.00 -32.00 33.00 0.00 0.00 -32.00 -33.00 0.00zm2894.00 -450.00l32.00 0.00 -32.00 0.00zm-3215.00 482.00l32.00 0.00 32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 0.00 -32.00zm5048.00 96.00l32.00 0.00 -32.00 0.00zm-2701.00 -193.00l0.00 33.00 0.00 -33.00 0.00 33.00 0.00 -33.00zm3923.00 0.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm-3055.00 -64.00l0.00 -32.00 0.00 32.00zm3537.00 0.00l32.00 0.00 -32.00 0.00zm-6463.00 1608.00l0.00 -32.00 32.00 0.00 -32.00 0.00 0.00 32.00zm-450.00 -933.00l0.00 -32.00 32.00 0.00 -32.00 0.00 0.00 32.00zm3408.00 -707.00l0.00 32.00 0.00 -32.00zm161.00 -129.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm3344.00 225.00l32.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00zm-6881.00 708.00l0.00 -32.00 0.00 32.00 0.00 32.00 0.00 -32.00zm354.00 64.00l32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 33.00 -33.00 32.00 -64.00 0.00 64.00 -32.00 65.00 -65.00 32.00 0.00 0.00 -32.00zm-129.00 -643.00l0.00 -32.00 32.00 0.00 0.00 -32.00 33.00 0.00 -33.00 32.00 0.00 32.00 -32.00 0.00zm5209.00 0.00l0.00 -32.00 0.00 32.00zm-5048.00 611.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm6752.00 -643.00l32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 0.00zm-3601.00 -386.00l32.00 0.00 -32.00 0.00zm-1029.00 289.00l0.00 -32.00 32.00 32.00 -32.00 0.00zm4405.00 129.00l32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00zm-6848.00 32.00l0.00 -32.00 32.00 0.00 0.00 32.00 0.00 -32.00 0.00 32.00 -32.00 0.00zm7266.00 -1479.00l0.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00zm-7491.00 1897.00l32.00 -32.00 32.00 32.00 -64.00 65.00 0.00 -65.00zm3022.00 -739.00l32.00 -32.00 64.00 -33.00 33.00 65.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00zm547.00 0.00l0.00 -32.00 32.00 -33.00 32.00 -32.00 32.00 0.00 0.00 32.00 -32.00 33.00 -32.00 64.00 -32.00 -32.00zm3311.00 -708.00l0.00 32.00 0.00 33.00 32.00 -33.00 0.00 -32.00 -32.00 0.00zm-4791.00 1672.00l-32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 32.00 -64.00 -32.00 -32.00 -64.00 0.00 -97.00 0.00 -64.00 32.00 32.00 32.00 -96.00 96.00 0.00 65.00 -65.00 0.00 33.00 -32.00 -65.00 0.00 0.00 -33.00 32.00 -32.00 33.00 -64.00 0.00 -32.00 -33.00 -32.00 -64.00 64.00 0.00 -64.00 -64.00 32.00 -32.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 -32.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -33.00 97.00 -64.00 -33.00 97.00 33.00 0.00 0.00 32.00 32.00 0.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 96.00 0.00 0.00 -32.00 32.00 0.00 0.00 -64.00 -32.00 0.00 97.00 -32.00 0.00 -32.00 32.00 0.00 0.00 32.00 96.00 0.00 0.00 32.00 65.00 0.00 0.00 32.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 0.00 32.00 32.00 0.00 33.00 -32.00 0.00 64.00 32.00 0.00 96.00 0.00 32.00 0.00 0.00 65.00 0.00 32.00 33.00 0.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -33.00 96.00 -32.00 32.00 32.00 -32.00 33.00 -64.00 32.00 32.00 32.00 -32.00 64.00 32.00 0.00 32.00 0.00 65.00 -64.00 0.00 32.00 32.00 64.00 96.00 0.00 -32.00 65.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -33.00 -96.00 33.00 -65.00 64.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 0.00 0.00 32.00 -64.00 32.00 0.00 -32.00 -32.00 -32.00 -97.00 32.00 -32.00 0.00 -64.00 0.00 -33.00 32.00z\"\n          },\n          es: {\n            name: \"ES\",\n            path: \"M157827.00 128806.00l0.00 -33.00 0.00 -32.00 0.00 -64.00 64.00 0.00 0.00 32.00 33.00 0.00 -33.00 -96.00 -32.00 -32.00 32.00 0.00 33.00 -33.00 -33.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -65.00 64.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 32.00 -33.00 -32.00 33.00 -65.00 -65.00 0.00 -96.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -65.00 64.00 -96.00 0.00 -32.00 32.00 -32.00 65.00 0.00 0.00 -33.00 0.00 -32.00 -32.00 -96.00 32.00 -32.00 0.00 -97.00 32.00 -64.00 0.00 -161.00 0.00 -64.00 0.00 -65.00 -161.00 -32.00 -64.00 -160.00 0.00 -33.00 -65.00 0.00 33.00 -96.00 0.00 -32.00 64.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 96.00 0.00 32.00 -33.00 -32.00 -32.00 32.00 -96.00 33.00 -32.00 0.00 -129.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 450.00 0.00 997.00 0.00 193.00 0.00 0.00 -33.00 32.00 -32.00 32.00 32.00 96.00 -64.00 32.00 -96.00 0.00 -33.00 33.00 -32.00 32.00 -64.00 32.00 -32.00 -32.00 0.00 64.00 -64.00 -32.00 -33.00 32.00 -64.00 0.00 -64.00 32.00 -32.00 32.00 -97.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 -97.00 64.00 -64.00 -32.00 -64.00 0.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 -129.00 32.00 -32.00 129.00 0.00 64.00 -32.00 32.00 32.00 32.00 0.00 65.00 -96.00 0.00 -64.00 96.00 -33.00 32.00 33.00 65.00 -65.00 32.00 -32.00 0.00 -193.00 32.00 0.00 0.00 -32.00 -32.00 -64.00 32.00 0.00 32.00 -97.00 32.00 -64.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 -64.00 -32.00 0.00 -64.00 64.00 -32.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -33.00 32.00 -96.00 32.00 -32.00 65.00 0.00 64.00 -32.00 32.00 -65.00 32.00 0.00 32.00 0.00 32.00 -32.00 33.00 -161.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 0.00 -64.00 97.00 0.00 0.00 -32.00 96.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 32.00 -97.00 -32.00 -64.00 0.00 -64.00 96.00 32.00 97.00 32.00 161.00 0.00 0.00 -32.00 96.00 -129.00 0.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 128.00 -97.00 0.00 -32.00 33.00 -32.00 -65.00 -32.00 0.00 -65.00 32.00 -96.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 -64.00 -32.00 -33.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 33.00 -32.00 -65.00 0.00 -32.00 -32.00 64.00 -32.00 65.00 0.00 0.00 -97.00 -65.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 33.00 -33.00 0.00 -64.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 -64.00 0.00 0.00 -65.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 0.00 -65.00 -32.00 33.00 0.00 -65.00 -33.00 0.00 -32.00 32.00 -32.00 -64.00 -96.00 0.00 0.00 -64.00 -32.00 0.00 -33.00 -32.00 33.00 -65.00 -65.00 -64.00 32.00 -32.00 0.00 -64.00 65.00 0.00 128.00 -97.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -65.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -96.00 -32.00 -33.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 -32.00 -64.00 -64.00 -32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 -32.00 -65.00 -32.00 -32.00 -96.00 32.00 -33.00 0.00 -64.00 -64.00 0.00 64.00 0.00 32.00 -32.00 33.00 -64.00 -97.00 -32.00 0.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 33.00 -64.00 -33.00 -65.00 65.00 -96.00 289.00 0.00 32.00 0.00 65.00 0.00 64.00 -32.00 32.00 64.00 32.00 32.00 0.00 32.00 64.00 97.00 65.00 0.00 64.00 0.00 161.00 0.00 96.00 0.00 290.00 0.00 64.00 -32.00 32.00 -33.00 32.00 33.00 32.00 -33.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -32.00 33.00 -33.00 -65.00 -64.00 0.00 -193.00 0.00 -32.00 -32.00 -193.00 -32.00 -32.00 -161.00 -32.00 -32.00 -32.00 -64.00 0.00 -65.00 -65.00 -64.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 32.00 32.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -257.00 32.00 0.00 0.00 -96.00 32.00 -290.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -160.00 -32.00 -129.00 0.00 -418.00 -33.00 -32.00 -32.00 64.00 -96.00 64.00 -32.00 65.00 -32.00 -97.00 0.00 0.00 -65.00 0.00 -64.00 65.00 0.00 0.00 -32.00 0.00 -64.00 0.00 -97.00 -33.00 -32.00 0.00 -129.00 33.00 -32.00 96.00 -96.00 161.00 -129.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 128.00 -65.00 65.00 0.00 0.00 -32.00 0.00 -32.00 96.00 -32.00 -32.00 64.00 32.00 0.00 32.00 -96.00 65.00 0.00 0.00 64.00 96.00 0.00 32.00 -96.00 32.00 -33.00 65.00 33.00 32.00 32.00 32.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 32.00 0.00 32.00 32.00 32.00 0.00 65.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 64.00 65.00 0.00 64.00 32.00 0.00 64.00 32.00 0.00 32.00 33.00 32.00 0.00 65.00 0.00 32.00 0.00 96.00 32.00 33.00 32.00 128.00 -32.00 -32.00 -225.00 -611.00 -579.00 32.00 -32.00 32.00 0.00 32.00 -65.00 33.00 65.00 32.00 0.00 32.00 32.00 32.00 -32.00 97.00 -129.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 32.00 32.00 33.00 0.00 32.00 64.00 -32.00 65.00 64.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 -32.00 96.00 32.00 0.00 32.00 0.00 65.00 32.00 32.00 -32.00 64.00 0.00 64.00 0.00 0.00 65.00 32.00 32.00 97.00 -65.00 32.00 33.00 32.00 -33.00 65.00 33.00 32.00 -33.00 32.00 -64.00 96.00 -32.00 0.00 -64.00 65.00 -33.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 64.00 0.00 64.00 0.00 0.00 -97.00 97.00 0.00 96.00 -64.00 97.00 -64.00 32.00 0.00 64.00 96.00 97.00 0.00 96.00 96.00 32.00 -64.00 129.00 32.00 64.00 0.00 129.00 0.00 0.00 32.00 64.00 0.00 32.00 -32.00 64.00 32.00 33.00 -32.00 64.00 0.00 64.00 65.00 32.00 0.00 33.00 64.00 64.00 -32.00 0.00 32.00 96.00 64.00 33.00 0.00 64.00 32.00 128.00 65.00 772.00 482.00 547.00 354.00 128.00 96.00 32.00 32.00 1062.00 676.00 64.00 32.00 32.00 32.00 0.00 64.00 0.00 32.00 -161.00 322.00 0.00 32.00 -64.00 225.00 -64.00 161.00 0.00 225.00 0.00 32.00 0.00 161.00 32.00 64.00 -65.00 193.00 -32.00 322.00 -32.00 385.00 0.00 258.00 64.00 546.00 97.00 708.00 32.00 353.00 64.00 354.00 33.00 322.00 -33.00 289.00 -160.00 482.00 -193.00 450.00 -161.00 354.00 0.00 96.00 -64.00 33.00 -33.00 0.00 -64.00 0.00 -161.00 64.00 -193.00 96.00 -96.00 65.00 -225.00 193.00 -193.00 193.00 -129.00 128.00 -32.00 64.00 0.00 65.00 -32.00 96.00 -64.00 97.00 -32.00 64.00 -33.00 32.00 0.00 32.00 -32.00 33.00 0.00 64.00 -96.00 64.00 -64.00 32.00 -33.00 65.00 0.00 32.00 33.00 32.00 -33.00 32.00 -32.00 64.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 129.00 -129.00 32.00 -32.00 64.00 97.00 97.00 0.00 160.00 -65.00 225.00 0.00 97.00 -32.00 32.00 0.00 96.00 -32.00 65.00 -64.00 128.00 -97.00 97.00 -32.00 96.00 0.00 32.00 -64.00 33.00 0.00 -33.00 0.00 -32.00 -32.00 -64.00 -65.00 0.00 -64.00 32.00 -32.00 64.00 32.00 33.00 -32.00 32.00 64.00 0.00 0.00 32.00 -64.00 0.00 32.00 0.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 64.00 -32.00 33.00 0.00 -33.00 0.00 0.00 32.00 33.00 0.00 -33.00 0.00 0.00 32.00 33.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 97.00 -32.00 32.00 -97.00 161.00 -32.00 128.00 0.00 33.00 -128.00 257.00 -65.00 161.00 0.00 32.00 -32.00 0.00 -32.00 96.00 -129.00 193.00 0.00 97.00 -96.00 128.00 -32.00 65.00 32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 0.00 33.00 -33.00 -33.00 0.00 -64.00 -32.00 0.00 32.00 -32.00 33.00 32.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 -32.00 -32.00 64.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 64.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 97.00 -64.00 129.00 32.00 32.00 -32.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -64.00 0.00 -96.00 129.00 -33.00 64.00 0.00 32.00 -32.00 64.00 32.00 0.00 -32.00 33.00 -32.00 -33.00 -64.00 33.00 -64.00 128.00 -33.00 0.00 0.00 32.00 -32.00 0.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 -96.00 -65.00 32.00 -64.00 32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 32.00 33.00 -65.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 33.00 -65.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 32.00 0.00 65.00 -96.00 96.00 -33.00 65.00 0.00 32.00 -32.00 96.00 0.00 129.00 32.00 64.00 -32.00 0.00 0.00 32.00 -32.00 129.00 -64.00 32.00 -129.00 418.00 -129.00 64.00 -32.00 65.00 -96.00 64.00 -64.00 96.00 -129.00 225.00 -32.00 97.00 0.00 129.00 0.00 96.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -65.00 -32.00 -96.00 -32.00 0.00 -65.00 0.00 -64.00 32.00 -64.00 -97.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -97.00 32.00 -64.00 0.00 -32.00 32.00 -65.00 33.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 32.00 -33.00 -32.00 33.00 0.00 -33.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -33.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 0.00 33.00 -33.00 -33.00 -32.00 0.00 -32.00 0.00 -64.00 -96.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -128.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -33.00 0.00 -64.00 64.00 -64.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 -32.00 0.00 -65.00 -32.00 0.00 -64.00 0.00 -33.00 -32.00 -32.00 0.00 0.00 64.00 -64.00 -64.00 -96.00 32.00 -33.00 -64.00 -32.00 64.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 -65.00 -97.00 33.00 -96.00 -65.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -64.00 0.00 0.00 -32.00 64.00 -32.00 0.00 -33.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 65.00 -128.00 -32.00 0.00 0.00 -33.00 -33.00 0.00 0.00 -64.00 33.00 0.00 0.00 32.00 32.00 0.00 0.00 -64.00 -32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 -33.00 -64.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 0.00 0.00 -65.00 -32.00 0.00 0.00 -128.00 -65.00 -32.00 -32.00 -97.00 32.00 0.00 33.00 -32.00 32.00 -96.00 -32.00 0.00 0.00 -33.00 32.00 -96.00 32.00 0.00 -64.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 -64.00 32.00 -97.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 -64.00 -64.00 0.00 0.00 -33.00 -33.00 0.00 -96.00 0.00 -32.00 33.00 -64.00 0.00 32.00 -65.00 -32.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 -65.00 -65.00 33.00 -32.00 0.00zm7170.00 -1190.00l32.00 0.00 -32.00 0.00zm-64.00 450.00l0.00 -32.00 0.00 32.00zm-64.00 -96.00l-32.00 0.00 32.00 0.00zm-547.00 321.00l-64.00 0.00 -32.00 0.00 0.00 -32.00 -33.00 96.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 33.00 65.00 32.00 32.00 -32.00 -65.00 0.00 33.00 -65.00 32.00 -32.00 64.00 32.00 0.00 -32.00zm579.00 -225.00l0.00 -32.00 0.00 32.00zm386.00 -1157.00l32.00 0.00 -32.00 0.00z\"\n          },\n          sc: {\n            name: \"SC\",\n            path: \"M101205.00 160059.00l0.00 -33.00 -32.00 -32.00 32.00 -32.00 161.00 -32.00 0.00 -32.00 -97.00 32.00 -32.00 -64.00 32.00 0.00 65.00 -32.00 0.00 -33.00 0.00 -32.00 -65.00 -32.00 0.00 -32.00 33.00 0.00 32.00 64.00 32.00 0.00 96.00 -32.00 -128.00 -96.00 0.00 -33.00 32.00 -64.00 64.00 64.00 65.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 -64.00 -32.00 -64.00 64.00 0.00 64.00 64.00 33.00 64.00 64.00 -32.00 -32.00 -32.00 -65.00 -32.00 -32.00 -129.00 32.00 32.00 65.00 65.00 32.00 -33.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 64.00 0.00 32.00 64.00 65.00 -64.00 -65.00 -65.00 97.00 0.00 32.00 0.00 0.00 -32.00 -97.00 -64.00 33.00 0.00 0.00 -64.00 64.00 32.00 64.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 -32.00 129.00 64.00 32.00 0.00 32.00 0.00 -64.00 -32.00 -65.00 -64.00 65.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 -64.00 -97.00 -32.00 32.00 -32.00 33.00 -64.00 -65.00 0.00 0.00 -33.00 161.00 33.00 0.00 -33.00 -32.00 -32.00 -32.00 -32.00 -97.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 -64.00 0.00 0.00 32.00 -64.00 0.00 -65.00 -64.00 65.00 32.00 32.00 -32.00 32.00 0.00 0.00 -64.00 -32.00 -32.00 -32.00 -65.00 -33.00 65.00 -64.00 0.00 32.00 -65.00 -64.00 -32.00 0.00 -64.00 32.00 64.00 64.00 -32.00 33.00 -64.00 -65.00 -65.00 0.00 -32.00 32.00 0.00 33.00 65.00 64.00 -65.00 -64.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -64.00 0.00 -33.00 0.00 33.00 -65.00 0.00 0.00 -33.00 -32.00 0.00 -64.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -64.00 32.00 0.00 33.00 -64.00 -33.00 -32.00 33.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -129.00 64.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 65.00 -32.00 -32.00 -32.00 -65.00 -32.00 65.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -64.00 -64.00 0.00 0.00 -97.00 32.00 0.00 0.00 32.00 32.00 -32.00 64.00 32.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 -32.00 65.00 0.00 -65.00 -32.00 0.00 64.00 -32.00 32.00 32.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 -65.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 -64.00 -32.00 0.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -65.00 65.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 64.00 -97.00 32.00 -64.00 32.00 -64.00 0.00 -65.00 0.00 -32.00 65.00 32.00 32.00 0.00 64.00 0.00 97.00 -32.00 32.00 97.00 32.00 0.00 97.00 64.00 0.00 32.00 128.00 0.00 129.00 32.00 96.00 -32.00 32.00 0.00 32.00 0.00 97.00 -64.00 64.00 0.00 32.00 -32.00 193.00 -129.00 32.00 -32.00 65.00 64.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 32.00 65.00 0.00 32.00 32.00 32.00 0.00 129.00 -64.00 0.00 64.00 32.00 0.00 64.00 97.00 0.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 65.00 65.00 128.00 64.00 0.00 32.00 32.00 0.00 65.00 64.00 64.00 0.00 32.00 33.00 32.00 0.00 33.00 -33.00 32.00 0.00 32.00 65.00 32.00 32.00 32.00 32.00 64.00 32.00 33.00 0.00 32.00 32.00 32.00 32.00 64.00 0.00 129.00 -64.00 96.00 -32.00 193.00 -129.00 193.00 97.00 64.00 -32.00 33.00 0.00 64.00 -32.00 32.00 32.00 64.00 0.00 33.00 0.00 32.00 0.00 32.00 0.00 128.00 -65.00 33.00 0.00 64.00 0.00 64.00 0.00 32.00 0.00 32.00 33.00 33.00 0.00 64.00 -33.00 64.00 33.00 32.00 0.00 33.00 -33.00 32.00 0.00 32.00 -32.00 64.00 32.00 32.00 65.00 33.00 -32.00 32.00 32.00 32.00 0.00 96.00 -32.00 97.00 96.00 64.00 32.00 32.00 32.00 0.00 32.00 64.00 33.00 33.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 64.00 -64.00 65.00 32.00 32.00 -32.00 32.00 32.00 64.00 -32.00 97.00 -32.00 128.00 96.00 65.00 0.00 64.00 97.00 32.00 0.00 32.00 0.00 32.00 0.00 97.00 0.00 32.00 0.00 64.00 -33.00 32.00 -32.00 33.00 32.00 32.00 33.00 32.00 0.00 64.00 -33.00 65.00 65.00 32.00 -65.00 32.00 65.00 64.00 -32.00 97.00 0.00 96.00 96.00 0.00 32.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 96.00 0.00 97.00 -32.00 64.00 -64.00 129.00 128.00 64.00 0.00 65.00 0.00 32.00 32.00 64.00 0.00 64.00 33.00 0.00 96.00 32.00 32.00 33.00 0.00 32.00 65.00 64.00 0.00 32.00 32.00 32.00 0.00 32.00 32.00 65.00 32.00 0.00 32.00 64.00 0.00 0.00 32.00 32.00 65.00 129.00 -33.00 0.00 33.00 64.00 0.00 65.00 32.00 32.00 -32.00 96.00 64.00 129.00 0.00 96.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 65.00 -64.00 64.00 32.00 97.00 -64.00 96.00 32.00 64.00 0.00 258.00 -64.00 128.00 32.00 64.00 0.00 129.00 -97.00 97.00 65.00 64.00 64.00 64.00 0.00 97.00 0.00 64.00 0.00 257.00 0.00 97.00 -32.00 64.00 32.00 32.00 64.00 32.00 33.00 -32.00 64.00 64.00 0.00 33.00 0.00 32.00 32.00 32.00 64.00 0.00 65.00 64.00 64.00 32.00 96.00 129.00 65.00 -32.00 64.00 64.00 -32.00 32.00 -32.00 0.00 -65.00 -64.00 -64.00 64.00 -64.00 65.00 0.00 64.00 -32.00 64.00 0.00 97.00 -33.00 32.00 0.00 0.00 33.00 64.00 -33.00 32.00 33.00 97.00 0.00 0.00 -65.00 32.00 0.00 0.00 -32.00 64.00 0.00 32.00 -32.00 97.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -64.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 -33.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -96.00 -32.00 -33.00 -65.00 0.00 -32.00 65.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 0.00 -65.00 32.00 -32.00 96.00 -32.00 -32.00 -32.00 -32.00 -32.00 64.00 -64.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 33.00 0.00 0.00 -32.00 96.00 -32.00 32.00 -32.00 32.00 -65.00 33.00 0.00 32.00 0.00 64.00 0.00 64.00 -32.00 32.00 0.00 0.00 -32.00 65.00 -32.00 32.00 32.00 32.00 0.00 0.00 -32.00 64.00 0.00 65.00 -32.00 32.00 -32.00 32.00 -33.00 0.00 -64.00 32.00 0.00 32.00 -96.00 97.00 64.00 32.00 32.00 257.00 -96.00 32.00 32.00 97.00 64.00 0.00 97.00 96.00 0.00 32.00 64.00 33.00 0.00 32.00 -64.00 -65.00 -129.00 33.00 -32.00 32.00 0.00 96.00 96.00 0.00 161.00 64.00 0.00 33.00 0.00 32.00 -32.00 32.00 -97.00 32.00 -96.00 32.00 0.00 97.00 129.00 32.00 32.00 32.00 -32.00 32.00 -97.00 64.00 -32.00 33.00 -32.00 32.00 -32.00 193.00 -32.00 32.00 32.00 0.00 96.00 64.00 0.00 64.00 0.00 33.00 -32.00 -97.00 -193.00 129.00 -64.00 32.00 -32.00 64.00 -97.00 32.00 -64.00 32.00 -32.00 65.00 -32.00 32.00 -33.00 32.00 0.00 -64.00 -128.00 64.00 -65.00 32.00 -64.00 65.00 -64.00 128.00 32.00 64.00 0.00 97.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 0.00 -64.00 33.00 -33.00 0.00 -32.00 -33.00 0.00 -96.00 97.00 -97.00 32.00 0.00 32.00 97.00 32.00 0.00 0.00 64.00 0.00 32.00 129.00 -64.00 64.00 -32.00 32.00 32.00 32.00 -32.00 33.00 32.00 64.00 0.00 -32.00 0.00 32.00 32.00 0.00 -64.00 32.00 0.00 0.00 32.00 64.00 0.00 0.00 32.00 0.00 -32.00 65.00 32.00 -33.00 32.00 33.00 33.00 32.00 64.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 32.00 160.00 96.00 33.00 65.00 -33.00 64.00 0.00 32.00 33.00 -32.00 0.00 32.00 32.00 32.00 64.00 32.00 32.00 33.00 32.00 -33.00 32.00 33.00 0.00 -33.00 -64.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 64.00 0.00 0.00 -64.00 97.00 -64.00 96.00 -32.00 65.00 -33.00 64.00 33.00 0.00 -65.00 0.00 -32.00 96.00 32.00 0.00 65.00 33.00 64.00 32.00 -32.00 32.00 0.00 32.00 32.00 64.00 0.00 0.00 32.00 33.00 32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 -32.00 32.00 32.00 64.00 -32.00 32.00 32.00 -32.00 97.00 0.00 32.00 65.00 -65.00 64.00 97.00 32.00 -64.00 32.00 32.00 97.00 -65.00 32.00 -96.00 32.00 96.00 0.00 33.00 0.00 -33.00 32.00 -32.00 32.00 0.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 0.00 97.00 64.00 32.00 -32.00 -32.00 -64.00 0.00 -32.00 64.00 0.00 0.00 -32.00 96.00 32.00 32.00 32.00 0.00 96.00 -32.00 65.00 129.00 -129.00 -64.00 -32.00 32.00 -32.00 64.00 -32.00 32.00 32.00 -32.00 32.00 32.00 32.00 97.00 -32.00 32.00 32.00 32.00 32.00 32.00 -32.00 129.00 32.00 -32.00 32.00 32.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -64.00 33.00 32.00 0.00 64.00 -65.00 32.00 32.00 0.00 33.00 -32.00 0.00 64.00 32.00 65.00 32.00 0.00 32.00 -33.00 32.00 97.00 64.00 32.00 0.00 -32.00 33.00 -32.00 32.00 96.00 32.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 32.00 0.00 32.00 64.00 64.00 32.00 0.00 97.00 65.00 0.00 64.00 0.00 -64.00 64.00 32.00 64.00 32.00 0.00 64.00 -64.00 65.00 32.00 32.00 64.00 64.00 0.00 -64.00 65.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 32.00 33.00 0.00 0.00 32.00 0.00 32.00 64.00 -32.00 0.00 -64.00 32.00 0.00 0.00 64.00 -32.00 32.00 64.00 32.00 32.00 0.00 0.00 -32.00 0.00 32.00 33.00 0.00 32.00 65.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -65.00 64.00 97.00 65.00 32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 32.00 0.00 32.00 65.00 0.00 -32.00 33.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -33.00 0.00 -32.00 0.00 32.00 -32.00 -64.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 32.00 65.00 -65.00 32.00 -64.00 64.00 0.00 32.00 0.00 0.00 64.00 33.00 -32.00 32.00 0.00 32.00 -32.00 0.00 32.00 0.00 -64.00 64.00 32.00 32.00 -64.00 0.00 32.00 32.00 32.00 0.00 -32.00 33.00 0.00 64.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 33.00 0.00 32.00 -32.00 96.00 -64.00 32.00 0.00 32.00 0.00 0.00 32.00 33.00 -32.00 -33.00 -32.00 65.00 0.00 0.00 -32.00 -32.00 0.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 65.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 0.00 64.00 -32.00 33.00 -32.00 64.00 0.00 0.00 -32.00 64.00 0.00 32.00 -33.00 33.00 0.00 32.00 33.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 -65.00 32.00 0.00 -32.00 0.00 32.00 -32.00 65.00 32.00 32.00 -32.00 32.00 65.00 32.00 0.00 0.00 -33.00 64.00 0.00 33.00 -32.00 0.00 65.00 64.00 64.00 32.00 -32.00 32.00 0.00 32.00 -65.00 33.00 0.00 32.00 65.00 32.00 0.00 64.00 0.00 0.00 -32.00 32.00 0.00 33.00 -33.00 32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 -64.00 -32.00 675.00 0.00 515.00 0.00 161.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 96.00 -65.00 32.00 33.00 33.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 96.00 -64.00 290.00 32.00 64.00 32.00 32.00 0.00 225.00 65.00 225.00 64.00 0.00 32.00 0.00 129.00 0.00 32.00 -32.00 32.00 32.00 -32.00 161.00 64.00 97.00 64.00 32.00 0.00 -32.00 33.00 -33.00 0.00 33.00 -33.00 64.00 -32.00 32.00 -128.00 225.00 -97.00 193.00 -32.00 161.00 -128.00 225.00 -33.00 128.00 0.00 97.00 -96.00 128.00 -64.00 161.00 -97.00 193.00 -32.00 97.00 -32.00 32.00 -64.00 193.00 -33.00 257.00 0.00 96.00 33.00 65.00 -33.00 96.00 33.00 161.00 32.00 32.00 32.00 32.00 64.00 32.00 0.00 -64.00 64.00 32.00 33.00 65.00 32.00 32.00 96.00 0.00 32.00 -65.00 0.00 33.00 65.00 0.00 -32.00 64.00 32.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 129.00 -96.00 0.00 -32.00 32.00 -33.00 193.00 -32.00 128.00 32.00 65.00 -32.00 32.00 65.00 64.00 32.00 -32.00 -32.00 64.00 0.00 97.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -33.00 32.00 65.00 97.00 64.00 32.00 32.00 0.00 0.00 -32.00 32.00 -33.00 33.00 33.00 0.00 -33.00 32.00 0.00 0.00 33.00 32.00 64.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 0.00 64.00 -32.00 33.00 -32.00 96.00 -33.00 32.00 33.00 65.00 -33.00 0.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 64.00 32.00 97.00 97.00 96.00 64.00 64.00 64.00 0.00 32.00 0.00 65.00 -32.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 -33.00 32.00 33.00 32.00 -65.00 32.00 32.00 -64.00 65.00 64.00 96.00 65.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 64.00 32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 -33.00 64.00 33.00 96.00 32.00 0.00 64.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -33.00 0.00 -64.00 32.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 -64.00 -64.00 -64.00 -32.00 -97.00 32.00 -32.00 32.00 -64.00 32.00 -64.00 65.00 0.00 -33.00 -65.00 65.00 -32.00 0.00 -32.00 0.00 0.00 128.00 -32.00 33.00 0.00 96.00 64.00 129.00 32.00 64.00 65.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 33.00 -32.00 0.00 128.00 32.00 32.00 64.00 0.00 -32.00 33.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 64.00 -32.00 65.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 129.00 0.00 32.00 32.00 32.00 -64.00 0.00 0.00 32.00 32.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -96.00 32.00 -32.00 64.00 -33.00 64.00 0.00 97.00 -32.00 32.00 65.00 161.00 0.00 64.00 96.00 64.00 -32.00 65.00 64.00 64.00 129.00 32.00 0.00 32.00 32.00 65.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 0.00 -64.00 -32.00 0.00 -64.00 0.00 -64.00 32.00 32.00 0.00 -32.00 64.00 0.00 65.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 32.00 32.00 65.00 32.00 96.00 32.00 0.00 64.00 0.00 33.00 32.00 64.00 0.00 64.00 -32.00 64.00 32.00 65.00 33.00 64.00 -33.00 64.00 0.00 33.00 -32.00 32.00 65.00 64.00 -33.00 96.00 65.00 65.00 32.00 128.00 -32.00 33.00 0.00 -33.00 -32.00 0.00 -33.00 33.00 -32.00 64.00 32.00 64.00 33.00 32.00 0.00 -32.00 64.00 0.00 0.00 64.00 -32.00 65.00 -32.00 0.00 -33.00 64.00 -96.00 64.00 0.00 65.00 -32.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 97.00 0.00 96.00 64.00 65.00 32.00 -33.00 64.00 65.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 64.00 0.00 64.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 0.00 32.00 -33.00 64.00 0.00 32.00 33.00 0.00 -33.00 0.00 0.00 33.00 33.00 0.00 0.00 32.00 -33.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -64.00 128.00 0.00 32.00 32.00 0.00 0.00 33.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 64.00 32.00 0.00 -32.00 32.00 32.00 -160.00 97.00 -129.00 225.00 -32.00 129.00 32.00 32.00 32.00 0.00 -32.00 32.00 -97.00 128.00 -64.00 97.00 -32.00 129.00 0.00 32.00 32.00 0.00 -32.00 32.00 -64.00 96.00 -32.00 97.00 0.00 128.00 96.00 0.00 0.00 33.00 32.00 32.00 -32.00 0.00 -64.00 64.00 0.00 32.00 32.00 0.00 -32.00 64.00 -65.00 33.00 -64.00 64.00 32.00 32.00 -32.00 32.00 -32.00 0.00 -97.00 65.00 0.00 64.00 33.00 32.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 -258.00 97.00 -418.00 225.00 -386.00 257.00 -514.00 322.00 -482.00 385.00 -129.00 129.00 -64.00 32.00 -225.00 193.00 -225.00 225.00 -386.00 418.00 -32.00 32.00 -611.00 708.00 -322.00 450.00 -96.00 0.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 65.00 -32.00 -32.00 0.00 0.00 -33.00 0.00 33.00 -33.00 -33.00 0.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -97.00 -64.00 -32.00 0.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -33.00 32.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -65.00 -65.00 0.00 -96.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -33.00 32.00 -32.00 64.00 -64.00 32.00 -64.00 33.00 -32.00 -33.00 -129.00 65.00 -32.00 32.00 -97.00 0.00 0.00 32.00 -32.00 0.00 -96.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 32.00 129.00 32.00 0.00 65.00 64.00 64.00 64.00 64.00 0.00 129.00 193.00 -64.00 -32.00 -65.00 0.00 32.00 -32.00 0.00 -32.00 -96.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 -33.00 -65.00 0.00 -32.00 -32.00 32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -97.00 33.00 0.00 -65.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 96.00 -64.00 33.00 0.00 -33.00 -32.00 -32.00 0.00 32.00 -33.00 -32.00 0.00 97.00 -32.00 0.00 -32.00 -32.00 -32.00 -65.00 0.00 65.00 -64.00 0.00 32.00 64.00 0.00 -32.00 32.00 64.00 0.00 0.00 32.00 96.00 0.00 -32.00 64.00 -32.00 0.00 0.00 33.00 0.00 32.00 97.00 -65.00 -33.00 65.00 65.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 32.00 0.00 -96.00 0.00 -32.00 32.00 0.00 -32.00 0.00 0.00 -64.00 -33.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 64.00 0.00 -32.00 0.00 0.00 32.00 -64.00 32.00 0.00 32.00 64.00 0.00 -32.00 0.00 32.00 33.00 0.00 32.00 64.00 -65.00 0.00 65.00 32.00 -32.00 33.00 0.00 32.00 0.00 32.00 -33.00 32.00 33.00 64.00 0.00 -32.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 65.00 0.00 0.00 -32.00 0.00 -65.00 -33.00 -32.00 97.00 0.00 32.00 0.00 0.00 32.00 32.00 -32.00 -32.00 -64.00 32.00 0.00 64.00 0.00 33.00 0.00 -33.00 0.00 0.00 -64.00 33.00 -33.00 -33.00 0.00 0.00 -64.00 65.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 0.00 -32.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -96.00 32.00 0.00 32.00 0.00 -32.00 -96.00 0.00 225.00 -97.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -97.00 32.00 65.00 -64.00 0.00 -65.00 32.00 -32.00 32.00 32.00 0.00 -64.00 0.00 -32.00 32.00 32.00 64.00 -32.00 -64.00 -32.00 -32.00 -33.00 -64.00 -32.00 0.00 -96.00 32.00 0.00 0.00 -65.00 32.00 0.00 -96.00 0.00 -33.00 -32.00 65.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 32.00 0.00 0.00 -32.00 32.00 0.00 -64.00 0.00 -32.00 32.00 0.00 -64.00 -97.00 32.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -64.00 32.00 32.00 -129.00 -32.00 0.00 0.00 -32.00 0.00 -96.00 64.00 32.00 0.00 -65.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 -64.00 -32.00 0.00 -64.00 32.00 -64.00 65.00 0.00 32.00 -33.00 0.00 33.00 32.00 32.00 32.00 0.00 32.00 -32.00 32.00 32.00 -64.00 96.00 32.00 0.00 0.00 32.00 65.00 -32.00 -33.00 -32.00 33.00 -64.00 0.00 -65.00 0.00 -32.00 64.00 0.00 -32.00 0.00 96.00 0.00 0.00 65.00 32.00 0.00 0.00 -33.00 0.00 -32.00 33.00 -32.00 64.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 -33.00 0.00 0.00 -32.00 33.00 0.00 32.00 -33.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 32.00 0.00 33.00 -32.00 0.00 64.00 32.00 33.00 32.00 0.00 64.00 -65.00 0.00 65.00 129.00 -33.00 64.00 0.00 32.00 0.00 0.00 33.00 32.00 0.00 33.00 -33.00 32.00 -32.00 -32.00 -64.00 -65.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -96.00 -65.00 -32.00 -32.00 0.00 32.00 -65.00 65.00 -64.00 -65.00 -64.00 33.00 -32.00 -33.00 0.00 0.00 -33.00 -96.00 33.00 -32.00 -33.00 32.00 -32.00 0.00 -128.00 -32.00 0.00 0.00 32.00 -64.00 32.00 32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 33.00 -33.00 -33.00 -32.00 -32.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 0.00 64.00 32.00 32.00 -64.00 -32.00 -65.00 97.00 -32.00 -33.00 32.00 -32.00 -128.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -65.00 -33.00 97.00 -32.00 32.00 0.00 -32.00 0.00 -64.00 -32.00 -33.00 32.00 -64.00 -32.00 0.00 32.00 32.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -97.00 -65.00 -32.00 0.00 -32.00 33.00 32.00 32.00 32.00 32.00 -64.00 32.00 -32.00 -64.00 -32.00 -65.00 -32.00 0.00 -33.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -64.00 33.00 -65.00 -33.00 -32.00 33.00 -32.00 64.00 -32.00 32.00 -129.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 64.00 -64.00 -64.00 -64.00 0.00 0.00 -32.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -65.00 32.00 -32.00 65.00 -32.00 0.00 64.00 96.00 33.00 64.00 -97.00 33.00 -32.00 -33.00 0.00 -96.00 -64.00 -97.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 65.00 -32.00 32.00 -33.00 -32.00 -64.00 -129.00 0.00 -32.00 -96.00 64.00 32.00 32.00 32.00 0.00 0.00 32.00 -97.00 33.00 -64.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 32.00 97.00 -32.00 0.00 -32.00 32.00 0.00 -65.00 0.00 -128.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -32.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 -64.00 -129.00 0.00 -64.00 0.00 -32.00 -32.00 -65.00 -64.00 -64.00 0.00 -129.00 0.00 -96.00 -33.00 -32.00 0.00 -32.00 0.00 0.00 97.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -64.00 -32.00 -64.00 -97.00 -65.00 -64.00 -32.00 0.00 -64.00 64.00 -64.00 0.00 -33.00 -64.00 33.00 -65.00 -97.00 -96.00 -96.00 -32.00 32.00 -97.00 -65.00 -96.00 -32.00 -32.00 -64.00 -32.00 0.00 -97.00 -32.00 0.00 -64.00 0.00 -161.00 -96.00 -32.00 0.00 0.00 -97.00 0.00 -96.00 -32.00 -32.00 0.00 -32.00 -33.00 -33.00 -32.00 65.00 -64.00 -32.00 0.00 -33.00 32.00 -64.00 -32.00 -96.00 32.00 -65.00 -32.00 0.00 0.00 -32.00 -129.00 32.00 0.00 -32.00 -64.00 -96.00 -32.00 0.00 -97.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -97.00 -32.00 -64.00 -32.00 -32.00 -97.00 -32.00 32.00 -32.00 65.00 -32.00 32.00 -65.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 -65.00 -161.00 -32.00 32.00 -32.00 -64.00 -64.00 32.00 -65.00 -32.00 -32.00 -65.00 0.00 -128.00 -64.00 -32.00 -64.00 -33.00 -32.00 -32.00 32.00 -32.00 96.00 -64.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 -97.00 -64.00 -64.00 -64.00 0.00 -65.00 0.00 -64.00 0.00 -32.00 -97.00 0.00 -32.00 -32.00 32.00 -97.00 -32.00 -32.00 -64.00 -32.00 -32.00 0.00 -97.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 -97.00 0.00 -32.00 -96.00 0.00 -97.00 -64.00 -64.00 -64.00 -97.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -33.00 -65.00 -96.00 -64.00 0.00 -64.00 -32.00 -65.00 -64.00 33.00 -97.00 -33.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -33.00 -32.00 0.00 -64.00 -32.00 -97.00 65.00 -64.00 -65.00 -64.00 -32.00 32.00 -128.00 0.00 -33.00 -65.00 -32.00 -64.00 32.00 -32.00 33.00 -32.00 32.00 -32.00 64.00 -65.00 0.00 0.00 -32.00 0.00 -64.00 -96.00 -97.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 0.00 -129.00 -32.00 0.00 -32.00 -64.00 -96.00 0.00 -129.00 32.00 -64.00 -32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -33.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 32.00 -129.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 0.00 -65.00 96.00 -64.00 0.00 -32.00 -32.00 64.00 -193.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 0.00 0.00 97.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 32.00 -64.00 0.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 96.00 -32.00 33.00 -32.00 0.00 -65.00 -65.00 -64.00 -32.00 0.00 -32.00 -161.00 32.00 -64.00 0.00 0.00 64.00 64.00 65.00 0.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -96.00 -96.00 -65.00 32.00 -64.00 32.00 -32.00 -32.00 64.00 -161.00 0.00 -32.00 -64.00 0.00 -97.00 0.00 0.00 32.00 -32.00 32.00 32.00 97.00 0.00 32.00 -64.00 0.00 -64.00 -97.00 0.00 -160.00 -32.00 -33.00 -33.00 0.00 -64.00 33.00 -64.00 32.00 -64.00 0.00 -33.00 -32.00 129.00 -97.00 0.00 -32.00 0.00 -32.00 -96.00 -97.00 -97.00 0.00 -64.00 0.00 -65.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 0.00 32.00 0.00 161.00 0.00 32.00 0.00 0.00 -65.00 -65.00 -32.00 -96.00 0.00 -64.00 32.00 -33.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -65.00 -32.00 0.00 -96.00 65.00 -33.00 0.00 -32.00 0.00 -96.00 -32.00 -64.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 -65.00 0.00 -64.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 32.00 -161.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 65.00 -32.00 96.00 -32.00 64.00 -32.00 32.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 -96.00 -32.00 0.00 -129.00 -32.00 0.00 -32.00 65.00 -65.00 96.00 -32.00 32.00 -32.00 -96.00 -64.00 -32.00 32.00 -65.00 0.00 -96.00 0.00 -32.00 0.00 0.00 32.00 0.00 64.00 32.00 65.00 32.00 64.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -65.00 -64.00 -64.00 -32.00 -64.00 -65.00 -32.00 0.00 -65.00 65.00 -64.00 32.00 -32.00 -97.00 32.00 -128.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 0.00 32.00 33.00 128.00 -33.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 -32.00 -96.00 -96.00 0.00 -65.00 0.00 -32.00 32.00 -96.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -160.00 96.00 0.00 32.00 0.00 32.00 0.00 65.00 0.00 32.00 -97.00 0.00 -161.00 -32.00 -64.00 -97.00 -64.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 33.00 -96.00 32.00 -33.00 32.00 -32.00 0.00 -64.00 -32.00 -64.00 -97.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 0.00 97.00 -64.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -97.00 -33.00 -64.00 -32.00 0.00 -32.00 32.00 -64.00 65.00 -32.00 32.00 0.00 -32.00 -65.00 -33.00 0.00 -32.00 32.00 -96.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 -64.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 0.00 -128.00 -32.00 -32.00 -32.00 0.00 -128.00 64.00 0.00 32.00 -65.00 32.00 -96.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 -128.00 -96.00 -33.00 -32.00 0.00 -32.00 97.00 0.00 161.00 -32.00 32.00 -65.00 -32.00 -32.00 -33.00 -32.00 0.00 0.00 -96.00 32.00 -32.00 64.00 -97.00 0.00 -64.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -129.00 96.00 -32.00 0.00 -32.00 -32.00 0.00 -96.00 96.00 -129.00 33.00 -64.00 -33.00 -32.00 -32.00 0.00 -96.00 0.00 -32.00 0.00 -97.00 96.00 0.00 32.00 0.00 32.00 32.00 97.00 0.00 32.00 0.00 64.00 -193.00 65.00 -96.00 32.00 -32.00 0.00 0.00 -32.00 -64.00 -129.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 161.00 -32.00 32.00 -65.00 0.00 -160.00 -96.00 -32.00 0.00 -65.00 32.00 -193.00 96.00 -64.00 97.00 -32.00 0.00 -32.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 96.00 -161.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -96.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 97.00 -32.00 64.00 -225.00 64.00 -65.00 -32.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 0.00 64.00 0.00 32.00 0.00 32.00 64.00 65.00 0.00 32.00 0.00 64.00 0.00 32.00 -64.00 0.00 -33.00 0.00 -64.00 -32.00 -96.00 -96.00 -32.00 0.00 -65.00 0.00 -128.00 64.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -64.00 161.00 -33.00 0.00 -32.00 -32.00 0.00 -97.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 -64.00 -33.00 -32.00 0.00 -65.00 0.00 -32.00 33.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 -64.00 0.00 -64.00 -161.00 -65.00 -32.00 -128.00 97.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00zm24919.00 1607.00l0.00 -32.00 0.00 32.00zm0.00 997.00l0.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 -96.00 65.00 -32.00 96.00 32.00 -32.00 -161.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -33.00 64.00 -32.00 33.00 -32.00 32.00 -32.00 96.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -33.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -65.00 -96.00 0.00 -33.00 32.00 33.00 -32.00 64.00 -32.00 32.00 -64.00 96.00 32.00 97.00 0.00 32.00 -32.00 129.00 -32.00 96.00 -33.00 0.00 -64.00 -32.00 -32.00 32.00 64.00 -32.00 -96.00 0.00 -32.00 32.00 32.00 32.00 -32.00 33.00 -33.00 0.00 33.00 0.00 96.00 32.00 0.00 32.00 97.00 32.00 64.00 96.00 32.00 33.00 -64.00 32.00 32.00 0.00 32.00 -65.00 32.00 0.00 65.00 0.00 96.00 -96.00 32.00 -96.00 161.00 -65.00 96.00 0.00 97.00 0.00 32.00 0.00 32.00 32.00 -32.00 33.00 0.00 -33.00 64.00 0.00 32.00 -32.00 33.00 -32.00 64.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -97.00 97.00 -32.00 64.00 -32.00 129.00 -97.00 128.00 0.00 32.00 -32.00 65.00 0.00 64.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 0.00 0.00 32.00 64.00 0.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -65.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 -32.00 129.00 0.00 32.00 -97.00 64.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 32.00 -32.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -33.00 64.00 0.00 32.00 -64.00 32.00 -32.00 -32.00 -129.00 64.00 -96.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00zm32.00 -1093.00l-32.00 0.00 32.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 0.00 -32.00z\"\n          },\n          pb: {\n            name: \"PB\",\n            path: \"M172553.00 61123.00l32.00 -32.00 129.00 -32.00 0.00 -33.00 32.00 0.00 65.00 0.00 0.00 -64.00 64.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 -33.00 -33.00 -32.00 65.00 -64.00 32.00 -32.00 32.00 -32.00 64.00 -33.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 65.00 32.00 0.00 -64.00 -65.00 -32.00 -32.00 -65.00 -64.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 -32.00 -97.00 0.00 -32.00 32.00 -96.00 32.00 0.00 -32.00 0.00 64.00 -33.00 32.00 -32.00 0.00 -64.00 -64.00 -32.00 0.00 -65.00 32.00 -32.00 32.00 -32.00 64.00 -64.00 0.00 -64.00 -64.00 -65.00 64.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 -32.00 32.00 -64.00 64.00 -65.00 129.00 -128.00 0.00 -97.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 161.00 -129.00 32.00 0.00 -64.00 -64.00 -65.00 32.00 -32.00 0.00 -128.00 0.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 65.00 0.00 0.00 -64.00 32.00 0.00 32.00 -32.00 96.00 0.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 64.00 32.00 32.00 0.00 32.00 32.00 65.00 -64.00 32.00 0.00 64.00 -32.00 64.00 -33.00 -64.00 97.00 -64.00 96.00 32.00 65.00 -32.00 96.00 96.00 -32.00 64.00 0.00 33.00 32.00 96.00 64.00 96.00 -32.00 33.00 0.00 32.00 32.00 32.00 33.00 32.00 64.00 32.00 32.00 0.00 64.00 32.00 0.00 33.00 33.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 64.00 32.00 64.00 96.00 0.00 0.00 97.00 161.00 -97.00 32.00 0.00 64.00 -32.00 32.00 32.00 129.00 0.00 64.00 64.00 129.00 0.00 64.00 -32.00 65.00 129.00 64.00 0.00 32.00 0.00 64.00 -64.00 33.00 -65.00 64.00 -32.00 32.00 -96.00 32.00 -32.00 32.00 0.00 0.00 -33.00 32.00 0.00 0.00 -64.00 33.00 0.00 0.00 64.00 64.00 33.00 -32.00 64.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -97.00 65.00 -64.00 -33.00 -32.00 161.00 0.00 32.00 -32.00 32.00 -65.00 33.00 -32.00 0.00 32.00 64.00 65.00 64.00 0.00 65.00 -33.00 64.00 -64.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -129.00 129.00 64.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 -65.00 65.00 -32.00 32.00 0.00 -32.00 -32.00 64.00 -96.00 64.00 0.00 97.00 0.00 96.00 0.00 -32.00 0.00 -32.00 -65.00 0.00 -64.00 32.00 -32.00 -64.00 -65.00 64.00 -32.00 -64.00 -32.00 64.00 -64.00 32.00 0.00 0.00 -65.00 32.00 -32.00 161.00 -96.00 32.00 0.00 32.00 32.00 97.00 32.00 161.00 0.00 32.00 -64.00 96.00 0.00 97.00 0.00 64.00 -64.00 64.00 -33.00 65.00 33.00 96.00 0.00 0.00 -65.00 64.00 0.00 97.00 0.00 0.00 -32.00 64.00 0.00 32.00 32.00 129.00 -32.00 0.00 -128.00 32.00 -33.00 97.00 0.00 96.00 0.00 64.00 0.00 65.00 -128.00 32.00 0.00 96.00 0.00 97.00 -97.00 128.00 -32.00 32.00 -32.00 65.00 32.00 64.00 0.00 32.00 -64.00 32.00 -64.00 33.00 -33.00 32.00 0.00 64.00 33.00 32.00 64.00 97.00 -32.00 64.00 32.00 96.00 0.00 -32.00 32.00 32.00 161.00 0.00 64.00 32.00 64.00 -64.00 161.00 64.00 32.00 33.00 0.00 -33.00 97.00 -32.00 32.00 -96.00 32.00 0.00 64.00 -64.00 32.00 -97.00 33.00 -32.00 32.00 -32.00 0.00 -64.00 64.00 -97.00 97.00 0.00 160.00 -64.00 0.00 -97.00 -32.00 -64.00 32.00 -32.00 97.00 -32.00 32.00 -129.00 64.00 -32.00 0.00 -32.00 97.00 0.00 128.00 -65.00 65.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 64.00 32.00 65.00 33.00 32.00 -33.00 96.00 -32.00 290.00 -96.00 96.00 -97.00 0.00 -32.00 0.00 -96.00 0.00 -32.00 0.00 -65.00 97.00 0.00 32.00 32.00 32.00 -32.00 129.00 0.00 64.00 32.00 0.00 0.00 64.00 0.00 129.00 33.00 64.00 -33.00 64.00 33.00 33.00 -65.00 160.00 354.00 -64.00 64.00 0.00 258.00 32.00 128.00 -64.00 129.00 32.00 -32.00 64.00 64.00 65.00 64.00 32.00 0.00 128.00 -32.00 65.00 64.00 64.00 0.00 32.00 33.00 32.00 0.00 65.00 96.00 64.00 193.00 0.00 193.00 -129.00 96.00 -128.00 32.00 0.00 226.00 -65.00 64.00 -32.00 96.00 -32.00 32.00 -32.00 161.00 -129.00 64.00 0.00 33.00 65.00 32.00 96.00 0.00 64.00 32.00 65.00 0.00 32.00 64.00 0.00 -32.00 32.00 0.00 32.00 97.00 -96.00 128.00 -65.00 32.00 0.00 161.00 -64.00 161.00 -64.00 321.00 289.00 0.00 257.00 193.00 -32.00 -64.00 225.00 -64.00 97.00 0.00 64.00 -32.00 96.00 96.00 161.00 129.00 65.00 32.00 0.00 96.00 -258.00 161.00 0.00 96.00 32.00 97.00 0.00 32.00 0.00 193.00 -289.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 32.00 -33.00 65.00 0.00 64.00 -64.00 96.00 -32.00 32.00 -32.00 33.00 -193.00 -33.00 -97.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 -97.00 65.00 -64.00 32.00 -225.00 96.00 -193.00 -32.00 -64.00 64.00 -32.00 32.00 32.00 161.00 64.00 64.00 96.00 33.00 -32.00 64.00 32.00 0.00 -32.00 -32.00 -128.00 0.00 -193.00 -32.00 -32.00 -33.00 0.00 -64.00 -33.00 -32.00 -32.00 -32.00 -96.00 -64.00 -32.00 -97.00 -65.00 -32.00 0.00 0.00 -96.00 -32.00 -96.00 0.00 -65.00 32.00 -64.00 96.00 -161.00 0.00 -64.00 33.00 -161.00 192.00 32.00 129.00 0.00 161.00 -321.00 161.00 64.00 96.00 -32.00 161.00 -97.00 64.00 65.00 64.00 64.00 0.00 32.00 0.00 161.00 -64.00 96.00 0.00 32.00 0.00 33.00 0.00 64.00 32.00 0.00 97.00 32.00 64.00 32.00 32.00 161.00 129.00 -32.00 32.00 0.00 193.00 0.00 129.00 -32.00 64.00 0.00 32.00 0.00 64.00 0.00 32.00 -32.00 33.00 0.00 64.00 -33.00 32.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 65.00 129.00 64.00 64.00 129.00 32.00 0.00 65.00 0.00 32.00 32.00 32.00 128.00 32.00 65.00 0.00 96.00 32.00 418.00 -32.00 354.00 0.00 32.00 -32.00 225.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 97.00 -97.00 64.00 32.00 32.00 0.00 0.00 -32.00 33.00 0.00 96.00 32.00 64.00 33.00 32.00 0.00 65.00 0.00 64.00 64.00 0.00 32.00 32.00 32.00 97.00 0.00 0.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -32.00 33.00 32.00 32.00 0.00 64.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 64.00 32.00 32.00 -32.00 0.00 32.00 65.00 0.00 96.00 32.00 32.00 0.00 97.00 65.00 64.00 32.00 97.00 128.00 64.00 32.00 257.00 0.00 97.00 -64.00 128.00 0.00 32.00 -64.00 32.00 0.00 33.00 96.00 32.00 65.00 32.00 0.00 129.00 32.00 64.00 -32.00 32.00 0.00 64.00 -97.00 65.00 0.00 32.00 -128.00 32.00 0.00 32.00 -33.00 32.00 0.00 129.00 129.00 32.00 0.00 96.00 -32.00 65.00 -64.00 32.00 0.00 32.00 0.00 97.00 -33.00 64.00 -32.00 32.00 -32.00 32.00 32.00 0.00 547.00 0.00 161.00 65.00 160.00 32.00 65.00 64.00 32.00 -32.00 32.00 0.00 64.00 32.00 65.00 -32.00 32.00 32.00 32.00 -32.00 96.00 32.00 0.00 0.00 65.00 -32.00 0.00 64.00 0.00 32.00 0.00 0.00 96.00 0.00 161.00 65.00 161.00 0.00 64.00 96.00 96.00 64.00 33.00 65.00 32.00 -33.00 64.00 -32.00 64.00 0.00 32.00 32.00 97.00 65.00 64.00 -32.00 32.00 -65.00 33.00 32.00 0.00 0.00 32.00 33.00 0.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 64.00 0.00 32.00 -32.00 0.00 0.00 32.00 -33.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 32.00 97.00 33.00 0.00 32.00 -65.00 64.00 -64.00 0.00 -96.00 -32.00 -65.00 64.00 0.00 0.00 193.00 0.00 129.00 -64.00 32.00 0.00 64.00 32.00 65.00 32.00 32.00 -32.00 128.00 64.00 65.00 0.00 96.00 65.00 64.00 64.00 0.00 0.00 33.00 0.00 225.00 -32.00 64.00 -32.00 129.00 32.00 128.00 0.00 97.00 0.00 64.00 32.00 32.00 -32.00 64.00 32.00 65.00 -32.00 128.00 32.00 65.00 -32.00 64.00 -32.00 96.00 0.00 290.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 32.00 32.00 129.00 -65.00 64.00 -32.00 97.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 32.00 -96.00 -65.00 -32.00 65.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 -32.00 -96.00 65.00 -33.00 0.00 -64.00 -97.00 -64.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 -64.00 0.00 -64.00 -97.00 -65.00 -128.00 -96.00 -65.00 -64.00 -96.00 -65.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 33.00 -96.00 -33.00 -32.00 0.00 -97.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 32.00 -32.00 0.00 -64.00 -32.00 -129.00 -32.00 -64.00 -32.00 -193.00 64.00 -96.00 97.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 32.00 32.00 0.00 32.00 -64.00 0.00 -33.00 0.00 0.00 64.00 0.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 -129.00 65.00 -32.00 64.00 -32.00 0.00 -64.00 -32.00 -33.00 -64.00 -64.00 0.00 -128.00 -33.00 -97.00 33.00 -32.00 160.00 0.00 65.00 32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 0.00 97.00 -33.00 96.00 -32.00 33.00 0.00 32.00 32.00 32.00 65.00 -32.00 -32.00 64.00 0.00 32.00 -33.00 0.00 -32.00 64.00 97.00 129.00 -65.00 0.00 -32.00 32.00 -128.00 32.00 -65.00 -32.00 -64.00 0.00 -32.00 0.00 -64.00 0.00 -33.00 32.00 0.00 33.00 -64.00 64.00 -32.00 32.00 -64.00 64.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -96.00 33.00 -32.00 0.00 0.00 32.00 -33.00 32.00 -32.00 0.00 -96.00 64.00 -65.00 0.00 -96.00 65.00 -32.00 0.00 -32.00 0.00 -65.00 -33.00 -96.00 33.00 -64.00 0.00 -33.00 32.00 0.00 32.00 0.00 64.00 -96.00 64.00 -161.00 -32.00 -32.00 32.00 -64.00 0.00 -64.00 0.00 -65.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -97.00 0.00 -64.00 -64.00 -32.00 0.00 -32.00 32.00 -97.00 -97.00 -161.00 -32.00 -64.00 32.00 -32.00 0.00 -96.00 0.00 -161.00 0.00 -97.00 32.00 -32.00 -96.00 -32.00 -32.00 -161.00 128.00 -32.00 33.00 0.00 32.00 64.00 32.00 0.00 32.00 -32.00 64.00 -64.00 0.00 -32.00 0.00 -97.00 -64.00 -32.00 -32.00 -32.00 0.00 -257.00 0.00 -32.00 -32.00 -65.00 32.00 -96.00 0.00 -64.00 32.00 -65.00 0.00 -32.00 32.00 0.00 65.00 0.00 160.00 -32.00 32.00 32.00 33.00 0.00 64.00 -32.00 0.00 -32.00 64.00 0.00 32.00 -97.00 0.00 -64.00 33.00 -32.00 -33.00 -64.00 33.00 -193.00 -97.00 -65.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 32.00 32.00 -32.00 32.00 -32.00 -32.00 -129.00 -32.00 -32.00 97.00 0.00 64.00 -32.00 32.00 0.00 129.00 0.00 193.00 -97.00 64.00 -32.00 32.00 0.00 32.00 32.00 0.00 0.00 64.00 64.00 0.00 33.00 33.00 0.00 64.00 -65.00 32.00 -128.00 32.00 -97.00 32.00 -32.00 33.00 32.00 96.00 -96.00 0.00 -64.00 -32.00 0.00 32.00 32.00 32.00 -32.00 0.00 0.00 32.00 -97.00 0.00 -32.00 33.00 -32.00 64.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 -64.00 0.00 -33.00 64.00 -225.00 97.00 -96.00 64.00 -96.00 0.00 -33.00 64.00 -96.00 97.00 -97.00 32.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -96.00 0.00 -65.00 32.00 -128.00 -64.00 -97.00 -129.00 -32.00 0.00 -193.00 -32.00 -32.00 -96.00 -129.00 -129.00 0.00 -64.00 0.00 -64.00 0.00 -65.00 -96.00 33.00 -64.00 -33.00 -33.00 -32.00 0.00 -32.00 65.00 -32.00 -32.00 -64.00 32.00 -65.00 32.00 0.00 0.00 -32.00 -32.00 -96.00 32.00 -65.00 -64.00 -96.00 0.00 -64.00 32.00 -97.00 0.00 -64.00 0.00 -64.00 -32.00 -33.00 -33.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -97.00 -64.00 -32.00 -65.00 32.00 0.00 65.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -97.00 0.00 -64.00 32.00 -64.00 -32.00 -65.00 0.00 -64.00 0.00 -96.00 64.00 0.00 -32.00 -65.00 0.00 32.00 -97.00 0.00 -32.00 33.00 0.00 96.00 -32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 64.00 0.00 0.00 -32.00 97.00 0.00 193.00 -129.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 96.00 -32.00 0.00 -97.00 -64.00 0.00 -32.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 32.00 97.00 -64.00 32.00 -33.00 32.00 0.00 32.00 33.00 32.00 32.00 0.00 -32.00 32.00 -33.00 33.00 0.00 32.00 -64.00 -32.00 0.00 0.00 -32.00 96.00 -129.00 -64.00 -64.00 0.00 -96.00 -65.00 -65.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 -64.00 -65.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -96.00 32.00 -96.00 65.00 -65.00 96.00 -64.00 64.00 -97.00 97.00 0.00 64.00 -64.00 97.00 0.00 64.00 -64.00 129.00 -32.00 0.00 -32.00 96.00 -33.00 32.00 33.00 64.00 -65.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 -33.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 -64.00 0.00 64.00 -97.00 -64.00 -64.00 -97.00 -64.00 -32.00 0.00 0.00 32.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -33.00 -96.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 -64.00 0.00 -33.00 0.00 -32.00 -64.00 -32.00 -65.00 -96.00 -64.00 -65.00 -32.00 -96.00 -65.00 -96.00 0.00 -33.00 0.00 -96.00 0.00 -32.00 65.00 -97.00 0.00 -32.00 0.00 -96.00 0.00 -65.00 96.00 -32.00 65.00 32.00 64.00 -193.00 96.00 -96.00 0.00 -32.00 33.00 -64.00 -33.00 -33.00 0.00 -32.00 33.00 -128.00 -33.00 -97.00 33.00 -32.00 32.00 32.00 64.00 0.00 64.00 -32.00 32.00 -32.00 97.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -33.00 32.00 -32.00 32.00 0.00 97.00 0.00 32.00 -96.00 32.00 -97.00 32.00 -96.00 65.00 -97.00 32.00 0.00 64.00 -32.00 32.00 -64.00 32.00 -64.00 -32.00 -33.00 32.00 -32.00 -64.00 -96.00 64.00 0.00 65.00 -129.00 32.00 0.00 32.00 0.00 64.00 -64.00 33.00 -32.00 0.00 -32.00 96.00 -33.00 0.00 -32.00 64.00 -32.00 32.00 0.00 33.00 -32.00 32.00 64.00 32.00 32.00 32.00 0.00 64.00 -64.00 33.00 0.00 32.00 -64.00 -65.00 0.00 -64.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 96.00 -161.00 0.00 -64.00 32.00 -32.00 32.00 -97.00 129.00 -64.00 32.00 -32.00 32.00 32.00 32.00 32.00 33.00 -32.00 0.00 -64.00 0.00 -65.00 0.00 0.00 96.00 -96.00 64.00 0.00 65.00 -64.00 32.00 -33.00 32.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -65.00 -32.00 -96.00 -32.00 -129.00 96.00 -32.00 32.00 0.00 64.00 0.00 65.00 32.00 64.00 0.00 32.00 -32.00 32.00 -193.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 -33.00 -65.00 -32.00 0.00 -64.00 -32.00 -64.00 64.00 -97.00 65.00 -64.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 0.00 32.00 -96.00 0.00 -32.00 0.00 -65.00 33.00 -32.00 -33.00 -64.00 -64.00 -32.00 -129.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 -96.00 0.00 64.00 -97.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -65.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -96.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -129.00 33.00 33.00 32.00 -33.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -97.00 0.00 -64.00 64.00 -96.00 0.00 -32.00 32.00 0.00 65.00 -97.00 0.00 -64.00 32.00 -65.00 -32.00 -96.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -65.00 -33.00 65.00 -64.00 0.00 0.00 -65.00 -64.00 -32.00 0.00 -64.00 -32.00 -64.00 -32.00 0.00 0.00 -97.00 -97.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 -65.00 -32.00 0.00 -65.00 -128.00 -64.00 0.00 -32.00 -65.00 -65.00 0.00 0.00 -32.00 33.00 -32.00 0.00 -96.00 32.00 -32.00 96.00 0.00 32.00 -33.00 97.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -65.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -64.00 64.00 -65.00 -32.00 -64.00 -32.00 -32.00 0.00 -32.00 193.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -96.00 -64.00 0.00 32.00 -65.00 32.00 -32.00 33.00 -96.00 64.00 -97.00 64.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 33.00 -64.00 -33.00 -97.00 0.00 -64.00 -32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 -129.00 64.00 -64.00 -32.00 -32.00 -32.00 -64.00 -33.00 0.00 -64.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 -65.00 0.00 -32.00 -33.00 -96.00 0.00 -97.00 33.00 0.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -129.00 33.00 -32.00 32.00 -64.00 32.00 -97.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 -33.00 -32.00 33.00 -65.00 0.00 -32.00 -97.00 -32.00 0.00 -64.00 -96.00 -32.00 -33.00 0.00 -64.00 -33.00 -96.00 -64.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -65.00 0.00 -32.00 -64.00 65.00 -32.00 -33.00 -65.00 0.00 -64.00 -32.00 -32.00z\"\n          }\n        }\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"ca_lcc\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 867.2308867877658,\n          bbox: [{\n            y: -10408206.406521406,\n            x: -2874590.5560752787\n          }, {\n            y: -4979679.615160914,\n            x: 2759058.0911967778\n          }],\n          left: 0\n        }],\n        paths: {\n          \"CA-NT\": {\n            path: \"M340.43,125.99l5.05,-2.26l0.92,-0.14l1.84,0.57l2.33,-0.98l0.54,-0.9l1.17,-1.01l2.46,-0.96l1.23,0.01l1.01,1.79l0.53,0.4l-1.93,8.61l-1.55,0.59l-2.09,-1.15l-0.06,-0.73l-1.16,-1.56l-1.32,0.13l-0.23,1.13l-0.75,0.07l-0.24,1.09l-1.34,-0.24l-0.23,-1.68l-1.46,-1.53l-3.25,0.54l-0.46,0.38l-1.74,0.41l-0.1,-1.27l0.65,-0.58l0.17,-0.74ZM104.46,307.55l0.14,-0.94l0.91,-1.34l0.08,-0.7l1.08,-0.38l1.14,-1.29l0.69,-1.67l-0.23,-0.84l1.2,-1.51l0.56,-2.12l-0.07,-0.85l-0.74,-0.92l0.49,-1.16l11.83,-21.1l1.9,1.44l0.78,1.18l0.44,2.04l1.02,1.11l0.02,1.76l1.01,0.5l0.65,0.95l0.67,-0.55l-0.52,-1.74l0.25,-1.06l-0.44,-1.05l1.06,0.36l0.07,-0.5l-1.28,-1.24l0.06,-1.24l-1.48,-0.63l-0.42,-0.86l0.56,-0.17l0.07,-1.17l0.48,1.3l0.75,0.48l1.01,0.1l1.05,-0.56l-0.29,-0.39l-0.98,-0.28l0.02,-0.91l-0.75,-1.17l0.91,-2.19l0.82,3.03l1.3,1.4l0.43,-0.74l-0.92,-1.52l-0.27,-2.64l0.29,-0.58l0.65,0.02l-0.28,2.19l0.81,0.07l0.59,-1.89l0.54,0.43l0.23,1.25l1.1,1.25l0.63,-0.49l-0.11,-0.99l0.85,-2.21l1.62,-0.07l0.43,0.47l0.75,0.05l1.3,0.93l0.72,1.27l0.44,0.09l0.73,-0.37l0.45,-0.82l-0.22,-0.8l1.83,-2.02l0.7,0.3l-0.05,0.59l-1.04,0.83l0.39,1.34l1.04,1.47l0.86,0.25l-2.7,1.23l-1.24,1.17l-1.1,0.22l-1.67,1.68l-0.26,0.8l0.9,0.19l1.58,-1.41l2.09,0.22l0.77,-0.72l1.23,0.52l0.71,-0.84l1.16,0.21l1.48,1.15l1.16,-0.3l0.26,0.24l1.67,-1.31l0.74,-1.04l0.08,-0.68l0.93,-0.64l0.18,0.58l0.47,0.3l0.66,-0.09l0.71,0.91l1.31,0.19l0.55,-0.26l0.39,-0.67l0.78,0.93l0.89,-0.58l2.37,-0.04l1.07,-0.91l1.14,-0.33l1.48,0.09l0.6,-0.85l0.47,0.33l0.04,0.46l-0.7,1.79l0.73,0.45l0.61,-0.9l0.73,-0.09l1.56,-1.89l0.67,-0.18l0.03,-0.74l1.1,-0.2l0.29,0.66l0.93,-0.19l0.39,-0.56l0.33,0.91l1.18,-0.31l-0.38,1.09l0.76,0.43l-0.12,0.41l0.54,0.43l0.58,-0.35l1.12,0.71l1.2,-0.6l1.31,-1.78l0.48,-0.01l-0.43,1.39l0.64,0.69l-0.36,0.67l0.25,0.54l-0.99,0.13l-0.14,0.6l-0.58,0.26l-4.41,0.77l-1.71,-0.24l-0.99,0.6l-1.08,0.04l-1.03,1.21l-1.62,-0.04l-1.6,1.4l-0.18,-0.34l0.28,-0.83l-0.34,-0.45l-1.04,-0.22l-0.59,0.3l-0.57,-0.27l-0.48,0.2l-2.83,-0.93l-1.21,0.17l-0.7,-0.27l-2.29,1.84l-0.29,1.06l-2.52,0.0l-0.5,0.34l-0.53,-0.63l-1.66,0.06l-1.27,0.73l-0.17,0.49l-1.1,0.9l-0.12,0.66l-0.76,0.22l-0.47,-0.62l-1.16,0.22l-1.4,1.59l-0.26,0.73l-0.29,0.05l-0.26,-0.55l-1.06,0.01l-0.96,1.13l-0.25,1.27l0.56,1.44l1.19,1.93l1.0,0.53l0.66,-0.08l0.11,-0.38l-0.23,-0.69l-1.04,-0.58l0.38,-0.94l0.7,0.04l0.57,0.64l0.56,-0.31l0.06,-0.47l0.4,1.43l0.52,0.32l0.5,-0.48l0.99,1.02l1.61,-0.85l0.13,-0.44l-0.58,-1.64l-0.52,-0.17l-1.0,0.36l-0.35,-0.72l0.45,0.44l0.68,-0.28l-0.6,-1.73l0.72,-1.38l1.23,0.44l1.05,-0.46l0.45,0.71l0.75,-0.18l0.71,-0.64l0.65,0.9l1.17,-1.23l1.44,0.08l1.83,-0.69l1.41,-1.24l0.1,-0.41l0.78,-0.23l0.04,-0.44l0.67,0.77l-1.27,1.34l-0.23,0.67l0.81,0.22l-0.39,0.95l0.99,-0.0l1.07,-0.65l0.41,0.07l0.21,0.13l-0.46,0.86l0.88,0.61l-1.32,1.5l-0.51,1.19l0.07,0.7l0.58,0.3l0.61,-0.28l1.03,-2.43l1.66,-0.94l0.16,-0.62l1.48,-0.47l0.48,-0.61l-0.1,-0.43l2.35,-1.13l0.49,-0.85l1.42,-0.99l1.05,0.28l3.79,-0.03l1.01,-0.38l2.58,0.65l-1.07,2.79l1.07,1.23l0.82,0.1l0.27,-1.09l1.23,0.05l2.37,-1.56l2.78,-0.96l1.22,-3.31l1.85,-0.43l0.55,0.37l1.09,-0.16l2.12,0.3l0.7,0.51l0.27,-0.41l-0.24,-0.91l-2.64,-2.29l0.11,-0.52l0.3,0.3l0.53,-0.08l0.77,-1.23l-0.54,-0.44l-1.31,-0.01l1.01,-1.83l1.46,-1.04l1.82,4.77l0.72,3.82l-0.37,5.36l0.33,0.97l-0.74,1.57l-0.33,3.92l1.05,5.2l1.21,3.11l0.72,1.01l0.88,0.26l1.06,2.07l0.85,0.12l0.6,-0.52l0.05,-0.65l1.59,0.69l1.22,-1.47l-0.31,-0.47l0.38,-0.46l-0.67,-1.16l0.72,-1.05l-0.85,-0.79l-0.04,-0.56l0.56,-0.7l0.61,0.38l1.75,-0.43l-0.33,1.7l0.42,0.47l0.37,-0.09l1.3,-1.37l-0.48,-1.18l-1.07,-0.69l0.82,-0.42l0.51,-0.93l1.18,-0.99l2.01,0.05l0.56,-0.74l0.29,0.27l-0.34,0.03l-0.23,0.62l0.44,0.52l-0.71,0.35l0.09,1.35l-0.94,1.01l-0.57,1.34l1.06,1.48l0.76,0.13l0.57,-0.34l0.54,0.45l-0.13,0.38l-1.56,0.75l-0.73,1.21l-1.89,0.99l-0.47,0.95l-0.59,0.04l-0.25,0.44l0.29,1.05l0.86,0.84l1.12,0.58l0.72,0.01l0.23,0.41l0.53,0.01l0.32,-0.52l1.93,1.27l2.46,-0.33l0.26,-1.48l0.87,-0.15l1.02,0.51l0.3,-0.25l0.81,-1.37l0.11,-0.97l0.88,-1.02l0.45,-1.87l1.23,-0.68l0.86,1.2l0.75,-0.28l1.55,0.99l3.12,0.8l3.72,2.51l3.19,4.28l0.37,1.46l-10.78,31.16l10.4,16.31l12.52,18.3l13.34,18.03l12.32,15.52l14.94,3.76l6.82,13.72l2.18,2.36l1.96,1.15l30.79,11.84l26.18,8.95l-10.8,81.07l-27.95,-4.19l-23.5,-4.25l-29.2,-6.22l-23.2,-5.69l-28.76,-8.01l-22.8,-7.12l-28.52,-9.89l-16.81,-6.36l-0.18,-0.73l-0.43,-0.33l-0.96,0.05l0.81,-1.02l-0.28,-4.88l0.73,-2.33l-0.28,-0.79l-1.31,-0.57l0.24,-1.49l-0.61,-2.47l1.97,-1.43l0.22,-3.72l-2.24,-1.11l-1.04,0.62l-0.48,1.05l-2.45,-0.87l-2.01,0.56l-1.21,-1.31l-1.29,-0.74l-0.59,-1.26l-0.72,-0.6l-0.78,0.07l-1.01,1.06l-0.29,-0.29l0.24,-0.75l-0.52,-0.5l-1.06,-0.17l-0.38,0.32l-0.1,0.76l-0.41,0.1l-0.86,-0.35l-0.75,-1.07l-0.52,-0.06l-1.36,0.61l-0.34,-0.8l-0.94,-0.1l1.63,-5.05l-0.31,-0.69l-0.98,-0.18l1.04,-0.41l0.63,-1.24l0.92,-3.44l-0.25,-0.84l0.26,-1.46l-1.07,-1.73l-2.01,-0.66l-0.66,-0.99l-0.05,-0.94l-0.68,-0.72l-0.34,-1.54l-0.44,-0.46l0.4,-1.41l-0.03,-1.72l-0.37,-0.58l-0.73,-0.1l0.25,-1.73l-0.53,-1.26l0.32,-0.68l-0.79,-2.47l-1.51,-0.56l-1.12,0.7l-0.11,-1.18l-0.94,-0.95l-1.25,-0.18l-0.47,-0.89l0.84,-0.58l0.0,-2.28l0.95,-0.43l0.28,-0.54l-0.39,-0.69l0.37,-0.3l0.75,0.06l0.49,-0.54l-0.03,-0.8l-1.6,-2.55l0.39,-1.47l-0.5,-1.07l0.27,-0.98l-0.25,-2.15l0.4,0.06l0.76,-1.19l1.64,-1.3l0.21,-0.71l-0.47,-0.62l-0.8,-0.15l-0.3,-0.58l0.26,-2.13l-0.48,-0.59l-0.05,-1.15l-0.63,-0.54l0.74,-0.4l1.57,-0.07l0.77,-1.24l1.11,-0.59l0.08,-3.19l-0.8,-0.68l0.35,-1.33l-0.42,-0.38l-1.1,0.18l-0.14,-0.44l1.9,-0.06l0.56,-1.03l-1.49,-1.53l-0.71,-2.56l-0.55,-0.3l-0.74,-1.16l0.5,-1.17l-0.6,-0.74l-0.13,-1.41l0.94,-0.65l-0.02,-2.0l-0.29,-0.55l0.6,-0.72l-0.24,-2.3l-1.89,-2.03l-0.92,0.77l-0.7,0.12l-0.75,-0.01l-0.36,-0.61l-0.72,-0.22l1.94,-1.43l0.12,-0.41l-0.28,-0.82l-0.72,-0.5l-0.29,-0.98l-0.01,-2.24l-0.78,-0.71l-0.72,-1.79l-1.02,-0.87l-0.65,-0.13l0.0,-0.66l1.38,-0.32l0.62,-1.63l1.7,-0.39l0.34,-0.37l0.1,-1.36l-1.06,-0.79l0.65,-0.87l-0.01,-0.71l-0.29,-0.49l-0.9,-0.02l0.19,-0.45l0.87,-0.55l0.71,0.18l1.01,-1.21l2.29,-0.75l1.42,-1.78l1.31,-0.69l0.15,-4.09l-0.81,-1.96l0.67,-0.54l1.76,-0.15l0.42,-0.65l0.01,-0.78l-0.56,-0.46l-0.6,0.02l0.1,-0.75l-0.44,-0.59l-1.0,-0.06l-2.28,1.16l-0.4,-0.16l1.28,-1.17l0.11,-0.45l-0.33,-0.59l-1.96,-0.69l-1.63,-0.05l-0.64,0.46l-1.07,-0.82l0.77,-1.25l-0.44,-0.84l1.7,-0.84l1.09,-2.06l0.16,-0.66l-0.32,-0.69l-1.15,-0.51l1.43,-1.81l0.18,0.29l0.73,0.08l0.45,-1.72l0.97,-0.32l0.28,-0.51l-0.44,-0.81l-0.09,-1.21l0.41,-0.5l-0.11,-1.08l0.63,-0.31l0.59,-0.96l-0.12,-2.62l-0.75,-1.25l1.56,0.55l0.46,-0.15l0.06,-0.73l-16.24,-8.77ZM212.99,287.11l-0.0,-0.01l-0.45,-0.39l0.6,0.28l-0.15,0.13ZM212.05,286.55l-0.11,0.01l-0.06,-0.14l0.18,0.13ZM180.17,279.08l0.22,-0.13l-0.03,0.22l-0.19,-0.09ZM142.41,285.87l-0.69,-0.85l0.05,-0.26l0.51,-0.01l0.13,1.12ZM142.96,264.87l0.0,-0.21l0.23,0.0l-0.16,0.1l-0.07,0.11ZM156.61,271.56l-0.26,-0.16l-0.02,-0.28l0.35,0.17l-0.07,0.26ZM155.74,270.75l-0.15,0.03l0.11,-0.14l0.03,0.11ZM160.01,281.13l0.4,-0.64l0.34,-0.13l0.07,0.65l-0.81,0.12ZM202.48,297.51l-0.11,-0.08l0.06,-0.02l0.05,0.1ZM201.89,297.32l-0.66,-0.04l0.07,-0.32l0.01,-0.01l0.59,0.37ZM211.17,288.3l-0.48,-0.11l-0.4,0.32l-0.21,-0.52l1.07,-0.1l0.02,0.4ZM208.14,287.7l-0.36,0.28l-0.26,0.01l0.62,-0.56l-0.0,0.27ZM335.17,145.92l1.0,-0.91l-0.43,-1.22l0.64,-1.86l-0.24,-1.59l1.26,-2.2l0.25,0.64l0.45,0.13l0.76,-0.79l3.51,-1.13l0.74,0.23l1.64,-0.35l0.71,0.43l1.24,-0.7l1.27,-0.2l1.05,0.14l0.29,0.54l0.59,0.26l1.22,-0.62l3.04,0.79l-0.79,3.54l-1.13,0.52l-3.24,-0.04l-0.82,0.7l-0.06,0.82l0.87,1.98l2.92,0.26l-0.45,1.5l-0.01,1.69l-0.82,0.85l0.14,1.08l-0.89,0.91l-1.88,0.72l-1.37,0.04l-0.52,0.59l-1.94,-0.92l-0.98,0.55l-3.89,0.96l-1.46,-1.4l-0.3,-2.44l-0.41,-0.24l-0.64,0.19l-0.54,-0.49l-0.03,-1.17l-0.89,-0.46l0.16,-1.34ZM343.19,180.35l0.39,-0.57l0.14,-1.89l1.48,-0.35l-0.86,3.83l-1.15,-1.03ZM297.77,196.61l-2.26,-1.86l-0.55,-1.22l0.38,-0.82l0.76,-0.32l0.24,-0.76l2.05,-1.76l0.55,-0.25l6.65,1.88l3.36,-1.6l1.84,0.21l0.67,-1.17l1.68,-0.67l0.17,-0.56l-0.66,-0.53l-2.08,0.6l-1.88,-0.19l-1.9,0.31l-1.11,0.5l-5.82,-1.7l0.31,-0.79l2.82,-2.79l6.28,0.76l0.48,-0.28l0.79,0.65l4.2,0.37l0.7,-0.36l0.28,-0.91l-0.5,-0.5l-4.76,-0.77l-0.49,-0.35l-2.68,-0.05l-2.24,-1.68l0.21,-0.61l1.35,0.12l0.37,-0.43l0.07,-1.43l-0.97,-0.43l0.79,-1.37l0.84,-0.74l2.07,-0.37l2.45,1.3l1.29,0.19l3.33,1.91l1.21,-0.14l0.02,-0.84l-1.49,-0.63l-0.23,-0.8l-1.14,-1.05l-2.82,-0.86l-0.3,-0.94l0.64,-0.8l-0.1,-0.61l2.58,-1.59l2.72,0.22l1.32,-0.67l0.16,0.75l1.65,0.26l1.13,1.18l-0.07,1.46l-0.72,0.79l0.44,2.55l-0.57,0.6l0.33,1.25l2.02,0.22l2.23,-0.84l1.08,0.55l0.85,-0.19l0.3,1.16l1.82,1.55l-0.7,1.1l0.22,1.97l0.35,0.65l1.2,0.8l1.56,2.3l-1.85,0.28l-0.97,0.54l-0.56,1.29l0.4,0.38l0.83,-0.16l0.79,0.5l0.52,-0.36l1.19,0.13l-0.09,0.43l0.56,0.69l-0.19,1.08l0.36,0.37l-0.82,2.31l0.43,2.83l1.72,0.27l1.16,-0.38l1.83,0.08l0.43,0.89l2.08,0.36l-3.46,15.46l-0.59,0.13l-1.01,-0.67l-0.79,0.44l-0.17,0.72l-1.49,-0.26l-0.41,0.8l0.12,1.27l-2.4,1.0l-0.25,0.41l-1.6,0.27l-0.55,0.48l-0.67,-0.2l-1.85,1.17l-3.69,0.32l-1.41,0.46l-3.52,-0.48l-1.07,-0.47l-2.46,-1.54l-2.23,-3.46l-0.83,-2.35l0.38,-0.84l2.93,-1.35l0.8,0.07l0.73,-0.33l1.31,0.27l1.04,-0.25l0.62,0.52l0.49,-0.13l0.19,-0.89l0.89,-0.99l1.85,-0.47l4.43,0.55l1.47,0.89l1.64,-0.19l0.99,-1.0l1.23,-0.45l0.51,-0.83l1.59,-0.92l0.09,-0.52l1.0,-0.88l-0.22,-0.82l-0.77,-0.71l-1.12,-0.14l-1.02,1.34l-1.06,0.63l-0.85,-0.15l-0.16,-0.58l-0.45,-0.2l-1.17,0.94l-0.87,-0.44l-1.62,0.22l-0.26,-0.33l1.23,-0.9l-0.09,-0.91l-0.35,-0.68l-0.46,-0.1l-0.62,0.58l-0.13,0.67l-0.26,-0.06l0.48,-1.27l-0.3,-0.89l-0.59,-0.2l-0.98,1.81l-0.08,1.28l-0.92,0.5l-0.8,0.07l-0.1,-1.12l-0.35,-0.31l-0.9,1.31l-3.84,-0.33l0.32,-1.39l1.77,-0.52l0.23,-0.6l-0.46,-0.42l-1.17,0.31l1.46,-2.76l3.51,-1.68l-0.97,-0.99l-2.7,0.74l-0.38,-2.37l-0.69,-0.02l-0.22,0.35l-0.36,2.28l-1.44,2.63l-0.13,-1.23l-1.14,-1.28l-1.05,0.74l-0.08,0.77l0.95,0.5l0.21,1.76l-1.36,2.08l-3.46,1.29l-0.36,-0.05l-0.39,-0.67l0.23,-1.39l0.63,-1.29l-0.11,-1.68l-0.42,-0.25l-1.34,1.5l-0.77,-1.27l-0.59,-0.09l-0.29,0.56l0.11,2.33l-0.93,1.06l-2.19,-2.46l0.89,-0.36l0.57,-0.73l-0.26,-0.63l-1.29,0.17l0.63,-0.76l0.26,-1.45l-2.29,-0.11l-1.24,1.13l-0.81,-1.06l-0.74,-0.14ZM328.08,134.65l1.49,-0.41l0.93,-1.05l1.49,-0.48l-0.42,0.64l0.17,1.23l0.84,0.29l0.26,1.88l1.08,1.0l-0.13,1.05l0.28,0.68l-0.86,0.82l-2.45,0.83l-0.42,-0.22l-0.69,-1.15l0.02,-0.72l-1.13,-2.38l-0.46,-2.01ZM321.15,163.02l0.27,-0.55l1.37,-0.86l1.02,-0.17l0.95,0.34l2.18,0.1l1.23,1.73l-0.05,1.16l-1.23,1.11l-0.66,-0.6l-3.08,-0.94l-2.0,-1.32ZM323.52,255.67l3.92,1.28l-0.95,4.27l-0.31,-0.07l-0.4,-1.5l-1.62,-0.83l-0.69,-2.28l0.06,-0.87ZM325.57,263.35l0.07,-0.72l0.09,0.01l0.37,0.29l-0.13,0.59l-0.39,-0.16ZM261.06,269.52l0.42,-3.04l1.57,-3.05l1.05,-0.92l1.78,-0.91l0.8,-1.49l0.97,-0.67l0.88,0.18l2.34,-0.29l0.56,-0.55l0.36,-1.5l-0.12,-0.87l-0.52,-0.56l-1.2,-0.42l-0.42,-0.6l0.04,-1.02l0.95,-1.39l2.28,-1.24l0.66,-0.77l2.37,-0.69l2.57,-1.65l2.03,-1.97l0.89,0.17l2.38,-0.35l2.61,-1.39l0.63,0.1l5.36,-1.34l1.37,0.01l1.28,-0.38l0.6,-0.51l0.67,0.14l0.85,-0.48l1.59,-0.19l1.66,-0.82l0.38,0.01l1.58,1.5l0.76,4.13l-2.16,5.66l0.16,1.56l-1.74,-0.03l-1.07,0.84l-0.27,1.63l-2.29,1.2l0.2,1.21l1.64,0.68l0.59,-0.7l2.44,-0.63l0.2,0.37l0.74,0.2l-0.08,0.49l0.37,0.37l0.67,-0.09l1.89,-1.23l0.41,-0.92l0.07,-0.89l-0.92,-0.59l2.08,-2.47l1.62,-1.35l0.96,-0.15l2.61,1.86l1.36,1.71l1.28,0.45l2.21,2.46l0.69,0.37l0.24,1.29l1.27,0.82l-0.93,2.75l-1.69,1.01l0.02,0.76l-3.52,1.88l-0.22,0.43l0.3,0.81l0.71,0.42l-0.88,1.61l0.18,0.88l0.68,-0.03l0.87,-1.47l2.69,-1.14l0.94,2.06l0.72,-0.16l0.21,-2.62l0.87,-0.72l0.04,-0.5l0.91,0.33l0.54,-0.43l-0.08,-0.87l0.72,-0.65l0.55,0.58l-0.56,0.44l0.05,0.88l1.35,1.71l0.75,-0.09l0.09,-0.57l-1.02,-1.51l0.87,-0.51l1.37,2.93l-11.47,51.41l-17.46,-4.16l-0.48,0.29l-0.35,1.39l-1.14,0.12l0.0,0.67l1.45,0.6l-1.3,-0.38l-0.5,0.41l-0.91,-0.23l0.76,-2.9l-0.37,-0.69l-29.82,-8.44l-0.5,0.24l-0.86,2.55l1.84,5.57l-0.46,-0.2l-0.66,-1.15l-0.8,-0.68l-0.68,-1.43l0.13,-4.89l0.67,-0.69l1.4,-0.58l1.73,-0.24l3.39,0.25l3.67,-0.18l11.18,1.07l2.11,0.57l0.9,1.01l2.68,1.14l1.35,-0.09l2.98,1.9l0.67,-0.2l2.43,1.71l0.51,-0.14l0.14,-0.67l0.71,0.47l0.77,-0.34l-0.01,-0.27l0.91,0.22l0.56,-0.27l1.17,0.76l3.05,0.53l0.77,-0.31l0.11,-0.56l-0.29,-0.32l0.27,-0.48l-0.57,-0.96l-1.79,-0.31l-0.91,-0.68l-0.84,-3.09l-0.67,-0.2l-1.08,-0.99l-0.79,0.15l-1.03,-1.36l-0.64,-0.28l-0.62,0.15l-0.92,-1.37l-0.63,-0.24l-0.19,-0.8l-1.01,-0.25l-0.69,-0.96l-0.46,-0.05l-0.39,0.5l-0.67,-1.05l-1.73,-1.01l-1.72,0.58l-1.18,-0.69l-1.38,0.56l-2.51,-0.34l-1.32,0.15l-3.15,-0.78l-0.6,0.23l-1.02,-0.84l-2.18,-0.06l-0.63,-0.48l0.18,-0.65l-0.56,-0.52l-2.45,-0.59l-0.91,0.29l-2.02,-0.49l-1.54,-0.86l-0.61,0.03l-0.43,-0.55l-1.39,0.06l-0.5,-1.05l0.38,-0.76l-0.22,-0.93l-2.44,-4.15l-0.27,-2.19l0.33,-0.6l4.75,-1.74l2.29,0.35l2.83,-0.41l1.41,0.46l0.88,-0.42l0.18,-0.46l3.98,-0.43l0.61,0.62l0.81,-0.17l1.81,0.45l0.73,-0.44l-0.03,-0.61l-1.86,-1.16l1.71,-0.55l0.31,0.35l0.7,-0.0l0.31,0.56l1.18,0.74l1.71,-0.3l1.18,-0.56l0.16,-0.64l-0.7,-0.44l-1.42,0.43l-0.78,-0.08l-0.21,-0.12l0.61,-0.47l-0.15,-0.44l-1.08,-0.72l-1.49,-0.27l-2.81,0.29l-2.53,-0.28l-2.19,0.43l-1.56,-0.54l-1.22,0.36l-0.84,-0.12l0.4,-1.13l-1.05,-1.55l-1.28,0.93l0.11,0.7l0.6,0.3l-0.39,0.69l-0.78,-0.88l-0.84,0.41l-0.55,-0.45l-1.68,-0.36l-0.42,-1.04l0.66,-1.04l0.9,-0.41l2.39,0.85l0.28,-0.38l0.75,-0.09l0.25,-0.72l-1.15,-1.3l1.24,-0.2l0.19,-0.81l-2.72,-0.71l-0.79,0.27l-0.68,0.84l-0.48,-0.03l-0.46,-1.51l-0.75,-0.64l-1.98,-0.51l-0.99,0.87l-0.25,-0.31ZM315.48,268.17l-0.79,0.04l-0.04,-0.21l1.17,-0.51l-0.34,0.67ZM272.81,162.81l0.83,-0.98l0.4,0.17l1.08,-0.8l0.89,-1.79l1.46,-0.77l2.3,0.16l0.97,0.64l1.33,0.17l0.56,-0.22l1.24,-1.44l0.32,-0.92l1.48,-1.14l0.49,-1.02l0.58,0.19l1.16,-0.28l0.78,-0.61l1.48,-0.1l1.56,-0.97l0.35,-1.57l1.23,-0.32l0.64,-1.04l0.68,-0.38l0.26,-0.76l0.98,-0.09l1.12,-1.54l1.02,-0.11l0.51,-0.71l1.48,-0.62l1.35,-2.17l0.75,-0.51l1.03,0.44l1.58,-0.55l2.55,0.93l1.07,-0.28l-0.04,0.4l0.84,0.27l0.14,0.7l1.17,0.65l1.07,1.51l1.58,0.18l0.36,-0.74l0.35,0.46l0.67,0.06l0.37,-0.75l1.09,-0.81l-0.22,-0.81l-1.45,-0.48l-0.12,-0.94l0.79,-0.07l1.21,-0.74l0.09,-0.67l1.38,0.07l1.15,1.83l-0.1,0.87l1.46,1.39l1.01,2.22l-0.02,0.53l-0.69,0.76l-1.45,0.12l-0.9,0.65l-1.94,-0.05l-0.62,0.98l-0.64,0.2l0.11,2.98l1.96,2.78l-0.93,0.62l-1.65,-1.71l-0.48,0.02l-0.45,0.49l-0.12,0.76l0.52,1.85l0.62,0.63l-0.08,2.78l-0.62,0.28l-0.74,1.04l-1.46,0.65l-1.07,0.01l-1.18,-0.48l-0.84,0.41l-0.52,-0.36l-0.55,0.11l-0.74,0.87l0.06,1.54l-0.44,2.45l-1.34,0.94l-1.23,0.3l-0.84,-0.49l-0.11,-1.27l-0.95,-0.47l-0.42,-2.07l0.76,-1.8l0.88,-0.73l0.15,-1.62l0.62,-0.74l0.28,-1.2l1.64,-1.76l0.07,-1.13l-0.45,-0.66l-0.59,0.04l-1.03,0.98l-1.49,-0.63l-0.55,0.27l-0.13,1.02l-0.51,-0.31l-0.61,0.32l-0.14,0.98l0.37,1.03l-0.31,1.73l-0.91,0.0l-0.48,0.74l-0.29,-0.17l-0.19,-1.11l-0.79,-0.43l-0.42,0.57l-0.7,0.24l-0.39,1.07l0.58,0.56l0.06,0.56l0.6,0.37l-0.17,2.29l-0.72,0.92l-0.84,-0.26l-0.74,0.3l-0.8,2.2l-0.6,0.78l-0.74,0.29l-0.37,-0.38l0.36,-1.66l-0.29,-1.71l0.52,-2.6l-0.49,-0.23l-0.55,0.61l-0.44,-0.35l-0.66,0.27l0.04,0.99l-0.56,0.72l0.12,2.13l-0.47,-0.14l-0.42,0.38l0.02,0.74l-0.41,-0.17l-0.55,0.41l1.08,2.04l-0.1,0.91l-0.51,-0.34l-0.35,0.13l-0.82,1.1l0.04,0.39l-1.36,1.08l-0.71,0.02l0.1,-0.78l-0.48,-0.68l-2.02,1.61l0.77,-2.24l0.75,-0.9l0.0,-1.44l-0.38,-0.3l-0.92,0.11l0.1,-0.99l0.73,-0.78l0.03,-0.56l-0.3,-0.17l0.66,-0.56l-0.72,-1.92l-0.52,-0.12l-1.12,0.76l-1.06,2.34l-0.03,1.09l-1.31,0.08l-0.93,0.92l-0.14,-1.26l-1.81,-2.34l-1.81,-0.41l-0.67,1.27l-1.44,0.51l-0.88,-0.46l-0.12,-0.41l0.71,-0.41l1.49,-2.04l0.36,-1.31l-0.84,-1.36l-1.28,0.23ZM299.65,310.08l0.53,0.27l0.45,0.46l-0.39,-0.06l-0.6,-0.66ZM287.73,182.36l0.69,-0.85l4.73,-3.33l1.13,-1.26l1.85,-0.54l1.07,0.16l0.92,-1.24l1.31,-0.42l0.79,-0.83l0.46,-0.05l0.46,0.38l0.14,0.3l-1.31,2.19l-2.18,2.12l-0.18,0.62l-1.06,1.07l-0.32,1.05l-2.69,2.15l-0.04,0.48l-2.56,1.32l-0.81,-0.98l0.09,-0.48l-0.29,-0.32l-1.56,-0.66l-0.65,-0.89ZM219.97,246.31l1.41,-1.91l0.11,-1.2l0.58,-0.36l1.1,-0.08l-0.32,-0.78l0.18,-0.7l0.48,0.19l0.98,-0.52l0.27,-1.09l0.89,-0.57l1.76,-2.13l1.99,-0.91l0.69,0.17l0.33,-0.36l0.17,-0.64l-0.47,-0.74l1.39,-1.18l-0.11,-0.61l0.47,-0.8l0.25,-1.52l-0.23,-0.7l0.67,0.55l1.19,-0.31l0.51,0.29l0.98,-0.1l1.04,-0.37l0.42,-1.4l-0.51,-0.63l-0.15,-0.96l-0.68,-0.17l-0.06,-1.13l0.71,-0.76l0.69,0.02l0.56,-0.39l0.08,-0.6l2.32,-2.69l0.8,-0.47l0.23,-1.17l1.24,-0.65l0.8,0.03l0.34,-0.54l0.77,-0.34l0.67,-1.15l0.29,-1.31l1.55,-0.35l1.1,-1.28l0.25,-1.97l-0.31,-0.53l-1.33,-0.8l-0.1,-0.5l0.42,-1.09l-0.23,-3.55l0.64,-1.27l0.5,-3.11l-0.51,-0.66l0.56,-0.75l-0.26,-0.41l2.51,0.32l0.51,0.35l0.43,0.02l0.38,-0.41l3.46,0.81l1.3,-0.08l4.09,1.2l3.23,0.37l3.44,-0.17l2.16,1.86l0.32,0.91l-0.08,1.29l3.74,4.85l1.04,0.62l0.62,1.06l0.81,0.25l-0.47,1.0l-1.5,1.46l-0.24,1.04l0.36,0.8l0.74,-0.05l0.38,-1.36l0.97,-0.5l1.31,-1.55l1.19,0.38l0.28,0.38l-0.47,1.34l0.08,1.01l-0.57,0.34l-0.89,1.63l0.34,0.56l1.91,-0.18l1.59,-1.69l0.28,-0.77l-0.19,-1.06l0.98,-0.4l4.16,-0.06l3.39,2.19l2.27,4.11l1.8,5.75l0.49,0.47l1.16,3.45l1.44,1.82l0.81,3.18l-0.08,1.01l-3.31,1.88l-4.92,0.78l-6.1,2.78l-1.26,-0.07l-5.26,2.35l-1.45,0.23l-1.65,0.71l-0.85,0.83l-1.62,-0.12l-1.32,0.83l-2.03,0.7l-0.96,2.07l-1.6,1.95l-0.47,1.5l-0.93,0.52l-2.88,1.16l-1.62,-0.74l0.17,-0.63l-0.24,-0.33l-0.93,-0.17l-0.55,0.71l0.19,1.09l-0.34,1.5l-3.38,3.51l0.05,1.25l-1.16,2.65l-0.16,1.27l-1.86,2.66l-1.02,0.7l-2.7,0.45l-3.04,-0.02l-0.44,-0.37l0.33,-0.56l-0.21,-1.0l-1.09,-0.53l-4.34,3.08l-3.99,0.69l-1.69,1.33l-1.8,-0.62l-0.51,-1.09l-0.25,-2.74l0.46,-4.89l-0.17,-1.56l-0.39,-0.61l0.01,-2.66l-0.5,-1.41l-2.97,-3.64l-2.15,-3.79l1.11,0.8l0.52,-0.4l-0.02,-0.67l-0.4,-0.56l-1.67,-0.72l-3.23,-0.72ZM278.89,175.73l-0.49,-0.42l1.55,-0.55l-0.56,0.63l-0.51,0.34ZM280.89,173.14l-0.05,-0.52l0.37,-0.4l-0.17,0.44l-0.15,0.48ZM265.98,295.52l0.41,0.33l-0.56,-0.18l0.16,-0.15ZM192.19,266.74l0.3,-0.36l0.16,0.54l-0.24,0.16l-0.22,-0.33ZM134.49,262.69l0.12,-0.19l0.63,-0.37l-0.53,0.46l-0.22,0.1ZM133.01,267.08l0.28,0.07l0.02,0.08l-0.15,0.11l-0.14,-0.25ZM125.45,269.42l0.35,-0.18l0.08,0.44l-0.34,-0.04l-0.09,-0.22Z\",\n            name: \"Northwest Territories\"\n          },\n          \"CA-NU\": {\n            path: \"M694.57,496.77l1.45,-0.41l0.98,0.82l0.52,0.93l-1.78,-0.16l-1.15,-0.84l-0.03,-0.34ZM682.9,477.17l0.06,-0.73l3.09,-1.55l2.28,-0.08l0.16,0.84l0.97,-0.11l-0.26,0.99l0.67,0.87l0.04,0.63l-0.57,0.8l-0.1,1.41l-0.48,-0.03l0.2,-0.37l-0.27,-0.55l-1.47,0.05l0.01,-0.29l-0.54,-0.36l-0.45,0.12l-0.52,-0.72l-1.64,-0.3l-1.18,-0.63ZM458.86,294.89l0.69,-1.03l0.12,-1.87l1.28,-0.97l0.41,0.23l0.46,-0.24l0.63,-1.06l-0.01,-0.62l-0.42,-0.41l-1.24,0.36l-0.49,-0.37l-0.34,-2.89l1.12,-2.11l-0.36,-0.48l0.36,-0.77l0.19,-2.79l0.15,-0.21l0.4,0.29l0.51,-0.11l0.34,-0.95l0.36,-0.14l0.13,-0.53l-0.73,-1.03l0.18,-0.83l1.18,0.54l0.58,-0.22l0.23,-0.85l-0.26,-0.58l-0.78,-0.45l0.74,-1.97l-0.38,-1.61l0.2,-0.36l0.16,0.26l0.43,-0.14l0.13,-0.38l-0.61,-0.85l0.51,-1.54l0.66,-0.7l-0.26,-0.44l0.45,-0.65l1.17,-0.06l0.12,-0.59l-0.94,-0.51l0.61,-0.81l1.41,0.47l0.55,-0.15l-0.1,-0.83l-1.25,-0.66l0.98,-1.74l1.16,-0.95l0.58,-1.42l4.02,-4.37l3.91,-2.04l3.49,-1.3l3.4,-0.13l1.76,0.44l3.97,0.22l1.49,1.34l-0.09,0.41l-0.39,0.92l-3.07,3.29l-0.74,0.43l-2.77,4.99l-1.59,4.49l-0.2,1.53l-2.06,4.52l-0.33,3.11l0.51,1.79l2.87,3.81l0.14,1.36l-1.11,2.75l0.04,3.45l0.38,2.71l0.54,0.48l1.61,4.19l1.24,1.26l0.91,1.49l0.64,0.41l0.25,0.78l1.1,1.03l0.66,1.16l1.93,0.96l0.28,0.43l1.59,0.27l0.08,1.57l0.55,0.31l0.2,0.65l-2.26,-0.26l-0.56,0.35l0.02,0.82l-0.69,-0.12l-0.57,0.29l-0.32,1.27l-1.2,-0.52l-1.85,0.77l-2.42,2.82l-3.42,1.32l-0.38,0.55l0.31,0.43l1.16,0.27l2.86,-0.76l2.85,-2.34l0.68,-0.95l1.5,-0.2l0.49,-0.42l2.28,0.52l0.56,-0.55l1.03,-0.26l-0.01,0.92l-0.51,-0.15l-1.13,0.39l-0.26,0.55l0.37,0.38l0.72,0.05l-0.06,0.67l0.58,0.71l-0.13,1.79l0.47,0.27l1.12,-0.17l0.37,-0.35l0.27,-1.15l-0.68,-2.37l0.1,-2.05l0.82,-0.76l-0.04,-0.5l-0.91,-1.17l0.13,-2.54l1.28,-0.72l0.23,-0.74l-0.35,-1.93l-0.72,-1.15l0.29,-0.96l-0.4,-0.73l-0.68,-0.22l-1.26,0.21l-0.31,0.48l0.13,0.39l-2.62,-0.82l-1.39,-1.79l0.48,-0.3l0.08,-0.55l-1.02,-2.06l-1.5,-1.05l-1.25,-0.46l-0.18,-0.49l1.72,0.19l-0.23,-0.81l1.12,-0.21l0.48,-0.51l-0.02,-1.02l0.65,-0.24l0.14,-0.45l-0.74,-1.32l0.52,-0.49l-0.09,-0.29l0.52,-0.18l0.32,0.44l0.63,-0.18l0.36,0.3l0.76,-0.34l1.93,1.98l1.21,0.53l0.72,1.21l1.02,0.76l0.34,1.5l0.53,0.49l0.54,-0.31l0.08,-1.28l-0.27,-1.08l-1.09,-0.87l-0.64,-1.52l-1.33,-0.47l-0.71,-0.9l-0.0,-0.81l-1.53,-0.76l0.54,-1.17l1.87,-0.1l0.64,-0.59l-0.05,-0.63l-0.67,-0.07l-0.38,0.35l-1.49,-0.13l0.33,-1.4l-0.35,-0.45l-1.12,0.68l-0.92,1.29l-1.61,-0.64l-1.12,-1.0l-0.66,-1.5l0.66,-0.27l0.24,-0.59l-1.19,-0.53l-0.44,-0.77l-0.08,-5.9l0.49,-1.27l2.32,0.46l1.67,1.04l3.06,1.1l1.54,1.13l2.18,0.68l0.2,-0.85l-2.01,-0.88l-2.6,-2.11l-2.93,-1.53l-1.19,-2.97l0.69,0.09l1.09,0.74l2.84,0.74l3.94,0.35l1.4,0.94l0.52,0.05l-0.06,-0.89l-1.15,-1.13l-5.25,-1.25l-2.97,-1.77l-0.82,-0.05l0.2,-2.03l1.57,-1.49l0.77,1.62l0.99,0.68l0.83,1.15l0.84,-0.07l0.18,-0.55l-1.66,-2.02l-0.49,-1.37l2.49,-1.67l2.45,0.71l0.73,2.42l0.51,0.6l0.49,-0.02l0.26,-0.97l-0.7,-3.07l-2.15,-1.0l1.91,-1.63l2.87,-1.83l0.38,0.28l0.57,-0.11l1.13,-1.93l4.82,-0.43l3.3,0.19l0.59,1.49l1.44,2.07l0.89,6.25l0.6,0.57l3.37,1.48l0.54,1.24l-0.42,2.62l0.28,1.36l1.2,2.0l1.25,0.59l0.49,1.29l-0.61,0.42l-1.06,1.94l0.18,1.18l-1.25,1.2l-1.39,2.04l-0.34,1.34l-0.79,1.18l-0.04,1.01l-1.07,1.14l0.38,0.63l1.13,-0.55l2.05,-4.19l1.74,-1.68l0.11,2.17l-1.34,1.85l-0.46,2.25l-0.79,0.26l0.13,0.45l1.94,1.39l-1.92,0.38l-0.11,0.75l-0.36,0.26l-0.03,0.63l0.44,0.31l0.83,0.03l0.58,-0.33l-0.06,1.88l-0.86,1.26l0.58,0.45l1.15,-0.69l0.47,-0.93l-0.06,-0.85l2.28,-1.73l0.25,-0.81l-0.16,-0.79l-0.82,-1.04l0.64,-0.06l0.77,-0.91l-0.47,-1.72l0.91,1.53l1.09,1.07l2.0,0.71l0.49,-0.54l-0.57,-0.78l-1.4,-0.66l-1.82,-2.49l0.53,-1.32l1.11,-0.88l1.33,1.64l-0.92,2.02l0.13,0.74l0.38,0.31l0.78,-0.26l0.43,-1.15l0.58,1.55l0.67,0.07l0.1,-0.87l-0.64,-1.52l0.82,-2.03l1.77,2.05l0.46,0.15l-0.07,0.8l0.33,0.72l-0.27,2.67l-1.03,2.24l0.12,0.44l0.62,0.44l0.84,-0.43l2.21,0.77l1.42,1.23l0.72,-0.44l-0.01,-0.5l-0.63,-0.54l-0.3,-0.94l-1.23,-0.3l-0.95,-0.84l-0.11,-2.89l2.0,1.09l1.2,3.33l1.53,2.41l1.42,0.81l1.14,0.25l0.37,-0.6l-0.59,-0.47l0.48,0.2l0.58,1.0l0.46,0.13l0.31,-2.04l-1.44,-0.54l-1.99,-2.7l-0.61,-0.18l-0.64,0.23l-1.18,-2.89l-1.97,-0.89l-1.13,-0.9l0.56,-1.27l-0.33,-0.73l0.81,-0.64l0.44,2.37l1.08,1.41l0.7,-0.56l-0.73,-1.43l-0.1,-1.29l2.36,0.65l0.59,0.63l0.45,-0.3l0.77,0.27l0.81,0.75l0.4,1.14l-0.15,0.87l0.61,0.29l0.53,-0.9l-0.22,-0.98l1.64,-0.35l2.11,0.9l0.48,-0.21l-0.13,-0.5l-1.12,-0.76l-1.2,-0.4l-1.69,0.17l-2.01,-1.39l-2.94,-1.01l-2.16,-1.59l-0.28,-1.48l0.49,-1.71l1.39,-1.61l1.28,-1.14l1.2,-0.39l1.06,-1.18l4.48,-0.37l1.22,0.71l0.16,0.89l0.52,0.5l3.11,0.45l0.56,2.06l0.61,0.47l0.66,-0.47l-0.32,-1.5l0.42,-0.69l1.2,0.0l1.93,0.9l1.73,0.36l0.53,1.58l1.91,3.11l-0.46,1.49l-0.95,1.37l-1.27,-0.25l-1.24,0.22l-2.91,2.14l-0.33,2.1l-0.75,1.09l-0.57,1.79l0.33,0.81l0.78,-0.31l0.47,-1.7l0.92,-1.46l0.26,-1.54l1.99,-1.69l0.77,-0.14l1.76,0.58l-1.7,1.0l-0.48,0.63l-0.21,3.99l-0.7,2.19l-1.44,0.77l-0.11,0.52l0.48,0.33l1.63,-0.52l0.55,-0.64l0.71,-2.62l0.15,-3.33l0.29,-0.42l1.09,-0.08l0.82,-0.68l0.54,-2.42l0.9,0.32l3.87,-0.17l0.92,0.9l0.57,1.21l-0.42,1.07l0.42,1.07l-0.26,0.8l-0.87,0.45l-1.1,-0.35l-0.33,0.65l0.18,0.36l-0.7,1.29l-1.15,0.73l-0.96,-0.09l-1.97,0.84l-0.39,0.52l-0.05,0.38l0.57,0.42l1.94,-0.92l0.63,0.31l-2.65,3.27l0.23,0.7l0.55,-0.1l1.21,-0.98l0.84,-1.22l1.01,-0.72l0.43,-1.33l0.28,-0.26l0.18,0.33l-0.06,1.06l-0.66,1.24l-1.41,0.53l-0.65,1.37l-0.05,0.52l0.56,0.41l0.74,-1.25l0.85,-0.18l-0.53,1.24l1.43,0.31l0.32,0.72l-1.98,4.49l0.25,0.66l0.85,-0.17l2.17,-4.95l-0.15,-0.96l-1.06,-1.78l-0.01,-0.47l0.68,-0.48l0.26,-2.28l0.65,-0.31l0.66,-1.43l0.52,-0.2l-0.53,2.66l0.36,1.13l0.93,0.59l0.43,-0.58l-0.72,-1.5l0.55,-0.76l0.39,-2.23l0.37,-0.41l0.92,-0.21l0.43,0.98l-0.74,1.09l0.06,0.68l-0.45,0.44l-0.42,3.14l-1.76,1.59l0.33,0.71l1.37,-0.82l0.2,1.52l-0.65,0.95l0.69,0.42l-0.72,1.87l0.74,0.32l1.26,-3.14l-0.2,-1.04l0.42,-1.9l-0.07,-1.72l0.6,-1.12l0.55,0.31l-0.13,2.41l0.61,1.05l-0.18,0.66l0.58,0.46l0.39,-0.16l-0.77,1.79l0.2,3.3l-0.07,0.44l-0.93,0.89l0.27,0.63l0.51,-0.04l1.23,-1.01l-0.01,-3.42l0.96,-2.35l0.28,-0.01l1.43,0.77l-1.0,1.14l0.48,1.6l-0.11,1.13l-0.87,1.71l0.76,1.2l0.46,0.19l0.29,-0.41l-0.38,-1.22l0.66,-0.72l0.42,-2.32l-0.23,-1.02l0.78,-0.18l0.33,-0.81l-0.04,-1.56l-0.52,-1.67l0.81,-0.19l0.58,-0.61l-0.16,-0.92l-0.54,-0.67l1.11,-1.15l-0.11,-2.23l7.09,1.89l0.97,0.79l0.12,0.55l1.23,0.9l1.53,1.97l-1.07,2.38l-0.26,2.06l-2.63,-0.48l-1.51,1.0l-0.44,0.82l0.19,0.87l-0.24,1.05l-0.77,0.74l-0.04,1.35l-2.72,1.93l0.03,0.47l0.46,0.12l2.02,-0.83l1.04,-0.93l0.6,0.28l-0.84,1.94l0.09,1.23l-1.54,1.42l0.08,0.57l0.75,0.44l1.6,-1.56l0.59,-2.29l1.55,-0.85l2.23,-2.28l1.62,-0.61l0.77,0.51l0.62,-0.2l-0.0,-0.67l-0.92,-0.84l0.25,-2.25l1.7,-2.06l0.62,-0.05l0.53,0.36l1.43,3.01l-0.98,1.81l-0.07,2.43l-1.64,1.47l-0.4,2.01l-2.14,-0.37l-0.75,0.42l0.12,1.53l-0.72,1.26l0.05,0.94l-1.08,0.39l-0.32,0.54l0.45,0.64l1.24,-0.56l0.08,1.68l-0.36,0.59l0.22,0.65l0.57,-0.05l0.49,-0.64l0.37,-1.45l-0.25,-2.22l0.65,-1.71l0.81,-0.31l0.9,0.23l-0.19,4.5l0.55,1.12l-0.83,5.47l0.79,0.17l0.98,-2.69l0.33,-2.96l-0.27,-0.77l0.11,-3.1l0.14,-1.62l0.4,-0.4l-0.53,-0.75l0.08,-1.34l0.93,-0.58l2.43,-3.47l1.07,-0.64l1.83,-2.13l0.44,0.09l-0.04,0.76l-0.62,1.81l-1.33,1.96l-1.69,1.01l-0.07,0.82l0.88,1.5l-0.46,1.01l0.42,0.5l0.61,-0.15l0.97,-1.17l-1.02,-1.74l1.0,-0.35l1.13,0.25l0.37,-0.3l0.18,-1.3l0.55,-0.62l1.35,-0.47l0.09,-1.77l0.66,-0.58l0.5,0.19l1.08,-0.36l1.09,1.02l6.27,2.05l0.21,0.76l-0.55,2.69l-0.45,-1.59l-0.83,-0.0l-0.46,1.29l0.45,1.34l-0.14,0.57l-1.12,0.77l-0.93,0.17l-0.42,0.53l-0.79,0.14l-1.61,1.16l-0.33,0.68l-0.72,0.38l-1.14,1.37l-0.3,1.67l-1.25,0.89l-0.46,1.36l0.34,0.34l0.58,-0.1l0.52,-1.07l0.8,0.15l0.37,0.45l-1.04,0.07l-0.98,0.85l-0.5,0.68l0.03,0.85l-1.2,1.16l-0.21,0.6l0.46,0.49l0.96,-0.26l1.65,-2.93l0.65,-0.22l0.65,0.21l0.88,-0.75l0.06,-0.98l-0.74,-1.23l0.4,-1.35l2.94,-1.79l1.3,0.24l0.4,-0.8l1.63,-0.58l0.37,0.72l-0.53,0.89l0.08,1.44l-1.99,1.87l-1.36,3.53l-2.35,0.15l-0.71,1.11l-0.46,3.71l0.27,0.82l0.83,-0.16l0.05,-1.1l0.57,-1.29l0.07,-1.59l0.78,-0.3l0.92,0.36l1.01,-0.3l0.83,-2.49l0.58,-0.83l0.91,-0.9l1.8,0.0l0.48,-0.43l-0.19,-0.89l0.56,-1.42l1.19,-0.79l0.79,-1.54l-0.18,-0.51l-0.74,-0.16l-0.35,-0.46l0.18,-0.37l-0.26,-0.41l0.75,-2.17l0.49,0.45l1.52,0.28l3.74,3.23l0.67,1.14l1.26,1.04l1.76,3.93l-1.12,0.47l-3.27,-0.62l-1.87,0.61l-1.42,1.94l-0.35,1.64l-2.6,0.34l-3.44,3.23l-3.28,-0.02l-0.74,0.27l-1.66,1.03l-0.02,0.7l1.31,0.42l1.62,-1.27l2.97,0.23l1.92,-1.07l0.42,-0.83l1.07,-0.73l1.13,-0.24l4.87,1.63l0.88,-0.06l0.8,-0.75l3.89,-0.64l3.67,1.66l1.14,1.21l0.41,1.1l-0.24,1.15l-1.47,-0.47l-1.54,0.17l-0.56,0.6l-1.08,-0.35l-0.87,0.88l-1.11,-0.02l-4.61,-1.81l-1.08,0.52l-5.37,0.06l-1.45,2.21l0.35,0.67l0.58,-0.07l1.48,-1.85l4.11,0.37l1.46,-0.52l0.8,0.68l-3.61,0.22l-1.14,0.71l-1.28,0.14l-0.3,0.6l0.9,0.45l2.07,-0.62l-0.61,0.96l-2.12,0.83l-0.53,0.55l-0.09,0.5l0.49,0.46l0.8,-0.48l0.07,2.84l0.71,-0.2l0.37,-0.69l0.01,-2.02l2.87,-2.49l1.64,0.27l3.38,1.33l-1.21,0.42l-0.35,0.82l-1.72,-0.31l-1.14,0.25l-1.16,0.76l-0.11,0.8l0.63,0.33l1.37,-0.73l1.95,0.49l0.07,0.67l-2.9,0.05l-0.35,0.3l0.51,0.66l0.61,0.03l-1.58,0.41l-0.14,0.41l0.52,0.48l-0.14,0.2l-0.81,-0.28l-1.59,0.31l-0.85,-0.53l-2.17,-0.21l-0.71,0.41l-0.15,0.52l0.74,1.32l2.91,-0.38l-0.17,0.83l0.48,0.36l0.89,-0.69l1.43,0.15l0.92,-0.36l3.0,0.22l-1.22,1.14l-2.02,-0.24l-1.06,0.51l-0.38,0.94l-0.57,0.4l0.31,0.64l0.92,0.07l0.4,0.37l2.29,-0.4l0.45,-0.89l1.59,0.19l0.47,0.56l1.29,-0.08l0.56,2.64l0.45,-0.14l0.34,-0.74l-0.22,-2.22l1.09,-0.75l0.63,0.18l-0.53,0.96l0.8,2.28l-1.1,0.65l-0.51,0.76l-0.03,0.89l0.34,0.61l0.69,-0.03l0.43,-1.26l0.67,-0.18l0.14,0.43l-0.73,0.86l0.47,0.42l0.32,-0.1l0.96,-0.69l-0.06,-1.12l0.61,-0.89l0.58,0.43l0.56,-0.92l0.88,0.18l-0.89,0.38l-0.58,1.2l0.12,1.99l-1.14,-0.14l-0.59,0.34l0.1,0.64l0.48,0.23l1.36,0.22l0.58,-0.3l0.47,-1.62l-0.32,-0.9l1.34,-1.3l1.77,0.49l-0.19,1.15l0.27,0.98l-0.64,1.3l0.17,1.06l0.41,0.45l0.55,-0.08l0.1,-1.17l0.73,-1.16l0.3,0.93l-0.13,1.2l0.15,0.43l0.45,0.01l0.62,-0.83l-0.17,-2.76l1.41,-0.1l-0.74,0.51l-0.22,0.63l1.11,0.26l0.72,-0.6l0.55,0.95l-0.69,0.91l-0.07,2.22l-1.92,-0.02l-0.56,0.43l0.09,0.64l2.05,0.54l0.72,-0.18l0.32,0.77l0.47,0.14l0.42,-0.47l-0.33,-1.25l0.0,-2.22l1.35,-1.57l-0.2,1.04l1.08,1.38l0.16,3.19l0.5,1.59l0.65,0.46l0.41,-0.68l-0.7,-3.48l0.87,-1.12l0.11,-0.9l-0.49,-1.05l0.62,-0.77l1.07,-0.25l0.15,2.93l-0.33,1.24l0.53,0.72l1.28,0.62l1.09,1.89l0.65,0.25l0.41,-0.64l-0.92,-2.03l-1.79,-1.22l0.3,-2.6l1.38,-1.36l0.02,-1.16l0.51,-0.86l2.04,0.52l-0.69,0.76l-0.86,0.09l-0.59,0.55l0.16,0.62l0.72,0.08l-0.19,0.72l-0.71,0.32l0.09,1.47l0.5,0.36l0.55,-0.57l-0.9,2.0l0.42,1.53l0.37,0.23l0.54,-0.3l-0.09,-1.47l0.59,-0.57l0.05,-0.77l0.46,-0.59l0.38,0.45l-0.09,1.22l0.5,0.27l0.58,-0.27l0.26,-0.7l-0.35,-1.86l0.48,-0.44l1.86,0.93l-1.5,1.87l0.5,0.54l1.95,-1.32l0.24,-0.55l0.64,0.87l-0.19,1.03l0.5,0.16l1.03,-0.39l0.25,1.77l-0.68,0.8l-1.33,0.11l-0.36,0.33l0.23,0.43l1.32,0.31l1.94,-0.85l1.02,1.54l-0.3,0.73l-5.62,0.57l-0.51,0.47l0.32,0.64l3.99,-0.1l-0.41,0.42l-1.21,0.14l-1.79,1.38l-0.28,0.52l0.3,0.55l0.68,0.01l1.27,-1.17l2.68,-1.09l-2.83,2.39l-0.4,0.71l-0.09,1.02l0.38,1.42l0.39,0.36l0.78,-0.41l-0.06,-1.81l0.36,-0.86l1.17,-0.53l1.27,-1.21l1.42,-0.48l0.36,-1.11l0.95,0.13l0.52,-0.56l1.08,-0.44l0.37,0.8l-0.23,1.29l-1.16,1.76l-0.17,1.27l0.52,0.87l0.49,0.08l0.04,-1.63l1.16,-1.2l0.61,-1.4l-0.25,-2.7l0.37,0.19l0.65,-0.46l0.26,-0.66l-0.17,-0.83l0.79,0.36l0.48,1.0l-0.21,1.05l-1.18,1.04l-0.24,0.75l1.15,2.57l-0.16,0.48l-1.81,1.45l0.05,1.54l-1.36,0.35l-0.27,0.35l0.46,0.73l1.96,-0.42l0.72,-0.73l0.3,2.11l0.53,0.34l0.37,-0.19l0.23,-2.4l-0.53,-1.52l2.68,-2.39l1.05,2.86l0.25,3.22l0.61,0.48l0.64,-1.37l-0.29,-0.87l0.22,-1.52l-0.93,-2.78l0.9,-0.23l1.02,1.69l0.75,0.3l1.17,1.39l0.85,-0.11l-0.18,-1.16l-1.5,-1.3l-0.35,-0.7l0.01,-0.4l0.88,-0.85l-0.59,-1.65l0.99,-0.64l0.34,0.06l-0.0,2.25l0.25,0.44l0.75,0.09l0.21,0.46l0.45,0.11l0.51,-0.57l1.97,-0.44l-0.69,0.81l0.27,0.36l0.85,0.23l1.05,-0.23l2.61,2.39l0.07,0.53l-0.74,0.62l-0.1,0.59l-0.67,0.16l-0.62,-0.81l-1.02,-0.6l-1.28,0.03l-1.19,-0.43l-0.45,0.2l-0.05,1.01l-0.88,0.62l-0.15,0.45l0.34,0.4l0.77,0.13l0.56,-0.29l0.29,-0.8l1.16,-0.0l2.51,1.93l-0.79,0.38l-0.26,0.53l-0.94,0.21l-0.77,1.17l0.32,0.4l0.56,0.05l0.67,-0.53l2.09,-0.67l0.46,0.39l-0.13,0.23l-0.45,0.05l-0.34,0.53l-0.95,0.19l-0.36,1.09l-0.33,0.13l-1.31,-0.42l-0.75,0.49l-0.37,-1.07l-0.57,-0.48l-3.33,0.22l-0.77,0.93l0.09,0.59l1.19,0.3l0.67,-0.67l0.31,0.6l1.23,0.69l-0.19,0.37l-1.47,1.5l-0.57,-0.21l-1.12,-1.43l-0.84,0.01l-0.31,0.51l1.33,1.68l1.21,0.78l0.64,-0.08l0.73,-0.72l1.88,0.66l1.22,-0.23l0.27,0.77l0.7,0.14l0.04,0.78l0.47,0.13l-0.85,0.26l-0.63,0.76l-0.72,-0.45l-1.16,-0.01l-0.87,0.35l-0.62,-0.19l-0.59,0.4l-0.99,-1.4l-0.91,-0.43l-1.15,1.0l0.32,0.7l0.94,-0.35l1.44,1.67l2.47,-0.39l0.45,0.44l0.57,-0.05l-0.09,0.93l0.73,0.34l0.7,0.91l-0.79,0.63l-0.35,-0.32l-0.85,0.4l-1.78,-1.23l-0.7,-0.08l-0.18,0.94l0.63,0.72l2.55,1.16l-1.81,-0.21l-0.36,0.52l-0.82,0.15l1.03,2.77l-0.49,-0.42l-1.44,0.23l-2.78,-3.16l-0.84,-1.54l-0.5,-0.23l-0.52,0.4l0.32,1.56l1.97,2.25l0.15,0.61l-2.48,0.81l-0.08,0.55l0.87,0.62l0.76,-0.35l0.71,0.3l0.93,-0.36l0.34,0.34l0.03,0.84l-0.51,0.28l-0.81,-0.86l-0.68,-0.1l-0.31,0.51l0.26,1.11l0.97,0.67l-0.85,0.57l0.22,0.54l1.41,0.54l-0.12,0.47l0.51,0.46l1.03,0.41l-0.42,0.7l0.62,1.36l-0.54,0.45l0.71,1.05l0.88,-0.01l-0.39,0.45l0.28,2.2l-0.28,0.51l-0.72,-0.48l-0.97,0.83l0.81,-0.76l-0.09,-0.71l-0.28,-0.1l-0.91,0.15l-0.35,0.55l-0.37,-0.89l0.29,-1.65l-0.41,-0.45l-0.88,0.34l-0.39,1.72l-0.85,-0.15l-0.04,1.3l-0.79,-0.78l0.87,-1.93l-0.86,-0.2l-1.53,1.14l-0.49,-2.36l0.44,-1.52l-0.09,-0.98l-0.54,-0.34l-0.57,0.35l-0.21,1.79l-0.5,0.64l0.46,3.9l-0.35,-0.23l-0.25,-0.91l-0.71,-0.18l0.32,-0.69l-1.21,-0.53l-0.46,0.34l-0.08,0.5l-0.2,-0.12l-0.13,-0.62l0.76,-0.15l0.51,-0.78l-0.4,-0.58l-0.62,0.07l1.07,-1.21l1.3,-0.26l0.14,-1.53l-0.67,-0.44l-0.45,0.73l-1.47,0.31l-0.2,0.66l-1.39,0.65l-0.79,1.14l-0.68,-0.57l-0.39,-0.92l1.43,-0.95l0.34,-1.28l0.29,-0.01l0.24,-0.63l-0.5,-0.51l0.75,-0.49l0.05,-0.53l-0.45,-0.29l-1.35,0.38l-0.53,2.51l-1.2,0.35l-0.18,-0.92l0.55,-0.48l-0.03,-0.73l0.68,-0.76l1.26,-0.6l-0.05,-0.89l-0.6,-0.08l-1.44,0.68l-0.69,0.69l-0.34,0.97l-1.71,0.12l0.07,-1.83l-0.26,-0.33l-0.64,0.13l0.37,-2.25l2.59,-2.46l1.07,0.37l0.82,-0.31l-0.14,-0.66l-0.98,-0.6l-0.07,-3.39l0.88,-1.88l1.13,-1.23l0.17,-0.62l-0.43,-0.52l-1.04,0.55l-1.7,1.85l-0.54,2.08l0.28,1.6l-0.49,0.74l-0.53,0.21l-1.05,1.26l-0.61,-0.13l-0.68,1.47l-3.63,1.59l-0.61,-1.34l0.16,-0.77l1.74,-2.36l0.51,-2.99l-0.49,-1.87l-0.63,-0.04l-0.19,0.3l-0.42,4.19l-1.06,1.41l-0.79,0.5l-0.92,-0.13l-1.04,-1.14l0.36,-1.37l-0.28,-0.43l-0.47,0.19l-0.44,0.81l-1.47,-0.11l-0.31,-0.53l0.09,-0.6l-0.8,-0.16l0.76,-0.76l-0.28,-0.66l-0.57,-0.04l-1.29,1.36l-0.01,-1.4l-0.56,-0.34l-0.51,0.52l-0.5,-1.59l0.51,-0.99l-0.3,-0.45l-1.13,0.24l-1.9,-0.65l-0.33,0.65l1.6,1.05l-0.31,0.34l-1.32,0.44l-0.96,-0.27l-0.44,-0.62l-1.0,0.37l-0.97,-0.57l-0.35,0.72l-0.41,0.04l-0.88,0.98l0.65,0.65l2.65,-0.4l0.67,0.17l0.43,0.79l0.92,0.48l0.1,0.44l-1.41,-0.44l-0.43,0.14l-0.2,0.59l0.75,0.81l1.79,0.67l-0.75,0.54l-0.54,-0.39l-0.26,0.21l-0.91,-1.3l-1.66,-0.97l-0.49,0.25l-0.72,-0.19l-0.62,-1.05l-1.11,0.17l-0.48,0.54l0.16,0.52l1.09,0.64l0.41,0.86l0.93,0.76l0.75,1.19l-0.05,1.05l3.15,1.69l1.16,0.19l1.0,1.25l-0.47,0.3l-0.05,0.71l0.77,0.63l-0.39,0.18l-0.74,-0.28l-0.37,0.99l-0.95,0.19l-1.16,-0.82l-0.63,0.35l0.43,1.06l-0.27,0.32l-0.63,-0.16l-1.24,-1.61l-0.02,-1.8l-2.32,-0.81l-0.78,-1.44l-0.63,-0.01l-0.45,0.44l-0.58,-1.04l-0.78,-0.51l-0.46,0.21l-0.07,0.49l0.68,1.2l-2.72,1.06l0.31,0.64l1.36,0.11l1.7,-0.77l1.93,1.66l0.6,0.1l0.38,-0.45l-0.28,-0.56l0.87,0.64l0.01,0.33l-0.54,0.04l-0.39,0.57l-0.64,-0.57l-0.57,0.19l-0.0,0.66l0.71,0.87l-0.18,1.0l0.76,0.68l0.89,-0.25l0.01,0.91l0.43,0.29l-0.42,0.73l0.54,0.41l1.6,-0.08l0.54,-0.43l-0.36,0.54l0.05,1.05l0.82,0.33l0.16,0.5l-0.66,0.16l0.09,0.71l-0.45,0.82l0.21,0.56l0.59,0.06l-0.25,1.07l0.52,0.44l0.48,-0.36l0.63,-1.97l0.54,-0.28l0.22,-1.04l1.25,-0.75l0.34,0.18l0.51,-0.36l-0.01,-0.43l1.0,0.28l0.17,0.33l-0.46,0.83l0.21,0.36l-0.75,1.49l1.43,0.98l1.73,-0.66l0.42,0.5l-0.07,0.64l-1.38,0.37l-0.81,0.55l-0.19,0.59l0.48,0.5l0.61,0.1l0.61,-0.72l0.74,0.38l0.35,1.8l0.85,0.37l0.46,-0.4l0.55,0.1l0.19,1.06l-0.71,0.4l-0.23,1.29l0.55,0.26l0.7,-0.62l0.72,0.5l0.95,-0.02l0.51,0.75l-0.6,0.81l1.04,0.41l-0.1,0.9l1.14,2.04l0.78,-0.07l0.29,-0.88l-0.6,-0.62l-0.38,-2.84l-0.48,-0.75l0.52,0.19l0.2,0.82l0.71,0.45l1.39,0.04l0.33,0.84l0.58,-0.07l0.19,-0.62l0.31,0.19l0.21,1.48l-0.91,0.24l-0.16,0.68l1.08,0.23l0.57,1.18l0.44,0.07l0.46,-0.4l-0.13,-1.23l0.04,-0.29l0.53,1.04l0.72,-0.24l1.34,1.16l0.43,0.03l0.32,-0.41l-0.12,-0.55l-1.12,-1.21l0.19,-0.62l-0.72,-0.54l0.08,-0.66l-0.29,-0.39l0.28,-0.12l0.38,1.13l0.64,-0.23l-0.13,1.01l0.57,1.12l0.5,0.15l0.28,-0.49l-0.19,-1.12l0.42,0.49l0.19,1.22l-0.28,0.81l-0.75,0.64l0.96,2.23l0.44,0.16l1.17,-0.56l0.27,0.32l0.64,-0.18l0.3,0.54l0.57,-0.17l0.21,-0.59l0.53,-0.02l0.26,-0.45l0.94,-0.02l0.08,0.44l-1.15,0.7l-0.12,0.55l0.92,0.72l-0.06,0.57l-2.62,0.09l-0.89,0.66l-0.13,0.65l0.51,0.23l1.18,-0.44l-0.61,0.48l0.09,0.63l0.62,0.14l1.03,-0.41l0.67,0.31l-0.54,1.3l0.48,0.28l0.61,-0.22l0.29,-0.59l0.32,0.21l0.6,0.66l-0.19,0.32l0.26,0.52l-0.3,0.64l0.37,0.4l2.23,-0.34l0.04,0.74l0.46,0.02l0.61,-0.53l0.29,-0.81l0.34,0.24l0.56,-0.38l0.18,0.22l-1.53,1.95l0.09,0.7l-0.52,0.44l-0.03,0.88l0.95,0.96l1.69,0.18l0.45,-0.24l1.74,1.04l0.2,0.48l-0.47,0.7l0.53,0.51l1.11,2.71l-0.7,-0.07l-0.27,0.71l0.43,0.55l0.85,0.13l0.2,0.39l-0.88,0.25l0.13,0.61l0.9,0.27l-0.51,0.23l-1.11,-0.91l-1.52,-3.1l-1.23,-1.15l-0.37,-1.05l-1.5,-0.75l-1.36,-1.84l-1.5,-0.2l-0.37,0.51l2.03,1.66l0.73,1.05l1.02,0.59l-0.64,0.99l0.77,1.77l-0.59,0.67l0.78,0.94l0.8,-0.19l0.98,1.22l-0.73,-0.32l-0.46,0.27l0.06,0.47l-0.32,0.02l-0.27,0.66l0.9,0.88l0.37,0.84l0.53,0.26l0.95,-0.38l0.41,0.63l0.73,-0.1l-0.41,0.25l0.02,0.64l0.6,0.27l0.38,0.75l-0.06,1.3l1.26,0.59l-0.07,0.52l-0.77,0.16l-1.95,-0.91l-0.65,-0.89l-0.62,0.28l-0.04,0.62l-0.58,-0.65l-0.66,0.31l0.13,0.75l1.08,0.83l0.25,0.9l2.55,2.45l0.58,1.08l-1.04,1.6l-0.51,-0.36l-1.04,-1.83l-0.26,0.05l0.42,-1.04l-0.23,-0.6l-0.58,-0.02l0.44,-0.38l-0.29,-0.64l-0.56,0.01l-0.36,-1.34l-0.79,0.23l0.01,1.36l-1.22,0.77l-0.71,-1.25l-0.78,-0.08l0.19,-1.27l-0.76,-1.4l-0.61,0.13l-0.18,0.73l-0.45,-0.23l-0.42,0.2l-0.71,1.16l-0.47,-1.12l-0.77,0.16l-0.45,-0.76l-1.37,-0.58l-0.46,0.33l0.1,0.53l0.81,0.59l0.39,0.91l1.11,0.62l-0.01,0.38l-1.22,-0.65l-1.0,0.15l-1.14,-0.99l0.1,-0.36l-0.96,-1.06l-0.25,-1.14l-1.39,-0.99l0.13,-1.28l-0.27,-0.63l-0.71,0.03l-0.26,2.36l-0.41,-0.2l-0.42,0.46l0.11,0.93l0.59,0.94l-1.38,-1.03l0.36,-0.84l-0.65,-0.78l-0.28,-1.63l-0.55,-0.11l-0.39,0.37l0.37,2.04l-0.91,-0.42l-0.28,0.26l-1.34,-1.03l-0.81,-1.45l-0.68,0.04l-0.09,0.29l-0.63,-1.12l-0.82,-0.47l-0.87,-1.14l0.03,-0.36l-0.6,-0.38l-0.47,0.39l-0.36,-0.77l-1.44,-1.18l-0.47,0.04l0.07,0.87l1.36,1.69l0.37,1.43l1.98,3.03l-0.7,-0.34l-1.51,-1.66l-1.45,-0.62l-0.54,-0.85l-0.79,0.11l-1.1,-1.62l-0.52,0.0l-0.2,0.94l-0.57,-0.9l-0.72,-0.44l-0.63,-0.06l-0.22,0.29l-1.62,-0.51l-0.41,0.53l0.22,0.44l-1.37,-0.23l-0.86,0.53l0.28,0.7l1.76,1.39l-0.23,0.39l0.17,0.49l0.68,0.2l0.91,1.08l2.22,1.24l2.37,2.05l0.24,0.75l0.79,0.39l0.03,0.8l1.12,0.68l1.56,-0.11l-0.1,0.91l0.36,0.54l0.7,-0.17l0.29,-0.85l1.0,0.23l-0.45,0.99l0.92,1.52l0.5,-0.1l0.68,0.63l0.75,-1.18l0.81,-0.52l0.2,0.78l0.61,-0.08l0.53,0.41l-0.52,0.84l0.87,0.23l0.76,-0.65l-0.25,1.11l1.32,-0.23l-0.1,0.7l1.05,0.37l-0.12,0.95l0.64,0.13l0.45,0.65l1.61,-0.83l0.0,0.32l0.98,0.54l0.57,-0.07l0.86,0.74l0.78,0.84l0.17,1.5l0.47,0.27l0.64,-0.59l0.44,0.48l-0.91,0.86l0.36,0.76l1.38,0.89l0.73,-0.19l0.97,0.4l1.26,-0.01l0.43,-0.41l0.32,0.26l-0.68,1.24l0.31,0.86l-0.75,-0.65l-0.59,0.21l-0.04,0.81l1.15,0.98l0.1,0.93l0.59,0.08l1.36,1.14l-2.31,1.17l-1.19,-0.02l-1.96,-0.5l-0.18,-0.64l-0.76,0.1l-0.74,-0.72l-0.98,0.11l-0.95,-0.31l-1.0,0.15l-0.36,0.42l-1.57,-0.92l-0.43,0.51l-0.19,-0.76l-0.37,-0.24l-1.45,0.23l-1.14,-0.4l-0.65,0.6l-0.58,0.05l-0.88,-0.71l-0.48,0.37l-1.37,0.08l-0.3,-0.27l-4.39,0.62l-1.38,-0.54l-0.35,-0.62l-0.83,-0.02l-0.59,-0.69l-1.57,0.4l-1.67,-0.82l-0.9,-0.67l-0.37,-0.78l0.01,-1.34l-0.41,-0.53l-0.69,0.38l0.03,0.7l-0.84,-0.79l-0.43,0.1l-0.06,0.34l-0.5,-0.52l0.54,-0.05l0.56,-0.86l-0.33,-0.54l0.56,-0.63l-0.41,-0.62l-1.57,0.32l-0.59,-0.3l-0.84,0.31l-0.99,-0.56l-0.6,0.13l-0.08,0.55l0.4,0.55l-0.43,-0.42l-0.69,0.11l-0.75,1.07l-1.42,0.12l-2.52,-1.63l-2.54,0.01l0.2,-0.45l-0.42,-0.29l-1.26,-0.11l-0.19,-1.13l-0.44,-0.35l0.09,-0.64l0.92,-1.25l-1.32,-0.83l-0.81,0.48l-0.15,1.58l-1.2,-0.09l-0.26,1.25l-1.15,-0.07l-0.18,-1.19l-1.64,0.01l-0.98,-0.46l0.16,-0.38l-0.55,-0.5l0.38,-0.78l-0.43,-0.4l-0.72,0.02l-0.4,-2.19l1.07,-0.27l0.43,-1.0l1.14,-0.67l0.04,-0.69l0.85,-1.06l0.17,-1.27l-1.84,-0.43l-0.49,0.48l-0.77,-0.38l0.15,-1.01l-1.4,-0.33l-0.26,-0.37l-0.69,0.23l-1.64,-1.22l-0.78,0.57l-0.18,1.32l-0.58,0.16l-0.56,-0.73l-0.58,-0.07l0.18,-1.23l0.67,-0.43l0.15,-1.02l-1.09,0.32l-0.3,-0.9l-0.73,0.09l-0.09,1.16l-0.29,0.12l-0.5,1.5l-1.46,-0.6l-0.29,-0.72l0.3,-0.52l-0.12,-1.52l-0.29,-0.44l-0.46,0.04l-0.14,-0.85l-0.61,-0.22l-0.3,0.38l0.07,1.25l-0.64,-0.07l-0.3,-0.49l-0.38,-0.02l0.36,-0.74l-0.74,-1.53l-1.28,-0.25l-0.15,-0.78l-0.54,-0.29l-0.09,-0.5l-0.94,-0.22l-0.64,-0.63l-0.1,-0.62l-1.13,-0.55l0.59,-0.94l-0.47,-0.58l1.2,-2.13l-0.2,-0.61l-0.64,-0.11l-0.19,0.29l-0.44,-0.98l-0.45,-0.19l-0.61,0.96l0.68,1.51l-0.77,-1.17l-0.6,-0.01l-0.38,0.42l-0.59,-0.93l-0.67,-0.23l-0.44,0.46l0.28,1.74l-0.36,0.2l-1.32,-0.94l-0.59,0.55l-0.62,-0.56l-0.09,-1.88l-0.72,-0.6l-0.54,0.23l0.09,1.16l-0.44,0.47l-0.63,-0.22l-0.48,0.18l-0.14,0.48l-0.66,-0.0l0.04,0.68l-0.35,0.24l-0.37,-0.75l-1.23,-1.03l0.67,-1.75l0.44,0.01l0.34,-0.68l-1.19,-1.24l-0.75,0.01l-0.43,0.26l-0.01,0.6l-0.54,0.34l0.21,1.06l-0.35,-0.12l-0.46,0.42l-1.02,-0.08l-0.31,0.63l0.52,0.68l0.87,0.22l0.66,0.94l0.67,0.18l2.29,1.83l-0.87,0.05l-0.38,0.54l0.62,1.27l0.61,0.28l-1.02,1.15l-0.58,-0.18l-0.27,0.34l-0.81,-0.66l-0.63,0.17l-1.87,-1.07l-0.56,0.74l-1.02,-0.83l-1.61,-0.36l-0.69,-0.54l-0.47,0.19l-1.45,-0.83l-0.42,0.13l-0.24,0.53l0.31,1.11l0.3,0.69l0.95,0.49l-1.44,-0.25l-0.25,0.79l0.76,0.38l0.57,0.88l-1.41,-0.29l-0.61,0.68l-0.48,-0.21l-1.39,0.98l-0.7,-0.03l-0.16,0.85l-1.87,0.48l-0.17,0.38l-0.81,-0.01l-0.13,0.84l0.38,1.0l-1.71,-1.01l-0.65,0.23l-1.0,-0.62l-1.67,1.18l-0.35,-1.07l-0.42,-0.32l-0.55,0.21l-0.31,-0.61l-1.4,-0.53l-0.54,0.33l-0.11,0.67l-1.01,-0.4l0.3,-0.51l-0.13,-0.45l-1.38,0.16l0.23,-0.61l-1.02,-0.96l-0.17,-0.72l-0.74,-0.26l0.25,-0.48l-0.71,-1.26l0.18,-0.51l-0.36,-1.21l0.78,-1.48l-0.02,-0.51l-0.63,-0.89l-0.31,-1.18l1.12,-1.37l0.09,-0.51l1.93,-1.4l0.53,-0.81l1.09,-0.13l1.43,-1.19l0.04,-0.68l-1.92,-2.13l0.17,-0.67l0.89,0.2l0.6,-0.67l-0.27,-0.66l-0.98,-0.8l1.41,0.15l1.07,0.66l1.04,-0.06l0.45,-0.49l0.53,-0.05l0.56,0.41l0.84,-0.19l7.68,2.38l0.82,1.41l1.83,0.64l0.68,0.6l0.41,1.5l-0.5,0.55l-1.05,-0.06l-0.33,0.78l0.52,0.45l0.49,1.17l0.99,0.07l-0.49,0.9l0.31,0.61l0.65,0.05l0.66,0.87l0.44,0.03l0.79,-0.44l0.11,-0.67l-0.95,-1.79l-0.05,-1.5l-0.68,-0.39l0.15,-0.29l0.71,0.28l0.39,-0.55l-0.32,-0.58l0.51,-1.52l-0.13,-0.91l-0.6,-0.33l-0.65,0.41l-0.15,1.57l-1.94,-2.57l-1.32,-0.45l-0.48,-0.65l-1.23,-0.36l-0.25,-0.41l1.27,-0.02l0.51,-0.38l0.8,0.76l3.17,0.01l1.07,-0.93l0.1,-1.11l-0.32,-0.89l0.62,0.17l0.8,-0.53l0.54,0.15l0.59,-0.33l0.55,0.78l1.37,0.15l1.54,-1.96l0.16,-1.33l1.1,-0.55l0.05,-0.78l1.06,0.43l0.77,-0.72l0.75,0.05l0.97,1.1l0.83,-0.3l0.89,0.2l0.39,-0.27l-0.26,-1.16l-1.44,-2.04l-0.09,-0.93l-0.73,-0.35l0.12,-0.99l-0.68,-0.93l-1.2,-0.81l-1.56,-0.46l-2.13,-2.36l-1.97,-1.59l-0.53,-0.93l0.68,-1.51l1.82,-1.83l4.2,-6.04l0.47,-2.31l1.53,-1.58l1.19,-0.4l0.14,-0.56l-0.7,-1.39l0.54,-2.21l0.16,-2.48l0.69,-0.74l2.1,-0.9l0.84,-1.86l-0.22,-1.08l0.38,-0.95l-0.16,-0.63l-1.36,-0.67l-1.07,-2.69l-0.58,-0.53l0.34,-0.96l-0.93,-1.74l-0.87,-0.24l-0.62,-0.6l-0.11,-0.45l0.44,-0.66l-0.32,-1.05l-1.63,-1.76l-0.77,0.29l-0.32,-0.47l-0.38,-2.29l-1.67,-4.46l-0.46,-0.24l-0.81,0.54l-0.62,-0.91l-0.94,-0.19l0.26,-0.39l-0.17,-0.72l0.62,-0.33l-0.15,-0.42l-0.7,-0.39l-0.47,0.04l-0.49,0.94l0.06,0.55l-0.73,0.33l-0.21,0.76l-2.05,-0.67l-0.84,-1.08l0.22,-1.54l0.88,-0.77l-0.12,-0.73l-0.36,-0.28l0.16,-1.79l-0.79,-1.05l-3.03,-0.48l-0.5,0.19l-0.27,0.58l2.86,3.0l-0.06,0.55l-0.47,-0.39l-1.3,0.49l-1.25,-0.17l-0.57,-0.73l-0.57,-0.2l-0.41,-1.24l-1.53,-1.09l-0.07,-0.41l0.81,-0.62l0.17,-1.14l-0.42,-0.46l-0.73,-0.12l-0.42,-1.6l-0.71,-0.12l-0.51,0.29l-0.0,-0.54l-0.73,-0.08l0.55,-0.29l0.4,0.27l1.02,-0.53l0.24,-0.48l-0.4,-0.87l-1.32,-0.65l-0.99,0.48l-1.02,1.51l-0.14,2.43l-2.3,-2.24l-0.78,0.0l-0.62,0.99l0.62,1.23l-0.47,0.78l-1.31,1.23l-0.97,0.45l-0.55,1.14l-1.93,1.88l-1.75,0.63l-0.45,-1.23l0.57,-1.24l0.12,-1.44l-0.97,-0.74l-0.22,-1.81l1.19,-0.86l1.8,0.01l0.84,0.62l0.73,-0.12l1.19,-1.21l0.2,-0.69l1.15,-0.16l0.37,-0.54l0.02,-1.27l-0.53,-1.86l-0.96,-1.14l-2.45,-1.54l-1.7,-0.62l-1.39,0.45l-0.59,-1.14l-1.49,-1.35l-0.04,-0.67l0.74,-1.28l1.85,0.5l0.34,-1.26l-0.4,-0.58l-1.22,0.13l-0.53,-0.6l-1.73,0.58l-0.26,0.56l0.46,0.5l0.4,-0.08l-0.69,0.58l-0.11,1.06l-0.82,-0.16l0.33,-0.57l-0.16,-0.5l-0.93,0.3l-0.45,0.57l-0.34,-0.58l-0.92,-0.04l1.0,-0.68l0.53,0.26l0.58,-0.25l0.62,-1.2l-0.21,-0.88l-0.74,-0.19l0.81,-0.68l-0.14,-0.82l-0.48,-0.18l-1.25,0.55l0.09,-0.34l-0.49,-0.48l-0.69,0.29l-0.36,0.55l-0.66,-0.06l1.88,-1.51l0.2,-0.52l-0.5,-0.52l-3.53,2.22l-0.73,0.8l-1.32,-7.62l-0.89,-1.06l-0.81,-0.25l-0.68,0.2l-0.56,0.69l-1.16,-0.49l-0.31,0.65l-0.65,0.39l-1.01,-1.45l0.72,-0.54l-0.2,-0.6l-0.89,-0.28l-0.77,0.25l-1.43,-2.18l-0.46,0.15l-0.16,-0.38l-0.63,-0.11l-0.21,0.51l-0.39,0.0l0.02,-0.94l0.69,-0.19l0.23,-0.7l0.65,0.38l0.67,-0.32l-1.17,-2.05l-0.24,-0.18l-0.69,0.3l-0.48,-1.0l-0.73,0.09l-0.82,1.32l0.23,0.67l0.74,0.04l-0.47,1.38l-0.55,-0.77l-0.72,0.44l0.03,1.14l-0.75,0.13l0.01,0.65l-0.55,0.17l-0.47,0.63l-0.06,0.83l1.16,1.13l0.61,0.2l0.43,-0.39l1.24,1.09l0.8,-0.07l0.41,-0.55l0.33,0.25l1.65,2.55l0.39,2.11l0.69,1.33l-0.08,1.72l-0.52,0.66l-4.35,0.59l-1.6,0.86l-1.74,-2.45l-0.55,-0.05l-0.35,0.45l-0.46,-0.8l-1.34,-0.07l-0.86,0.48l-1.6,-1.01l-1.92,0.03l-0.77,-0.32l-0.65,0.27l-0.31,-0.61l-0.8,0.21l-2.96,-0.16l-1.17,-0.45l-0.6,0.18l-0.19,0.63l0.72,1.13l0.95,0.16l1.16,1.27l0.47,-0.07l0.5,-0.6l0.69,0.48l0.61,1.42l2.84,2.71l-0.04,0.5l-0.53,0.47l-1.01,-0.79l-0.79,-1.21l-0.86,-0.35l-1.72,-1.57l-0.61,-0.06l-0.07,-0.83l-0.56,-0.19l-0.79,0.22l-2.88,-2.78l-3.45,-1.36l-3.58,-2.36l-0.7,0.21l0.08,0.45l2.03,2.2l0.69,-0.04l3.53,1.7l1.43,1.03l1.4,1.69l1.11,0.35l-0.83,1.43l-0.97,-0.26l-0.92,1.2l-1.07,-0.71l-0.99,0.26l-1.64,-1.29l-0.67,0.01l-0.98,-0.6l-1.1,-1.1l-1.17,-0.16l-1.0,0.22l-0.47,0.65l-2.09,0.89l-3.02,-0.68l-2.06,0.14l-1.18,-0.39l-1.18,0.11l-0.91,-0.58l-0.1,-0.31l0.49,-0.65l-0.36,-0.74l-0.5,0.06l-0.78,1.02l-2.79,-0.72l-3.39,0.36l-0.74,0.52l0.03,1.0l-2.42,-1.57l-2.06,-2.53l-0.29,-2.53l0.45,-1.09l0.92,-0.54l0.59,-0.83l-0.18,-0.85l-0.58,-0.55l-0.52,0.04l-0.17,0.59l0.3,0.44l-1.61,1.29l-0.54,1.08l-0.07,-0.35l-0.83,-0.11l-0.42,-0.63l0.14,-0.5l-0.63,-0.54l-0.68,0.08l-0.91,0.67l-0.12,0.72l-0.56,0.29l-0.16,0.74l0.33,0.31l1.43,-0.04l0.14,1.23l-3.28,-0.82l-2.11,-0.01l-0.46,0.4l-3.84,-2.75l-2.22,-0.36l-1.4,-1.55l-0.77,-2.5l-2.1,-2.54l-0.99,-2.59l1.3,-0.38l0.48,-1.01l-2.06,-2.13l1.08,0.15l0.09,0.48l0.89,0.54l1.49,-0.44l0.64,0.29l1.33,-0.38l1.43,0.48l0.66,1.5l3.26,0.51l1.56,-0.59l2.27,0.19l0.39,-0.25l0.31,-1.1l1.65,0.38l0.43,-0.25l-0.01,-0.62l-2.26,-0.87l-3.09,-2.1l-0.64,-0.98l0.1,-1.55l-0.33,-0.37l-0.98,0.11l-0.93,1.12l-2.87,-0.63l-0.8,0.19l-8.42,-2.04l-0.92,-2.4l0.28,-1.64l-0.49,-1.28l1.6,-3.77l-0.7,-0.74l0.04,-0.56l-0.44,-0.27l-0.06,-0.61l-1.0,-1.53ZM474.89,330.28l0.28,0.24l0.75,0.17l-1.05,0.62l-0.53,-0.59l0.54,-0.44ZM473.1,330.1l-0.24,-0.03l-0.02,-0.02l0.2,-0.03l0.05,0.07ZM482.98,328.72l0.11,0.5l-0.87,0.03l-0.03,-0.17l0.79,-0.36ZM489.76,335.68l1.57,-0.65l1.38,0.68l-1.06,-0.2l-1.35,0.52l-0.55,-0.35ZM516.89,338.24l0.08,0.2l-0.05,0.1l-0.02,-0.01l0.0,-0.29ZM550.53,335.08l0.41,-0.09l-0.17,0.82l-0.12,-0.36l-0.11,-0.37ZM574.57,352.21l0.32,0.6l-0.22,0.09l-0.34,-0.24l0.25,-0.45ZM587.4,361.26l-0.15,0.27l-0.05,0.15l0.03,-0.41l0.16,-0.01ZM582.66,432.03l-0.03,0.04l0.02,-0.03l0.02,-0.01ZM595.94,436.99l0.4,0.28l0.14,0.44l-0.7,-0.42l0.16,-0.3ZM596.67,437.96l0.17,0.24l-0.2,0.4l-0.6,0.52l-0.32,-0.49l0.66,0.03l0.28,-0.7ZM596.17,440.05l0.05,1.42l-0.31,0.11l-0.08,-0.87l0.34,-0.66ZM595.8,441.61l-0.03,-0.02l0.04,-0.0l-0.01,0.02ZM601.28,436.5l-0.0,0.18l-0.07,0.04l0.01,-0.01l0.06,-0.21ZM601.6,439.23l-0.21,0.44l-0.21,-0.16l0.05,-0.3l0.37,0.02ZM602.6,440.59l-0.02,0.19l-0.36,0.35l-0.06,-0.15l0.44,-0.39ZM602.33,441.58l0.22,0.2l0.05,0.16l-0.23,-0.16l-0.03,-0.2ZM611.97,449.62l0.04,0.02l-0.04,0.01l0.01,-0.03ZM613.64,450.53l0.12,0.98l-0.1,0.01l-0.22,-0.97l0.21,-0.02ZM615.77,450.38l0.09,-0.01l-0.03,0.11l-0.01,-0.03l-0.04,-0.08ZM616.5,450.11l0.17,-0.03l-0.0,0.12l-0.01,0.01l-0.15,-0.11ZM620.7,451.92l0.0,0.12l-0.28,0.07l-0.0,-0.12l0.28,-0.07ZM662.94,449.05l1.26,0.8l0.05,0.79l0.54,0.66l0.04,0.32l-0.31,-0.09l-0.41,0.59l-0.41,-1.74l-0.76,-1.32ZM672.48,451.57l0.27,0.56l-0.74,0.85l0.19,-0.89l0.28,-0.52ZM677.96,454.27l-0.21,0.16l-0.02,-0.11l0.23,-0.04ZM650.02,390.37l0.52,0.43l0.09,0.2l-0.45,-0.05l-0.16,-0.58ZM680.59,409.03l0.0,0.01l-0.0,0.01l-0.0,-0.02ZM680.54,409.32l0.0,0.21l0.09,0.25l-0.18,-0.29l0.09,-0.18ZM678.47,399.02l0.0,-0.0l0.01,0.0l-0.01,-0.0ZM682.18,392.84l0.95,-0.04l0.73,0.46l-0.59,0.39l-0.21,0.76l-0.88,-1.57ZM630.85,349.97l0.11,-0.9l-0.31,-0.9l0.96,0.08l0.27,-0.33l0.26,0.38l-0.18,0.75l-1.1,0.92ZM634.0,348.94l0.23,-1.09l0.75,0.21l-0.06,0.86l-0.92,0.02ZM635.37,347.66l0.31,-0.27l0.31,-0.07l-0.19,0.29l-0.43,0.04ZM624.08,340.79l0.03,0.01l-0.01,-0.0l-0.02,-0.01ZM522.91,287.92l0.09,0.04l0.15,0.16l-0.08,-0.03l-0.17,-0.18ZM490.83,269.21l-0.1,0.22l-1.54,-0.13l0.29,-1.42l1.36,1.32ZM527.94,279.44l-0.04,-0.23l0.12,0.06l-0.09,0.17ZM541.95,291.93l-1.03,-0.78l-1.11,-1.72l0.33,-0.2l1.8,2.69ZM574.55,296.29l-0.01,-0.14l0.08,0.1l-0.07,0.04ZM622.27,341.79l0.57,-0.05l0.37,0.23l-0.06,0.02l-0.88,-0.2ZM621.25,347.63l0.29,-0.42l0.66,0.04l-0.11,0.11l-0.85,0.26ZM662.77,365.97l0.84,-0.66l-0.06,0.71l-0.78,-0.04ZM681.57,367.03l0.1,-0.68l0.41,0.51l0.69,-0.27l-0.11,0.28l-1.08,0.17ZM663.48,400.23l-0.06,0.03l-0.14,0.26l-0.08,-0.23l0.27,-0.06ZM653.19,413.28l0.02,-0.07l0.01,0.04l-0.03,0.03ZM663.75,417.21l0.03,-0.16l0.0,-0.05l0.04,0.06l-0.07,0.15ZM656.01,454.5l0.2,-0.08l0.01,0.01l-0.0,0.01l-0.21,0.05ZM656.44,456.3l0.17,-0.67l0.69,-0.27l0.05,0.1l-0.91,0.84ZM672.11,466.42l-0.48,-0.52l-0.04,-0.18l0.99,0.26l0.03,0.26l-0.5,0.19ZM626.92,462.69l-0.05,0.04l-0.35,0.13l0.03,-0.16l0.37,-0.02ZM618.61,456.15l-0.06,0.22l-0.83,-0.15l0.45,-0.09l0.44,0.02ZM539.29,319.83l-0.1,-0.03l0.05,-0.09l0.05,0.11l0.0,0.0ZM537.02,321.59l0.12,0.78l-0.07,0.39l-0.29,-0.51l0.24,-0.67ZM685.15,391.57l0.47,0.18l0.41,-0.3l0.22,0.37l1.2,0.21l-1.42,0.29l-0.89,-0.74ZM683.06,459.74l0.95,-0.38l0.19,-0.69l-0.69,-0.33l0.15,-0.41l0.86,0.39l1.28,-0.46l0.26,-0.4l0.66,0.36l-0.47,0.62l0.38,1.23l-0.58,0.69l-2.73,-0.08l-0.27,-0.54ZM683.43,471.03l0.28,-0.59l0.59,0.1l0.69,1.09l0.6,0.06l0.22,0.47l0.7,-0.01l0.58,0.61l-0.16,0.39l-2.13,-0.41l-0.78,-0.57l-0.58,-1.14ZM680.85,436.57l0.47,-0.31l1.46,3.68l-1.98,-3.03l0.04,-0.33ZM683.04,440.33l1.1,0.65l0.41,0.66l-0.53,-0.25l-0.98,-1.06ZM683.89,436.94l0.21,0.16l-0.01,0.29l-0.01,-0.01l-0.19,-0.44ZM681.52,458.42l0.32,-0.72l0.69,-0.02l-0.6,0.62l-0.41,0.12ZM681.24,433.57l-0.29,-1.01l0.41,-0.1l0.22,0.23l-0.35,0.88ZM677.29,433.02l0.03,-0.85l0.54,0.28l-0.04,0.5l0.66,0.32l-0.37,0.59l0.38,0.45l-0.62,-0.42l-0.88,0.54l-0.63,-0.2l-0.22,-0.27l0.18,-0.53l0.98,0.49l-0.01,-0.9ZM678.64,434.4l0.26,0.02l0.11,0.08l-0.11,-0.06l-0.26,-0.04ZM679.82,434.77l0.32,-0.34l0.23,0.91l-0.36,-0.42l-0.19,-0.15ZM677.96,474.7l0.38,-0.71l0.73,0.08l0.13,0.28l-0.56,0.47l-0.68,-0.12ZM674.37,366.72l0.0,-0.0l0.0,0.01l-0.01,-0.0ZM674.51,366.15l-0.12,-0.36l0.97,-1.19l-0.06,-0.72l0.92,-0.55l-1.2,2.63l-0.51,0.19ZM672.23,425.21l0.0,0.0l-0.0,0.01l-0.0,-0.01ZM672.34,425.47l0.06,0.1l-0.03,-0.05l-0.02,-0.05ZM672.48,425.69l0.47,0.19l0.17,0.69l-0.4,-0.49l-0.25,-0.39ZM665.91,422.18l0.01,-0.79l0.82,-1.94l0.42,0.21l0.54,-0.31l0.04,-0.39l0.41,0.37l-1.19,1.04l0.24,0.64l-0.74,0.27l-0.09,0.62l-0.45,0.28ZM665.53,363.97l0.62,-1.05l0.09,0.46l0.55,0.27l-1.26,0.31ZM666.87,363.64l0.66,-0.69l0.48,0.21l-0.28,0.26l-0.87,0.22ZM664.04,502.78l0.64,-0.0l0.65,0.75l1.14,0.57l0.12,0.96l-0.61,1.68l0.07,0.58l-0.8,0.31l-0.8,0.86l-0.19,0.67l-1.13,0.8l-0.48,-0.7l0.33,-6.17l1.05,-0.31ZM662.27,358.38l1.11,0.82l0.23,0.27l-1.19,0.41l-0.15,-1.5ZM639.48,351.75l0.24,-0.63l1.19,-0.11l0.22,0.76l-1.65,-0.02ZM626.89,465.68l0.24,0.01l-0.19,0.0l-0.05,-0.01ZM627.92,465.72l2.0,0.07l2.76,0.84l0.68,0.41l0.97,1.31l0.69,-0.06l0.94,1.07l-1.05,0.85l-1.68,0.11l-0.77,-0.35l-0.48,0.24l-1.03,-0.81l-0.22,-0.97l-0.56,-0.72l0.68,-0.55l-0.2,-0.75l-0.51,-0.21l-0.81,0.28l-1.42,-0.76ZM625.88,343.48l0.72,0.13l-0.17,0.02l-0.55,-0.16ZM624.15,326.73l0.98,-1.23l0.48,-0.09l0.38,0.33l-1.04,0.31l-0.41,0.62l-0.4,0.06ZM619.93,326.41l0.75,-1.58l0.99,0.23l0.78,-0.44l-0.08,-0.26l0.21,0.17l-0.66,1.38l-0.09,0.97l-1.9,-0.45ZM610.78,452.57l0.01,-0.01l0.0,0.02l-0.02,-0.01ZM597.11,474.23l0.51,-0.32l0.72,0.34l0.21,0.46l-0.8,-0.03l-0.64,-0.45ZM598.89,474.9l2.06,-0.45l1.01,0.13l0.33,0.51l-0.8,0.22l-2.61,-0.41ZM599.04,437.65l0.38,-0.55l0.19,-0.09l-0.03,0.69l-0.54,-0.05ZM599.87,438.39l0.12,0.08l0.02,0.12l-0.07,-0.09l-0.06,-0.1ZM599.82,439.43l0.16,1.13l-0.14,0.22l-0.37,-1.33l0.35,-0.02ZM585.61,305.0l0.49,-0.07l0.4,-0.5l-0.14,-2.55l0.52,-0.43l2.67,0.65l0.91,-0.13l-0.02,1.53l-1.36,0.55l-1.7,1.42l-0.5,0.98l-0.28,0.03l-0.2,-0.69l-0.77,-0.8ZM580.19,367.11l0.33,-1.37l0.49,0.37l-0.3,0.82l0.31,0.74l1.17,-0.11l2.88,1.01l0.66,-0.53l1.83,0.03l0.71,2.5l0.42,0.4l-0.04,0.79l-7.4,1.27l-1.1,-0.39l-2.06,-2.68l-0.25,-1.55l0.43,-0.5l1.6,-0.02l0.32,-0.8ZM579.32,359.58l1.96,2.07l-0.27,1.41l-0.22,-0.53l0.31,-0.6l-1.14,-0.8l-0.64,-1.55ZM575.3,680.75l0.71,-0.09l0.76,-0.89l1.39,-0.92l0.34,0.08l-0.66,2.13l-2.24,0.45l-0.3,-0.76ZM578.38,289.95l0.39,0.85l-0.26,1.18l-1.22,-0.22l-0.25,-0.33l0.39,-1.2l0.96,-0.29ZM575.01,293.4l0.88,-0.93l0.29,0.29l-0.34,1.92l-0.83,-1.28ZM575.89,294.88l0.04,0.13l-0.04,-0.01l-0.01,-0.11ZM576.25,295.51l0.29,0.14l0.49,-0.38l-0.04,-0.63l0.52,-1.05l0.6,0.68l-1.02,0.9l0.3,1.54l-1.02,-0.28l-0.11,-0.92ZM577.71,297.2l0.02,0.04l-0.01,0.07l-0.02,-0.0l0.0,-0.1ZM570.15,460.77l0.38,-0.61l-0.43,-0.34l-0.62,0.04l0.31,-0.59l1.82,0.42l0.62,-0.18l3.09,1.4l0.74,0.76l-0.23,0.36l0.17,0.58l0.75,0.13l-0.55,0.43l0.0,0.91l-0.96,-0.13l-0.54,-0.41l-0.77,0.13l-2.65,-2.31l-1.12,-0.6ZM576.82,357.19l-1.38,0.21l-0.52,-0.78l0.33,-0.71l0.51,0.07l0.41,0.98l0.65,0.23ZM560.26,382.27l0.11,-0.65l-1.23,-3.19l0.23,-2.62l1.91,-6.94l1.01,-2.27l2.5,-1.76l0.52,0.49l1.28,-0.04l1.21,-1.15l2.26,0.23l0.93,0.51l2.75,0.49l1.19,1.62l-0.56,4.02l0.68,1.8l0.66,0.84l0.13,1.72l0.65,2.21l-0.39,2.68l-0.44,1.07l-0.71,0.56l-0.35,1.08l-0.91,0.18l-0.45,1.05l-0.76,0.24l-1.47,1.26l-2.69,0.15l-0.82,0.68l-1.27,0.08l-0.77,0.51l-2.57,0.08l-0.66,-0.58l-1.19,-2.69l-0.61,-0.51l-0.18,-1.16ZM571.3,358.81l-0.19,-1.46l0.43,-1.64l0.63,0.35l1.03,-0.0l0.86,2.03l1.45,1.5l-0.81,0.96l0.08,0.44l0.56,0.32l-0.21,0.34l0.32,0.47l-0.51,0.17l-0.44,-0.99l-2.98,-1.7l-0.23,-0.79ZM574.04,604.16l0.73,-2.32l-0.16,-1.61l0.69,-1.52l0.45,2.41l-0.07,1.86l-0.87,0.26l-0.77,0.92ZM570.75,628.39l0.13,-0.06l0.12,-0.02l-0.25,0.08ZM564.25,610.37l-0.85,-0.98l2.24,-4.31l1.24,-1.58l-0.61,1.2l0.3,0.88l-2.31,4.8ZM567.46,604.71l1.4,-1.13l0.64,-4.24l-0.08,-1.98l0.95,0.11l0.62,1.43l1.16,0.56l-0.62,0.83l-0.22,2.21l-0.47,0.0l-0.39,0.59l-1.2,4.58l-1.11,2.0l-1.02,-0.49l1.41,-3.88l-0.43,-0.5l-0.62,-0.09ZM572.72,599.43l-0.23,-0.07l0.17,-0.06l0.06,0.13ZM451.74,52.32l0.69,-2.07l0.87,-1.1l0.71,0.31l1.18,-0.2l0.09,-0.56l-0.42,-0.79l0.2,-0.57l1.49,-0.25l0.44,-0.98l1.27,-0.56l1.13,0.37l0.59,-0.57l1.03,1.9l1.14,0.89l0.97,-2.42l-0.13,-0.8l0.36,0.02l0.47,-0.74l-0.15,-2.05l1.2,-1.41l1.7,-0.66l0.72,-0.65l0.67,0.63l1.12,-0.29l0.59,0.26l0.73,1.43l-0.5,1.08l0.12,0.63l2.5,2.18l0.46,0.04l0.18,-0.43l-0.18,-0.75l-0.41,-0.63l-1.05,-0.65l1.06,-0.68l-0.66,-1.47l1.06,-0.2l1.69,0.29l0.71,0.7l2.7,4.64l0.59,-0.18l0.12,-0.51l-1.58,-3.63l1.35,0.04l0.83,2.15l0.69,0.92l0.49,0.25l0.47,-0.07l0.05,-0.34l0.69,0.11l0.13,-0.43l-1.0,-3.09l-8.1,-3.86l-0.59,-1.77l0.89,-0.61l0.85,0.23l2.74,-0.54l0.65,-1.04l0.68,-0.19l0.14,-0.81l-0.52,-0.77l0.23,-0.71l-0.46,-0.49l0.04,-1.2l-0.21,-0.46l-1.37,-0.5l0.33,-0.48l3.71,-0.62l0.13,0.41l-1.0,0.36l0.04,0.88l1.63,0.69l0.67,1.21l0.65,0.08l0.39,-0.44l1.77,0.48l0.96,1.15l0.51,2.15l1.36,1.64l0.38,1.19l-0.14,0.89l-0.47,0.55l0.41,0.55l4.05,0.0l1.0,0.66l0.49,-0.54l-0.35,-1.06l-0.84,-0.9l-2.02,0.14l-1.84,-3.62l-0.12,-1.14l1.22,0.99l0.75,0.05l1.17,1.49l2.41,1.91l4.1,2.57l0.35,0.62l0.86,-0.19l1.45,0.79l2.48,3.92l1.54,0.16l0.34,-0.63l-2.22,-3.17l-0.22,-0.8l-0.88,-0.55l0.23,-0.64l-0.18,-0.59l-4.63,-1.93l-0.16,-0.54l0.33,-0.73l-0.41,-0.5l-1.54,0.07l-6.03,-5.79l0.48,-3.29l3.63,0.0l0.43,-0.38l-0.14,-0.58l-1.68,-0.41l-1.62,-1.6l-0.39,-1.53l0.72,-0.58l2.38,0.96l2.28,2.63l1.59,-0.26l0.26,-0.49l-0.18,-0.58l-2.24,-3.2l-0.35,-1.25l-1.46,-1.54l-0.34,-1.23l4.14,0.81l0.76,1.61l0.19,1.42l1.43,1.1l0.51,-0.09l0.22,-0.48l-0.81,-1.5l2.82,1.01l2.43,-0.47l0.41,-0.66l-0.27,-0.5l-5.43,-1.64l-0.3,-1.04l0.71,-0.14l0.3,-0.65l-0.29,-0.34l-2.51,-0.68l-0.23,-0.59l0.79,-1.16l2.42,-1.2l1.35,2.63l0.78,-0.03l0.59,-2.17l0.39,0.43l0.27,2.33l0.8,-0.12l1.24,0.61l0.34,-0.45l-0.34,-0.48l0.53,-0.41l-0.43,-1.1l0.49,-0.48l2.57,1.25l0.9,1.59l0.13,0.98l0.81,0.54l1.15,2.21l2.82,2.06l-0.64,1.76l-0.16,2.01l0.28,0.62l0.64,0.14l1.54,-4.56l0.82,-0.53l0.09,-0.91l-3.57,-2.25l-0.47,-1.1l0.86,-0.46l0.21,-0.66l-0.44,-0.52l-1.29,0.2l-1.4,-2.41l-3.04,-2.83l0.09,-0.45l0.51,0.21l3.22,-1.24l0.4,-0.6l2.24,0.0l0.84,0.42l0.87,-0.67l2.99,0.6l2.12,3.85l5.6,4.08l0.5,-0.02l0.35,-1.06l-0.25,-0.5l-2.6,-1.39l-1.16,-1.46l-0.66,-1.55l-0.82,-0.55l0.93,-2.75l0.94,-0.86l0.21,-0.66l-0.31,-0.32l0.66,-0.73l0.33,0.42l0.58,-0.12l0.55,-0.94l1.89,-0.25l-0.21,2.37l1.45,2.23l3.17,1.29l0.44,-0.09l0.08,-0.44l-0.32,-0.67l-2.17,-2.21l-0.72,-0.33l1.07,-2.17l0.76,-0.32l-0.02,-0.64l3.36,-0.89l0.25,0.77l-0.16,0.79l1.08,0.42l-0.26,1.14l0.82,0.44l1.53,-1.47l0.36,1.0l0.44,0.19l1.01,-0.24l0.54,-0.91l0.9,-0.0l0.12,1.19l0.42,0.61l0.63,-0.02l0.36,-0.73l1.05,-0.69l1.62,0.66l0.58,-0.43l0.83,0.39l0.41,-0.76l0.99,-0.16l0.25,0.88l-1.1,2.19l-0.01,0.58l-0.88,0.78l-0.27,0.81l-3.71,3.57l-0.63,1.19l0.04,0.97l0.69,0.28l4.24,-1.92l1.08,-2.01l0.53,-0.42l0.63,0.14l0.48,-0.34l-0.23,-1.32l2.08,-3.05l0.9,-0.26l0.01,0.92l0.38,0.63l0.51,0.26l1.13,-0.08l0.28,-0.66l-0.86,-0.58l0.4,-1.87l-0.55,-0.45l0.07,-0.42l0.32,-0.16l-0.04,0.76l0.89,0.38l0.38,1.03l1.55,1.42l0.62,-0.25l-0.07,-0.8l0.49,-1.52l2.18,-0.33l0.41,1.66l-1.15,1.1l-0.11,0.47l1.02,0.15l0.62,0.95l1.31,0.44l-0.36,0.73l0.51,0.63l1.45,0.06l0.29,3.25l-0.55,0.42l-0.1,0.83l0.64,0.3l1.14,-0.84l0.21,-1.24l0.48,0.03l0.3,-0.55l-0.29,-0.57l0.83,-0.34l0.18,0.89l0.7,0.19l0.38,-0.7l2.02,-0.25l1.13,0.69l1.62,2.11l0.87,2.8l-0.16,1.77l-2.15,2.42l0.02,0.55l0.73,0.42l-0.64,2.61l-0.85,0.33l0.11,1.15l-3.8,6.68l-1.76,-0.44l-0.22,0.57l1.28,1.46l-0.55,1.01l-1.28,0.23l-0.76,-0.54l-0.72,0.36l-1.27,-0.01l-0.3,0.67l0.18,0.31l-2.31,1.76l0.2,0.86l1.88,-0.26l-0.64,0.83l-0.79,-0.44l-0.64,1.01l-5.84,2.51l-1.85,1.28l-5.33,-3.26l-0.5,0.06l-0.04,0.5l0.48,0.66l4.34,2.87l-1.55,0.25l-0.34,0.49l0.3,0.49l1.32,0.48l5.23,-2.85l2.62,0.55l-4.8,5.09l-1.88,2.75l-1.32,1.21l-1.66,-0.02l-0.39,0.31l-0.02,0.82l0.35,0.28l-0.42,0.58l-1.26,0.96l-1.26,0.35l0.08,0.9l0.72,0.36l1.09,-0.38l-0.72,1.2l0.2,0.69l0.44,-0.06l1.45,-1.28l0.41,-1.48l6.21,-5.33l2.03,-2.24l4.49,-3.81l0.72,-1.07l4.02,-2.71l0.76,1.57l-0.35,2.33l-1.26,2.03l-0.71,2.08l-2.19,1.91l-1.19,3.4l-0.3,2.47l-1.61,3.14l-1.55,0.46l0.34,2.05l-0.77,0.57l-0.36,1.83l-0.98,1.24l-1.43,3.84l-0.67,0.72l0.32,1.06l-0.68,1.93l-0.1,3.45l-0.92,1.26l-2.31,0.46l0.03,-1.44l-0.89,-1.49l-2.64,-2.17l-0.38,-0.08l-0.38,0.36l0.14,0.81l1.88,1.85l0.82,1.29l-0.16,0.8l0.3,1.23l2.67,1.65l-0.45,1.72l-2.6,0.08l-1.58,0.99l-1.44,2.04l-0.7,0.21l-1.47,-1.63l-0.86,-0.0l-0.83,-0.69l-0.85,0.3l0.07,0.86l2.62,1.9l-0.48,0.51l-1.19,0.12l-0.35,0.47l0.77,1.03l0.96,-0.01l3.07,-1.02l2.02,-1.9l1.19,-0.7l0.66,0.72l0.23,0.78l-0.54,0.66l-0.02,1.17l-2.68,1.86l-0.36,1.03l0.33,1.04l0.6,0.04l0.84,-0.84l0.83,0.22l-0.4,2.42l-1.3,1.67l-2.93,2.44l-0.9,-0.33l-0.94,0.36l-1.35,-0.56l-0.77,-1.75l0.47,-0.44l-0.2,-0.64l-2.66,-0.1l-1.42,0.59l0.2,-0.41l-0.47,-0.57l-2.3,-0.44l-0.42,0.2l-0.3,0.53l-2.21,1.01l0.32,1.26l0.78,0.8l1.63,-0.58l3.73,0.62l0.69,-0.13l0.33,0.96l1.12,1.3l0.21,1.43l0.41,0.69l-0.5,1.48l-1.61,0.49l-0.93,-1.22l-0.33,-0.19l-0.59,0.3l0.45,2.43l-0.12,0.34l-0.89,0.37l-0.66,-0.18l-1.24,0.25l-1.1,-0.74l-0.31,-0.62l-0.62,0.0l-0.44,1.08l1.15,1.79l-0.21,0.79l-2.15,-0.19l-0.9,-0.82l-0.44,0.2l-0.53,-0.65l-0.64,0.63l-1.33,-1.41l-4.05,-0.14l-0.46,-0.58l-0.51,0.03l-0.28,1.22l0.64,0.86l-0.3,0.42l-0.86,-0.02l-0.22,0.67l1.3,2.66l-3.18,-0.69l-0.6,0.26l-0.39,0.65l0.22,0.47l1.21,0.71l1.1,-0.14l1.12,0.66l-0.49,0.59l0.08,0.44l0.44,0.09l3.25,-1.28l1.45,0.26l1.49,-0.62l1.32,0.83l4.41,-0.55l1.2,-0.53l1.11,0.11l-1.26,0.66l-0.1,0.75l0.31,0.47l0.67,0.07l0.02,0.42l0.59,0.44l0.77,1.4l-1.46,0.01l-1.23,0.59l-2.09,-0.73l-1.12,-0.06l-0.58,-0.48l-0.38,-1.44l-1.52,-0.97l-4.31,1.01l-1.15,-0.07l-4.77,0.77l-0.62,0.97l0.35,0.65l0.46,0.1l0.7,-0.57l6.41,-0.13l2.72,0.21l0.19,0.48l-2.7,0.07l-2.24,0.88l-1.48,1.32l-0.61,-0.12l-0.72,-0.81l-1.56,-0.2l-4.06,0.92l-0.19,0.66l0.5,0.31l4.62,-0.44l0.75,0.49l-0.94,1.6l-1.1,4.15l-0.03,0.51l0.54,0.79l0.8,-0.47l0.39,-2.12l1.23,-2.94l4.43,-2.33l4.73,0.72l-0.13,0.73l-2.01,0.85l-0.9,1.13l-0.08,0.88l0.29,0.32l0.63,-0.12l0.61,-0.84l1.87,-0.31l0.54,-0.49l2.04,-0.04l1.87,0.43l0.48,0.77l-0.26,0.33l0.16,0.57l0.54,0.13l-0.16,0.7l0.43,0.62l-0.38,0.68l0.23,1.43l1.14,0.67l-0.57,0.26l-0.76,1.35l-0.89,0.07l-0.87,0.75l-5.59,0.06l-1.11,0.86l0.08,0.94l2.26,-0.43l0.52,0.16l0.48,0.94l5.31,1.54l0.39,0.75l-0.13,0.36l-1.23,0.14l-0.8,2.86l-2.93,-0.69l-0.95,0.47l-1.44,-0.34l-1.6,1.33l0.25,1.1l1.78,0.65l1.58,0.05l0.82,0.41l2.64,-0.49l0.16,0.51l-0.99,2.88l-1.15,-0.73l-0.79,-0.01l-1.1,0.94l-0.29,1.21l-0.88,0.38l-0.63,0.78l-0.6,-0.06l-0.88,-0.8l-3.65,0.65l-1.84,-1.19l-0.57,0.14l-0.24,0.43l-0.02,0.42l0.34,0.23l-0.73,0.72l-0.18,1.02l0.75,1.01l0.95,0.24l1.04,0.92l0.27,1.05l-0.42,0.63l0.39,0.9l-0.39,0.57l0.16,0.44l1.02,0.12l0.38,0.87l0.56,0.18l-1.13,1.17l0.25,1.39l-0.2,0.81l-1.26,1.22l0.24,1.16l-1.23,0.63l-0.77,1.11l0.11,-1.32l-0.64,-0.26l-0.6,0.36l-1.19,2.16l-2.82,-0.37l-1.05,0.38l-0.61,0.81l-2.98,-0.37l-1.27,-0.5l-1.63,-1.58l-1.3,-0.54l-0.68,-1.26l-1.01,-0.6l-0.31,-1.56l-1.32,-1.07l-0.43,-1.42l-0.29,-0.22l-0.64,0.24l0.24,2.06l0.71,0.66l0.76,1.53l-0.06,2.42l1.63,1.42l1.5,-0.02l0.09,0.52l-3.2,1.07l-1.6,-0.46l-0.46,0.18l-0.12,0.9l1.53,0.94l0.27,1.65l0.43,0.54l1.08,-0.09l3.07,-3.13l5.01,1.29l-1.18,2.84l0.37,0.61l0.48,0.01l1.7,-3.12l1.38,-1.38l1.27,-0.05l1.22,0.52l0.91,0.89l0.32,1.24l-1.49,3.21l-0.19,0.79l0.27,0.89l1.89,-0.04l0.82,-0.37l-0.27,1.92l0.35,0.4l1.41,0.19l0.44,-0.3l-0.08,-1.12l0.68,-0.6l0.01,-1.33l0.73,-0.62l-0.09,-0.72l1.05,-0.56l1.16,1.38l0.04,0.8l0.39,0.52l-0.13,0.77l0.99,0.85l-0.07,2.9l0.31,0.97l-0.24,0.38l-1.04,0.33l-0.69,1.97l0.33,0.71l-0.92,0.7l-0.21,0.86l-0.61,-0.43l0.05,-1.71l-0.45,-0.35l-1.51,0.15l-0.69,3.59l-1.14,0.94l-0.29,2.39l-0.75,-0.32l-0.7,0.12l-2.66,2.3l-0.96,-0.18l-1.13,1.23l-0.98,0.15l-0.3,0.82l-1.1,-0.08l-0.18,-0.54l-0.48,-0.19l1.24,-4.05l-0.16,-1.17l-1.33,-1.41l-1.21,-0.5l-0.2,-1.19l-0.72,-0.08l-0.51,1.42l-0.87,0.76l-2.11,-0.3l-0.59,-0.37l0.35,-1.3l-0.28,-0.78l0.99,-1.03l0.15,-1.15l-0.47,-0.25l-2.08,1.67l-0.32,-0.04l-1.84,-3.27l-0.95,-0.99l-0.75,0.15l0.03,0.65l1.23,1.88l0.4,1.57l0.88,1.07l1.52,0.9l-0.52,1.16l0.66,1.67l-0.1,0.44l-0.44,0.49l-2.56,0.43l-1.64,-1.42l0.12,-0.88l-0.45,-2.08l-1.7,-2.06l-0.03,-2.0l-0.59,-0.34l-0.9,1.19l-0.1,0.63l1.8,3.15l0.5,1.84l-0.26,0.84l0.29,0.94l-2.22,-0.38l-0.42,-0.91l-0.57,-0.29l-1.04,-1.39l-0.45,-2.01l-1.12,-0.83l-0.73,0.15l-0.19,0.33l0.17,0.66l0.59,0.48l-0.19,1.8l0.47,1.2l-0.07,0.66l-1.88,0.31l-0.76,-0.7l-0.82,-2.14l-0.74,-0.65l-0.59,0.24l-0.18,1.75l0.76,2.51l3.36,2.1l-4.05,0.78l-0.17,-0.53l-0.43,-0.17l-0.86,0.21l-1.64,-0.98l-3.61,-0.7l-0.25,-1.66l0.81,-0.57l0.3,-0.93l-0.3,-0.71l-1.67,-1.83l-0.79,-0.43l-0.46,0.74l1.83,2.29l-1.82,1.26l-0.29,2.61l-1.72,-0.52l0.05,-1.03l-0.5,-0.56l-1.19,-0.11l0.11,-1.0l-0.59,-0.78l0.12,-1.27l-0.75,-0.92l-0.57,0.19l-0.14,0.44l-0.02,1.75l0.58,0.84l-0.25,1.32l0.65,0.8l-0.75,1.5l-1.01,-1.89l-0.62,0.25l-0.18,0.98l-2.32,-0.55l0.33,-0.54l-0.25,-0.93l0.28,-1.21l-0.99,-2.63l0.2,-0.93l-0.41,-1.49l0.36,-1.33l-0.23,-1.36l-0.79,0.13l-0.92,2.26l-0.1,0.53l0.67,2.07l-0.79,0.78l-0.49,2.29l0.22,1.08l-0.57,0.84l-0.11,-0.66l-0.58,-0.23l-0.42,0.57l-1.18,-1.48l0.11,-1.05l-0.38,-0.97l-0.57,-0.07l-0.37,0.33l0.17,-1.09l1.01,-1.13l-0.1,-1.25l0.32,-0.56l-0.45,-0.66l-0.35,-2.19l2.79,-2.17l0.25,-0.78l1.25,-0.68l1.04,-1.49l0.61,-0.15l0.32,-0.85l-0.2,-0.17l0.75,-0.3l0.28,0.5l0.43,0.05l1.28,-0.65l0.92,0.02l0.48,0.85l1.2,-0.21l0.63,-0.4l-0.14,-0.62l-0.41,-0.19l0.25,-0.54l1.25,-0.33l0.81,1.11l0.73,0.3l0.53,-0.34l-0.18,-0.78l0.93,-0.14l0.2,-0.7l-0.84,-0.43l-0.64,0.28l-1.51,-0.68l1.15,-0.62l0.08,-0.67l-0.57,-0.43l-1.12,-0.06l0.7,-0.83l0.75,0.04l0.55,-0.36l0.01,-0.73l-1.82,-0.26l-1.32,0.87l-1.48,-0.35l-0.47,-1.74l0.7,-1.17l-0.37,-1.65l-0.66,-0.37l-0.04,-0.64l-2.09,-1.62l0.29,-1.71l-0.14,-1.8l0.3,-0.38l4.54,-2.14l1.61,0.28l0.92,0.79l1.21,0.46l1.2,0.95l1.33,1.91l1.61,5.77l-0.33,1.08l0.42,0.53l1.03,-0.76l0.8,1.14l2.38,0.43l1.44,1.48l1.65,0.4l0.48,-0.5l-0.84,-2.1l1.03,0.34l1.46,-0.41l3.23,1.12l0.52,-0.45l-0.4,-1.35l-1.63,-0.75l-0.14,-0.42l0.98,-0.16l1.27,-1.23l1.88,-4.33l1.83,-6.33l0.09,-1.34l-0.47,-1.28l0.71,-0.25l0.53,-1.09l-0.41,-0.77l-0.98,0.14l-0.92,0.61l-0.61,1.05l-0.12,1.19l0.37,1.62l-0.9,1.02l-0.23,1.38l-0.6,1.09l-0.27,1.99l-0.61,1.04l-0.37,1.56l-1.97,2.55l-2.33,-0.54l-2.31,0.4l-0.26,-0.33l-0.08,-0.66l1.0,-1.0l0.92,-1.92l0.14,-1.11l-0.61,-0.9l-0.49,0.09l-0.15,1.91l-1.62,1.74l-1.72,-1.12l0.15,-0.94l-0.35,-0.58l0.6,-0.59l0.05,-0.81l0.62,-0.08l0.44,-0.46l1.34,-2.16l1.84,0.19l0.09,-0.86l-1.56,-0.74l-3.62,0.66l-0.97,0.87l-0.23,-0.84l-0.7,-0.2l2.79,-2.91l0.61,0.43l1.16,0.11l1.01,-1.06l0.9,0.03l0.58,-0.48l-0.36,-0.64l-1.58,0.15l-1.19,0.65l-1.0,-0.8l0.37,-1.3l0.65,-0.03l0.95,-0.82l2.33,0.9l1.11,-0.92l-0.44,-0.55l-0.9,0.06l-1.19,-0.63l-1.72,-0.03l-0.72,0.5l0.57,-2.56l0.98,-0.44l0.28,-0.54l-0.23,-0.79l-0.52,-0.12l-0.5,0.68l-0.25,-0.33l0.2,-3.37l0.68,-2.02l-0.18,-0.67l-0.66,0.0l-0.89,2.18l-0.59,2.68l0.15,1.9l-0.32,1.44l-1.81,4.32l-3.63,1.45l0.11,-1.87l0.67,-0.4l0.83,-1.75l0.41,-2.83l-0.04,-1.03l-0.37,-0.4l-0.67,0.41l-0.04,0.9l-0.73,1.09l-0.08,1.26l-0.67,1.11l-1.08,-0.3l-0.42,0.23l-1.1,2.26l-3.45,-0.05l0.31,-0.81l1.65,-0.52l0.28,-0.39l-1.13,-0.98l-1.15,0.28l-0.09,-5.02l1.57,-2.69l1.32,-0.03l0.39,-0.42l-0.33,-1.08l-1.04,0.08l0.62,-1.47l0.17,-1.64l1.42,-2.27l0.48,0.12l2.35,-0.99l1.53,-0.01l2.37,-2.21l0.85,-0.16l1.72,1.18l4.75,0.51l0.97,1.03l1.21,0.5l0.89,1.13l1.99,0.73l1.18,2.03l1.53,1.04l0.79,-0.62l0.15,-0.65l-1.92,-2.43l0.37,-0.4l1.19,-0.01l0.16,-0.57l-0.27,-0.62l-0.92,-0.38l-1.93,0.76l-1.58,-1.52l-0.61,-0.09l-0.1,-0.39l0.91,-0.22l2.98,0.45l1.97,-1.17l0.79,-0.05l0.09,0.45l0.67,0.02l0.5,-1.52l-0.55,-0.91l0.17,-1.61l0.84,-1.58l-0.1,-0.59l-0.67,-0.51l-1.85,1.66l-0.92,2.69l-1.66,0.83l-2.17,-1.17l-3.6,0.4l-1.43,-0.61l-1.58,0.21l-1.1,-1.32l-1.26,-0.6l-0.08,-0.74l1.05,-1.47l1.34,0.33l1.16,2.03l2.71,0.4l0.56,-0.33l0.25,-0.68l-0.33,-0.64l-0.61,0.03l-0.26,0.34l-0.56,-0.39l-0.26,-0.71l-1.22,-0.78l-0.23,-0.41l0.4,-1.06l-0.47,-1.01l-0.67,0.16l-0.43,0.84l-0.35,-0.07l-1.21,-5.65l-2.04,-1.92l-0.91,-2.61l-0.03,-0.89l-1.66,-1.68l-1.51,-0.72l-1.23,0.27l-2.7,-1.32l-0.09,-1.12l0.47,-0.6l-0.48,-1.66l0.37,-1.78l1.97,0.75l1.45,0.08l1.1,0.9l0.6,-0.29l0.24,-0.72l-1.65,-1.5l-4.23,-0.93l-0.35,-0.46l-0.61,-2.66l0.47,-4.47l2.35,-0.75l2.91,1.75l3.14,-0.45l2.65,0.1l1.03,0.35l3.45,4.54l4.84,5.13l1.18,2.97l0.03,0.75l0.56,0.75l0.96,0.24l0.19,1.07l-0.32,0.05l-0.22,0.65l0.89,0.78l0.73,-0.24l0.62,-1.11l3.9,1.55l0.52,-0.5l-0.27,-0.54l2.17,-1.37l0.92,-0.09l0.79,-1.85l-0.48,-0.53l-3.05,0.8l-0.37,0.49l-1.68,0.64l-2.12,-1.46l-0.81,0.08l0.02,-0.58l-0.53,-0.6l0.04,-1.36l-0.62,-2.0l0.96,-0.54l0.09,-0.76l-0.49,-0.5l-2.52,-0.73l-0.85,-0.65l-4.01,-5.71l-0.43,-1.05l-0.86,-0.81l5.09,-2.31l1.74,-0.36l5.59,-2.27l0.43,-0.66l-0.13,-0.55l0.89,-0.45l2.37,-0.55l0.44,-0.45l1.58,-0.11l1.62,-0.76l2.99,-0.42l0.23,-1.01l-0.41,-0.5l-3.52,-0.08l-4.6,0.68l1.16,-0.88l0.71,-1.03l1.4,-0.6l0.84,-0.99l1.04,-0.52l0.29,-0.62l0.83,-0.21l0.63,-0.71l2.75,-1.12l4.08,-0.95l0.42,-0.47l-0.0,-1.14l-0.91,-0.71l-1.88,0.69l-1.65,-0.24l-2.68,0.32l-0.66,0.63l-2.82,1.14l-0.11,-0.19l0.15,-1.32l-0.46,-1.97l1.55,-3.08l0.19,-1.3l-0.32,-0.5l1.14,-0.81l0.99,-2.7l0.8,-1.14l0.91,-0.61l0.61,-1.09l0.66,-0.3l1.11,-1.9l-0.06,-0.53l-0.48,-0.43l-0.63,0.05l-5.09,5.04l-1.84,3.71l0.04,2.02l-0.39,0.13l-2.57,-2.19l-0.49,-0.02l-0.14,0.47l0.33,0.8l1.88,2.04l-0.64,0.51l-0.25,1.54l0.06,0.71l0.78,0.53l-0.04,0.27l-0.2,0.65l-0.64,0.52l-0.02,1.11l-0.5,1.46l-1.21,0.92l-0.55,1.08l-1.23,0.78l-2.11,2.37l-1.33,1.04l-1.55,0.35l-3.58,2.05l-2.23,0.67l-0.65,-0.11l0.06,-2.17l0.77,-0.31l0.27,-0.76l2.99,-1.51l0.87,-1.09l0.66,-1.95l-0.54,-0.45l-1.04,-0.18l-2.27,2.07l-0.25,0.82l-2.99,1.38l-0.58,-0.01l-0.11,-0.89l0.76,-0.46l0.95,-1.9l-0.9,-0.83l-0.52,0.12l-1.54,2.61l-0.89,-0.11l0.15,1.78l0.62,2.07l-0.34,2.24l-2.15,0.9l-1.2,-0.45l-1.25,0.08l-0.92,0.72l-2.09,-0.77l-0.76,0.11l1.15,-1.99l-0.12,-0.47l-0.48,-0.02l-0.98,0.69l-1.13,1.77l-2.57,-1.54l0.71,-2.8l3.06,-6.53l0.63,-0.86l1.13,-0.52l0.72,-0.77l4.09,-1.21l0.43,-0.47l5.84,-2.19l1.42,-0.97l0.37,-0.58l-0.12,-0.6l-0.48,-0.14l-7.58,3.06l-4.34,1.05l-0.43,0.42l-0.62,-0.07l-1.71,0.85l-1.49,1.33l-1.05,1.9l-1.09,2.68l-1.81,2.83l-0.77,2.67l-1.52,-0.28l-0.8,-0.73l-1.03,-0.23l-2.28,-2.31l-1.42,-0.85l-1.98,-2.17l-0.26,-0.87l0.64,-0.61l0.91,-0.11l0.88,-0.71l1.83,-0.49l2.43,-0.05l1.09,0.46l2.12,-0.29l0.58,-0.47l1.5,-0.1l1.16,-0.81l0.66,-1.08l1.94,-0.42l-0.13,-1.51l2.72,-2.98l1.56,-0.98l0.47,-0.95l-0.22,-0.57l-1.33,-0.38l-1.3,0.38l-2.72,1.87l-1.35,1.52l-0.41,1.09l-0.82,0.68l-1.81,0.49l-1.83,1.16l-2.07,-0.21l-8.45,1.96l-1.29,-1.35l-0.66,-2.33l0.14,-0.8l1.09,-1.27l0.58,-0.03l0.69,0.86l0.67,0.17l2.71,-1.17l0.19,-0.56l-0.72,-0.69l-1.46,0.36l-2.15,-1.84l1.2,-0.55l0.75,-1.22l0.98,-0.29l0.81,-1.29l0.85,0.04l-0.24,-1.23l3.25,-0.87l0.58,0.55l1.55,-0.19l0.94,0.76l0.75,-0.39l-0.28,-0.99l-3.36,-1.64l-0.6,0.23l-0.4,-0.66l-0.6,-0.13l-1.12,1.08l-1.62,0.45l-2.23,1.52l-3.74,3.32l0.07,-0.73l-1.39,-1.38l2.95,-2.81l0.64,-0.09l0.27,-0.74l1.23,-0.42l0.23,-0.89l-0.39,-0.5l-1.5,0.07l-0.97,-1.81l-0.7,-0.3l-0.36,0.31l-0.09,0.95l-0.78,-0.45l-0.56,0.06l-0.44,1.08l-0.91,0.69l0.02,1.51l-1.09,0.35l-0.29,-1.24l-1.85,-0.94l0.27,-0.49ZM467.33,187.3l-0.02,0.69l0.08,0.54l-0.23,-0.5l0.17,-0.74ZM511.49,194.25l-0.08,0.23l-0.06,0.04l0.07,-0.21l0.07,-0.07ZM521.85,108.29l4.22,-0.05l-0.03,0.87l0.41,0.88l1.07,0.74l-3.95,0.26l-0.99,-1.01l-0.38,-1.53l-0.36,-0.16ZM462.51,44.67l-0.48,-0.1l0.11,-0.42l0.37,0.52ZM480.09,42.55l-0.16,-0.42l0.09,0.02l0.07,0.4ZM553.84,2.1l0.09,-0.04l0.0,0.03l-0.09,0.01ZM486.09,154.14l-1.65,1.09l-0.22,-0.13l0.52,-1.19l1.39,0.02l-0.04,0.21ZM569.87,660.89l-0.05,-0.21l0.07,-0.55l0.68,0.7l-0.69,0.06ZM569.08,481.26l0.24,0.11l-0.12,0.21l-0.05,-0.02l-0.08,-0.31ZM566.15,517.71l0.13,-0.53l1.96,-0.83l-0.06,0.3l-2.04,1.06ZM560.64,465.59l0.03,-1.29l0.44,0.78l0.6,0.12l1.39,-0.87l0.93,0.26l0.4,-0.27l1.43,-0.03l0.32,0.76l1.55,0.15l0.21,0.92l1.3,1.46l-0.31,1.54l-1.35,1.44l-1.17,0.57l-5.6,-4.82l-0.17,-0.72ZM567.82,657.04l0.59,-0.24l0.46,0.97l-0.38,0.0l-0.67,-0.73ZM567.16,481.62l0.8,-0.2l0.12,0.15l-0.37,0.09l-0.54,-0.03ZM563.99,454.06l0.28,-0.52l2.0,-0.55l-0.62,1.38l-1.66,-0.31ZM561.83,604.34l0.36,-1.75l1.39,-0.34l0.4,-0.87l1.27,-0.11l-2.77,2.78l-0.66,0.28ZM562.7,590.99l0.29,-0.1l0.15,0.19l-0.33,-0.12l-0.11,0.03ZM561.98,579.11l0.03,-0.21l0.16,-0.38l0.23,0.82l-0.42,-0.23ZM562.3,593.73l-0.14,-1.09l0.27,-0.29l0.22,0.48l-0.34,0.91ZM546.88,664.64l1.55,-2.5l0.88,0.0l1.25,-0.62l2.53,-0.61l3.06,0.13l4.08,4.11l1.48,3.29l-0.27,0.47l-0.49,-0.29l-2.64,-0.26l-2.99,-1.37l-2.11,-0.14l-5.37,-1.55l-0.96,-0.65ZM555.56,342.89l0.84,0.24l1.8,-0.44l0.34,1.06l-1.68,2.76l0.27,1.37l-1.29,0.66l-0.59,-0.32l-0.89,-1.38l-0.39,-3.32l0.49,-0.73l0.64,-0.27l0.47,0.38ZM551.05,487.28l1.41,0.39l0.98,-0.93l0.84,0.47l0.29,0.72l1.57,1.7l0.16,1.7l-0.27,2.48l-0.46,0.4l-1.52,6.75l-1.08,1.59l-1.24,-1.95l-1.17,-1.08l-1.25,-0.58l-0.94,-2.41l0.21,-4.01l1.63,-3.39l0.33,-1.37l0.54,-0.47ZM554.2,536.67l0.54,-0.67l0.8,0.1l-0.82,1.01l-0.52,-0.44ZM553.29,539.35l0.02,-0.17l0.05,0.01l0.01,0.12l-0.07,0.05ZM518.48,254.45l0.35,-1.71l-0.33,-1.57l1.93,-0.65l2.02,1.4l0.68,-0.02l0.3,-0.5l2.2,0.64l1.61,0.91l3.05,-0.36l0.81,-0.81l0.5,0.18l3.87,-0.8l1.86,1.09l2.86,0.73l0.78,0.87l0.71,0.07l0.33,0.39l0.94,1.57l0.34,1.25l0.99,0.64l1.02,-0.04l0.14,0.78l1.1,1.16l-0.17,0.91l0.28,0.48l1.0,0.89l1.32,0.27l-0.19,0.55l0.09,0.86l0.4,0.53l-0.16,0.98l0.84,0.64l0.74,-0.07l0.16,1.42l-1.02,0.76l-6.43,0.08l-0.92,-0.51l-5.12,0.35l-2.97,1.43l-3.27,2.62l-1.23,0.4l-1.03,-0.23l-2.95,-1.96l-1.55,-3.7l0.17,-1.66l-0.46,-0.82l0.3,-1.05l-0.47,-0.9l-0.74,-0.47l-0.91,0.24l-2.6,-0.56l-0.48,-0.67l-0.23,-3.22l0.77,-0.0l0.12,-0.63l-1.13,-1.22l-0.26,-0.96ZM542.49,343.15l1.11,-1.78l0.59,-1.7l1.13,-0.13l0.28,-0.54l0.91,-0.09l0.19,-0.59l-0.34,-0.9l0.25,-0.24l0.81,0.38l0.67,1.17l-0.8,1.23l-1.28,0.61l-1.46,1.61l-1.05,-0.25l-1.03,1.24ZM539.92,355.26l1.02,-3.29l1.77,-0.72l0.71,-1.13l-0.07,-1.13l0.47,-1.08l0.9,-0.14l0.14,-0.57l-0.89,-1.04l1.48,-1.21l0.9,-0.01l0.67,1.28l-0.6,1.55l-0.94,0.07l0.01,1.35l-0.55,0.73l0.12,0.8l-0.94,1.77l0.0,1.01l-0.47,0.5l-0.2,0.85l-2.02,0.99l-0.53,0.83l-0.81,-0.38l-0.16,-1.02ZM544.47,363.7l0.59,-0.78l0.44,-0.07l0.03,0.55l0.56,0.11l-0.77,0.79l-0.86,-0.6ZM546.32,361.77l-0.26,-0.61l-1.1,-0.61l2.08,0.52l-0.0,0.9l-0.72,-0.19ZM543.1,367.65l1.19,-0.44l0.95,0.97l-0.24,0.84l-0.95,1.27l-0.69,-0.65l-0.26,-1.98ZM491.6,444.1l0.6,-0.54l-0.26,-1.28l0.32,-1.1l-0.63,-1.23l0.66,-2.2l-0.44,-3.51l0.51,-1.23l-0.42,-0.97l0.42,-3.32l0.43,-0.97l-0.05,-1.17l0.6,-1.86l2.47,-2.98l0.48,-0.2l-0.15,1.45l0.49,1.08l0.82,-0.21l0.33,-0.69l1.19,0.7l-0.03,1.27l1.17,1.97l-0.29,0.44l-1.52,0.56l-0.23,0.9l0.81,0.97l1.34,0.7l0.53,0.65l-0.03,1.26l1.03,2.84l0.96,0.12l0.61,-0.39l0.52,-1.62l-0.04,-1.12l1.02,-2.43l0.72,0.33l-0.01,0.75l0.77,0.69l1.56,0.67l-0.42,1.38l1.36,1.37l1.5,0.21l0.63,0.62l0.85,-0.28l2.96,0.46l0.59,1.9l1.5,1.86l2.76,1.13l0.93,1.41l0.67,0.45l0.85,-0.02l0.66,0.61l1.7,-0.47l1.37,1.36l0.75,-0.07l2.34,2.78l0.66,0.36l0.28,3.89l1.81,2.28l-0.08,0.86l-2.81,1.51l-0.34,1.27l0.33,0.67l2.02,-0.2l1.22,-0.66l1.25,-0.19l0.59,-0.32l0.19,-0.61l0.65,-0.12l3.48,1.37l0.51,-0.57l-0.64,-1.28l0.26,-0.65l1.47,1.65l1.47,0.59l0.11,1.01l-1.42,-0.11l0.39,1.02l2.73,0.65l0.87,0.66l0.71,-0.04l0.09,0.37l-2.32,0.89l-0.92,1.85l-1.96,2.17l-0.72,0.34l-0.37,1.42l-0.79,-0.13l-3.55,-1.9l-1.25,0.09l-1.1,-1.13l-1.27,0.12l-1.57,-0.9l-1.68,0.2l-0.83,0.61l-0.91,-0.33l-0.6,-1.02l0.16,-0.59l1.17,-0.74l0.21,-0.8l-0.27,-1.3l-1.9,-1.28l-2.92,-0.04l-1.67,0.69l-0.24,-0.42l1.14,-2.21l0.1,-0.8l-0.5,-0.96l-0.43,-0.25l-0.73,0.12l-0.66,0.48l-0.31,0.78l-0.84,-0.15l-0.73,0.53l-0.52,-0.15l-0.94,0.53l-1.17,2.31l0.77,1.5l-0.29,1.2l0.41,0.83l-0.05,0.66l-0.67,-0.06l-0.56,0.37l-1.21,1.67l-0.65,0.42l-0.51,1.12l-0.85,-0.31l-0.98,0.2l-1.1,1.81l-0.45,3.06l-0.81,1.47l-0.8,0.38l-3.37,2.9l-1.45,0.7l-1.78,0.02l-0.58,-0.67l-0.59,-1.83l-0.22,-3.12l0.33,-1.21l-0.24,-1.47l0.26,-1.16l-0.27,-1.02l-0.84,-0.56l-0.08,-1.26l-0.32,-0.37l-0.44,0.22l-0.66,1.2l-1.18,0.2l-2.19,1.03l-2.41,-0.32l-1.34,0.23l-1.91,2.06l-1.94,0.07l-0.64,-0.91l0.24,-1.85l2.24,-3.9l3.46,-1.99l1.07,-0.94l1.19,-0.37l0.38,-0.61l-0.1,-1.44l-0.99,-1.14l0.06,-0.61l-0.61,-0.96l-0.15,-1.17l0.24,-0.73l-0.5,-0.71l0.07,-2.05l-0.31,-0.97l1.24,-4.08ZM537.12,125.64l0.14,-0.6l1.15,0.28l0.61,0.75l-0.27,0.43l-1.64,-0.85ZM528.13,339.23l0.71,0.43l0.53,-0.06l0.11,0.47l-1.79,0.18l0.44,-1.02ZM530.47,340.7l0.27,-1.09l-0.86,-1.08l0.03,-0.55l0.81,0.3l0.63,-0.45l0.4,0.44l-0.08,0.88l0.61,0.2l0.41,-0.54l0.84,0.27l1.61,-0.81l0.44,-1.19l1.15,0.08l0.29,0.86l0.7,0.66l-1.6,1.72l-1.98,0.49l-0.78,-0.68l-0.76,0.12l-0.17,0.63l1.17,2.24l-1.35,-0.46l-0.17,-1.79l-0.78,0.0l-0.15,0.27l-0.66,-0.53ZM532.8,452.93l0.06,-0.06l0.37,-0.01l-0.25,0.1l-0.18,-0.03ZM516.63,485.78l0.87,-1.45l0.09,-2.41l0.75,-1.27l0.74,-0.59l0.54,0.17l0.88,1.11l0.77,0.19l3.24,-2.28l2.59,0.08l1.19,-1.35l3.08,0.71l-0.52,1.61l0.24,2.58l-1.45,1.72l-1.8,1.19l-0.63,1.91l-1.56,1.53l-1.03,1.81l-2.6,2.52l-0.26,0.11l-0.58,-0.84l-1.09,-0.43l-1.39,0.44l-1.96,1.8l-0.27,-2.41l-1.84,-2.06l-0.26,-0.92l1.85,-2.17l0.41,-1.27ZM224.65,339.19l10.41,-29.67l1.43,2.96l1.64,2.0l1.52,0.57l0.36,0.5l3.12,1.81l3.61,2.71l0.69,2.27l2.5,3.21l4.41,3.07l1.14,1.59l2.02,0.19l0.43,0.79l2.55,1.27l0.89,-0.13l0.67,1.23l1.73,1.08l0.62,-0.07l0.17,-0.63l-0.85,-1.03l0.21,-0.64l-1.13,-1.74l0.59,0.14l1.77,1.79l0.95,0.0l0.47,-0.5l1.0,0.18l2.14,2.28l0.61,1.1l0.35,0.19l0.53,-0.22l0.79,1.3l0.41,1.51l1.35,1.18l0.3,2.21l1.24,1.35l-0.05,0.74l0.46,0.89l-0.07,0.62l-0.6,0.52l0.03,0.54l0.26,0.49l0.71,0.24l-1.13,1.23l-0.01,1.08l-1.03,-0.63l-0.84,0.22l-0.68,-0.89l-1.55,-0.09l-2.39,-1.42l-0.42,0.7l0.81,1.53l-0.59,0.64l-2.27,-1.38l-0.61,0.37l0.19,0.98l-1.03,1.69l0.38,0.97l-2.87,0.38l-0.52,0.95l0.32,0.62l1.43,0.7l1.04,1.98l1.06,0.54l1.96,0.14l0.6,0.93l0.85,0.09l1.0,1.43l1.4,0.13l2.17,1.57l4.2,0.81l1.85,1.27l1.7,0.16l3.18,0.9l0.95,-0.24l0.25,-0.72l0.94,0.49l1.06,-0.09l0.07,1.09l0.81,0.42l0.54,-0.25l0.08,-1.19l2.05,1.3l0.62,-0.31l0.42,0.25l1.94,-1.54l-0.35,0.83l0.24,0.61l0.99,-0.18l0.59,0.43l1.74,-0.54l1.01,-0.94l1.23,-0.17l1.5,-0.92l0.57,0.14l0.31,-0.29l0.65,1.06l0.47,0.09l0.44,-0.66l-0.3,-0.8l0.49,-0.26l0.42,0.71l-0.66,2.38l0.7,0.76l0.69,-0.72l0.52,1.18l-0.55,1.52l0.22,0.56l1.6,1.08l0.63,-0.33l0.33,-0.67l0.76,0.69l0.6,-0.12l1.0,0.42l0.28,0.85l0.0,2.79l-0.84,0.67l-0.12,0.8l0.98,1.49l0.07,1.06l0.49,0.24l0.68,-0.59l1.36,-4.64l0.36,0.04l-0.29,5.31l0.36,0.56l0.58,-0.02l0.67,-1.63l0.27,1.18l1.69,2.4l0.33,2.6l-0.33,0.29l0.04,1.02l-0.6,-0.47l-1.1,-0.12l-0.9,0.77l-1.36,-1.6l-0.54,-1.27l-0.48,-0.27l-0.55,0.44l0.28,2.54l0.33,0.43l0.59,-0.14l0.48,1.31l1.17,0.7l0.19,0.49l-0.23,1.01l-0.74,0.08l-0.16,0.66l1.74,0.69l0.16,3.35l0.73,0.24l0.29,-0.67l0.32,0.86l-0.15,0.65l0.75,2.08l0.66,0.37l0.18,1.47l0.96,2.27l0.74,0.41l0.48,-0.37l0.09,-0.75l-1.28,-2.85l-0.03,-0.89l-0.66,-0.99l-0.31,-2.38l-0.49,-0.66l0.48,-0.61l0.21,-2.19l0.49,0.43l-0.24,0.61l0.34,0.52l1.24,0.59l0.36,-0.6l-0.23,-0.74l0.57,-0.39l0.1,-0.95l0.64,0.96l0.49,1.67l0.49,0.32l0.53,-0.3l-0.3,-1.18l0.18,-0.47l-1.35,-3.35l0.9,-0.19l0.69,-0.85l0.05,-0.56l-1.44,-0.84l-0.69,-1.3l-0.43,-3.54l1.13,-2.31l-0.93,-2.27l-1.45,-2.39l0.26,-1.42l0.68,-1.28l2.24,-0.89l0.39,-1.05l-0.68,-0.64l0.69,-0.93l0.63,-0.21l0.86,0.6l0.74,0.1l1.65,-1.03l0.38,0.48l1.37,0.09l0.35,-0.46l0.93,0.57l0.62,-0.25l0.21,-1.44l0.26,0.42l0.57,-0.05l0.32,-0.89l0.43,1.38l0.69,0.24l0.69,-0.43l0.2,-0.67l-0.81,-1.03l0.71,-1.1l-0.12,-0.76l0.66,0.1l0.79,-0.65l0.8,0.72l1.59,-0.83l1.84,0.07l0.67,-1.61l-0.38,-1.27l1.23,-1.54l-0.22,-0.61l-0.74,-0.11l-0.53,0.38l-0.5,-0.59l-0.62,-0.1l-1.0,0.3l-0.34,0.5l-3.61,0.81l-0.52,0.97l-0.46,0.02l-0.28,0.38l0.2,1.07l0.66,0.53l-0.65,0.65l-0.46,-0.26l-0.34,-1.25l-0.49,-0.21l-0.5,0.58l-1.46,0.06l-1.41,1.66l-0.4,0.01l-0.33,-0.98l-1.25,-0.36l-0.53,-0.78l-1.51,0.09l-0.61,-0.36l-0.61,0.42l-0.6,1.52l0.93,1.49l-0.84,-0.05l-0.45,0.47l-0.33,-0.56l-1.33,-0.27l-1.07,0.49l0.27,-1.24l-0.47,-0.78l0.26,-0.86l-0.41,-0.83l-0.72,0.05l-1.0,0.75l-1.04,-0.05l0.58,-0.56l0.09,-0.69l1.44,-0.98l2.1,-3.01l0.98,-0.9l4.1,0.27l2.59,-0.6l1.16,0.09l3.15,-1.45l1.86,0.02l0.96,-0.62l2.17,-0.6l0.67,-0.76l1.17,1.06l1.42,0.59l1.74,3.52l-0.61,0.66l-0.14,0.69l0.7,3.02l-1.32,0.92l-0.26,0.97l0.52,0.49l1.0,-0.0l0.03,1.25l1.53,2.14l0.88,0.27l0.31,0.77l0.57,0.13l0.53,-0.37l1.16,0.24l-0.79,1.66l1.16,2.86l1.21,0.24l0.46,-0.19l1.07,0.69l1.32,-0.25l1.27,0.71l0.79,-0.27l0.41,-0.52l1.12,0.26l0.39,-0.42l0.19,-1.07l0.57,-0.48l-0.19,3.16l0.81,0.99l0.63,0.16l0.49,0.92l0.95,0.25l1.11,2.33l2.42,1.12l1.52,2.07l0.7,-0.17l-0.01,-0.87l0.36,-0.2l0.59,0.33l0.8,-0.29l0.82,1.22l0.68,0.04l0.28,0.41l1.29,0.55l1.18,-0.11l0.52,-0.62l0.64,0.15l0.55,-0.67l2.28,0.29l0.53,-0.76l1.37,-0.67l0.83,0.87l1.38,-0.92l1.71,0.31l0.54,0.61l1.44,0.15l0.6,0.42l0.77,-0.34l0.56,0.6l0.81,-0.12l1.67,1.07l0.52,0.98l1.97,0.13l0.21,0.38l0.58,0.14l0.45,-1.05l1.12,0.08l0.53,-0.78l0.56,0.3l1.55,0.02l0.61,-0.35l0.04,-0.64l-0.7,-1.42l-0.64,-0.13l-1.2,-1.65l0.07,-1.92l0.73,-0.05l2.04,3.21l1.0,3.57l0.85,0.32l0.5,1.26l0.89,0.26l1.78,2.05l1.65,-0.25l0.72,-0.84l0.28,0.6l0.67,-0.0l0.26,-0.78l0.73,-0.1l0.33,-0.55l-0.93,-1.05l0.67,-1.15l-0.81,-2.97l-0.64,-0.18l-0.52,0.86l-2.33,-3.23l-0.49,0.13l-0.27,0.64l-0.92,0.16l-0.57,0.49l-0.73,-0.22l-0.74,1.82l-0.41,-1.4l-1.23,-1.62l-0.18,-1.05l0.64,-0.33l0.37,-0.68l0.14,-1.19l-1.3,-1.23l0.07,-0.69l-0.36,-0.38l-0.66,-1.26l0.41,0.48l1.06,-0.68l1.19,1.44l0.43,0.11l0.47,-0.36l0.5,0.06l0.4,-0.68l0.79,0.34l0.56,-0.34l0.03,-0.46l0.72,0.42l0.51,-0.4l-0.15,-0.84l-0.96,-0.64l-0.64,-1.74l1.71,0.28l0.32,1.42l0.89,0.92l0.47,-0.05l0.35,-0.56l-0.24,-0.7l-0.5,-0.1l0.11,-0.26l0.79,0.01l0.99,0.7l0.68,1.19l0.03,0.84l1.08,0.66l-0.74,0.93l0.24,0.88l1.23,0.6l1.74,-0.66l-0.22,1.11l0.61,0.85l-0.35,0.88l-1.14,0.69l-0.38,0.64l0.03,0.7l0.42,0.48l1.07,0.06l0.37,-0.73l0.61,0.48l0.73,-0.14l0.31,-0.74l-0.45,-1.02l0.19,-0.25l1.55,-1.15l1.76,-0.78l-0.79,1.52l0.35,0.84l-1.82,5.69l0.01,2.01l-0.25,0.57l-0.9,0.08l-0.14,1.8l-0.91,0.95l-0.32,1.8l0.09,0.3l0.62,0.07l0.44,0.78l0.98,0.47l0.57,-0.12l-1.02,1.79l-0.33,1.54l0.46,0.47l0.47,-0.08l0.23,0.52l0.87,0.02l2.55,-2.56l0.6,0.59l0.53,-0.36l-2.48,3.23l0.46,0.54l1.33,-0.73l0.96,-0.12l-0.02,1.16l0.74,0.27l-0.27,1.34l0.61,1.06l-0.69,0.79l-0.87,0.03l0.12,-0.28l-0.45,-0.53l-2.25,0.7l-0.31,-1.15l0.38,-0.72l-0.29,-0.74l-0.73,0.33l-0.69,1.35l-0.98,-0.04l0.01,-1.45l-0.95,-0.71l-0.57,-0.04l-0.69,0.9l0.38,1.53l0.81,0.62l0.4,1.02l0.7,0.58l0.31,1.37l1.83,1.52l0.46,1.9l-0.39,1.29l0.13,0.48l0.5,-0.01l0.78,-1.17l0.96,-0.63l-0.09,-1.39l-0.49,-0.51l-0.53,0.65l-2.24,-4.1l0.51,-0.24l0.77,0.55l0.55,-0.22l0.47,0.8l1.82,0.12l0.73,-0.39l0.97,0.56l0.65,-0.4l0.57,-1.26l-0.84,-2.43l0.07,-1.43l0.7,-1.15l0.14,-0.87l0.71,-0.58l-0.14,-0.51l-1.05,-1.02l-0.44,-2.43l0.7,-0.87l-0.06,-0.95l-1.04,-2.12l-0.56,-0.29l-1.07,-1.42l1.36,-1.41l0.21,-0.93l-0.27,-1.18l1.24,-2.11l0.03,-0.92l0.63,-0.02l-0.22,0.42l0.57,0.39l1.08,-0.91l0.6,0.73l0.62,-0.1l0.82,0.61l0.65,-0.2l1.99,-2.51l2.93,-2.25l0.13,-2.08l0.63,-0.95l4.43,-2.67l0.26,-0.93l1.2,-0.67l0.06,-0.55l-1.85,0.31l-0.69,-0.28l0.28,-2.13l1.01,-2.08l-0.54,-1.2l0.06,-1.53l-1.1,-0.49l-0.47,0.16l0.2,-0.46l-0.32,-0.34l0.51,-0.56l-0.3,-0.73l-0.68,0.15l-0.7,0.78l-0.1,1.2l-1.12,1.89l-0.02,1.06l0.74,0.43l-0.87,0.88l-1.18,-0.03l-0.94,0.55l-1.22,-0.72l0.65,-2.28l-0.3,-1.43l0.72,0.73l0.33,-0.14l0.85,-1.72l1.24,-0.38l0.29,-0.39l-0.14,-0.89l1.26,-1.02l0.09,-0.46l-0.41,-0.23l-1.1,0.54l-0.6,0.05l-0.26,-0.32l0.56,-2.25l-0.16,-0.9l1.73,-0.7l1.06,0.47l0.5,-0.21l-1.04,1.68l0.19,2.01l0.66,0.2l2.1,-2.7l1.62,-1.46l-0.12,-0.8l-1.22,0.19l0.93,-1.77l0.02,-0.59l-1.2,-1.18l-0.99,0.12l-1.53,0.77l-0.3,1.01l-1.59,-0.04l-1.05,-0.37l-1.24,-2.45l-0.29,-1.53l-0.95,-1.18l-1.12,0.56l0.07,1.25l-0.59,0.55l-0.93,-1.15l-0.89,-0.01l-1.88,-1.41l-1.82,-2.33l-0.83,-0.12l-0.36,-0.39l-1.17,0.24l-0.59,-1.11l0.09,-2.18l-0.52,-0.53l-0.65,-0.09l-1.65,-3.41l-0.15,-2.09l0.34,-2.13l0.71,-1.18l0.85,-0.31l0.59,-2.41l0.75,0.08l0.47,-1.04l1.74,1.3l0.65,-0.46l-0.1,-0.52l-1.67,-1.17l0.04,-0.59l1.59,-1.2l0.19,-0.58l-1.22,-0.06l-2.0,1.53l-0.98,-1.14l-0.42,-1.41l-0.87,-0.86l1.19,-5.03l0.89,-1.31l-0.23,-0.76l-0.55,-0.21l-0.27,0.29l-0.14,-0.24l0.31,-0.26l0.85,0.13l0.12,-0.27l-0.49,-1.01l0.28,-1.34l-0.37,-0.46l1.13,-0.1l1.07,-2.14l0.99,-0.1l1.95,2.72l1.27,0.08l0.33,-1.37l0.76,-0.66l-0.68,-1.12l1.26,-2.02l-0.42,-0.25l-1.02,0.41l-1.72,-0.58l-0.59,-0.77l0.38,-0.56l-0.25,-0.28l1.28,-0.41l1.53,-1.72l1.55,0.02l0.34,-0.47l-0.12,-0.73l0.38,-1.08l0.84,-0.27l1.45,0.12l1.05,0.27l0.34,1.88l0.61,-0.01l0.76,-1.04l-0.31,2.51l0.32,0.45l0.51,-0.17l1.16,-2.14l0.4,0.3l0.63,-0.34l0.72,0.63l1.19,-0.48l0.0,0.99l-0.76,1.43l1.3,1.82l2.72,2.41l0.45,1.94l1.1,0.69l0.25,2.85l0.47,1.29l-0.08,2.48l-0.38,3.5l-0.66,-0.38l-0.44,0.47l0.1,0.49l0.69,1.08l1.05,0.33l0.69,0.64l-0.25,0.89l0.35,0.34l0.1,0.92l1.7,0.3l0.78,0.68l-0.29,0.6l0.79,1.63l-0.37,0.43l0.2,0.64l0.86,0.41l-0.09,0.39l1.05,1.48l-0.12,0.79l-0.65,0.57l0.7,0.38l0.22,0.75l0.7,0.16l0.82,-1.44l-0.19,-0.33l0.6,0.07l-0.26,0.55l0.2,2.13l0.6,0.35l0.28,-0.25l0.44,0.78l-3.08,0.37l-0.52,-0.86l-0.83,-0.4l-0.57,-1.55l-1.17,0.57l0.43,0.71l-1.34,0.59l0.57,0.61l-0.46,0.85l-0.77,0.42l-0.0,0.65l0.72,0.68l0.59,0.01l0.24,-0.49l0.78,-0.38l1.26,0.14l0.86,0.98l-0.74,0.34l-1.66,2.15l0.12,0.41l-2.03,1.16l-0.22,0.56l-0.65,0.01l-0.24,0.73l-1.93,1.83l0.19,0.52l2.03,0.54l0.79,-0.66l1.1,0.04l2.12,2.77l2.21,1.48l2.11,-2.04l0.1,-0.83l0.81,-0.86l1.28,0.51l-0.97,1.2l-1.68,0.68l0.02,0.7l0.44,0.23l1.49,-0.21l1.04,-0.74l0.63,0.96l1.39,-0.16l0.36,0.69l1.02,0.01l0.53,-1.03l1.52,0.89l0.09,0.25l-0.69,0.38l-0.48,-0.53l-0.61,-0.01l-0.41,0.4l0.45,0.62l-1.08,0.99l-0.25,1.61l-0.61,-0.4l0.37,-0.81l-0.42,-0.4l-0.47,0.11l-1.25,1.31l-1.69,-1.37l-0.67,0.29l0.54,1.02l1.59,1.16l3.04,3.5l0.72,0.43l-0.39,1.34l0.27,0.55l0.49,0.15l0.16,0.54l-0.27,0.74l1.3,0.85l-1.1,1.36l0.2,0.58l0.42,0.08l-0.15,0.92l0.34,0.75l-0.48,1.34l0.34,0.89l-0.25,0.79l0.36,0.47l-0.94,1.83l0.26,0.55l1.56,0.97l-0.66,0.52l-0.1,0.51l0.49,0.18l0.7,-0.25l0.29,1.8l0.46,0.61l0.83,-0.07l0.65,-0.63l-0.22,-1.21l1.21,-1.33l0.04,-1.2l0.65,-0.41l0.63,-1.78l-0.72,-0.82l-0.16,-0.8l0.66,-1.17l-0.11,0.74l0.35,0.5l0.54,-0.2l0.31,-0.62l0.2,-3.6l-0.48,-2.78l0.31,-1.38l1.95,-2.78l0.76,-1.95l0.81,-0.47l0.93,0.17l0.54,0.53l0.76,1.96l0.94,1.23l3.7,3.18l1.73,2.49l0.75,2.41l-0.07,2.09l1.18,3.88l0.07,1.43l-0.33,1.43l-0.41,0.53l-1.47,-0.53l0.0,-2.23l-0.28,-0.54l-0.57,0.02l-0.75,1.43l-0.66,0.47l-0.22,0.77l0.64,1.37l0.36,1.85l-0.72,1.8l0.07,1.19l0.8,3.46l0.92,1.49l0.26,1.46l0.61,0.85l1.03,0.56l2.33,3.5l1.5,1.53l0.14,1.62l0.55,0.42l-0.88,0.97l-0.09,1.63l0.52,0.42l0.28,-0.12l0.67,-1.15l0.35,1.43l0.77,-0.01l0.44,-2.43l0.17,0.71l0.65,0.14l0.43,-1.33l0.76,-0.29l-0.28,-1.39l0.74,-1.69l0.46,-0.2l0.65,0.81l1.18,0.53l0.87,-0.85l-0.27,-1.29l0.42,-0.51l0.1,-3.05l-0.63,-1.65l1.23,-3.16l1.2,-1.55l0.47,-1.25l1.64,-1.83l-0.14,-1.24l0.37,-0.46l-0.24,-1.07l0.4,-0.09l0.33,-0.65l-0.43,-0.61l0.05,-1.52l1.03,-2.63l-0.5,-0.76l-0.17,-3.02l0.49,-2.13l0.77,0.12l0.63,-0.55l0.3,0.42l1.19,0.27l0.47,-0.33l0.01,-0.4l1.54,-0.23l1.32,0.5l0.47,-0.39l0.12,-1.02l-0.57,-0.98l-0.96,-0.26l-0.63,0.3l-1.06,-0.4l0.51,0.1l0.69,-0.59l-0.1,-1.13l1.13,0.19l0.47,-0.25l-0.18,-1.05l-0.94,-0.34l0.68,-0.31l1.87,0.46l0.54,-0.81l-0.44,-0.59l-1.29,-0.2l-0.34,-0.92l-1.18,0.19l-0.77,-2.03l-1.4,0.16l-0.45,-0.44l-0.8,-0.13l-0.82,-1.5l0.81,-0.1l0.0,-0.83l-0.73,-0.45l0.12,-0.35l-0.34,-0.42l0.55,-0.16l0.45,-1.01l-0.72,-0.74l-0.72,0.27l0.02,-1.04l0.33,-0.57l0.63,-0.15l-1.18,-2.09l0.63,-0.72l-0.04,-1.08l0.77,-0.79l-0.07,-0.77l1.71,0.98l0.43,-0.68l0.88,-0.22l0.49,-0.61l3.23,-0.54l0.37,0.46l0.88,0.11l1.22,1.29l2.32,1.02l2.79,0.38l0.9,-0.59l1.61,0.41l1.0,-0.32l1.52,0.13l0.48,-0.34l0.15,0.26l-0.65,0.87l0.25,0.5l-0.91,0.6l0.36,0.36l0.88,0.07l0.55,0.68l-5.0,-0.84l-0.65,0.42l0.17,0.76l6.94,1.74l-0.26,0.19l0.21,0.47l1.55,1.36l-0.4,0.23l-0.32,1.25l0.49,0.56l1.98,-0.41l0.2,-0.61l1.62,0.05l2.08,1.18l0.9,-0.0l0.36,1.29l-1.11,0.95l-0.49,1.44l-0.68,0.07l-0.43,1.13l-2.03,1.16l-0.43,1.03l0.48,0.12l1.55,-0.74l0.91,-0.06l0.65,0.54l0.22,0.76l0.47,0.18l0.96,-0.97l1.12,1.62l0.07,2.62l-2.43,2.77l-1.12,-0.34l-0.42,0.56l0.02,0.92l-0.79,0.69l-0.64,-1.43l-1.22,-0.48l-0.47,-0.09l-0.46,0.43l0.73,1.2l-1.29,-0.23l-1.57,-1.04l-0.43,0.26l-0.18,0.63l0.8,0.9l-0.48,-0.02l-0.29,0.73l0.35,0.74l1.0,-0.01l1.03,0.92l-0.87,0.27l-0.13,0.58l0.6,0.71l0.78,0.37l0.54,-0.28l-0.48,2.01l0.5,0.77l1.45,0.33l0.14,0.4l-0.5,1.79l0.93,2.29l2.14,1.89l1.82,2.29l1.57,1.09l1.69,2.53l0.22,0.52l-0.41,1.74l-0.28,5.75l-0.53,0.8l0.05,0.96l-1.02,0.03l-0.28,0.58l-1.06,-0.37l-1.34,0.86l-0.5,1.2l0.16,0.41l-0.46,0.91l0.08,0.5l-0.63,1.14l0.07,0.98l-1.52,0.1l-0.06,0.63l-0.59,0.4l-0.65,1.2l-0.23,1.08l-1.73,0.03l-1.48,0.55l-0.36,1.57l-2.25,2.59l-0.38,0.05l-0.41,-0.12l-0.13,-0.75l-0.94,-1.23l-0.35,-1.01l-1.56,-0.52l-1.22,-1.46l0.84,-0.02l0.3,-0.94l-0.88,-1.37l0.48,-1.38l-0.41,-1.56l-0.42,-0.2l-0.33,0.34l-0.11,1.16l-0.7,0.65l-0.47,1.48l-0.76,-0.18l0.05,-1.01l-0.3,-0.35l0.54,-0.56l-1.46,-1.06l-0.06,-2.04l-3.54,-0.91l-0.73,-0.56l-0.69,0.1l-0.05,1.03l0.57,0.63l-0.96,0.18l-1.62,1.09l-0.24,1.14l0.19,0.5l0.92,0.71l1.52,-0.57l0.86,-1.83l0.42,-0.12l0.25,0.31l-0.33,0.39l0.98,0.58l-0.37,0.78l0.37,0.41l2.33,0.87l-0.55,0.56l-0.01,0.63l1.17,0.78l1.2,-0.25l-0.39,1.76l2.5,2.69l0.45,0.81l0.25,1.95l0.7,0.44l0.56,1.17l-1.31,0.22l-1.3,-0.9l-0.32,-0.92l-0.59,-0.46l-1.33,0.72l-0.35,-1.24l-1.17,-0.96l-0.48,0.19l-0.76,1.63l2.26,2.97l-1.28,-0.84l-1.45,-0.18l-0.77,-0.79l-1.0,0.26l-1.07,-1.4l-0.6,0.07l-0.34,1.21l-0.78,-4.09l-0.84,-1.71l-0.66,-0.37l-0.86,0.23l-1.97,1.36l-0.9,-0.22l-1.74,0.35l-1.03,-0.32l-0.59,-0.68l-0.45,0.07l-0.33,0.62l-1.44,-0.65l-0.35,0.93l-0.6,-0.32l-0.75,0.2l-0.14,0.54l0.61,0.87l-0.56,0.05l-0.22,0.59l1.71,2.75l2.48,0.54l3.71,1.93l-0.76,1.22l-0.06,1.4l-0.48,0.53l-1.03,0.33l-0.22,1.04l-1.73,0.86l-0.59,2.04l0.31,1.26l-0.58,1.19l-1.1,0.64l-1.09,1.77l-1.33,0.59l-0.29,0.88l-0.53,0.25l-0.28,0.57l0.29,1.02l-2.17,1.42l-4.42,0.04l-1.02,-0.44l-1.24,-0.93l-0.92,-1.6l-1.21,-1.3l-1.96,-1.11l1.98,0.37l0.47,-0.37l-0.12,-0.47l-3.93,-1.49l-0.91,0.15l-1.03,-0.58l-0.37,-0.92l-1.22,-0.74l-0.92,-1.12l-0.79,-0.14l-1.45,-1.41l-2.52,-0.27l-0.57,0.23l0.01,0.69l1.88,1.05l0.14,0.7l-2.03,-1.36l-1.24,0.26l0.05,-0.62l-0.46,-0.37l-1.47,0.42l-6.35,-0.91l-1.26,-0.56l-1.67,0.63l0.02,0.64l3.84,2.87l0.66,-0.16l0.12,-0.54l-0.83,-1.67l4.33,0.96l4.62,1.73l1.79,1.3l1.04,1.58l1.15,0.81l0.64,2.1l1.78,1.27l1.28,2.27l1.01,-0.19l0.6,0.41l6.81,0.99l1.16,-0.43l1.53,0.37l0.72,-0.68l1.26,0.62l1.23,-0.17l2.44,0.59l-0.02,0.57l0.92,0.98l-0.42,0.83l0.18,0.8l-1.03,1.03l0.2,0.74l-0.68,0.55l-0.63,1.25l-0.46,2.22l-0.67,0.57l-0.74,-0.22l-0.3,0.43l0.01,2.02l-0.48,1.22l-1.97,1.13l-0.52,3.2l-1.35,1.99l-0.11,0.53l0.4,0.72l-0.74,0.93l-0.94,-0.04l-2.19,1.87l-1.48,0.78l-0.44,0.77l-1.35,-0.65l-0.63,0.19l-1.4,-1.05l-1.02,-2.09l-0.48,0.02l-0.39,0.58l1.13,2.58l-0.8,-0.25l-0.43,-0.5l-0.74,0.08l-0.86,-0.94l-0.48,0.08l-0.22,0.53l-0.47,-0.49l-0.61,-0.01l-0.37,-0.42l0.39,-0.09l0.34,-0.6l-0.14,-1.56l-0.38,-0.69l-0.64,0.01l-0.79,1.51l-0.87,0.09l-1.12,0.66l-0.05,0.72l0.93,0.65l0.44,-0.18l0.48,1.07l-0.19,0.66l-0.41,-0.19l-0.73,0.47l-0.86,-0.9l-0.72,0.05l-0.46,0.46l1.37,1.56l0.33,1.12l1.01,1.2l-0.95,0.21l-0.29,0.68l0.41,0.36l-0.92,1.77l-0.74,-0.24l-0.59,0.62l-0.56,0.01l-0.23,-0.94l-1.65,-0.78l-0.76,0.87l-0.04,0.64l0.69,0.29l0.5,-0.22l0.07,0.37l-1.46,0.62l-1.33,0.1l-1.96,-1.32l-0.77,0.03l-1.06,-1.28l-1.28,-0.65l-1.21,0.15l0.04,-0.54l-0.47,-0.6l-0.51,0.06l-0.35,0.5l-1.27,-0.1l0.67,-0.57l-0.27,-0.54l-1.23,-0.2l-0.67,1.26l-2.38,-0.59l-0.99,-0.97l-1.95,-0.67l-0.56,-0.85l-1.09,-0.11l-0.4,-0.69l-0.98,0.04l-0.68,-0.73l-2.44,-1.09l-1.31,-1.52l-0.1,-1.25l-0.75,-0.16l-0.38,-0.56l-0.65,0.04l-0.08,0.58l0.7,0.89l0.13,1.06l0.71,1.09l-0.06,0.3l-1.2,-0.06l-0.41,0.49l-0.05,0.4l0.61,0.58l0.54,1.53l2.55,1.43l1.53,-0.47l0.27,-0.5l-1.31,-0.78l-0.63,-1.04l0.13,-0.26l2.22,1.83l1.8,0.9l1.13,0.19l1.16,0.98l0.55,0.05l0.82,-0.64l0.64,1.4l1.31,0.07l0.51,0.42l-0.34,1.0l-0.74,-0.38l-0.82,1.21l-1.45,0.8l0.07,0.56l0.82,0.62l1.5,-0.61l0.41,0.38l0.63,-0.18l0.29,-1.37l1.35,-0.48l0.53,-0.63l1.38,-0.66l1.17,1.1l0.19,1.32l1.74,1.14l-0.1,0.55l0.37,0.42l1.93,-0.08l0.94,0.83l0.59,-0.3l0.22,0.25l-0.31,0.34l0.34,0.65l2.0,0.84l-0.34,0.61l0.51,1.75l-0.36,0.9l0.41,0.47l-0.04,1.6l0.25,0.32l-0.84,0.97l-0.23,0.91l-2.1,-0.17l-1.55,1.08l-0.28,0.73l-0.67,0.49l-1.01,0.17l-0.08,0.61l-6.01,-1.84l-0.48,0.42l0.11,0.84l-1.42,-0.68l-1.4,0.44l-0.18,1.01l1.52,1.96l-0.01,0.45l1.0,0.46l2.05,0.27l0.42,0.21l-0.02,0.44l-0.74,0.94l-0.91,-0.27l-0.08,-0.97l-0.79,-0.23l-0.79,0.25l-0.1,0.46l-0.81,0.57l-0.29,-0.1l-0.11,-0.96l-0.66,0.08l-0.71,-0.69l-0.56,0.33l0.62,1.7l-0.15,1.0l-1.28,0.07l-0.16,1.92l-0.88,0.18l-0.01,0.68l1.78,0.63l-0.08,0.63l-0.47,-0.64l-0.62,-0.04l-0.47,-0.48l-3.58,-1.19l-0.51,0.14l0.08,0.53l0.58,0.48l3.52,2.17l-0.17,0.39l-0.49,-0.41l-0.97,-0.02l-0.42,0.2l0.01,0.34l-0.95,0.34l-0.3,0.85l0.81,0.74l-0.33,0.5l-0.6,0.02l-0.24,0.51l-1.17,-0.68l-0.29,0.48l-0.38,-0.11l-0.51,0.37l0.15,0.47l0.91,0.72l-0.58,0.06l-0.12,0.57l-1.72,-0.71l-0.48,0.61l0.55,0.71l-0.52,0.41l0.0,0.75l1.48,0.65l0.15,0.47l-0.35,0.17l-0.06,0.59l0.5,0.75l-0.94,0.27l-2.33,2.14l-0.8,0.09l-1.42,2.04l0.19,1.66l0.96,0.33l0.02,0.67l-0.63,0.23l-1.46,-0.58l-0.43,0.57l0.86,1.7l-0.83,1.09l0.32,1.46l-0.9,0.8l-1.03,2.78l-1.06,0.83l-0.64,1.83l0.06,0.76l-0.95,1.43l-0.28,1.75l-1.44,-0.29l-0.49,0.23l-0.08,0.62l-0.78,0.49l1.17,0.74l0.47,1.38l-1.03,2.38l0.22,1.29l-0.39,0.88l0.08,1.0l-0.53,0.41l-0.4,1.05l-33.99,-2.48l-33.79,-3.8l10.54,-78.34l0.16,-3.27l-1.13,-0.63l-11.88,-3.86l-18.57,-6.61l-25.7,-9.97l-1.81,-1.05l-2.03,-2.19l-7.01,-13.93l-14.83,-3.67l-12.27,-15.45l-13.32,-18.01l-12.5,-18.28l-10.27,-16.15ZM431.55,497.53l0.31,-0.12l0.17,0.01l-0.2,0.26l-0.28,-0.15ZM459.97,461.11l0.41,0.12l0.06,0.53l-0.42,-0.04l-0.04,-0.61ZM466.33,460.55l0.16,0.24l-0.01,0.0l-0.15,-0.24ZM457.44,422.81l-0.21,0.13l-0.28,-0.01l0.49,-0.12ZM510.55,414.28l0.09,0.15l-0.04,0.09l-0.06,-0.23ZM452.71,352.12l0.03,0.15l-0.01,0.1l-0.08,-0.08l0.07,-0.17ZM410.05,384.51l0.12,0.01l-0.05,0.33l-0.07,-0.28l-0.01,-0.06ZM408.32,373.23l-0.03,-0.49l0.36,-0.47l-0.09,0.57l-0.23,0.4ZM318.64,387.32l0.17,-0.15l0.1,-0.2l-0.02,0.64l-0.25,-0.3ZM318.94,386.46l-0.03,-0.21l0.0,-0.15l0.04,0.09l-0.01,0.27ZM321.06,364.45l0.05,-0.18l0.03,-0.08l0.11,0.08l-0.19,0.18ZM329.96,363.12l-0.02,-0.07l0.05,-0.02l-0.02,0.09ZM343.89,363.99l-0.01,-0.29l0.6,-0.07l-0.05,0.13l-0.54,0.22ZM393.29,373.56l-0.08,-0.14l0.13,-0.03l-0.03,0.08l-0.02,0.08ZM393.36,373.34l0.07,-0.35l0.01,-0.02l-0.02,0.16l-0.07,0.2ZM431.18,350.11l0.25,-0.55l0.38,-0.32l-0.44,0.76l-0.19,0.11ZM427.74,295.54l-0.28,-0.5l-1.09,0.54l-2.24,-0.49l-0.57,0.24l-0.05,-0.78l0.27,-0.75l4.16,-0.81l0.19,0.78l0.47,0.35l-0.54,0.32l0.1,1.06l-0.41,0.05ZM524.18,151.95l-0.31,-0.7l1.09,-0.68l0.05,0.73l-0.83,0.65ZM520.3,200.25l0.21,-1.47l1.52,-2.11l0.89,-2.29l0.45,0.01l0.45,0.38l-0.01,0.52l-1.54,2.07l-0.21,0.77l0.31,1.0l0.68,0.66l-1.45,0.22l-0.62,0.7l0.01,0.56l-0.7,-1.0ZM420.43,181.62l0.62,-0.87l-0.12,-0.26l0.61,1.02l0.74,-0.23l0.77,0.53l0.67,-0.11l0.25,-0.84l-0.59,-0.28l0.66,-0.4l-0.11,-0.59l-1.42,-0.84l-0.59,-0.77l-0.57,-0.08l-0.08,-0.91l0.74,-0.14l0.39,-0.81l0.69,0.51l0.79,-0.67l0.42,0.07l0.53,-0.75l-0.33,-0.56l1.43,-0.16l1.18,-0.54l0.61,0.36l1.21,0.1l1.1,1.39l1.08,0.31l0.38,0.43l2.24,0.35l0.31,1.19l0.93,0.15l0.49,0.77l1.0,-0.0l0.77,-1.07l1.13,0.45l0.38,1.24l1.53,1.97l0.6,1.46l-0.84,3.95l-2.07,2.49l0.7,1.8l0.78,-0.03l0.3,-0.47l-0.59,-0.65l1.22,-0.88l1.63,-2.96l-0.03,-0.57l1.81,0.83l1.15,-0.54l0.96,0.52l1.39,-0.57l0.88,-1.01l2.88,-0.6l2.66,1.15l0.56,1.25l1.55,0.93l0.21,1.53l-0.52,0.16l-1.29,-0.61l-0.43,-0.79l-0.69,0.17l-0.29,0.65l-1.37,-0.9l-1.24,0.23l-0.33,0.39l1.0,1.43l2.43,0.35l1.98,0.83l0.76,0.64l0.58,-0.43l6.3,2.56l0.54,1.01l-0.8,1.13l-6.11,0.17l-0.27,0.43l-3.55,-0.91l-0.51,-0.68l-2.16,-1.05l-0.47,0.09l0.11,0.74l1.8,1.17l-0.87,1.04l0.22,0.54l0.63,0.1l0.57,-0.36l2.53,0.82l-0.13,0.53l-0.68,0.38l0.4,0.61l-1.39,-0.03l-0.63,0.45l0.06,0.61l0.45,0.23l-0.04,0.35l0.66,0.74l-1.13,0.97l0.03,1.86l0.32,0.37l0.54,-0.31l0.36,-1.43l1.24,-1.45l0.61,0.3l0.94,-0.69l-0.48,1.34l0.07,0.44l0.69,0.2l1.1,-1.51l0.31,0.54l0.62,0.17l0.44,-0.38l0.16,-0.85l0.75,0.45l0.75,1.32l-0.52,1.8l0.14,0.99l0.86,0.09l1.06,-1.42l0.76,0.96l0.76,0.34l0.09,0.43l-0.48,2.76l-0.64,0.38l-1.29,-0.1l-0.85,1.01l-0.08,0.71l0.79,0.81l0.97,-0.17l0.63,-0.76l0.88,0.04l0.58,2.19l1.33,1.51l1.1,-0.18l0.32,-0.42l0.04,-1.11l-0.83,-2.81l0.71,-0.81l0.06,-0.55l1.86,2.58l0.66,0.4l-0.56,0.98l0.98,0.87l1.65,-1.92l1.04,-0.67l1.11,1.8l-0.58,0.81l0.39,0.39l1.01,-0.17l0.45,-1.42l-0.54,-1.26l0.93,-1.27l0.7,0.48l0.36,1.04l1.75,1.74l1.38,0.04l0.9,0.88l-1.19,1.0l-0.12,0.48l0.43,0.23l1.29,-0.23l1.3,-1.0l1.02,-0.18l2.85,0.31l0.41,-0.42l-0.27,-0.56l-1.61,-0.38l-0.79,-0.85l-1.13,-0.39l0.55,-0.49l1.65,-0.56l0.47,-0.54l0.83,0.38l0.6,-0.27l0.78,0.21l0.5,-0.41l-0.36,-0.56l1.46,-1.38l0.81,-0.05l1.7,0.61l0.43,-0.3l0.0,-0.65l-0.7,-0.24l-0.07,-0.44l1.79,-0.55l0.71,-1.27l1.02,-0.43l0.51,-0.91l0.4,-0.06l0.8,0.56l0.66,-0.16l0.98,1.09l1.24,-0.18l0.48,0.26l2.88,-2.17l1.62,-0.66l6.9,0.84l-0.86,2.39l0.34,0.6l1.83,0.38l2.8,-0.86l0.35,0.42l0.67,0.03l1.39,0.89l-0.02,0.68l0.38,0.41l-1.7,1.15l-0.16,0.44l0.43,0.53l3.83,-0.52l0.4,1.14l0.81,0.46l-0.08,0.99l-0.45,0.8l0.23,0.56l0.68,0.19l-0.62,1.94l-1.15,0.29l-0.61,0.94l-0.12,0.99l-2.38,1.5l-0.22,0.7l1.13,1.01l0.06,0.7l-0.74,0.86l0.17,0.93l1.8,1.16l0.1,0.54l-0.72,0.82l0.74,1.02l-0.36,0.53l0.43,1.62l-0.33,0.76l-1.04,-0.02l-0.56,0.57l-3.59,0.03l-1.4,0.66l-2.42,2.46l-1.63,-0.24l-1.11,-0.67l-0.68,-0.05l-0.22,-1.01l-0.56,-0.28l-0.45,0.28l-0.09,0.71l-0.43,0.48l-0.82,-0.18l-1.04,-0.65l-1.16,-2.26l-0.11,-1.45l0.42,-1.04l-0.51,-1.31l-0.9,-0.15l-0.82,-0.5l-0.89,-1.16l-0.53,-0.06l-0.57,0.68l0.32,1.3l1.36,1.75l-0.71,4.18l-0.5,0.52l-2.57,0.31l-1.28,0.93l-2.03,0.15l-0.77,-0.44l-0.91,0.47l-0.44,-1.19l0.03,-2.55l-0.49,-0.71l-0.63,0.38l-0.32,1.27l0.34,2.55l-0.53,0.71l-0.65,-0.02l-0.94,-3.83l-0.66,-0.63l-0.53,0.61l0.54,3.14l-0.46,0.77l-2.58,0.37l0.09,-1.23l-0.56,-0.82l-0.08,-0.83l-0.51,-0.24l-0.56,0.5l0.04,1.45l-0.61,1.23l-1.4,-0.97l-0.61,-1.79l-0.72,-0.27l-0.32,0.41l0.07,1.69l0.93,1.46l-1.06,0.13l-0.41,-0.89l-0.68,-0.07l-0.22,0.84l-0.85,0.11l-0.38,-0.69l0.36,-0.58l-0.42,-0.53l-0.88,0.34l-0.4,1.26l-0.87,0.51l-0.26,-1.09l-0.49,-0.31l-0.81,0.91l-0.89,0.1l-0.26,-0.49l-0.7,-0.14l-0.33,0.53l-1.38,-0.34l-0.03,-2.5l0.74,-3.07l0.68,-0.64l-0.28,-0.42l-0.88,-0.1l0.12,-1.14l-0.49,-1.32l-0.43,-0.3l-0.59,0.36l0.09,0.81l-0.57,0.3l-0.69,3.45l-0.18,-1.92l-1.09,-1.3l-0.58,-0.11l-0.18,0.41l0.52,1.38l-0.13,0.8l-0.77,-0.66l-0.59,0.1l0.33,1.26l0.65,0.72l-0.25,1.63l-0.31,0.33l-1.04,0.01l-0.32,0.75l-0.91,-0.11l-0.58,0.47l-1.14,0.13l-0.42,-1.29l-0.5,-0.03l-0.45,0.65l-1.0,-0.68l0.06,-0.86l-1.62,0.41l-0.83,-1.03l0.07,-1.6l-0.41,-0.39l-0.98,0.32l-0.43,0.66l1.62,-2.82l-0.06,-1.44l-0.53,-0.32l-0.68,0.4l-1.44,2.73l-0.63,0.11l-0.39,0.88l-0.56,-0.03l-0.27,0.39l0.02,1.25l-0.45,-0.04l-0.69,-0.52l0.31,-0.55l-0.34,-0.72l-0.89,-0.22l-1.44,-1.47l0.36,-2.51l-0.31,-1.34l-0.84,-1.55l0.0,-0.83l0.9,-0.12l0.26,-0.31l-0.42,-0.95l0.21,-0.77l-0.59,-0.3l-0.96,0.39l-0.97,-1.66l0.42,-2.58l0.6,-0.73l-0.15,-0.58l-0.45,-0.11l0.38,-1.33l1.06,-2.19l0.66,-0.34l0.58,-0.83l-0.38,-0.83l0.34,-1.07l-0.84,-1.92l0.44,-1.44l-0.1,-1.55l-0.43,-0.71l-1.28,-0.76l-0.21,-0.78l-0.45,-0.32l-0.48,-1.12l-0.14,-2.73l-0.53,-0.76l-0.27,-1.33l-0.7,-0.59l-0.62,-1.36l-0.06,-1.36l-0.58,-0.68l-0.69,-0.15l-1.98,1.44l-0.45,-0.4l-0.45,0.11l-0.65,1.31l-1.32,0.09l-0.78,-0.57l-2.24,0.12l-0.43,-1.01l-0.43,-0.02l-0.41,-0.61l-2.91,-1.03l-0.33,-0.64l-0.99,0.32l-1.26,-0.4l-0.71,-0.86l-0.49,-1.5l1.28,0.15l0.56,-0.27l1.17,-2.1l-0.46,-0.51l-1.06,1.03l-0.91,0.17l-0.01,-0.56l-0.86,-0.18l-0.62,-1.38l-0.77,-0.19l-0.41,-1.23l-1.13,-0.56l-1.03,0.14l-0.19,-0.33ZM451.64,232.47l0.2,0.49l-0.18,-0.03l-0.02,-0.46ZM519.52,222.67l0.67,0.01l0.3,-0.74l1.12,-1.04l0.93,0.21l0.91,1.92l0.6,0.41l-2.49,1.36l-0.4,0.49l-1.28,-0.76l0.02,-1.18l-0.38,-0.68ZM455.43,199.69l0.61,-0.68l1.56,0.5l-0.2,0.22l-1.97,-0.04ZM431.2,193.09l-1.37,1.01l-1.29,-0.29l0.02,-0.49l1.44,-0.32l0.43,-0.6l0.46,0.03l0.32,0.66ZM521.01,346.84l0.26,0.12l-0.6,-0.0l-0.32,0.78l-0.2,-0.77l0.85,-0.13ZM521.4,347.02l0.93,0.01l0.12,0.67l-0.68,-0.07l-0.37,-0.61ZM519.42,369.27l0.08,-0.17l0.17,0.21l-0.24,-0.04ZM514.49,412.03l0.0,-0.0l0.0,0.0l-0.0,-0.0ZM514.67,412.23l0.25,0.63l0.65,0.04l0.46,0.43l0.54,-0.1l-0.22,0.67l-1.73,-1.07l0.07,-0.61ZM505.16,417.47l-0.03,-0.82l2.73,1.32l0.45,-0.06l0.16,0.55l2.41,1.63l0.11,1.35l-0.63,0.61l-0.0,0.58l-1.02,0.94l-1.01,-0.16l0.22,-0.72l-0.29,-1.85l-0.69,-1.45l-1.07,-0.84l-0.77,-0.06l-0.57,-1.01ZM512.09,423.78l0.53,0.2l-0.02,0.3l-0.57,0.11l-0.35,0.62l-0.41,-0.06l-0.04,-0.46l0.86,-0.71ZM512.96,424.68l0.64,-0.22l1.49,-0.08l-0.08,0.85l-0.44,0.51l-0.87,-0.66l-0.86,0.02l0.12,-0.43ZM512.86,421.59l0.72,-0.05l-0.36,0.47l-0.37,-0.42ZM512.54,339.29l0.85,-0.28l0.88,0.7l-0.13,0.13l-1.6,-0.55ZM509.23,194.49l0.2,-0.25l0.21,-0.1l-0.34,0.37l-0.08,-0.02ZM505.41,340.75l-0.75,-0.57l0.04,-0.62l1.46,0.3l-0.75,0.43l-0.0,0.46ZM499.85,419.2l0.52,0.39l0.5,-0.13l0.35,0.5l-0.05,0.68l1.48,2.0l1.39,3.84l-0.75,1.32l-0.63,-0.38l-0.43,-1.69l-1.54,-0.95l-0.49,-0.74l-0.75,-3.59l0.0,-0.77l0.39,-0.49ZM493.31,188.08l0.28,0.32l-0.08,0.36l-0.23,-0.13l0.04,-0.54ZM483.52,380.65l0.67,-0.83l0.13,-0.81l-0.21,-0.83l-0.81,-0.49l-0.21,-0.47l0.58,-0.94l0.02,-1.25l1.29,-2.23l1.7,1.75l-0.11,2.22l0.6,2.9l-0.21,2.26l-1.11,2.16l-1.73,-1.43l-0.61,-2.01ZM484.26,162.01l0.42,-0.54l1.29,0.04l0.41,1.15l0.59,0.47l-1.04,0.74l-0.12,-1.24l-0.73,-0.56l-0.81,-0.06ZM479.18,334.69l0.76,0.01l0.72,-0.57l1.82,0.89l1.27,-0.58l0.97,2.02l-1.78,0.37l-1.64,-0.88l-0.73,0.52l-0.98,-0.67l-0.41,-1.12ZM427.77,94.98l0.27,-1.04l1.22,0.23l1.58,2.02l1.66,0.75l2.27,0.53l1.49,-0.22l1.8,1.72l0.71,-0.12l-0.07,-1.04l-1.53,-2.32l1.04,-1.26l2.04,-0.47l0.28,-0.54l-0.32,-0.43l-1.53,-0.55l-0.51,-0.62l-0.49,0.02l-0.67,1.12l-1.16,1.05l-1.73,0.26l-0.95,-1.25l1.76,-0.53l0.36,-0.72l-0.13,-0.61l-0.59,-0.16l-0.52,0.52l-0.38,-0.02l-0.17,-0.43l-0.59,-0.06l-1.26,1.09l-1.42,-1.64l-0.89,-0.42l0.39,-1.21l0.99,0.11l0.05,-1.01l0.58,-0.25l1.6,0.63l1.03,0.79l0.57,-0.4l-0.16,-1.39l-0.97,-0.57l-0.46,-1.38l-1.04,-0.82l0.5,-0.41l0.24,-0.89l-0.35,-0.92l2.83,0.12l1.34,-0.35l1.75,1.38l1.46,-0.18l1.09,0.47l0.43,0.81l0.49,0.02l0.68,-0.57l-0.98,-1.99l-1.81,-0.95l-0.65,0.14l-0.37,-0.98l0.08,-0.59l2.29,-0.25l0.33,-0.54l-0.22,-0.59l-0.79,-0.19l-0.09,-0.47l-0.43,-0.24l-0.89,0.57l-0.53,-0.18l-1.14,-0.9l0.69,-0.71l-0.44,-0.87l-1.26,0.54l-1.23,-0.4l0.12,-0.39l1.22,-0.53l0.4,-0.53l-0.3,-0.6l-1.05,-0.2l0.81,-1.06l0.41,-1.84l1.29,-1.0l1.27,1.08l-0.15,1.11l0.69,0.56l0.53,-0.28l0.4,-0.76l1.71,-0.79l-0.15,-1.22l-1.04,-0.57l1.28,-0.11l1.29,0.95l1.89,-0.69l0.35,-0.73l0.17,-1.89l-0.74,-1.46l-1.56,-0.33l-1.47,0.36l-0.94,-0.39l-0.74,-0.85l0.69,-1.58l0.01,-0.89l1.83,0.73l0.57,1.15l0.83,-0.76l-0.19,-1.48l0.65,0.25l4.27,3.47l1.67,2.64l0.03,1.58l-0.54,0.38l0.08,0.45l1.58,2.67l0.05,1.18l1.5,3.26l0.33,2.1l1.72,1.38l0.43,1.3l-0.69,1.44l0.13,1.03l3.34,0.83l1.0,2.0l0.82,-0.11l-0.26,-1.63l1.61,-0.09l1.03,1.58l-0.84,1.74l0.33,0.58l0.36,-0.03l-0.07,1.31l-0.63,0.9l0.51,2.05l0.66,1.22l2.62,2.67l0.66,-0.16l0.3,-0.53l0.72,0.66l0.52,-0.32l0.36,0.98l0.48,0.39l1.0,-0.56l1.79,0.15l0.33,1.45l0.75,1.34l-0.86,0.65l-0.4,1.26l-0.74,0.59l-0.15,0.63l0.41,0.46l0.79,-0.18l1.22,-1.54l-0.58,6.24l-1.43,2.18l-0.05,0.94l0.36,0.77l0.79,0.39l0.5,-0.31l0.55,-1.76l0.49,-0.46l0.36,0.13l0.08,1.12l0.63,0.08l0.72,-0.98l-0.53,-1.25l0.22,-0.34l1.53,-0.13l1.13,1.76l-0.41,1.03l0.43,1.1l-0.44,0.91l0.63,0.75l0.63,-0.04l0.77,-2.0l0.25,-2.81l1.45,4.01l2.55,4.05l-0.0,0.59l-1.1,0.7l-0.56,1.1l-0.88,0.74l-4.99,2.97l-0.41,2.41l-0.29,0.19l-0.82,-2.36l-0.31,-0.23l-0.51,0.23l-0.12,2.12l0.35,1.83l-0.38,1.01l-1.35,1.8l-1.23,3.93l-0.88,-1.19l-0.62,-3.1l-0.01,-3.36l0.86,-1.09l0.2,-2.51l-0.74,-0.07l-0.73,1.99l-1.25,0.49l-0.29,1.37l0.01,3.91l0.52,2.92l-0.6,0.11l-0.47,0.64l0.43,0.7l0.56,-0.32l0.79,0.09l0.54,1.32l0.01,0.98l-0.55,1.68l-0.53,0.24l-1.61,-3.56l-1.26,-0.29l-0.63,0.4l0.24,1.93l1.14,3.26l-1.23,6.18l-0.61,-0.32l-1.0,-1.97l-0.59,-2.02l-2.34,-4.18l-0.79,-2.67l-0.53,-0.43l-0.56,0.18l-0.33,0.62l0.12,2.33l0.44,1.87l1.02,1.16l1.11,3.98l-1.18,-0.05l-0.09,-0.94l-1.2,-1.69l-1.01,-0.29l-1.17,0.31l-1.2,-0.15l-0.27,0.75l0.37,0.58l1.69,0.52l-0.14,0.89l0.49,1.36l-0.15,0.61l-1.23,-0.2l-1.35,0.21l-1.56,-0.79l-2.05,-0.4l-1.24,-1.3l-0.48,-0.07l-0.78,0.58l-0.64,-1.58l0.37,-0.7l-0.22,-0.44l-0.47,-0.21l-0.89,0.54l-0.63,-0.45l-0.1,-0.8l-1.3,-1.2l-0.38,-1.65l0.28,-0.21l1.46,0.33l0.74,-0.73l2.95,-0.62l0.86,0.49l0.55,-0.29l0.05,-1.03l-0.43,-0.4l-0.49,0.13l-4.38,-1.38l-0.81,-0.7l-0.67,0.1l-0.6,0.73l-1.14,0.23l-0.67,-1.1l0.51,-0.55l-0.11,-0.64l-0.97,-0.04l-1.04,-1.94l0.67,-0.03l2.14,1.28l0.87,-0.29l0.09,-1.05l-2.64,-2.05l-1.57,0.05l-0.31,-1.14l-1.48,-2.49l1.63,-1.14l1.69,-0.35l1.33,-2.87l2.16,0.72l0.8,-0.47l2.17,0.38l2.04,-0.23l2.53,-0.78l4.18,-0.63l1.03,-0.73l0.06,-0.6l-0.62,-0.54l-3.01,0.21l-1.66,0.56l-3.52,0.53l-2.43,-1.02l0.26,-0.96l3.07,0.27l1.37,-0.86l2.42,-0.48l0.39,-0.39l-0.05,-1.33l-0.59,-0.13l-2.79,0.77l-0.44,0.49l-3.09,-0.65l1.69,-1.4l-0.35,-0.85l-1.91,-0.0l-1.26,0.94l-0.56,-1.7l-0.52,-0.28l-0.54,0.36l-0.09,0.64l-0.81,0.08l-0.89,2.24l-0.39,-0.2l-0.46,0.22l0.02,1.27l-1.24,1.27l-0.63,-0.47l0.05,-0.83l1.68,-1.95l-0.44,-0.41l-1.11,0.12l-1.74,-0.96l-0.65,0.26l-0.05,1.36l0.28,0.17l-0.39,0.47l-2.34,1.55l-0.47,-0.19l0.35,-1.57l-0.51,-0.45l-0.28,-1.3l-0.7,0.05l-0.3,0.43l-1.03,-0.62l0.5,-0.81l-0.32,-0.72l0.18,-1.43l4.91,-1.61l2.03,-2.07l0.3,-2.61l-0.32,-0.52l-0.56,0.01l-0.34,0.87l-0.87,0.4l-0.19,0.68l-0.74,0.75l-1.95,0.74l-2.78,-0.29l-1.1,-2.17l-0.49,-0.32l-0.01,-1.33l-0.75,-1.13l0.17,-0.75l0.45,-0.45l0.71,-0.08l0.23,-0.63l-0.53,-0.83l-1.52,-0.59l-0.23,-1.34l1.14,-0.5l0.25,-0.41l-0.33,-0.35l-1.22,-0.01l-0.27,-0.93ZM443.8,113.87l0.28,0.85l-0.7,0.52l0.38,-0.96l0.04,-0.42ZM461.48,146.36l0.13,0.3l0.04,0.32l-0.12,-0.23l-0.04,-0.39ZM467.94,95.1l-0.47,-0.95l0.29,-0.52l-0.28,-0.92l-1.08,-0.44l-0.75,-1.59l0.06,-2.29l0.7,-1.35l3.12,0.6l0.09,0.38l0.55,5.34l-0.36,0.49l-1.5,0.62l-0.38,0.64ZM428.65,100.85l-0.38,0.08l-0.0,-0.39l0.24,-0.06l0.14,0.37ZM467.95,144.5l0.1,-1.31l0.38,-0.62l-0.14,0.96l-0.34,0.97ZM468.78,140.89l0.02,-0.58l0.13,-0.05l0.0,0.05l-0.16,0.58ZM453.23,161.28l0.5,-0.07l0.77,-0.83l2.87,0.68l2.74,3.45l0.26,0.55l0.03,2.25l0.38,0.77l-0.72,1.38l-1.41,1.41l-1.23,0.17l-0.11,-0.75l-2.86,-1.81l-0.9,-1.33l-0.47,-0.99l0.15,-4.88ZM459.14,188.77l-0.7,-0.78l-2.16,-5.38l0.28,-0.78l1.01,-0.69l1.58,-0.38l1.42,1.91l0.07,0.95l-0.73,0.85l-0.28,1.43l0.25,1.75l0.62,0.81l-0.54,-0.39l-0.59,0.06l-0.23,0.64ZM457.58,356.16l0.14,0.07l-0.06,0.19l-0.08,-0.25l-0.0,-0.01ZM455.83,351.11l0.05,-0.55l0.96,-0.9l0.46,0.74l0.43,-0.01l-1.07,2.13l-0.1,-0.72l-0.73,-0.7ZM421.83,269.74l0.48,-0.7l-0.15,-1.2l0.22,-0.51l0.89,-0.23l-0.3,-1.11l0.12,-2.99l-0.26,-0.6l0.3,-1.27l-0.42,-1.81l0.32,-0.7l-0.08,-1.33l0.69,-0.26l0.16,-0.47l-0.96,-1.52l0.29,-1.54l1.24,-0.77l0.17,0.34l0.72,-0.1l1.47,2.21l1.38,0.57l1.36,-0.07l0.32,-0.59l-0.37,-0.69l-1.14,-0.38l-1.36,-2.16l0.98,-0.76l-0.17,-0.53l-0.59,-0.51l-0.85,0.35l-0.54,-0.66l-0.12,-0.73l0.47,-1.74l2.55,-0.98l0.77,-0.82l1.73,0.05l0.55,-0.74l2.57,-0.04l0.41,1.09l0.68,0.41l0.56,-0.37l0.06,-1.69l2.47,-0.16l1.5,0.85l1.37,0.29l0.39,1.11l0.71,-0.28l1.18,0.83l0.76,1.32l-0.39,0.98l0.42,0.52l1.3,-0.14l0.39,-0.31l0.08,-0.66l1.43,-0.69l0.46,0.18l1.18,-0.33l3.56,0.65l4.04,2.08l0.38,-0.17l0.33,0.23l-0.07,0.27l-0.72,0.01l-0.29,0.45l-0.0,1.59l-2.62,5.22l-1.34,0.04l0.33,1.6l-1.65,3.1l-0.55,1.82l-1.86,0.4l-0.55,0.4l0.19,0.66l1.32,0.34l-3.2,7.7l-1.06,1.11l-0.52,1.08l-1.63,0.64l-5.37,-1.84l-0.78,-0.76l-0.72,0.49l-1.32,0.19l-3.56,0.14l-0.95,-0.24l-0.56,0.5l-0.05,1.51l0.48,0.21l0.64,-0.4l1.16,0.6l1.13,-0.0l-0.14,1.38l1.23,1.05l0.93,2.98l-0.58,0.61l-0.52,1.41l-1.34,0.93l-1.65,3.59l-0.43,1.79l-0.69,0.16l-0.4,0.84l-0.42,-0.29l-2.74,0.09l-2.11,0.69l-0.62,-0.41l0.13,-0.97l0.67,-0.66l0.02,-0.57l1.89,-0.52l0.29,-0.35l-0.84,-0.59l-1.68,0.45l-0.24,-0.64l0.46,-3.7l-0.36,-1.51l0.5,-0.08l0.15,-1.05l-0.45,-1.57l-0.64,-0.36l0.07,-1.37l-0.3,-0.76l-0.77,-1.19l-0.61,-0.21l0.04,-0.31l0.43,-0.08l0.02,-0.5l-0.22,-1.02l-0.66,-0.35l0.45,-2.58l-0.49,-1.85ZM431.01,292.59l0.04,-0.02l0.01,0.07l-0.05,-0.05ZM454.76,352.74l-0.33,-0.41l0.26,-1.19l0.62,1.43l-0.04,0.91l-0.26,0.07l-0.25,-0.82ZM453.11,471.02l0.19,0.06l0.17,0.16l-0.28,-0.02l-0.08,-0.2ZM447.02,341.38l0.79,-0.49l0.19,0.79l-0.27,0.56l-0.72,-0.86ZM446.66,468.82l0.04,0.02l-0.03,0.04l-0.0,-0.0l-0.01,-0.06ZM446.04,340.0l0.11,-0.11l0.26,-0.0l-0.36,0.11ZM425.5,160.21l0.49,-2.25l1.81,-1.24l1.48,-0.31l0.54,-0.62l0.02,1.13l0.51,0.52l1.76,-0.4l0.66,-0.74l2.7,0.52l0.3,0.41l1.57,-0.09l0.37,0.57l1.03,0.19l0.47,-0.77l0.65,-0.21l1.66,1.12l0.5,1.38l-1.11,0.32l-0.29,0.39l-0.09,1.16l-0.63,1.11l-0.21,2.13l-1.31,-0.35l-0.34,0.35l-0.52,-0.45l-0.63,0.21l-1.22,-0.71l-8.83,-0.54l-1.35,-2.81ZM419.43,222.82l0.2,-1.65l0.75,-1.77l0.4,0.08l0.22,-0.29l-0.03,-0.66l2.31,-0.56l0.07,-0.68l0.55,-0.3l0.08,-0.54l-0.75,-0.37l0.27,-0.52l0.23,0.14l0.84,-0.46l0.24,-0.64l0.7,-0.46l-0.08,-0.71l-0.69,-0.49l0.23,-0.91l1.79,-1.27l0.28,0.25l0.54,-0.2l0.25,-0.76l0.83,0.15l1.57,-1.09l2.61,0.99l2.17,3.93l1.14,1.59l0.64,0.37l0.05,0.47l-0.45,-0.01l-0.44,0.54l1.78,1.21l-0.53,1.41l0.6,1.82l-0.25,0.98l-0.86,0.8l0.17,0.58l0.6,0.02l0.4,1.35l-0.24,4.58l-0.78,0.52l0.6,0.57l-0.13,0.64l-0.56,0.6l-3.39,0.25l-0.81,-0.49l-1.09,0.57l-1.25,-0.11l-0.52,-1.16l-1.47,-0.02l0.15,-1.12l-1.59,-1.93l-2.06,-0.33l-0.25,-0.62l-0.56,-0.15l-0.37,0.45l0.06,-0.28l-1.44,-1.78l0.6,-0.63l-0.38,-0.86l0.3,-0.92l-0.31,-0.32l-0.73,0.08l-0.28,0.41l-0.55,2.09l-0.32,-0.23l0.55,-1.11l-0.12,-0.78l-1.46,-0.23ZM423.67,213.82l-0.12,-0.05l0.05,-0.1l0.03,0.01l0.04,0.14ZM433.58,79.03l2.22,0.14l0.49,1.16l-0.62,0.41l-1.02,-0.43l-0.89,-0.87l-1.79,-0.23l1.6,-0.17ZM416.34,136.36l0.3,-0.35l1.26,0.04l0.49,-0.68l-0.1,-0.97l-0.82,-0.91l-0.38,-1.02l0.11,-2.87l0.9,-0.83l3.13,0.78l0.51,0.65l1.75,1.11l0.41,0.91l0.93,0.51l0.7,-0.02l0.95,1.65l0.71,0.19l-0.63,1.81l0.15,0.41l1.8,1.36l0.6,-0.03l0.79,-0.78l0.94,0.36l2.76,3.08l-0.08,1.03l-2.91,2.52l0.37,0.9l1.07,0.6l0.11,0.78l0.87,1.3l-0.07,0.95l-0.9,2.19l-1.57,-0.19l-0.44,0.55l-1.95,1.05l-2.63,0.71l-0.06,-0.7l-0.92,-0.34l-0.69,0.61l-0.65,0.08l-0.05,1.0l-0.78,0.91l-0.66,-0.34l-0.0,-1.2l0.75,-1.23l-0.18,-0.48l-1.67,-0.96l-0.47,-0.94l-1.21,-0.97l0.27,-0.99l3.77,0.54l0.55,-0.78l-0.01,-1.08l-2.74,-2.31l-0.91,0.02l-0.92,-0.39l-0.2,-1.24l-1.04,-0.99l0.29,-0.59l-0.28,-0.89l0.23,-0.89l-0.93,-0.57l-0.56,-0.87l-0.07,-1.19ZM432.67,201.01l0.19,2.46l0.62,2.14l-1.67,0.27l-0.48,-0.62l-0.05,-2.39l-0.41,-1.08l1.79,-0.78ZM430.12,501.31l0.96,-0.01l0.44,0.57l-0.36,0.42l-0.49,-0.85l-0.56,-0.13ZM423.39,233.69l0.63,-0.4l0.07,-0.68l0.56,-0.1l0.61,0.53l0.83,1.95l-0.18,0.21l-2.0,-0.89l-0.51,-0.62ZM417.6,212.21l-0.01,-0.76l1.61,-1.09l0.76,-0.04l-0.24,0.78l0.18,1.15l-1.18,0.75l0.15,0.81l-0.6,0.23l-0.36,-0.28l-0.31,-1.56ZM421.46,209.34l0.11,-1.05l1.96,1.73l-0.02,0.39l-0.55,0.26l-0.77,1.3l-0.81,-1.09l0.37,-1.08l-0.28,-0.46ZM421.74,297.82l0.27,-0.12l0.0,0.05l-0.27,0.08ZM422.35,296.54l-0.3,-0.28l0.46,-0.16l-0.15,0.44ZM389.32,351.88l0.51,0.4l1.44,0.15l1.01,-0.75l1.02,0.07l0.81,-0.73l0.32,-1.55l0.58,0.4l0.61,-0.56l0.91,-0.16l0.14,-1.27l-1.28,-2.05l0.07,-0.19l0.61,0.31l0.66,-0.29l-0.03,-0.64l-1.01,-0.85l0.13,-0.8l0.88,0.34l0.57,1.52l1.06,0.88l0.08,0.65l0.59,0.28l0.66,-0.31l0.18,-0.77l-2.25,-3.41l0.79,-2.88l0.5,-0.74l0.8,-0.26l0.81,-1.47l0.31,-0.08l1.31,0.89l0.27,1.08l1.42,0.84l0.46,1.11l-0.54,0.13l-0.38,0.69l0.66,1.71l0.24,0.2l0.6,-0.23l0.58,-1.54l0.87,2.19l1.32,1.95l0.85,0.26l0.47,0.8l1.2,0.59l2.15,2.52l0.23,0.86l-0.68,1.93l-0.02,2.57l0.77,0.85l0.75,-0.36l-0.16,-1.17l0.38,-2.07l0.53,2.02l-0.4,1.12l0.81,1.59l0.1,2.03l0.36,0.29l0.71,-0.21l0.18,0.86l0.49,0.36l0.8,-0.15l1.41,-1.22l0.64,0.63l-0.43,0.92l-1.47,1.44l-0.42,-0.7l-0.44,-0.09l-1.61,0.33l-0.77,2.34l-0.47,-0.21l-0.57,0.2l-2.45,2.86l-1.47,0.43l-2.91,-1.81l-1.27,-1.48l-0.32,-0.06l-0.46,0.51l0.24,0.89l-0.23,0.15l-1.46,-0.8l-0.66,0.12l-2.02,-2.6l-2.0,-1.12l-0.64,0.25l-0.51,-0.54l-0.37,-0.76l0.39,-1.34l-1.03,-1.12l-0.32,-0.11l-0.64,0.41l0.01,1.38l-0.33,0.51l-0.47,-0.99l-0.44,-0.24l-0.6,0.16l-0.84,-0.83l0.57,-1.76l-1.34,-1.01l-0.45,0.01l-0.37,0.63l-0.84,0.05l0.3,1.29l-0.62,0.2l-1.39,-1.1l-0.1,-1.13l-0.77,-1.73l1.01,-1.65l0.72,0.14l0.43,-0.42ZM414.79,346.68l0.44,-0.57l0.05,-0.57l0.3,-1.06l1.01,-0.52l0.15,0.42l0.6,0.06l1.43,1.8l-0.36,2.41l-0.8,1.03l-0.84,0.08l0.04,-0.75l0.51,-0.5l0.04,-2.23l-0.18,-0.91l-0.59,-0.67l-0.75,-0.06l-0.43,0.52l0.26,1.87l-0.55,1.17l-0.32,-1.5ZM415.07,348.28l-0.2,0.62l0.01,0.28l-0.08,-0.53l0.28,-0.37ZM411.44,98.32l0.33,-1.33l-0.06,-1.8l0.73,-1.46l1.24,-1.13l0.58,0.21l0.71,0.96l1.52,-0.38l0.76,1.21l0.4,2.99l-0.44,1.72l0.3,3.01l-0.67,1.82l-1.8,-1.46l0.27,-2.18l-1.22,-1.67l-2.43,0.15l-0.23,-0.65ZM374.78,271.19l0.15,-1.85l1.27,-1.98l0.55,-1.94l0.48,-0.66l2.36,-0.71l1.55,1.82l-0.34,0.83l0.39,1.03l0.68,0.99l0.56,0.12l0.22,1.9l0.49,0.66l-0.18,0.65l0.47,0.74l1.29,0.49l0.49,0.52l1.58,0.06l0.68,-0.72l0.01,-0.4l1.14,-0.03l1.2,0.51l1.05,-1.22l0.12,-1.68l1.82,-0.35l0.03,-0.82l0.38,-0.53l-0.5,-1.09l0.18,-0.82l-0.41,-0.96l0.14,-0.49l-0.57,-0.66l0.24,-0.76l-0.97,-0.3l-0.87,0.71l-0.41,-0.77l0.78,-0.72l0.06,-0.81l0.52,-0.73l0.47,0.0l0.27,0.73l1.42,1.47l1.64,-0.08l0.32,-0.32l-0.07,-0.62l-1.04,-0.25l-0.62,-0.65l-1.19,-2.97l-0.71,-0.9l-0.08,-0.74l-0.83,-1.12l0.58,-2.35l-1.21,-1.14l-0.87,0.1l0.29,-0.74l-0.33,-0.49l-0.85,-0.27l0.61,-2.28l0.62,-0.18l0.9,0.24l0.62,-0.74l1.09,0.32l1.89,1.7l0.23,0.85l0.69,0.01l0.58,-1.72l0.83,-0.9l0.31,0.43l1.15,0.47l1.58,2.23l-0.29,0.59l0.71,0.75l0.58,-0.42l0.18,-0.95l1.36,-0.09l0.52,0.63l0.91,-0.84l3.77,-0.59l1.14,-0.84l0.26,-0.54l0.62,0.59l1.21,-0.69l0.81,0.75l1.16,0.18l1.5,2.73l-0.26,1.97l-1.21,0.85l-0.35,0.67l-1.17,-0.78l-0.51,0.4l0.01,0.85l-0.96,-0.32l-0.62,1.66l0.6,1.01l1.15,-0.71l0.5,0.55l0.9,-0.05l-0.5,0.73l0.51,0.57l-0.16,0.49l-0.57,-0.08l-3.06,1.19l-3.76,4.71l-2.05,1.75l0.35,0.67l-0.23,2.58l0.36,0.6l0.59,-0.24l0.22,-0.91l0.95,-1.48l1.76,-1.18l1.87,0.33l2.34,1.76l-0.22,1.33l-0.72,0.08l-0.36,0.52l0.31,0.42l1.02,0.38l0.34,1.35l0.49,0.18l0.18,0.67l-1.14,1.5l-0.13,1.04l0.33,0.62l1.04,-0.04l1.12,-1.36l1.35,-0.67l0.38,-0.02l0.74,1.45l0.17,1.66l-0.21,0.46l0.63,1.16l0.09,1.39l-0.44,0.09l-0.52,0.87l-1.34,0.98l-1.3,-0.26l-0.36,0.62l1.76,1.4l0.5,2.45l-0.19,1.19l-2.27,0.61l-0.18,0.67l1.48,0.8l0.92,-0.26l-0.21,0.9l-0.63,-0.1l-1.17,1.13l0.45,0.76l1.41,-0.51l-0.71,1.85l-0.1,-0.74l-0.63,-0.17l-0.83,0.85l-1.07,0.25l-1.03,2.19l-0.76,0.59l-1.69,0.9l-1.31,-0.13l-0.61,-0.66l-1.31,-0.44l-1.27,0.17l-0.48,-0.37l-0.54,-1.24l1.3,-3.44l-0.79,-0.72l-0.29,0.11l-0.16,0.76l-1.24,1.51l-0.62,1.81l0.09,0.41l0.55,0.21l0.08,1.18l1.9,2.92l-1.02,1.91l-2.48,2.43l-0.91,-0.15l-0.38,0.34l-1.19,-2.37l-0.67,-0.1l-1.09,0.67l-0.7,-3.87l0.18,-1.2l-1.18,-0.97l-0.52,-3.21l-0.82,-1.07l-0.16,-1.16l-1.32,-0.51l-0.32,-0.47l-1.7,-3.7l0.07,-1.02l-0.42,-0.23l-0.03,-0.65l-0.85,-1.42l-1.04,-0.68l-0.87,-0.1l-0.5,0.37l0.07,-1.82l-1.28,-1.57l-0.91,0.21l-0.89,0.94l-0.86,-0.95l-1.09,-0.07l-0.38,-0.95l0.82,-0.69l-0.35,-0.7l-0.46,-0.11l0.0,-1.42l-1.24,-1.46l-1.58,-1.23l-1.76,-3.24ZM390.55,268.8l-0.03,-0.05l0.05,-0.05l0.03,0.02l-0.05,0.08ZM391.26,258.16l-0.13,1.15l-2.76,1.04l-0.5,-0.37l-0.53,-1.17l-1.27,-0.83l-0.04,-0.89l-0.77,-0.56l-0.6,-1.14l0.9,-1.31l1.09,-0.01l0.35,-0.89l1.65,0.33l1.12,3.12l0.65,0.37l0.36,0.93l0.47,0.23ZM395.86,246.94l-1.15,1.05l-0.61,-0.19l-0.16,-0.44l0.27,-0.56l0.84,-0.53l1.19,0.17l-0.38,0.51ZM383.77,205.23l0.5,0.09l0.47,-0.44l-0.1,-1.22l0.74,-0.18l0.18,-0.7l1.21,0.25l1.04,0.8l0.89,-0.46l-1.01,-1.33l0.62,-0.42l0.02,-0.79l-0.44,-0.25l-0.96,0.16l0.59,-1.18l2.2,-0.44l0.19,0.67l1.47,1.59l0.06,1.16l1.11,0.73l0.42,-0.02l0.74,-0.76l1.12,-0.16l0.51,-0.52l0.08,-0.45l-0.4,-0.23l-2.14,0.59l-0.0,-1.51l-0.29,-0.43l-0.65,-0.12l-0.09,-1.13l1.71,-1.64l0.21,-0.41l-0.29,-0.55l-2.37,0.42l-0.43,-0.71l-0.17,-1.33l0.32,-0.87l0.79,-1.06l1.24,-0.51l1.04,-0.92l0.09,-0.48l-0.44,-0.21l-2.22,0.5l-0.43,-0.28l-1.14,0.02l0.38,-0.39l0.29,-1.99l0.64,-0.46l-0.4,-0.93l1.17,-0.93l1.9,0.7l0.46,0.6l1.07,1.88l-0.53,2.31l1.53,1.03l0.93,1.78l-0.66,0.57l-0.02,0.46l2.18,1.08l1.1,2.81l-0.34,0.81l0.87,0.32l0.08,0.68l0.35,0.29l0.91,-0.75l2.34,-1.06l0.37,-0.86l-0.68,-0.41l-1.87,0.53l0.14,-0.38l-1.03,-1.91l-0.27,-1.66l0.3,-0.33l2.01,1.03l1.72,-0.63l0.33,-0.78l-0.43,-0.19l-1.45,0.33l-1.45,-1.62l-1.17,0.14l-1.42,-1.07l0.11,-0.5l3.22,0.42l0.33,-0.21l-0.05,-0.7l-0.36,-0.16l0.13,-0.62l-0.82,-0.32l-0.61,-1.44l-0.45,0.17l-0.51,-0.44l-1.8,-0.04l-1.23,-2.57l1.37,-0.44l0.53,-1.09l2.08,-1.34l2.12,1.16l0.39,0.02l0.59,-0.55l0.16,0.01l-0.2,0.83l0.76,0.32l1.32,2.38l-0.15,1.12l0.46,0.94l0.63,0.43l0.54,-0.33l-0.22,-0.93l0.86,0.61l0.69,-0.38l-0.07,-1.17l-0.76,-1.67l0.23,-1.16l0.36,-0.21l0.41,0.93l0.62,0.04l0.27,-0.55l0.75,-0.03l0.34,-0.33l0.26,1.46l1.67,1.11l1.4,0.51l0.5,0.54l-0.07,1.37l-0.88,2.32l0.33,1.55l0.98,1.91l-0.05,1.08l-1.22,3.87l0.26,2.81l-0.65,1.32l-1.67,1.18l0.25,0.77l2.72,1.22l0.11,0.51l-0.58,3.27l-1.37,-1.71l-2.28,2.1l-0.15,1.14l1.02,0.43l-1.01,0.13l-0.97,2.26l0.38,1.16l1.4,0.73l0.43,0.59l-0.34,0.65l0.12,0.42l0.54,0.28l0.41,0.74l-0.73,0.28l-0.94,-1.01l0.01,-1.37l-0.71,-0.43l-0.87,1.75l0.3,0.88l0.67,0.69l-0.02,1.48l-4.23,0.38l0.0,-0.4l-0.46,-0.22l-0.03,-0.96l-0.5,-0.29l-0.71,0.3l-0.14,1.04l-1.93,0.15l0.86,-2.32l-0.15,-0.74l-0.84,0.16l-1.17,1.92l-0.24,1.09l-4.37,-1.23l-0.14,-0.34l0.29,-2.82l-0.76,-1.01l0.47,-0.31l2.3,0.38l0.55,-0.3l0.08,-0.47l-1.72,-0.92l0.36,-0.69l-0.45,-0.55l-1.4,0.3l-0.45,-0.63l1.35,-0.74l0.01,-0.51l-0.56,-0.86l3.07,-0.16l0.54,-0.85l-0.09,-0.7l-0.56,-0.21l1.3,-0.09l0.3,-0.63l-0.2,-0.21l0.89,-0.23l0.48,-0.64l-0.75,-0.88l4.91,-0.17l0.58,-0.46l-0.25,-0.89l-3.61,0.21l-0.41,-0.32l-5.51,0.71l-0.52,-0.2l-3.1,0.47l-1.04,0.48l-1.31,-0.58l-3.7,0.92l-0.9,-0.24l-1.18,0.17l-1.18,0.6l-0.43,-0.81l0.21,-0.63l-0.24,-0.45ZM414.36,266.83l0.45,0.33l0.47,-0.16l0.16,1.43l-0.9,1.89l-1.18,0.2l-0.67,-1.27l-0.07,-2.15l0.62,-1.15l1.01,-0.67l0.38,0.38l-0.27,1.17ZM414.02,274.95l-0.9,-0.23l-0.15,-0.37l0.49,-0.5l0.1,-0.82l0.81,-0.84l-0.26,0.71l0.39,1.28l-0.49,0.75ZM411.43,235.03l-0.36,-0.31l0.19,-0.46l0.86,-0.66l0.9,-1.59l0.33,0.01l0.4,0.46l-0.71,1.5l-0.64,0.12l-0.97,0.93ZM410.06,345.07l1.51,0.05l0.61,0.71l0.95,-0.39l0.17,1.41l-0.45,1.89l-0.93,-1.78l-1.28,-0.8l-0.58,-1.09ZM382.97,135.74l-0.59,-2.3l0.01,-1.42l0.39,-0.64l0.86,-0.74l0.61,0.01l2.71,2.01l1.67,0.22l0.66,0.66l0.55,0.07l0.67,-0.79l0.05,-1.1l0.58,-0.39l0.01,-1.18l-0.45,-0.41l-2.55,-0.27l0.4,-0.4l2.02,0.24l0.44,-0.45l-0.09,-0.73l0.84,-0.11l0.34,-0.94l-0.42,-1.23l-0.52,-0.32l-0.83,0.28l-0.01,-0.67l-0.5,-0.27l-0.61,-0.22l-0.47,0.23l-0.37,0.97l-0.54,-0.55l2.05,-1.88l0.29,-0.74l-0.83,-1.4l-0.08,-1.1l-0.98,-0.62l-1.67,0.95l-1.01,2.32l-1.24,1.23l-0.45,0.0l0.1,-0.62l0.88,-1.09l1.46,-2.92l-0.0,-0.8l-1.31,-1.09l-2.53,0.6l-0.45,-0.29l0.45,-3.63l0.53,-1.4l0.88,-1.2l-0.07,-0.85l1.1,0.94l6.94,-0.52l1.44,1.75l0.65,0.01l0.49,0.41l0.69,1.58l-0.09,1.48l1.06,2.6l-0.57,2.15l-0.72,1.05l0.33,0.63l0.61,-0.07l-0.36,0.76l0.38,1.11l0.7,-0.12l0.87,-1.41l0.25,-1.95l1.49,-0.62l0.89,-0.97l0.93,0.3l1.44,2.91l1.25,0.73l-1.32,2.83l0.06,0.88l0.78,0.34l0.19,0.56l0.46,0.26l1.07,-0.57l0.72,0.1l1.01,-0.62l0.22,1.34l1.35,1.15l0.29,0.76l-0.77,0.86l-0.14,0.89l0.78,0.56l0.5,-0.14l0.4,0.76l0.72,0.04l-0.64,1.05l0.21,0.33l-0.5,1.14l-1.11,1.04l0.43,1.71l-0.46,1.99l0.47,0.65l0.88,0.07l0.33,1.97l0.66,0.82l1.4,3.18l-0.19,1.25l-0.82,1.09l0.24,1.78l-0.76,0.83l-3.18,0.26l-0.72,0.75l-3.03,-2.19l0.06,-0.78l-0.78,-2.96l0.56,-1.61l-1.09,-1.69l-0.14,-1.87l-0.46,-0.22l-0.92,0.33l-0.96,-1.37l-3.26,-1.74l-2.35,0.82l-0.76,-0.98l0.11,-0.74l0.74,-0.74l-0.29,-1.0l-3.53,0.22l-0.99,0.46l-0.9,0.01l-1.38,0.96l-0.37,0.67l-2.15,-1.04l-1.32,-2.23ZM402.3,245.78l0.83,-0.17l0.64,-0.53l1.52,0.08l2.32,-1.24l2.75,-0.09l-0.31,1.26l-0.78,1.12l-1.31,0.76l-0.9,1.24l-2.94,0.62l-0.22,-0.46l-0.67,-0.08l-0.2,0.26l-0.48,-0.32l-2.29,-0.19l-0.71,-0.52l0.06,-0.4l1.73,-0.52l0.87,0.11l0.12,-0.96ZM404.64,335.96l0.28,0.24l-0.19,0.49l-0.18,-0.17l0.08,-0.57ZM400.12,384.21l0.18,-0.59l0.82,-0.41l-0.03,0.27l-0.97,0.73ZM393.8,182.29l0.81,-0.68l1.53,-0.23l1.01,-0.86l0.46,-0.91l1.76,-0.32l1.38,0.5l-5.02,2.71l-0.88,0.31l-1.05,-0.51ZM393.1,153.37l0.12,-0.43l-0.41,-0.98l0.08,-1.05l0.43,-0.8l3.57,0.04l2.26,1.78l1.09,2.26l-2.23,-0.06l-0.62,-0.32l-1.53,1.08l-1.75,-0.58l-1.01,-0.95ZM390.55,142.8l-0.47,-0.22l0.1,-0.79l1.29,-1.78l0.47,-0.09l0.13,1.23l-1.53,1.65ZM381.06,200.78l0.49,-0.39l0.1,-0.71l1.3,-0.07l-0.34,-0.8l0.48,-0.76l4.85,-1.31l0.73,0.88l-2.31,0.72l-0.98,2.08l-0.55,0.45l-0.5,-0.27l-0.34,0.28l-0.66,-0.1l-0.22,0.31l-2.06,-0.3ZM378.25,196.4l1.13,-0.61l1.41,0.02l2.27,-1.2l3.84,-0.41l0.31,0.33l-0.14,0.8l-7.87,1.78l-0.94,-0.39l-0.01,-0.32ZM376.08,190.42l0.51,-0.09l0.37,-0.74l0.96,0.03l1.65,-0.6l1.35,0.13l5.02,-0.61l0.58,1.84l-0.32,1.29l-0.74,0.97l-0.9,0.66l-2.34,0.44l-3.2,-0.16l-0.2,-0.51l-2.69,-0.94l-0.05,-1.71ZM383.08,318.64l0.75,-0.08l0.69,0.85l-0.37,0.89l0.52,0.79l0.07,0.8l-0.72,-0.23l-1.1,-1.19l0.16,-1.82ZM376.48,180.64l0.14,-0.82l1.71,-1.08l1.59,0.1l0.19,0.43l-0.93,1.4l0.03,0.52l0.66,0.24l0.6,-0.21l0.59,-0.72l0.65,1.08l0.05,1.03l0.98,0.89l0.62,0.1l0.21,0.64l0.85,0.33l0.05,0.64l-1.9,1.61l-2.86,-0.1l-2.5,-0.58l0.38,-0.74l-0.37,-0.87l0.38,-1.61l-0.3,-0.9l-0.57,-0.15l0.14,-0.53l-0.41,-0.71ZM382.87,351.88l0.5,1.7l-0.24,1.27l-0.56,-0.41l-0.39,-0.96l0.19,-1.09l0.5,-0.51ZM378.76,357.87l0.32,-2.26l0.42,-0.71l-0.17,-1.01l0.44,-0.58l0.86,0.43l0.19,1.04l0.98,1.16l-0.5,1.2l0.11,0.66l-0.35,0.55l-0.68,0.19l-0.41,0.77l-0.05,-1.51l-0.61,-0.22l-0.56,0.3ZM380.85,368.37l0.1,-0.05l-0.02,0.19l-0.08,-0.14ZM374.14,155.27l0.21,-2.42l-0.8,-2.01l0.8,-0.65l0.99,0.44l0.58,0.86l1.89,4.93l0.03,1.06l-0.4,0.64l-0.16,1.45l1.37,0.18l1.17,2.66l-0.18,0.71l0.34,0.43l-0.01,0.7l-0.85,1.86l-0.9,0.06l-0.5,0.4l-0.78,-1.62l-1.22,-0.12l0.13,-0.76l-0.71,-1.63l0.21,-0.27l-0.64,-0.77l0.21,-1.55l-0.35,-0.63l0.01,-1.53l-0.33,-0.43l0.58,-1.2l-0.67,-0.8ZM262.47,316.27l0.34,-0.22l1.12,0.46l0.61,-0.39l-1.96,-6.32l0.67,-1.78l29.24,8.27l-0.78,3.03l0.33,0.57l1.6,0.39l0.47,-0.27l1.21,0.25l0.57,-0.32l0.28,-0.67l-0.55,-0.7l0.35,-1.4l17.48,4.16l0.48,-0.3l11.63,-52.12l1.02,0.72l0.45,-0.55l-0.42,-0.8l0.69,-0.71l-0.54,-1.4l-0.24,-1.55l0.18,-0.81l0.81,0.54l0.91,-1.42l-0.36,-0.62l-0.9,-0.56l0.84,-3.76l0.49,0.81l0.68,-0.14l0.16,0.09l-0.66,0.45l-0.02,0.46l1.77,2.72l0.22,0.8l1.31,0.03l-0.22,0.72l0.89,1.23l-0.65,1.01l-0.12,1.31l1.49,0.42l0.49,-0.38l0.61,0.57l-0.0,1.22l-1.19,3.5l0.19,3.2l-0.22,1.41l0.7,0.67l-0.61,2.61l0.7,0.59l-0.36,0.57l0.2,0.65l0.53,-0.06l-0.76,0.93l0.12,1.0l-0.43,0.87l0.57,1.07l-0.58,0.75l0.71,0.62l0.63,-0.14l0.24,1.97l0.89,0.76l0.73,-0.02l0.66,-0.57l-0.5,-1.35l0.11,-0.47l0.57,0.49l0.46,-0.1l0.95,-1.25l2.02,-0.19l0.34,-0.55l-0.93,-1.07l0.96,-0.16l0.34,-0.89l-0.87,-0.81l-0.05,-1.22l-1.01,-0.89l-0.03,-1.0l0.38,-0.81l-0.2,-0.86l-0.61,-0.33l0.22,-2.55l0.4,-0.02l0.4,-0.69l-0.45,-1.3l0.23,-0.62l-0.26,-0.84l0.67,-0.65l-0.92,-1.26l0.65,-0.41l0.21,-1.11l-0.5,-1.17l0.21,-1.86l-0.25,-1.13l0.28,-1.02l-0.12,-1.87l0.37,-0.58l-0.2,-1.1l0.32,-0.72l-0.25,-0.96l0.41,-0.63l-0.51,-1.77l0.88,-1.09l1.54,0.68l0.58,-0.44l-1.25,-2.02l0.07,-0.53l0.29,0.08l0.47,-0.7l0.88,0.63l0.88,0.17l1.07,1.06l1.44,2.45l0.78,0.6l0.86,-0.52l-0.4,-1.36l0.32,-0.64l1.15,-0.22l0.52,1.8l1.16,0.69l1.15,3.08l1.46,1.27l0.95,-0.04l-0.08,0.98l1.0,1.42l0.39,1.62l-0.25,0.32l0.71,0.92l0.14,0.68l-0.45,-0.14l-0.38,0.59l0.3,0.98l-0.17,0.88l0.84,1.07l-0.49,0.76l-0.05,1.17l0.44,1.05l-0.06,0.9l-0.51,0.11l-0.15,0.45l1.27,6.09l-0.75,1.49l-0.03,0.87l0.63,1.99l-0.0,3.18l0.86,1.04l1.18,5.51l-0.52,1.49l0.4,1.04l-0.28,0.91l0.13,0.89l-0.7,-0.16l-0.58,0.46l-0.33,3.04l-1.42,1.39l-0.22,0.73l0.27,1.13l2.57,3.54l0.53,3.8l1.04,0.58l1.58,3.35l1.99,0.55l0.86,1.98l1.46,0.57l0.59,-0.41l1.2,0.86l1.63,1.49l1.31,2.18l0.55,0.1l1.0,1.5l1.19,0.26l0.48,-0.79l0.39,0.02l0.35,0.54l-0.46,0.82l-0.08,1.02l0.58,1.75l1.49,-0.09l0.39,-0.62l0.4,0.54l0.48,0.08l1.21,-0.95l-0.15,1.9l0.29,1.38l-0.44,2.07l0.43,0.9l-0.09,1.65l-0.72,1.31l-0.15,1.26l-1.32,-0.65l-0.67,0.31l-0.66,-3.2l0.48,-1.61l-0.57,-0.42l-0.55,0.52l-1.63,3.9l-0.92,-1.31l-0.6,-0.05l-0.31,-2.12l-0.58,-0.38l-0.43,0.24l-0.04,-1.44l-0.73,-0.32l-0.41,0.42l-0.06,0.89l-0.59,0.26l-0.22,0.59l-1.04,0.38l-0.53,0.69l-0.48,-0.51l-0.55,0.22l0.26,1.51l0.78,0.74l-0.26,1.54l-0.39,0.73l-0.94,-0.2l-0.6,0.2l-2.17,-1.88l-0.77,-1.75l-0.7,-0.11l-0.5,-0.54l-0.75,0.27l-0.57,1.77l0.21,0.51l1.76,1.56l0.29,2.37l0.48,0.31l0.4,-0.29l0.06,0.36l-0.47,1.0l-0.33,2.26l-1.53,1.25l-0.23,1.27l0.19,0.67l0.83,0.07l3.22,-5.13l2.26,-0.4l0.69,-1.2l1.16,-0.27l1.41,0.46l0.57,1.19l-0.6,0.74l-0.6,-0.16l-0.61,0.35l-0.19,0.91l0.88,0.86l-0.73,-0.42l-0.47,0.19l-0.23,1.51l0.79,1.13l0.6,0.1l1.0,-1.4l0.8,1.26l-0.15,1.22l-0.9,1.48l0.22,1.0l-0.75,0.25l-0.33,-0.59l-0.49,-0.14l-0.9,0.89l-0.99,0.11l-0.83,-0.36l-0.29,0.99l-0.81,0.73l-0.57,-0.08l-0.73,-0.79l-0.54,0.06l-0.25,0.47l0.21,0.79l-1.58,0.48l-1.41,-1.13l-1.54,0.16l-0.46,0.75l-0.83,-1.04l-0.68,0.11l-2.23,-1.32l-1.04,-0.01l-0.64,-0.67l-0.13,-1.19l-0.49,-0.23l-0.48,0.33l-1.02,-0.36l-1.12,1.34l-3.67,-1.26l-0.44,-0.87l0.42,-0.51l0.84,0.21l0.39,-0.59l0.89,-0.46l0.07,-1.33l-1.14,-0.77l-0.63,0.07l-0.18,0.42l-1.9,-0.84l-0.64,-1.26l-2.42,-0.91l-0.98,0.41l-0.62,-0.34l-0.85,0.03l-1.13,-0.9l0.18,-0.56l1.13,-0.89l0.18,-2.67l-1.17,-2.34l-0.63,-0.51l-0.57,0.07l-1.24,1.02l-0.36,1.29l-1.64,0.17l-0.44,0.87l0.03,2.26l-1.95,1.24l-1.64,2.04l-1.04,0.42l-3.64,0.38l-1.98,-0.24l-0.74,-0.56l-1.6,-0.22l-0.57,0.31l-0.2,1.17l-3.95,2.3l-2.46,0.08l-2.36,0.7l-4.52,-0.72l-1.13,0.66l-0.42,-0.66l-1.03,-0.4l-0.99,0.46l-0.8,-0.06l-0.15,-0.53l-0.49,-0.28l-1.77,0.25l-2.42,-0.49l-0.27,0.61l0.33,0.46l-0.96,-0.57l-5.64,-0.97l-0.98,0.22l-1.61,-0.49l-1.27,0.6l-1.79,-0.57l0.13,-0.55l-0.32,-0.87l-1.54,-1.6l-0.33,-1.07l0.21,-1.24l-0.95,-2.35l0.51,-0.81l-0.15,-1.07l1.06,-1.01l0.32,-1.61l0.35,-0.3l-0.49,-1.01l0.3,-1.25l-0.2,-0.28l1.27,0.35l-0.11,-0.95l-2.26,-1.51l-0.3,-0.67l-1.49,-0.29l-0.78,-0.94l-1.12,-0.4l-3.35,-0.19l-0.29,-0.58l-0.83,-0.38l-1.01,0.57l-0.4,-0.07l-5.16,-2.72l-0.36,-0.87l-2.9,-2.59l-0.34,-0.9l0.7,-0.64l-0.02,-1.81l-1.35,-0.46l-0.43,-0.47ZM296.56,348.77l0.63,0.22l-0.45,-0.1l-0.19,-0.12ZM366.43,318.73l-0.64,-0.33l-0.41,-0.68l0.04,-1.63l1.15,1.7l-0.13,0.94ZM282.87,346.74l-0.62,-0.06l-0.07,-0.11l0.28,-0.07l0.41,0.24ZM375.09,341.57l0.15,-0.39l0.23,0.67l0.99,0.31l0.56,1.07l-0.52,0.08l-0.53,1.04l-0.26,-0.31l0.57,-0.88l-0.05,-0.43l-1.15,-1.16ZM370.58,212.41l0.63,-0.81l-0.25,-0.62l0.65,-1.25l1.74,-1.62l1.28,0.15l1.48,1.77l-0.02,2.98l0.67,1.48l-1.81,1.97l-2.25,0.64l-1.81,-0.94l-1.43,-1.88l1.13,-1.86ZM372.31,349.42l-0.69,-0.62l0.14,-0.26l0.41,-0.04l0.14,0.92ZM365.73,358.82l1.94,-1.29l0.43,-1.11l1.72,1.01l-0.26,2.28l-0.91,-0.23l-0.19,1.24l-2.73,-1.91ZM369.18,337.84l-0.03,-0.16l0.09,-0.51l-0.05,0.67ZM337.82,214.18l3.33,-14.86l4.92,2.08l0.83,0.69l0.52,-0.53l-0.01,-1.39l0.62,-0.25l-0.09,-0.68l0.49,-0.66l-0.15,-1.21l0.44,-0.26l-0.04,-0.72l-0.58,-0.34l-0.72,-1.28l-1.49,-0.97l0.19,-0.28l-0.28,-0.37l-1.02,-0.32l0.17,-1.39l-0.27,-0.41l-0.58,-0.18l-0.95,0.31l-0.1,-0.24l0.12,-0.51l1.89,-0.36l3.0,-2.09l-0.44,-0.87l0.4,-0.22l0.13,-0.66l-0.81,-1.27l-0.09,-0.89l-0.7,-0.39l0.04,-0.55l-0.83,-0.78l-0.79,0.02l1.18,-5.28l1.03,-0.03l0.84,-0.79l0.07,-0.44l-0.35,-0.41l0.3,-0.53l0.72,-0.25l0.05,-0.45l0.7,-0.4l0.77,-1.99l0.91,-0.57l0.33,-0.78l0.74,-0.49l0.74,0.03l0.54,0.4l0.98,-0.45l-0.22,1.63l1.01,0.5l-0.04,1.06l-0.74,0.83l-0.6,-0.1l-0.57,0.55l0.04,0.99l0.62,1.21l-0.62,0.59l0.16,1.74l-0.64,0.93l0.44,0.66l1.12,0.41l0.69,2.61l-0.87,0.53l-0.03,0.6l0.38,0.45l-1.58,0.69l-0.77,1.54l0.06,0.6l-0.65,0.89l0.43,0.58l3.42,0.05l0.8,1.47l-0.08,0.42l-0.97,0.79l-0.07,0.52l-0.72,0.11l-0.88,1.26l-0.45,0.83l0.12,0.99l0.67,0.27l0.49,-0.25l1.48,-1.92l1.96,-0.34l0.7,0.21l0.47,0.48l-0.35,1.03l0.36,1.12l-0.23,0.63l0.31,0.56l-0.13,2.25l0.32,0.54l0.6,-0.22l0.57,-2.72l1.25,-0.28l0.36,-0.61l-1.34,-0.99l0.58,-2.78l1.65,-1.78l1.33,0.24l2.88,2.18l0.61,1.29l0.46,1.92l-0.43,4.97l-0.94,1.77l-1.11,0.48l-0.57,0.8l-0.04,0.53l0.65,0.45l-0.78,0.99l0.13,1.24l-1.86,2.23l-0.44,0.99l0.28,0.91l-0.23,0.57l-0.69,0.17l-0.65,0.83l0.24,0.93l-4.44,0.4l-1.89,1.54l-1.09,-0.14l-1.52,-0.82l-0.69,-0.88l0.37,-2.12l-0.6,-1.0l-0.56,0.23l-0.2,1.4l-0.41,0.27l-0.57,-0.29l-0.45,0.3l-0.02,1.12l-0.37,0.42l-2.11,0.0l-0.5,-0.85l0.43,-0.31l-0.27,-1.67l-0.39,-0.58l-1.31,-0.64l-0.96,0.5l-0.65,1.08l-2.33,0.72l-1.36,1.53l-2.16,-0.53ZM353.07,252.53l-0.18,-0.64l-1.02,-0.65l-0.84,-1.21l-1.37,-0.46l3.4,-4.11l5.53,0.43l1.12,-0.43l1.11,0.01l1.15,0.48l1.47,2.13l0.1,0.62l1.03,0.62l0.77,1.33l-0.89,2.33l-0.41,2.7l-1.52,2.31l-0.12,0.8l-1.88,1.94l-0.41,1.43l-1.39,1.24l-0.29,-0.36l-0.77,0.15l-0.06,1.2l-0.11,-1.26l-2.04,-4.53l0.12,-0.68l-0.91,-0.66l0.22,-0.81l-0.61,-1.05l0.34,-0.68l-1.54,-2.22ZM356.38,131.25l0.61,-2.73l1.07,-4.77l0.81,1.78l0.66,0.28l0.31,0.67l0.28,1.9l-1.49,3.66l-1.82,0.06l-0.43,-0.84ZM354.22,140.9l0.72,-3.2l0.99,0.25l0.23,0.79l-0.87,1.71l-1.07,0.45ZM344.51,358.33l0.94,-0.21l1.34,0.38l0.66,0.56l0.64,1.22l-0.21,1.16l-1.07,0.09l-0.69,-0.57l-0.82,-0.81l-0.78,-1.83ZM343.45,246.05l0.34,-0.35l0.86,-0.03l1.16,0.72l-2.21,0.24l-0.15,-0.58ZM319.66,383.43l0.58,1.04l0.11,0.1l-0.52,-0.1l-0.16,-1.05ZM317.77,367.13l0.19,-0.56l0.63,-0.35l-0.4,1.1l-0.43,-0.19ZM317.48,374.25l-0.13,-0.78l0.25,-1.06l0.35,1.97l-0.46,-0.13ZM317.12,377.88l0.04,-0.85l0.65,-0.18l-0.58,1.35l-0.12,-0.32ZM314.41,374.19l0.57,0.24l-0.14,0.63l-0.37,0.19l-0.06,-1.06ZM311.1,365.02l0.9,-0.17l0.05,1.27l-0.95,-1.11ZM308.9,362.27l0.31,0.24l0.02,0.64l-0.44,-0.71l0.11,-0.16ZM305.06,360.24l0.09,-0.06l-0.03,0.05l-0.06,0.02ZM299.0,350.45l1.55,-0.48l0.33,0.64l-1.15,0.07l-0.73,-0.23ZM292.58,354.28l-0.15,-0.28l0.45,-0.29l-0.16,0.44l-0.15,0.13Z\",\n            name: \"Nunavut\"\n          },\n          \"CA-NS\": {\n            path: \"M806.14,740.09l0.6,-1.1l-0.19,-1.16l1.53,-2.49l0.42,-2.61l0.6,-1.53l-0.03,-2.56l0.54,-3.5l1.51,-3.01l0.15,-1.97l0.16,-0.35l1.13,0.17l0.58,-0.23l-0.36,1.59l1.07,0.72l1.38,-0.48l0.25,0.69l0.19,1.88l-0.37,0.37l0.03,0.59l0.78,0.69l-0.34,1.48l0.1,1.93l-0.48,4.15l0.66,0.61l-0.35,0.83l-0.42,0.47l-0.53,0.06l-0.41,0.74l-0.44,0.35l-0.86,0.06l-0.71,1.87l-1.26,1.0l-0.2,0.83l0.56,0.34l0.4,-0.18l-0.21,0.92l0.5,0.44l0.95,-0.7l0.24,0.03l-1.43,1.75l0.15,1.53l1.35,0.03l1.28,-1.57l0.61,-0.21l0.72,0.25l-0.26,0.86l-0.98,0.93l-0.57,0.09l-0.98,1.27l-1.15,-0.45l-1.0,1.26l-1.85,-1.48l-1.42,-2.29l-0.27,-1.03l-1.36,-1.87ZM816.61,744.13l1.05,-1.41l-0.51,-1.54l2.33,-3.96l0.31,-1.02l-0.19,-0.41l-0.45,0.02l-2.83,2.93l-0.59,-0.45l2.36,-3.35l0.82,-2.08l0.74,-0.69l-0.04,-0.59l-0.69,-0.2l-1.08,0.73l-0.44,1.08l0.12,-0.58l0.95,-1.72l0.31,-0.23l1.11,0.83l0.0,0.01l-0.5,1.38l0.14,0.46l0.77,-0.36l0.46,0.32l0.48,-0.32l-0.25,-1.23l0.25,-0.6l0.28,-0.06l-0.09,0.39l0.46,0.2l1.39,-0.32l0.44,0.58l0.8,-0.47l0.17,1.41l-0.68,0.84l0.12,0.42l0.59,0.46l1.08,-0.34l0.3,0.34l-1.47,1.09l-0.16,0.62l-1.5,0.75l-0.17,0.84l0.9,0.39l-0.87,0.89l-0.13,0.94l-1.5,1.69l-1.05,0.32l-1.77,1.89l-1.76,0.09ZM816.46,732.7l0.05,-0.34l0.15,-0.22l-0.19,0.56ZM816.79,731.83l0.24,-0.63l0.0,-0.0l-0.04,0.32l-0.2,0.32ZM812.99,739.44l0.88,-1.79l0.6,-0.25l0.0,1.22l-0.51,0.54l-0.97,0.27ZM759.65,789.33l0.16,-4.68l1.0,-2.32l1.2,-1.76l-0.25,-0.79l-0.76,-0.03l0.79,-1.21l0.55,1.16l1.15,-0.48l2.56,-4.02l-0.39,-0.25l-0.53,0.16l-2.38,2.22l8.34,-9.82l1.48,-1.36l2.68,-1.68l0.64,-0.83l0.18,-0.86l0.15,2.95l0.79,0.75l0.56,-0.3l0.09,-0.56l0.83,0.28l1.02,0.66l0.21,0.95l0.41,0.32l0.85,-0.63l-0.2,-1.37l-1.52,-0.96l0.48,-1.27l2.17,-1.72l0.87,-0.31l0.38,-0.71l0.77,-0.16l0.09,-0.31l2.0,-0.77l0.57,0.44l0.62,-0.38l0.08,-0.73l0.87,-0.87l-0.76,-0.39l-2.62,0.32l-2.84,0.85l-0.61,0.66l-0.49,-0.31l-1.16,0.39l-1.2,-0.1l-2.3,0.94l-1.0,0.8l-0.82,-0.25l-1.64,0.19l-1.2,0.97l-0.22,1.24l-1.05,-0.26l-0.99,0.29l0.05,-0.87l0.87,-0.88l-0.09,-0.5l1.3,-1.3l0.28,-0.94l1.72,-2.26l0.02,-1.13l0.39,-0.53l0.26,0.4l0.97,-0.59l0.19,-0.62l-0.26,-0.25l-0.04,-1.31l0.51,-1.57l1.15,-0.65l0.29,-0.58l1.43,0.15l1.08,0.9l0.83,0.12l0.3,0.65l0.75,-0.22l0.73,0.19l0.2,-0.77l1.23,-0.68l-0.11,1.13l1.96,-0.28l-0.19,0.41l0.35,0.35l1.32,0.28l0.39,-0.54l0.8,-0.03l1.26,-0.83l0.38,-0.58l-0.15,-0.29l4.41,-0.24l-0.95,0.78l-0.21,0.93l0.34,0.38l0.28,-0.17l0.75,0.36l0.21,-0.58l0.48,0.15l0.41,-0.34l-0.28,-0.68l0.28,-0.19l1.02,0.2l0.3,0.67l0.82,-0.21l1.04,-1.74l0.93,-0.59l1.93,-2.56l0.71,-1.41l1.1,2.31l0.51,0.48l2.23,0.56l1.34,-0.18l0.72,-1.54l0.48,-0.23l1.15,0.56l1.2,1.12l1.39,0.45l-0.06,0.51l-0.81,0.8l-0.41,0.03l-0.92,1.13l0.04,0.62l0.47,0.31l5.15,-1.32l0.05,1.13l-0.76,-0.45l-0.75,0.77l-1.09,0.18l-0.75,1.02l-0.03,0.9l-1.95,0.93l-1.75,0.09l0.05,0.82l0.49,0.37l-1.67,0.55l-0.41,1.09l-1.6,0.89l-0.18,1.04l-2.05,0.97l-0.63,0.9l-1.1,0.64l-0.16,0.64l-0.47,-0.39l-0.48,0.9l-0.61,0.33l-0.02,0.42l-2.39,1.6l-0.16,1.04l-0.99,0.14l-0.47,0.43l-0.41,-0.68l-1.07,0.28l-0.59,-0.19l-0.35,0.33l0.23,0.92l-0.47,0.47l-0.85,-0.13l0.17,1.15l-0.23,0.62l-0.81,0.12l0.04,-0.31l-0.57,-0.29l-0.81,0.54l0.56,0.97l-2.57,-1.19l-0.58,0.05l-0.2,0.6l0.63,0.75l1.0,0.32l1.01,2.07l-0.36,-0.1l-1.55,0.84l-0.83,-0.89l-1.51,0.95l-0.47,-1.54l0.14,-1.54l-0.33,-0.32l-2.22,1.84l0.21,1.14l0.74,0.7l-0.28,0.68l-0.39,-0.94l-0.88,-0.46l-0.75,0.3l-0.14,0.61l-0.71,-0.17l-0.42,0.24l0.33,1.73l-0.39,0.59l0.87,0.89l-0.35,0.59l0.25,0.46l-1.07,-0.03l0.05,0.5l1.06,0.58l-1.02,2.27l-1.11,0.2l-0.41,0.8l0.37,0.35l0.69,-0.04l-0.01,0.26l-1.54,0.73l-0.15,0.68l0.77,0.39l-0.57,0.78l-1.04,0.65l-0.13,0.86l0.52,0.57l-0.9,-0.21l-0.93,0.87l0.68,1.28l-0.79,-0.83l-0.46,0.02l-0.13,0.45l0.65,1.21l-0.27,-0.23l-1.28,0.61l-0.79,-0.88l-0.66,0.32l0.49,1.99l-0.34,-0.13l-0.39,-1.23l-0.48,0.02l-0.52,0.61l0.82,2.23l-0.19,0.69l-0.61,-0.3l-0.5,0.49l0.27,0.42l-0.09,0.81l-0.81,-0.86l-0.55,0.12l-0.8,1.34l-0.39,0.07l-0.33,-0.88l-0.54,-0.21l-0.38,-1.47l-0.63,-0.19l-0.98,-1.55l-0.47,-0.22l-0.91,-0.14l-0.32,0.25l-0.3,-0.4l-0.66,0.27l0.1,0.85l0.62,0.96l-0.76,-0.45l-0.53,0.1l-0.02,-0.99l-0.93,-0.59l-0.33,-2.18l-1.14,-1.44ZM815.34,751.71l-0.03,0.02l0.02,-0.1l0.01,0.08ZM814.13,746.52l0.43,-0.47l0.76,-0.29l-0.16,0.85l-1.03,-0.09Z\",\n            name: \"Nova Scotia\"\n          },\n          \"CA-BC\": {\n            path: \"M13.63,416.0l18.57,10.78l19.97,10.92l20.25,10.4l20.52,9.86l20.77,9.32l21.0,8.77l21.26,8.24l21.12,7.55l-37.33,108.91l0.0,0.84l0.61,0.53l-0.38,0.97l1.06,0.85l0.3,1.12l-1.39,-0.67l-0.62,0.14l0.03,1.15l-0.43,0.73l0.21,0.59l0.57,0.21l0.19,2.02l0.84,1.3l0.35,0.17l0.53,-0.25l0.98,0.72l0.76,0.05l-0.13,1.32l0.58,2.06l2.09,1.93l0.8,-0.25l0.46,-1.15l0.77,1.04l0.58,1.33l-0.59,0.93l0.97,0.98l-0.37,0.82l0.11,1.89l0.47,0.41l0.99,-0.09l0.34,1.0l-0.39,0.83l0.57,1.04l0.1,1.29l-0.75,0.67l0.47,2.99l-0.56,0.69l0.13,1.58l2.27,0.12l0.46,-0.24l0.44,-0.87l0.64,1.11l1.28,0.79l-0.19,0.8l-1.23,0.79l0.3,1.88l0.88,0.69l0.54,1.17l1.29,0.11l1.2,0.66l0.54,-0.1l-0.09,1.84l1.68,3.03l0.03,3.14l0.31,0.86l1.36,0.39l1.23,-1.23l0.58,0.0l0.08,2.89l0.77,0.86l0.09,0.87l0.49,0.56l-0.05,1.03l0.7,0.9l-0.38,1.12l0.14,1.48l0.93,0.66l0.11,0.73l0.87,0.66l-0.2,1.52l0.36,0.88l0.76,0.81l1.17,0.52l0.03,0.67l1.16,1.63l0.03,0.84l-0.77,0.41l-0.02,0.81l0.62,0.43l0.21,0.75l1.08,1.17l0.17,0.76l0.69,0.1l0.14,0.68l-0.43,0.58l0.68,2.09l0.58,0.31l0.91,-0.51l0.95,0.57l0.82,3.1l0.57,0.99l-0.49,4.19l0.35,1.34l-0.15,1.29l-0.5,0.22l-0.33,1.01l0.11,2.26l-1.05,1.89l-0.99,0.67l-0.26,0.71l0.45,0.95l1.24,0.51l-0.71,1.24l-0.02,1.23l0.9,1.34l0.56,2.72l1.65,0.84l0.45,0.63l-0.19,0.8l0.44,1.02l0.56,0.37l-0.22,0.27l-27.35,-7.82l-27.2,-8.56l-22.07,-7.54l-20.36,-7.43l-0.15,-0.39l-0.8,-0.35l0.21,-1.16l-0.6,-0.44l-1.81,0.1l-0.47,0.32l-0.12,-0.4l1.21,-0.59l0.34,-0.89l-1.81,-0.14l0.27,-0.72l0.53,0.32l0.3,-0.37l-0.62,-1.25l1.53,0.24l0.97,0.62l0.85,-0.09l0.77,-0.61l1.17,-2.04l-0.35,-0.56l-0.52,0.1l-0.39,0.88l-0.95,0.93l-0.73,-0.02l-2.26,-1.49l0.81,-0.83l0.52,-1.68l1.28,-1.89l0.77,-0.45l0.02,-0.73l-0.57,-0.2l-0.96,0.34l-0.64,1.13l-3.29,0.49l-0.35,1.52l-0.4,0.28l-2.22,-2.35l0.35,0.09l0.6,-0.57l0.23,-1.06l2.11,-0.04l1.12,-0.75l0.05,-0.46l-0.41,-0.2l-1.67,0.26l-1.17,-0.27l-0.59,-2.27l0.96,-0.94l0.39,-1.03l-0.25,-1.64l1.82,-0.18l1.09,-0.9l-0.39,-1.65l-1.48,-1.88l-0.67,0.31l0.24,1.15l0.69,0.8l0.18,0.72l-2.3,0.5l-0.61,1.32l-0.59,0.03l-0.7,0.73l-0.05,0.48l-0.99,0.51l-1.16,-0.38l-0.47,0.15l-1.25,-0.65l-0.63,-0.72l0.13,-0.64l-0.32,-1.0l-1.12,-1.86l0.42,0.2l0.32,-0.36l0.74,-1.86l1.0,-0.73l0.78,-1.13l0.03,-1.27l-0.42,-0.72l0.66,-0.64l1.06,0.45l1.62,-0.21l1.19,-0.55l0.37,-0.56l-0.53,-0.58l-1.92,0.55l-2.01,-0.55l-1.36,0.98l-0.8,0.21l-0.86,-0.52l0.32,-0.78l-0.13,-0.94l-0.31,-0.35l-0.54,0.21l0.31,-0.57l1.04,0.0l0.5,-0.55l0.71,-0.01l0.52,-0.47l0.7,-1.52l0.9,-1.07l-0.54,-1.17l1.94,-1.18l-0.12,-1.14l-0.81,-0.31l-1.32,1.2l-0.98,0.31l-0.12,1.24l0.33,0.57l-0.79,1.69l-2.82,1.23l-0.55,0.81l-0.42,0.11l0.16,-1.29l-0.25,-0.42l-0.88,0.25l0.2,-0.94l-0.42,-0.46l-1.2,0.93l-1.01,-0.17l1.36,-2.4l1.52,-0.77l0.06,-0.63l-0.27,-0.25l-2.03,0.51l-1.03,1.83l-0.73,0.39l-0.15,0.67l-0.43,0.25l-0.44,-0.76l0.35,-0.16l0.05,-0.62l-0.51,-0.46l-0.72,-0.2l-1.57,0.34l-1.87,-1.12l0.32,-0.73l2.46,0.25l0.57,-0.43l1.19,0.03l1.37,0.45l0.9,-0.85l0.82,-0.19l0.38,-0.6l-0.05,-1.03l0.94,0.18l1.31,-1.41l0.17,-2.17l-0.49,-1.27l-0.73,0.05l-0.14,0.4l-0.08,2.77l-1.67,0.34l-0.51,0.84l0.1,0.68l-1.26,0.7l-1.22,-0.44l-0.69,0.2l-0.41,-0.77l-2.04,-0.08l2.1,-0.61l0.26,-0.46l-0.72,-0.59l-0.93,-0.03l0.58,-1.2l-0.82,-0.57l0.97,-0.06l0.51,-0.79l-0.42,-0.46l-0.72,0.14l-1.89,-1.2l0.34,-1.92l-0.21,-0.53l-0.53,0.08l-0.59,0.69l-0.43,1.42l-0.53,0.35l-1.09,0.02l-1.26,-1.83l-1.03,0.28l-1.03,-0.44l-1.12,-1.04l-0.63,-0.09l-0.27,0.62l0.24,0.44l-0.35,-0.26l-0.23,-0.92l-0.6,-0.16l-0.73,-0.75l0.18,-0.81l-0.87,-0.64l1.18,-1.24l0.02,-0.47l-0.42,-0.45l-1.61,-0.27l-0.56,-1.45l0.22,-0.72l2.39,-0.07l1.79,1.27l1.94,0.48l1.27,-0.28l0.88,-1.35l-0.14,-0.43l-0.45,-0.02l-0.93,0.7l-1.16,0.1l-1.52,-0.85l-0.02,-0.89l-1.42,-0.1l-1.64,-0.71l1.26,0.01l1.14,-0.71l0.59,0.01l1.02,-0.91l0.43,-1.1l0.48,-0.22l1.69,0.22l2.83,0.98l3.66,2.02l1.21,-0.42l0.57,-0.77l-0.02,-1.8l-0.37,-0.36l-0.42,0.3l-0.36,1.43l-0.61,0.31l-3.57,-2.25l-1.84,-0.45l-0.7,-0.84l-0.79,0.4l0.26,-0.75l0.87,-0.15l0.93,-1.27l0.03,-0.56l-0.63,-0.27l-1.08,1.17l-0.74,0.01l-0.65,0.85l-1.13,-0.6l-0.81,0.22l0.07,0.61l0.78,0.73l-1.19,0.97l-0.01,0.66l-0.42,0.34l-0.3,-0.87l-0.76,-0.34l0.24,-0.89l-0.18,-1.6l1.21,-2.97l0.59,-0.66l0.81,-0.17l1.32,0.33l0.75,-1.05l1.21,-0.43l1.23,0.4l0.58,-0.17l0.26,-1.47l0.99,-0.36l1.17,0.12l1.46,-0.73l1.19,0.83l0.04,2.29l1.36,4.54l0.45,-0.23l0.46,-1.2l-0.26,-1.8l-0.88,-1.68l0.26,-1.89l0.72,-0.2l1.29,0.29l0.56,-0.4l-0.51,-0.96l-2.81,-0.06l-1.1,-0.71l-0.09,-0.5l0.44,-2.15l2.24,-0.84l0.99,-0.04l1.43,-1.41l0.28,-2.14l-0.81,-1.58l-0.65,0.29l-0.22,3.03l-0.98,0.61l-2.77,0.76l-0.68,0.64l-0.16,0.77l-2.05,0.08l-0.99,0.71l-2.28,0.14l0.49,-0.43l-0.46,-0.73l-1.92,1.47l-0.07,-1.06l0.98,-0.32l0.34,-0.46l-0.16,-1.5l0.77,-0.56l0.01,-0.74l0.57,-0.66l-0.35,-0.64l-1.85,-0.06l-1.04,0.34l-1.92,1.56l0.91,-1.04l0.47,-1.59l2.56,-2.56l0.76,-1.92l1.15,-0.09l0.32,-0.53l-0.19,-0.4l-0.77,-0.17l-0.3,-0.38l-2.19,1.52l-1.33,-1.01l-0.09,-1.12l0.94,-3.09l1.01,-1.4l-0.84,-0.43l-0.19,-1.93l-0.43,-0.19l-0.45,0.32l-0.66,-1.45l-0.01,-0.71l0.54,-0.39l0.2,-1.31l0.91,-0.63l-0.08,-0.66l-0.94,-0.13l0.11,-0.47l0.5,0.37l0.78,-0.2l-0.12,1.24l0.4,0.92l0.61,0.23l0.57,1.55l-0.23,0.75l0.41,0.43l0.51,-0.33l0.44,-1.04l1.38,-0.01l1.82,1.11l0.06,0.69l-0.69,0.76l-0.01,0.52l0.94,-0.15l0.34,0.67l-0.3,1.58l0.52,0.74l0.71,-0.13l-0.15,-1.33l0.33,-1.0l-0.62,-1.12l-0.37,-2.46l-1.72,-0.67l-0.55,-0.65l-0.51,-0.03l-0.67,0.57l-0.82,-0.23l-1.33,-3.84l0.95,-1.11l0.29,-1.09l0.41,-0.39l0.68,0.09l0.51,-0.48l1.48,1.12l0.49,-0.05l0.05,-1.0l-0.79,-0.39l-0.62,-0.84l1.48,-1.45l0.1,-0.72l-0.99,-0.1l-3.25,1.95l-0.57,-1.39l-0.8,0.05l-0.29,1.7l-0.47,-0.69l-0.45,0.22l-0.2,0.96l-2.69,1.13l-1.28,1.81l-0.16,1.0l-0.72,0.81l-1.64,-5.17l0.13,-1.57l-1.14,-2.66l-0.13,-0.95l0.31,-0.84l-0.66,-0.17l-0.12,-0.39l-0.02,-0.68l1.08,-2.11l0.75,-0.75l0.41,0.1l0.16,2.49l0.53,1.74l0.59,0.45l0.43,-1.42l-0.45,-1.17l-0.05,-2.35l0.91,0.01l1.75,1.57l1.64,-0.27l0.58,-0.39l-0.37,-0.7l-1.5,0.3l-1.83,-1.67l-3.38,-0.01l-0.21,-0.73l-0.68,-0.52l0.67,0.0l0.5,-0.5l-0.21,-0.46l0.8,-1.92l-0.16,-0.48l-0.5,0.07l-0.51,0.6l-0.69,0.02l-0.64,-0.71l0.52,-0.88l0.82,0.14l0.35,-0.52l-0.08,-1.1l0.72,-0.27l0.81,5.21l0.46,0.67l0.85,0.22l0.24,-0.48l-0.5,-0.59l-0.17,-0.94l0.7,-1.06l0.93,-0.09l0.32,-0.67l-0.55,-0.45l-0.75,0.04l-0.83,0.73l-0.5,-4.19l1.16,-0.05l0.95,1.09l0.34,1.33l1.09,0.78l0.67,-0.06l0.26,-0.34l-0.14,-0.42l-1.06,-0.71l-0.18,-1.2l-0.69,-1.14l0.83,-0.81l1.4,-0.59l0.1,-0.88l0.54,-0.4l0.23,-0.01l-0.41,0.33l0.27,0.72l2.0,-0.48l0.45,0.51l1.69,0.25l0.42,-0.72l-3.37,-1.69l3.35,-2.84l0.88,-0.25l2.11,-1.94l0.79,0.46l1.18,-0.33l0.19,-0.51l-0.4,-0.44l-0.76,0.18l-0.72,-0.46l-0.55,0.02l0.42,-3.12l-0.63,-0.43l-0.38,0.34l-0.63,2.46l-1.19,1.08l-0.25,0.6l0.17,0.34l-0.61,0.89l-4.38,3.54l0.19,-1.23l3.65,-2.46l0.01,-1.21l0.72,-2.25l0.03,-1.69l1.16,-2.12l-0.07,-1.07l3.08,-2.49l-0.27,-0.65l0.46,-1.28l0.06,-1.38l-0.37,-0.78l-1.14,-0.25l-1.35,-1.24l0.24,-1.83l-1.34,-1.53l-0.43,-1.97l-0.62,-0.93l-2.03,-1.66l-2.71,-5.17l-2.36,-1.11l0.5,-1.02l0.09,-1.44l0.61,-0.94l-1.5,-2.18l1.9,-2.25l-0.03,-0.55l-2.03,-1.95l1.76,-1.48l-0.68,-17.44l0.4,-2.73l-0.61,-4.17l0.83,-1.22l-0.82,-3.51l-0.3,-3.87l-2.29,-3.88l-0.25,-1.33l0.41,-1.01l-0.35,-0.6l0.5,-0.87l-0.0,-1.39l-0.96,-1.57l0.08,-2.0l-1.83,-1.91l0.0,-0.97l0.57,-0.96l-0.39,-0.8l0.97,-0.53l0.86,-1.58l-1.69,-5.99l-0.52,-0.45l-4.82,0.06l-3.19,-0.8l-1.16,0.04l-0.33,0.59l0.29,1.15l-0.97,0.61l-0.87,-0.59l-0.65,0.07l-1.58,2.84l-1.77,1.29l-2.42,-0.92l-5.25,0.52l-2.15,0.6l0.9,-1.15l1.29,-4.82l-3.3,-13.32l0.53,-2.9l-1.35,-2.31ZM73.47,652.52l0.29,0.56l-0.5,0.41l0.15,-0.35l0.07,-0.62ZM65.69,639.61l-0.05,0.24l-0.09,0.16l-0.03,0.01l0.17,-0.41ZM47.11,622.29l0.58,0.56l0.35,0.24l-0.42,0.17l-0.51,-0.97ZM45.72,609.76l-0.16,0.0l-0.36,-0.19l0.3,0.13l0.23,0.05ZM50.07,591.83l-0.48,0.83l0.04,0.6l-0.78,0.64l0.16,-1.83l0.64,-0.61l0.4,0.37ZM46.52,592.11l-0.73,0.75l-0.66,0.39l0.64,-1.17l0.75,0.03ZM51.62,599.75l0.12,-0.02l0.32,0.0l-0.13,0.19l-0.3,-0.17ZM56.1,626.07l-1.59,-0.43l-1.14,0.16l-0.32,-0.43l0.61,-0.51l2.44,1.22ZM55.38,630.91l-0.22,-0.02l-0.62,-0.24l0.1,0.01l0.73,0.25ZM72.83,659.99l-0.63,-0.33l-0.52,-1.02l-0.28,-2.05l0.99,-1.2l0.28,0.06l0.38,2.07l-0.22,2.46ZM77.14,661.77l0.07,-0.32l0.41,-0.02l0.04,0.63l-0.52,-0.29ZM76.5,664.01l0.11,-0.16l0.39,-0.19l-0.22,0.27l-0.28,0.08ZM71.52,674.1l-0.21,-0.6l0.4,-0.58l-0.16,-0.8l0.09,-0.03l0.54,1.27l-0.43,-0.06l-0.24,0.8ZM70.39,655.37l-0.06,-0.38l0.7,-0.3l-0.51,0.61l-0.13,0.07ZM32.85,620.93l0.68,-0.17l0.02,-0.64l-0.76,-0.43l0.22,-1.3l2.37,-0.03l0.56,0.28l0.8,-0.21l1.61,0.7l3.39,3.27l-0.22,0.7l0.2,0.9l0.6,-0.15l1.66,2.64l1.83,1.44l0.03,0.48l1.01,0.5l0.02,0.63l1.12,0.19l1.45,1.91l0.75,0.06l0.74,0.68l1.02,0.21l1.66,1.03l1.93,2.25l1.25,0.68l0.78,0.91l1.79,0.49l0.86,0.93l-0.31,3.68l0.62,1.55l-0.05,2.74l1.84,4.7l-0.04,0.28l-0.93,-0.48l-0.43,0.57l0.38,1.07l0.32,3.28l0.82,0.58l1.32,2.19l3.72,2.74l-0.4,0.16l-0.02,0.74l2.04,1.19l-0.28,0.35l0.02,1.26l1.09,0.83l0.1,1.41l-0.7,-0.1l-0.38,0.64l1.57,3.71l-0.33,0.62l-0.81,0.32l0.85,1.83l-0.4,0.62l0.04,0.77l-0.62,0.94l0.44,0.45l1.05,-0.34l0.71,-1.07l-0.07,3.71l-0.4,0.04l-0.51,-0.91l-0.52,-0.17l-2.12,1.49l-0.76,-0.26l-1.02,-1.27l-1.22,-0.57l-4.51,-4.68l0.34,-0.65l-0.2,-0.23l-0.58,-0.29l-0.68,0.18l-1.54,-1.14l-1.15,-1.88l-2.45,-2.57l-0.31,-1.19l1.25,-0.56l0.85,0.03l0.53,-0.84l1.63,-0.27l1.28,-0.98l1.13,-1.58l0.3,-1.62l-0.53,-0.48l-0.6,0.5l-0.62,1.63l-1.35,1.41l-1.99,-0.34l-0.65,-0.59l-1.1,0.36l-0.45,-0.34l0.86,-0.46l-0.95,-1.1l-2.45,1.38l-0.88,-1.16l-0.73,-2.0l-0.55,-0.46l2.18,-0.5l0.91,-0.99l-0.46,-0.57l-1.28,0.35l0.61,-1.06l-0.55,-0.56l0.9,-1.32l-0.21,-0.54l-0.44,-0.0l-1.12,1.18l-0.61,-0.19l-0.84,0.41l-0.13,-0.38l1.04,-0.37l1.26,-1.45l0.06,-0.62l-0.7,-0.23l-1.4,1.27l-0.07,-0.69l0.65,-0.95l-0.29,-0.52l-1.77,0.02l-0.03,-0.74l-0.47,-0.28l-0.8,1.05l-0.81,-2.22l-1.16,0.39l-0.16,0.81l-0.28,-0.45l1.23,-2.55l1.21,-0.2l1.13,0.59l2.92,0.63l0.42,-0.31l-0.06,-0.7l-1.2,-0.58l-1.67,-0.08l-0.98,-0.86l1.24,-1.08l-0.63,-1.0l-0.61,0.12l-0.58,0.93l-0.49,-0.08l0.63,-3.12l-0.28,-0.49l-0.71,0.06l-0.6,-2.02l-0.77,0.21l-0.23,-0.72l-0.45,0.1l-0.81,1.52l-1.65,-0.66l-0.32,-1.71l0.85,-0.49l0.55,-0.81l1.06,-0.3l0.4,-1.05l-0.59,-0.35l-1.01,0.48l-0.47,-1.23l-0.55,-0.1l-0.66,1.5l-0.63,0.06l-0.46,-0.99l0.8,-0.46l-0.23,-0.43l0.38,-0.76l-0.33,-0.31l-2.03,0.4l0.58,-0.85l-0.33,-0.3l-1.14,0.05l-1.37,0.68l-0.68,-0.62l2.5,-1.18l0.04,-0.56l-0.65,-0.37l0.41,-0.24l0.12,-0.65l-0.63,-0.79l-0.87,-0.23l1.07,-1.19l1.81,0.27l1.47,0.66l0.35,2.01l0.36,0.42l0.68,-0.27l-0.22,-2.73l1.49,-0.17l0.6,-0.54l-0.27,-0.6l-1.46,-0.13l-0.39,-0.67l-2.99,-1.74l-0.22,0.68l0.38,0.79l1.9,1.18l-2.18,-0.17l-0.43,-0.36l-1.45,-0.06l-0.38,-0.57l-0.68,0.11l-0.69,-1.33l0.08,-1.33l-0.53,-0.59ZM42.94,638.71l0.18,0.66l-0.39,0.25l0.21,-0.91ZM48.37,658.01l-0.18,-0.13l-0.04,-0.06l0.11,0.01l0.12,0.19ZM65.71,652.19l0.14,-0.21l0.29,0.73l1.84,1.59l0.58,2.49l-1.31,-1.65l-0.19,-1.3l-1.35,-1.65ZM68.25,643.72l-0.05,0.24l-0.39,0.41l0.11,-0.31l0.33,-0.33ZM67.21,657.84l0.25,0.09l0.46,0.37l-0.41,-0.15l-0.3,-0.32ZM65.77,642.5l0.43,-0.25l0.47,0.39l-0.27,0.67l-0.55,-0.11l-0.08,-0.69ZM66.61,644.25l0.09,0.18l-0.5,0.24l-0.01,-0.2l0.41,-0.22ZM64.09,645.3l-0.21,-0.95l0.93,-0.53l-0.29,1.49l-0.43,-0.01ZM63.71,655.75l-0.0,-0.0l0.0,0.0l-0.0,0.0ZM61.57,639.47l0.04,-0.17l0.14,0.12l-0.07,0.05l-0.11,0.0ZM62.7,639.33l0.42,-0.95l0.59,0.96l0.17,3.08l-0.26,-2.27l-0.92,-0.82ZM61.44,643.0l-0.21,-0.5l0.24,-1.24l0.33,-0.58l0.41,-0.02l0.33,1.46l-1.11,0.88ZM60.76,637.89l0.47,-0.38l1.13,-0.03l-0.83,0.65l-0.77,-0.24ZM59.74,636.88l0.18,-0.02l0.48,0.11l-0.61,-0.06l-0.05,-0.04ZM56.9,635.18l0.86,0.09l0.09,0.38l-0.33,-0.07l-0.61,-0.4ZM47.25,600.57l1.72,-2.5l0.8,-0.67l0.72,-0.33l0.86,0.23l1.96,-0.24l1.42,-0.89l1.65,0.05l-0.51,1.31l-4.2,0.56l-1.27,0.61l-1.38,1.32l-0.25,0.68l-1.53,-0.13ZM51.46,628.21l0.59,-0.54l2.0,-0.54l1.2,0.15l0.11,0.27l0.04,0.85l-0.66,0.22l-0.62,0.73l-1.4,-0.87l-0.51,0.21l-0.75,-0.48ZM51.4,630.8l1.84,0.02l0.23,0.32l-0.39,0.14l-1.68,-0.47ZM49.37,624.62l0.01,0.01l0.0,0.06l-0.02,-0.07ZM50.29,625.12l0.07,-0.07l0.64,0.3l-0.56,-0.01l-0.15,-0.22ZM49.87,623.87l0.03,0.01l0.01,0.0l-0.01,0.0l-0.03,-0.01ZM48.61,586.85l0.14,-1.17l0.6,0.19l-0.53,0.81l-0.2,0.17ZM45.49,570.28l0.29,-0.57l0.16,-0.22l-0.2,0.65l-0.25,0.13ZM46.01,569.39l1.12,-1.94l1.14,-0.24l1.27,0.43l-0.72,1.13l-0.97,-0.27l-1.84,0.9ZM48.58,656.68l-0.36,-0.84l0.5,-0.17l0.3,0.29l-0.44,0.72ZM46.18,597.25l0.63,-0.09l0.89,0.46l-0.56,0.43l-0.94,-0.3l-0.02,-0.5ZM46.94,596.03l1.01,-0.32l-0.03,-0.58l-0.46,-0.3l0.72,0.24l-0.14,1.53l-1.1,-0.57ZM44.61,591.15l1.02,-0.72l0.85,-3.1l1.13,-2.06l-0.16,1.5l-1.04,3.3l-0.66,0.74l-1.14,0.33ZM41.34,582.69l0.24,-0.26l-0.19,-1.84l0.67,0.54l0.48,-0.46l-0.11,-0.42l1.76,-1.19l1.07,-0.04l0.41,-0.42l-0.98,-2.79l-0.6,0.02l1.1,-2.33l1.04,0.82l1.06,2.78l0.64,0.6l-0.19,2.48l-0.45,1.43l-2.7,3.9l-0.21,0.8l-0.83,-0.37l0.76,-1.87l2.26,-2.34l0.42,-0.85l-0.14,-0.58l-0.73,-0.14l-0.33,0.74l-0.59,-0.23l-2.15,3.48l-0.91,0.15l-0.83,-1.63ZM44.7,586.19l0.0,0.03l-0.02,-0.02l0.02,-0.01ZM43.79,576.47l0.01,0.55l0.41,0.22l0.25,0.72l-2.45,1.26l-0.46,-0.61l0.42,-1.1l0.58,-0.58l0.33,0.23l0.91,-0.68ZM43.19,586.9l1.52,0.5l-0.57,2.32l-0.91,-1.6l-0.04,-1.22ZM43.67,542.2l-0.02,-0.54l3.49,-1.73l-0.29,0.57l-1.88,1.35l-1.29,0.35ZM47.09,655.52l-0.0,-0.0l0.0,0.0l-0.0,0.0ZM45.06,572.22l0.01,-0.26l1.32,-0.96l0.54,-0.79l-0.02,2.09l-0.45,0.54l-0.48,-0.44l-0.92,-0.18ZM45.54,652.69l0.48,-1.03l0.67,0.05l-0.21,1.74l-0.94,-0.76ZM42.91,600.73l0.86,-0.48l0.0,-0.68l1.03,-0.85l1.62,0.26l-0.41,0.91l-1.8,1.9l-0.26,1.2l-0.45,-0.18l0.48,-1.52l-0.25,-0.39l-0.83,-0.19ZM44.17,597.56l0.09,-1.02l1.12,-0.67l-0.62,1.32l-0.6,0.37ZM42.93,594.98l-0.27,-0.29l0.66,-0.51l1.36,0.6l-0.74,0.66l-1.01,-0.46ZM40.85,642.26l1.08,-0.1l0.35,-0.5l-0.76,-0.86l1.66,-0.07l0.6,0.8l-0.16,1.46l-0.84,2.36l-1.12,-1.08l-0.81,-1.99ZM41.8,608.09l0.21,-2.76l1.49,-0.67l-0.54,4.43l-0.27,0.14l-0.31,-0.88l-0.58,-0.25ZM41.66,575.26l-0.17,-0.45l0.43,-0.95l1.15,-0.67l0.48,-0.66l-0.96,3.17l-0.92,-0.42ZM41.46,591.43l0.36,-2.24l0.32,-0.39l0.56,0.41l-1.24,2.22ZM41.74,542.16l0.92,-0.2l0.04,0.0l-0.38,0.77l-0.43,-0.06l-0.15,-0.52ZM37.53,560.61l0.55,-1.25l-0.44,-0.75l0.81,-0.37l1.97,4.36l0.42,3.01l0.52,1.5l-0.36,-0.15l-0.56,0.32l0.21,0.68l1.21,0.77l0.49,2.16l-1.85,-0.28l-0.47,1.41l-0.33,-0.08l0.08,-2.41l-0.67,-0.3l-0.01,-0.77l-0.39,-0.29l0.51,-1.15l-0.55,-0.61l0.65,-1.04l-0.07,-1.15l0.49,0.07l0.29,-0.54l-0.67,-0.96l-1.34,-0.25l0.25,-1.11l-0.75,-0.82ZM38.34,563.69l-0.21,0.15l-0.18,-0.06l0.16,-0.11l0.23,0.02ZM40.27,619.3l0.43,0.03l0.07,0.55l-0.36,-0.48l-0.14,-0.1ZM40.3,551.24l0.12,-0.25l0.34,-0.21l-0.2,0.34l-0.26,0.12ZM39.08,583.26l0.32,-0.4l-0.37,-1.6l0.38,-0.35l1.34,4.3l-0.73,1.53l0.04,-0.56l-0.52,-0.33l-0.24,-0.74l0.25,-0.48l-0.48,-1.36ZM40.19,553.88l0.01,-0.26l0.12,-0.15l0.17,0.38l-0.3,0.03ZM39.62,574.23l-0.2,-0.65l0.25,-0.22l0.56,2.86l-0.15,0.8l-0.46,-2.8ZM39.02,635.94l0.02,-0.04l0.01,0.01l0.01,0.02l-0.04,0.01ZM36.21,544.7l1.15,-1.7l0.93,0.78l-0.43,0.41l-1.65,0.51ZM33.6,556.26l0.03,-0.04l0.04,0.11l-0.07,-0.07ZM35.18,554.73l1.69,-0.53l1.0,0.03l0.49,1.68l-0.08,0.84l-1.9,1.13l-0.24,-0.64l0.9,-0.73l1.05,-0.05l0.12,-0.89l-1.57,-0.46l-0.97,1.11l-0.49,-1.49ZM37.4,573.38l0.12,0.1l0.17,0.59l-0.22,-0.3l-0.08,-0.39ZM36.87,545.99l0.21,-0.1l0.08,0.57l-0.17,-0.08l-0.13,-0.39ZM33.01,562.11l0.45,-0.71l0.44,0.35l2.97,4.84l0.38,1.23l0.13,3.3l-0.25,0.6l-0.43,-0.49l-0.68,0.22l-0.32,-0.23l-0.16,-1.77l-0.4,-0.51l0.19,-1.05l-0.74,-1.58l-0.88,-0.66l-0.14,-1.69l0.83,0.06l0.05,-0.47l-0.38,-0.48l-0.81,-0.17l-0.26,-0.79ZM35.28,560.82l1.21,-0.39l-0.0,0.61l0.71,0.77l-0.5,1.33l-1.33,-1.39l-0.08,-0.93ZM35.19,550.83l0.11,-0.11l0.25,0.66l0.06,0.42l-0.02,0.03l-0.4,-0.99ZM34.15,557.75l0.07,-0.0l0.18,0.16l-0.1,-0.01l-0.15,-0.16ZM9.84,550.6l0.56,-0.73l-0.34,-1.08l0.55,-0.31l-0.19,-0.75l0.35,-0.76l-0.16,-0.44l-0.84,-0.46l0.61,-0.4l-0.14,-1.49l1.11,-1.19l1.07,-0.61l0.26,-1.37l0.58,-0.41l0.48,0.21l0.85,1.24l1.68,0.51l0.52,0.74l-0.59,1.0l-1.51,0.56l-0.15,0.93l0.45,0.24l1.2,-0.21l0.91,-0.87l1.59,-0.25l0.82,0.23l-0.08,1.47l0.46,0.65l-0.55,1.2l-0.03,0.89l-1.04,0.24l-0.77,0.6l-1.16,-0.38l-1.19,0.26l-1.88,-0.55l-0.69,0.16l-0.22,0.72l0.48,0.25l-0.34,0.68l0.37,0.25l0.64,-0.2l0.41,0.47l-0.58,0.53l0.12,0.66l1.16,-0.18l1.19,0.41l0.59,-0.22l-0.01,-0.33l0.42,0.39l1.12,-0.49l0.42,-0.55l0.03,-0.95l2.06,-1.36l0.52,-2.22l1.91,0.69l2.51,-0.26l-1.47,1.94l-2.71,1.83l-1.05,1.61l-1.12,1.05l-0.97,1.7l-0.98,2.73l-1.3,1.07l-2.45,-0.68l-1.45,0.19l-0.26,0.35l-0.76,-0.09l0.12,-0.64l-0.62,-0.26l-0.03,-1.19l-0.55,-0.7l0.58,-0.16l0.29,0.34l0.67,-0.29l0.49,1.19l0.47,-0.1l0.52,-0.81l-0.54,-1.31l0.03,-0.74l-1.03,-0.96l0.24,-0.95l-0.5,-0.14l-0.15,-0.89l-0.81,0.17l-0.01,-0.71l-0.41,-0.21l0.23,-0.49ZM9.85,555.26l-0.19,-0.06l0.1,-0.07l0.09,0.13ZM9.44,560.12l0.24,-0.21l1.31,0.75l0.85,-0.12l2.31,1.14l2.04,-0.47l1.05,0.28l-0.5,0.93l0.59,1.0l0.25,1.28l-1.54,-1.24l-1.76,-0.62l-0.57,0.44l0.37,0.62l-0.2,0.95l0.68,0.28l0.86,-0.5l1.49,1.66l-0.45,0.79l-0.76,0.28l-0.9,-0.41l-0.18,-1.12l-0.63,-0.6l-0.48,-0.02l-0.27,0.61l-0.8,0.34l0.23,0.56l0.9,0.22l-0.5,0.59l0.23,0.86l-0.5,0.27l0.18,0.46l-0.4,0.34l0.15,0.65l0.73,0.48l-0.01,0.77l-0.39,0.59l0.2,0.99l-0.33,0.71l0.48,0.81l0.85,0.61l0.26,0.91l-0.47,0.44l-0.27,-0.82l-0.63,-0.34l-0.04,-0.94l-1.42,-2.66l0.04,-1.57l-0.69,-1.7l0.25,0.6l0.93,0.52l0.5,-1.36l-0.8,-2.18l-0.42,-0.18l-0.44,1.1l-0.51,0.25l-0.27,-1.27l0.33,-0.73l-0.53,-1.08l0.47,0.02l0.37,0.75l0.75,0.24l1.15,-1.14l0.01,-0.46l-0.77,-0.42l-0.27,-0.67l-1.12,-0.88l-1.25,-0.42l0.01,-0.97ZM13.9,576.84l0.45,1.27l-0.16,1.27l0.48,0.48l-0.35,0.26l-0.21,-0.49l-0.51,0.1l0.0,-1.11l-0.43,-1.2l0.19,-0.51l0.54,-0.07ZM15.24,580.53l0.03,0.01l-0.01,0.03l-0.01,-0.04ZM15.34,580.96l0.09,0.21l-0.08,0.07l0.01,-0.07l-0.02,-0.2ZM16.25,581.78l0.28,0.15l0.16,-0.01l-0.23,0.19l-0.21,-0.33ZM15.76,580.3l0.02,-0.36l0.45,-0.11l0.18,0.59l-0.65,-0.13ZM13.22,576.78l-0.13,-0.08l0.01,-0.05l0.07,0.08l0.04,0.06ZM14.76,571.47l0.03,0.04l0.11,0.01l-0.16,0.04l0.02,-0.08ZM15.47,571.73l0.28,0.02l0.58,-0.26l-0.53,0.92l-0.33,-0.67ZM15.38,583.56l0.03,-0.12l0.17,-0.25l0.1,0.28l-0.3,0.09Z\",\n            name: \"British Columbia\"\n          },\n          \"CA-SK\": {\n            path: \"M225.69,715.55l44.18,-197.52l18.32,3.88l18.79,3.56l18.86,3.14l18.53,2.67l-10.31,77.69l-4.77,62.93l-4.14,60.98l-24.87,-3.43l-25.58,-4.15l-25.48,-4.77l-23.53,-4.98Z\",\n            name: \"Saskatchewan\"\n          },\n          \"CA-QC\": {\n            path: \"M567.62,485.44l0.69,-0.35l1.22,-1.38l0.77,-0.25l0.36,-0.96l0.97,-0.76l0.27,-0.74l0.58,0.53l2.0,-0.0l0.62,0.3l1.01,-0.12l0.29,-0.35l0.52,0.33l1.36,0.02l1.33,0.78l4.43,0.81l0.54,0.69l1.41,-0.28l1.21,0.56l1.62,0.15l-2.04,2.18l-0.04,0.45l0.41,0.2l0.89,-0.29l1.91,-1.82l0.65,-1.14l1.15,-0.5l1.34,0.24l0.05,0.73l0.58,0.36l0.59,-0.85l0.34,-0.05l1.02,0.44l1.5,1.4l2.15,0.56l0.33,-0.61l-1.98,-1.25l0.01,-0.69l2.64,-0.51l0.86,-0.91l0.26,-0.75l0.94,-0.12l1.32,-1.11l0.87,-2.05l1.31,-0.53l1.15,1.47l1.19,0.35l0.52,-0.22l0.64,0.65l0.96,0.14l0.29,0.88l1.68,1.33l1.17,0.26l-0.17,0.57l0.4,0.22l1.41,-0.03l0.47,-0.47l-0.15,-0.37l0.81,0.4l-0.2,0.61l0.51,0.53l0.3,1.1l-0.56,0.47l0.08,1.04l-0.66,1.38l0.44,0.57l0.83,-0.56l0.79,0.64l0.53,-0.47l-0.63,-1.88l3.32,0.52l0.44,0.74l-0.33,0.83l0.18,0.7l0.58,0.3l0.9,-0.37l0.72,0.84l-0.4,1.12l-1.28,-0.01l-0.5,0.49l-0.18,0.9l0.26,0.43l0.87,-0.75l1.25,-0.02l1.04,-0.53l0.24,-1.94l1.99,0.45l0.69,0.44l0.2,0.37l-0.4,0.55l-1.78,0.57l-0.14,0.57l0.97,0.88l-0.76,0.45l-0.18,0.55l0.32,0.31l1.45,0.09l-0.94,0.39l0.28,0.79l1.22,0.1l-0.28,0.74l1.22,0.54l-0.03,0.8l0.66,0.28l0.18,0.79l0.8,-0.09l0.33,-0.64l1.12,0.98l0.99,-0.79l0.6,0.52l1.4,-0.43l0.74,0.15l0.5,0.74l0.71,-0.18l0.81,0.24l0.43,-0.47l0.47,0.74l1.44,0.04l0.35,-0.56l0.58,0.08l0.35,-0.57l-0.15,-0.4l0.41,0.03l0.32,-0.57l0.55,0.26l0.57,-0.38l0.07,1.05l0.81,0.83l0.16,0.92l-0.39,0.69l2.73,1.17l0.45,-0.16l0.4,-0.75l0.08,-0.41l-0.34,-0.21l0.4,-0.68l0.66,0.54l0.86,-0.68l-0.68,-2.21l0.06,-0.99l0.33,-0.34l1.51,2.44l0.52,0.3l0.4,1.74l-1.41,1.11l-1.13,1.65l0.92,2.18l-1.1,0.78l-0.09,0.74l0.87,0.87l0.02,0.89l0.62,0.66l-0.12,1.26l1.77,1.39l-0.18,0.58l0.53,0.46l0.08,1.44l-0.54,0.35l-0.99,-0.08l-0.3,0.57l0.18,0.81l-4.27,0.38l-0.4,0.62l-1.76,0.56l-0.74,-0.34l-3.44,-0.33l-0.61,0.35l-0.13,0.45l5.04,1.01l3.25,-0.87l1.86,0.27l2.59,-0.97l-0.3,0.59l0.22,0.42l1.77,0.38l0.01,1.39l0.52,0.47l-0.55,0.91l0.16,0.57l1.33,0.37l-1.61,2.91l0.06,0.7l1.1,0.62l0.39,1.15l-0.82,0.74l0.18,0.82l0.46,0.28l1.17,-0.26l1.62,-1.44l0.55,0.66l0.56,-0.01l0.34,-0.36l-0.03,0.58l0.45,0.63l-0.8,-0.28l-0.46,0.51l-0.53,0.06l-0.81,1.55l0.26,1.09l0.79,0.46l-0.25,0.37l1.14,2.89l-0.58,0.4l0.05,1.35l-0.49,0.33l-0.49,-0.84l0.22,-0.95l-0.66,-1.13l-0.57,-0.43l-0.48,0.12l-0.91,-1.17l-0.58,0.12l0.06,2.25l0.87,0.28l0.21,0.84l-0.57,-0.02l-0.26,0.58l0.23,0.42l-0.29,0.25l-2.52,1.17l-0.21,0.87l0.94,-0.12l1.69,0.39l0.53,-0.37l0.36,0.88l0.63,0.06l0.18,0.98l1.09,0.56l0.4,-0.44l0.42,-1.7l0.54,-0.43l0.13,-1.06l1.01,-0.85l0.68,-1.61l0.85,-0.69l2.19,-0.57l0.33,0.32l0.95,-0.15l0.89,-0.97l1.52,0.08l1.32,0.78l0.88,0.01l0.51,0.48l0.04,1.21l0.72,0.68l0.12,1.31l0.33,0.36l0.51,-0.0l0.16,0.94l0.7,0.12l0.37,1.11l-0.21,3.72l0.23,2.19l-1.06,1.95l-1.79,0.76l-2.23,1.57l-0.7,1.09l-0.84,0.55l-1.72,2.92l0.14,0.52l0.53,-0.1l2.0,-2.81l1.3,-1.2l4.27,-2.54l0.58,-0.65l0.7,-1.85l-0.28,-1.57l0.36,-0.98l-0.29,-4.95l1.07,-0.41l0.69,0.21l0.1,1.64l1.01,1.56l-0.09,0.85l-1.33,2.38l-0.05,1.72l0.8,0.14l0.86,-1.54l0.16,-1.47l0.76,-0.94l0.25,-1.37l0.18,0.62l0.59,-0.02l0.28,0.44l-0.08,1.85l0.62,1.26l-0.06,2.52l0.55,0.49l0.46,-0.09l0.17,-0.53l-0.29,-0.92l0.35,-1.3l-0.49,-1.15l0.31,-1.98l0.61,-1.14l0.91,-0.3l0.35,-0.94l0.9,-0.54l0.29,-0.59l0.5,0.12l0.47,-0.31l0.04,-1.07l0.39,-0.47l0.2,-1.13l0.04,0.46l1.0,0.7l0.33,-0.34l0.21,-1.22l1.61,-0.49l-0.07,-0.59l-0.37,-0.26l-0.06,-2.48l0.18,-0.83l0.73,-0.52l-0.43,-1.82l0.35,-0.31l2.75,1.46l0.75,1.14l1.4,0.34l-0.27,1.87l0.65,1.73l-0.65,1.08l0.58,0.91l0.6,-0.1l0.1,-1.07l0.51,-0.52l0.2,-1.18l-0.72,-0.62l0.36,-1.47l0.51,-0.25l-0.14,-0.64l-1.71,-1.57l-0.68,-0.02l-0.34,-0.94l-0.56,-0.26l0.14,-0.8l1.69,-0.26l0.57,-0.67l-0.23,-0.75l-1.62,-0.02l0.72,-0.57l0.04,-0.9l1.36,0.75l0.56,-0.32l-0.22,-0.92l-0.88,-0.47l0.13,-0.44l0.74,0.42l1.38,0.14l0.2,-0.65l-1.0,-0.55l1.84,-0.07l0.57,-0.69l-0.61,-0.52l-0.82,0.16l-1.08,-0.38l-0.63,0.1l-0.23,0.69l-0.95,-1.14l-0.01,-0.81l0.84,0.46l0.2,-0.45l-0.24,-0.65l0.85,-0.88l-1.22,-1.3l1.63,1.03l0.55,-0.07l0.1,-0.59l-1.2,-1.2l-0.05,-0.28l0.48,-0.3l-0.16,-0.44l-0.91,-0.42l0.54,-0.42l1.03,-0.08l2.03,1.08l1.18,-0.2l-0.25,-0.68l-0.92,-0.24l-1.33,-0.96l-2.27,-0.15l-2.07,-3.34l1.18,-2.17l2.75,0.77l0.74,-0.15l0.3,-0.5l-0.46,-0.43l-0.62,0.05l-1.47,-0.61l0.56,-0.4l-0.37,-1.02l0.63,-0.24l0.02,-0.27l-0.36,-0.54l0.15,-0.35l-0.71,-0.61l0.57,-0.58l0.06,-0.53l-0.34,-0.44l0.35,-0.19l0.07,-1.44l0.58,-0.41l0.89,0.4l0.89,-0.34l0.39,0.53l-1.02,0.44l0.27,0.84l-0.4,0.38l-0.84,-0.14l-0.37,0.57l1.18,1.74l1.8,0.19l-0.78,0.63l0.2,0.82l-0.36,0.51l0.87,2.23l-0.75,0.93l0.47,2.03l2.65,1.87l0.66,-0.24l1.57,-1.91l0.5,0.0l-1.08,1.6l0.23,0.51l-0.15,0.85l0.38,0.4l-0.08,0.78l0.52,0.83l0.04,1.04l1.29,1.97l1.23,0.09l0.68,0.63l-0.81,0.42l-2.04,-0.22l-0.84,-0.51l-0.77,0.2l-0.59,0.81l-0.17,0.88l0.35,0.78l-0.07,0.91l1.07,0.25l0.82,-0.83l1.66,0.6l2.33,-0.62l0.77,1.65l1.34,0.35l0.65,-0.29l0.91,-1.59l1.27,-0.51l0.48,-1.09l1.59,0.27l1.03,0.92l-0.89,0.81l-2.37,0.8l-1.68,1.44l0.04,1.65l0.55,0.89l0.98,0.39l1.01,-0.96l0.71,0.98l-0.14,0.45l-1.12,0.52l-0.29,1.21l-0.96,0.91l0.08,2.13l-1.14,0.87l-0.33,0.66l0.25,2.27l0.5,0.37l1.8,-0.09l0.3,1.0l2.7,3.39l0.56,-0.0l0.58,-0.81l0.57,0.97l1.02,0.63l0.76,-0.34l0.6,0.55l0.41,-0.14l-0.62,0.77l-0.13,0.97l0.59,1.97l0.91,1.19l-0.87,1.11l0.05,1.7l0.3,1.0l0.42,0.3l0.5,-0.32l0.29,0.98l-0.57,1.26l0.37,1.37l-0.09,1.2l0.45,0.67l-0.83,0.91l0.33,1.16l-0.69,0.61l-0.13,1.26l0.51,0.91l2.2,1.68l0.45,1.27l0.6,0.23l-2.46,0.56l-0.19,0.75l0.85,0.7l0.19,1.47l0.64,0.58l0.6,0.17l0.75,-0.34l0.9,0.25l-0.99,1.19l0.5,1.88l0.58,0.09l0.63,-0.75l1.2,0.69l1.14,-0.35l1.0,0.23l-2.1,2.25l1.47,2.03l0.77,0.2l0.02,2.05l0.99,0.42l0.36,1.7l-0.62,1.08l0.27,0.57l0.66,0.38l1.05,-0.03l2.92,-0.53l-2.12,1.18l0.07,0.69l-0.64,0.99l0.65,0.88l1.04,0.04l-0.05,2.55l0.73,1.52l0.13,1.13l-1.66,-0.28l-0.67,0.59l0.03,1.27l0.42,0.78l-0.49,1.16l2.22,1.59l-0.85,0.47l-0.3,0.56l-1.32,0.31l-0.54,-0.17l-1.23,-1.25l-2.72,-0.77l-1.01,0.33l-0.68,1.32l-1.58,0.36l-0.16,-1.07l-0.49,-0.52l-0.72,-0.12l-1.42,-1.13l-2.0,-0.07l-0.79,0.82l-0.24,1.58l-1.25,0.77l-0.89,-0.08l-0.42,0.43l0.62,1.64l-1.32,0.02l-0.53,0.59l-1.52,-1.14l-0.99,-1.61l-1.43,-0.05l-0.64,0.43l-0.99,-0.62l-1.36,-0.25l-4.27,-3.5l-0.61,-0.23l-0.64,0.17l-0.47,-0.73l-1.18,-0.43l-0.73,0.29l-0.13,0.78l1.96,1.57l-0.33,0.61l0.16,1.5l1.48,1.67l-0.4,0.37l0.0,0.74l1.8,2.02l-0.78,0.36l-0.09,0.75l-2.18,-0.7l-1.04,-1.33l-3.24,-1.24l0.21,-0.69l-0.37,-0.47l-1.37,-0.14l-0.77,0.94l0.53,1.47l2.45,2.55l2.18,1.29l0.17,0.64l-0.33,1.07l-0.93,1.21l0.43,1.21l-2.53,-1.23l-0.58,0.72l0.43,1.34l-1.2,0.47l-0.92,1.29l0.35,1.81l0.81,0.68l0.94,1.62l-1.07,1.38l0.14,2.16l0.93,0.8l1.58,0.7l0.42,0.94l0.89,0.37l-0.55,0.67l0.11,0.46l2.28,1.12l0.45,0.99l1.09,1.0l3.48,0.25l1.45,1.05l-0.51,0.43l-0.26,0.85l0.81,1.19l0.55,3.0l-0.44,-0.3l-0.56,0.14l-0.51,-0.32l-1.25,-0.05l-0.57,0.34l-0.85,1.35l1.34,3.66l0.69,0.73l1.96,0.6l0.65,-1.08l0.53,1.3l1.29,0.57l1.21,1.09l0.65,-0.53l0.66,0.04l0.3,-0.4l-0.32,-1.38l0.47,-0.18l0.52,-0.84l-0.32,-2.27l1.05,-0.72l0.36,-1.36l0.41,0.21l1.24,1.77l-0.61,-0.09l-0.45,0.41l0.02,0.51l1.73,2.71l-0.57,0.1l-0.27,0.72l1.77,4.37l-0.82,0.29l-0.25,1.19l2.25,3.25l1.07,-0.02l0.54,-0.72l-0.7,-1.91l0.45,0.59l1.47,0.59l0.23,1.26l1.38,0.53l1.88,-1.27l1.03,0.07l0.4,-0.31l-0.01,0.83l0.47,0.85l0.72,-0.11l0.22,-0.71l0.47,-0.13l0.38,-0.63l0.96,0.97l0.54,0.12l0.06,1.28l0.97,1.21l0.43,0.14l0.35,-0.88l0.95,0.41l0.4,0.8l1.35,0.12l0.48,-0.26l0.86,0.35l0.68,-0.28l0.41,-0.93l0.77,-0.07l0.95,0.4l1.82,1.61l1.03,0.12l1.75,-2.13l0.33,-1.42l-0.4,-1.03l-0.64,-0.53l-0.98,-2.33l0.8,0.1l0.37,-0.37l-0.72,-2.43l0.81,-0.28l0.1,-0.35l-1.38,-2.34l0.39,-1.72l-0.28,-1.5l1.51,1.38l1.13,0.13l0.97,-0.31l0.05,0.48l1.12,0.98l1.44,2.53l-1.28,-0.17l-0.48,0.73l0.86,0.91l0.81,0.19l35.0,-11.1l35.06,-12.54l3.42,9.02l-0.66,0.13l-0.44,-0.94l-0.67,-0.15l-1.97,1.23l-0.78,1.05l-0.46,-0.27l-0.62,0.77l-0.72,-0.49l-2.68,4.19l-1.64,1.25l-0.33,-0.76l-0.67,0.01l-0.29,0.38l0.18,0.75l-1.43,-0.17l-1.06,1.39l-0.66,-0.03l-0.6,1.15l1.14,1.19l-3.26,3.83l0.13,0.45l0.55,0.21l0.66,1.48l0.15,1.62l-0.21,0.42l-0.41,-1.85l-0.81,-0.1l-0.06,1.92l-0.36,0.95l-0.77,0.21l0.1,0.68l-0.54,1.09l-0.77,0.56l-0.1,1.51l0.82,0.48l-0.9,0.18l-0.48,1.41l-2.17,1.52l-0.5,1.77l0.65,0.77l-1.2,1.54l-0.92,0.48l-0.19,-0.56l-0.52,-0.21l-0.83,0.61l-0.45,-0.29l-0.34,0.3l0.03,0.63l-2.0,0.63l-0.71,0.9l-0.41,-0.49l-0.86,0.79l-1.54,-0.22l-0.9,1.3l-1.2,0.11l-1.38,1.11l-1.59,0.4l-2.2,1.67l-0.63,-0.58l-1.77,1.59l-0.17,-0.43l-1.33,-0.85l-3.94,1.02l-1.36,-0.41l-0.92,0.13l-0.55,0.57l-2.59,0.63l-0.63,-0.4l-2.2,1.18l-1.14,-0.17l-0.36,0.63l-1.34,0.39l-0.01,0.84l-1.47,0.35l-0.61,0.76l-0.93,-0.54l-1.25,0.49l-1.4,-0.41l-1.32,0.12l-2.04,0.78l-1.49,1.15l-2.1,0.27l-1.44,-0.27l-1.88,1.28l-2.61,0.93l-0.5,-0.13l-3.04,0.83l-1.08,-0.29l-4.94,2.56l-1.0,0.22l-1.65,-0.17l-0.78,1.42l-0.61,-0.13l-0.27,0.96l-1.18,-0.13l-1.06,0.6l-0.93,-0.98l-0.82,0.24l-0.65,1.05l0.01,1.01l-0.52,-0.18l-0.47,0.48l0.13,0.41l-0.84,2.13l-1.39,0.87l-0.47,0.69l-0.22,2.67l-0.62,0.01l-0.53,0.64l-0.24,1.65l0.46,1.24l-0.35,2.17l0.49,1.83l-0.9,2.3l-3.83,1.33l-0.72,0.8l-2.58,0.41l-0.47,0.63l-0.65,0.25l-0.13,1.04l-1.18,0.45l-0.43,0.49l0.89,0.68l0.68,-0.07l-0.1,0.23l-1.15,0.54l-0.93,-1.34l-0.63,-0.14l-0.38,0.24l0.64,1.28l-1.75,1.61l-0.34,0.95l0.1,0.8l-0.4,0.33l-0.04,0.54l-0.9,0.37l-1.58,2.08l-0.07,0.56l-0.93,0.62l-0.27,3.11l-1.0,0.53l-0.2,2.46l-1.09,3.18l-1.31,1.32l-0.7,1.78l-1.29,0.07l-2.38,-1.59l-1.96,0.45l-3.06,-1.17l-0.79,0.36l-2.96,0.12l-0.98,-0.53l-2.8,0.0l-1.08,0.61l-0.17,0.52l0.51,0.2l0.91,-0.32l1.95,0.32l-0.74,0.24l-0.2,0.65l0.77,0.75l1.42,-0.87l2.94,-0.67l1.57,0.19l2.55,0.95l0.86,-0.0l0.74,-0.43l0.87,0.13l1.43,1.22l1.11,0.06l-0.84,6.13l-0.83,1.47l-1.18,1.08l-0.46,1.37l-0.01,1.67l-2.8,1.65l-0.56,3.67l-0.87,2.54l-2.49,2.27l-2.19,3.43l-0.38,1.32l-0.97,1.01l-1.31,0.36l-2.8,1.73l-2.2,0.19l-1.25,1.7l-2.41,1.49l-0.16,1.61l-2.13,1.58l-1.37,2.11l-2.7,1.13l-1.71,1.34l-0.11,1.93l-1.55,0.98l-0.71,3.28l-0.88,1.17l-0.56,1.5l-0.69,0.71l-2.07,0.72l-0.98,0.8l-1.49,2.83l-1.29,1.09l-1.0,0.07l-0.96,-0.57l-1.35,0.32l-1.09,-0.65l-3.72,-0.87l-1.32,0.65l-2.06,0.27l-1.33,0.98l-2.82,0.84l-3.47,2.28l-1.13,0.4l-0.89,1.45l-0.7,0.24l-2.82,-1.86l-1.12,-0.09l-1.21,0.37l-0.91,1.01l-1.48,-0.68l-2.37,-0.38l-1.36,-2.43l-0.7,-0.56l-0.56,-1.82l-0.58,-0.48l-0.97,-0.11l-0.77,0.39l-0.17,0.53l0.27,0.96l-0.43,0.18l-2.91,-1.28l-0.7,-0.73l-0.29,-1.03l-1.0,-0.93l-4.14,-1.81l-3.41,-0.5l-1.54,0.14l-0.92,-0.32l-2.43,0.26l-0.44,-0.35l-4.48,-0.36l-0.53,-0.87l-1.89,-1.07l-0.93,-0.91l-0.79,-1.71l-1.17,-1.1l-1.06,-2.0l-1.81,-1.73l-1.98,-2.57l-0.54,-3.25l-1.96,-2.87l0.5,-2.68l-6.88,-58.56l1.67,2.7l0.76,-0.3l-0.21,-1.21l-2.42,-2.91l-1.05,-9.24l-0.4,-0.97l1.8,-2.07l0.51,0.3l-0.23,0.86l0.18,0.89l0.51,0.29l1.45,-0.36l1.17,0.94l1.18,3.03l-0.22,0.62l0.21,0.67l0.85,0.87l1.17,0.02l-0.03,-0.46l-0.89,-0.97l-0.02,-0.97l0.72,-1.43l-0.66,-0.48l0.75,-1.26l0.88,-0.26l0.24,-0.67l-0.67,-0.43l-0.75,0.08l0.06,-1.28l-0.27,-0.56l-1.49,-0.66l-0.25,-0.73l-0.98,-0.95l0.9,-0.11l1.02,-1.09l0.05,-0.63l-0.75,-1.16l1.4,-0.7l0.51,-1.39l0.54,-0.46l-0.09,-0.35l0.52,-0.43l0.47,-1.86l-0.26,-0.68l1.06,0.09l0.47,-0.44l-0.67,-0.78l-0.95,-0.09l0.35,-0.97l-0.4,-0.71l-0.02,-1.5l-0.67,-1.13l-0.57,-0.36l-1.4,-0.03l0.3,-0.73l-0.41,-0.8l-0.52,-0.15l-0.21,-1.16l-0.4,-0.45l0.77,-0.58l-0.29,-0.88l0.45,-0.68l-0.35,-0.62l-1.54,0.32l-0.13,-0.75l0.56,-0.12l0.27,-0.63l-1.0,-0.9l-0.91,0.22l0.28,-0.57l-0.53,-0.64l0.46,-2.68l-0.15,-0.59l-0.61,-0.4l-0.31,-2.06l-0.59,-0.93l-0.48,-0.2l0.67,-0.5l-0.08,-0.59l0.39,-0.84l-1.06,-1.01l-0.2,-1.12l-0.42,-0.26l-0.19,-0.72l0.14,-1.17l1.02,0.28l0.35,-0.65l-0.54,-0.57l-1.21,-0.13l0.54,-0.95l-0.65,-1.0l0.45,0.02l0.34,-0.63l-1.92,-1.3l0.6,-1.33l-0.13,-0.66l-0.87,-0.07l-1.12,0.54l-0.95,-0.41l0.44,-0.49l-0.07,-0.54l-1.53,-0.25l0.1,-0.3l-0.97,-1.33l0.4,-0.7l-0.53,-0.38l-0.9,-1.95l0.19,-0.91l-1.37,-0.81l-0.23,-0.46l1.54,-1.19l5.33,-2.46l0.81,-1.11l4.85,-2.88l2.24,-2.4l3.59,-2.98l0.9,-1.87l4.86,-6.16l0.42,-1.3l-0.39,-0.24l2.32,-4.01l0.23,-1.05l1.12,-1.18l0.75,-4.99l-0.05,-2.28l-0.87,-6.87l-1.23,-4.49l0.01,-1.63l-2.06,-5.25l-2.04,-3.63l-0.28,-1.28l-4.3,-5.9l-1.39,-1.17l-0.78,-0.16l-1.14,-0.88l-0.4,-0.99l-1.54,-1.0l-1.03,-0.16l-3.19,-1.36l-0.2,-0.78l-2.67,-1.45l-1.67,-1.88l-1.36,0.49l-0.0,-0.63l0.73,-0.62l0.04,-0.39l-0.65,-0.92l0.23,-0.9l-0.81,-1.89l0.57,0.26l0.39,-0.48l0.6,0.38l0.49,-0.32l0.62,-1.55l-0.37,-0.94l0.62,-0.27l0.02,-0.5l0.62,-0.7l-0.09,-0.62l0.36,-0.61l-0.21,-0.71l2.29,-1.62l0.54,-1.13l-0.19,-0.69l0.75,-0.42l-0.01,-0.71l-1.56,-0.39l-0.32,-0.57l1.18,-1.28l-0.12,-1.72l-0.72,-0.58l0.21,-0.23l0.57,0.33l0.79,-0.25l0.67,0.46l0.31,0.97l0.49,0.39l1.39,0.04l0.36,-0.45l-0.36,-0.46l-0.94,-0.2l-0.33,-1.13l-0.7,-0.94l0.5,-0.95l1.08,-0.14l0.32,-0.38l-1.09,-2.19l0.03,-0.71l1.09,-1.12l-0.29,-0.33l0.53,-0.69l-0.47,-0.56l-0.98,0.55l-0.62,-0.45l-0.68,0.43l-1.06,-0.02l-0.01,-0.6l1.22,-0.14l0.38,-0.57l-1.31,-0.85l0.4,-0.29l-0.01,-0.58l-0.77,-0.7l-0.01,-0.46l-0.57,-0.12l-0.65,-1.3l-0.95,-0.49l0.22,-0.81l0.9,-0.89l0.26,-0.75l0.98,-0.13l0.22,-0.69l-1.49,-0.49l-1.22,0.52l-1.2,-1.06l1.53,-2.14l0.06,-0.6l-0.31,-0.29l0.94,-0.68l0.15,-0.5l-0.49,-0.33l-0.46,0.11l-2.27,1.59l-0.48,-0.97l-0.38,-0.1l-2.14,0.94l0.57,-1.71l1.68,-2.74l0.64,-0.51l-0.06,-1.78l0.69,-0.82l-1.13,-4.31l0.44,-0.09l0.26,-0.6l1.05,-0.69l-0.19,-0.58l-0.8,-0.32l-0.14,-0.28l1.27,0.24l0.34,-0.62l-1.23,-1.2l-1.15,-0.05l-0.92,-1.42l-0.4,-0.2l-1.2,0.32l-0.39,-0.41l-1.11,-2.83l-0.33,-1.76l-0.47,-0.63l-0.63,-2.88l-0.22,-2.36l0.82,-1.83ZM578.66,653.17l-0.12,0.05l-0.03,-0.04l0.16,-0.0ZM653.23,787.08l0.57,0.5l3.84,0.59l0.65,0.96l-1.84,0.63l-0.63,1.13l-1.28,0.94l-1.51,-1.14l0.21,-3.62ZM655.71,541.57l0.05,-0.09l0.04,0.01l-0.05,0.06l-0.03,0.02ZM627.44,494.8l0.16,-0.06l-0.08,0.05l-0.09,0.01ZM639.87,499.16l-0.07,-0.04l0.04,-0.08l0.0,0.0l0.03,0.12ZM657.55,533.31l0.42,-0.03l0.38,-0.21l-0.29,0.53l-0.52,-0.29ZM677.38,543.7l-0.22,-0.37l-0.25,-1.11l0.12,-0.83l0.33,0.21l0.01,2.1ZM692.95,521.88l-0.28,-0.07l-0.05,-0.23l0.17,0.12l0.17,0.18ZM695.38,499.78l-0.07,-0.73l1.02,0.21l-0.33,0.12l-0.61,0.4ZM696.49,499.23l0.14,-0.3l0.34,0.14l-0.21,0.11l-0.26,0.05ZM721.26,553.36l-0.0,-0.22l-0.06,-0.42l0.12,0.17l-0.05,0.47ZM742.73,637.67l-0.85,-1.13l0.13,-0.56l-0.38,-1.24l0.31,-0.77l3.61,-2.12l0.56,-0.95l0.65,0.74l1.75,0.43l0.64,0.45l-4.79,2.12l-1.11,1.37l-0.52,1.66ZM572.37,551.69l-0.04,-0.14l0.05,-0.08l-0.01,0.22ZM809.57,639.69l0.11,-0.18l0.38,-0.14l-0.2,0.29l-0.28,0.03ZM794.09,718.58l-0.04,-0.31l0.4,-0.4l-0.02,0.55l-0.34,0.16ZM794.11,720.88l0.12,0.06l0.23,0.03l-0.4,0.14l0.05,-0.23ZM752.09,684.41l2.22,-1.3l0.33,-0.48l0.8,-0.2l2.39,0.31l9.66,-0.79l1.99,0.19l0.97,0.49l4.51,0.38l2.02,1.34l1.7,0.1l1.03,0.67l2.25,-0.21l0.97,0.38l0.65,-0.24l3.15,2.43l-0.18,0.63l-0.76,0.74l-0.8,0.01l-3.99,1.56l-3.11,-0.31l-2.11,0.44l-4.99,-0.03l-2.56,-0.78l-3.42,-0.22l-1.45,-1.91l-1.85,-1.13l-2.25,-0.76l-4.73,-0.57l-1.03,-0.61l-0.56,0.46l-0.85,-0.6ZM652.77,796.2l1.34,-1.08l0.39,-1.15l0.65,-0.66l1.25,-0.55l0.72,-0.75l1.87,-0.62l1.13,-1.84l1.23,-1.03l0.36,-0.7l0.42,-0.27l1.68,-0.02l0.58,-0.4l0.23,-0.76l-0.52,-1.46l0.53,-1.33l-0.16,-1.71l2.17,-3.82l0.22,-2.72l1.14,-0.54l1.06,-1.39l1.11,-0.26l1.41,-0.99l0.62,-0.82l-0.01,-0.71l1.62,-2.24l2.48,-1.6l0.65,-2.03l1.89,-1.12l1.43,-2.03l1.02,0.35l0.9,-0.13l4.53,-3.0l1.05,-1.01l0.42,-1.1l1.5,-0.46l1.15,-1.15l0.63,-0.03l0.89,-0.57l0.51,-0.89l2.15,-1.52l1.37,-2.26l1.5,-3.92l1.24,-1.36l0.34,-2.36l1.01,-1.11l2.88,-5.88l-0.06,-1.18l0.74,-1.92l1.24,-0.99l2.35,-4.3l2.12,-2.93l1.07,-0.44l1.94,-2.19l0.49,-1.23l1.02,-0.65l1.4,-1.96l0.8,-0.4l0.61,-0.88l1.14,-0.46l4.04,-3.95l1.4,-0.62l7.96,-6.62l4.17,-2.69l3.7,-1.3l3.37,-1.7l6.91,-1.06l1.71,0.07l1.4,0.5l2.0,0.2l3.47,1.52l1.16,0.82l0.25,0.86l-3.4,-0.34l-0.76,0.51l0.72,0.48l-0.21,0.46l0.39,0.43l1.21,-0.43l0.13,0.75l1.3,0.11l1.86,1.14l-0.66,0.55l-0.03,1.06l1.11,0.79l-0.8,0.71l-0.09,0.96l-2.1,1.13l-1.87,1.54l0.22,0.72l-0.3,1.78l-1.19,0.78l-0.79,0.12l-0.01,1.14l-2.76,2.81l-1.46,0.58l-1.02,-0.61l-3.52,-0.21l-1.24,-0.56l-0.26,-0.76l-0.44,-0.22l-0.88,1.05l-0.73,1.72l-2.23,0.29l-0.47,0.51l-2.04,0.13l-0.59,0.63l-0.03,0.61l-3.97,2.56l-0.27,0.53l0.12,0.86l-1.26,-0.06l-1.13,1.05l-1.76,0.33l-0.23,0.65l-2.65,-0.67l-0.29,-0.8l-0.46,-0.22l-5.82,1.45l-0.29,0.48l0.2,0.82l-2.69,0.66l-0.29,0.48l1.44,6.32l-1.36,2.4l-2.11,1.81l-2.77,1.73l-0.24,-1.66l-0.38,-0.42l-2.14,-0.15l-0.61,0.32l-6.09,15.23l0.29,5.14l-1.15,1.5l-0.55,2.85l0.72,1.19l-0.55,0.98l0.29,1.98l0.87,0.77l-1.38,2.38l0.31,1.46l-1.62,1.31l-1.12,2.01l-0.21,1.82l1.32,1.03l-1.1,-0.43l-0.86,0.3l-0.28,0.85l0.29,1.45l-0.3,0.49l-0.57,-0.85l-0.81,-0.24l-1.42,1.3l-0.39,0.92l-1.68,-0.48l-0.78,0.32l-1.19,1.38l0.52,0.71l-0.6,3.08l-37.01,7.26ZM688.69,755.58l1.98,-2.71l0.28,-0.13l-0.38,1.07l-1.88,1.77ZM678.73,541.82l0.47,0.85l0.01,0.82l-0.46,-0.42l-0.01,-1.24ZM659.52,786.99l0.49,-0.72l1.79,-0.99l0.73,-1.75l0.81,-0.99l-0.31,2.22l0.19,1.04l-0.4,0.6l-2.32,-0.04l-0.98,0.62ZM662.23,534.23l0.01,-0.03l0.04,-0.02l-0.01,0.02l-0.04,0.03ZM659.87,785.06l1.03,-1.6l0.72,-0.51l-0.63,1.6l-1.12,0.51ZM659.17,532.29l1.64,-0.18l0.38,0.44l-1.32,2.15l0.08,-1.38l-0.78,-1.02ZM657.0,790.9l0.16,-0.25l0.88,-0.1l-0.46,0.23l-0.58,0.13Z\",\n            name: \"Qu\\xe9bec\"\n          },\n          \"CA-PE\": {\n            path: \"M771.47,732.39l0.78,1.7l-0.78,1.88l0.13,0.82l0.7,0.47l0.77,-0.11l1.39,1.0l0.16,0.9l0.72,0.15l-0.07,0.8l-0.55,0.52l0.16,0.77l0.73,-0.04l0.43,-0.45l0.61,0.64l1.57,-0.16l0.33,-0.53l-0.67,-1.6l0.46,-0.19l1.51,0.13l0.16,0.47l1.06,0.44l0.4,-0.34l0.06,-0.62l0.61,-0.01l0.57,0.69l1.37,0.46l0.37,-0.51l3.75,-1.24l0.36,0.19l0.78,-0.8l2.11,-0.31l0.32,-0.51l-0.27,-0.27l0.62,-0.28l3.82,-1.4l1.87,-0.25l-1.8,2.01l-0.64,-0.34l-0.48,0.1l-0.02,0.49l-0.53,0.01l-0.31,0.51l0.32,0.48l-0.52,0.2l0.22,0.56l-1.05,0.36l0.24,0.7l0.64,0.06l-1.37,0.0l-0.4,0.32l-0.04,0.89l0.32,0.64l0.6,-0.02l0.16,0.53l0.44,0.19l0.71,-0.13l0.01,0.35l-0.58,0.3l-0.49,0.84l1.06,0.39l-2.58,1.13l-0.78,0.02l-0.99,-0.6l0.09,-0.49l-0.46,-0.25l0.36,-1.16l-0.25,-0.3l-0.71,-0.03l-0.92,-0.59l-0.52,0.49l-0.71,-0.1l1.06,-1.86l-0.51,-0.53l-0.94,0.65l-0.69,1.16l-1.06,0.01l0.29,0.75l-0.86,1.0l0.76,0.51l-2.98,-0.56l-1.4,0.5l-0.82,-0.15l-0.7,-0.68l-0.92,-0.25l0.82,-0.41l-0.92,-1.1l-1.18,0.33l-1.26,-0.1l-0.64,0.6l-1.36,0.25l0.2,-0.26l-0.39,-1.49l0.35,-0.94l-0.78,-1.42l-0.79,0.92l-1.22,-0.25l-1.58,0.61l-0.34,-0.51l0.16,-1.21l0.8,-1.45l0.1,-1.5l1.48,-2.6Z\",\n            name: \"Prince Edward Island\"\n          },\n          \"CA-MB\": {\n            path: \"M325.95,732.99l4.14,-61.02l4.77,-62.91l10.31,-77.66l33.82,3.81l33.89,2.47l0.12,3.64l-0.6,2.66l0.36,1.51l-0.19,0.95l0.53,1.44l-0.02,2.2l-0.6,0.92l-0.31,3.26l-1.34,-0.06l-0.7,0.81l0.06,0.47l1.76,-0.06l0.29,0.93l0.76,0.46l0.02,0.76l-0.66,1.78l0.17,0.48l1.42,-0.82l0.96,1.03l0.53,2.0l0.68,0.28l1.11,-0.56l0.27,0.59l-0.57,0.66l-0.54,1.46l0.08,2.65l-0.51,0.99l-0.4,3.24l0.38,0.24l0.36,-0.27l1.44,-3.28l0.06,-3.8l0.85,-1.47l0.24,-1.36l2.39,0.3l1.61,-0.55l1.33,0.57l0.49,-0.15l0.27,1.01l0.73,0.31l1.0,-1.02l0.84,-0.08l0.28,0.31l0.16,4.18l1.69,5.63l0.69,1.0l0.49,1.81l0.25,4.64l0.43,0.18l1.03,2.86l0.47,2.27l0.56,0.64l0.43,1.27l0.27,1.71l-0.38,2.25l-1.47,3.14l-1.12,1.66l-1.62,0.59l-0.12,0.73l0.53,0.19l1.46,-0.36l2.43,-1.98l1.57,-0.33l-1.98,1.87l0.57,0.37l1.28,-0.39l1.33,-1.17l2.64,-0.65l9.39,-3.63l4.27,0.65l1.73,0.78l0.4,0.66l3.05,1.73l1.07,1.04l5.02,1.58l0.98,-0.09l3.56,1.54l-49.25,55.9l-17.57,16.1l-4.09,69.07l-36.0,-2.67l-36.08,-3.9Z\",\n            name: \"Manitoba\"\n          },\n          \"CA-YT\": {\n            path: \"M2.99,403.6l-2.51,-3.38l99.63,-158.54l0.21,0.56l0.59,0.12l2.17,2.22l1.13,0.76l0.8,-0.0l1.33,0.76l0.84,1.67l1.71,1.75l0.18,0.8l0.9,0.66l-0.07,2.09l0.76,2.03l-0.1,2.95l1.12,0.86l0.58,-0.27l-0.01,1.69l0.41,1.39l3.81,6.94l1.36,0.79l1.09,2.36l0.71,0.44l0.6,-0.15l0.59,0.28l-11.85,21.13l-0.58,1.5l0.84,1.37l-0.55,2.17l-1.23,1.62l0.21,0.92l-0.57,1.44l-0.9,1.03l-1.33,0.65l-0.13,0.76l-0.92,1.4l-0.22,1.31l0.22,0.46l14.41,7.82l-0.45,0.78l0.79,1.4l0.09,2.32l-1.18,1.06l0.08,1.17l-0.46,0.61l0.47,1.99l-0.93,0.4l-0.31,1.21l-0.91,0.0l-1.74,2.16l0.11,0.88l1.21,0.53l-0.01,0.56l-0.91,1.75l-0.98,0.23l-0.87,0.83l-0.04,0.65l0.36,0.38l-0.74,1.47l0.3,0.57l1.49,1.0l0.94,-0.39l1.38,-0.03l1.52,0.54l-1.27,1.1l-0.08,0.74l0.43,0.46l1.31,0.21l0.7,-0.73l1.51,-0.49l0.27,1.26l1.01,0.21l-0.11,0.35l-2.02,0.3l-0.77,0.87l0.78,2.27l-0.08,3.66l-1.05,0.38l-1.32,1.63l-2.41,0.94l-0.74,0.99l-0.74,-0.1l-0.75,0.49l-0.62,-0.17l-0.32,0.4l0.05,0.31l-0.45,0.35l0.12,0.71l0.48,0.56l1.11,-0.05l-0.7,1.31l0.47,0.8l0.7,0.35l-0.12,0.55l-1.75,0.48l-0.7,1.7l-1.2,0.2l-0.48,0.64l0.08,1.28l0.92,0.26l0.9,0.76l0.63,1.68l0.7,0.59l-0.01,2.15l0.36,1.15l0.86,0.91l-1.67,1.12l-0.58,0.81l0.17,0.6l1.11,0.22l0.54,0.79l1.97,-0.15l0.59,-0.58l1.23,1.28l0.19,2.0l-0.66,0.42l-0.05,0.59l0.42,0.43l-0.02,1.43l-0.84,0.83l0.15,1.37l-0.3,0.52l0.24,0.53l0.45,0.07l-0.34,1.28l0.97,1.72l0.43,0.17l0.51,2.07l0.96,1.36l0.59,0.27l-1.75,0.01l-0.68,0.79l0.29,1.13l1.16,0.11l-0.17,1.18l0.85,0.52l-0.24,0.43l0.35,0.78l-0.17,1.41l-0.92,0.4l-0.57,1.09l-2.07,0.18l-0.81,0.97l0.09,0.6l0.72,0.23l0.01,1.12l0.49,0.51l-0.28,2.33l0.67,0.92l0.88,0.18l-2.93,2.76l0.2,2.37l-0.35,1.22l0.54,0.92l-0.16,0.9l-0.8,0.25l-0.14,0.66l0.35,0.36l0.86,-0.02l1.19,2.39l-0.76,-0.12l-0.79,0.74l0.13,0.99l-1.0,0.81l-0.09,2.31l-0.77,0.19l-0.34,0.6l1.1,1.56l1.26,0.18l0.72,0.74l-0.12,0.81l0.63,0.7l0.68,-0.03l0.86,-0.64l0.77,0.31l0.61,1.96l-0.31,0.78l0.52,1.18l-0.24,1.87l0.43,0.56l0.66,0.07l0.03,1.48l-0.41,1.6l0.51,0.73l0.33,1.51l0.7,0.77l0.06,0.96l0.76,1.13l1.44,0.78l0.74,0.03l0.74,1.3l-0.3,1.16l0.27,0.71l-0.88,3.32l-0.53,1.02l-0.84,0.25l-0.34,0.51l0.21,1.0l1.01,0.01l-0.47,1.93l-0.85,1.61l0.11,0.5l-0.38,0.94l0.32,0.94l0.58,0.12l0.32,-0.28l0.2,0.69l0.55,0.36l1.68,-0.65l0.57,0.95l1.3,0.52l1.0,-0.29l0.28,-0.9l0.4,0.12l-0.02,1.03l1.01,0.6l1.48,-1.19l0.97,1.64l1.38,0.82l1.51,1.46l2.18,-0.54l2.61,0.89l0.53,-0.31l0.8,-1.34l1.56,0.69l-0.24,3.01l-1.54,0.79l-0.48,0.84l0.61,2.61l-0.27,1.75l1.61,0.99l-0.73,2.35l0.23,4.91l-0.86,1.08l-31.4,-13.07l-24.81,-11.37l-28.47,-14.24l-20.01,-10.81l-23.54,-13.6l-0.23,-1.48l3.03,-3.02l0.42,-0.84l-0.17,-0.52l-5.13,-2.69l-3.74,0.81l-2.48,-3.89l-0.63,-0.21l-1.12,0.73ZM110.73,248.92l1.12,-0.26l0.66,1.18l-0.77,-0.34l-0.9,0.49l-0.12,-1.07Z\",\n            name: \"Yukon\"\n          },\n          \"CA-NB\": {\n            path: \"M711.48,743.21l4.88,-3.44l1.67,-2.57l0.18,-1.28l-1.33,-5.56l2.7,-0.66l0.29,-0.48l-0.2,-0.82l5.1,-1.27l0.53,0.94l2.39,0.41l0.8,0.58l0.47,-0.21l0.15,-0.93l1.52,-0.21l1.16,-1.07l1.52,0.15l0.31,-0.53l-0.28,-0.79l0.29,-0.55l1.78,-0.33l3.5,-2.52l0.93,0.83l6.82,0.46l2.26,2.96l-0.07,0.63l0.62,0.47l0.61,-0.23l0.36,-0.92l1.13,-0.52l0.93,-1.68l1.46,-1.45l1.26,-0.71l-0.15,0.55l0.56,0.45l2.56,-1.38l0.18,0.13l-0.47,0.17l-0.22,0.6l0.36,0.29l0.68,-0.06l0.18,0.35l-0.05,1.32l-0.62,1.42l0.01,0.67l0.32,0.28l-0.22,1.07l0.35,0.36l0.21,-0.13l-0.4,1.59l0.21,0.82l-0.7,0.42l-0.69,1.63l-2.18,2.49l-0.16,0.57l0.45,0.29l1.52,-0.31l0.68,0.45l1.67,-1.33l0.89,0.36l0.53,-0.7l0.76,-0.22l0.54,1.22l-0.66,1.4l0.02,0.78l0.73,1.41l0.99,0.87l-0.1,1.13l0.5,0.3l0.38,-0.48l1.0,0.13l0.34,1.71l0.66,0.61l-0.24,0.5l0.52,0.57l0.52,-0.05l0.45,0.39l0.13,0.89l-0.66,0.54l-0.06,0.5l0.85,0.13l1.11,-0.59l0.23,1.66l0.68,0.13l3.34,-1.09l0.8,0.2l0.6,0.61l2.16,-0.91l2.12,0.21l-0.9,0.93l-2.04,0.58l-0.16,1.18l0.45,0.3l-0.94,0.55l-0.72,2.11l-0.62,-0.3l-0.6,0.17l-0.53,2.15l-1.32,-1.94l-0.41,0.29l-1.5,-1.18l-0.75,-1.2l-0.75,-0.36l-0.5,0.13l0.0,0.7l0.78,0.43l0.31,0.82l2.11,1.76l-1.03,4.22l-0.55,-0.06l-1.15,0.56l-0.78,1.52l-3.32,2.75l-2.08,2.39l-0.16,0.67l-1.49,1.15l-0.37,0.73l-0.76,-0.01l-1.1,1.21l-0.67,-0.03l-0.51,-0.64l-1.07,-0.28l0.9,-1.59l-0.53,-1.41l-0.67,0.26l-0.52,1.78l-1.1,0.95l0.5,0.88l1.02,0.38l-0.32,0.86l-0.25,0.32l-0.66,-0.3l-0.87,0.23l-0.34,0.51l0.4,0.56l-0.93,1.21l-0.64,-0.76l-0.61,0.02l-1.86,1.85l-0.3,-0.18l-0.47,0.38l-0.44,-0.36l-0.7,0.47l0.01,-0.72l-1.71,-0.72l-1.11,0.89l-0.08,0.97l-0.82,-1.35l-0.99,-0.5l-0.4,0.72l-0.82,0.25l-0.21,0.76l-1.91,-1.39l0.1,-1.92l-1.18,-1.54l0.51,-0.73l-0.05,-0.9l-1.13,-2.02l-0.43,-0.24l-0.52,0.42l0.0,0.8l-0.82,0.1l-0.88,-0.24l-0.84,-0.76l-0.33,0.08l-0.57,-0.77l0.12,-0.88l-0.46,-0.63l0.25,-0.98l-0.49,-0.6l-5.26,-19.48l-1.95,-1.12l-0.85,-0.87l-3.83,-1.73l-1.37,0.38l-0.46,1.23l-1.34,0.2l-1.27,1.39l-1.3,0.46l-1.31,1.15l-1.79,-0.77ZM746.76,774.42l-0.04,0.04l-0.08,0.14l-0.05,-0.07l0.17,-0.12ZM759.75,722.25l-0.02,-0.05l-0.0,-0.01l0.06,0.02l-0.04,0.04ZM768.61,745.97l0.01,-0.09l0.03,0.05l-0.05,0.04ZM759.95,720.22l0.52,-0.55l0.13,0.24l0.67,-0.23l-0.55,1.43l-0.78,-0.88ZM760.94,717.95l0.09,-0.3l0.01,-0.4l0.08,0.22l-0.18,0.48ZM748.75,781.92l0.08,-1.46l0.26,-0.59l0.82,1.56l-1.16,0.48Z\",\n            name: \"New Brunswick\"\n          },\n          \"CA-NL\": {\n            path: \"M818.51,688.98l0.02,-0.65l1.55,-2.42l0.25,0.55l0.81,0.32l0.32,0.49l-1.34,0.44l-1.61,1.27ZM822.14,686.92l0.09,-0.28l0.2,0.08l-0.17,0.14l-0.11,0.06ZM824.06,685.7l-0.48,-2.57l0.46,-2.92l-0.33,-2.45l0.29,-1.53l0.64,0.39l1.83,-0.8l1.87,1.03l1.74,-0.31l0.54,-0.42l-0.17,-0.68l-0.33,-0.09l-1.27,0.39l-0.99,-0.34l-0.8,-1.03l2.21,-0.76l0.51,-1.4l-0.15,-0.42l-1.2,0.28l-0.06,-1.04l-0.46,0.04l-0.9,0.85l-1.88,0.14l-0.72,-2.27l0.34,-1.43l0.85,-1.64l0.57,0.11l0.56,1.16l0.85,0.46l0.4,-0.21l-0.55,-1.14l1.54,0.3l0.73,-0.53l-0.21,-0.41l-1.37,-0.41l-0.81,-0.81l-0.39,0.46l-0.48,-0.37l-0.65,-0.73l-0.22,-0.95l0.7,-9.03l-0.38,-4.88l0.34,-3.49l1.45,-0.26l0.59,-0.82l-0.37,-0.63l-0.77,0.32l-1.17,-0.57l1.93,-2.2l0.89,-2.81l-0.04,-0.49l-0.83,-0.7l0.51,-0.65l-0.28,-0.74l0.12,-1.13l0.56,-0.76l-0.31,-0.81l0.31,-0.71l-0.58,-0.44l0.1,-1.04l1.77,-2.59l0.98,-0.65l0.55,-1.03l1.96,-2.1l1.26,-2.08l0.7,1.99l1.55,-0.57l1.29,0.01l0.54,-0.36l-0.19,-0.69l-0.68,0.01l-0.53,-0.64l1.05,-0.21l0.4,-0.84l0.83,0.67l-0.69,0.24l-0.09,0.7l0.95,0.36l0.12,1.05l-0.54,0.02l-0.23,0.43l0.17,0.57l-0.32,0.4l-1.78,0.19l-0.8,0.48l-0.87,-0.17l-0.09,0.38l-0.71,-0.26l-0.76,0.5l-0.18,0.5l0.23,0.79l1.02,0.19l-0.16,0.91l0.29,0.62l1.83,0.78l0.39,-0.72l-0.17,-0.2l0.64,-0.8l0.68,-0.1l0.33,0.14l0.57,1.72l-0.65,0.48l0.44,0.67l-0.13,2.25l-0.35,0.55l-0.42,2.53l-0.34,0.07l-0.49,-2.17l-0.61,-0.28l-0.62,0.97l1.07,2.9l0.9,0.67l-0.65,1.64l0.04,0.86l-0.52,0.2l-0.23,0.52l0.66,0.38l-0.55,1.91l-0.98,0.27l0.0,0.67l0.86,0.21l0.12,0.69l-0.14,2.05l-0.45,1.24l-0.66,0.34l0.38,0.68l-0.47,1.24l0.06,1.84l0.16,0.63l0.56,0.14l0.13,1.13l-0.97,1.75l0.39,0.54l1.22,-0.07l0.47,3.3l0.69,-0.49l1.16,-6.05l0.4,-0.71l0.41,0.36l0.66,-0.23l-0.28,-0.85l0.56,-0.14l-0.01,-0.46l-0.46,-0.58l0.05,-1.26l0.95,-2.77l0.79,0.59l-0.18,3.42l0.93,-0.5l0.35,-1.41l0.27,0.39l0.79,-0.35l-0.0,-1.09l2.77,0.99l0.52,-0.3l0.2,-0.82l1.5,-0.94l0.12,0.59l-0.79,0.7l-0.99,1.9l-1.97,2.24l-0.69,0.29l0.06,0.6l-0.91,2.21l0.11,0.9l0.23,0.31l0.67,-0.13l0.71,-2.13l0.29,-0.41l0.38,0.14l0.48,-0.37l-0.26,1.38l0.59,0.25l-1.46,2.03l-0.14,0.97l0.53,0.67l1.61,-2.04l1.09,-0.82l0.49,0.19l0.28,0.84l0.7,-0.29l0.98,0.89l0.59,-0.38l0.01,-0.84l0.32,0.99l0.71,-0.1l0.19,-1.95l0.14,0.34l0.64,0.15l-0.35,0.84l0.22,0.44l0.59,-0.23l0.39,0.34l0.4,-0.34l0.79,0.24l0.11,-0.88l0.52,1.06l-0.54,0.71l-0.39,1.61l1.03,0.85l-0.38,1.05l0.16,0.44l0.47,-0.01l1.02,-0.97l0.76,-1.31l-0.03,-0.45l-0.62,-0.17l-0.51,0.55l-0.18,-1.15l1.57,-2.16l-0.03,-0.34l0.08,0.26l-0.25,0.67l0.57,0.54l0.48,-0.42l0.22,-1.1l1.67,-0.42l0.54,-1.2l0.62,-3.99l0.28,1.33l0.59,-0.52l0.13,0.21l-0.03,0.91l0.61,0.59l0.21,1.34l0.63,0.12l0.57,-1.64l-0.32,-0.61l0.02,-0.96l0.85,-0.12l0.79,0.7l0.31,-0.71l0.44,-0.22l-0.06,-1.2l0.32,-0.27l0.74,0.28l0.93,-0.73l5.77,0.89l0.22,0.12l-0.4,0.97l0.1,0.98l-0.49,0.24l-0.08,0.56l0.81,0.8l-2.57,1.49l0.26,0.54l-0.46,0.33l0.09,0.67l0.91,0.29l-0.86,0.34l-0.29,0.46l0.16,1.13l-1.86,1.47l0.0,1.05l0.58,0.19l1.41,-1.37l0.14,0.84l1.0,0.06l0.81,1.47l0.56,0.03l-0.39,1.08l0.37,0.5l0.57,-0.21l0.18,-0.47l0.9,-0.32l0.19,0.33l-0.99,0.74l-0.86,1.43l-1.08,0.56l-0.4,0.85l0.24,0.61l0.68,0.47l0.61,-1.3l0.97,-0.42l0.54,-1.1l0.13,0.97l0.7,0.34l0.5,-0.39l-0.16,-0.43l0.31,-1.17l0.25,0.35l0.59,-0.13l0.5,-0.63l0.27,0.58l0.47,-0.2l0.67,-1.31l0.2,-1.29l-0.28,-1.66l0.91,0.0l0.34,0.73l1.22,0.06l0.94,-3.37l0.86,0.75l0.3,2.82l-0.8,1.71l-0.96,-0.15l-1.06,0.49l0.22,1.79l-1.26,1.56l-0.53,1.5l-1.45,0.06l-0.71,0.35l-1.06,-0.39l-0.47,0.35l0.06,0.97l1.35,1.88l2.18,-0.61l-1.93,0.8l-0.05,0.78l0.26,0.14l1.9,-0.22l1.17,-1.04l-0.06,1.61l-0.81,0.3l-0.23,0.53l0.85,0.23l0.02,1.22l-1.26,-0.75l-0.46,0.03l-0.38,0.51l1.88,1.64l0.16,0.78l1.51,0.96l1.58,0.42l0.29,0.84l1.71,-1.1l-0.32,-1.21l0.06,-1.67l-0.57,-0.88l0.05,-2.14l0.64,-0.69l-0.26,-0.35l0.09,-2.07l0.87,-1.15l1.04,-0.21l0.44,-0.84l0.28,-1.77l0.43,0.3l-0.37,0.49l0.02,1.96l-0.43,1.39l0.36,1.31l-0.62,2.4l0.77,1.14l-0.53,1.03l0.11,0.6l0.39,0.29l0.12,0.67l0.88,-0.04l0.12,0.97l0.54,0.75l0.8,-0.16l0.23,0.23l0.42,-0.3l0.19,-1.05l1.35,-2.65l0.07,-1.31l-0.52,-2.42l0.56,0.06l0.51,1.46l0.77,0.05l0.18,1.36l0.28,0.41l0.86,0.2l-0.46,0.7l0.54,0.67l-0.09,1.98l-0.49,0.38l0.6,3.82l-0.59,0.45l0.34,0.65l0.58,-0.04l0.26,0.34l-0.14,0.63l0.45,0.87l0.46,2.59l-0.57,1.29l0.07,1.4l-0.47,0.74l-0.67,-0.01l-0.83,-1.05l-0.69,-0.11l-0.33,0.68l-0.63,-0.3l-0.68,1.86l-0.83,1.01l-0.73,-0.66l-0.37,-1.76l0.15,-1.33l0.5,-0.85l-0.23,-0.4l-0.58,0.22l-0.01,-0.84l-0.4,-0.27l-0.25,0.21l-0.84,-0.22l0.05,-1.36l0.49,-1.07l-1.62,-1.32l-0.34,0.41l0.02,0.96l-0.33,-0.14l-0.27,0.39l-0.02,1.71l-0.56,0.67l-0.05,1.51l-0.38,0.42l-0.36,1.88l-0.68,1.14l-1.16,0.24l-0.47,-0.99l-0.17,-1.61l0.02,-4.34l0.67,-0.26l-0.1,-0.72l-0.82,-0.24l0.6,-0.51l0.23,-1.22l-0.41,-0.34l0.61,-0.71l0.06,-0.57l-0.72,-0.23l-0.68,0.24l-0.13,-1.19l-0.59,-1.2l-0.83,-0.46l-1.16,-1.94l-0.54,-0.14l-0.55,-0.83l-0.47,0.24l-0.91,-0.8l-0.33,0.87l-0.53,-0.45l-1.3,-0.03l-0.4,0.25l0.12,0.46l0.99,0.27l0.23,1.41l-0.06,1.15l-0.64,0.45l0.37,0.72l0.0,0.98l-0.69,0.17l-0.99,4.53l-0.43,-0.07l-0.29,0.77l-0.95,-0.73l-0.76,0.59l-0.92,4.35l-0.55,0.39l-0.21,0.76l0.74,0.35l0.45,0.78l-0.11,0.53l-0.72,-0.18l-0.34,0.36l0.47,1.39l-0.02,1.18l-0.43,0.51l-0.74,0.19l-0.02,0.81l-0.52,-0.04l-0.1,-0.43l-1.25,-0.24l-1.26,2.06l-1.9,0.6l-1.19,-0.1l-0.43,-0.32l0.46,-2.27l0.88,-0.9l0.97,-0.15l2.04,-1.75l0.09,-0.86l1.22,-2.28l-0.44,-2.39l0.42,-1.17l2.27,-1.82l0.82,-1.47l-0.27,-0.9l1.23,-1.84l-0.4,-0.26l-1.19,0.33l-0.89,1.52l-1.26,0.84l0.4,-2.8l-0.47,-0.74l-0.65,1.09l-0.31,2.16l-0.31,-0.33l-0.67,0.71l-1.79,0.09l-0.18,-0.55l-0.78,-0.22l-0.73,0.71l0.13,1.82l1.21,0.81l0.24,1.37l-1.1,0.92l-0.3,-0.1l0.04,-0.89l-1.08,-0.43l-0.8,1.48l-0.02,-0.52l-0.43,-0.31l0.06,-0.78l-0.47,-0.05l1.23,-1.4l0.05,-0.44l-0.83,-0.14l-1.53,1.71l-0.77,-0.1l0.47,-1.23l-0.08,-1.5l-0.38,-0.39l0.25,-1.59l-0.4,-0.79l-0.66,-0.19l-0.47,1.48l0.31,1.95l-1.11,1.09l-0.38,1.01l0.17,-0.88l-0.28,-0.45l-0.54,0.35l-0.79,-0.88l-0.46,-0.04l-0.13,0.71l0.63,0.81l-0.1,0.83l0.37,0.4l-0.54,1.27l-0.84,-1.65l-0.47,-0.24l-0.3,0.44l0.03,1.02l0.55,0.59l0.02,0.54l-3.57,1.08l-0.41,0.46l-0.25,-0.2l-0.62,0.22l0.13,0.75l0.6,0.46l-0.21,0.36l-1.15,0.21l-1.33,-0.26l-1.5,0.92l-0.14,-0.52l-0.61,-0.41l-0.53,0.36l-0.02,0.51l-0.92,0.57l-0.17,-0.69l-0.46,-0.16l-1.88,0.89l-0.5,-0.13l-0.77,1.11l-1.38,-0.43l-0.81,0.72l-0.79,-0.15l-0.02,-0.49l-0.44,-0.12l-0.56,0.26l-0.17,0.46l-0.9,-0.11l-0.81,0.33l-1.22,1.15l-0.87,0.03l0.41,-1.32l-0.5,-0.16l-1.15,0.85l-0.09,1.71l-1.35,0.05l-0.62,1.11l-0.56,0.12l-0.42,0.57l-2.33,0.82l-1.98,1.48l-1.19,0.13l-0.86,-0.32l-0.49,-2.11l-2.24,-2.02l0.77,-0.74l0.91,-2.53l1.76,-2.24l0.33,-1.2l1.47,-2.58l0.19,-1.52l1.72,-1.6l0.36,-1.23l1.28,-0.84l0.14,-0.68l-0.91,-0.21l-2.2,1.29l-0.93,-0.35l-1.05,0.22ZM875.13,662.15l0.01,-0.05l0.03,0.05l-0.03,0.0ZM877.64,662.72l0.01,0.0l-0.0,0.01l-0.0,-0.01ZM877.66,662.95l0.18,0.25l-0.68,1.05l-0.32,0.16l0.81,-1.47ZM877.92,687.46l0.03,0.05l-0.04,0.02l0.01,-0.07ZM861.06,691.62l-0.07,0.12l-0.12,0.06l0.18,-0.18ZM860.09,692.51l-0.48,0.59l-0.29,-0.1l0.05,-0.05l0.72,-0.44ZM879.41,666.37l0.09,-0.58l0.24,-0.6l0.19,0.13l-0.51,1.05ZM875.09,662.02l-0.1,-0.13l0.04,0.02l0.06,0.11ZM856.72,657.08l-0.75,-1.19l0.46,-0.02l0.19,-0.64l0.34,0.61l-0.23,1.24ZM855.6,655.59l-0.04,-0.03l0.02,-0.02l0.02,0.05ZM854.13,657.17l0.0,-0.25l0.09,-0.07l-0.09,0.32ZM880.24,671.96l0.93,-0.43l1.21,0.01l1.03,-1.19l0.17,0.15l0.06,0.96l-1.69,0.33l-1.01,0.54l-0.41,0.04l-0.3,-0.41ZM880.32,686.11l0.4,-1.02l-0.02,0.88l-0.39,0.14ZM880.62,683.25l-0.08,-0.03l0.05,-0.13l0.03,0.15ZM865.39,648.04l0.38,0.42l0.68,-0.29l0.06,-1.23l0.98,0.8l-1.68,1.99l-0.42,-0.78l0.29,-0.24l-0.3,-0.67ZM859.7,652.85l0.19,-0.17l0.32,0.44l-0.25,-0.18l-0.25,-0.09ZM860.59,653.19l0.24,-0.05l0.02,0.23l-0.08,0.03l-0.18,-0.21ZM861.93,651.82l-0.05,-0.37l0.49,-0.4l0.03,0.24l-0.48,0.53ZM862.01,654.42l0.02,0.04l-0.01,0.11l-0.04,-0.08l0.03,-0.06ZM859.28,690.2l0.8,-0.57l0.4,0.51l-0.91,0.12l-0.29,-0.06ZM850.54,655.73l0.16,0.11l-0.16,0.24l-0.04,-0.3l0.04,-0.05ZM850.65,657.07l0.03,-0.01l-0.01,0.06l-0.01,-0.05ZM843.73,636.57l0.01,-0.34l0.77,-0.76l-0.19,0.87l-0.6,0.23ZM838.16,616.02l0.06,-0.8l0.21,-0.21l-0.04,0.83l-0.22,0.19ZM696.03,500.29l-0.19,0.36l0.37,0.59l0.59,-0.17l0.69,-0.86l0.89,0.17l-0.49,0.97l0.49,0.51l0.6,-0.2l0.44,-0.59l0.13,0.27l-0.65,0.85l0.07,0.57l-0.32,0.09l-0.24,-0.83l-0.68,-0.71l-1.19,0.27l-0.74,-0.45l-0.13,-0.43l0.35,-0.4ZM697.84,503.41l-0.02,0.02l-0.01,-0.01l0.03,-0.01ZM697.69,505.53l1.21,-1.47l1.28,-0.58l0.14,0.33l-1.01,0.24l-0.3,0.44l0.4,0.35l1.15,0.15l0.07,0.3l-0.82,0.92l0.28,0.56l0.53,-0.01l1.02,-0.87l0.17,-0.72l0.96,0.23l-0.44,0.91l0.49,0.27l0.45,-0.14l0.19,0.94l-0.7,0.47l0.16,0.63l1.68,1.31l1.17,-0.26l-0.32,2.55l0.34,0.66l0.43,-0.19l0.54,-1.08l-0.12,-1.02l0.48,0.08l-0.4,1.24l0.15,0.56l0.69,0.11l0.53,-1.32l1.06,0.31l-0.12,1.5l-2.03,0.86l-0.29,0.46l0.21,0.67l3.15,-0.37l0.01,1.37l-0.41,0.6l0.59,0.39l0.97,-0.82l0.15,-1.71l0.59,-0.14l0.26,1.19l-0.58,1.28l1.1,0.04l0.62,-0.88l-0.04,0.62l0.48,0.37l0.27,-0.15l-0.12,0.81l-0.67,0.47l-0.28,0.63l-1.18,0.73l-2.49,0.28l-0.46,1.71l0.57,0.27l0.62,-0.56l0.67,1.05l0.66,0.02l0.23,-0.46l-0.46,-0.94l1.05,0.08l0.71,-0.62l1.2,-0.33l0.42,-0.72l0.62,-0.27l0.13,-0.68l0.27,-0.01l0.57,0.35l-0.5,0.14l-0.28,0.5l0.44,0.41l0.58,-0.02l-0.22,0.99l0.25,0.41l0.66,-0.37l0.35,0.16l-0.84,1.07l0.06,0.67l0.65,0.1l0.66,-0.36l0.73,0.45l0.4,-0.35l0.12,-0.76l1.44,0.52l0.21,0.76l-0.92,1.11l0.53,0.58l1.41,-0.58l0.12,0.47l-0.41,0.55l0.04,0.61l-1.06,1.02l-0.67,1.25l-1.48,0.58l-0.62,-0.22l-0.6,0.4l-0.46,1.24l0.53,0.15l1.22,-0.6l-1.46,3.18l-0.05,0.31l0.52,0.44l0.57,-0.34l0.91,-1.39l0.93,-2.23l1.0,-0.4l-0.29,1.33l0.62,0.69l0.61,-1.64l0.69,-0.01l0.43,-0.88l0.55,-0.31l0.96,-0.01l0.21,-0.69l1.05,-0.57l-0.44,1.25l0.84,1.88l-0.67,0.73l-1.34,0.68l-0.14,1.17l0.37,0.5l-1.45,0.73l0.01,0.72l0.31,0.11l-1.25,1.46l0.46,0.55l-1.25,1.18l0.44,0.58l2.18,-1.11l0.09,-1.23l0.86,-0.89l0.16,-0.72l0.77,-0.03l1.16,-0.66l0.72,0.04l0.34,-0.45l0.3,0.01l0.37,1.03l0.55,0.25l0.4,-0.75l0.95,0.44l-0.18,0.32l-1.47,0.33l-0.95,1.54l-0.01,0.73l0.73,-0.07l0.49,-0.71l0.78,-0.42l0.74,1.54l0.56,0.1l1.0,-1.67l0.35,0.37l0.62,-0.39l0.02,-0.85l0.6,0.72l-0.34,1.3l0.43,0.73l0.35,0.27l1.01,-0.06l0.69,0.78l0.0,0.5l1.04,0.58l-1.38,1.23l-0.03,0.93l-1.56,0.45l-0.27,1.54l-2.01,-0.32l-0.25,0.64l0.19,0.24l2.15,0.88l0.91,-0.28l1.09,-1.06l1.22,-0.19l1.37,0.3l0.32,0.13l-0.52,0.68l0.65,0.3l0.26,0.8l-0.99,0.53l-0.19,0.63l0.33,0.32l1.36,0.18l0.3,0.5l0.46,0.19l0.41,-0.24l0.29,0.29l0.55,-0.51l0.62,0.17l1.44,-0.59l1.45,0.33l0.47,1.67l-0.97,0.45l-0.38,0.54l-0.62,1.94l0.28,1.04l-1.07,0.77l-0.71,-0.04l-0.49,0.33l0.61,2.02l-0.36,0.42l-4.73,-0.44l1.24,-0.79l2.21,-0.68l0.25,-0.4l-0.81,-0.5l-2.68,0.68l-0.55,0.44l-1.09,-0.08l-0.49,0.41l-0.22,0.99l0.36,0.64l5.05,0.99l-0.89,0.22l-0.25,0.62l0.41,0.27l2.62,-0.18l1.27,-0.49l0.93,0.2l0.56,-0.25l0.51,0.28l-0.61,0.54l-2.81,0.49l-0.54,0.59l-0.28,1.41l0.28,0.15l3.06,-0.22l-0.02,0.33l0.96,0.46l-1.37,0.94l-1.09,-0.04l-0.34,0.31l0.16,0.76l1.04,0.73l1.03,0.18l0.56,-0.43l1.61,-0.1l0.97,-0.6l0.76,0.2l1.48,-0.96l-0.21,1.32l0.55,0.37l-0.55,0.77l0.19,0.56l-0.32,1.03l1.47,0.69l1.52,-0.61l0.48,0.14l0.6,-0.57l0.58,0.38l-0.9,0.49l-0.01,0.65l1.33,0.47l1.7,-0.86l1.74,-0.31l0.19,0.44l-0.41,0.75l-1.47,0.65l0.21,0.67l0.56,0.25l1.92,-0.77l0.6,-1.24l0.51,0.98l-0.38,0.75l0.46,0.66l-0.14,1.23l0.53,0.45l0.76,-1.77l-0.15,-3.1l0.55,0.28l0.58,-0.15l0.03,1.06l-0.91,0.91l0.04,1.48l0.37,0.32l0.88,-0.92l0.01,1.78l0.23,0.41l0.67,-0.3l-0.55,1.03l0.37,0.82l-0.09,0.75l0.19,0.41l0.45,-0.03l0.38,-0.45l-0.04,0.62l-0.71,1.04l0.03,1.21l-0.46,0.73l0.1,0.53l0.54,-0.05l0.6,-0.86l-0.04,1.0l-1.17,1.98l0.49,1.28l0.46,-0.28l0.75,-1.92l0.56,-0.54l0.07,-1.09l0.71,-0.41l0.51,-1.51l0.42,-0.38l0.23,0.96l0.46,-0.14l0.34,-0.75l-1.12,3.19l0.36,1.06l0.43,-0.19l1.32,-2.78l0.27,-1.92l0.88,-0.36l0.44,-1.72l0.57,0.65l0.15,0.72l-0.78,1.12l-1.06,0.4l0.32,1.13l0.6,0.06l0.26,-0.54l0.49,0.27l0.7,-0.11l0.51,-0.9l1.02,-0.03l0.78,-1.05l0.58,0.28l-0.89,2.37l-0.9,1.04l0.17,0.63l-0.8,1.49l0.45,1.26l-0.65,1.0l0.16,0.62l0.34,0.14l0.59,-0.18l0.88,-1.1l0.11,-0.44l-0.51,-1.33l1.2,-1.77l0.91,-2.17l0.7,0.94l0.65,-0.15l0.89,-1.39l0.02,-0.96l1.26,-0.4l0.1,-0.99l0.4,0.04l-0.18,2.03l0.4,0.39l0.53,-0.33l0.65,0.29l-0.61,1.49l0.48,0.25l0.67,-0.26l0.5,0.69l1.28,-0.46l0.4,0.59l0.5,-0.01l0.19,-0.47l1.24,-0.04l0.63,0.43l0.66,-0.44l0.75,0.44l0.57,-0.32l-0.19,-0.82l1.25,-0.48l0.78,0.67l1.47,-0.42l0.48,0.28l1.19,-0.94l1.0,0.75l0.52,-0.08l0.79,0.49l1.29,-0.43l0.73,-0.65l0.99,0.79l-0.17,0.61l0.69,0.2l-0.04,0.32l-2.3,0.88l-0.54,0.51l0.43,0.75l1.45,-0.47l-0.65,1.12l-2.36,0.59l-2.86,1.73l-0.63,1.34l0.44,0.77l-1.94,1.14l-2.0,2.4l-1.59,0.57l-4.59,3.5l-1.34,0.21l-0.64,0.52l0.02,0.77l1.19,0.5l2.35,-1.12l2.03,-1.52l-0.03,0.33l0.48,0.25l0.63,-0.16l-0.41,0.6l-1.83,1.13l-2.0,2.67l-3.76,0.96l-0.45,0.5l0.12,0.58l-1.41,1.11l-0.58,-0.13l-0.44,0.59l1.0,0.75l0.06,1.7l0.69,1.02l-2.41,-0.59l-0.94,-0.59l-4.79,-0.39l-0.75,-0.8l-0.69,0.12l0.27,1.24l-0.38,0.97l0.35,0.59l3.26,-0.69l2.18,0.3l2.27,0.89l2.17,0.4l-2.62,2.84l-0.04,0.56l0.42,0.43l1.55,-0.45l-1.4,0.94l-0.16,0.6l0.52,0.24l1.28,-0.51l1.07,-0.9l0.83,0.15l0.31,-0.75l-0.36,-0.5l0.63,-0.65l1.03,-2.52l0.66,-0.33l0.1,-0.42l-0.29,-0.31l2.55,-1.52l1.37,-2.76l2.28,-1.07l0.51,-1.11l-0.06,-0.62l-0.83,-0.68l1.21,-2.08l0.03,-0.87l1.65,-1.1l3.13,-2.92l0.65,-0.2l0.71,-0.92l3.25,-0.59l0.5,-0.7l-0.75,-0.57l-1.61,0.39l-0.9,-0.18l-1.58,0.38l-0.92,1.24l-0.95,-0.28l0.12,-0.9l0.83,-0.25l0.42,-0.75l1.74,-0.64l1.03,0.17l3.07,-0.76l0.56,0.29l1.2,-0.93l0.61,0.24l2.07,2.23l1.09,0.59l0.42,1.18l1.26,0.49l0.19,1.3l-2.9,3.24l-0.18,0.91l0.21,0.41l0.46,-0.06l0.59,-0.61l0.22,0.2l0.93,-0.29l-0.02,0.42l0.6,0.43l-0.23,1.53l0.2,0.42l1.35,-0.49l-0.04,-1.08l0.95,-1.53l-0.33,-1.29l0.42,-0.53l0.28,-1.75l1.09,-0.23l1.33,-0.99l0.54,0.16l-0.82,0.48l0.48,0.52l3.41,-0.05l0.69,-0.42l0.14,0.42l0.98,-0.09l0.42,0.67l2.36,0.28l0.81,0.69l-0.23,0.59l0.4,0.5l0.62,-0.17l0.39,-0.76l0.32,0.03l0.39,1.44l0.81,-0.21l-0.26,0.48l0.62,0.6l-0.11,0.35l1.23,0.68l-0.27,0.64l-1.18,0.06l-0.27,0.53l0.93,0.4l-0.08,0.69l-1.31,0.15l-1.04,0.54l-0.19,0.5l0.8,0.26l-0.06,0.62l0.53,0.27l0.46,-0.21l0.28,-0.66l1.23,-0.2l0.16,0.52l0.76,0.12l0.73,0.83l-1.35,1.01l-0.27,0.56l-1.53,0.04l-0.22,0.59l0.6,0.55l1.24,0.16l1.33,0.9l-1.49,0.4l-0.08,0.83l1.44,-0.22l-0.31,0.65l-1.3,1.06l-0.9,-0.23l-1.9,0.25l-0.72,0.58l1.1,0.55l1.07,-0.29l1.16,0.14l1.45,-0.77l1.42,0.1l1.44,-0.55l0.41,0.23l0.54,-0.28l0.55,0.73l0.79,-0.3l0.34,0.7l-0.59,-0.18l-0.89,0.32l-0.04,0.72l-3.99,-0.27l-0.33,0.07l-0.2,0.68l0.76,0.49l1.66,-0.13l3.09,0.67l-0.07,0.54l0.86,0.9l0.62,0.06l0.47,0.89l-0.87,0.56l0.07,0.61l0.36,0.2l-0.14,0.29l-0.46,0.42l-0.96,0.1l-0.08,0.73l0.85,0.4l0.06,0.39l-1.6,1.97l-0.54,1.51l-1.26,0.78l-0.15,0.74l-0.6,0.22l-0.16,0.9l-0.71,1.15l-0.99,0.55l0.07,1.34l-0.68,1.28l0.03,0.76l-1.14,0.3l0.15,1.24l-0.9,0.27l-3.54,-9.36l-0.52,-0.23l-35.41,12.67l-33.8,10.74l0.05,-0.71l-1.71,-2.85l-0.93,-0.79l0.17,-0.44l-0.26,-0.43l-0.57,-0.17l-2.03,0.31l-1.48,-1.45l0.43,-1.47l0.91,-1.14l5.09,-2.36l-0.1,-0.81l-0.51,-0.48l-2.37,-0.8l-0.52,-1.28l-0.71,-0.03l-0.65,1.67l-3.72,2.2l-0.52,1.08l0.25,2.29l0.94,1.3l0.63,1.63l-0.34,2.5l1.11,1.86l-0.71,0.77l0.46,1.83l-0.26,-0.16l-0.61,0.33l-0.03,0.86l1.07,2.64l0.95,1.12l-0.28,1.2l-1.36,1.67l-2.01,-1.64l-1.2,-0.53l-1.37,0.13l-0.6,0.43l-0.11,0.65l-0.7,-0.33l-1.5,0.25l-0.26,-0.68l-1.34,-0.66l-0.91,0.41l-0.65,-2.06l-0.56,-0.04l-1.76,-1.75l-0.47,1.36l-0.62,0.28l-0.14,-1.04l-0.55,-0.3l-0.78,0.57l-1.11,-0.03l-1.48,1.15l-0.74,-0.14l-0.37,-1.35l-1.5,-0.62l-1.48,-1.26l-0.59,0.71l0.97,2.25l-0.39,0.26l-1.9,-2.81l0.14,-0.41l0.65,0.06l0.45,-0.5l-1.85,-4.51l0.79,0.47l0.52,-0.62l-2.23,-3.68l0.93,0.01l0.19,-0.47l-0.3,-0.96l-1.31,-1.69l-0.94,-0.54l-0.71,0.24l-0.33,1.54l-1.2,0.9l0.32,2.45l-0.99,0.76l0.12,0.82l-0.46,-0.14l-0.4,0.68l-1.6,-0.89l-0.58,-1.5l-0.53,-0.23l-0.83,0.6l-0.18,0.61l-1.19,-0.46l-0.46,-0.49l-1.24,-3.1l0.86,-1.04l1.84,0.33l0.27,0.57l0.51,0.13l0.73,-0.59l-0.62,-3.99l-0.75,-0.9l0.86,-1.08l-0.07,-0.6l-1.94,-1.38l-3.37,-0.19l-0.94,-0.86l-0.61,-1.14l-1.84,-0.88l0.38,-0.32l-0.13,-0.89l-0.91,-0.33l-0.67,-1.14l-2.25,-1.26l-0.04,-1.47l1.12,-1.64l-0.29,-0.92l-1.56,-1.71l-0.31,-1.14l0.71,-0.9l1.24,-0.55l0.24,-0.41l-0.29,-1.34l2.27,1.18l0.51,-0.25l0.16,-1.0l-0.42,-0.67l0.84,-0.98l0.41,-1.56l-0.43,-1.17l-2.25,-1.33l-2.3,-2.41l-0.36,-0.8l0.26,-0.35l0.6,0.08l-0.17,0.56l0.35,0.57l3.3,1.27l0.58,0.94l0.85,0.58l2.47,0.67l0.61,-0.26l0.01,-0.8l0.55,-0.25l0.23,-0.92l-1.85,-2.05l0.48,-0.97l-1.58,-1.83l-0.09,-1.14l0.41,-0.65l-0.39,-0.66l0.69,-0.18l4.57,3.66l1.4,0.26l1.2,0.7l0.87,-0.48l0.92,0.0l0.76,1.43l2.24,1.56l0.63,-0.76l0.84,0.15l0.8,-0.4l0.36,-0.71l-0.49,-1.05l1.58,-0.47l0.57,-0.59l0.63,-2.12l1.49,0.03l1.4,1.15l0.66,0.07l0.18,0.96l0.59,0.71l2.31,-0.49l0.85,-1.46l0.41,-0.06l2.36,0.71l1.03,1.13l0.93,0.34l1.77,-0.35l0.82,-0.97l0.55,0.1l0.47,-0.4l-0.12,-0.72l-0.96,-0.96l-1.38,-0.65l0.52,-0.98l-0.48,-0.98l0.04,-0.82l1.45,0.33l0.84,-0.52l-0.13,-1.6l-0.86,-2.36l0.09,-1.19l0.78,-0.5l0.29,-0.69l-0.05,-0.51l-0.56,-0.32l-1.26,0.84l-0.77,-0.14l0.82,-0.63l0.01,-0.71l1.65,-0.79l0.19,-0.89l-0.24,-0.56l-0.47,-0.2l-3.07,0.68l-1.07,-0.12l0.58,-1.08l-0.44,-2.05l-0.27,-0.45l-0.62,-0.18l-0.16,-1.95l-0.87,-0.34l-1.22,-1.39l1.23,-0.85l0.84,-1.18l1.0,-0.54l0.24,-0.48l-0.23,-0.57l-0.51,-0.1l-1.3,0.63l-1.02,-0.23l-1.02,0.35l-0.43,-0.32l0.01,-0.64l-0.54,-0.29l-1.12,1.1l-0.15,-0.79l0.91,-0.83l-0.03,-1.01l-1.08,-0.55l-1.33,0.31l-0.42,-0.42l-0.02,-0.84l-0.5,-0.95l1.38,-0.28l0.91,-1.01l-0.23,-0.5l-0.76,-0.29l-0.48,-1.3l-2.4,-2.03l0.07,-0.83l0.74,-0.66l-0.33,-1.27l0.95,-0.56l0.16,-0.48l-0.74,-0.94l0.17,-1.17l-0.42,-1.05l0.57,-0.95l-0.31,-1.24l0.09,-1.36l-1.39,-1.2l0.94,-1.54l-0.99,-1.39l-0.53,-1.77l0.91,-1.89l0.01,-1.33l-0.65,-0.67l-0.76,0.39l-0.1,0.77l-0.5,-0.48l-1.2,0.29l-0.4,-0.8l-0.56,-0.35l-0.9,-0.04l-0.36,0.57l-2.06,-2.73l-0.44,-1.22l-2.15,-0.07l-0.15,-1.73l1.09,-0.79l0.36,-0.66l-0.1,-2.05l0.86,-0.71l0.29,-1.2l1.13,-0.54l0.26,-0.9l-1.33,-1.84l-0.49,0.02l-0.81,0.98l-0.34,-0.16l-0.39,-0.85l0.05,-0.9l1.24,-0.91l0.82,-0.13l2.45,-1.25l0.42,-0.66l-0.07,-0.7l-1.4,-1.26l-1.94,-0.37l-0.78,0.53l-0.25,0.8l-1.29,0.52l-1.01,1.64l-0.81,-0.16l-0.3,-1.21l-0.89,-0.63l-2.56,0.63l-1.66,-0.61l-0.97,0.85l0.1,-0.63l-0.36,-0.43l0.45,-1.16l0.96,0.46l2.31,0.23l1.22,-0.56l0.29,-0.88l-1.03,-1.09l-1.22,-0.08l-0.99,-1.57l-0.88,-4.18l1.03,-1.31l-0.19,-0.83l-0.59,-0.35l-0.9,0.2l-1.77,2.04l-0.73,-0.95l-1.3,-0.55l-0.36,-1.4l0.81,-1.28l-0.85,-1.96l0.39,-0.6l-0.17,-0.45l0.67,-0.48l-0.02,-0.65l-0.49,-0.78l-1.06,-0.15ZM749.43,644.67l-0.21,0.06l-0.38,-0.16l0.32,0.07l0.27,0.03ZM827.52,605.46l1.17,-0.58l0.2,0.18l-0.04,0.35l-0.71,0.3l-0.62,-0.26ZM813.86,589.78l0.16,-0.56l0.66,-0.26l0.12,0.19l-0.94,0.63ZM742.78,556.73l0.27,-0.15l0.42,0.38l0.74,0.05l-1.11,0.28l-0.32,-0.55ZM743.07,555.94l0.11,-0.16l0.77,-0.06l-0.64,0.05l-0.24,0.16ZM725.03,532.72l0.15,-0.75l1.74,-0.61l-0.23,0.87l-1.66,0.49ZM716.21,518.51l0.26,-0.13l0.06,0.04l-0.32,0.09ZM701.98,503.42l-0.06,0.03l-0.14,-0.01l0.18,-0.05l0.02,0.03ZM746.33,561.6l1.29,-0.12l1.03,-0.44l-0.04,0.65l-2.28,-0.08ZM765.04,574.52l-0.09,-0.09l0.07,-0.12l0.12,0.1l-0.09,0.11ZM766.11,573.29l-0.2,-0.4l-0.0,-0.06l0.04,0.0l0.17,0.45ZM777.44,577.1l0.21,-2.19l0.71,0.01l-0.44,0.65l-0.49,1.53ZM788.01,592.75l1.22,-1.14l0.8,-0.31l1.1,-1.65l0.44,-0.22l-1.08,2.63l-2.49,0.7ZM779.46,607.1l0.03,-0.02l0.01,0.02l-0.04,0.0ZM820.61,590.82l0.0,0.0l-0.0,0.0l-0.0,-0.01ZM701.88,596.17l-0.57,-0.35l-0.42,-0.33l0.73,0.21l0.27,0.47ZM825.79,598.33l0.24,-0.16l0.14,-0.18l-0.36,0.57l-0.02,-0.23ZM821.86,591.85l1.18,-0.3l0.11,0.43l-1.18,0.08l-0.11,-0.21ZM809.43,590.34l0.28,0.04l-0.13,0.1l-0.15,-0.14ZM808.53,593.04l-0.01,-0.07l0.06,-0.23l0.07,0.28l-0.11,0.02ZM801.05,579.04l0.02,-0.15l-0.02,-0.2l0.27,0.24l-0.27,0.12ZM790.5,576.74l1.36,-1.34l0.14,0.95l0.53,0.49l-0.39,0.57l-0.93,0.16l-0.71,-0.82ZM757.4,566.9l0.54,-0.08l0.35,0.26l-0.22,0.16l-0.67,-0.34ZM753.32,565.66l0.39,-0.32l0.08,-0.97l1.15,0.24l-0.22,1.06l-1.41,-0.01ZM748.73,558.73l-0.2,-0.17l0.27,-0.02l-0.08,0.19ZM747.96,558.45l-0.96,0.19l-0.02,-0.12l0.72,-0.16l0.26,0.09ZM750.06,555.65l0.07,-0.3l0.2,-0.06l0.02,0.17l-0.29,0.18ZM744.69,552.98l0.63,-1.08l0.02,-0.72l0.75,0.24l-0.13,0.41l0.44,0.61l-0.83,0.06l-0.16,0.95l-0.37,0.33l-0.35,-0.8ZM745.53,555.04l0.78,-0.94l0.61,-0.02l0.44,1.15l-0.05,0.83l-1.79,-1.02ZM739.57,542.24l0.1,-0.7l0.05,-0.02l0.14,0.64l-0.29,0.08ZM737.12,536.75l0.17,-0.49l0.37,0.18l0.66,1.05l-0.18,0.15l-1.02,-0.9ZM737.02,541.9l0.57,-0.02l0.36,-0.73l0.61,0.38l-0.67,1.26l-0.88,-0.88ZM734.6,536.57l0.49,-1.0l0.84,0.73l-0.23,0.65l-1.11,-0.37ZM704.55,508.2l0.25,-0.58l0.82,0.14l-0.81,0.77l-0.26,-0.33ZM704.52,507.29l-0.04,-0.66l0.08,0.11l-0.04,0.55Z\",\n            name: \"Newfoundland and Labrador\"\n          },\n          \"CA-ON\": {\n            path: \"M399.18,732.97l3.61,-62.03l17.48,-16.01l50.17,-56.68l2.38,2.85l1.41,0.72l2.09,2.16l3.34,1.59l0.32,0.93l2.49,3.6l0.21,0.78l1.14,1.35l-0.34,0.82l0.41,0.83l0.93,-0.9l0.33,0.57l1.19,0.13l-0.12,0.67l0.59,0.42l0.37,-0.21l4.38,0.75l6.3,3.23l3.98,0.98l2.15,0.97l2.94,3.12l3.19,1.18l0.02,0.41l-0.73,0.42l-1.87,3.35l-0.2,2.26l0.59,0.29l0.53,-0.6l0.5,-1.93l1.17,-2.2l0.8,-0.71l1.45,-0.24l3.65,0.71l3.97,-1.2l1.6,0.26l1.47,-0.99l1.54,0.65l0.54,1.07l1.21,-0.17l0.13,1.07l0.43,0.57l0.68,-0.28l-0.38,-1.86l3.24,0.33l0.69,0.35l1.97,-0.84l0.55,0.68l-0.33,1.5l0.67,-0.0l0.48,-0.78l1.18,0.14l1.11,-0.61l0.85,0.4l0.9,-0.04l0.79,0.99l1.11,0.18l0.24,2.22l0.89,1.67l-1.85,8.93l0.53,3.1l0.67,1.51l0.69,0.04l0.76,0.78l1.61,4.42l-0.68,3.75l1.63,5.71l-1.28,1.28l-0.38,3.56l0.34,1.55l2.94,1.95l1.54,2.72l1.27,0.85l1.71,2.1l1.35,0.88l-0.11,0.68l0.43,1.19l-2.0,1.21l-0.77,0.15l-0.57,0.56l-0.12,0.8l0.39,0.6l0.27,-0.03l1.21,-0.98l2.42,-0.18l1.79,2.17l4.33,1.42l0.88,1.65l1.7,0.86l2.17,2.18l1.19,3.1l1.0,0.99l0.31,1.74l-2.02,1.29l-1.13,2.06l-1.21,0.9l-0.45,0.98l-0.86,0.68l-0.29,0.63l0.81,0.81l0.63,0.0l0.95,-2.17l1.62,-0.81l1.32,-2.12l1.59,-1.41l3.03,0.45l0.5,0.44l0.92,0.13l2.89,1.98l0.59,1.04l2.24,1.83l7.01,59.67l-0.5,2.75l0.48,1.12l1.53,1.9l0.61,3.39l2.03,2.63l1.76,1.66l1.07,2.0l1.14,1.05l1.33,2.35l2.44,1.53l0.44,0.79l0.64,0.34l4.21,0.28l0.6,0.39l2.46,-0.27l0.96,0.32l1.48,-0.15l3.27,0.47l2.39,0.86l2.13,1.35l0.58,1.44l0.77,0.72l2.97,1.37l1.25,-0.14l0.4,-0.74l-0.27,-1.02l0.78,-0.05l0.75,1.94l0.75,0.63l1.26,2.41l0.84,0.43l2.11,0.29l1.11,0.66l1.08,-0.1l0.74,-0.95l0.94,-0.29l1.1,0.16l2.36,1.74l1.37,-0.21l1.06,-1.56l1.04,-0.35l3.5,-2.3l2.72,-0.79l1.29,-0.96l2.06,-0.26l1.36,-0.65l1.31,0.6l1.64,0.2l-0.25,4.37l1.74,1.53l-1.12,0.9l-0.49,1.45l-1.92,1.85l-2.34,0.31l-4.21,3.29l-4.61,5.87l-0.78,1.45l-0.74,0.45l-1.02,1.74l-0.62,0.48l-2.83,1.26l-3.3,2.3l-1.55,0.2l-2.37,1.7l-0.49,-0.59l-0.62,-0.03l-0.35,0.38l-0.54,-0.59l-2.13,1.15l-0.76,-0.34l-0.64,0.55l-0.69,-0.07l-2.68,1.44l-0.39,1.13l0.45,0.24l-1.75,0.25l-0.41,0.48l-1.86,0.83l-4.68,1.11l-2.57,1.33l-1.36,-0.07l-3.16,1.34l-1.55,0.25l-1.68,1.0l-0.33,0.71l-2.62,2.68l-1.39,0.28l-0.34,0.81l-1.15,0.96l-0.11,1.25l-1.66,3.08l0.19,1.1l0.59,0.56l2.05,0.62l2.58,-0.18l0.9,0.25l2.09,-1.5l0.99,-0.29l0.21,3.11l0.44,0.35l0.11,0.95l1.64,0.99l-0.31,0.36l-1.64,0.78l-1.28,-0.28l-3.23,0.38l-0.52,0.46l-1.81,0.41l-1.14,-0.22l-1.42,0.76l-4.47,1.21l-1.73,1.55l-0.19,0.66l-0.35,-0.07l-0.52,0.45l-0.51,0.79l0.06,0.86l-6.1,-1.03l-3.85,0.33l-1.74,0.54l-2.51,1.81l-2.89,3.12l-0.52,1.54l-1.15,1.04l-1.8,0.33l-3.66,2.49l-1.43,1.98l-0.09,0.9l-1.16,-0.92l-0.76,-0.11l-2.24,1.16l-0.93,0.09l-2.5,-1.04l0.23,-3.72l1.37,-0.67l2.31,0.39l1.92,-0.15l2.07,-0.47l0.67,-0.49l0.34,-1.28l-0.4,-2.01l-2.62,-0.26l0.8,-0.66l0.5,-1.21l0.33,-2.5l-0.23,-0.88l0.63,-3.06l3.6,-1.93l1.28,-2.02l1.53,-0.91l1.19,-1.36l0.79,-2.06l-0.83,-9.21l-0.61,-2.59l0.88,-1.1l0.46,-1.2l0.15,-2.05l1.0,-1.44l1.1,-0.63l0.26,-1.3l1.06,-1.69l0.17,-0.89l-0.41,-0.98l-0.04,-1.96l-1.18,-1.48l0.03,-1.32l-0.37,-0.69l-0.93,-0.06l-1.97,-2.46l0.08,-0.46l-1.7,-0.54l0.08,-0.2l0.76,0.18l3.63,-0.35l-0.43,1.17l0.89,1.12l0.3,1.84l1.72,0.67l-0.25,0.6l0.56,0.33l0.39,-0.17l0.33,0.24l0.54,-0.36l0.13,0.47l-0.32,0.56l-1.12,1.02l0.07,0.86l0.59,0.2l1.53,-1.22l0.73,0.18l-0.2,3.37l0.73,0.14l1.19,-1.81l1.46,-0.74l1.29,1.87l0.94,0.06l0.86,0.64l4.81,1.08l1.27,-1.37l-0.05,-2.95l-0.3,-0.56l-1.36,-0.75l-0.09,-0.5l0.51,-0.04l0.4,-0.74l0.59,-0.17l-0.15,0.59l0.83,0.32l0.43,0.71l2.82,-0.09l0.24,-0.64l-0.74,-0.45l0.41,-0.84l-0.27,-0.96l-0.6,-0.04l-0.53,0.62l-0.98,-1.51l-0.99,-0.12l-0.32,-0.95l-0.65,-0.11l-0.26,-0.61l-0.79,-0.33l0.6,-0.32l0.2,-0.76l-0.48,-0.81l-1.23,-0.51l0.92,-1.39l-0.63,-1.56l-0.47,-0.33l-0.88,0.01l-0.69,0.43l-0.15,0.59l-0.7,-0.07l-0.23,-1.09l-0.96,-0.31l-0.07,-1.59l-0.5,-1.17l-0.72,-0.28l-0.21,0.75l-0.38,0.04l-0.16,-0.7l-0.64,-0.22l-0.89,-1.17l-0.14,-0.96l-0.88,-1.39l-0.43,-0.07l-0.38,-1.02l-1.01,-0.62l-0.57,0.46l-0.54,-0.33l-2.99,0.52l0.06,-0.75l-0.56,-0.51l-0.86,0.29l-0.36,0.68l-2.42,-0.2l-0.32,-0.34l0.11,-0.32l-0.55,-0.23l-0.27,-0.88l-1.22,-0.45l-0.72,0.76l-0.35,-0.3l-5.57,0.15l-1.54,-0.49l-0.07,-0.38l-0.48,-0.19l-1.21,0.19l-0.29,-0.21l-1.97,0.69l0.13,-0.33l-0.57,-0.46l-0.86,0.46l-3.28,0.67l-6.33,-0.98l-0.68,0.14l-0.73,-0.55l-1.19,0.24l-1.58,-0.28l-0.96,-0.63l-1.61,0.25l-0.66,-0.22l-0.44,-0.69l0.33,-2.01l-0.21,-0.47l-0.62,-0.28l-0.88,0.03l-1.05,0.73l-1.2,-0.16l-1.02,0.74l-0.89,-0.94l1.63,-2.22l0.19,-0.7l-0.71,-1.01l-0.82,0.15l-0.03,-0.84l0.56,-0.31l1.05,0.17l0.62,-1.12l-0.19,-0.53l-1.22,-0.9l-1.71,0.01l-0.56,0.46l-0.37,-0.55l-1.24,-0.32l0.1,-0.97l0.63,-0.88l-0.18,-0.72l0.27,-0.75l1.18,-1.73l0.06,-0.58l-0.65,-1.21l-0.75,-0.24l-0.57,-1.16l-2.32,-1.17l-0.59,-0.99l-0.68,-0.41l0.48,-1.35l-0.17,-0.52l0.99,-1.39l-0.56,-0.9l0.99,-1.16l-0.1,-1.08l-1.36,-0.44l-4.18,0.47l-1.75,0.64l-1.21,0.08l-3.76,-0.81l-2.61,-2.94l-1.38,-3.12l-0.08,-1.08l-0.46,-0.45l-0.69,-2.88l-1.15,-1.48l-0.4,-1.33l-0.8,-0.6l-1.4,0.31l-0.27,0.35l-0.25,-0.04l-0.15,-0.74l-1.25,-0.46l-1.76,1.04l-1.53,-0.93l-1.41,0.65l-1.97,0.21l-0.21,-0.45l-1.66,-0.77l-1.13,0.12l-0.46,-0.75l-0.83,0.19l-0.75,-0.69l-2.8,-0.59l-1.39,-1.42l-1.64,1.0l-1.12,-0.34l-0.29,0.52l0.37,1.13l-0.18,0.81l1.8,1.59l0.03,1.28l-0.74,1.13l-0.76,0.21l-0.6,-0.51l0.42,-1.45l-0.66,-1.82l-1.23,-0.38l-0.78,0.2l-0.8,1.37l-0.0,2.41l-0.88,0.55l-0.15,1.63l-0.55,0.23l-0.51,2.34l-1.08,0.6l0.52,-2.06l0.92,-1.46l-0.04,-0.53l-0.43,-0.37l-5.21,2.26l-0.74,1.43l0.37,1.11l-1.51,3.72l-1.04,0.36l-0.33,0.8l-1.45,0.94l-2.12,-0.31l-1.54,0.55l-0.74,-0.45l-0.91,-1.45l-0.86,-0.4l-5.03,0.53l-0.6,-0.37l-1.81,0.36l-0.87,-1.51l0.09,-0.61l-0.87,-0.58l-2.52,1.18l-2.39,1.81l-1.71,0.43l-1.39,-0.23l-0.36,-0.67l-1.14,-0.19l0.07,-0.57l-0.7,-0.89l-2.68,-1.04l-0.66,-1.62l-0.66,-0.48l-2.73,0.25l-0.49,0.74l0.11,0.94l-0.39,0.19l-0.83,-1.63l-0.03,-1.17l-0.45,-0.95l-0.59,-0.29l-1.87,-0.0l0.82,-0.28l0.26,-0.4l-0.3,-0.8l-2.92,-1.0l-1.16,-0.73l-3.39,-0.36l-1.63,0.22l-0.83,0.29l-0.54,0.96l-3.01,0.33l-0.49,-1.51l-0.59,-0.6l-4.31,-0.55l-0.17,-0.66l-0.57,-0.45l-2.28,0.08l-1.11,-0.46l-1.15,-1.26l0.09,-1.93l-0.93,-4.52l-0.23,-2.72l-1.22,-0.94l-2.44,-0.45ZM472.71,752.99l-0.12,0.04l-0.06,-0.0l0.02,-0.03l0.17,-0.01ZM478.59,747.88l0.15,0.64l-0.47,0.42l-0.49,-0.12l0.81,-0.94ZM477.23,749.43l-0.4,0.46l-0.17,0.72l0.06,-0.73l0.51,-0.46ZM617.39,818.97l1.96,-1.47l0.57,-0.1l0.18,0.8l0.76,0.04l0.5,-0.3l-0.01,-0.69l1.66,-0.66l-0.41,1.69l0.39,0.57l1.51,-0.3l-0.57,1.2l0.09,0.52l0.4,0.19l-1.15,0.86l-0.53,-0.19l0.4,-0.95l-0.17,-0.45l-0.93,0.43l-0.54,-0.54l-0.8,0.06l-1.84,0.67l-0.64,-0.34l-0.07,-0.75l-0.75,-0.29ZM624.98,820.15l0.01,-0.01l0.01,0.0l-0.02,0.01ZM625.55,816.29l-0.88,0.97l-0.46,0.08l0.55,-0.73l0.8,-0.31ZM540.65,627.23l-0.07,-0.12l0.08,-0.1l0.01,0.05l-0.02,0.17ZM631.49,815.38l-0.36,-0.28l0.23,-0.45l0.55,-0.02l-0.42,0.76ZM627.3,816.03l0.76,-0.4l0.07,-0.04l-0.19,0.32l-0.64,0.12ZM581.92,801.51l0.01,-0.5l0.57,0.08l-0.37,0.17l-0.22,0.24ZM582.54,809.21l0.08,-0.02l-0.04,0.08l-0.05,-0.06ZM575.98,691.9l1.12,-1.08l0.85,7.33l-1.08,-0.7l-0.91,-1.5l0.4,-2.7l-0.38,-1.35ZM544.08,793.09l0.64,0.68l0.69,-0.74l0.82,0.42l0.64,-0.7l0.82,-0.2l0.0,1.02l0.75,0.43l0.23,0.62l0.6,0.21l0.7,-0.36l0.45,0.45l0.58,-0.27l0.5,0.81l-1.53,-0.59l-2.46,0.08l-0.84,-0.54l-3.09,-0.53l0.04,-0.61l0.44,-0.17ZM551.8,795.48l0.54,-0.33l0.22,-1.0l-0.92,-0.74l0.51,-0.53l0.2,0.27l0.44,-0.15l0.37,-0.71l1.04,-0.37l0.21,0.71l0.84,0.06l1.09,1.55l0.72,-0.51l0.42,-1.47l1.23,-0.76l0.44,0.27l-0.0,1.0l1.05,0.28l-0.19,1.49l1.03,1.15l-0.71,0.35l-2.15,2.25l-0.45,-0.55l-1.03,-0.07l-0.86,-0.45l-0.34,-0.52l-2.37,-0.45l-1.33,-0.75ZM561.38,795.5l0.14,-1.12l0.31,-0.89l0.37,-0.6l-0.5,1.08l0.43,0.57l1.05,-0.18l-0.09,0.36l-2.12,3.83l-0.58,0.22l-0.22,-0.27l1.92,-2.1l-0.14,-0.72l-0.57,-0.18ZM561.46,799.85l0.39,-0.41l0.14,-0.08l-0.3,0.47l-0.22,0.02ZM559.12,790.23l0.46,-0.13l0.58,0.12l-0.77,0.13l-0.27,-0.12ZM549.83,792.88l0.11,-0.31l0.76,-0.11l-0.14,0.31l-0.72,0.11ZM540.38,793.88l0.61,-1.05l0.4,-0.17l0.82,0.55l-0.62,1.12l-1.21,-0.46ZM532.26,787.83l1.6,-0.01l1.59,1.01l-0.18,0.7l-0.88,0.31l-0.15,0.99l-1.53,-1.95l-0.45,-1.06ZM508.42,762.98l0.75,-0.68l1.29,-0.13l1.11,0.39l-0.97,0.41l-2.18,0.01ZM486.18,744.42l0.13,-0.01l0.53,0.92l-0.33,0.05l-0.33,-0.95ZM482.14,744.75l1.2,-0.66l1.87,0.08l-0.46,1.02l-1.2,-0.05l-1.18,0.8l-0.23,-1.19ZM469.8,755.19l0.19,-0.21l0.18,-0.01l-0.36,0.23Z\",\n            name: \"Ontario\"\n          },\n          \"CA-AB\": {\n            path: \"M139.75,606.41l0.38,-0.39l-0.02,-0.65l1.18,0.57l0.81,-0.56l-0.36,-1.98l-0.93,-0.51l0.38,-1.01l-0.68,-0.55l0.01,-0.33l37.32,-108.88l22.35,7.31l22.92,6.81l23.1,6.18l22.87,5.45l-44.18,197.52l-23.74,-5.6l-21.73,-5.63l0.08,-0.8l-0.96,-1.24l0.17,-0.95l-0.81,-1.03l-1.42,-0.63l0.23,-0.86l-0.52,-0.39l-0.17,-1.26l-0.89,-1.31l0.8,-2.77l-1.36,-0.54l-0.36,-0.46l0.84,-0.39l1.4,-2.48l-0.07,-2.44l0.13,-0.54l0.67,-0.45l0.24,-1.71l-0.41,-1.28l0.52,-4.26l-0.64,-1.2l-0.83,-3.13l-1.24,-1.02l-1.26,0.24l-0.48,-1.21l0.36,-0.7l-0.28,-1.21l-0.72,-0.4l-1.19,-1.57l-0.23,-0.8l-0.55,-0.38l0.84,-0.16l-0.02,-1.71l-1.21,-1.73l-0.1,-0.81l-1.92,-1.32l-0.23,-0.43l0.28,-1.29l-0.17,-0.62l-0.92,-0.74l-0.13,-0.8l-0.83,-0.44l-0.08,-1.12l0.37,-1.35l-0.74,-1.03l0.08,-0.91l-0.53,-0.7l-0.09,-0.87l-0.74,-0.79l0.15,-1.06l-0.35,-2.08l-1.26,-0.33l-1.17,0.69l-0.24,0.56l-0.62,-0.25l-0.14,-3.71l-1.62,-3.01l0.14,-2.56l-0.41,-0.29l-0.84,0.64l-1.09,-0.63l-1.03,-0.0l-0.4,-1.01l-0.81,-0.6l-0.28,-1.09l1.11,-0.63l0.48,-1.28l-0.31,-0.63l-1.56,-1.12l-0.59,-1.12l-0.67,0.05l-0.69,1.15l-1.39,-0.1l-0.07,-0.72l0.77,-0.54l-0.52,-1.06l0.22,-0.72l-0.41,-1.19l0.77,-0.81l-0.14,-1.64l-0.53,-0.78l0.37,-1.01l-0.53,-1.4l-1.3,-0.18l-0.07,-1.34l0.38,-1.17l-0.69,-1.05l0.31,-0.71l-0.69,-1.67l-1.29,-1.58l-0.74,0.2l-0.57,1.02l-1.63,-1.38l-0.38,-1.59l0.04,-1.64l-2.21,-1.16l-0.68,0.12l-0.5,-0.76l-0.25,-2.18l-0.69,-0.43Z\",\n            name: \"Alberta\"\n          }\n        },\n        height: 867.2308867877658,\n        projection: {\n          type: \"lcc\",\n          centralMeridian: -90\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"ch_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 497.64536275046987,\n          bbox: [{\n            y: -5769822.077045524,\n            x: 663222.5452325371\n          }, {\n            y: -5491965.667990425,\n            x: 1165730.52956792\n          }],\n          left: 0\n        }],\n        paths: {\n          \"CH-SO\": {\n            path: \"M340.89,78.89l8.38,4.47l1.01,1.24l-2.2,3.11l-2.13,1.45l-0.49,0.75l-0.34,4.14l-0.58,1.98l-1.55,1.66l-7.35,1.98l-0.31,0.35l-0.18,2.18l0.53,3.39l1.13,3.25l0.91,0.93l1.21,0.39l6.96,-0.56l4.86,1.01l4.14,1.89l4.83,3.53l5.48,1.59l0.47,-0.24l0.7,-1.7l3.05,-4.49l2.36,-1.34l4.09,-1.01l1.57,-1.01l4.85,-1.89l1.39,-1.98l1.06,-2.54l4.86,-0.28l4.28,-1.02l3.98,-2.49l1.27,-1.62l-0.2,-1.37l-1.23,-1.85l-0.33,-1.26l1.86,-3.99l2.64,0.41l1.59,1.65l0.29,0.68l0.09,3.56l1.39,0.94l0.82,3.32l1.0,1.32l1.87,1.54l2.03,0.97l2.21,0.54l0.2,4.4l-1.39,2.75l-2.28,2.97l-2.67,5.37l-2.8,1.44l-12.57,-1.64l-3.52,-0.8l-8.91,7.03l-5.44,8.94l-1.37,1.49l-6.68,1.41l-2.03,-0.55l-3.81,1.23l-5.34,-0.23l-2.18,-1.2l-6.71,-6.94l-0.43,-0.1l-7.16,2.76l-13.27,1.42l-0.24,0.68l2.78,2.87l0.83,2.64l0.26,2.14l3.71,3.86l3.69,1.49l3.12,3.96l3.81,6.38l0.3,1.28l-0.72,1.37l-2.52,1.41l-1.21,1.59l-1.96,1.73l-1.05,0.15l-9.06,-0.24l-5.26,-3.14l-2.69,0.34l-2.84,2.39l-5.21,6.56l-2.79,2.16l-5.28,2.11l-0.82,0.82l-0.04,1.52l1.29,3.3l-0.13,1.25l-0.58,0.69l-1.16,0.62l-3.32,0.97l-1.54,-3.02l-0.15,-2.2l-0.76,-0.48l-7.44,1.65l-0.55,-0.23l-1.04,-0.75l-2.38,-3.96l0.05,-1.42l3.81,0.2l2.12,0.46l4.52,-0.91l1.61,-0.81l0.37,-1.51l-0.39,-2.43l0.32,-1.05l1.16,-1.5l2.04,-1.46l2.63,0.75l1.69,-0.32l2.33,-1.46l0.64,-1.76l-2.22,-2.17l-0.71,-4.29l-0.46,-0.34l-3.19,0.57l-2.54,1.57l-1.75,0.45l-4.39,4.14l-1.48,0.7l-1.94,0.3l-1.1,-0.23l-0.16,-1.93l-1.88,-3.73l-1.18,-0.78l-3.04,-1.13l-0.52,-0.57l-2.19,-4.23l0.38,-0.88l14.79,-5.72l0.24,-0.49l-0.45,-1.5l3.94,-2.89l4.5,-1.59l4.14,-3.53l2.99,-1.85l6.48,-1.79l1.96,-1.16l1.34,-1.41l1.87,-4.27l1.88,-0.36l0.52,-2.14l-0.51,-2.34l-0.66,-0.87l-0.71,-0.62l-1.44,-0.34l-3.1,-2.22l-1.83,-2.62l-1.78,-1.16l-1.87,-0.54l-5.24,-0.26l-9.06,-1.99l2.63,-3.55l2.5,-0.48l1.29,0.2l3.36,1.66l3.52,0.46l1.89,-0.44l1.55,-0.84l2.32,-3.63l0.62,-0.46l7.43,-0.92l0.53,-0.7l-0.63,-2.04l0.12,-1.12l5.27,-0.61l2.78,-2.41l2.31,-5.82l-0.85,-1.79l-2.69,-1.14l1.02,-2.28l1.38,-0.26l5.34,0.48l1.16,-0.63l0.46,-0.64l0.09,-0.86l1.11,0.07ZM305.81,77.03l2.71,-0.28l5.24,1.51l0.72,1.4l0.12,6.29l-12.28,2.22l-3.0,-0.06l-1.21,-2.89l-0.21,-4.83l1.22,0.64l2.87,0.25l3.11,-2.43l0.72,-1.8ZM292.36,89.43l1.58,1.78l2.81,0.48l2.13,3.04l0.04,1.26l-2.68,1.59l-10.62,0.35l0.68,-4.39l3.56,-1.29l2.51,-2.83Z\",\n            name: \"Solothurn\"\n          },\n          \"CH-LU\": {\n            path: \"M439.6,141.66l-0.79,0.31l-0.42,0.54l1.06,2.39l1.76,1.26l1.42,0.55l1.97,-0.14l3.55,-2.27l4.53,-6.95l0.9,-2.04l3.18,-3.21l3.14,-0.28l3.14,1.12l1.09,0.89l1.03,1.35l1.45,4.57l1.52,2.91l6.65,16.4l2.96,4.27l2.61,2.49l2.57,1.09l5.74,0.23l2.36,3.29l3.72,1.14l0.96,2.29l-5.81,3.03l-1.23,1.03l-0.68,1.05l-0.55,3.09l-2.5,2.53l-0.29,1.04l0.4,1.55l1.22,1.36l2.2,1.03l3.26,-1.17l7.78,1.76l7.54,6.01l1.24,1.87l-1.22,2.9l-6.14,2.81l-0.96,-1.56l-2.75,-2.26l-3.01,-0.59l-2.09,1.57l-0.28,1.17l-1.67,0.46l-6.39,-0.12l-0.44,-1.04l-2.51,-1.12l-3.04,1.32l-4.19,1.25l-4.77,-0.49l-2.55,0.38l-4.9,-0.02l-3.41,0.61l-3.88,1.17l-1.35,0.86l-0.65,1.27l-0.16,1.13l0.73,1.62l-10.49,0.87l-3.5,1.95l-0.62,1.14l0.94,3.35l-0.26,1.04l-3.97,3.19l-4.68,5.14l-0.81,0.04l-0.9,-1.0l-1.85,-0.04l-1.07,0.35l-1.02,0.74l-2.14,3.1l-0.78,1.95l-0.7,3.54l-3.92,8.17l0.64,2.84l1.0,1.86l0.99,3.68l-3.01,4.14l-4.0,-0.21l-6.42,2.66l-1.42,0.23l-1.04,-0.25l-2.53,-2.66l-2.43,-3.23l-13.16,-9.1l-2.96,-2.79l-0.11,-1.92l-1.78,-4.85l0.27,-0.94l1.87,-1.66l0.69,-1.58l0.15,-1.92l-0.43,-3.02l0.31,-2.27l3.76,-1.78l2.02,0.25l1.18,-0.2l1.08,-0.73l1.32,-2.32l1.08,-0.73l0.44,-0.65l0.43,-2.32l1.46,-2.1l1.29,-3.48l1.3,-5.82l-0.32,-0.48l-4.18,-0.75l-1.56,-1.05l-4.95,-0.39l-0.76,-3.97l-4.04,-5.08l-0.44,-1.62l0.0,-1.48l0.63,-5.1l0.0,-5.01l0.36,-2.54l0.59,-1.61l1.64,-2.76l-1.72,-7.59l-0.05,-2.64l-0.65,-2.0l-6.9,-13.49l11.63,-2.04l4.63,-0.02l5.19,-1.62l1.14,-0.87l0.38,-0.91l-0.14,-5.1l0.26,-0.67l0.67,-0.09l4.17,-0.08l2.87,1.03l4.38,7.46l0.47,0.18l13.52,-4.53l2.96,2.63l3.99,1.13l5.45,0.19l1.51,0.53Z\",\n            name: \"Lucerne\"\n          },\n          \"CH-SH\": {\n            path: \"M526.25,35.82l-2.09,-0.73l-2.9,-0.41l-9.69,1.42l-8.73,4.3l-3.37,0.12l-4.01,-1.96l-5.09,-3.33l-3.79,-1.03l1.11,-2.59l-0.49,-2.16l-0.82,-1.83l0.2,-1.62l1.81,-1.78l4.99,-2.35l2.2,-1.75l1.63,-5.24l0.89,-1.78l2.62,-3.31l1.4,-0.71l2.2,0.04l10.74,-1.84l3.1,-1.34l0.2,-0.53l-1.69,-3.65l2.73,-1.34l4.8,0.23l3.42,1.32l0.46,4.93l0.7,3.08l2.13,1.5l0.41,0.01l2.67,-1.67l1.01,-5.4l1.55,-1.39l2.24,0.64l1.82,2.37l1.58,2.96l1.73,2.18l2.06,0.4l2.28,-0.38l1.69,0.28l1.13,2.2l-3.06,4.15l-0.71,2.06l0.85,2.07l1.6,1.73l0.86,3.48l0.39,0.31l10.53,-0.13l0.37,-0.25l-0.09,-0.44l-1.44,-1.39l1.61,-4.46l4.98,0.19l6.4,3.2l4.46,3.62l-2.84,0.57l-0.32,0.4l0.02,1.76l0.8,0.87l-3.48,-1.6l-2.47,0.8l-1.93,-0.72l-0.36,0.23l-2.31,4.79l-1.29,1.25l-0.71,0.44l-2.29,0.34l-2.31,1.64l-1.1,0.36l-8.02,-0.27l-2.95,-1.18l-1.95,-2.88l-0.32,-3.9l0.63,-3.83l-0.39,-0.46l-8.61,-0.2l-1.94,1.55l-1.42,2.3l-3.36,2.72l-2.67,3.04ZM517.99,52.38l1.93,1.73l2.53,-0.73l-2.39,5.43l-1.41,1.79l-0.43,0.04l-0.54,-0.17l-1.64,-1.9l-2.06,-1.54l0.14,-1.46l3.86,-3.2Z\",\n            name: \"Schaffhausen\"\n          },\n          \"CH-SG\": {\n            path: \"M702.16,76.88l4.04,2.88l4.77,-1.25l6.82,-4.75l5.94,7.73l7.54,3.02l5.51,4.17l-0.16,10.42l-1.87,3.71l-7.77,8.48l-2.69,8.38l-6.8,7.06l-9.71,14.17l-3.48,8.59l-0.48,8.78l1.53,4.17l2.18,3.68l1.63,3.94l0.1,5.2l-1.81,3.21l-3.0,2.66l-2.37,2.74l0.16,3.61l1.54,4.35l2.24,4.25l6.94,10.43l-2.26,0.88l-1.02,0.96l-1.33,3.41l-1.78,1.2l-1.14,1.2l-2.44,4.23l-0.62,2.99l-0.12,2.47l-0.53,1.28l-2.53,3.85l-2.64,0.95l-0.53,1.87l-1.59,0.01l-2.2,-1.44l-4.19,-1.81l-26.72,-3.37l-1.92,0.43l-0.55,-0.13l-2.93,-2.98l0.37,-2.15l-0.22,-1.11l-1.56,-3.07l-0.74,-2.9l0.57,-1.45l0.93,-7.36l-0.33,-1.86l-0.87,-2.22l-2.7,-4.77l-1.74,-2.0l-1.86,-1.1l-3.01,0.53l-2.22,0.96l-3.59,0.34l-1.19,-0.29l-3.5,-1.84l7.34,-4.75l1.13,-3.62l0.99,-11.99l-0.33,-0.43l-20.93,-3.53l-2.94,-1.45l-10.43,-8.17l-1.59,-0.09l-2.96,1.38l-5.08,-4.41l-1.21,-1.99l0.68,-4.39l-0.29,-0.48l-6.36,-1.66l-18.73,1.62l-10.32,-1.57l2.48,-5.26l3.47,-2.35l8.06,0.97l2.68,-0.19l11.98,-4.79l1.86,-1.45l1.0,-1.26l-0.06,-2.21l1.03,-1.43l1.44,-1.66l3.87,-3.27l0.66,-1.31l-1.72,-7.35l-5.21,-8.02l1.53,-0.21l1.64,-1.89l2.76,-4.3l1.99,-2.04l2.85,-5.1l0.66,-0.2l1.52,0.23l2.72,-1.01l2.4,-0.35l0.87,-0.45l0.52,-0.78l-0.13,-4.53l-5.63,-3.68l-0.51,-1.74l0.5,-0.86l2.97,-0.81l1.74,-1.55l0.5,-0.12l2.78,0.52l3.93,-0.39l1.3,1.46l0.78,0.23l2.58,-0.24l2.46,0.57l2.58,-0.01l3.36,-0.45l1.81,-0.9l2.5,-3.41l2.76,2.77l6.53,2.69l11.4,1.94l2.75,-1.4l2.83,0.25l1.47,-0.43l1.08,-0.68l0.85,-1.08l1.26,-2.83l-1.29,-4.32l-1.58,-0.2l-2.34,0.58l-1.98,-0.24l-0.49,-0.52l1.26,-0.04l1.88,-1.42l1.16,-0.37l3.4,-0.5l1.07,-0.83l1.77,-0.58l2.57,-0.07l1.65,2.26l-0.08,1.73l-0.62,1.3l0.53,1.64l4.52,5.01l1.73,1.23l1.41,0.48l0.47,-0.18l1.32,-2.27l9.89,-6.41l1.51,0.86l-0.77,2.02l0.61,1.21l2.85,0.99l3.06,-0.8ZM673.5,139.2l2.49,1.56l3.14,1.38l3.21,0.41l5.82,-1.89l3.9,-1.73l2.99,-1.87l2.83,-2.74l3.95,-6.41l3.4,-14.39l-1.34,-3.94l1.0,-6.02l5.13,-1.72l2.39,-0.32l3.06,1.18l8.51,-4.55l0.21,-0.41l-0.33,-2.25l0.31,-1.71l4.92,-4.41l-0.2,-0.7l-8.1,-1.2l-3.03,-1.03l-2.57,-1.65l-2.76,-0.82l-0.8,0.06l-1.3,0.59l-4.14,3.22l-9.93,3.83l-3.97,1.0l-1.34,1.79l-0.98,2.82l-1.05,1.01l-2.23,0.6l-4.41,-0.05l-16.11,2.59l-3.26,-0.91l-8.58,0.91l-2.09,-0.14l-1.75,2.29l-3.43,5.96l-2.82,2.58l2.59,4.83l0.43,0.19l2.65,-0.41l0.6,0.81l-1.41,2.03l-1.27,1.17l-0.48,1.17l-0.14,1.83l1.34,5.45l-2.16,2.22l-0.0,0.56l1.48,1.52l1.02,0.54l1.88,0.47l9.87,1.11l6.05,2.88l2.29,1.41l1.34,0.0l3.19,-0.73Z\",\n            name: \"Sankt Gallen\"\n          },\n          \"CH-UR\": {\n            path: \"M593.4,222.69l2.81,4.54l0.47,1.52l0.03,3.8l-0.74,1.19l-1.23,0.92l-4.18,1.49l-2.23,0.29l-6.68,4.58l-0.52,2.0l0.3,5.85l-2.01,2.29l-2.18,1.04l-1.37,1.26l-2.75,0.74l-0.78,0.74l-0.24,5.17l-1.78,1.94l-1.65,2.46l-0.31,1.06l0.17,2.12l-0.53,0.66l-3.44,0.89l-3.88,-0.98l-3.49,1.06l-2.16,1.93l-4.59,5.17l-1.84,0.9l-2.03,0.39l-3.25,1.25l-1.46,1.09l-0.8,1.14l0.11,1.72l-0.4,2.12l-1.45,2.87l-1.4,3.93l-0.17,1.59l0.27,1.5l1.05,1.9l2.41,1.36l0.42,0.68l1.44,4.93l-0.54,3.1l-7.98,2.99l-17.37,-3.44l-2.47,0.11l-1.64,0.44l-1.23,1.2l-2.81,6.93l-6.27,4.55l-7.58,-3.56l-2.96,-3.99l-2.62,-6.01l-0.06,-2.46l2.1,-6.79l0.54,-5.32l-0.88,-2.0l-1.61,-0.74l-0.58,-3.03l-0.86,-2.07l-0.06,-2.74l0.74,-0.74l1.06,-0.12l3.24,0.73l1.76,0.08l1.45,-0.31l0.92,-1.09l0.6,-4.03l-0.57,-3.51l-2.06,-4.49l0.02,-3.3l1.6,-3.26l6.56,-1.93l0.62,-2.7l-0.69,-2.71l-1.14,-0.86l-0.34,-0.75l0.8,-1.41l1.58,-4.96l1.03,-1.69l2.09,-2.19l0.32,-0.95l-0.51,-1.09l-0.78,-0.62l-2.5,-0.77l-1.74,0.13l-0.76,-4.62l0.38,-1.7l-0.31,-1.81l-1.98,-3.04l0.08,-0.55l3.58,-2.3l10.13,-4.51l3.27,-2.76l0.69,-1.14l2.75,-7.46l0.29,-1.37l-0.22,-1.23l5.3,-0.25l1.5,0.66l1.01,4.28l0.95,2.45l2.71,1.55l5.99,1.7l1.61,0.21l4.46,-0.26l0.81,0.31l0.48,0.58l1.0,2.8l1.45,1.87l1.38,0.49l1.58,-0.46l3.94,-2.35l5.1,-1.75l2.37,1.37l1.89,0.28l5.56,-0.12l1.19,0.42l0.44,0.71l0.05,2.42l1.8,2.04l1.28,0.19l1.03,4.77l0.91,0.68l1.18,-0.18l1.41,-1.17l5.85,-2.24l8.68,-4.27Z\",\n            name: \"Uri\"\n          },\n          \"CH-NE\": {\n            path: \"M178.38,161.36l4.02,1.88l2.17,2.51l1.61,3.43l0.2,0.94l-0.2,1.56l-0.79,3.14l-1.31,1.51l-0.55,1.97l0.08,1.7l0.41,0.38l31.89,-8.38l0.11,2.98l0.31,0.38l2.71,0.62l5.71,2.78l1.48,1.1l0.64,1.06l-1.02,0.7l-0.29,0.59l0.92,3.84l-0.19,2.13l-4.05,2.59l-4.42,1.61l-0.9,0.9l-0.71,1.32l-1.07,4.13l-2.77,6.2l-50.41,35.99l-3.41,-6.87l-0.35,-1.55l-0.07,-3.94l-0.72,-1.45l-1.6,-1.11l-1.0,-1.19l-0.47,-1.36l0.44,-2.46l-0.65,-3.11l-0.58,-0.27l-11.76,6.14l-5.32,3.87l-3.01,1.71l-6.04,1.77l-9.72,4.47l-2.78,1.89l-1.94,0.85l-11.91,0.7l-2.98,0.45l0.45,-1.03l0.33,-3.48l-0.65,-2.91l-2.69,-4.46l-0.76,-2.11l2.87,-8.54l9.49,-4.75l21.42,-5.82l13.42,-8.8l4.65,-5.77l0.04,-0.43l-2.28,-4.46l2.52,-3.76l1.77,-1.51l4.93,-1.53l0.93,-1.7l3.46,-1.63l0.24,-0.39l-0.23,-4.0l5.81,-1.78l12.46,-9.94l2.11,0.69Z\",\n            name: \"Neuch\\xe2tel\"\n          },\n          \"CH-BS\": {\n            path: \"M337.13,63.59l-0.03,3.8l-0.95,0.97l-3.22,-1.92l-1.27,-1.23l-1.02,-0.37l-1.39,0.32l-3.28,1.9l-1.73,-1.26l-0.82,-1.07l-3.72,-0.58l-6.54,-3.9l5.25,-2.63l7.09,-2.3l10.13,-2.61l3.83,-0.34l-2.33,5.64l-1.93,1.6l-5.07,-0.04l-0.39,0.31l0.23,0.45l7.18,3.26Z\",\n            name: \"Basel-Stadt\"\n          },\n          \"CH-JU\": {\n            path: \"M176.99,160.06l3.74,-5.32l5.73,-5.09l13.52,-8.55l0.18,-0.39l-0.79,-6.19l1.23,-4.99l3.56,-3.16l3.02,-0.68l2.85,-3.33l1.97,-0.99l2.1,-0.51l1.88,-1.03l1.7,-2.93l-0.04,-0.45l-2.15,-2.63l-5.97,-4.43l-4.0,1.46l-23.08,1.96l0.8,-2.62l2.43,-3.88l2.88,-3.24l5.07,-2.57l0.51,-4.79l5.04,-0.98l3.3,-1.64l3.06,-2.27l1.56,-2.48l-1.01,-3.09l-2.02,-3.44l-0.42,-2.38l3.35,-0.88l1.83,-1.21l1.63,-0.36l1.66,0.36l1.92,1.22l5.17,0.65l9.98,-1.48l4.58,0.82l2.67,1.3l2.75,0.37l4.71,-0.41l-3.3,6.54l1.11,4.42l4.53,2.48l5.87,1.59l2.22,2.4l1.55,0.56l1.55,-0.22l7.58,-2.83l5.2,-0.94l5.31,0.2l1.17,1.14l8.29,3.57l5.29,3.68l1.3,1.8l0.29,1.92l0.9,0.85l0.8,0.34l2.12,0.01l9.65,2.12l5.36,0.27l1.52,0.45l1.55,0.98l1.91,2.71l2.79,2.0l-2.84,2.28l-0.62,2.07l0.16,0.8l0.91,0.67l3.05,0.37l-11.59,2.84l-21.7,-1.51l-1.73,-0.63l-1.06,-2.05l-0.78,-0.36l-0.87,0.53l-0.48,1.19l-1.71,1.67l-1.61,0.61l-5.54,3.59l-5.05,1.57l-3.01,0.55l-3.73,0.19l-16.77,-2.93l-0.46,0.32l-0.49,2.58l0.31,1.16l-0.29,0.73l-2.69,1.92l-0.52,0.93l-0.09,1.64l0.69,2.64l-0.72,0.62l-9.65,1.57l-6.18,-0.49l-1.59,0.3l-0.93,0.89l-0.82,2.32l-3.78,5.12l-2.05,1.77l-5.04,2.6l-2.13,1.85l-1.92,0.33l-4.67,-0.11l-2.37,1.14l-7.13,4.76l-2.16,1.11l-1.36,0.31l-3.36,-2.34l-5.43,-0.36l-1.62,-0.53Z\",\n            name: \"Jura\"\n          },\n          \"CH-BL\": {\n            path: \"M286.35,98.71l10.0,-0.33l3.32,-2.08l-0.04,-1.8l-1.93,-2.94l-0.64,-0.6l-2.73,-0.44l-1.44,-1.7l0.97,-1.15l0.64,-2.56l-0.41,-1.59l-2.55,-3.23l-0.01,-1.13l1.92,-0.48l3.61,1.25l0.26,5.49l0.98,2.64l0.78,0.85l3.33,0.06l12.66,-2.29l0.33,-0.4l-0.12,-6.71l-0.92,-1.87l-5.66,-1.72l-3.02,0.28l-1.88,-2.87l0.16,-0.49l0.88,-0.41l2.12,0.35l1.84,-0.64l0.92,-1.66l-0.06,-2.53l-4.06,-2.42l6.83,-4.81l6.92,4.1l3.8,0.64l0.56,0.89l2.01,1.47l0.44,0.02l4.34,-2.24l0.82,0.29l2.68,2.22l2.06,1.06l0.47,-0.08l1.38,-1.57l0.03,-3.61l2.46,1.09l4.39,0.5l8.71,-1.54l7.85,3.45l0.95,0.15l0.92,0.66l0.04,2.63l0.48,1.54l0.94,1.07l2.89,-0.42l5.02,-3.93l0.64,-0.94l0.25,-2.42l0.2,-0.84l0.35,-0.25l1.03,-0.15l2.64,0.66l1.49,1.77l1.14,0.78l0.92,1.71l5.79,7.57l0.85,2.05l2.0,1.23l5.74,0.53l0.03,3.23l0.43,1.67l2.38,1.46l-1.91,4.18l0.39,1.64l1.26,1.92l0.09,0.89l-1.02,1.14l-3.67,2.31l-4.12,0.98l-4.06,0.06l-1.13,0.3l-2.43,4.53l-4.79,1.87l-1.5,0.98l-4.18,1.04l-2.48,1.42l-3.26,4.73l-0.62,1.49l-5.01,-1.45l-4.76,-3.49l-4.34,-1.97l-5.07,-1.04l-6.94,0.55l-1.41,-0.85l-1.38,-4.53l-0.05,-3.6l7.41,-2.08l1.76,-1.95l0.63,-2.22l0.25,-3.84l0.81,-0.92l1.7,-1.11l2.41,-3.34l0.03,-0.48l-1.41,-1.73l-8.68,-4.58l-1.61,-0.1l-0.42,0.39l-0.03,0.93l-0.96,0.84l-5.26,-0.47l-2.04,0.55l-1.27,2.84l0.21,0.53l2.93,1.24l0.49,1.14l-2.21,5.39l-2.27,2.01l-4.39,0.32l-1.19,0.41l-0.42,1.77l0.53,2.04l-7.38,0.92l-0.98,0.77l-2.1,3.39l-1.33,0.73l-1.76,0.41l-3.11,-0.41l-3.35,-1.66l-1.68,-0.26l-2.97,0.68l-2.97,4.0l-1.87,-0.01l-1.03,-0.66l-0.36,-2.03l-1.39,-1.93l-4.49,-3.15ZM284.82,97.78l-7.82,-3.36l-0.53,-0.38l7.52,0.28l1.45,-0.47l-0.61,3.94Z\",\n            name: \"Basel-Landschaft\"\n          },\n          \"CH-SZ\": {\n            path: \"M604.0,160.14l-3.74,10.38l-0.59,4.25l-1.34,2.27l0.39,3.53l-0.17,1.69l-1.92,3.41l-1.54,2.02l-1.67,1.62l-4.88,2.0l-2.32,1.48l-1.12,3.01l0.13,0.44l2.75,2.18l5.49,6.84l-0.47,0.88l-0.0,0.98l0.93,1.55l1.1,1.0l3.11,1.83l0.68,1.01l0.31,1.42l-1.65,6.09l-13.06,6.21l-5.89,2.25l-1.34,1.14l-0.61,0.16l-0.47,-0.29l-0.43,-1.31l-0.27,-2.9l-0.46,-0.77l-1.41,-0.27l-1.02,-0.98l-0.5,-0.75l-0.02,-2.36l-0.8,-1.12l-1.39,-0.49l-5.74,0.1l-1.7,-0.25l-2.63,-1.4l-5.38,1.82l-3.94,2.34l-1.16,0.4l-0.93,-0.28l-1.33,-1.72l-0.94,-2.69l-0.82,-0.96l-1.16,-0.41l-5.9,0.09l-5.94,-1.68l-2.41,-1.38l-1.82,-6.56l-2.01,-1.03l-6.03,0.26l-14.25,1.63l-4.1,-2.48l6.1,-2.89l1.38,-3.28l-1.46,-2.52l-7.87,-6.23l-7.99,-1.81l-3.14,1.18l-1.96,-0.92l-0.96,-1.12l-0.26,-1.17l0.21,-0.62l2.51,-2.57l0.58,-3.16l0.54,-0.8l1.01,-0.84l10.01,-5.29l3.22,0.57l3.37,6.57l0.39,0.22l10.22,-0.76l0.96,0.18l2.36,1.82l1.98,0.13l9.77,-2.33l2.78,-0.99l2.27,-1.49l5.58,-5.82l1.56,-3.76l3.49,-3.21l-0.07,-0.64l-3.53,-2.11l-0.35,-1.37l-1.27,-1.72l0.38,-1.81l3.03,-2.62l7.69,-4.24l8.51,-1.5l10.93,1.65l18.71,-1.62l5.78,1.53l-0.48,2.09l-0.07,2.43l1.38,2.23l5.11,4.44Z\",\n            name: \"Schwyz\"\n          },\n          \"CH-BE\": {\n            path: \"M285.59,124.12l21.93,1.54l11.29,-2.75l-1.21,3.09l-1.08,1.12l-1.77,1.06l-6.47,1.79l-1.47,0.77l-5.83,4.69l-4.5,1.59l-4.22,3.09l-0.15,0.44l0.42,1.42l-14.6,5.65l-0.75,1.42l2.28,4.74l0.7,0.81l4.13,1.83l1.76,3.52l-0.1,1.66l0.78,0.75l1.38,0.26l2.18,-0.35l1.73,-0.85l4.34,-4.09l1.68,-0.41l2.42,-1.51l2.64,-0.46l0.69,4.06l2.19,2.17l-0.51,1.0l-2.02,1.21l-1.24,0.24l-2.85,-0.75l-2.43,1.65l-1.32,1.69l-0.44,1.34l0.26,3.47l-1.28,0.66l-4.3,0.88l-5.7,-0.76l-0.92,0.46l-0.31,1.1l0.25,1.1l2.44,4.07l2.05,1.31l7.61,-1.62l0.18,2.15l1.73,3.39l0.47,0.2l3.76,-1.11l1.27,-0.68l0.83,-0.94l0.24,-1.8l-1.32,-3.43l-0.02,-0.84l0.51,-0.54l5.25,-2.1l2.97,-2.28l5.28,-6.63l2.66,-2.23l1.97,-0.27l5.42,3.18l9.26,0.24l1.42,-0.27l2.08,-1.84l1.23,-1.6l1.85,-0.87l1.26,-1.45l0.36,-1.09l-0.37,-1.53l-3.89,-6.51l-3.22,-4.09l-3.74,-1.53l-3.55,-3.7l-0.16,-1.9l-0.86,-2.73l-2.39,-2.54l12.5,-1.34l7.06,-2.71l6.57,6.79l2.59,1.39l5.5,0.24l3.9,-1.23l1.97,0.56l6.47,-1.36l0.65,5.17l2.63,3.92l6.06,11.69l1.66,4.09l0.04,2.58l1.69,7.47l-1.56,2.43l-0.64,1.77l-0.37,2.61l-0.0,5.02l-0.63,5.15l0.01,1.66l0.47,1.76l4.13,5.24l0.69,3.95l0.36,0.33l5.15,0.41l1.5,1.03l3.86,0.69l-1.2,5.36l-1.22,3.32l-1.5,2.18l-0.45,2.35l-1.4,1.17l-1.31,2.31l-1.68,0.64l-2.19,-0.22l-4.27,2.17l-0.39,2.67l0.43,3.07l-0.14,1.72l-0.59,1.31l-1.79,1.55l-0.46,1.37l1.81,5.17l0.22,2.17l3.15,2.96l13.13,9.08l2.31,3.1l2.66,2.8l1.43,0.41l1.83,-0.28l6.31,-2.62l10.27,0.53l3.74,0.71l8.73,5.01l3.99,1.34l8.21,-2.15l10.34,1.11l3.81,1.04l2.04,0.07l2.38,-0.79l6.65,-4.0l8.48,-2.88l6.41,4.85l1.72,-0.58l3.5,-0.45l3.46,1.07l-1.5,3.05l-0.26,1.4l0.21,2.45l1.73,3.53l0.72,3.33l0.11,1.99l-0.47,2.52l-0.54,0.75l-1.25,0.27l-4.78,-0.81l-1.4,0.14l-1.19,1.07l-0.06,3.27l0.88,2.17l0.53,2.78l-1.99,0.36l-3.86,4.2l-2.02,4.17l-1.22,3.97l-1.01,5.42l-1.76,2.54l-2.01,1.76l-5.21,3.3l-9.12,4.44l-4.72,1.46l-10.35,1.84l-1.09,0.04l-1.36,-0.54l-0.2,-1.72l-0.48,-0.45l-5.43,-0.54l-4.69,-1.79l-1.83,-1.32l-17.03,-2.82l-5.22,0.23l-6.67,3.54l-1.15,0.96l-0.1,0.82l1.25,2.06l0.27,1.38l-1.21,1.77l-12.73,7.49l-4.13,1.38l-1.74,0.26l-2.95,0.01l-2.58,-0.55l-24.21,15.25l-2.16,0.17l-13.11,-5.46l-4.46,-0.49l-1.66,0.97l-1.02,2.22l-2.68,2.01l-6.65,1.75l-4.67,2.51l-0.11,0.62l1.18,1.34l2.15,1.08l-2.35,1.82l-7.04,2.61l-2.82,0.4l-6.52,-1.76l-8.77,0.08l-3.44,0.81l-2.42,2.41l-4.46,2.68l-7.33,2.12l-2.11,-0.75l-0.14,-4.32l-0.84,-0.67l-1.3,0.02l-7.21,2.27l-0.5,0.67l-0.15,1.52l-1.43,2.09l-6.29,3.23l-0.19,-4.33l1.29,-2.13l-0.07,-1.32l-0.68,-0.82l-1.15,-0.52l-4.56,-3.7l2.18,-6.0l-0.44,-3.39l-1.22,-3.54l0.42,-0.62l3.28,-1.74l1.89,-2.22l0.71,-1.71l0.15,-1.66l-0.35,-4.22l3.05,-4.59l0.66,-2.09l0.26,-6.65l-2.17,-4.21l7.75,-5.93l5.43,-0.36l1.02,-0.42l0.9,-1.08l0.96,-5.89l-0.72,-7.25l2.03,-2.02l0.7,-0.46l5.98,1.21l2.82,-2.63l-0.27,-1.24l1.22,-8.07l-3.56,-2.71l-2.28,-0.3l-1.41,-1.73l-1.77,-1.22l-4.95,-2.09l-1.14,-2.55l-0.42,-3.6l0.12,-6.53l0.46,-3.92l2.34,-8.39l0.08,-3.78l-0.53,-2.58l-0.58,-1.12l0.13,-0.48l1.21,-0.87l0.94,0.15l0.12,0.76l0.42,0.42l0.86,0.41l1.21,0.01l3.27,-1.97l1.12,-2.44l-0.96,-5.65l-0.36,-0.33l-15.9,-1.23l-10.21,-2.54l-2.2,0.33l-1.22,-0.18l1.82,-4.24l0.23,-1.46l-0.84,-5.38l-1.62,-3.07l3.87,-2.1l2.13,-2.27l0.5,-1.03l-1.28,-1.96l-0.42,-2.02l-0.83,-0.82l-2.09,-0.42l-14.53,5.14l-15.89,1.37l-7.76,-2.71l2.68,-5.98l1.07,-4.13l0.57,-1.06l0.64,-0.69l4.43,-1.62l3.91,-2.29l0.47,-0.62l0.28,-2.58l-0.91,-3.74l1.16,-0.87l0.15,-0.69l-0.85,-1.35l-1.71,-1.29l-5.78,-2.81l-2.54,-0.59l-0.11,-3.15l-0.49,-0.38l-31.82,8.45l-0.07,-1.13l0.42,-1.65l1.42,-1.73l1.02,-5.04l-0.69,-2.41l-1.28,-2.36l-2.26,-2.61l-2.33,-1.13l3.25,0.21l3.31,2.33l1.8,-0.33l2.36,-1.2l7.13,-4.75l2.21,-1.05l4.43,0.15l2.15,-0.36l4.14,-3.09l3.26,-1.48l3.58,-3.55l2.46,-3.58l0.87,-2.4l0.62,-0.54l1.14,-0.18l6.27,0.49l10.01,-1.68l1.02,-0.87l0.11,-0.45l-0.75,-2.75l0.05,-1.21l0.3,-0.61l2.88,-2.15l0.37,-0.95l-0.3,-1.27l0.4,-2.1l16.43,2.87l3.89,-0.19l3.16,-0.57l5.18,-1.62l2.33,-1.26l3.26,-2.34l1.69,-0.65l1.91,-1.87l0.67,-1.34l1.43,2.27l1.95,0.7ZM252.79,217.72l-0.26,0.58l0.68,1.29l0.44,0.2l1.7,-0.33l0.97,-1.21l-0.06,-0.9l-0.49,-0.36l-2.97,0.73ZM321.41,121.22l-5.03,-0.3l-0.48,-0.27l-0.11,-0.53l0.41,-1.46l3.0,-2.41l1.22,0.29l0.93,1.06l0.31,0.92l0.14,1.03l-0.37,1.68Z\",\n            name: \"Bern\"\n          },\n          \"CH-NW\": {\n            path: \"M483.42,237.89l0.15,-2.14l-1.14,-1.56l-0.92,-0.33l-1.14,0.54l-0.88,1.39l0.04,1.11l0.69,1.26l0.65,4.1l1.14,3.17l-0.07,2.28l0.64,0.71l1.45,0.8l0.52,1.92l2.54,3.16l0.93,0.69l3.05,1.1l0.69,0.93l-5.59,1.68l-4.52,-3.49l-4.13,-2.14l-3.98,-4.74l-0.48,-5.76l0.55,-7.41l1.24,-4.09l0.0,-6.87l-0.52,-1.21l-0.99,-0.79l-4.76,-1.93l-2.01,-1.88l0.24,-1.42l2.25,-3.7l0.58,-2.7l-1.39,-1.18l-7.72,-2.02l-0.92,0.02l-3.09,1.25l-3.04,0.63l-0.77,-1.53l0.66,-1.91l0.97,-0.57l3.77,-1.14l3.35,-0.6l4.82,0.03l2.53,-0.38l4.9,0.48l4.3,-1.29l2.93,-1.27l1.82,0.93l0.19,0.73l0.64,0.48l6.7,0.11l1.98,-0.54l0.45,-1.36l1.5,-1.27l2.54,0.46l2.62,2.15l1.15,1.84l4.87,2.95l14.28,-1.55l0.22,1.09l-0.26,1.2l-2.73,7.4l-1.34,1.7l-2.26,1.8l-10.11,4.5l-3.91,2.58l-0.14,1.34l1.94,2.89l0.28,1.51l-0.39,1.85l0.76,4.61l-9.1,0.29l-1.88,-1.27l-0.91,-1.63l-1.09,-0.38l-1.08,0.09l-4.29,2.28Z\",\n            name: \"Nidwalden\"\n          },\n          \"CH-ZG\": {\n            path: \"M544.22,161.33l3.1,1.85l-3.16,2.91l-1.59,3.79l-5.49,5.73l-2.12,1.38l-2.61,0.92l-9.56,2.3l-1.55,-0.03l-2.42,-1.83l-1.21,-0.26l-10.12,0.74l-3.35,-6.54l-4.01,-0.8l-3.74,1.96l-1.07,-2.44l-3.74,-1.19l-2.33,-3.26l-1.47,-8.74l-1.02,-10.58l0.26,-2.11l2.12,-3.52l0.92,3.0l0.69,1.18l1.41,0.77l7.98,2.26l4.48,0.33l3.81,-1.14l5.57,-0.94l7.65,1.09l3.59,3.39l3.39,2.53l2.23,2.34l1.31,2.0l1.58,1.08l5.97,2.26l4.51,-0.46Z\",\n            name: \"Zug\"\n          },\n          \"CH-FR\": {\n            path: \"M170.17,307.43l0.07,-3.89l0.64,-0.54l0.13,-0.66l-0.81,-5.46l0.03,-2.9l0.54,-3.41l2.25,-0.24l3.15,-1.91l2.16,-0.41l3.13,-0.1l1.78,-0.64l-0.16,-1.27l1.07,-2.42l12.75,-15.74l0.74,-2.09l-0.13,-0.44l-3.51,-1.06l-0.63,-0.37l-0.31,-0.74l2.43,-0.62l0.99,-0.61l6.18,-7.53l-0.24,-3.68l1.08,-2.41l0.66,-0.9l2.11,-1.39l1.98,-2.1l0.75,-1.26l0.15,-0.81l-0.3,-0.59l-1.44,0.08l-1.0,-1.06l-0.47,-3.19l0.92,-2.31l-0.71,-2.06l-1.0,-0.79l-1.56,0.19l-1.07,0.65l-0.22,1.15l-0.36,0.35l-3.65,-4.13l-1.85,-1.54l-5.86,-7.13l7.03,-5.0l12.25,14.76l0.97,1.67l2.35,1.17l2.73,3.42l0.47,2.41l0.54,0.23l3.49,-1.58l1.86,-1.91l1.14,-1.92l0.89,-3.55l1.22,-1.74l0.76,0.03l0.99,0.8l0.79,-0.16l1.62,-1.54l0.51,-1.07l-0.37,-0.79l-2.28,-1.11l-4.1,-7.35l-0.75,-1.77l-1.31,-7.99l15.6,-1.34l14.58,-5.14l1.62,0.38l0.53,0.68l0.32,1.82l1.14,1.43l-0.3,0.65l-2.0,2.14l-3.54,1.81l-0.64,0.81l0.13,0.87l1.53,2.52l0.81,5.25l-0.7,2.54l-1.38,2.52l0.31,1.2l0.86,0.36l2.98,-0.34l10.23,2.54l15.63,1.21l0.89,5.22l-0.86,1.84l-2.8,1.76l-1.02,-0.01l-0.67,-0.43l-0.13,-0.87l-1.69,-0.45l-1.9,1.34l-0.18,1.06l0.59,1.1l0.51,2.48l-0.09,3.59l-2.33,8.34l-0.47,4.01l-0.12,6.63l0.46,3.78l1.34,2.88l0.77,0.57l4.34,1.64l1.65,1.13l1.5,1.8l2.3,0.32l0.95,0.94l2.26,1.38l-0.48,1.57l-0.77,6.21l0.31,0.91l-0.54,0.66l-1.63,1.49l-6.17,-1.15l-3.12,2.8l0.62,7.63l-0.83,5.5l-0.76,0.92l-0.69,0.25l-5.61,0.42l-8.07,6.18l-5.9,4.07l-11.52,3.06l-2.08,1.53l-4.54,4.91l-3.66,2.39l-5.8,0.6l-2.9,1.23l-3.51,2.59l-1.99,1.96l-1.07,1.56l-0.77,2.1l-4.12,1.74l-0.74,-0.48l-1.66,-2.84l-1.19,-4.82l-1.51,-3.17l-11.07,-7.13l-2.82,-0.95l-2.25,-0.08l-4.56,3.72l-1.62,0.71l-2.8,0.35l-2.15,-0.6l-2.16,-2.62l-1.3,-3.19l1.52,-2.67l4.42,-0.01l3.21,1.46l6.29,-6.18l1.46,-2.04l-0.16,-0.55l-0.56,-0.23l-2.25,0.44l-0.71,-0.19l-3.6,-2.8l-1.91,-0.73l-5.16,0.72l-1.47,-0.91l-1.38,-0.07l-2.46,0.76ZM254.98,218.75l-1.2,0.2l-0.3,-0.56l2.01,-0.49l-0.51,0.86ZM191.92,233.63l-2.42,0.92l-1.11,1.34l0.4,0.67l1.73,0.09l1.09,0.46l2.48,1.97l-0.04,0.55l-2.48,4.18l-1.19,6.9l0.84,1.33l1.79,-0.53l1.11,0.28l-2.21,4.32l-0.92,0.7l-1.46,0.39l-3.72,0.06l-3.78,-1.56l-2.33,0.41l-2.51,1.15l-1.52,0.19l-3.56,-1.13l-2.19,-0.35l-2.45,-1.04l0.96,-1.39l0.1,-0.94l-0.75,-0.8l-1.06,0.06l-0.73,-0.3l-2.13,-1.88l-0.66,-1.69l-0.95,-6.29l21.31,-15.24l8.36,7.17ZM185.23,266.66l-1.43,2.4l-1.39,1.16l-1.29,0.54l-5.87,-2.24l-1.63,0.49l-2.22,1.8l-2.55,0.19l-0.26,-0.55l1.52,-1.19l3.58,-1.43l1.02,-1.81l5.72,-5.95l1.74,2.17l2.8,1.16l0.85,1.6l-0.59,1.67ZM164.23,271.92l-1.13,0.89l-0.6,-0.25l-0.44,-1.48l-1.75,-2.01l0.32,-0.8l1.34,-0.13l2.82,-2.78l1.01,0.0l0.92,0.83l0.15,1.66l-0.3,1.7l-2.35,2.36Z\",\n            name: \"Fribourg\"\n          },\n          \"CH-ZH\": {\n            path: \"M527.06,36.11l2.39,-2.72l3.39,-2.74l1.44,-2.32l1.51,-1.31l7.99,0.18l-0.57,3.52l0.38,4.21l2.22,3.21l3.23,1.3l8.38,0.27l1.29,-0.44l2.3,-1.63l2.29,-0.34l2.16,-1.8l2.79,-1.04l0.67,2.92l2.29,2.38l0.25,0.84l-0.29,1.07l-2.3,3.54l-1.69,1.63l-1.18,1.87l-1.11,-0.11l-1.97,-1.56l-2.89,-1.26l-1.53,-0.22l-1.59,0.45l-1.32,0.91l-0.52,0.63l-0.02,0.84l2.76,3.14l2.39,0.67l12.61,5.33l1.9,2.04l-1.16,2.27l0.87,2.44l1.28,1.25l2.01,0.99l5.9,2.07l1.29,0.89l0.41,0.65l-1.31,6.55l0.21,1.56l-2.0,1.89l-0.22,1.52l0.93,2.28l1.94,1.13l1.06,5.22l1.98,1.67l1.42,0.7l-1.02,1.03l-0.73,3.03l-1.88,2.49l0.03,0.56l8.76,8.27l4.69,7.28l1.67,7.17l-1.68,2.0l-2.54,1.9l-1.55,1.77l-1.15,1.6l0.07,2.19l-0.8,1.03l-1.77,1.38l-11.65,4.66l-2.5,0.19l-8.44,-0.91l-3.82,2.65l-2.66,5.66l-8.56,1.53l-7.82,4.32l-3.2,2.78l-0.41,0.98l-0.1,1.58l1.36,1.92l0.19,0.84l-3.91,0.44l-5.75,-2.17l-1.39,-0.92l-1.29,-1.97l-2.29,-2.41l-3.41,-2.55l-3.88,-3.57l-7.96,-1.12l-5.66,0.96l-3.71,1.12l-1.98,0.01l-2.29,-0.33l-7.86,-2.23l-1.18,-0.66l-0.45,-0.87l-1.2,-3.8l-4.46,-8.16l-0.38,-1.58l2.68,-0.58l3.6,-1.94l3.72,-4.14l1.86,-2.8l0.64,-2.56l-0.49,-0.48l-5.7,1.55l-2.13,-1.99l-0.38,-0.86l0.21,-6.12l-1.02,-0.99l-3.86,-1.7l-1.49,-1.14l0.3,-1.03l5.21,-4.59l0.92,-2.58l-0.55,-1.02l-2.67,-3.04l-1.48,-3.89l-4.38,-8.04l-1.02,-3.41l0.09,-2.49l0.97,-4.68l3.26,-4.5l4.34,-3.79l4.58,-6.37l0.35,-1.42l5.27,-0.76l2.82,-5.64l5.93,-3.37l5.73,-0.5l2.9,2.34l2.5,3.56l-3.94,3.27l-0.33,2.15l2.32,1.92l1.69,1.95l1.04,0.35l0.96,-0.21l1.6,-2.06l2.57,-5.83l-0.01,-0.94l0.86,-1.37l0.37,-5.51l-0.87,-2.97l0.38,-1.16l0.57,-0.42l1.48,-0.32l0.4,1.92l1.3,0.56l0.55,-0.29l1.13,-6.01l-0.36,-0.47l-2.08,-0.26Z\",\n            name: \"Z\\xfcrich\"\n          },\n          \"CH-VS\": {\n            path: \"M179.05,431.43l3.47,-4.26l0.14,-2.45l-3.23,-2.65l-15.66,-3.0l-1.6,-3.88l1.8,-8.4l3.44,-8.88l7.05,-11.91l-0.01,-0.43l-4.54,-6.78l-7.1,-6.56l-3.67,-5.5l0.97,-2.62l5.29,-5.44l1.42,-4.19l-0.16,-2.16l3.29,0.17l9.47,1.62l2.34,-1.12l4.1,4.58l1.19,2.0l-0.74,4.66l0.77,2.06l2.64,1.67l2.73,0.53l1.93,1.33l0.85,4.25l0.99,2.41l12.68,19.17l4.47,5.23l1.5,2.48l2.28,2.57l0.48,0.09l7.64,-3.74l6.59,-3.75l4.73,-5.08l2.33,-0.91l3.8,-3.36l2.83,-3.45l2.41,-3.67l0.78,-2.08l-0.28,-3.86l5.71,-5.51l7.03,-3.66l1.55,-2.27l0.21,-1.67l0.72,-0.49l6.37,-1.87l0.96,0.0l0.33,0.33l-0.1,3.59l0.24,0.74l2.87,1.08l7.61,-2.21l4.56,-2.74l2.74,-2.56l2.79,-0.53l8.61,-0.08l6.43,1.75l3.14,-0.42l7.18,-2.65l3.01,-2.31l-0.07,-0.68l-2.53,-1.23l-0.79,-0.91l4.09,-2.21l6.88,-1.86l2.78,-2.1l1.01,-2.2l1.31,-0.76l3.98,0.47l13.14,5.47l2.72,-0.21l24.15,-15.21l2.25,0.58l3.09,-0.01l1.87,-0.29l4.21,-1.41l12.88,-7.57l1.57,-2.35l-0.33,-1.75l-1.23,-2.14l7.28,-4.17l5.0,-0.23l16.89,2.79l1.72,1.27l4.79,1.83l5.35,0.51l0.43,2.01l1.9,0.76l11.63,-1.9l4.82,-1.49l9.24,-4.49l5.26,-3.33l2.14,-1.86l1.94,-2.78l1.06,-5.6l1.19,-3.89l1.94,-3.99l3.67,-3.98l1.91,-0.25l1.43,0.6l0.36,0.51l0.3,0.97l-0.52,5.11l-2.29,8.01l0.82,3.2l2.16,4.66l3.04,4.1l7.56,3.6l-5.46,6.38l-3.19,1.83l-4.55,0.48l-1.76,0.47l-0.81,0.66l-0.22,0.83l0.21,1.44l-1.84,3.45l-0.51,1.67l0.21,2.76l-8.22,1.55l-5.42,2.56l-4.35,3.97l-1.75,3.28l0.79,1.48l1.25,0.86l0.07,2.22l-1.12,2.14l-1.91,1.99l-2.22,1.47l-5.76,2.57l-9.77,11.19l-4.01,2.42l-8.59,1.67l-4.38,1.75l-4.06,3.55l-2.06,2.54l-0.8,2.49l0.78,1.05l4.6,3.48l5.81,9.73l0.54,8.95l-4.23,7.91l-8.59,6.48l-2.06,0.6l-4.09,0.38l-2.31,1.54l-1.47,2.7l-0.43,2.86l-0.02,2.82l-1.03,6.97l-2.43,4.71l-2.4,2.72l-1.33,0.96l-1.83,0.49l-14.28,2.84l-2.99,2.13l-2.17,3.61l-0.56,4.55l-4.09,0.34l-0.91,3.08l0.14,1.31l-0.35,0.61l-2.29,1.09l-4.65,-1.0l-5.42,0.09l-9.52,-3.03l-2.12,0.18l-3.12,0.95l-2.18,-0.65l-4.08,-5.37l-2.99,-2.42l-3.21,-1.62l-20.42,-4.46l-3.76,1.67l-3.99,5.16l-4.13,0.47l-5.94,2.24l-11.82,7.52l-6.26,1.92l-15.06,-1.37l-2.69,0.82l-5.58,3.01l-12.25,4.38l-5.96,0.97l-6.45,0.1l-6.02,-1.08l-4.53,-2.36l-8.88,-8.65l-1.34,-1.94l-1.05,-2.45l-1.41,-4.58l-2.28,-5.15l-0.71,-2.62l-1.11,-0.78l-13.47,-13.23l-4.67,-1.83l-1.95,0.59l-2.91,2.24l-1.66,-0.2l-1.53,-1.01l0.32,-1.6l-0.07,-1.74l0.28,-0.43l-0.07,-2.65l-0.53,-2.57Z\",\n            name: \"Valais\"\n          },\n          \"CH-VD\": {\n            path: \"M166.03,252.52l1.46,0.04l0.28,0.34l-1.13,2.03l0.51,0.76l2.56,1.06l2.22,0.36l3.09,1.12l2.36,-0.17l2.53,-1.16l2.19,-0.38l2.76,1.42l3.79,0.2l2.62,-0.56l1.34,-1.03l2.24,-4.13l0.1,-0.74l-0.69,-0.8l-1.45,-0.14l-1.28,0.54l-0.33,-0.56l1.14,-6.64l2.43,-4.06l0.14,-1.02l-0.79,-1.12l-2.08,-1.44l-1.34,-0.57l-1.35,-0.11l2.39,-1.35l1.48,0.82l0.44,-0.15l0.01,-0.46l-1.38,-1.79l-8.05,-6.85l5.71,-4.09l5.93,7.21l1.85,1.53l3.86,4.31l0.63,0.12l0.54,-0.28l0.45,-1.55l0.66,-0.39l1.08,-0.18l0.6,0.51l0.53,1.59l-0.91,2.22l0.5,3.53l1.46,1.56l1.22,-0.21l-0.1,0.54l-2.5,3.0l-2.09,1.38l-0.84,1.13l-1.18,2.75l0.32,3.33l-5.99,7.31l-3.25,1.09l-0.5,0.65l0.67,1.46l1.48,0.75l2.42,0.54l-0.61,1.71l-12.68,15.62l-1.19,2.7l0.21,1.01l-6.55,0.83l-3.27,1.95l-2.29,0.2l-0.36,0.33l-0.6,3.83l-0.03,3.0l0.8,5.43l-0.78,1.07l-0.06,4.14l0.29,0.56l0.47,0.15l2.53,-0.83l1.02,0.01l1.73,0.98l5.13,-0.73l1.62,0.63l3.74,2.86l1.07,0.23l1.94,-0.42l-7.03,7.36l-2.87,-1.45l-4.32,-0.05l-0.83,0.31l-1.72,3.34l1.45,3.53l2.4,2.85l2.47,0.7l3.15,-0.4l3.21,-1.69l2.85,-2.69l1.91,0.06l2.63,0.87l10.93,7.04l1.28,2.8l1.23,4.93l1.72,2.97l1.35,0.9l4.64,-1.95l1.01,-2.41l0.93,-1.37l1.91,-1.89l3.42,-2.53l2.63,-1.14l5.99,-0.65l3.84,-2.5l4.63,-4.99l1.91,-1.39l11.38,-3.0l5.68,-3.89l2.05,3.86l-0.25,6.31l-0.59,1.93l-3.12,4.78l-0.12,1.03l0.46,3.35l-0.12,1.43l-0.66,1.59l-1.73,2.0l-3.18,1.66l-0.79,1.32l1.27,3.69l0.42,3.14l-2.23,6.07l0.15,0.47l6.39,4.95l0.04,0.6l-1.35,2.4l0.21,4.87l-5.72,5.51l-0.22,1.12l0.34,3.21l-0.7,1.76l-2.32,3.52l-2.75,3.36l-3.72,3.29l-2.38,0.94l-4.66,5.03l-6.5,3.7l-7.35,3.6l-2.05,-2.31l-1.49,-2.47l-4.45,-5.2l-12.64,-19.12l-0.9,-2.2l-1.04,-4.62l-2.13,-1.47l-2.76,-0.54l-2.3,-1.37l-0.65,-1.64l0.7,-3.46l-0.02,-1.5l-1.33,-2.21l-3.77,-4.15l8.64,-0.41l4.56,-4.84l0.02,-0.52l-3.76,-4.71l-9.25,-4.34l-17.32,-4.94l-32.76,-10.25l-4.52,-0.75l-17.52,1.2l-3.27,1.16l-11.78,8.38l-3.25,1.58l-13.14,1.47l-3.85,1.56l-3.3,2.65l-28.11,37.51l-0.26,0.07l-10.65,-7.62l3.39,-6.59l-0.29,-3.16l-2.43,-3.79l-2.99,-2.82l-10.32,-5.51l1.83,-1.52l0.51,-1.87l-0.55,-4.53l-0.9,-2.21l0.0,-1.11l0.71,-1.38l2.28,-2.14l6.93,-10.3l7.03,-7.69l-0.02,-0.56l-4.73,-4.59l-0.56,-2.99l2.53,-2.87l26.76,-21.2l14.25,-6.77l2.09,-1.52l5.21,-5.08l6.55,-3.01l2.23,-1.45l2.25,-2.44l0.87,-2.36l-0.08,-4.24l-2.59,-2.85l-0.49,-1.24l3.36,-9.18l1.68,-2.81l3.44,-0.52l12.13,-0.75l2.08,-0.93l2.72,-1.86l9.66,-4.44l6.09,-1.8l3.11,-1.77l5.26,-3.83l11.27,-5.88l0.53,2.52l-0.43,2.54l0.6,1.65l1.16,1.36l1.55,1.08l0.52,1.13l0.02,3.68l0.38,1.73l3.66,7.4l1.0,6.6l0.82,1.97l2.78,2.31ZM175.95,263.39l-1.88,2.14l-0.81,1.61l-3.49,1.4l-1.93,1.53l-0.09,0.46l0.49,1.04l0.36,0.23l3.02,-0.21l2.45,-1.9l1.27,-0.35l5.96,2.23l1.59,-0.69l1.57,-1.35l1.48,-2.49l0.69,-1.94l-1.01,-2.19l-3.05,-1.39l-0.67,-1.21l-1.15,-1.04l-0.48,-0.04l-0.99,0.62l-2.21,2.75l-1.11,0.8ZM167.52,265.97l-1.29,-1.3l-1.59,-0.1l-3.15,2.91l-1.51,0.25l-0.46,1.61l1.8,2.08l0.69,1.8l1.39,0.36l2.32,-1.88l1.53,-1.7l0.43,-2.07l-0.16,-1.97ZM229.1,227.98l-1.61,1.45l-1.38,-0.9l-1.08,0.23l-1.44,2.03l-0.92,3.62l-1.02,1.7l-1.63,1.71l-3.03,1.37l-0.38,-2.14l-2.86,-3.58l-2.29,-1.11l-0.96,-1.65l-12.23,-14.74l14.49,-10.32l7.82,2.73l1.35,8.23l0.8,1.92l4.17,7.49l2.45,1.31l-0.26,0.65ZM180.58,352.72l-1.15,0.6l-9.36,-1.61l-3.47,-0.18l-0.09,-0.95l14.07,2.13Z\",\n            name: \"Vaud\"\n          },\n          \"CH-TI\": {\n            path: \"M485.32,340.13l-0.22,-2.45l0.46,-1.51l1.87,-3.52l-0.11,-2.01l0.47,-0.42l1.64,-0.44l4.7,-0.53l3.42,-1.99l5.81,-6.8l6.53,-4.74l2.9,-7.05l1.01,-0.98l3.57,-0.44l17.43,3.46l8.37,-3.08l6.62,2.62l15.48,1.22l11.76,-1.78l10.28,-3.57l1.92,-1.23l0.57,-0.98l-0.72,-2.9l0.27,-1.08l1.34,-1.62l2.79,-1.13l1.9,-0.37l1.72,-1.37l0.84,-0.05l0.34,0.25l0.78,2.5l1.32,1.63l6.73,0.58l4.52,1.87l2.95,2.59l0.11,0.56l-1.83,3.27l-1.26,3.35l-1.53,7.7l1.24,5.0l1.17,2.61l4.48,6.01l1.73,0.53l1.24,-0.5l2.7,-0.34l2.1,3.43l-0.43,6.2l0.37,2.19l1.72,3.43l0.13,0.83l-1.94,5.62l0.21,7.48l-0.67,1.62l-3.1,5.09l-0.35,1.8l0.48,3.17l-1.06,2.62l-1.6,1.66l-0.19,1.39l1.94,4.81l2.05,3.55l0.17,2.02l-0.57,3.34l1.08,2.75l1.66,2.32l4.61,3.02l5.9,5.89l4.24,2.73l-14.21,8.38l-3.76,4.96l-0.79,3.35l0.43,5.56l-0.61,2.93l-1.49,2.18l-1.77,0.9l-4.45,1.24l-5.27,3.65l-0.85,3.1l3.43,8.4l-6.4,5.16l-0.64,1.4l0.14,0.81l2.63,2.67l1.61,4.43l1.87,2.45l2.08,1.08l4.39,0.78l1.72,0.95l2.14,3.9l-0.72,4.02l-4.91,8.32l-6.19,6.62l-5.75,-0.94l-6.5,-2.52l-7.53,1.92l0.61,-3.17l1.2,-2.97l0.8,-3.09l-0.32,-4.44l-1.13,-3.35l-1.69,-3.31l-3.47,-5.38l-2.0,-4.03l-1.3,-1.58l-1.48,-1.02l-11.44,-5.34l-3.1,-0.96l-2.91,-0.18l4.3,-8.27l5.67,-6.0l3.01,-5.94l-0.06,-0.44l-5.07,-5.82l-3.32,-1.05l-6.09,0.13l-3.08,-0.37l-1.37,-0.81l-1.41,-2.25l-1.87,-0.7l-1.6,0.57l-3.06,2.36l-1.29,0.63l-3.32,-0.15l-9.22,-4.68l-5.72,-1.99l-12.54,-16.09l-5.72,-5.11l-5.61,-2.48l-5.19,-1.81l-3.55,-2.55l-2.11,-3.87l-0.77,-5.97l0.67,-6.36l3.23,-12.92l0.69,-7.26l-0.1,-7.59l-0.83,-5.7l-3.08,-3.78l-5.73,-0.87l-2.33,0.41Z\",\n            name: \"Ticino\"\n          },\n          \"CH-TG\": {\n            path: \"M567.83,30.76l1.84,0.66l2.15,-0.81l5.87,2.69l5.94,3.84l5.13,1.16l7.81,-0.64l7.33,-2.0l3.28,-3.0l3.61,-1.23l22.16,2.14l10.81,0.0l4.73,5.8l32.78,16.76l1.76,1.6l3.46,7.63l1.02,0.35l9.02,6.86l-1.85,-0.8l-10.17,6.59l-1.34,2.2l-2.58,-1.47l-4.37,-4.86l-0.38,-0.97l0.61,-1.34l0.09,-2.01l-2.27,-2.94l-3.91,0.35l-2.01,1.2l-3.3,0.47l-1.33,0.44l-1.77,1.36l-0.8,-0.19l-0.53,0.21l-0.46,0.63l0.03,0.65l1.09,0.8l2.23,0.26l2.32,-0.58l1.09,0.11l0.93,3.45l-1.12,2.53l-0.68,0.9l-0.97,0.61l-1.21,0.34l-2.84,-0.25l-2.67,1.38l-11.08,-1.88l-6.41,-2.65l-2.92,-2.98l-0.62,0.06l-2.63,3.66l-1.46,0.72l-3.22,0.43l-2.41,0.02l-2.55,-0.58l-2.52,0.24l-0.41,-0.09l-1.32,-1.47l-0.85,-0.2l-3.53,0.46l-2.64,-0.52l-0.92,0.16l-1.78,1.56l-3.05,0.84l-0.92,1.55l0.23,1.41l0.58,0.98l5.34,3.28l0.28,3.25l-0.35,1.19l-3.03,0.68l-1.92,0.83l-2.19,-0.09l-1.09,0.41l-0.79,0.98l-2.2,4.3l-1.96,1.99l-2.74,4.27l-1.51,1.74l-1.68,0.1l-7.54,-6.86l1.75,-2.38l0.67,-2.9l1.08,-1.1l0.12,-0.63l-3.62,-2.66l-0.93,-5.04l-2.06,-1.3l-0.78,-1.95l0.16,-1.0l1.59,-1.2l0.49,-0.93l-0.21,-1.62l1.32,-6.64l-0.58,-1.1l-1.61,-1.13l-7.81,-3.01l-1.06,-1.07l-0.69,-2.03l1.17,-1.92l0.0,-0.51l-2.23,-2.42l-12.82,-5.45l-2.35,-0.67l-2.3,-2.6l0.26,-0.66l1.11,-0.79l1.28,-0.39l1.28,0.17l2.77,1.22l1.98,1.57l1.71,0.2l1.55,-2.12l1.76,-1.71l2.32,-3.58l0.41,-1.61l-0.41,-1.22l-2.18,-2.17l-0.75,-3.26l-0.53,-0.29l-2.35,0.87l1.78,-3.68ZM697.16,73.08l4.21,3.2l-2.26,0.59l-2.41,-0.86l-0.25,-0.45l0.82,-2.15l-0.12,-0.34Z\",\n            name: \"Thurgau\"\n          },\n          \"CH-OW\": {\n            path: \"M482.58,238.26l0.71,0.46l0.91,-0.2l3.82,-2.16l0.72,-0.03l0.7,0.27l0.81,1.54l2.31,1.47l11.68,-0.47l2.71,1.07l0.35,0.69l-0.18,0.42l-2.07,2.17l-1.08,1.77l-1.64,5.09l-0.84,1.44l0.45,1.39l1.24,1.25l0.47,2.03l-0.52,2.12l-6.14,1.63l-3.98,-1.21l-3.75,0.47l-1.25,0.57l-1.02,-0.74l4.89,-1.34l0.73,-1.01l-1.07,-1.52l-3.89,-1.69l-2.4,-2.98l-0.58,-2.01l-1.94,-1.22l0.04,-2.31l-1.14,-3.15l-0.64,-4.08l-0.76,-1.89l0.62,-1.04l0.6,-0.36l0.42,0.12l0.88,1.1l-0.19,2.36ZM474.08,224.43l-0.03,6.6l-1.24,4.04l-0.55,7.44l0.49,6.01l4.21,5.13l3.43,1.8l-7.83,2.66l-6.73,4.04l-2.06,0.7l-1.83,-0.05l-3.86,-1.05l-10.43,-1.12l-2.52,0.43l-5.61,1.72l-3.71,-1.25l-8.9,-5.08l-3.89,-0.73l-5.57,-0.26l2.87,-4.21l-1.05,-3.91l-1.0,-1.85l-0.61,-2.44l3.87,-8.01l0.74,-3.66l1.34,-2.95l1.4,-1.75l1.59,-0.83l1.54,0.02l1.08,1.11l1.35,-0.3l4.74,-5.2l4.01,-3.21l0.45,-1.63l-0.92,-3.36l0.28,-0.42l3.18,-1.81l11.04,-0.92l3.43,-0.72l3.01,-1.23l8.21,1.98l0.9,0.77l-0.26,1.07l-0.86,2.12l-1.7,2.52l-0.23,2.14l2.37,2.21l4.66,1.88l0.86,0.69l0.34,0.87Z\",\n            name: \"Obwalden\"\n          },\n          \"CH-AG\": {\n            path: \"M354.73,63.79l6.77,-1.21l3.86,-1.87l3.32,-3.39l3.44,-4.62l2.65,1.14l12.72,0.66l1.02,0.91l0.99,4.6l0.93,1.41l26.03,-0.01l9.09,-1.78l2.05,-1.23l1.69,-2.38l1.63,-1.61l1.57,-1.05l4.27,-1.98l3.78,-1.02l2.34,-2.46l0.9,-0.5l10.66,-1.54l3.53,-0.01l5.12,1.35l2.23,0.21l0.92,0.94l2.46,4.86l2.22,1.29l7.65,1.74l12.85,0.06l-0.2,0.89l-4.5,6.27l-4.33,3.79l-3.34,4.61l-1.06,4.96l-0.1,2.66l1.1,3.72l4.39,8.05l1.47,3.88l3.15,3.92l-0.73,1.83l-5.23,4.6l-0.41,1.96l1.79,1.41l3.9,1.72l0.72,0.73l-0.49,4.95l0.19,0.94l0.55,1.17l2.35,2.19l5.64,-1.34l-0.41,1.7l-1.77,2.67l-3.65,4.06l-3.34,1.78l-2.94,0.61l-0.32,0.49l0.53,2.14l4.37,8.01l-2.48,4.11l-0.33,2.42l1.02,10.71l1.41,8.39l-5.23,-0.19l-2.36,-0.98l-2.43,-2.32l-2.85,-4.1l-6.65,-16.39l-1.52,-2.9l-1.5,-4.68l-2.35,-2.48l-3.41,-1.24l-3.79,0.4l-3.34,3.37l-0.97,2.14l-4.46,6.85l-3.09,1.99l-1.6,0.15l-2.81,-1.58l-0.84,-1.65l1.46,-0.56l0.1,-0.7l-0.66,-0.45l-1.92,-0.65l-5.36,-0.17l-3.85,-1.1l-3.31,-2.72l-13.43,4.5l-4.29,-7.3l-3.42,-1.3l-4.31,0.08l-0.83,0.11l-0.55,0.45l-0.26,0.96l0.16,4.94l-0.21,0.59l-0.93,0.7l-4.97,1.54l-4.55,0.01l-11.94,2.09l-2.42,-3.57l-0.63,-5.23l1.41,-1.55l5.34,-8.82l8.68,-6.85l3.03,0.84l12.72,1.66l3.29,-1.62l2.86,-5.61l2.23,-2.91l1.49,-2.94l-0.17,-5.0l-0.3,-0.37l-2.46,-0.6l-1.87,-0.9l-1.66,-1.37l-0.85,-1.06l-0.84,-3.41l-1.35,-0.87l-0.07,-3.4l-0.45,-1.06l-1.96,-1.92l-3.02,-0.47l-2.31,-1.32l-0.33,-1.3l-0.03,-3.55l-0.36,-0.39l-6.01,-0.55l-1.63,-1.04l-0.72,-1.89l-5.8,-7.59l-0.91,-1.72l-1.23,-0.87l-1.54,-1.82l-3.05,-0.84l-1.53,0.23l-0.72,0.62l-0.48,3.36l-0.41,0.58l-4.89,3.82l-2.33,0.29l-0.8,-1.97l-0.14,-2.92l-1.26,-0.92l-1.02,-0.18l-6.87,-2.91Z\",\n            name: \"Aargau\"\n          },\n          \"CH-GE\": {\n            path: \"M43.64,378.51l-3.1,7.38l-1.33,9.25l-1.42,1.16l-1.15,1.61l-0.85,1.83l-0.59,2.13l0.17,0.44l0.47,-0.03l10.01,-8.63l7.8,-13.28l0.46,1.84l1.92,4.13l1.04,1.25l2.4,0.95l3.2,-1.27l1.04,0.39l0.95,5.32l-4.96,4.56l-12.81,7.38l-10.13,10.3l-6.25,2.79l-6.79,-2.6l-9.09,0.31l-9.12,1.88l-3.83,1.97l3.63,-6.81l0.66,-2.24l-3.59,-4.2l-1.98,-3.24l0.66,-2.67l4.69,-2.59l11.91,-5.07l3.62,0.5l1.24,-0.12l4.71,-1.4l0.91,-1.88l-0.08,-4.93l1.41,-7.02l0.64,-1.9l2.68,-5.2l10.82,7.69Z\",\n            name: \"Gen\\xe8ve\"\n          },\n          \"CH-AI\": {\n            path: \"M726.92,90.17l-3.04,2.62l-0.5,0.77l-0.25,1.37l-5.71,-2.46l-0.19,-0.32l0.0,-0.5l3.42,0.17l3.1,-0.53l3.17,-1.12ZM709.29,96.6l0.45,-1.26l2.37,-1.68l0.52,-0.11l2.0,1.58l0.72,0.89l0.16,0.75l-0.02,0.91l-1.05,1.17l0.35,2.85l-2.39,-0.98l-2.61,0.36l-4.73,1.59l0.41,-1.96l4.24,-1.87l0.59,-0.64l-0.19,-0.96l-0.79,-0.65ZM687.85,139.94l-5.55,1.82l-2.84,-0.34l-3.08,-1.35l-2.48,-1.56l-2.09,-5.62l-2.55,-3.36l-0.66,-1.44l-0.35,-2.07l0.55,-5.8l0.61,-1.33l2.87,-2.03l1.65,-1.66l1.17,-1.83l1.11,-2.59l0.16,-4.84l0.94,-0.78l20.98,8.49l6.05,0.19l-3.27,13.85l-3.84,6.19l-2.7,2.6l-2.82,1.76l-3.85,1.71Z\",\n            name: \"Appenzell Innerrhoden\"\n          },\n          \"CH-GL\": {\n            path: \"M655.12,222.42l-5.42,4.19l-3.42,4.06l-2.51,1.12l-3.7,0.04l-2.95,0.55l-6.88,4.05l-1.82,0.44l-1.42,-0.45l-0.92,-1.08l-1.45,-0.91l-2.1,-0.64l-3.41,-0.25l-3.37,0.95l-0.7,0.9l-0.34,3.6l-2.65,4.78l-1.4,1.6l-2.77,2.25l-4.45,1.81l-10.95,2.93l-1.72,0.04l-0.54,-0.33l-0.46,-1.6l-0.66,-0.87l-3.08,-0.81l-3.78,-0.15l-0.29,-5.66l0.29,-1.37l6.49,-4.45l2.08,-0.24l4.37,-1.58l1.44,-1.11l0.89,-1.54l-0.03,-4.04l-0.51,-1.67l-2.83,-4.62l4.04,-1.92l1.74,-6.42l-0.34,-1.76l-0.96,-1.41l-4.05,-2.66l-0.78,-1.24l0.5,-1.49l-0.12,-0.62l-5.6,-6.97l-2.63,-2.1l0.82,-2.4l2.11,-1.35l4.91,-2.02l1.87,-1.78l1.65,-2.15l1.98,-3.51l0.23,-2.07l-0.44,-3.14l1.34,-2.31l0.62,-4.33l3.75,-10.41l2.96,-1.38l0.95,0.03l10.36,8.12l3.21,1.57l20.63,3.48l-0.96,11.58l-1.05,3.35l-6.78,4.09l-0.68,1.06l0.33,0.73l3.68,1.84l1.38,0.35l3.85,-0.34l2.32,-0.98l2.7,-0.49l1.45,0.94l1.59,1.85l2.6,4.6l1.13,3.84l-0.92,7.15l-0.59,1.55l0.79,3.21l1.55,3.03l0.19,0.83l-0.36,2.12Z\",\n            name: \"Glarus\"\n          },\n          \"CH-GR\": {\n            path: \"M639.97,409.36l-4.3,-2.76l-5.85,-5.85l-4.62,-3.02l-1.52,-2.16l-0.96,-2.44l0.57,-3.12l-0.18,-2.3l-2.11,-3.71l-1.87,-4.59l0.07,-0.81l1.61,-1.7l1.17,-2.91l-0.48,-3.31l0.31,-1.56l3.02,-4.93l0.74,-1.79l-0.18,-7.64l1.94,-5.69l-0.2,-1.16l-1.69,-3.36l-0.32,-1.99l0.4,-2.72l0.03,-3.55l-2.35,-3.93l-0.39,-0.19l-3.0,0.38l-1.3,0.49l-1.13,-0.44l-4.2,-5.73l-1.08,-2.4l-1.21,-4.71l2.04,-9.32l2.56,-4.87l-0.13,-1.01l-0.58,-0.76l-2.8,-2.3l-4.64,-1.91l-6.7,-0.59l-1.38,-2.38l-0.21,-1.27l-1.01,-0.76l-1.35,0.16l-1.56,1.31l-3.42,0.89l-1.57,0.8l-1.45,1.76l-0.39,1.42l0.75,2.75l-0.32,0.62l-1.79,1.15l-10.04,3.48l-11.68,1.77l-15.28,-1.22l-6.29,-2.51l0.53,-3.23l-1.5,-5.15l-0.66,-1.01l-2.32,-1.27l-0.89,-1.61l-0.23,-1.33l0.14,-1.28l1.38,-3.87l1.47,-2.92l0.44,-2.35l-0.18,-1.39l0.6,-0.89l1.26,-0.96l3.16,-1.22l2.08,-0.4l1.96,-0.96l6.65,-7.05l3.29,-1.0l3.75,0.98l3.11,-0.59l0.81,-0.45l0.88,-1.22l-0.18,-2.23l0.23,-0.71l3.47,-4.51l0.29,-2.18l-0.13,-2.81l0.37,-0.4l2.94,-0.85l1.28,-1.2l2.33,-1.15l2.04,-2.32l3.91,0.16l2.85,0.77l0.7,2.08l1.17,0.76l1.98,-0.05l11.07,-2.96l4.63,-1.9l2.85,-2.31l1.5,-1.7l2.77,-4.99l0.36,-3.66l0.34,-0.44l3.06,-0.85l3.21,0.25l1.82,0.56l1.35,0.85l1.04,1.17l1.85,0.53l1.99,-0.48l6.85,-4.04l2.78,-0.52l3.88,-0.07l2.74,-1.23l3.49,-4.12l5.23,-4.05l2.91,2.96l0.9,0.28l1.15,0.0l0.93,-0.41l26.54,3.34l4.0,1.74l2.2,1.44l1.6,0.2l0.81,-0.26l0.77,-2.12l2.52,-0.82l2.63,-4.01l0.62,-1.51l0.13,-2.54l0.6,-2.88l2.32,-3.98l2.92,-2.39l1.3,-3.36l1.89,-1.34l1.47,-0.34l0.26,-0.59l-7.2,-10.89l-2.19,-4.15l-1.5,-4.53l4.02,1.02l12.18,1.75l4.17,-1.11l3.77,0.84l10.41,-1.11l3.27,0.43l37.33,10.16l-0.13,2.9l1.11,0.7l1.05,-0.07l0.52,0.53l0.0,1.25l-0.82,2.44l-0.49,5.88l-0.63,2.68l0.32,2.51l2.71,3.39l5.06,3.33l21.26,5.92l7.72,6.33l4.57,2.28l8.62,2.39l4.33,0.14l5.15,-1.27l8.77,-3.85l2.27,-2.82l0.71,-4.08l0.92,-3.08l2.9,-4.22l2.99,-0.48l3.91,0.87l4.97,-0.2l0.38,-0.39l0.1,-4.59l3.4,-5.64l4.95,-4.9l5.68,-2.81l1.95,-0.0l0.93,0.52l2.04,1.9l4.24,5.85l6.75,4.63l1.67,1.73l1.02,4.04l-2.44,8.44l0.46,5.47l-1.04,8.01l-0.69,2.16l-5.56,6.35l0.37,3.74l1.43,3.72l0.46,3.25l-2.26,2.97l-3.49,2.05l-0.83,2.45l0.18,2.82l-0.42,3.43l-1.83,2.83l-2.23,1.9l-0.95,2.39l1.66,5.08l3.7,3.78l8.63,0.9l3.97,2.89l1.45,4.64l-0.14,6.36l-1.56,6.1l-2.65,3.8l-3.36,0.56l-14.21,-3.24l-7.02,0.56l-2.46,-0.35l-2.13,-0.85l-2.28,-2.39l-1.7,-1.27l-8.02,-2.39l-0.79,-2.42l1.07,-5.04l-0.55,-3.24l-3.41,-2.33l-5.13,0.04l-18.98,4.72l-1.99,0.94l-1.08,2.1l-2.43,8.09l-1.57,1.83l-4.29,3.71l-1.85,2.47l-0.31,7.29l-0.86,2.77l0.25,2.32l0.48,1.88l1.03,1.53l1.49,0.92l-3.29,4.83l0.04,0.5l3.3,3.5l5.86,1.98l8.96,1.51l3.26,1.14l1.32,2.5l-1.44,5.22l-1.36,1.58l-4.15,3.23l-1.6,2.53l-1.05,3.48l-0.14,2.38l0.87,2.35l1.81,2.79l8.25,7.31l2.41,4.2l-2.45,4.48l-5.43,2.97l-8.31,2.74l-6.15,-0.11l-0.15,-5.26l-2.06,-4.41l-7.96,-6.19l-2.84,-3.33l-1.27,-5.34l-0.1,-5.02l-1.32,-4.07l-5.17,-3.07l-4.27,-0.98l-3.96,-0.25l-8.7,1.3l-13.35,5.94l-4.03,1.14l-2.41,-0.45l-4.81,-2.52l-2.61,0.02l-2.28,2.36l-0.39,2.86l0.23,4.71l-2.89,3.48l-3.58,1.26l-22.73,-0.23l-4.54,-1.44l-4.13,-2.43l-2.46,-2.94l-4.09,-9.13l-1.83,-1.3l-4.37,-2.1l-1.31,-1.12l-0.34,-1.22l0.28,-3.79l-1.2,-24.01l-0.67,-1.7l-0.45,-0.24l-1.71,0.36l-3.22,2.06l-1.45,1.68l-1.63,3.21l-1.9,0.66l-1.31,-0.49l-4.9,-4.05l-0.14,-2.92l-0.31,-0.37l-4.09,-0.92l-9.92,1.12l-3.91,3.18l-3.46,6.03l-1.61,6.23l1.96,3.68l2.64,1.65l0.35,2.26l-0.51,3.16l0.02,3.57l2.69,8.94l0.26,3.11l-1.21,5.39l-5.81,10.54l-2.98,8.95l-1.75,2.44l-2.22,1.8l-2.4,0.99l-2.31,1.57l-2.04,5.35l-1.24,2.04Z\",\n            name: \"Graub\\xfcnden\"\n          },\n          \"CH-AR\": {\n            path: \"M727.16,89.24l-3.64,1.29l-2.95,0.5l-3.71,-0.19l-0.42,0.4l0.06,1.24l0.5,0.69l6.08,2.62l0.27,1.81l-7.75,4.15l-0.34,-2.76l0.9,-0.8l0.16,-1.42l-0.27,-1.16l-0.8,-0.99l-2.59,-1.87l-0.92,0.22l-2.53,1.79l-0.73,1.94l1.04,1.2l-4.79,2.46l-1.64,9.21l1.18,3.46l-5.75,-0.15l-21.14,-8.56l-1.67,1.12l-0.29,5.22l-1.01,2.31l-1.07,1.7l-1.59,1.6l-2.88,2.03l-0.81,1.65l-0.59,6.05l0.41,2.38l0.77,1.64l2.47,3.23l1.93,5.24l-3.97,0.63l-2.01,-1.31l-6.13,-2.92l-10.04,-1.16l-2.49,-0.83l-1.17,-1.19l2.15,-2.47l-1.38,-5.6l0.11,-1.48l0.32,-0.87l1.95,-2.04l0.94,-1.73l-0.25,-0.86l-0.86,-0.64l-2.85,0.31l-2.33,-3.97l2.65,-2.3l3.47,-6.02l1.52,-2.03l1.7,0.24l8.47,-0.91l3.37,0.91l16.14,-2.59l4.37,0.05l2.49,-0.65l1.38,-1.26l1.07,-2.97l0.94,-1.39l3.92,-1.0l10.01,-3.86l5.23,-3.75l3.14,0.72l2.49,1.61l3.18,1.09l6.61,0.98Z\",\n            name: \"Appenzell Ausserrhoden\"\n          }\n        },\n        height: 497.64536275046987,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"continents_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 440.7063107441331,\n          bbox: [{\n            y: -12671671.123330014,\n            x: -20004297.151525836\n          }, {\n            y: 6930392.025135122,\n            x: 20026572.394749384\n          }],\n          left: 0\n        }],\n        paths: {\n          AF: {\n            path: \"M388.36,214.16l1.16,-0.96l2.44,-0.39l1.94,-1.82l1.31,-0.78l2.09,-2.28l-0.51,-3.65l1.24,-3.7l1.5,-1.75l4.46,-2.57l2.37,-4.47l1.44,0.01l1.68,1.21l2.32,-0.19l3.7,0.65l2.57,-1.58l2.63,-0.48l1.7,-1.22l2.31,-0.84l8.24,-0.73l1.49,0.38l2.28,-1.1l2.46,-0.02l1.18,0.67l1.83,-0.2l2.61,-1.12l1.29,0.26l-0.06,1.11l0.58,0.38l1.47,-0.73l-1.0,1.27l-0.02,1.32l0.84,0.88l-0.28,2.09l-1.53,1.32l-0.12,0.42l0.48,1.54l1.42,0.32l0.53,1.11l1.19,0.65l2.94,0.96l1.18,-0.21l1.98,0.44l3.15,1.18l1.37,2.54l5.72,1.67l2.64,1.35l1.61,-0.72l1.29,-1.34l-0.44,-2.34l0.66,-1.13l1.67,-1.21l1.57,-0.35l3.14,0.53l1.08,1.28l3.99,0.78l0.85,0.94l3.27,-0.04l5.97,1.95l2.23,-0.88l1.02,-0.77l2.04,-0.21l1.53,0.3l0.59,1.19l0.69,0.04l0.41,-0.64l1.81,0.58l1.95,0.16l1.04,-0.51l1.42,4.08l-1.8,4.36l-0.23,0.18l-1.66,-1.77l-1.76,-3.85l-0.64,-0.12l-0.36,0.67l1.04,2.88l3.47,7.0l1.75,2.99l2.03,2.65l-0.36,0.53l0.23,2.01l3.25,2.79l0.71,2.25l-0.49,0.66l0.36,2.69l0.93,3.16l2.39,1.75l1.39,2.86l0.8,2.51l4.8,3.68l3.5,3.77l1.71,1.41l-0.05,0.66l-1.2,0.51l-0.06,0.7l1.8,1.11l0.53,1.06l1.13,1.06l1.51,0.12l5.22,-0.97l4.31,-1.4l2.24,-0.15l2.43,-0.62l1.24,-0.86l0.45,-0.0l-0.2,3.0l-1.21,3.62l-2.73,5.97l-2.13,3.65l-5.03,6.16l-8.56,6.4l-2.78,3.08l-1.1,1.86l-1.7,0.97l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-1.03,0.92l-1.18,3.28l0.35,1.73l1.43,0.82l-0.6,1.76l-0.01,2.33l1.89,4.03l0.96,0.67l0.33,0.93l0.31,8.69l0.41,1.23l-1.61,3.38l-1.5,1.5l-5.16,2.28l-2.78,2.73l-1.02,0.53l-1.71,1.8l-0.98,0.57l-0.35,2.41l1.16,1.94l0.49,2.17l0.43,0.31l-0.06,2.06l-0.39,1.17l0.5,0.72l-0.25,0.73l-0.92,0.83l-5.03,2.32l-1.19,1.05l0.09,1.5l0.58,0.39l-1.08,5.21l-0.58,1.09l-2.2,1.79l-3.17,4.76l-4.54,4.48l-1.83,1.23l-2.53,1.05l-1.22,0.14l-0.51,0.7l-1.18,-0.32l-1.39,0.5l-2.59,-0.52l-1.61,0.33l-1.18,-0.11l-2.55,1.1l-2.1,0.44l-1.6,1.07l-0.85,0.05l-0.93,-0.89l-0.93,-0.15l-0.97,-1.13l-0.25,0.05l-0.13,-1.96l-0.68,-1.56l0.7,-0.68l-0.13,-2.33l-4.68,-8.43l-1.88,-2.1l-0.93,-1.88l-1.99,-8.56l-0.06,-3.12l-0.33,-1.52l-2.3,-3.34l-1.91,-4.83l-1.96,-2.43l-0.37,-3.45l0.33,-2.16l1.78,-5.68l2.87,-3.95l0.13,-3.41l-0.8,-1.08l-1.21,-2.87l0.87,-1.62l-1.27,-4.12l-1.17,-1.53l0.13,-0.6l-1.01,-2.64l-2.12,-2.77l-4.21,-4.58l-1.44,-2.45l1.72,-5.12l-0.39,-0.62l1.16,-4.58l-1.03,-1.93l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l0.02,-0.45l-0.53,-0.39l-2.51,0.87l-1.11,-0.07l-0.86,0.5l-1.71,-0.05l-1.19,-1.39l-0.89,-1.89l-1.77,-1.66l-4.36,-0.08l-4.23,0.85l-7.43,3.01l-2.11,-0.67l-4.62,-0.46l-3.02,0.44l-4.2,1.63l-1.01,-0.04l-2.45,-1.13l-4.38,-3.26l-1.66,-1.6l-2.51,-1.23l-1.22,-1.26l-0.76,-2.79l-2.11,-2.53l-1.2,-0.78l-0.67,-1.67l-2.15,-1.57l-1.09,-0.23l-0.54,-1.06l-0.65,-0.46l-0.5,-2.23l0.26,-1.33l-1.03,-1.99l-0.81,-0.64l0.64,-0.35l1.84,-3.18l-0.17,-1.48l0.68,-1.29l0.31,-2.43l-0.57,-3.91l0.2,-1.48l-0.74,-1.36l-1.16,-0.99l0.19,-1.94l0.92,-0.73l0.82,-1.37l-0.09,-1.04l0.79,-1.7l1.31,-1.58l0.96,-0.59l0.66,-1.55l0.09,-1.47l0.81,-1.48l1.72,-1.07l1.55,-2.69ZM508.61,319.02l-0.38,-2.84l0.59,-2.36l-0.82,-1.23l-0.31,-2.78l-1.32,-1.35l-0.67,0.17l-0.22,0.77l0.87,1.86l0.15,2.86l-0.69,1.65l0.71,1.8l0.06,1.28l0.49,0.64l0.07,1.06l0.4,0.55l0.8,-0.23l0.55,0.61l0.69,-0.19l0.04,-0.53l-0.51,-1.36l-0.5,-0.36ZM500.35,287.48l-0.53,3.14l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.92,-2.15l0.1,-2.1l-0.91,-1.28l-1.64,-0.47l-2.77,1.06l-1.15,1.46l0.04,1.23ZM496.99,305.58l-0.14,0.54l0.29,0.49l1.21,0.63l0.83,-0.05l0.23,-0.55l-1.44,-2.93l-0.18,-1.49l-1.9,-1.74l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.08,-1.16l-0.93,-2.42l-0.42,-0.25l-0.35,0.35l-0.45,4.01l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.41l0.3,1.26l0.61,0.9ZM545.91,319.14l0.4,3.03l0.62,1.21l-0.21,1.02l-0.57,-0.8l-0.69,-0.01l-0.47,0.76l0.41,2.12l-0.18,0.87l-0.73,0.78l-0.15,2.14l-4.71,15.2l-1.06,2.88l-3.92,1.64l-3.12,-1.49l-0.6,-1.21l-0.19,-2.4l-0.86,-2.05l-0.21,-1.77l0.38,-1.62l1.21,-0.75l0.01,-0.76l1.19,-2.04l0.23,-1.66l-1.06,-2.99l-0.19,-2.21l0.81,-1.33l0.32,-1.46l4.63,-1.22l3.44,-3.0l0.85,-1.4l-0.08,-0.7l0.78,-0.04l1.38,-1.77l0.13,-1.64l0.45,-0.61l1.16,1.69l0.59,1.6Z\",\n            name: \"Africa\"\n          },\n          NA: {\n            path: \"M892.72,99.2l1.31,0.53l1.41,-0.37l1.89,0.98l1.89,0.42l-1.32,0.58l-2.9,-1.53l-2.08,0.22l-0.26,-0.15l0.07,-0.67ZM353.02,1.2l14.69,4.67l-3.68,1.89l-22.97,0.86l-0.36,0.27l0.12,0.43l1.55,1.18l8.79,-0.66l7.48,2.07l4.86,-1.77l1.66,1.73l-2.53,3.19l-0.01,0.48l0.46,0.15l6.35,-2.2l12.06,-2.31l7.24,1.13l1.09,1.99l-9.79,4.01l-1.44,1.32l-7.87,0.98l-0.35,0.41l0.38,0.38l5.07,0.24l-2.53,3.58l-2.07,3.81l0.08,6.05l2.57,3.11l-3.22,0.2l-4.12,1.66l-0.05,0.72l4.45,2.65l0.51,3.75l-2.3,0.4l-0.25,0.64l2.79,3.69l-4.82,0.31l-0.36,0.29l0.16,0.44l2.62,1.8l-0.59,1.22l-3.3,0.7l-3.45,0.01l-0.29,0.68l3.03,3.12l0.02,1.34l-4.4,-1.73l-1.72,1.35l0.15,0.66l3.31,1.15l3.13,2.71l0.81,3.16l-3.85,0.75l-4.89,-4.26l-0.47,-0.03l-0.17,0.44l0.79,2.86l-2.71,2.21l-0.13,0.44l0.37,0.27l8.73,0.34l-12.32,6.64l-7.24,1.48l-2.94,0.08l-2.69,1.75l-3.43,4.41l-5.24,2.84l-1.73,0.18l-7.12,2.1l-2.15,2.52l-0.13,2.99l-1.19,2.45l-4.01,3.09l-0.14,0.44l0.97,2.9l-2.28,6.48l-3.1,0.2l-3.83,-3.07l-4.86,-0.02l-2.25,-1.93l-1.7,-3.79l-4.3,-4.84l-1.21,-2.49l-0.44,-3.8l-3.32,-3.63l0.84,-2.86l-1.56,-1.7l2.28,-4.6l3.83,-1.74l1.03,-1.96l0.52,-3.47l-0.59,-0.41l-4.17,2.21l-2.07,0.58l-2.72,-1.28l-0.15,-2.71l0.85,-2.09l2.01,-0.06l5.06,1.2l0.46,-0.23l-0.14,-0.49l-6.54,-4.47l-2.67,0.55l-1.58,-0.86l2.56,-4.01l-0.03,-0.48l-1.5,-1.74l-4.98,-8.5l-3.13,-1.96l0.03,-1.88l-0.24,-0.37l-6.85,-3.02l-5.36,-0.38l-12.7,0.58l-2.78,-1.57l-3.66,-2.77l5.73,-1.45l5.0,-0.28l0.38,-0.38l-0.35,-0.41l-10.67,-1.38l-5.3,-2.06l0.25,-1.54l18.41,-5.26l1.22,-2.27l-0.25,-0.55l-6.14,-1.86l1.68,-1.77l8.55,-4.03l3.59,-0.63l0.3,-0.54l-0.88,-2.27l5.47,-1.47l7.65,-0.95l7.55,-0.05l3.04,1.85l6.48,-3.27l5.81,2.22l3.56,0.5l5.16,1.94l0.5,-0.21l-0.17,-0.52l-5.71,-3.13l0.28,-2.13l8.12,-3.6l8.7,0.28l3.35,-2.34l8.71,-0.6l19.93,0.8ZM280.06,145.6l-1.67,2.88l0.07,0.49l0.5,0.04l1.46,-0.98l1.0,0.42l-0.56,0.72l0.17,0.62l2.22,0.89l1.35,-0.71l1.95,0.78l-0.66,2.01l0.5,0.51l1.32,-0.42l0.98,3.17l-0.91,2.41l-0.8,0.08l-1.23,-0.45l0.47,-2.25l-0.89,-0.83l-0.48,0.06l-2.78,2.63l-0.34,-0.02l1.02,-0.85l-0.14,-0.69l-2.4,-0.77l-7.4,0.08l-0.17,-0.41l1.3,-0.94l0.02,-0.64l-0.73,-0.58l1.85,-1.74l2.57,-5.16l1.47,-1.79l1.99,-1.05l0.46,0.06l-1.53,2.45ZM133.68,213.97l0.68,-0.08l0.93,-1.01l0.08,-1.78l-1.93,-1.94l-1.46,-0.77l-2.94,-5.59l-1.52,-4.04l-1.62,-1.61l-1.14,-0.38l-0.55,-0.88l-1.28,-0.13l-1.01,-0.77l-2.22,-0.27l-0.43,-0.3l-0.36,-1.58l-2.4,-2.83l-2.01,-3.85l-0.06,-0.9l-2.92,-3.26l-0.33,-2.29l-1.3,-1.66l0.52,-2.37l-0.09,-2.57l-0.78,-2.3l0.95,-2.82l0.61,-5.68l-0.47,-4.27l-1.46,-4.08l3.19,0.79l1.26,2.83l0.69,0.08l0.69,-1.14l-0.42,-2.68l-0.85,-2.64l-7.11,-4.81l-4.5,-1.38l-1.26,-2.66l0.33,-1.93l-0.23,-0.43l-3.01,-1.35l-0.55,-2.77l-2.89,-2.38l-0.17,-1.88l-1.47,-1.38l-2.04,-1.03l-0.67,-2.89l-3.28,-3.03l-1.65,-3.57l-6.35,-0.32l-2.82,-1.01l-5.26,-3.85l-6.77,-2.04l-3.53,0.3l-4.81,-1.69l-3.25,-1.63l-2.78,0.8l-0.28,0.46l0.44,2.21l-3.91,0.96l-2.26,1.27l-2.3,0.65l-0.27,-1.65l1.05,-3.42l2.49,-1.09l0.16,-0.6l-0.69,-0.96l-0.55,-0.1l-3.19,2.12l-1.78,2.56l-3.55,2.61l-0.04,0.61l1.56,1.52l-2.07,2.29l-5.11,2.57l-0.77,1.66l-3.76,1.77l-0.92,1.73l-2.69,1.38l-1.81,-0.22l-6.95,3.32l-3.97,0.91l4.85,-2.5l2.59,-1.86l3.26,-0.52l1.19,-1.4l3.42,-2.1l2.59,-2.27l0.42,-2.68l1.23,-2.1l-0.04,-0.46l-0.45,-0.11l-2.68,1.03l-0.63,-0.49l-0.53,0.03l-1.05,1.04l-1.36,-1.54l-0.66,0.08l-0.32,0.62l-0.58,-1.14l-0.56,-0.16l-2.41,1.42l-1.07,-0.0l-0.17,-1.75l0.3,-1.71l-1.61,-1.33l-3.41,0.59l-1.96,-1.63l-1.57,-0.84l-0.15,-2.21l-1.7,-1.43l0.82,-1.88l1.99,-2.12l0.88,-1.92l1.71,-0.24l2.04,0.51l1.87,-1.77l1.91,0.25l1.91,-1.23l0.17,-0.43l-0.47,-1.82l-1.07,-0.7l1.39,-1.17l0.12,-0.45l-0.39,-0.26l-1.65,0.07l-2.66,0.88l-0.75,0.78l-1.92,-0.8l-3.46,0.44l-3.44,-0.91l-1.06,-1.61l-2.65,-1.99l2.91,-1.43l5.5,-2.0l1.52,0.0l-0.26,1.62l0.41,0.46l5.29,-0.16l0.3,-0.65l-2.03,-2.59l-3.14,-1.68l-1.79,-2.12l-2.4,-1.83l-3.09,-1.24l1.04,-1.69l4.43,-0.2l3.16,-2.0l0.73,-2.27l2.39,-1.99l2.42,-0.52l4.65,-1.97l2.46,0.23l3.71,-2.35l3.5,0.89l1.73,1.97l0.55,0.05l0.99,-0.79l3.65,0.24l-0.09,0.62l0.32,0.45l3.83,0.77l2.61,-0.43l5.19,1.4l4.84,0.43l1.89,0.57l3.42,-0.7l3.74,1.32l7.34,1.68l3.89,2.09l2.74,0.45l2.47,-1.89l2.88,-1.31l3.85,0.48l3.71,-1.94l3.82,-1.04l1.56,1.68l0.49,0.08l1.87,-1.04l0.65,-1.98l1.24,0.35l4.16,3.94l0.54,0.01l2.75,-2.49l0.26,2.59l0.49,0.35l3.08,-0.73l1.04,-1.27l2.73,0.23l3.83,1.86l5.86,1.61l3.47,0.75l2.44,-0.26l2.73,1.78l-2.98,1.81l-0.19,0.41l0.31,0.32l4.53,0.92l6.87,-0.5l2.0,-0.69l2.49,2.39l0.53,0.02l2.72,-2.16l-0.02,-0.64l-2.16,-1.54l1.15,-1.06l4.83,-0.61l1.84,0.95l2.48,2.31l3.01,-0.23l4.55,1.92l3.85,-0.67l3.61,0.1l0.41,-0.44l-0.25,-2.36l1.79,-0.61l3.49,1.32l-0.01,3.77l0.31,0.39l0.45,-0.22l1.48,-3.16l1.74,0.1l0.41,-0.3l1.13,-4.37l-2.78,-3.11l-2.8,-1.74l0.19,-4.64l2.71,-3.07l2.98,0.67l2.41,1.95l3.19,4.8l-1.99,1.97l0.21,0.68l4.33,0.84l-0.01,4.15l0.25,0.37l0.44,-0.09l3.07,-3.15l2.54,2.39l-0.61,3.33l2.42,2.88l0.61,0.0l2.61,-3.08l1.88,-3.82l0.17,-4.58l6.72,0.94l3.13,2.04l0.13,1.82l-1.76,2.19l-0.01,0.49l1.66,2.16l-0.26,1.71l-4.68,2.8l-3.28,0.61l-2.47,-1.2l-0.55,0.23l-0.73,2.04l-2.38,3.43l-0.74,1.77l-2.74,2.57l-3.44,0.25l-2.21,1.78l-0.28,2.53l-2.82,0.55l-3.12,3.22l-2.72,4.31l-1.03,3.17l-0.14,4.31l0.33,0.41l3.44,0.57l2.24,5.95l0.45,0.23l3.4,-0.69l4.52,1.51l2.43,1.31l1.91,1.73l3.1,0.96l2.62,1.46l6.6,0.54l-0.35,2.74l0.81,3.53l1.81,3.78l3.83,3.3l0.45,0.04l2.1,-1.28l1.37,-3.69l-1.31,-5.38l-1.45,-1.58l3.57,-1.47l2.84,-2.46l1.52,-2.8l-0.25,-2.55l-1.7,-3.07l-2.85,-2.61l2.8,-3.95l-1.08,-3.37l-0.79,-5.67l1.36,-0.7l6.76,1.41l2.12,-0.96l5.12,3.36l1.05,1.61l4.08,0.26l-0.06,2.87l0.83,4.7l0.3,0.32l2.16,0.54l1.73,2.06l0.5,0.09l3.63,-2.03l2.52,-4.19l1.26,-1.32l7.6,11.72l-0.92,2.04l0.16,0.51l3.3,1.97l2.22,1.98l4.1,0.98l1.43,0.99l0.95,2.79l2.1,0.68l0.84,1.08l0.17,3.45l-3.37,2.26l-4.22,1.24l-3.06,2.63l-4.06,0.51l-5.35,-0.69l-3.8,-0.02l-2.86,0.36l-2.04,2.28l-3.26,1.51l-6.47,7.15l-0.06,0.48l0.44,0.19l2.13,-0.52l4.17,-4.24l5.12,-2.62l3.52,-0.3l1.69,1.21l-2.12,2.21l0.81,3.47l1.02,2.61l3.47,1.6l4.14,-0.45l2.15,-2.8l0.26,1.48l1.14,0.8l-2.56,1.69l-5.5,1.82l-2.54,1.27l-2.74,2.15l-1.4,-0.16l-0.07,-2.01l4.14,-2.44l0.18,-0.45l-0.39,-0.29l-4.01,0.1l-2.83,0.38l-0.31,0.55l0.29,0.68l-2.34,1.31l-5.37,2.09l-1.83,2.72l0.02,1.79l0.83,1.59l0.54,0.23l-6.19,0.94l-2.2,0.89l-0.23,0.48l0.45,0.29l2.99,-0.46l-2.19,0.56l-1.13,0.0l-0.15,-0.32l-0.48,0.08l-0.76,0.82l0.22,0.67l0.32,0.06l-0.41,1.62l-1.27,1.58l-1.48,-1.07l-0.49,-0.04l-0.16,0.46l0.52,1.58l0.61,0.59l0.03,0.79l-0.95,1.38l-1.21,-1.22l-0.27,-2.27l-0.35,-0.35l-0.42,0.25l-0.48,1.27l0.33,1.41l-0.97,-0.27l-0.48,0.24l0.18,0.5l1.52,0.83l0.1,2.52l0.79,0.51l0.52,3.42l-1.42,1.88l-2.47,0.8l-1.71,1.66l-1.31,0.25l-1.27,1.03l-0.43,0.99l-2.69,1.78l-1.46,1.38l-1.25,1.8l-0.39,1.96l0.45,2.08l0.85,2.38l1.09,1.9l0.04,1.2l1.16,3.06l-0.18,2.69l-0.55,1.43l-0.47,0.21l-0.89,-0.23l-0.49,-1.18l-0.87,-0.56l-2.75,-5.16l0.46,-1.96l-0.76,-1.59l-1.95,-2.29l-1.46,-0.52l-2.38,1.17l-1.47,-1.35l-1.78,-0.71l-2.78,0.34l-2.17,-0.3l-2.12,0.22l-1.04,0.43l-0.19,0.58l0.39,0.63l0.14,1.34l-0.84,-0.2l-0.84,0.46l-1.58,-0.07l-2.08,-1.44l-2.09,0.33l-1.91,-0.62l-3.73,0.84l-2.39,2.07l-2.54,1.22l-1.37,1.29l-0.66,1.34l-0.06,2.07l0.37,1.81l-0.74,0.46l0.75,0.34l-1.18,3.72l-0.42,5.04l1.79,4.89l1.62,1.89l0.61,1.52l0.98,1.28l2.77,0.8l1.37,1.1l7.54,-1.89l1.86,-1.3l1.14,-4.3l4.1,-1.21l3.57,-0.11l0.32,0.3l-0.06,0.94l-1.26,1.45l-0.67,1.71l0.38,0.7l-0.72,2.27l-1.01,-0.25l-0.37,0.41l0.46,0.77l-0.4,1.3l0.06,1.78l-0.24,1.06l-0.92,0.74l-0.5,0.89l0.15,0.54l0.82,0.46l0.58,-0.22l0.68,0.29l0.85,-0.43l2.37,0.28l1.27,-0.09l1.1,-0.52l1.3,0.28l1.14,-0.25l1.38,0.37l2.3,1.4l0.36,0.39l-0.2,0.71l0.21,0.95l-0.8,1.86l0.09,2.82l-0.36,0.37l-0.11,1.75l-0.47,0.81l1.24,2.69l2.92,2.88l0.32,0.78l1.26,0.03l0.77,0.49l1.38,-0.23l2.51,-1.11l0.86,-0.72l3.45,0.85l1.4,1.18l0.41,1.74l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-2.26,-1.67l-1.35,0.11l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-1.74,-0.47l-1.3,0.2l-1.27,-0.52l-0.28,-1.49l-2.46,-1.42l-0.28,-0.77l-1.11,-0.45l-0.11,1.04l-1.13,-0.66l-0.11,-2.88l-4.27,-4.05l0.33,-0.66l-0.67,-0.99l-0.76,-0.22l-0.64,0.58l-1.14,-0.03l-1.95,-0.75l-1.28,-0.15l-2.02,-0.99l-1.6,-0.07l-2.32,-1.46l-2.88,-2.79l-1.38,-0.88l-2.04,-0.67l-1.58,0.17l-3.19,1.2l-10.55,-3.85l-2.86,-1.96l-3.78,-0.92l-1.08,-1.19l-2.62,-1.43l-1.18,-1.54l-0.38,-0.81l0.66,-0.63l-0.18,-0.53l0.52,-0.76l0.01,-0.91l-2.0,-3.82l-2.21,-2.63l-2.53,-2.09l-1.19,-1.62l-2.2,-1.17l-0.3,-0.43l0.34,-1.48l-0.21,-0.45l-1.23,-0.6l-1.36,-1.2l-0.59,-1.78l-1.54,-0.47l-2.44,-2.55l-0.16,-0.9l-1.33,-2.03l-0.84,-1.99l-0.16,-1.33l-1.81,-1.1l-0.97,0.05l-1.31,-0.7l-0.57,0.22l-0.4,1.12l0.72,3.77l3.51,3.89l0.28,0.78l0.53,0.26l0.41,1.43l1.33,1.73l1.58,1.41l0.8,2.39l1.43,2.41l0.13,1.32l0.37,0.36l1.04,0.08l1.67,2.28l-0.85,0.76l-0.66,-1.51l-1.68,-1.54l-2.91,-1.87l0.06,-1.82l-0.54,-1.68l-2.91,-2.03l-0.55,0.09l-1.95,-1.1l-0.88,-0.94ZM223.23,169.68l1.12,-0.33l4.16,0.31l1.88,-1.01l0.21,-0.4l-0.2,-1.35l-1.0,-0.87l-1.72,0.98l-1.12,-0.48l-2.12,0.42l-2.62,0.84l-0.9,1.17l0.21,0.62l1.0,0.29l1.11,-0.19ZM212.87,172.48l-1.23,1.32l0.17,0.61l1.54,0.62l1.48,0.17l1.92,-0.44l4.63,-2.09l2.25,-1.86l0.09,-0.67l-0.46,-0.33l-2.23,0.39l-1.85,0.81l-2.11,-0.13l-2.95,1.78l-1.25,-0.17ZM196.34,154.17l-2.46,1.01l-1.86,1.32l-1.71,1.34l-0.16,0.77l0.5,0.39l2.33,-0.61l1.77,1.02l5.15,-2.4l-0.31,0.65l0.25,0.56l1.36,0.38l1.71,1.16l4.7,-0.88l0.67,0.85l0.76,0.13l0.46,-0.28l0.67,0.94l-1.34,0.17l-2.18,-0.32l-3.6,0.89l-2.71,3.25l0.35,0.9l0.59,-0.0l0.55,-0.6l-1.36,4.65l0.29,3.09l1.01,1.93l1.12,0.08l0.84,-0.37l1.68,-2.01l0.14,-2.21l-0.82,-1.96l0.11,-1.13l1.19,-2.37l0.44,-0.33l0.48,0.75l0.4,-0.29l0.4,-1.37l0.6,-0.47l0.24,-0.8l1.69,0.49l1.65,1.08l-0.03,2.37l-1.27,1.13l-0.0,1.13l0.87,0.36l1.66,-1.29l0.5,0.17l0.51,2.75l0.61,0.3l1.8,-1.25l0.1,-2.29l1.16,-1.99l0.49,0.53l2.03,0.42l1.2,-1.16l0.02,-0.47l-2.66,-3.51l-2.28,-0.61l-5.64,-0.71l-0.4,-0.57l-0.79,0.13l0.2,-0.41l-0.22,-0.55l-0.68,-0.26l0.19,-1.26l-0.78,-0.73l0.31,-0.64l-0.29,-0.57l-2.6,-0.44l-0.75,-1.63l-0.73,-0.59l-4.53,-0.72l-1.13,1.19l-1.48,0.59l-0.95,1.19ZM266.64,259.32l0.28,-1.16l1.13,-0.22l-0.06,1.2l-1.35,0.18ZM260.37,148.65l3.04,0.76l2.26,1.2l-3.78,-0.95l-1.53,-1.01ZM249.4,3.81l6.68,0.49l5.32,0.79l4.26,1.57l-0.07,1.1l-5.85,2.53l-6.02,1.21l-2.39,1.39l-0.18,0.45l0.39,0.29l4.01,-0.02l-4.65,2.82l-4.2,1.74l-4.19,4.59l-5.03,0.92l-1.67,1.15l-7.47,0.59l-0.37,0.37l0.32,0.42l2.41,0.49l-0.81,0.47l-0.12,0.59l1.83,2.41l-2.02,1.59l-3.81,1.51l-1.32,2.16l-3.38,1.53l-0.22,0.48l0.35,1.19l0.4,0.29l3.88,-0.18l0.03,0.61l-6.33,2.95l-6.41,-1.4l-7.43,0.79l-3.72,-0.62l-4.4,-0.25l-0.23,-1.83l4.29,-1.11l0.28,-0.51l-1.1,-3.45l1.0,-0.25l6.58,2.28l0.47,-0.16l-0.05,-0.49l-3.41,-3.45l-3.58,-0.98l1.48,-1.55l4.34,-1.29l0.97,-2.19l-0.16,-0.48l-3.42,-2.13l-0.81,-2.26l6.2,0.22l2.24,0.58l3.91,-2.1l0.2,-0.43l-0.35,-0.32l-5.64,-0.67l-8.73,0.36l-4.26,-1.9l-2.12,-2.4l-2.78,-1.66l-0.41,-1.52l3.31,-1.03l2.93,-0.2l4.91,-0.99l3.7,-2.27l2.87,0.3l2.62,1.67l0.56,-0.14l1.82,-3.2l3.13,-0.94l4.44,-0.69l7.53,-0.26l1.48,0.67l7.19,-1.06l10.8,0.79ZM203.85,57.54l0.01,0.42l1.97,2.97l0.68,-0.02l2.24,-3.72l5.95,-1.86l4.01,4.64l-0.35,2.91l0.5,0.43l4.95,-1.36l2.32,-1.8l5.31,2.28l3.27,2.11l0.3,1.84l0.48,0.33l4.42,-0.99l2.64,2.87l5.97,1.77l2.06,1.72l2.11,3.71l-4.19,1.86l-0.01,0.73l5.9,2.83l3.94,0.94l3.78,3.95l3.46,0.25l-0.63,2.37l-4.11,4.47l-2.76,-1.56l-3.9,-3.94l-3.59,0.41l-0.33,0.34l-0.19,2.72l2.63,2.38l3.42,1.89l0.94,0.97l1.55,3.75l-0.7,2.29l-2.74,-0.92l-6.25,-3.15l-0.51,0.13l0.05,0.52l6.07,5.69l0.18,0.59l-6.09,-1.39l-5.31,-2.24l-2.63,-1.66l0.6,-0.77l-0.12,-0.6l-7.39,-4.01l-0.59,0.37l0.03,0.79l-6.73,0.6l-1.69,-1.1l1.36,-2.46l4.51,-0.07l5.15,-0.52l0.31,-0.6l-0.74,-1.3l0.78,-1.84l3.21,-4.05l-0.67,-2.35l-1.11,-1.6l-3.84,-2.1l-4.35,-1.28l0.91,-0.63l0.06,-0.61l-2.65,-2.75l-2.34,-0.36l-1.89,-1.46l-0.53,0.03l-1.24,1.23l-4.36,0.55l-9.04,-0.99l-9.26,-1.98l-1.6,-1.22l2.22,-1.77l0.13,-0.44l-0.38,-0.27l-3.22,-0.02l-0.72,-4.25l1.83,-4.04l2.42,-1.85l5.5,-1.1l-1.39,2.35ZM261.19,159.33l2.07,0.61l1.44,-0.04l-1.15,0.63l-2.94,-1.23l-0.4,-0.68l0.36,-0.37l0.61,1.07ZM256.17,238.73l-0.26,0.27l-2.83,0.05l-0.07,-0.55l1.95,-0.1l1.22,0.33ZM237.05,238.38l-1.16,0.43l-0.91,-0.55l0.05,-0.2l2.02,0.31ZM237.53,238.43l1.06,0.12l-0.05,0.01l-1.01,-0.12ZM239.25,238.45l0.79,-0.51l0.06,-0.62l-1.02,-1.0l0.02,-0.82l-0.3,-0.4l-0.93,-0.32l3.44,0.5l0.59,-0.44l1.66,0.01l1.99,0.63l0.33,0.67l1.28,0.19l0.33,0.76l1.0,0.08l0.8,0.62l-0.45,0.51l-1.13,-0.47l-1.88,-0.01l-1.27,0.59l-0.75,-0.55l-1.01,0.54l-0.79,1.4l-0.53,-0.98l-2.25,-0.38ZM221.21,227.25l1.27,1.02l2.19,-0.28l4.43,3.33l2.08,0.43l-0.1,0.38l0.36,0.5l1.75,0.1l1.48,0.84l-3.11,0.51l-4.15,-0.03l0.77,-0.67l-0.04,-0.64l-1.2,-0.74l-1.49,-0.16l-0.7,-0.61l-0.56,-1.4l-0.4,-0.25l-1.34,0.1l-2.2,-0.66l-0.88,-0.58l-3.18,-0.4l-0.27,-0.16l0.58,-0.74l-0.36,-0.29l-2.72,-0.05l-1.7,1.29l-0.91,0.03l-0.61,0.69l-1.01,0.22l1.11,-1.29l1.01,-0.52l3.69,-1.01l3.98,0.21l2.21,0.84ZM230.83,84.39l-2.37,0.18l-0.49,-1.63l0.93,-2.09l1.94,-0.51l1.62,0.99l0.02,1.52l-1.66,1.54ZM229.43,58.25l0.11,0.65l-4.87,-0.21l-2.72,0.62l-3.1,-2.57l0.08,-1.26l0.86,-0.23l5.57,0.51l4.08,2.5ZM228.38,239.28l-0.8,0.4l-2.26,-1.06l0.84,-0.23l2.14,0.3l1.17,0.56l-1.08,0.03ZM226.4,223.87l-0.48,-1.15l-0.84,-0.75l0.36,-1.11l0.95,1.95l0.01,1.06ZM225.56,216.43l-1.87,0.29l-0.04,-0.22l0.74,-0.14l1.17,0.06ZM222.0,105.02l-0.72,1.49l-0.63,-0.19l-0.48,-0.84l0.81,-0.99l0.65,0.05l0.37,0.46ZM183.74,38.32l2.9,1.7l4.79,-0.01l1.84,1.46l-0.49,1.68l0.23,0.48l2.82,1.14l1.76,1.26l7.01,0.65l4.1,-1.1l5.03,-0.43l3.93,0.35l2.48,1.77l0.46,1.7l-1.3,1.1l-3.56,1.01l-3.23,-0.59l-7.17,0.76l-5.09,0.09l-3.99,-0.6l-6.42,-1.54l-0.79,-2.51l-0.3,-2.49l-2.64,-2.5l-5.32,-0.72l-2.52,-1.4l0.68,-1.57l4.78,0.31ZM207.38,91.35l0.4,1.56l0.56,0.26l1.06,-0.52l1.32,0.96l5.42,2.57l0.2,1.68l0.46,0.35l1.68,-0.28l1.15,0.85l-1.55,0.87l-3.61,-0.88l-1.32,-1.69l-0.57,-0.06l-2.45,2.1l-3.12,1.79l-0.7,-1.87l-0.42,-0.26l-2.16,0.24l1.39,-1.39l0.32,-3.14l0.76,-3.35l1.18,0.22ZM215.49,102.6l-2.67,1.95l-1.4,-0.07l-0.3,-0.58l1.53,-1.48l2.84,0.18ZM202.7,24.12l2.53,1.59l-2.87,1.4l-4.53,4.05l-4.25,0.38l-5.03,-0.68l-2.45,-2.04l0.03,-1.62l1.82,-1.37l0.14,-0.45l-0.38,-0.27l-4.45,0.04l-2.59,-1.76l-1.41,-2.29l1.57,-2.32l1.62,-1.66l2.44,-0.39l0.25,-0.65l-0.6,-0.74l4.86,-0.25l3.24,3.11l8.16,2.3l1.9,3.61ZM187.47,59.2l-2.76,3.49l-2.38,-0.15l-1.44,-3.84l0.04,-2.2l1.19,-1.88l2.3,-1.23l5.07,0.17l4.11,1.02l-3.24,3.72l-2.88,0.89ZM186.07,48.79l-1.08,1.53l-3.34,-0.34l-2.56,-1.1l1.03,-1.75l3.25,-1.23l1.95,1.58l0.75,1.3ZM185.71,35.32l-5.3,-0.2l-0.32,-0.71l4.31,0.07l1.3,0.84ZM180.68,32.48l-3.34,1.0l-1.79,-1.1l-0.98,-1.87l-0.15,-1.73l4.1,0.53l2.67,1.7l-0.51,1.47ZM180.9,76.31l-1.1,1.08l-3.13,-1.23l-2.12,0.43l-2.71,-1.57l1.72,-1.09l1.55,-1.72l3.81,1.9l1.98,2.2ZM169.74,54.87l2.96,0.97l4.17,-0.57l0.41,0.88l-2.14,2.11l0.09,0.64l3.55,1.92l-0.4,3.72l-3.79,1.65l-2.17,-0.35l-1.72,-1.74l-6.02,-3.5l0.03,-0.85l4.68,0.54l0.4,-0.21l-0.05,-0.45l-2.48,-2.81l2.46,-1.95ZM174.45,40.74l1.37,1.73l0.07,2.44l-1.05,3.45l-3.79,0.47l-2.32,-0.69l0.05,-2.64l-0.44,-0.41l-3.68,0.35l-0.12,-3.1l2.45,0.1l3.67,-1.73l3.41,0.29l0.37,-0.26ZM170.05,31.55l0.67,1.56l-3.33,-0.49l-4.22,-1.77l-4.35,-0.16l1.4,-0.94l-0.06,-0.7l-2.81,-1.23l-0.12,-1.39l4.39,0.68l6.62,1.98l1.81,2.47ZM134.5,58.13l-1.02,1.82l0.45,0.58l5.4,-1.39l3.33,2.29l0.49,-0.03l2.6,-2.23l1.94,1.32l2.0,4.5l0.7,0.06l1.3,-2.29l-1.63,-4.46l1.69,-0.54l2.31,0.71l2.65,1.81l2.49,7.92l8.48,4.27l-0.19,1.35l-3.79,0.33l-0.26,0.67l1.4,1.49l-0.58,1.1l-4.23,-0.64l-4.43,-1.19l-3.0,0.28l-4.66,1.47l-10.52,1.04l-1.43,-2.02l-3.42,-1.2l-2.21,0.43l-2.51,-2.86l4.84,-1.05l3.6,0.19l3.27,-0.78l0.31,-0.39l-0.31,-0.39l-4.84,-1.06l-8.79,0.27l-0.85,-1.07l5.26,-1.66l0.27,-0.45l-0.4,-0.34l-3.8,0.06l-3.81,-1.06l1.81,-3.01l1.66,-1.79l6.48,-2.81l1.97,0.71ZM158.7,56.61l-1.7,2.44l-3.2,-2.75l0.37,-0.3l3.11,-0.18l1.42,0.79ZM149.61,42.73l1.01,1.89l0.5,0.18l2.14,-0.82l2.23,0.19l0.36,2.04l-1.33,2.09l-8.28,0.76l-6.35,2.15l-3.41,0.1l-0.19,-0.96l4.9,-2.08l0.23,-0.46l-0.41,-0.31l-11.25,0.59l-2.89,-0.74l3.04,-4.44l2.14,-1.32l6.81,1.69l4.58,3.06l4.37,0.39l0.36,-0.63l-3.36,-4.6l1.85,-1.53l2.18,0.51l0.77,2.26ZM144.76,34.41l-4.36,1.44l-3.0,-1.4l1.46,-1.24l3.47,-0.52l2.96,0.71l-0.52,1.01ZM145.13,29.83l-1.9,0.66l-3.67,-0.0l2.27,-1.61l3.3,0.95ZM118.92,65.79l-6.03,2.02l-1.33,-1.9l-5.38,-2.28l2.59,-5.05l2.16,-3.14l-0.02,-0.48l-1.97,-2.41l7.64,-0.7l3.6,1.02l6.3,0.27l4.42,2.95l-2.53,0.98l-6.24,3.43l-3.1,3.28l-0.11,2.01ZM129.54,35.53l-0.28,3.37l-1.72,1.62l-2.33,0.28l-4.61,2.19l-3.86,0.76l-2.64,-0.87l3.72,-3.4l5.01,-3.34l3.72,0.07l3.0,-0.67ZM111.09,152.69l-0.67,0.24l-3.85,-1.37l-0.83,-1.17l-2.12,-1.07l-0.66,-1.02l-2.4,-0.55l-0.74,-1.71l6.02,1.45l2.0,2.55l2.52,1.39l0.73,1.27ZM87.8,134.64l0.89,0.29l1.86,-0.21l-0.65,3.34l1.69,2.33l-1.31,-1.33l-0.99,-1.62l-1.17,-0.98l-0.33,-1.82ZM37.6,123.41l-2.25,1.23l-0.95,-0.69l-0.29,-1.24l3.21,-1.63l1.42,0.21l0.67,0.7l-1.8,1.42ZM31.06,234.03l0.98,0.47l0.74,0.87l-1.77,1.07l-0.44,-1.53l0.49,-0.89ZM29.34,232.07l0.18,0.05l0.08,0.05l-0.16,0.03l-0.11,-0.14ZM25.16,230.17l0.05,-0.03l0.18,0.22l-0.13,-0.01l-0.1,-0.18ZM5.89,113.26l-1.08,0.41l-2.21,-1.12l1.53,-0.4l1.62,0.28l0.14,0.83Z\",\n            name: \"North America\"\n          },\n          OC: {\n            path: \"M869.95,326.98l-1.21,0.41l-0.08,-0.23l2.97,-1.21l-0.14,0.42l-1.54,0.61ZM867.58,329.25l0.43,0.37l-0.27,0.88l-1.24,0.28l-1.04,-0.24l-0.14,-0.66l0.63,-0.58l0.92,0.26l0.7,-0.31ZM857.8,379.65l1.86,3.12l0.44,0.18l0.3,-0.38l0.03,-1.23l0.38,0.27l0.57,2.31l2.02,0.94l1.81,0.27l1.57,-1.06l0.7,0.18l-1.15,3.59l-1.98,0.11l-0.74,1.2l0.2,1.11l-2.42,3.98l-1.49,0.92l-1.04,-0.85l1.21,-2.05l-0.81,-2.01l-2.63,-1.25l0.04,-0.57l1.82,-1.19l0.43,-2.34l-0.16,-2.03l-0.95,-1.82l-0.06,-0.72l-3.11,-3.64l-0.79,-1.52l1.56,1.45l1.76,0.66l0.65,2.34ZM853.83,393.59l0.57,1.24l0.59,0.16l1.42,-0.97l0.46,0.79l0.0,1.03l-2.47,3.48l-1.26,1.2l-0.06,0.5l0.55,0.87l-1.41,0.07l-2.33,1.38l-2.03,5.02l-3.02,2.16l-2.06,-0.06l-1.71,-1.04l-2.47,-0.2l-0.27,-0.73l1.22,-2.1l3.05,-2.94l1.62,-0.59l4.02,-2.82l1.57,-1.67l1.07,-2.16l0.88,-0.7l0.48,-1.75l1.24,-0.97l0.35,0.79ZM839.04,322.8l0.22,1.14l-0.44,0.03l-0.2,-1.45l0.42,0.27ZM838.78,341.24l-0.33,0.22l-2.9,-1.75l-3.26,-3.37l1.65,0.83l4.85,4.07ZM826.69,311.6l-0.61,0.09l-0.2,-0.33l0.37,0.15l0.44,0.09ZM824.18,307.38l-0.26,-0.3l-0.31,-0.91l0.03,0.0l0.54,1.21ZM823.04,309.33l-1.66,-0.22l-0.2,-0.52l1.16,0.28l0.69,0.46ZM819.28,304.68l1.14,0.65l0.02,0.03l-0.81,-0.44l-0.35,-0.23ZM808.58,298.86l2.54,2.56l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.16ZM705.8,353.26l0.26,0.04l0.17,-0.47l-0.48,-1.42l0.92,1.11l0.45,0.15l0.27,-0.39l-0.1,-1.56l-1.98,-3.63l1.09,-3.31l-0.24,-1.57l0.34,-0.62l0.38,1.06l0.43,-0.19l0.99,-1.7l1.91,-0.83l1.29,-1.15l1.81,-0.91l0.96,-0.17l0.92,0.26l1.92,-0.95l1.47,-0.28l1.03,-0.8l1.43,0.04l2.78,-0.84l1.36,-1.15l0.71,-1.45l1.41,-1.26l0.3,-2.58l1.27,-1.59l0.78,1.65l0.54,0.19l1.07,-0.51l0.15,-0.6l-0.73,-1.0l0.45,-0.71l0.78,0.39l0.58,-0.3l0.28,-1.82l1.87,-2.14l1.12,-0.39l0.28,-0.58l0.62,0.17l0.53,-0.73l1.87,-0.57l1.65,1.05l1.35,1.48l3.39,0.38l0.43,-0.54l-0.46,-1.23l1.05,-1.79l1.04,-0.61l0.14,-0.55l-0.25,-0.41l0.88,-1.17l1.31,-0.77l1.3,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.3l-0.92,-0.77l1.48,0.56l1.41,1.07l2.11,0.65l0.81,-0.2l1.4,0.7l1.69,-0.66l0.8,0.19l0.64,-0.33l0.71,0.77l-1.33,1.94l-0.71,0.07l-0.35,0.51l0.24,0.86l-1.52,2.35l0.12,1.05l2.15,1.65l1.97,0.85l3.04,2.36l1.97,0.65l0.55,0.88l2.72,0.85l1.84,-1.1l2.07,-5.97l-0.42,-3.59l0.3,-1.73l0.47,-0.87l-0.31,-0.68l1.09,-3.28l0.46,-0.47l0.4,0.71l0.16,1.51l0.65,0.52l0.16,1.04l0.85,1.21l0.12,2.38l0.9,2.0l0.57,0.18l1.3,-0.78l1.69,1.7l-0.2,1.08l0.53,2.2l0.39,1.3l0.68,0.48l0.6,1.95l-0.19,1.48l0.81,1.76l6.01,3.69l-0.11,0.76l1.38,1.58l0.95,2.77l0.58,0.22l0.72,-0.41l0.8,0.9l0.61,0.01l0.46,2.41l4.81,4.71l0.66,2.02l-0.07,3.31l1.14,2.2l-0.13,2.24l-1.1,3.68l0.03,1.64l-0.47,1.89l-1.05,2.4l-1.9,1.47l-1.72,3.51l-2.38,6.09l-0.24,2.82l-1.14,0.8l-2.85,0.15l-2.31,1.19l-2.51,2.25l-3.09,-1.57l0.3,-1.15l-0.54,-0.47l-1.5,0.63l-2.01,1.94l-7.12,-2.18l-1.48,-1.63l-1.14,-3.74l-1.45,-1.26l-1.81,-0.26l0.56,-1.18l-0.61,-2.1l-0.72,-0.1l-1.14,1.82l-0.9,0.21l0.63,-0.82l0.36,-1.55l0.92,-1.31l-0.13,-2.34l-0.7,-0.22l-2.0,2.34l-1.51,0.93l-0.94,2.01l-1.35,-0.81l-0.02,-1.52l-1.57,-2.04l-1.09,-0.88l0.24,-0.33l-0.14,-0.59l-3.21,-1.69l-1.83,-0.12l-2.54,-1.35l-4.58,0.28l-6.02,1.9l-2.53,-0.13l-2.62,1.41l-2.13,0.63l-1.49,2.6l-3.49,0.31l-2.29,-0.5l-3.48,0.43l-1.6,1.47l-0.81,-0.04l-2.37,1.63l-3.26,-0.1l-3.72,-2.21l0.04,-1.05l1.19,-0.46l0.49,-0.89l0.21,-2.97l-0.28,-1.64l-1.34,-2.86l-0.38,-1.47l0.05,-1.72l-0.95,-1.7l-0.18,-0.97l-1.01,-0.99l-0.29,-1.98l-1.13,-1.75ZM801.41,293.04l0.5,0.29l0.26,0.27l-0.49,-0.35l-0.27,-0.21ZM803.17,294.58l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,298.41l0.52,0.75l1.43,-0.19l2.27,-1.81l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,303.55l2.31,1.8l1.59,2.61l1.34,0.13l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.65l2.25,1.05l-1.22,0.13l-0.72,-0.63l-4.56,-0.65l-3.22,-2.87l-1.49,-2.34l-3.27,-1.1l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.55l-1.55,0.68l-1.36,-0.4l-2.21,-0.09l-0.08,-15.41l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.49l0.31,0.68l-1.76,0.21l-0.33,0.52l0.55,1.68ZM784.92,393.44l2.65,1.02l3.23,-0.96l1.09,0.14l0.15,3.06l-0.85,1.13l-0.17,1.63l-0.87,-0.24l-1.57,1.91l-1.68,-0.18l-1.4,-2.36l-0.37,-2.04l-1.39,-2.51l0.04,-0.8l1.15,0.18Z\",\n            name: \"Oceania\"\n          },\n          AS: {\n            path: \"M781.12,166.87l1.81,0.68l1.62,-0.97l0.39,2.42l-3.35,0.75l-2.23,2.88l-3.63,-1.9l-0.56,0.2l-1.26,3.05l-2.16,0.03l-0.29,-2.51l1.08,-2.03l2.45,-0.16l0.37,-0.33l1.25,-5.94l2.47,2.71l2.03,1.12ZM773.56,187.34l-0.91,2.22l0.37,1.52l-1.14,1.75l-3.02,1.26l-4.58,0.27l-3.34,3.01l-1.25,-0.8l-0.09,-1.9l-0.46,-0.38l-4.35,0.62l-3.0,1.32l-2.85,0.05l-0.37,0.27l0.13,0.44l2.32,1.89l-1.54,4.34l-1.26,0.9l-0.79,-0.7l0.56,-2.27l-0.21,-0.45l-1.47,-0.75l-0.74,-1.4l2.12,-0.84l1.26,-1.7l2.45,-1.42l1.83,-1.91l4.78,-0.81l2.6,0.57l0.44,-0.21l2.39,-4.66l1.29,1.06l0.5,0.01l5.1,-4.02l1.69,-3.73l-0.38,-3.4l0.9,-1.61l2.14,-0.44l1.23,3.72l-0.07,2.18l-2.23,2.84l-0.04,3.16ZM756.47,287.89l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.12l-1.75,-1.54l-2.54,-0.51l-0.88,0.71l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.21l-5.04,-2.29l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.6l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM507.76,203.05l2.4,-6.23l1.29,-2.09l-0.18,-2.26l0.53,-1.48l-0.74,-1.04l0.79,-1.3l-0.41,-0.2l-1.43,0.23l-2.0,-0.63l-2.02,1.65l-3.51,0.3l-2.13,-1.53l-2.7,-0.1l-0.86,1.24l-1.38,0.27l-2.29,-1.44l-2.71,-0.01l-1.37,-2.65l-1.68,-1.52l1.07,-1.99l-0.09,-0.49l-1.27,-1.12l2.37,-2.41l3.7,-0.11l1.28,-2.24l4.49,0.37l3.21,-1.97l2.81,-0.82l3.99,-0.06l4.29,2.07l3.64,1.17l3.05,-0.44l2.34,0.22l2.96,-1.56l0.57,-1.75l-0.76,-2.26l-1.45,-1.12l-1.43,-0.39l-0.41,-0.42l5.29,0.89l4.07,2.01l1.41,-0.44l2.07,0.56l0.86,1.26l2.25,0.81l1.84,1.84l1.53,0.01l1.52,-1.61l2.3,3.34l1.43,0.43l-1.26,0.15l-0.35,0.32l-0.8,3.14l-0.99,0.96l0.09,1.56l0.79,2.14l2.56,0.83l1.87,1.48l3.69,0.49l3.91,-0.76l0.54,-0.93l-0.44,-2.2l0.36,-2.98l-0.22,-0.4l-1.65,-0.84l0.54,-1.69l-0.34,-0.52l-1.22,-0.13l0.36,-1.64l2.22,0.59l2.2,-0.95l0.12,-0.65l-1.77,-1.74l-0.69,-1.64l-0.51,-0.22l-2.02,0.77l-0.33,0.96l-0.29,-1.01l0.56,-1.48l-0.48,-1.05l-2.96,-1.19l-1.06,-2.58l-1.37,-0.87l-0.03,-0.3l1.95,0.23l0.45,-0.38l0.08,-1.96l1.75,-0.41l2.1,0.45l0.48,-0.33l0.45,-3.04l-0.45,-2.09l-0.41,-0.31l-2.42,0.15l-2.36,-0.73l-2.87,1.37l-2.17,0.61l-0.85,-0.34l0.13,-1.61l-1.6,-2.12l-2.02,-0.08l-1.78,-1.82l1.29,-2.18l-0.57,-0.95l1.62,-2.91l2.21,1.63l0.63,-0.27l0.29,-2.22l4.92,-3.43l3.71,-0.08l8.4,3.6l2.92,-1.36l3.77,-0.06l3.11,1.66l0.51,-0.11l0.6,-0.81l3.31,0.13l0.39,-0.25l0.63,-1.57l-0.17,-0.5l-3.5,-1.98l1.87,-1.27l-0.13,-1.03l1.98,-0.72l0.18,-0.62l-1.59,-2.06l0.81,-0.82l9.23,-1.18l1.33,-0.88l6.18,-1.26l2.26,-1.42l4.08,0.68l0.73,3.33l0.51,0.3l2.48,-0.8l2.79,1.02l-0.17,1.56l0.43,0.44l2.55,-0.24l4.89,-2.53l0.03,0.32l3.15,2.61l5.56,8.47l0.65,0.02l1.12,-1.46l3.15,1.74l3.76,-0.78l1.15,0.49l1.14,1.8l1.84,0.76l0.99,1.29l3.35,-0.25l1.19,1.78l0.44,0.16l3.72,-0.87l4.75,-2.8l3.62,-1.47l2.18,0.97l2.46,0.05l1.81,1.53l2.46,0.12l3.95,0.71l2.43,-2.28l0.08,-0.48l-0.9,-1.72l2.24,-2.98l2.62,1.27l4.94,1.17l0.68,2.53l3.56,1.38l5.67,-1.0l2.37,0.41l2.34,1.5l1.79,1.75l2.29,-0.03l3.32,0.5l2.27,-0.79l3.41,-0.59l3.53,-2.21l1.25,0.29l1.53,1.13l2.89,-0.26l3.27,1.17l3.53,-2.06l0.18,-1.68l2.16,-3.35l1.34,-1.03l0.13,-2.18l-1.07,-0.85l1.54,-1.26l2.98,-0.59l3.23,-0.09l3.64,0.99l2.04,1.16l3.29,6.71l0.92,3.19l4.57,1.3l2.8,2.17l0.98,2.9l0.38,0.27l3.8,0.0l2.32,-1.28l3.29,-0.75l-0.96,2.09l-1.02,1.28l-0.85,3.4l-1.52,2.73l-2.76,-0.5l-2.4,1.13l-0.21,0.45l0.64,2.57l-0.32,3.2l-0.94,0.06l-0.37,0.4l0.02,1.51l-0.47,0.08l-1.88,2.1l0.01,2.14l-1.06,0.54l-1.41,1.4l-1.7,0.52l-1.25,1.09l-0.14,1.98l2.28,1.66l2.11,3.34l0.58,1.76l0.02,3.12l-0.8,1.32l-2.21,0.55l-1.93,1.13l-1.8,0.19l-0.2,-1.1l0.43,-2.28l-0.95,-2.56l1.43,-0.37l0.23,-0.62l-1.88,-2.61l-1.22,-0.55l-0.88,0.62l-1.21,-0.88l1.12,-1.65l-0.16,-0.38l0.57,-1.43l-0.16,-0.76l-3.12,-1.37l-3.5,0.86l-1.93,1.4l-1.15,0.34l0.33,-0.7l-0.41,-0.89l1.79,-1.79l0.02,-0.54l-1.32,-1.56l-0.48,-0.1l-2.24,1.09l-2.83,2.06l-1.51,1.83l-2.28,0.13l-1.55,1.49l-0.04,0.5l1.32,1.97l2.0,0.58l0.31,1.35l1.98,0.84l3.0,-1.96l2.0,1.02l1.49,0.11l0.22,0.83l-3.37,0.86l-1.12,1.48l-2.5,1.52l-1.29,1.99l0.14,0.56l2.57,1.48l0.97,2.7l3.17,4.63l-0.03,1.66l-1.35,0.65l-0.2,0.51l0.6,1.47l1.4,0.91l-0.33,1.93l-0.56,1.89l-1.43,0.38l-3.85,6.44l-2.27,3.11l-6.78,4.57l-2.73,0.29l-1.45,1.04l-0.62,-0.61l-0.55,-0.01l-1.36,1.25l-3.39,1.27l-2.61,0.4l-1.1,2.79l-0.81,0.09l-0.49,-1.42l0.5,-0.85l-0.25,-0.59l-3.59,-0.83l-1.27,0.47l-3.34,2.24l-2.17,2.54l-0.57,2.29l4.26,6.1l2.32,1.65l1.43,1.94l1.11,4.59l-0.32,4.24l-1.93,1.54l-2.84,1.61l-2.11,2.15l-2.73,2.06l-0.59,-1.05l0.63,-1.53l-0.13,-0.47l-1.86,-1.44l-2.12,-0.42l-2.32,-3.93l-2.25,-1.17l-1.84,-0.01l0.28,-1.52l-0.4,-0.47l-2.21,0.01l-0.4,0.37l-0.19,2.74l-2.15,5.89l0.15,2.0l0.38,0.36l1.38,0.07l0.9,2.04l0.44,2.14l1.5,1.64l1.61,0.38l3.23,2.94l0.98,1.56l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.67l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.59,-1.31l-1.0,-1.0l-0.48,-1.3l-2.56,-2.63l-0.73,0.41l0.96,-3.92l-0.21,-1.94l0.71,-2.19l-0.78,-1.4l0.19,-2.65l-1.05,-1.53l-1.24,-6.17l-1.12,-2.26l-0.6,-0.13l-4.34,3.02l-2.39,-0.65l0.77,-2.84l-0.57,-2.74l-1.86,-2.83l0.25,-0.75l-0.29,-0.51l-1.33,-0.3l-1.66,-1.99l-0.66,-1.26l-0.64,-2.62l-1.4,-1.79l-2.31,-0.11l-0.41,0.48l0.2,0.94l-0.53,0.99l-0.72,-0.36l-0.68,0.35l-1.45,-0.43l-0.47,0.25l-0.26,0.69l-4.58,0.52l-0.33,0.42l0.13,1.8l-1.17,1.36l-3.65,1.81l-2.79,3.03l-4.32,3.28l-0.18,1.27l-4.65,1.79l-0.77,2.16l0.64,5.3l-1.06,2.49l-0.01,3.94l-1.24,0.28l-1.14,1.93l0.39,0.84l-1.68,0.53l-1.04,1.83l-0.65,0.47l-2.06,-2.05l-2.1,-6.02l-2.2,-3.64l-1.05,-4.75l-2.29,-3.57l-1.76,-8.2l0.01,-3.11l-0.49,-2.53l-0.55,-0.29l-3.53,1.52l-1.53,-0.27l-2.86,-2.77l0.85,-0.67l0.08,-0.55l-0.74,-1.03l-3.02,-2.33l-1.77,-0.67l-0.76,-1.87l-2.27,-2.15l-12.15,0.92l-9.98,-1.73l-0.99,-3.05l-1.43,-0.73l-2.17,0.46l-2.47,1.26l-2.83,-0.82l-2.46,-2.02l-2.41,-0.8l-3.42,-6.06l-0.48,-0.2l-1.18,0.39l-1.44,-0.82l-0.5,0.08l-0.8,0.92l-1.28,-0.12l-0.4,0.56l0.46,1.06l-0.17,0.76l1.79,4.4l1.29,0.76l0.51,0.99l1.56,1.03l-0.1,1.9l1.78,3.24l0.47,0.18l0.28,-0.42l-0.16,-1.83l0.84,-1.29l0.47,0.52l0.04,1.34l-0.5,1.8l0.98,1.49l0.48,0.34l1.91,-0.41l3.53,0.15l5.66,-5.51l-0.39,0.93l0.34,2.11l1.18,1.96l1.66,1.15l3.15,0.78l1.73,2.29l0.81,0.57l-1.22,2.15l-1.1,0.92l-0.81,1.55l-0.86,-0.1l-0.88,0.76l-0.48,1.46l0.25,1.77l-1.16,0.05l-1.56,0.97l-0.76,1.74l-1.39,-0.02l-1.21,0.72l-0.17,1.15l-0.89,0.52l-1.49,-0.18l-1.61,0.84l-2.99,0.85l-0.78,2.12l-6.23,2.16l-2.29,1.8l-1.93,0.05l-1.41,1.02l-4.24,0.74l-1.72,1.49l-3.28,0.19l-0.52,-1.18l0.02,-1.51l-1.34,-3.29l0.26,-0.42l-0.07,-2.81l-0.32,-1.1l-0.77,-0.85l-0.17,-0.91l-1.39,-1.13l-1.27,-2.06l-0.78,-2.22l-1.73,-1.79l-1.14,-0.48l-1.54,-2.31l-0.21,-3.41l-1.44,-2.93l-1.27,-1.16l-1.33,-0.57l-1.31,-3.37l-0.77,-0.67l-0.97,-1.97l-2.8,-4.03l-1.06,-0.17l0.68,-3.21l-1.67,-4.96l0.59,-0.74l-0.03,-0.41ZM757.78,196.26l0.19,0.56l-1.01,1.21l-1.16,-0.68l-1.28,0.65l-0.69,1.45l-1.02,-0.5l0.01,-0.93l1.14,-1.38l1.57,0.14l0.85,-0.98l1.4,0.46ZM757.91,300.34l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,292.98l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,285.25l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,293.5l-0.5,0.44l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM730.55,310.47l1.11,-1.93l2.37,-0.96l0.42,-0.63l4.5,-0.86l-4.9,2.0l-1.72,1.91l-1.77,0.46ZM737.01,263.84l0.39,2.97l-0.44,1.18l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.09l-0.42,0.69l-2.48,-1.23l-0.57,-1.49l0.65,-1.03l-0.1,-0.54l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.8l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.11l1.5,-0.06l0.38,-0.43l-0.09,-1.19l1.21,0.71l0.36,2.02ZM733.59,256.58l0.05,0.75l0.08,0.26l-0.8,-0.42l-0.18,-0.71l0.85,0.12ZM734.08,256.1l-0.12,-1.12l-1.0,-1.27l1.36,0.03l0.53,0.73l0.51,2.04l-1.27,-0.4ZM733.76,257.68l0.38,0.98l-0.32,0.15l-0.07,-1.13ZM721.45,284.51l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.74l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.23l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.17l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,296.27l0.38,0.49l-0.02,1.28l-0.88,0.49l-0.53,-0.47l1.04,-1.79ZM729.04,286.98l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,284.05l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM724.65,238.43l1.46,0.7l0.72,-0.31l-0.32,1.17l0.79,1.71l-0.57,1.84l-1.53,1.04l-0.39,2.25l0.56,2.04l1.63,0.57l1.16,-0.27l2.71,1.23l-0.19,1.08l0.76,0.84l-0.08,0.36l-1.4,-0.9l-0.88,-1.27l-0.66,0.0l-0.38,0.55l-1.6,-1.31l-2.15,0.36l-0.87,-0.39l0.07,-0.61l0.66,-0.55l-0.01,-0.62l-0.75,-0.59l-0.72,0.44l-0.74,-0.87l-0.39,-2.49l0.32,0.27l0.66,-0.28l0.26,-3.97l0.7,-2.02l1.14,0.0ZM731.03,258.87l-0.88,0.85l-1.19,1.94l-1.05,-1.19l0.93,-1.1l0.32,-1.47l0.52,-0.06l-0.27,1.15l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.85ZM726.83,255.78l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.4l0.03,-2.26ZM728.12,305.88l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM724.01,226.68l-0.74,1.48l-0.9,-1.52l-0.25,-1.74l1.38,-2.44l1.73,-1.74l0.64,0.44l-1.85,5.52ZM724.81,252.09l-0.38,1.27l-1.42,-1.95l1.2,0.05l0.6,0.63ZM722.9,310.24l-0.64,0.03l-2.26,-1.2l1.11,-0.24l1.78,1.41ZM716.55,261.82l1.1,-0.95l0.03,-0.03l-0.28,0.36l-0.85,0.61ZM719.22,259.06l0.04,-0.06l0.8,-1.53l0.16,0.75l-1.0,0.84ZM711.66,293.84l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l1.21,-1.35l1.83,0.76l1.93,-0.47l0.75,-2.22l4.02,-1.03l3.03,-3.57l5.02,-4.03l1.21,-1.86l0.63,-0.01l1.07,1.05l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88l-1.68,0.85l-1.42,2.26l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM716.26,305.77l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.39,-0.67l1.15,-0.02l0.75,-0.73ZM692.58,302.03l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.68l3.69,0.45l2.13,1.04l-1.8,0.6l-2.77,-0.99l-4.8,-0.12l-5.24,-1.41l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.65l2.74,0.13l2.87,1.13l0.26,0.68ZM696.92,237.31l-1.87,1.08l-1.63,-0.64l-0.06,-1.79l1.03,-0.98l2.58,-0.69l1.16,0.05l0.3,0.54l-0.98,1.06l-0.53,1.37ZM685.53,299.17l-2.22,0.04l-2.06,-2.03l-3.15,-2.01l-2.93,-3.51l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.5ZM624.16,268.99l-1.82,0.48l-0.99,-1.67l-0.42,-3.46l0.95,-3.43l1.21,0.98l2.26,4.19l-0.34,2.33l-0.85,0.58ZM505.52,192.81l0.09,0.58l-2.1,0.94l-0.92,-0.28l-0.24,-0.46l0.77,-0.07l0.57,-0.68l1.82,-0.04ZM488.79,176.72l-1.72,1.31l-0.5,-0.88l1.37,-2.57l-0.7,-0.85l1.7,-0.63l1.8,0.34l0.46,1.17l1.76,0.78l-2.87,0.32l-1.3,1.01Z\",\n            name: \"Asia\"\n          },\n          EU: {\n            path: \"M402.36,187.15l-1.16,0.7l-1.13,-0.35l-0.91,0.17l0.28,-1.78l-0.24,-1.78l-1.25,-0.56l-0.45,-0.84l0.17,-1.66l1.01,-1.18l0.7,-3.05l-0.66,-3.34l0.12,-2.11l-0.83,-1.23l3.03,-1.88l2.99,0.53l3.32,-0.02l2.73,0.52l6.42,-0.23l1.37,-2.03l0.39,-6.45l-2.58,-3.3l-1.9,-1.66l-3.72,-1.23l-0.19,-1.72l2.81,-0.61l4.12,0.81l0.47,-0.48l-0.6,-2.77l1.94,0.95l5.83,-2.54l0.92,-2.74l3.99,-1.26l1.4,-0.97l2.26,-4.97l3.2,-1.33l1.99,0.09l0.73,-0.74l1.66,-0.15l0.33,0.54l0.62,0.07l1.7,-1.69l0.08,-0.45l-0.54,-1.22l-0.16,-2.06l-0.97,-1.85l-0.07,-3.43l0.96,-1.73l2.02,-0.2l1.09,-1.07l1.33,-0.67l-0.05,1.06l-0.73,1.41l0.3,1.0l1.2,0.64l-0.26,0.57l-0.88,-0.07l-1.85,2.92l0.65,1.63l0.04,1.27l0.28,0.37l2.25,0.71l-0.02,0.92l0.5,0.4l2.55,-0.65l1.34,-0.87l4.18,2.34l1.69,-0.99l6.91,-2.71l2.14,0.5l0.52,0.91l2.41,0.04l0.38,-0.26l0.5,-1.34l3.27,-1.07l0.27,-0.45l-0.52,-2.91l0.08,-2.53l1.13,-2.06l1.95,-1.02l2.12,2.58l2.01,-0.07l0.38,-0.33l0.77,-4.92l-0.58,-0.41l-0.69,0.34l-1.26,-1.03l-0.17,-1.63l2.83,-0.92l3.05,-0.52l2.64,0.6l2.69,-0.1l3.06,-2.14l-0.01,-0.65l-2.87,-1.86l-4.64,0.32l-4.38,1.37l-3.8,0.74l-1.44,-1.96l-2.17,-1.11l0.5,-3.66l-1.16,-3.33l1.09,-2.08l2.21,-2.42l5.67,-4.32l1.64,-0.83l0.21,-0.42l-0.46,-2.02l-3.78,-1.99l-4.51,1.3l-2.43,2.86l0.26,2.57l-8.77,6.64l-1.78,5.79l1.78,2.68l2.22,1.96l-2.07,3.77l-2.72,1.13l-0.95,6.04l-1.29,3.01l-2.74,-0.31l-0.4,0.22l-1.31,2.59l-2.34,0.13l-0.75,-3.09l-2.08,-4.03l-1.9,-5.12l-1.73,-2.37l-0.58,-0.07l-4.87,4.19l-3.1,0.79l-3.16,-1.7l-0.85,-3.77l-0.77,-8.55l2.14,-2.31l6.55,-3.27l5.02,-4.17l10.63,-13.84l10.98,-8.7l5.35,-1.91l4.34,0.12l3.69,-3.64l4.49,0.19l4.37,-0.89l6.8,2.89l-2.29,0.86l-0.15,0.65l2.74,2.81l0.44,0.09l2.42,-1.45l4.06,2.61l6.79,1.04l9.34,4.85l1.78,1.88l0.14,2.46l-2.55,2.02l-3.9,1.06l-11.07,-3.14l-2.06,0.53l-0.13,0.7l3.94,2.94l0.31,5.86l0.26,0.36l5.14,2.24l0.58,-0.29l0.32,-1.94l-1.35,-1.78l1.13,-1.09l6.13,2.42l2.11,-0.98l0.18,-0.56l-1.51,-2.67l5.41,-3.76l2.07,0.22l2.26,1.41l0.57,-0.16l1.46,-2.87l-0.05,-0.44l-1.92,-2.32l1.12,-2.32l-1.32,-2.27l5.87,1.16l1.04,1.75l-2.59,0.43l-0.33,0.4l0.02,2.36l2.46,1.83l3.87,-0.91l0.86,-2.8l13.69,-5.65l0.99,0.11l-1.92,2.06l0.23,0.67l3.11,0.45l2.0,-1.48l4.56,-0.12l3.64,-1.73l2.65,2.44l0.56,-0.01l2.85,-2.88l-0.01,-0.57l-2.35,-2.29l0.9,-1.01l7.14,1.3l3.41,1.36l9.05,4.97l0.51,-0.11l1.67,-2.27l-0.05,-0.53l-2.43,-2.21l-0.06,-0.78l-0.34,-0.36l-2.52,-0.36l0.64,-1.93l-1.32,-3.46l-0.06,-1.21l4.48,-4.06l1.69,-4.29l1.6,-0.81l6.23,1.18l0.44,2.21l-2.29,3.64l0.06,0.5l1.47,1.39l0.76,3.0l-0.56,6.03l2.69,2.82l-0.96,2.57l-4.86,5.95l0.23,0.64l2.86,0.61l0.42,-0.17l0.93,-1.4l2.64,-1.03l0.87,-2.24l2.09,-1.96l0.07,-0.5l-1.36,-2.28l1.09,-2.69l-0.32,-0.55l-2.47,-0.33l-0.5,-2.06l1.94,-4.38l-0.06,-0.42l-2.96,-3.4l4.12,-2.88l0.16,-0.4l-0.51,-2.93l0.54,-0.05l1.13,2.25l-0.96,4.35l0.27,0.47l2.68,0.84l0.5,-0.51l-1.02,-2.99l3.79,-1.66l5.01,-0.24l4.53,2.61l0.48,-0.06l0.07,-0.48l-2.18,-3.82l-0.23,-4.67l3.98,-0.9l5.97,0.21l5.49,-0.64l0.27,-0.65l-1.83,-2.31l2.56,-2.9l2.87,-0.17l4.8,-2.47l6.54,-0.67l1.03,-1.42l6.25,-0.45l2.32,1.11l5.53,-2.7l4.5,0.08l0.39,-0.28l0.66,-2.15l2.26,-2.12l5.69,-2.11l3.21,1.29l-2.46,0.94l-0.25,0.42l0.34,0.35l5.41,0.77l0.61,2.33l0.58,0.25l2.2,-1.22l7.13,0.07l5.51,2.47l1.79,1.72l-0.53,2.24l-9.16,4.15l-1.97,1.52l0.16,0.71l6.77,1.91l2.16,-0.78l1.13,2.74l0.67,0.11l1.01,-1.15l3.81,-0.73l7.7,0.77l0.54,1.99l0.36,0.29l10.47,0.71l0.43,-0.38l0.13,-3.23l4.87,0.78l3.95,-0.02l3.83,2.4l1.03,2.71l-1.35,1.79l0.02,0.5l3.15,3.64l4.07,1.96l0.53,-0.18l2.23,-4.47l3.95,1.93l4.16,-1.21l4.73,1.39l2.05,-1.26l3.94,0.62l0.43,-0.55l-1.68,-4.02l2.89,-1.8l22.31,3.03l2.16,2.75l6.55,3.51l10.29,-0.81l4.82,0.73l1.85,1.66l-0.29,3.08l0.25,0.41l3.08,1.26l3.56,-0.88l4.35,-0.11l4.8,0.87l4.57,-0.47l4.23,3.79l0.43,0.07l3.1,-1.4l0.16,-0.6l-1.88,-2.62l0.85,-1.52l7.71,1.21l5.22,-0.26l7.09,2.09l9.59,5.22l6.35,4.11l-0.2,2.38l1.88,1.41l0.6,-0.42l-0.48,-2.53l6.15,0.57l4.4,3.51l-1.97,1.43l-4.0,0.41l-0.36,0.39l-0.06,3.79l-0.74,0.62l-2.07,-0.11l-1.91,-1.39l-3.14,-1.11l-0.78,-1.85l-2.72,-0.68l-2.63,0.49l-1.04,-1.1l0.46,-1.31l-0.5,-0.51l-3.0,0.98l-0.22,0.58l0.99,1.7l-1.21,1.48l-3.04,1.68l-3.12,-0.28l-0.4,0.23l0.09,0.46l2.2,2.09l1.46,3.2l1.15,1.1l0.24,1.33l-0.42,0.67l-4.63,-0.77l-6.96,2.9l-2.19,0.44l-7.6,5.06l-0.84,1.45l-3.61,-2.37l-6.24,2.82l-0.94,-1.15l-0.53,-0.08l-2.28,1.52l-3.2,-0.49l-0.44,0.27l-0.78,2.37l-3.05,3.78l0.09,1.47l0.29,0.36l2.54,0.72l-0.29,4.53l-1.97,0.11l-0.35,0.26l-1.07,2.94l0.8,1.45l-3.91,1.58l-1.05,3.95l-3.48,0.77l-0.3,0.3l-0.72,3.29l-3.09,2.65l-0.7,-1.74l-2.44,-12.44l1.16,-4.71l2.04,-2.06l0.22,-1.64l3.8,-0.86l4.46,-4.61l4.28,-3.81l4.48,-3.01l2.17,-5.63l-0.42,-0.54l-3.04,0.33l-1.77,3.31l-5.86,3.86l-1.86,-4.25l-0.45,-0.23l-6.46,1.3l-6.47,6.44l-0.01,0.55l1.58,1.74l-8.24,1.17l0.15,-2.2l-0.34,-0.42l-3.89,-0.56l-3.25,1.81l-7.62,-0.62l-8.45,1.19l-17.71,15.41l0.22,0.7l3.74,0.41l1.36,2.17l2.43,0.76l1.88,-1.68l2.4,0.2l3.4,3.54l0.08,2.6l-1.95,3.42l-0.21,3.9l-1.1,5.06l-3.71,4.54l-0.87,2.21l-8.29,8.89l-3.19,1.7l-1.32,0.03l-1.45,-1.36l-0.49,-0.04l-2.27,1.5l0.41,-3.65l-0.59,-2.47l1.75,-0.89l2.91,0.53l0.42,-0.2l1.68,-3.03l0.87,-3.46l0.97,-1.18l1.32,-2.88l-0.45,-0.56l-4.14,0.95l-2.19,1.25l-3.41,-0.0l-1.06,-2.93l-2.97,-2.3l-4.28,-1.06l-1.75,-5.07l-2.66,-5.01l-2.29,-1.29l-3.75,-1.01l-3.44,0.08l-3.18,0.62l-2.24,1.77l0.05,0.66l1.18,0.69l0.02,1.43l-1.33,1.05l-2.26,3.51l-0.04,1.43l-3.16,1.84l-2.82,-1.16l-3.01,0.23l-1.35,-1.07l-1.5,-0.35l-3.9,2.31l-3.22,0.52l-2.27,0.79l-3.05,-0.51l-2.21,0.03l-1.48,-1.6l-2.6,-1.63l-2.63,-0.43l-5.46,1.01l-3.23,-1.25l-0.72,-2.57l-5.2,-1.24l-2.75,-1.36l-0.5,0.12l-2.59,3.45l0.84,2.1l-2.06,1.93l-3.41,-0.77l-2.42,-0.12l-1.83,-1.54l-2.53,-0.05l-2.42,-0.98l-3.86,1.57l-4.72,2.78l-3.3,0.75l-1.55,-1.92l-3.0,0.41l-1.11,-1.33l-1.62,-0.59l-1.31,-1.94l-1.38,-0.6l-3.7,0.79l-3.31,-1.83l-0.51,0.11l-0.99,1.29l-5.29,-8.05l-2.96,-2.48l0.65,-0.77l0.01,-0.51l-0.5,-0.11l-6.2,3.21l-1.84,0.15l0.15,-1.39l-0.26,-0.42l-3.22,-1.17l-2.46,0.7l-0.69,-3.16l-0.32,-0.31l-4.5,-0.75l-2.47,1.47l-6.19,1.27l-1.29,0.86l-9.51,1.3l-1.15,1.17l-0.03,0.53l1.47,1.9l-1.89,0.69l-0.22,0.56l0.31,0.6l-2.11,1.44l0.03,0.68l3.75,2.12l-0.39,0.98l-3.23,-0.13l-0.86,0.86l-3.09,-1.59l-3.97,0.07l-2.66,1.35l-8.32,-3.56l-4.07,0.06l-5.39,3.68l-0.39,2.0l-2.03,-1.5l-0.59,0.13l-2.0,3.59l0.57,0.93l-1.28,2.16l0.06,0.48l2.13,2.17l1.95,0.04l1.37,1.82l-0.23,1.46l0.25,0.43l0.83,0.33l-0.8,1.31l-2.49,0.62l-2.49,3.2l0.0,0.49l2.17,2.78l-0.15,2.18l2.5,3.24l-1.58,1.59l-0.7,-0.13l-1.63,-1.72l-2.29,-0.84l-0.94,-1.31l-2.34,-0.63l-1.48,0.4l-0.43,-0.47l-3.51,-1.48l-5.76,-1.01l-0.45,0.19l-2.89,-2.34l-2.9,-1.2l-1.53,-1.29l1.29,-0.43l2.08,-2.61l-0.05,-0.55l-0.89,-0.79l3.05,-1.06l0.2,-1.11l-0.49,-0.35l-4.21,0.76l-1.74,1.03l-2.41,0.21l-2.16,1.17l-0.21,0.38l0.34,2.26l1.46,0.81l1.89,-0.14l-0.14,0.31l-2.65,0.53l-3.23,1.69l-0.87,-0.39l0.42,-1.1l-0.25,-0.52l-2.21,-0.73l2.35,-1.06l0.12,-0.65l-0.73,-0.72l-3.82,-0.84l-0.13,-0.89l-0.46,-0.34l-2.32,0.39l-3.11,4.17l-0.05,0.83l-0.83,0.45l-0.59,-0.22l-0.54,0.3l-0.68,3.58l-1.3,1.31l-0.91,2.17l0.48,1.34l-1.6,-0.24l-2.55,0.95l-0.08,0.71l0.94,0.61l-0.59,1.43l-0.37,0.21l-2.84,-0.35l-3.03,0.77l-0.18,0.68l1.28,1.23l-1.75,0.23l-1.2,-1.39l-0.63,0.03l-0.47,0.65l0.5,2.12l1.03,1.19l-0.56,0.38l-0.05,0.62l2.52,2.12l0.02,0.87l-1.78,-0.59l-0.48,0.56l0.5,1.0l-1.07,0.2l-0.3,0.53l0.75,2.01l-0.98,0.02l-1.84,-1.12l-1.37,-4.2l-2.21,-2.95l-0.79,-1.85l-1.25,-0.89l-0.18,-1.2l0.45,-3.22l-1.75,-1.77l-3.42,-1.71l-1.51,-1.12l-2.21,-0.87l-1.67,-1.78l0.13,-0.63l-1.05,-1.19l-0.32,-1.27l-1.61,-0.49l-0.46,0.18l-0.46,0.8l-0.26,-1.13l0.66,-0.63l-0.31,-0.34l-1.99,-0.45l-2.32,1.14l-0.21,0.39l0.13,1.45l-0.25,1.12l0.82,1.57l2.39,1.63l1.31,2.54l2.79,2.43l2.05,0.08l0.21,0.23l-0.39,0.33l0.09,0.67l4.05,1.97l2.17,1.76l-0.16,0.36l-1.17,-1.08l-2.18,-0.49l-0.44,0.2l-1.05,1.91l0.14,0.54l1.57,0.95l-0.19,0.98l-1.06,0.33l-1.25,2.34l-0.37,0.08l0.0,-0.33l1.0,-2.45l-1.73,-3.17l-1.12,-0.51l-0.67,-1.15l-1.73,-0.69l-1.01,-1.12l-2.01,-0.31l-1.86,-1.28l-3.88,-3.59l-1.03,-3.19l-3.53,-1.36l-1.3,0.51l-1.36,1.34l-1.08,0.27l-2.13,1.62l-4.77,-0.8l-3.82,1.0l-0.58,2.15l0.11,1.64l-2.14,1.8l-3.11,0.61l-0.31,0.31l-0.2,0.89l-1.54,1.69l-0.97,2.4l0.84,1.74l-1.32,1.27l-0.48,1.68l-1.88,0.65l-1.66,2.07l-5.36,-0.01l-1.79,1.08l-0.89,0.98l-0.88,-0.17l-0.79,-0.82l-0.97,-1.82l-2.34,-0.45ZM749.2,170.72l-0.6,0.4l-0.13,0.16l-0.01,-0.51l0.74,-0.05ZM871.88,65.81l2.17,-0.13l3.19,1.16l-2.39,1.09l-5.63,0.48l-0.26,-0.84l2.92,-1.76ZM797.39,48.49l-2.0,1.36l-3.8,-0.42l-4.25,-1.8l0.35,-0.97l9.69,1.83ZM783.67,46.12l-1.63,3.09l-8.98,-0.13l-4.09,1.14l-4.54,-2.97l1.16,-3.01l3.05,-0.89l6.5,0.22l8.54,2.56ZM778.2,134.98l-0.56,-0.9l0.27,-0.12l0.29,1.01ZM778.34,135.48l0.94,3.53l-0.05,3.38l1.05,3.39l2.18,5.0l-2.89,-0.83l-0.49,0.26l-1.54,4.65l2.42,3.5l-0.04,1.13l-1.24,-1.24l-0.61,0.06l-1.09,1.61l-0.28,-1.61l0.27,-3.1l-0.28,-3.4l0.58,-2.47l0.11,-4.39l-1.46,-3.36l0.21,-4.32l2.15,-1.46l0.07,-0.34ZM771.95,56.61l1.76,-1.42l2.89,-0.42l3.28,1.71l0.14,0.6l-3.27,0.03l-4.81,-0.5ZM683.76,31.09l-13.01,1.93l4.03,-6.35l1.82,-0.56l1.73,0.34l5.99,2.98l-0.56,1.66ZM670.85,27.93l-5.08,0.64l-6.86,-1.57l-3.99,-2.05l-2.1,-4.16l-2.6,-0.87l5.72,-3.5l5.2,-1.28l4.69,2.85l5.59,5.4l-0.56,4.53ZM564.15,68.94l-0.64,0.17l-7.85,-0.57l-0.86,-2.04l-4.28,-1.17l-0.28,-1.94l2.27,-0.89l0.25,-0.39l-0.08,-2.38l4.81,-3.97l-0.15,-0.7l-1.47,-0.38l5.3,-3.81l0.15,-0.44l-0.58,-1.94l5.28,-2.51l8.21,-3.27l8.28,-0.96l4.35,-1.94l4.6,-0.64l1.36,1.61l-1.34,1.28l-16.43,4.94l-7.97,4.88l-7.74,9.63l0.66,4.14l4.16,3.27ZM548.81,18.48l-5.5,1.18l-0.58,1.02l-2.59,0.84l-2.13,-1.07l1.12,-1.42l-0.3,-0.65l-2.33,-0.07l1.68,-0.36l3.47,-0.06l0.42,1.29l0.66,0.16l1.38,-1.34l2.15,-0.88l2.94,1.01l-0.39,0.36ZM484.55,20.04l4.26,1.75l-3.1,2.55l-7.1,0.65l-7.08,-0.9l-0.37,-1.31l-0.37,-0.29l-3.44,-0.1l-2.08,-2.0l6.87,-1.44l3.9,1.31l2.39,-1.64l6.13,1.4ZM480.49,192.16l0.58,0.4l-0.68,-0.12l0.11,-0.28ZM482.52,192.82l2.51,0.06l0.24,0.32l-1.99,0.13l-0.77,-0.51ZM481.69,33.93l-4.45,1.74l-3.54,-0.99l1.12,-0.9l0.05,-0.58l-1.06,-1.22l4.22,-0.89l1.09,1.97l2.57,0.87ZM466.44,24.04l7.43,3.77l-5.41,1.86l-1.58,4.08l-2.26,1.2l-1.12,4.11l-2.61,0.18l-4.79,-2.86l1.84,-1.54l-0.1,-0.68l-3.69,-1.53l-4.77,-4.51l-1.73,-3.89l6.11,-1.82l1.54,1.92l3.57,-0.08l1.2,-1.96l3.32,-0.18l3.05,1.92ZM459.19,184.75l-0.65,1.65l0.32,1.05l-0.31,0.89l-1.5,-0.85l-4.5,-1.67l0.19,-0.82l2.67,0.23l3.78,-0.48ZM452.28,129.07l-1.19,2.24l-2.13,-1.6l-0.23,-0.95l2.98,-0.95l0.57,1.26ZM443.93,176.05l1.18,1.66l-0.3,3.32l-1.06,-0.01l-0.77,0.73l-0.53,-0.44l-0.1,-3.37l-0.39,-1.22l1.04,0.01l0.92,-0.68ZM444.48,172.62l-0.64,1.78l-0.58,-0.31l-0.49,-1.72l0.4,-0.89l1.0,-0.72l0.3,1.85ZM412.61,118.72l-2.19,3.22l-0.0,0.45l5.13,-0.3l-0.53,2.37l-2.2,3.12l0.29,0.63l2.37,0.21l2.33,4.3l1.76,0.69l2.2,5.12l2.94,0.77l-0.23,1.62l-1.15,0.88l-0.1,0.52l0.82,1.42l-1.86,1.43l-3.3,-0.02l-4.12,0.87l-1.04,-0.58l-0.47,0.06l-1.51,1.41l-2.12,-0.34l-1.86,1.18l-0.6,-0.29l3.19,-3.0l2.16,-0.69l0.28,-0.41l-0.34,-0.36l-3.73,-0.53l-0.4,-0.76l2.2,-0.87l0.17,-0.61l-1.26,-1.67l0.36,-1.7l3.38,0.28l0.43,-0.33l0.37,-1.99l-1.79,-2.49l-3.11,-0.72l-0.38,-0.59l0.79,-1.35l-0.04,-0.46l-0.82,-0.97l-0.61,0.01l-0.68,0.84l-0.1,-2.34l-1.23,-1.88l0.85,-3.47l1.77,-2.68l1.85,0.26l2.17,-0.22ZM405.09,134.93l0.34,2.55l-1.75,2.78l-4.22,1.88l-2.84,-0.4l1.73,-3.0l-1.18,-3.53l4.98,-4.07l1.81,-0.12l2.3,1.84l-1.17,2.07ZM384.14,88.06l-0.37,2.61l2.54,2.51l-2.9,2.75l-9.19,3.4l-9.25,-1.66l1.7,-1.22l-0.1,-0.7l-4.05,-1.47l2.96,-0.53l0.33,-0.43l-0.11,-1.2l-0.33,-0.36l-4.67,-0.85l1.28,-2.04l3.45,-0.56l3.77,2.72l0.44,0.02l3.64,-2.16l3.3,1.08l3.98,-2.16l3.58,0.26ZM289.01,278.39l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z\",\n            name: \"Europe\"\n          },\n          SA: {\n            path: \"M249.29,428.94l-2.5,0.04l-3.43,2.03l-0.57,3.16l-0.64,0.05l-2.68,-1.06l-2.82,-2.33l-3.04,-1.89l-0.69,-1.85l0.63,-2.14l-1.21,-2.11l-0.31,-5.37l1.01,-2.91l2.57,-2.38l-0.18,-0.68l-3.16,-0.77l2.05,-2.47l0.77,-4.65l2.32,0.9l0.54,-0.29l1.31,-6.31l-0.22,-0.44l-1.68,-0.8l-0.56,0.28l-0.7,3.36l-0.81,-0.22l1.56,-9.41l1.15,-2.24l-0.71,-2.82l-0.18,-2.84l1.01,-0.33l3.26,-9.14l1.07,-4.22l-0.56,-4.21l0.74,-2.34l-0.29,-3.27l1.46,-3.34l2.04,-16.59l-0.18,-4.34l-0.52,-3.69l-2.55,-1.68l-0.39,-1.16l-4.95,-2.58l-4.46,-2.79l-1.84,-1.51l-0.91,-1.84l0.3,-0.96l-2.11,-3.33l-4.82,-9.68l-1.04,-1.2l-0.87,-1.94l-3.4,-2.48l0.58,-1.18l-1.13,-2.23l0.66,-1.49l1.92,-1.52l1.41,-1.95l-0.51,-1.5l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.84,-1.44l0.02,-0.83l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.66,-0.43l0.39,-1.38l-0.52,-2.1l0.49,-0.83l-0.4,-2.13l-0.97,-1.35l0.17,-0.66l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.69l0.93,-0.24l0.3,-0.38l0.45,-2.76l1.22,-1.0l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.84l1.15,-1.14l0.91,0.46l-0.42,1.05l-1.19,0.24l-0.25,0.62l0.74,1.04l-0.02,1.06l-1.07,1.78l0.95,2.0l0.42,0.22l1.4,-0.44l0.56,-1.83l-0.77,-1.17l-0.1,-1.47l2.82,-0.93l0.26,-0.49l-0.28,-0.96l0.3,-0.28l0.66,1.31l1.96,0.26l1.4,1.22l0.08,0.68l0.39,0.35l4.81,-0.22l1.49,1.11l1.92,0.31l1.67,-0.84l0.22,-0.6l3.44,-0.14l-0.17,0.55l0.86,1.19l2.19,0.35l1.67,1.1l0.37,1.86l0.41,0.32l1.18,-0.05l2.48,1.44l1.41,1.49l0.06,1.15l0.37,0.38l0.8,0.05l2.23,2.01l3.2,0.6l0.57,-0.47l1.75,-0.16l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-1.19,3.03l0.17,0.57l1.09,0.52l1.06,-0.61l0.84,0.78l1.42,-0.29l1.05,-1.08l2.12,-3.92l0.37,-0.05l1.89,5.45l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l0.78,0.75l4.32,0.47l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.72l2.12,0.12l0.71,0.62l1.21,4.51l-0.95,3.98l-4.72,5.06l-1.64,2.92l-1.72,2.05l-0.8,0.3l-0.72,2.03l0.18,4.75l-0.94,5.53l-0.81,1.13l-0.43,3.36l-2.55,3.5l-0.4,2.51l-1.86,1.04l-0.67,1.53l-2.54,0.01l-3.94,1.01l-1.83,1.2l-2.87,0.82l-3.03,2.19l-2.2,2.83l-0.36,2.0l0.4,1.58l-0.44,2.6l-0.51,1.2l-1.77,1.54l-2.75,4.78l-3.95,3.58l-1.11,2.58l-1.6,1.55l-1.09,1.76l-2.59,1.44l-1.69,-0.52l-1.42,0.26l-2.18,-1.15l-1.72,0.04l-1.4,-1.43l-0.68,0.23l-0.02,1.84l2.99,2.28l-0.16,2.11l1.4,1.11l-0.1,1.09l-2.29,3.52l-3.55,1.49l-4.92,0.6l-2.71,-0.29l-0.43,0.51l0.5,1.65l-0.49,2.1l0.38,1.42l-1.19,0.83l-2.36,0.38l-2.3,-1.04l-1.38,0.83l0.41,3.64l1.69,0.91l1.4,-0.71l0.36,0.76l-2.04,0.86l-2.01,1.89l-0.97,4.63l-2.34,0.1l-2.09,1.78l-0.61,2.75l2.46,2.31l2.17,0.63l-0.7,2.32l-2.83,1.73l-1.73,3.86l-2.17,1.22l-1.16,1.67l0.75,3.76l1.04,1.28ZM274.36,425.85l1.44,1.08l-0.47,0.73l-3.0,0.89l-0.96,-1.0l-0.52,-0.05l-1.83,1.29l-0.73,-0.88l2.46,-1.64l1.93,0.76l1.67,-1.19ZM253.56,437.92l-0.62,0.09l-0.77,1.31l-1.94,0.98l-2.49,-0.37l-1.88,-1.06l-2.55,-0.49l-3.08,-1.89l-2.51,-1.82l-2.38,-2.63l4.1,2.48l3.32,1.23l0.45,-0.12l1.29,-1.57l0.83,-2.32l2.05,-1.24l1.46,0.33l2.25,4.11l3.26,2.07l3.08,0.78l-0.71,1.1l-2.0,0.15l-1.15,-1.11Z\",\n            name: \"South America\"\n          }\n        },\n        height: 440.7063107441331,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 11.5\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"es_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 738.0097895570743,\n          bbox: [{\n            y: -5213399.331391313,\n            x: -2023392.062741889\n          }, {\n            y: -3158091.8374794754,\n            x: 483047.242935642\n          }],\n          left: 0\n        }],\n        paths: {\n          \"ES-NA\": {\n            path: \"M644.33,66.96l0.33,-0.47l-0.06,-0.57l-1.06,-0.77l-4.56,-0.01l-3.42,-2.25l-2.68,0.3l-2.09,-0.61l0.41,-2.88l-0.35,-1.55l-1.11,-0.54l-1.2,1.07l-1.22,-0.54l-0.1,-0.43l3.06,-2.27l0.65,0.13l0.78,0.88l0.95,0.06l0.99,-0.29l1.52,-1.05l0.06,-0.84l-0.77,-0.62l-0.3,-1.84l1.14,-0.52l0.49,-0.59l0.2,-1.93l1.29,-2.35l0.12,-1.11l-0.51,-1.86l0.76,-1.53l0.86,-0.61l1.15,0.35l2.13,-0.29l1.26,-1.32l1.85,-0.67l0.48,-0.95l-0.04,-1.13l0.94,-1.72l3.01,-1.84l1.13,-1.56l-0.22,-2.6l0.26,-1.09l0.8,0.16l0.52,-0.71l0.94,0.15l0.7,-0.33l2.4,-2.91l3.7,-0.68l0.83,0.39l0.29,1.71l1.01,0.69l1.61,-0.26l1.05,-1.53l1.81,0.33l1.64,0.76l1.38,-0.17l0.92,0.84l0.13,1.56l-0.99,3.29l-2.12,2.14l-0.38,0.83l0.58,1.16l1.71,1.26l2.23,0.36l0.82,-0.21l0.58,-0.85l0.38,-2.22l1.18,-0.76l-0.59,1.16l0.28,0.82l0.68,0.69l0.98,0.52l2.26,0.36l2.57,1.56l1.68,-0.04l1.32,0.71l1.88,0.29l1.87,1.41l1.64,0.49l3.27,0.25l3.08,-0.48l0.81,0.25l0.27,0.63l-2.17,0.86l-0.53,1.38l-1.12,1.36l-0.77,3.72l-3.77,2.8l-2.51,0.76l-0.37,0.45l-0.42,1.76l-4.02,0.43l-0.5,1.1l-0.42,0.14l-0.15,0.69l0.41,0.25l-0.95,0.56l-0.89,1.33l-0.53,0.24l-1.43,-0.09l-0.93,1.14l-0.3,1.02l0.45,1.24l-2.74,3.48l-0.3,1.88l0.7,0.96l-2.06,2.62l-1.33,3.98l0.08,0.95l0.72,1.23l0.23,2.88l1.69,2.33l1.42,0.67l-0.31,1.0l-3.58,5.5l-2.79,-0.62l-2.55,0.54l-3.27,-2.18l-0.96,-0.24l-1.68,0.34l-1.0,-0.41l-1.46,-1.26l-3.45,-0.56l-1.34,-1.01l-0.34,-0.79l0.15,-1.16l2.77,-3.2l1.47,0.33l1.44,-0.35l1.32,0.5l1.26,-0.44l0.11,-2.06l-0.34,-1.72l-1.38,-1.1l-2.75,-1.2l-1.35,-1.02l-1.06,-0.0l-0.29,-1.31l-1.47,-0.96l-2.98,-3.22l-2.46,-0.12l-1.0,-0.59ZM683.47,65.61l-1.86,-0.44l0.31,-0.84l0.41,-0.32l0.27,0.9l0.88,0.7ZM679.34,67.04l-0.19,-0.41l0.68,-0.41l-0.23,0.57l-0.27,0.25Z\",\n            name: \"Navarra\"\n          },\n          \"ES-B\": {\n            path: \"M793.32,86.52l1.15,-1.57l0.06,-2.01l0.9,-0.59l-0.18,-2.03l1.18,-1.52l-0.29,-1.3l-1.59,-1.0l-0.28,-1.88l1.1,-1.25l7.73,-1.42l0.82,0.17l1.52,0.95l2.21,-0.18l0.36,0.79l-0.69,1.02l-0.2,1.34l1.09,1.51l0.18,2.07l0.48,0.92l1.43,0.1l1.54,0.85l1.12,-0.37l1.93,-0.06l0.99,-0.64l1.71,-0.05l0.99,1.35l1.04,0.12l1.41,-0.36l1.51,1.81l0.79,0.44l1.47,-0.01l1.16,1.07l0.17,1.68l-2.39,2.77l0.06,0.56l0.86,0.97l-0.59,1.05l-0.74,0.01l-1.42,0.76l-2.03,-0.78l-1.07,1.33l0.1,1.25l1.17,1.91l0.96,0.6l2.82,-0.21l4.67,4.01l3.58,-0.67l1.83,-0.78l2.33,0.62l0.64,0.55l0.19,0.75l-0.55,0.92l0.59,1.53l-12.75,5.12l-3.15,2.21l-3.03,1.17l-1.26,0.88l-1.08,1.32l-3.06,4.47l-1.24,1.04l-2.73,1.35l-4.31,0.65l-3.84,1.17l-1.43,-0.04l-7.25,1.99l0.02,-0.89l-0.32,-0.41l-1.77,-0.38l1.14,-0.69l0.51,-0.97l-0.13,-0.62l-1.14,-0.97l-0.72,-1.42l-0.28,-1.57l-1.1,-1.11l-1.96,-1.01l-0.39,-0.67l0.33,-1.23l-0.1,-1.43l-1.05,-0.72l-2.0,-0.71l-0.13,-0.31l1.1,-1.37l0.34,-1.08l-0.48,-0.53l-0.76,-0.1l-0.06,-0.63l-1.22,-0.59l0.46,-0.52l2.12,-0.69l0.04,-0.56l-1.23,-2.82l0.1,-3.61l0.29,-0.44l0.66,-0.16l1.39,1.16l1.48,-0.14l0.88,0.71l0.64,0.09l3.38,-3.26l0.23,-1.24l-0.71,-2.09l1.04,-1.52l0.15,-1.58l2.13,-0.42l0.67,-0.91l-0.12,-0.78l-0.43,-0.45l-0.72,-0.15l-0.96,0.35Z\",\n            name: \"Barcelona\"\n          },\n          \"ES-CS\": {\n            path: \"M733.51,147.84l1.65,0.04l0.88,1.17l1.58,0.74l-0.42,1.24l0.8,1.37l5.09,2.02l0.54,0.43l0.59,1.26l2.77,1.2l-0.72,1.61l-1.93,2.36l-0.3,1.23l-1.02,0.96l-2.76,4.85l-2.02,1.75l-1.37,1.75l-2.45,1.9l-2.4,4.32l-1.02,0.99l-2.11,1.23l-2.78,4.74l-3.53,3.95l-3.92,5.93l-2.72,-1.47l-1.61,-1.77l-1.45,-0.47l-1.66,0.71l-1.33,1.85l-1.57,0.91l-0.63,-0.17l-2.11,-3.08l-0.51,-0.13l-1.47,0.75l-1.26,1.38l-0.95,0.1l-0.29,-0.26l0.08,-1.48l-0.65,-2.35l-1.4,-0.78l-0.55,0.17l-0.73,1.4l-0.51,-0.09l-1.38,-2.16l-2.02,-1.76l-0.52,-1.67l0.12,-0.83l0.31,-0.46l2.02,-0.99l0.81,-1.74l2.6,-0.17l2.89,-1.32l0.29,-0.56l-0.21,-1.34l1.88,-2.15l0.74,-2.3l0.07,-1.53l1.88,0.41l2.15,-0.35l1.53,-0.66l0.82,-0.93l-0.03,-1.3l1.27,-1.0l1.0,-1.3l1.88,-1.31l-0.1,-1.3l-1.94,-2.2l2.35,-1.18l0.34,-0.51l-0.36,-1.24l-0.67,-0.56l0.14,-4.33l-0.66,-0.57l-1.0,0.22l-1.62,-0.53l-0.05,-1.53l0.89,-0.44l1.82,0.46l2.82,-1.5l0.41,-0.64l0.21,-1.97l1.29,-1.37l1.0,0.17l3.23,2.13l3.56,0.19l0.28,1.0l0.63,0.44l0.58,-0.03l1.82,-1.06l3.14,-0.52Z\",\n            name: \"Castell\\xf3n\"\n          },\n          \"ES-ZA\": {\n            path: \"M447.68,88.37l-0.15,-0.9l0.8,-2.36l-0.65,-0.91l-1.43,-0.24l-0.29,-0.52l1.46,-1.8l1.25,-0.87l0.66,-1.66l1.59,-1.57l1.16,-0.74l2.41,-0.04l0.86,-1.56l3.52,1.77l1.56,-0.14l1.53,0.54l2.29,-0.07l1.25,0.28l1.27,0.76l2.78,-0.8l3.46,0.09l1.02,-0.37l1.13,1.34l3.2,1.51l6.37,-0.43l3.68,1.52l1.69,-0.58l0.59,-0.62l1.08,1.37l1.4,0.16l2.99,-0.79l0.76,1.04l2.65,-0.33l0.31,-0.81l1.39,1.08l0.21,1.47l2.85,0.99l0.52,-0.27l0.38,-1.37l0.23,0.01l0.49,1.72l1.33,2.27l-0.43,0.86l0.2,0.54l1.85,0.82l0.55,-0.28l0.62,-2.82l1.39,-0.39l3.35,2.62l-0.76,1.04l0.28,2.16l-0.44,1.87l1.0,2.65l-4.13,2.32l-0.17,0.51l0.88,1.99l1.66,2.31l0.15,1.81l0.39,0.93l1.34,0.66l-0.55,1.0l0.18,0.77l2.18,1.56l-0.91,0.75l-2.4,0.66l-0.54,0.66l-0.42,1.6l0.11,1.0l0.67,0.99l-0.25,3.16l1.05,1.96l0.28,2.34l-0.09,0.8l-1.61,1.71l-0.05,0.54l0.96,0.92l0.97,-0.13l-0.22,2.09l-0.8,0.14l-1.28,-1.21l-1.41,-0.15l-0.2,-1.54l-0.44,-0.35l-3.42,0.38l-2.18,-1.39l-2.4,-0.09l-1.77,-1.56l-0.76,-0.19l-1.72,0.82l-3.82,0.55l-3.03,-0.87l-0.92,0.1l-0.72,0.87l-0.04,3.16l-0.94,0.24l-0.36,-0.74l-0.52,-0.24l-0.98,0.69l-0.76,-0.53l0.17,-1.15l-0.59,-0.74l-3.21,-0.59l-0.88,0.65l-7.48,-3.84l-5.56,-0.95l1.35,-1.26l1.16,-1.69l0.96,-0.24l0.15,-0.98l1.82,-0.37l0.37,-0.4l1.46,-2.39l0.13,-1.48l2.94,-3.51l-0.02,-0.5l-2.75,-2.86l-1.79,-1.05l-2.03,-0.68l-3.91,-0.64l-1.83,1.14l-1.16,-0.24l-0.43,-0.59l-0.83,-2.9l0.64,-1.2l1.42,-4.78l-0.24,-0.56l-1.75,-0.49l0.29,-2.02l-0.26,-0.99l-0.69,-0.68l-0.97,-0.37l-0.5,0.19l-0.45,0.87l-3.89,0.42l-1.0,-0.27l-1.38,-1.91l-1.48,-0.36l-0.46,0.33l-0.22,1.24l-0.71,0.39l-2.35,0.17l-0.98,-0.18l-1.28,-0.82Z\",\n            name: \"Zamora\"\n          },\n          \"ES-O\": {\n            path: \"M444.89,15.73l0.57,-0.29l0.53,-2.12l0.58,-0.5l0.29,-0.92l2.03,-0.4l6.84,-0.12l2.68,0.53l2.32,-1.04l1.88,0.17l3.41,1.32l2.06,-0.33l0.3,-0.85l1.44,0.54l4.26,-0.36l3.51,-1.31l1.84,0.98l4.54,0.25l1.76,-0.89l4.56,0.0l0.57,-0.67l-0.32,-0.83l0.34,-0.86l1.34,-0.27l0.5,-1.0l0.32,0.02l1.99,1.13l2.88,3.27l0.6,0.16l0.38,-0.29l0.54,0.65l2.15,0.31l8.0,-0.3l0.91,0.21l-0.34,0.86l-0.65,0.55l0.23,0.89l0.5,0.1l1.64,-0.65l0.67,-0.89l1.99,0.07l3.39,1.86l1.44,0.47l3.51,0.17l0.77,0.19l0.34,0.5l0.87,-0.07l2.63,0.71l1.45,-0.61l4.08,1.05l4.15,1.6l8.46,0.66l0.03,0.45l-0.93,1.7l0.71,2.21l-0.5,1.02l-0.67,-0.79l-1.45,-0.25l-1.12,0.45l-0.94,0.82l-1.92,0.01l-1.05,0.39l-0.45,0.55l-0.16,2.09l-0.43,0.85l-3.2,0.19l-1.0,-1.53l-0.88,-0.68l-1.59,-0.14l-3.96,2.14l-2.3,0.76l-2.13,3.33l-1.53,-0.24l-2.15,0.94l-3.71,0.4l-2.74,-0.19l-0.67,0.5l-0.46,1.16l-2.78,0.2l-0.89,1.11l-2.2,0.34l-4.53,-1.32l-2.34,0.17l-0.63,0.37l-1.6,2.85l-0.52,0.3l-2.08,0.03l-2.8,-1.25l-1.4,-0.88l-0.59,-1.55l-0.82,-0.67l-1.37,0.2l-2.61,-0.35l-0.59,0.36l-0.45,1.16l-0.63,0.27l-3.09,-0.63l-0.73,0.22l-0.56,1.06l-5.38,-1.76l-1.29,0.59l-0.97,1.93l-2.49,0.65l-0.15,0.49l0.27,0.56l1.19,0.57l-1.99,1.08l-2.32,0.62l-2.94,-0.51l-2.67,0.14l-1.29,0.5l-1.18,1.0l-1.07,-0.81l-1.12,-0.18l-0.32,-2.07l-1.4,-1.46l-1.86,-0.35l-1.42,-1.5l-0.61,0.11l-0.21,1.28l-0.39,-0.37l-0.1,-0.72l0.88,-0.57l0.67,-1.56l1.13,-0.11l1.81,-0.73l1.56,-1.25l0.22,-0.81l-0.8,-1.65l-1.1,-0.93l-0.75,0.31l-0.67,0.99l-1.64,0.74l-0.35,-0.19l-0.44,-0.73l0.34,-1.4l-0.19,-0.63l-3.33,-1.98l-0.85,-2.97l-1.02,-0.6l-0.89,-1.14l-0.37,-2.09l-1.58,-0.55l0.21,-1.36l1.91,-0.03l2.59,-2.37Z\",\n            name: \"Asturias\"\n          },\n          \"ES-OR\": {\n            path: \"M393.45,63.58l1.32,-0.04l2.09,-1.92l1.46,-0.48l1.33,-1.27l1.12,0.96l3.12,-0.16l1.88,0.47l0.67,-0.33l0.71,-1.07l1.07,0.13l1.08,-0.41l1.14,1.2l-0.11,1.79l0.37,0.44l1.33,0.08l3.08,1.48l1.11,0.97l1.64,0.09l3.83,2.31l1.8,-0.2l2.43,0.57l4.47,-2.2l1.62,1.04l1.76,-0.24l1.88,0.46l2.49,4.12l0.72,-0.04l2.05,-4.85l1.9,-1.47l1.17,-1.99l3.33,0.41l2.4,-0.87l1.08,0.62l2.68,0.67l0.35,0.72l-0.14,1.08l-0.8,1.1l-0.09,0.69l3.85,2.79l0.03,1.88l-1.17,1.87l-1.17,1.13l-0.28,0.88l-2.2,0.03l-1.42,0.88l-1.78,1.77l-0.63,1.61l-1.16,0.78l-1.63,2.01l0.03,1.12l0.74,0.54l1.09,0.06l0.46,0.58l-0.82,1.93l0.11,0.82l-2.31,1.09l-3.57,-2.1l-0.95,0.08l-1.71,1.13l-0.03,3.12l-0.71,0.92l-1.2,0.68l-2.77,0.86l-2.75,0.16l-1.72,1.42l-1.01,-1.78l-1.86,-0.74l-0.85,0.31l-0.38,0.99l-0.48,0.31l-2.09,0.29l-0.37,-0.19l0.58,-1.55l-0.35,-0.55l-2.08,-0.08l-2.44,-1.16l-3.73,1.05l-1.17,-0.04l-0.63,0.28l-0.45,0.69l-0.77,-0.0l-0.31,-2.32l-0.53,-0.34l-1.04,0.52l-0.61,1.71l-1.88,0.18l-2.24,2.27l-1.64,0.42l-2.95,-0.16l-0.04,-1.75l-0.48,-0.51l-1.28,-0.45l-0.28,-1.33l1.82,-2.74l3.0,-2.23l0.5,-0.79l0.06,-1.05l-0.43,-0.85l-1.5,-0.89l-2.43,0.3l0.02,-2.59l-0.53,-1.11l1.37,-1.01l0.15,-1.72l0.57,-1.69l-0.47,-0.52l-2.68,0.64l-1.03,-1.0l-0.21,-0.77l0.52,-1.7l-0.27,-0.5l-0.81,-0.33l-1.16,-1.63l-0.02,-1.32l-0.93,-2.05l0.12,-2.39Z\",\n            name: \"Orense\"\n          },\n          \"ES-M\": {\n            path: \"M545.47,166.41l1.12,1.03l1.33,-0.17l0.69,-0.44l0.72,-1.17l0.39,-1.91l0.39,-0.46l3.66,-0.45l0.61,-2.94l-0.15,-3.5l1.2,-1.37l0.2,-1.0l-0.25,-1.16l0.57,0.73l1.02,0.28l2.9,-1.03l0.63,-3.19l2.78,-3.79l1.0,-0.59l1.63,0.22l1.19,-0.26l0.49,-0.43l1.38,-4.04l0.06,-1.62l1.74,-2.27l4.2,-1.54l2.17,-2.9l2.32,-1.57l2.4,-2.57l1.17,-0.65l1.4,-0.28l0.21,0.66l2.3,2.34l1.85,0.85l1.0,2.88l-0.08,0.87l-1.6,4.01l0.16,1.19l-0.86,0.78l-0.42,1.93l-0.76,1.41l0.3,0.69l1.42,0.5l0.38,0.6l0.25,1.59l-0.72,1.62l1.18,1.11l1.3,-0.06l0.55,-0.34l1.18,1.54l1.25,0.36l-0.15,1.98l0.45,0.79l0.9,0.67l-0.02,1.51l0.51,0.33l1.51,-0.41l1.54,1.2l0.29,3.22l1.64,0.97l0.63,1.19l-0.53,2.58l-1.02,1.21l-0.41,1.87l0.08,1.25l0.38,0.54l0.62,0.13l1.98,-1.55l0.4,0.14l0.73,1.78l0.31,2.8l-0.41,0.37l-0.01,0.69l0.91,2.06l-1.02,0.97l-0.67,0.19l-1.61,0.07l-0.38,-0.61l-1.02,-0.4l-4.04,1.66l-2.05,0.38l-1.32,-0.56l-1.3,0.52l-3.75,-0.14l-0.8,0.51l-0.47,0.76l-4.26,1.53l-0.26,1.09l-3.74,1.31l-2.52,2.03l-0.77,0.0l-1.54,-0.99l3.53,-1.05l0.87,-0.85l1.59,-0.83l1.85,-1.79l1.49,-0.76l1.03,-2.04l0.06,-0.98l-0.3,-0.59l-2.45,-1.25l-3.45,-0.29l-1.43,-1.29l-1.32,0.04l-1.08,-0.88l-5.7,-1.8l-1.1,-1.19l-1.29,-0.57l-0.73,0.01l-1.07,0.56l-1.15,-0.25l-1.86,-1.55l-2.62,0.76l-2.1,2.19l-1.62,-1.16l-0.34,-0.79l0.0,-1.49l-0.87,-0.71l-0.64,0.22l-2.68,3.18l-2.21,1.06l-0.87,0.76l-0.89,-0.07l-0.48,-0.29l1.51,-3.8l-0.31,-1.66ZM555.63,150.36l-1.47,0.1l0.06,-0.53l0.5,-0.43l0.54,0.1l0.37,0.76Z\",\n            name: \"Madrid\"\n          },\n          \"ES-L\": {\n            path: \"M741.11,122.28l-0.06,-0.86l0.95,-1.92l-0.09,-1.07l-0.49,-0.89l-1.42,-0.88l-0.07,-0.51l0.94,-2.05l0.02,-1.91l1.94,-0.94l1.57,-2.13l0.17,-0.67l-0.49,-1.92l-0.44,-0.57l-2.68,-0.5l-0.88,-3.03l2.95,-3.43l2.29,-0.67l1.52,-2.2l1.61,-0.66l2.19,-2.11l0.02,-2.49l-1.06,-1.03l0.53,-0.6l1.0,-0.43l1.86,-1.94l0.15,-1.24l1.91,-4.46l0.1,-2.83l0.55,-2.29l0.97,-2.15l0.32,-2.88l-0.2,-3.01l-0.56,-1.85l-0.74,-0.85l-0.48,-1.78l1.14,-0.76l0.13,-1.22l1.11,-2.02l0.31,-1.91l-0.35,-0.52l-1.58,-0.5l-0.53,-0.52l-1.67,-2.94l-0.26,-1.63l-0.85,-0.82l0.35,-0.33l0.08,-0.58l-0.29,-0.36l0.47,-1.13l0.06,-1.57l1.68,-0.3l2.71,0.68l1.41,0.03l4.32,2.28l1.3,-0.52l1.29,0.74l4.08,0.4l0.58,0.47l1.07,2.06l0.98,0.64l1.88,-0.33l5.32,0.13l0.04,0.68l0.91,0.39l2.51,4.14l-0.36,1.15l0.26,0.43l-0.71,1.48l0.44,0.49l0.74,-0.09l0.52,0.71l-1.4,0.66l-0.17,0.6l1.08,1.5l0.18,0.81l0.63,0.37l2.84,0.25l1.25,-1.02l2.38,-0.28l1.38,-0.51l0.6,-1.34l1.13,0.2l0.66,-0.26l0.77,2.26l0.71,0.6l2.42,0.8l0.08,1.53l0.98,1.5l0.1,1.73l-4.61,0.8l-1.63,1.93l0.35,2.31l1.84,1.52l-0.13,0.6l-1.05,1.12l0.27,1.73l-1.0,0.93l-0.02,1.93l-1.01,0.99l-0.26,0.71l0.52,0.92l1.49,-0.31l0.21,0.61l-0.46,0.3l-1.66,0.11l-0.47,0.42l-0.23,1.7l-1.1,1.7l-0.01,0.74l0.72,1.63l-0.08,0.64l-2.71,2.84l-0.27,0.1l-1.03,-0.77l-1.51,0.13l-1.43,-1.17l-0.79,0.04l-0.94,0.68l-0.32,4.33l1.23,2.91l-1.6,0.33l-0.92,0.75l-0.17,0.78l0.33,0.48l0.96,0.3l-0.26,0.33l-0.67,0.37l-6.97,-0.16l-1.07,1.45l-0.39,2.64l-1.62,0.5l-2.24,-0.38l-1.0,2.74l-0.77,0.85l-1.44,0.46l-1.18,2.0l-2.95,0.56l-1.22,-0.67l-0.77,-0.07l-1.12,1.26l-1.7,0.0l-1.04,0.64l-4.46,0.91l-2.47,-1.18l-0.54,0.23l-1.08,1.43l-0.75,-0.35l-0.85,-1.46l-1.1,-0.35l-0.92,0.81l-0.16,1.93l-1.5,-0.1l-0.9,1.33Z\",\n            name: \"L\\xe9rida\"\n          },\n          \"ES-J\": {\n            path: \"M614.53,252.6l1.85,-1.36l3.04,1.41l2.11,-0.47l1.78,0.31l0.07,3.4l0.79,0.76l2.5,0.67l0.44,4.09l0.41,0.61l1.16,0.67l0.27,0.78l-0.74,1.76l0.19,1.38l-3.98,4.84l-2.1,0.82l-0.25,0.4l0.15,2.39l-2.48,1.76l-0.69,-0.42l-0.72,0.08l-3.55,2.88l-4.18,6.48l-0.45,1.33l-0.07,3.58l-2.75,1.41l-0.41,1.3l-2.41,-0.43l-1.61,0.72l-3.66,-1.75l-1.72,-0.18l-1.29,0.37l-2.43,2.48l-3.21,0.6l-0.8,-0.16l-1.79,-1.74l-0.93,-0.47l-0.89,0.11l-4.89,3.9l-2.25,0.54l-4.35,2.39l-2.03,3.66l-4.04,0.34l-1.8,-0.98l-1.41,-2.41l-2.01,-1.47l-0.96,-2.37l-1.8,-1.81l-1.03,-1.58l-1.13,-0.54l1.58,-2.13l0.02,-1.04l-0.74,-0.71l-1.27,-0.47l-0.44,-2.66l-1.57,-1.18l-0.44,-0.71l0.9,-6.53l-0.83,-1.82l0.85,-0.91l0.37,-1.65l2.2,-2.96l1.13,-0.75l0.01,-2.04l-1.7,-2.65l-0.2,-2.56l-1.17,-2.38l-1.23,-0.58l0.22,-1.72l1.68,0.03l1.59,0.5l11.43,0.41l2.25,-0.53l0.79,-1.12l1.52,-0.47l6.94,1.18l0.99,-0.47l0.45,-1.59l0.6,-0.18l1.19,1.65l2.74,0.45l2.59,-1.05l0.91,-0.98l0.5,-1.22l1.34,-0.35l2.44,0.72l4.99,0.65l1.08,-0.25l1.85,-1.13l2.29,2.39l0.63,-0.19l0.4,-1.11l1.29,-0.72l1.3,-0.01l1.62,0.63l2.95,-1.89Z\",\n            name: \"Ja\\xe9n\"\n          },\n          \"ES-H\": {\n            path: \"M425.83,295.82l0.68,-1.67l1.61,-1.7l1.07,-4.23l0.64,-0.86l3.63,-2.8l1.2,-1.91l1.58,-4.67l-0.14,-1.23l1.67,-0.53l1.37,0.23l1.27,-0.43l0.82,-0.78l0.59,-1.16l2.66,0.88l1.2,-0.09l0.34,-0.29l3.3,-8.34l5.09,1.58l-0.74,2.12l0.64,0.87l2.32,0.75l2.88,-0.11l2.2,0.38l1.16,1.23l0.24,1.24l0.59,0.49l3.55,0.34l1.66,-1.74l0.65,-0.14l1.85,1.08l0.84,1.54l6.12,2.19l0.56,0.5l0.61,1.31l1.48,0.15l-0.68,2.37l0.76,1.97l-0.44,0.25l-1.58,-0.4l-0.94,0.36l-0.56,0.96l-0.05,2.1l-0.56,-0.12l-0.36,-1.08l-0.67,-0.43l-1.9,-0.02l-5.61,1.45l-0.94,0.58l-1.34,2.13l-0.99,0.93l-0.23,1.41l0.23,0.41l1.02,0.46l2.59,-0.04l1.58,0.72l-0.15,1.35l1.0,1.29l0.79,2.33l1.59,2.61l-0.04,0.42l-1.72,0.72l-0.21,0.65l0.2,1.49l-0.85,1.18l0.2,0.78l1.44,1.53l-0.63,2.37l0.43,2.75l-0.39,1.45l0.04,1.39l-0.87,1.3l-0.27,1.15l1.06,3.54l-0.9,2.21l0.11,0.45l1.24,1.06l-0.34,1.14l0.14,2.86l-0.98,0.01l-0.97,-1.17l-1.3,-3.05l-0.96,-1.52l-1.2,-1.15l-9.81,-6.52l-2.7,-1.05l-1.61,-1.23l-1.57,-0.71l-0.61,-0.88l-0.22,-0.99l2.07,-2.73l0.46,-0.82l-0.11,-0.52l-0.53,0.04l-2.97,2.71l-1.14,0.0l-0.4,0.4l1.31,2.48l-3.42,-1.54l-2.92,-0.88l-1.32,0.45l-0.23,0.4l-7.65,0.18l-2.08,0.99l-1.03,-0.46l-0.72,-2.75l0.24,-0.84l-0.68,-5.11l-0.67,-1.46l-0.3,-2.73l-0.35,-0.98l-1.53,-1.55l-0.52,-1.31Z\",\n            name: \"Huelva\"\n          },\n          \"ES-CU\": {\n            path: \"M603.53,174.95l0.66,-0.42l1.7,0.53l0.52,-0.43l-0.19,-1.57l0.44,-0.39l1.89,1.7l1.37,0.58l0.68,-0.06l0.61,-0.41l0.9,-1.43l1.59,-0.27l0.5,-0.37l0.73,-2.88l-0.56,-2.9l0.28,-3.56l1.1,-0.5l1.7,1.03l0.49,-0.06l1.68,-1.65l1.96,-0.88l1.83,0.22l2.45,1.31l0.5,-0.01l0.46,-0.47l0.06,-1.04l-1.32,-1.34l0.25,-1.19l-0.67,-1.06l-0.02,-0.59l1.25,1.15l0.64,0.19l2.32,-1.05l1.49,0.27l0.64,-0.94l-1.14,-2.0l0.36,-0.92l0.97,0.42l1.41,1.25l0.87,0.11l1.27,-1.23l0.19,-2.18l2.58,1.02l0.82,0.0l1.25,-0.56l0.65,-1.14l2.24,0.83l2.13,1.93l1.63,0.64l0.75,-0.0l1.01,-0.52l0.62,0.18l1.46,2.7l1.39,4.89l3.86,2.56l1.6,1.95l0.26,2.33l1.4,-0.14l0.9,0.43l4.81,4.06l3.88,0.12l-0.47,2.93l1.53,1.16l1.5,4.03l0.88,0.45l4.12,0.77l3.61,-0.58l0.47,1.27l-1.83,0.87l-0.5,0.7l0.36,1.18l-0.24,2.45l-0.87,3.04l-1.69,2.57l-0.06,2.55l-0.97,0.56l-2.02,-0.59l-1.36,0.22l-1.69,1.43l-1.69,2.9l-1.44,1.33l-0.28,0.81l0.13,2.42l-0.69,2.17l0.49,1.25l-9.12,4.53l-1.25,1.84l-2.69,-0.23l-1.84,-0.87l-3.89,0.49l-1.28,-1.69l0.22,-0.44l-0.31,-0.58l-2.79,-0.35l-0.42,0.54l1.42,3.71l-4.35,-0.53l-4.45,2.35l-1.11,-2.3l-0.44,-0.22l-1.41,0.45l-0.76,1.65l-5.08,-4.74l-0.55,-0.0l-0.62,0.57l-1.32,0.03l-2.29,-0.57l-1.64,0.82l-2.85,0.16l-1.76,-3.5l-0.66,-0.08l-1.56,1.87l-1.69,0.16l-0.22,-0.29l0.83,-0.86l0.02,-0.53l-1.47,-1.83l-0.9,-1.8l0.23,-5.96l0.57,-2.26l-3.58,-3.68l-0.6,-1.91l-1.04,-1.17l-0.82,-2.43l-1.47,-1.49l-0.9,-0.37l0.99,-2.37l0.01,-2.52l-0.42,-0.4l-1.55,0.07l-0.95,-2.58l0.14,-0.45l2.6,-0.31l1.23,-1.02l0.29,-1.07l-0.92,-1.93Z\",\n            name: \"Cuenca\"\n          },\n          \"ES-T\": {\n            path: \"M733.72,146.97l2.2,-1.2l1.83,-2.47l-0.82,-3.4l0.4,-1.42l1.02,-1.85l0.17,-1.1l-0.79,-2.12l-1.75,-1.07l-0.84,-2.38l0.12,-0.86l3.31,-1.75l0.83,-2.34l1.84,-1.19l0.97,-2.05l1.62,0.11l0.43,-0.37l0.32,-2.35l0.56,0.1l1.1,1.73l1.15,0.27l0.7,-0.32l0.89,-1.32l1.3,0.95l1.16,0.23l4.63,-0.94l0.93,-0.61l1.73,-0.0l1.21,-1.29l1.68,0.77l3.29,-0.6l0.66,-0.59l0.74,-1.54l1.26,-0.35l1.06,-1.09l0.76,-1.4l0.03,-1.13l2.33,0.43l1.7,-0.72l0.55,-2.93l0.74,-1.04l6.62,0.28l0.97,-0.46l1.18,0.01l-1.41,1.91l0.23,1.1l3.08,1.48l-0.37,2.39l0.7,1.07l2.01,1.04l0.81,0.8l0.24,1.49l0.8,1.58l1.12,1.14l-1.52,1.07l-0.13,0.77l0.6,0.62l1.53,0.24l-0.07,0.79l-3.17,0.22l-10.02,3.38l-2.79,0.55l-1.7,2.14l-1.14,-0.56l-1.95,0.03l-1.76,0.31l-2.73,1.27l-4.52,4.04l-2.21,2.65l-4.32,3.99l-0.85,1.49l0.16,0.55l2.26,0.99l0.93,-0.14l0.24,-0.52l2.39,2.2l1.1,0.17l-0.03,0.58l-0.81,1.27l-2.59,0.72l-1.6,1.55l-0.15,-0.35l-2.11,-0.03l-3.47,1.03l-1.57,1.23l-1.45,2.7l-2.58,-1.07l-0.41,-1.06l-0.87,-0.73l-4.96,-1.93l-0.5,-0.79l0.33,-1.62l-1.84,-0.99l-0.87,-1.2l-1.9,-0.22ZM752.81,155.14l-1.44,0.27l-0.42,-0.61l1.12,-0.13l0.73,0.47Z\",\n            name: \"Tarragona\"\n          },\n          \"ES-C\": {\n            path: \"M355.87,43.07l-0.53,-0.9l1.62,-4.24l-0.87,-1.09l-0.19,-0.75l0.75,-0.22l0.51,-1.31l0.97,-0.84l0.81,0.31l0.73,-0.16l1.51,-1.46l1.18,-0.25l0.36,-0.4l0.0,-0.36l-0.56,-0.37l-1.44,0.44l-0.75,-0.44l-1.4,0.51l-0.16,-0.36l1.64,-1.4l1.08,-0.52l1.49,0.55l1.47,-0.14l1.65,-0.91l0.7,-1.25l0.77,0.49l2.34,-0.48l0.84,-0.93l-1.4,-0.4l-0.91,-1.18l5.28,-2.54l1.68,1.35l3.97,0.93l3.87,-1.46l1.54,0.48l2.21,-0.96l0.79,-1.1l1.04,-0.35l0.59,-0.6l1.72,-0.41l0.56,0.95l0.89,0.7l0.54,-0.04l0.74,-1.14l0.09,-1.47l2.07,0.86l0.57,1.35l1.97,2.25l0.71,-1.19l-0.29,-2.89l1.18,-1.0l-0.05,-0.71l-0.9,-0.37l-2.63,-0.16l-0.98,-0.91l4.33,-0.59l0.7,-0.74l-0.02,-0.63l-0.52,-0.36l-2.65,0.6l-0.58,-0.53l-1.53,0.88l-1.08,0.04l0.32,-1.55l0.5,-0.11l0.52,-0.66l-0.75,-1.47l1.85,0.05l1.15,-0.54l5.42,-3.67l0.69,0.58l1.1,-0.18l0.24,-0.46l-0.26,-0.19l0.1,-0.71l-0.7,-0.72l0.43,-1.18l3.06,-0.41l1.2,-0.64l1.69,-1.65l0.71,0.1l0.76,1.51l-0.64,0.59l-0.22,1.06l-0.9,0.3l-0.27,0.71l0.38,0.4l2.01,0.1l0.67,-0.48l0.05,-0.51l-0.5,-0.72l1.68,0.14l-0.11,-0.86l0.35,-0.34l1.41,-0.88l2.51,-0.92l1.08,-1.25l-1.0,1.62l-0.55,3.44l0.61,1.03l-1.15,1.24l-0.14,1.95l-1.25,1.51l0.03,0.83l0.46,0.75l-1.32,3.45l-1.14,0.72l-0.58,1.32l-1.97,-0.13l-0.46,0.36l-0.28,3.14l-1.9,2.42l0.34,1.79l-1.31,3.38l1.43,4.64l-0.39,1.96l1.14,3.17l-0.01,1.14l-0.19,1.11l-0.88,1.49l-1.52,0.94l-1.02,1.66l-1.69,0.6l-5.15,-0.86l-0.89,0.39l-0.57,0.69l-1.63,-0.28l-1.46,0.75l-0.8,-1.1l-0.91,-0.07l-0.62,0.79l0.25,1.67l-0.21,0.55l-2.05,-0.18l-1.14,1.52l-0.83,0.53l-0.81,0.04l-1.38,-0.62l-3.03,0.49l-0.9,0.52l-0.38,0.79l-1.48,-0.31l-2.84,0.92l-1.09,1.12l-0.62,1.42l-0.91,0.6l-0.52,-0.18l-1.43,-1.74l-0.58,0.11l-0.66,1.15l0.17,1.11l-0.61,0.78l-0.28,0.04l0.0,-0.65l-0.44,-0.08l-1.94,1.2l0.19,0.88l-1.67,0.6l-0.4,1.2l-0.91,0.73l-0.48,-1.81l-1.46,-0.93l0.16,-0.89l1.02,-1.86l0.38,-2.3l0.81,-1.1l1.68,-0.84l1.63,-1.77l1.09,-0.32l0.6,-1.22l-0.09,-0.96l-1.05,-0.71l-0.57,0.3l-0.15,0.99l-0.48,0.52l-0.78,0.31l-3.89,0.01l-0.32,0.46l0.1,0.6l-0.72,0.69l-0.87,0.06l-0.37,-0.29l-0.58,-1.63l0.85,-0.64l0.28,-0.94l-0.46,-0.7l-1.15,-0.56l-0.25,-0.96l0.53,-0.86l-0.15,-1.12l-1.28,-0.42l-0.57,-0.82l-0.68,-0.34l-0.55,0.37l0.01,0.37l-0.69,-0.32l-0.77,0.35l-1.06,1.61ZM358.49,41.69l0.05,0.12l-0.02,0.0l-0.03,-0.12Z\",\n            name: \"La Coru\\xf1a\"\n          },\n          \"ES-AV\": {\n            path: \"M506.36,154.87l2.37,-0.19l1.58,-0.71l1.23,-1.13l0.86,-2.46l4.65,-3.04l1.12,-1.58l1.57,-1.06l0.78,-1.35l-0.02,-2.28l1.93,-2.09l-0.48,-2.04l1.14,-1.56l-0.32,-2.24l-0.68,-0.65l-0.99,-0.33l0.05,-2.12l0.75,-1.38l0.56,-0.34l1.95,0.09l2.23,-1.0l5.57,2.98l1.2,-0.39l1.63,-1.46l3.02,-0.74l-0.36,2.73l0.68,1.19l2.23,1.82l1.62,2.9l1.44,0.87l0.7,3.26l-0.56,2.16l0.72,0.62l1.67,-0.36l0.57,0.24l0.45,1.84l1.22,1.52l0.99,5.53l0.48,0.32l3.03,-0.64l0.92,-0.52l2.44,-0.17l0.33,-0.57l-0.54,-1.11l0.19,-0.09l3.38,0.39l-0.31,2.43l-0.31,0.35l-2.11,0.59l-0.66,-0.26l-0.54,-0.8l-0.88,0.1l-0.25,0.48l0.09,2.16l-1.24,1.5l0.14,3.54l-0.52,1.63l0.16,0.76l-1.6,0.27l-1.15,-0.22l-0.86,0.4l-0.61,0.74l-0.38,1.89l-0.96,1.22l-0.9,0.12l-1.19,-1.04l-0.74,0.34l0.14,2.24l-1.5,3.5l-1.94,0.61l-1.6,-0.38l-0.41,-0.57l-0.39,-2.28l-0.52,-0.45l-4.03,0.47l-0.61,0.5l-0.73,1.89l-3.03,2.04l-0.82,1.64l-1.04,0.72l-1.64,0.27l-0.45,-1.56l-1.06,-0.25l-1.56,0.56l-2.88,2.31l-0.86,0.23l-0.79,-0.02l-1.68,-0.8l-3.72,-0.42l-1.17,-2.03l-0.09,-2.3l0.56,-1.39l-0.3,-0.75l-1.04,-0.08l-2.1,0.55l-2.3,1.88l-2.19,0.26l-2.36,-0.95l-2.2,-2.19l-2.38,-1.21l1.83,-2.73l0.03,-0.85l-0.72,-1.6l0.12,-0.54l2.69,-1.95l0.91,-0.24l0.37,1.08l0.96,1.02l0.67,0.45l0.81,0.02l0.7,-0.56l-0.06,-1.23l1.06,-0.15l0.74,-0.59l1.26,-3.85l-0.38,-0.51l-2.66,-0.02l-0.11,-0.82Z\",\n            name: \"\\xc1vila\"\n          },\n          \"ES-A\": {\n            path: \"M688.26,275.31l-2.17,-3.18l-0.45,-2.0l0.35,-1.19l1.51,-2.35l0.67,-3.75l-1.15,-2.71l-0.82,-0.53l-2.4,-0.62l-0.22,-2.73l0.29,-1.04l2.02,-1.86l0.39,-0.85l0.46,-4.4l-0.59,-2.71l2.96,-0.35l1.71,-1.36l-1.61,-2.36l-0.33,-1.62l0.41,-0.19l0.92,0.58l1.56,-0.18l1.97,1.53l3.49,-0.53l3.03,1.57l0.74,0.75l1.11,0.39l4.33,-2.29l0.13,-0.6l-0.54,-0.67l-0.85,-0.4l-1.11,0.24l-0.68,-1.06l6.54,-1.03l4.22,-2.85l3.23,1.26l7.81,-1.34l0.86,0.58l4.78,0.91l1.62,0.83l0.85,0.87l-0.08,0.8l2.2,1.31l0.02,0.8l-2.09,0.58l-1.19,1.67l-1.04,0.19l-1.5,1.06l-0.52,1.16l-3.27,0.48l-1.25,0.65l-0.63,1.08l0.04,1.27l-0.68,0.97l-3.98,0.56l-6.18,2.7l-2.75,2.74l-0.49,0.84l-0.17,1.27l-1.71,0.22l-0.78,1.05l-1.08,-0.06l-0.41,0.32l-0.36,1.98l0.57,4.07l-0.76,0.42l-2.4,0.13l-1.55,1.46l-0.89,2.26l-0.38,5.81l-2.13,1.48l-2.11,4.98l-0.54,0.04l-1.97,-1.04l-1.97,-1.83l-1.08,-1.14l-1.94,-3.04Z\",\n            name: \"Alicante\"\n          },\n          \"ES-CR\": {\n            path: \"M525.98,241.75l0.9,-0.1l0.77,-0.74l1.42,-4.3l0.75,-1.33l1.02,-0.68l2.03,-0.08l0.65,-2.09l-0.5,-1.2l-2.96,-0.86l-0.34,-1.51l-0.54,-0.53l-0.35,-1.32l0.51,-0.07l2.2,0.89l2.02,-0.93l0.07,-0.99l-1.25,-0.99l-0.09,-0.89l0.73,-2.56l1.44,-1.43l2.92,0.1l2.86,1.07l0.36,-0.61l-2.27,-2.69l-1.6,-3.66l1.26,-0.65l0.54,-0.64l1.2,-2.7l0.12,-1.03l-0.39,-1.0l2.44,-0.17l0.96,-1.44l1.42,-0.91l0.49,-1.78l0.42,-0.28l0.61,-0.01l0.55,2.02l1.16,0.9l1.21,-0.18l0.82,-0.87l7.3,1.43l2.43,-1.2l1.21,-3.29l1.21,0.47l2.93,-0.49l-0.03,1.02l-1.41,0.95l-0.09,0.82l0.68,1.43l-0.53,0.69l-1.32,-0.21l-0.46,0.33l-1.06,4.43l0.34,0.56l1.5,0.84l1.54,-1.05l3.54,0.54l0.18,2.21l0.27,0.35l2.51,0.83l1.22,0.89l1.7,-0.01l1.05,-1.12l1.02,-0.36l1.65,1.08l0.77,0.05l1.87,-1.2l3.51,-0.57l1.47,0.33l3.17,-2.06l0.4,-1.44l2.6,-1.4l2.14,0.02l0.79,-0.29l1.3,-2.81l4.22,-0.16l0.4,-0.72l1.17,-0.25l3.11,2.09l1.78,-0.31l2.04,0.5l1.49,-1.0l2.08,3.19l-0.83,0.86l-0.03,0.52l0.56,0.74l2.43,-0.04l1.54,-1.67l2.31,5.25l-4.69,6.11l-0.03,0.44l1.28,2.28l0.08,1.17l-2.85,4.99l-0.14,0.81l0.73,1.33l1.07,0.33l1.77,-0.1l1.25,1.07l0.57,3.27l0.91,1.14l1.88,0.57l1.13,1.48l0.18,1.35l-1.21,3.08l-1.96,0.54l-0.98,0.97l-0.63,1.57l0.65,1.4l-0.22,0.38l-1.29,1.12l-3.38,2.08l-1.22,-0.62l-1.63,0.01l-1.67,0.92l-0.42,0.96l-1.64,-1.97l-0.59,-0.3l-3.04,1.38l-1.36,-0.37l-2.75,-0.13l-3.4,-0.87l-1.68,0.46l-1.43,2.22l-2.25,0.93l-2.28,-0.37l-0.63,-1.31l-0.95,-0.42l-1.1,0.37l-0.49,1.59l-0.56,0.29l-6.84,-1.19l-1.96,0.62l-0.74,1.07l-1.91,0.43l-11.26,-0.41l-1.54,-0.49l-1.74,-0.07l-0.93,0.62l-0.17,1.84l-0.56,-0.01l-6.18,-2.29l-3.32,-3.35l-2.67,-1.1l-0.93,-1.26l-2.77,-1.63l-1.06,-1.0l-4.81,-1.61l-0.53,-0.73l-0.15,-1.76l-0.35,-0.62l-0.58,-0.26l-2.44,0.07l-2.85,-1.58ZM532.33,210.85l-0.96,0.48l-2.07,-0.95l1.71,-5.49l1.07,-1.55l3.27,1.6l1.12,1.58l-0.9,1.91l0.38,0.9l-0.3,0.33l-3.34,1.17Z\",\n            name: \"Ciudad Real\"\n          },\n          \"ES-CO\": {\n            path: \"M508.85,252.59l1.27,-0.79l0.78,-1.56l1.37,-1.48l2.17,-0.07l0.91,-1.35l1.24,-0.98l3.08,-1.55l0.61,-1.41l-0.16,-0.78l3.28,-0.15l1.62,-0.4l2.17,1.5l1.42,0.54l2.73,0.05l0.25,2.01l0.82,1.12l1.49,0.74l1.37,0.13l2.02,0.78l0.95,0.94l2.77,1.61l0.95,1.28l2.71,1.13l3.33,3.36l2.25,1.03l6.38,1.83l0.98,2.07l0.23,2.61l1.64,2.48l-0.01,1.64l-0.91,0.45l-2.29,3.08l-0.42,1.75l-0.88,0.85l-0.09,0.48l0.88,1.75l-0.88,6.69l0.69,1.14l1.42,1.02l0.09,1.77l0.37,0.93l1.89,0.93l-0.19,0.86l-1.29,1.43l-0.05,1.05l1.25,0.68l1.03,1.57l1.77,1.77l0.94,2.35l2.01,1.47l1.06,1.81l-2.49,-0.01l-3.09,2.49l-2.65,0.03l-0.8,1.16l-0.11,1.49l-0.99,1.57l0.22,1.48l-1.95,1.48l-0.32,-0.46l-1.6,-0.51l-0.41,-2.62l-0.4,-0.34l-2.77,0.15l-1.38,1.72l-2.15,1.16l-1.94,-0.4l-0.97,-1.6l-1.26,-0.03l-0.64,-1.72l-0.25,-1.86l-0.82,-0.95l-1.14,-0.28l-1.99,1.43l-0.54,-0.05l-1.36,-1.14l-1.07,-2.34l-1.38,-1.29l-0.14,-1.13l-0.83,-1.49l-1.3,-1.11l0.55,-2.75l-0.17,-1.01l-0.95,-0.87l0.03,-1.19l-0.51,-1.26l-1.5,-1.62l-1.11,-0.37l-1.29,0.11l-2.1,0.8l-0.99,1.17l-2.51,-0.15l-3.38,2.05l-2.59,0.64l-1.21,-0.07l-0.66,-0.7l-0.44,-1.68l0.7,-0.8l2.98,-0.01l0.4,-0.39l0.05,-3.49l-1.31,-1.09l-0.29,-1.61l-0.51,-0.73l-1.75,-1.14l-0.66,-3.35l-2.28,-1.94l-0.78,-2.92l-3.3,-3.25l0.02,-0.54l1.83,-1.47l0.73,-2.81l-0.25,-2.36l-1.0,-2.18l-0.75,-0.84l0.28,-1.55l-0.64,-1.17l0.23,-1.12l3.12,-1.7l1.55,-1.67Z\",\n            name: \"C\\xf3rdoba\"\n          },\n          \"ES-VA\": {\n            path: \"M523.7,73.91l1.09,0.45l0.52,-0.34l0.09,-0.95l0.61,0.16l-0.58,2.45l0.17,2.24l-0.47,1.4l0.36,0.53l3.63,0.17l0.18,2.4l-0.19,0.79l-0.73,0.94l0.09,1.59l-0.8,0.61l-1.63,3.27l0.74,1.59l0.56,0.12l1.21,-0.8l1.06,0.77l2.08,-0.7l1.04,1.33l1.94,3.83l0.47,0.2l1.39,-0.49l1.99,-2.55l1.53,-0.77l0.55,0.34l0.4,1.2l2.42,2.27l2.39,-0.24l0.68,-0.4l0.17,2.41l2.1,0.85l1.87,-0.83l3.62,0.41l2.76,-1.54l3.49,0.28l1.0,-0.34l1.07,1.48l1.8,0.23l-0.36,1.17l0.95,1.85l0.02,3.22l1.57,1.33l0.4,0.99l-0.4,1.88l-0.78,1.05l-9.35,2.9l-2.81,0.05l-1.67,0.58l-1.83,-0.1l-3.07,1.53l-1.04,-0.03l-0.39,0.53l0.73,2.12l0.05,1.18l0.93,1.54l-1.92,-1.01l-1.17,0.67l-1.33,-0.73l-0.57,0.21l-0.4,1.08l0.89,1.08l-2.54,2.42l-0.11,1.16l-1.85,1.94l-3.59,0.88l-2.41,1.8l-4.5,-2.66l-1.07,-0.31l-1.11,0.15l-1.52,0.87l-1.38,-0.22l-1.12,0.47l-1.91,-1.49l-1.84,-0.21l-1.21,-1.24l-0.77,0.05l-0.99,0.61l-1.15,0.15l-0.22,-0.29l1.53,-1.72l0.16,-1.16l-0.33,-2.6l-1.01,-1.78l0.27,-3.11l-0.73,-1.19l0.03,-1.36l0.62,-1.04l2.52,-0.67l1.14,-1.08l-0.05,-0.62l-2.34,-1.59l0.48,-1.54l-0.39,-0.57l-1.09,-0.4l-0.46,-2.55l-1.7,-2.38l-0.71,-1.61l4.15,-2.33l0.16,-0.53l-1.09,-2.63l0.44,-1.78l-0.29,-2.07l0.85,-1.03l-0.06,-0.57l-3.72,-2.91l-0.4,-1.78l0.41,-2.51l-0.4,-2.85l0.17,-0.71l0.51,-0.31l1.52,0.96l2.3,-0.67l0.45,-0.35l1.08,-2.13l1.35,0.35l0.98,-0.28l2.36,-1.85l0.41,-0.09l1.04,1.5ZM514.07,74.48l-0.74,0.13l-0.28,-0.94l0.89,-0.46l0.13,1.27ZM509.28,85.52l-0.51,2.33l-1.03,-0.46l0.32,-1.06l-1.59,-3.06l2.81,2.25Z\",\n            name: \"Valladolid\"\n          },\n          \"ES-TF\": {\n            path: \"M81.48,697.96l-0.24,0.78l-4.02,2.3l-0.8,1.29l-1.87,1.83l-2.46,1.71l-0.45,0.99l0.29,2.07l-0.85,1.05l-1.53,3.24l-0.39,2.74l-3.63,3.83l-0.87,1.3l-1.32,-0.21l-4.15,1.33l-0.29,-1.1l-0.73,-0.7l-0.31,-1.5l-2.09,-2.12l-0.61,-1.64l-1.59,-1.79l-0.45,-2.39l-1.02,-1.8l-1.56,-1.82l2.64,-1.29l1.61,0.9l1.08,0.14l4.26,-1.48l3.19,-0.03l0.93,-0.63l2.38,-0.45l3.49,-2.9l0.52,-1.27l1.64,-0.92l1.64,-0.46l0.36,-0.66l4.28,0.23l2.43,-0.81l0.5,0.26ZM38.3,721.01l-0.95,0.3l-0.84,-0.2l-1.96,-1.17l-1.21,-1.74l0.16,-2.9l1.01,-1.36l1.78,-0.4l1.71,0.49l3.71,2.46l0.59,1.62l-0.47,0.64l-2.73,2.06l-0.82,0.2ZM11.98,686.49l0.95,0.22l1.7,-0.56l0.59,0.23l0.82,0.8l-0.05,0.85l0.68,1.84l0.75,0.46l0.02,0.4l-1.71,2.25l0.71,2.6l-0.52,1.8l-0.93,1.23l-1.7,3.57l-0.88,-0.5l-0.51,-2.74l-3.35,-5.64l-0.52,-2.42l-1.0,-0.94l0.17,-1.05l2.28,-2.46l0.77,-0.51l1.73,0.57ZM10.92,731.11l-1.62,2.33l-0.13,0.99l-1.48,1.52l-0.41,1.65l-0.98,-0.4l-1.49,-1.62l-3.09,-0.47l-1.08,-0.75l-0.2,-1.1l0.69,-0.31l3.49,0.46l2.2,-1.87l0.51,-1.04l2.07,-1.14l0.58,0.08l0.98,0.77l-0.05,0.9Z\",\n            name: \"Santa Cruz de Tenerife\"\n          },\n          \"ES-Z\": {\n            path: \"M653.06,87.28l2.64,0.38l1.35,1.2l1.26,0.53l0.89,0.06l1.06,-0.38l0.58,0.18l0.9,0.45l1.02,1.06l1.43,0.69l1.7,-0.07l1.06,-0.44l2.7,0.64l0.61,-0.19l1.28,-1.6l0.92,-1.98l1.85,-2.69l-0.04,-1.44l-1.49,-0.65l-1.55,-2.16l-0.14,-2.63l-0.79,-1.92l1.25,-3.72l2.15,-2.84l-0.71,-1.27l0.27,-1.43l2.76,-3.5l-0.42,-1.57l0.2,-0.58l0.61,-0.8l1.11,0.18l1.08,-0.5l0.45,-0.9l1.64,-1.28l-0.1,-0.8l0.37,-0.98l4.02,-0.44l0.82,-2.23l2.36,-0.68l1.7,-1.27l-0.04,1.15l1.15,1.24l-1.33,0.67l-0.45,0.69l0.8,1.95l0.32,5.65l0.32,1.13l-0.5,1.64l0.33,0.54l2.09,1.13l0.24,0.97l-3.43,5.07l-0.02,0.91l0.43,0.52l1.1,0.25l0.59,-0.38l0.76,-1.21l1.34,0.41l0.92,-0.32l1.56,-3.33l-0.35,-2.01l0.63,0.03l0.26,0.45l0.35,3.18l-1.04,2.39l0.39,8.12l-0.98,1.13l-1.35,-1.18l-0.86,0.04l-0.71,0.5l-0.83,2.38l0.54,1.76l3.15,2.03l4.49,0.15l0.48,0.34l1.76,2.7l2.25,1.11l1.0,1.15l0.86,4.0l0.66,1.1l4.38,2.5l1.41,2.51l1.3,0.48l2.15,2.07l0.86,0.23l1.5,-0.91l0.59,0.11l0.6,0.87l0.67,2.08l1.88,2.4l1.32,4.85l0.51,0.28l1.97,-0.48l1.41,1.09l3.48,0.45l0.41,-0.21l0.87,-1.66l1.06,-0.69l0.89,0.47l1.45,-0.43l0.91,-1.12l3.07,0.85l-0.29,0.57l0.12,0.96l1.59,1.04l0.39,1.17l-0.98,2.1l0.28,2.03l-1.73,1.12l-0.79,2.3l-3.23,1.62l-0.41,1.25l0.36,1.26l-1.49,0.2l-1.9,-0.54l-1.87,-0.03l-0.81,0.36l-0.59,0.94l-0.36,-0.13l-1.45,-3.06l-0.89,-0.74l-9.3,-3.88l-1.72,-1.87l-0.52,-0.06l-0.76,0.53l-2.46,-1.32l-1.41,-2.01l-1.14,-0.32l-0.75,-1.52l-2.76,-0.08l-0.69,0.38l-0.23,0.96l1.72,2.9l0.44,1.54l-0.21,0.1l-2.82,-4.21l-0.91,-0.37l-0.66,0.34l-0.25,0.85l0.21,2.71l-0.5,0.34l-0.12,0.53l1.16,1.97l-2.87,3.22l-1.62,-1.81l-1.16,-0.3l-0.73,0.72l-0.99,2.55l-0.5,0.02l-2.34,-1.73l-0.53,0.04l-2.46,2.31l-1.38,-0.68l-0.34,-0.96l-3.59,-2.17l-1.01,0.04l-0.78,1.14l-1.26,0.58l-1.98,-0.68l-1.13,0.01l-0.89,0.49l-0.57,1.09l0.44,1.9l-0.35,0.43l-2.12,-0.02l-1.74,-0.89l-1.58,0.52l-0.83,1.54l-1.03,0.4l-0.45,0.56l0.34,1.8l-0.45,1.02l-1.02,-0.23l-2.5,0.54l-2.42,-0.13l-4.32,-3.68l-1.41,-1.87l-7.25,-4.81l-1.28,-0.26l-3.01,0.86l-1.2,-0.94l-2.13,-0.44l-0.66,-3.94l-0.55,-1.18l0.25,-2.19l1.5,-1.43l0.62,-2.83l2.06,0.3l0.12,1.62l0.77,0.67l3.64,-1.52l-0.13,-2.39l-0.91,-1.66l-0.02,-2.41l-0.53,-2.25l0.64,-0.44l1.69,0.26l2.91,-2.43l1.47,-0.4l1.3,-2.31l0.03,-1.08l-0.85,-0.79l-1.43,-2.37l1.18,-2.56l-1.44,-3.06l-0.23,-2.19l0.4,-1.78ZM684.08,66.17l0.19,-0.78l-1.1,-1.08l-0.18,-0.81l-1.0,-0.26l-0.68,0.54l-0.49,1.06l0.13,0.83l2.05,0.71l1.07,-0.21ZM679.53,67.83l0.67,-0.5l0.39,-0.81l0.03,-0.68l-0.37,-0.5l-1.32,0.42l-0.56,0.62l0.22,1.31l0.93,0.15Z\",\n            name: \"Zaragoza\"\n          },\n          \"ES-MA\": {\n            path: \"M516.44,353.08l-0.61,-1.15l-0.48,-0.19l-1.26,0.41l-0.52,-2.77l-0.84,-1.85l-1.48,-1.54l-1.56,-2.52l-0.78,-0.29l-1.53,0.1l-2.9,1.29l-0.66,-0.01l-0.93,-0.54l-0.05,-0.62l3.58,-1.14l1.12,-0.67l1.46,-1.99l2.44,-0.76l1.12,-0.65l0.76,-0.9l0.79,-2.93l0.75,-0.92l0.22,-1.14l-1.73,-2.57l1.27,-1.5l1.32,-0.32l2.88,2.05l1.46,-0.09l1.33,-0.7l1.03,-1.03l0.81,-1.5l0.12,-1.63l-0.56,-1.52l-1.5,-1.83l8.75,-4.94l0.58,-0.97l-0.15,-0.56l-1.88,-1.16l0.87,-0.18l2.14,0.58l0.98,-1.17l1.67,1.45l1.22,-0.12l2.31,-1.61l0.24,-1.1l-0.6,-1.39l0.31,-0.34l3.82,0.19l0.88,1.55l2.28,0.47l2.62,-1.3l1.43,-1.74l1.92,0.0l0.4,2.52l1.91,0.85l1.49,3.61l0.27,2.93l0.92,1.69l4.59,3.53l10.91,4.39l1.92,-0.07l2.07,2.15l-0.49,1.49l0.09,0.88l-2.04,-0.57l-4.82,1.14l-3.91,-0.95l-1.07,0.26l-1.13,0.77l-4.44,0.59l-7.1,-0.52l-0.82,0.2l-0.75,0.6l-1.88,2.72l-1.67,3.07l-2.33,0.29l-1.34,2.09l-1.29,0.78l-2.75,0.82l-7.27,-0.6l-3.68,2.26l-2.63,0.22l-1.98,1.09l-2.56,0.52l-1.26,1.1l-1.1,1.8l-0.72,2.13Z\",\n            name: \"M\\xe1laga\"\n          },\n          \"ES-AL\": {\n            path: \"M647.09,281.89l-0.59,0.92l-0.44,2.46l0.29,2.49l-0.36,1.45l0.21,2.55l7.04,9.72l0.99,0.45l0.62,-0.59l2.23,0.52l3.35,2.45l-0.16,0.33l-0.84,0.06l-0.37,0.41l-0.79,1.8l-1.14,1.52l-3.44,3.6l-1.71,6.04l-2.05,4.18l0.19,2.06l-1.37,0.25l-2.04,1.45l-0.65,0.8l-0.39,1.8l-1.67,1.54l-0.59,1.59l-1.03,0.38l-0.59,0.98l-1.21,0.62l-1.97,-0.3l-3.17,-3.34l-1.49,-0.85l-1.81,-0.43l-2.9,0.93l-2.01,-0.61l-3.3,0.55l-0.82,0.53l-1.59,3.74l-1.55,1.43l-0.9,0.36l-2.12,-0.05l-0.63,0.25l-2.46,-1.46l-1.2,0.57l-1.34,-1.48l-1.3,-0.79l-0.92,-0.05l-2.09,0.64l-3.46,-0.57l-1.83,0.13l-0.32,-1.29l4.19,-2.45l0.17,-0.48l-0.66,-1.73l-1.01,-0.88l2.85,-2.76l0.35,-0.88l-0.71,-2.53l-0.12,-1.93l0.34,-0.3l1.83,-0.28l1.11,-2.69l1.72,-1.03l1.17,-4.01l1.6,0.02l1.86,1.64l1.95,0.17l1.95,0.78l0.55,-0.4l-0.21,-3.28l0.5,-1.21l0.36,-3.13l5.93,-4.78l5.19,-1.5l0.28,-0.45l-0.64,-3.77l2.02,-0.39l0.32,-0.42l-0.22,-3.4l1.54,-3.02l-0.3,-2.75l0.33,-2.25l2.51,-1.68l1.53,0.82l1.78,-0.1l1.94,0.81l3.66,0.46Z\",\n            name: \"Almer\\xeda\"\n          },\n          \"ES-CE\": {\n            path: \"M511.18,371.29l0.65,0.05l1.58,0.93l0.98,0.13l-1.63,1.38l-0.96,-1.08l-0.62,-1.41Z\",\n            name: \"Ceuta\"\n          },\n          \"ES-PM\": {\n            path: \"M879.05,181.26l0.56,-1.13l2.54,-0.51l1.03,0.34l5.48,-0.29l1.78,-0.79l1.15,1.1l0.15,1.05l0.67,0.16l0.88,-0.85l2.06,1.74l1.1,0.37l0.32,0.41l0.26,0.97l-0.73,0.54l0.86,0.66l0.95,0.05l0.71,1.88l-0.58,0.34l-0.1,2.76l-1.63,0.2l-2.72,-1.21l-6.46,-3.87l-1.42,-0.52l-1.81,-0.05l-2.78,0.51l-1.08,-0.35l0.55,-2.31l-1.2,-0.58l-0.54,-0.62ZM824.06,203.89l-0.68,-0.47l-1.24,0.47l-0.29,-0.73l-0.74,-0.62l0.06,-2.0l4.3,-2.16l2.0,-1.93l2.09,-0.62l1.96,-1.76l0.51,-0.87l0.85,-0.08l2.26,-2.21l1.53,-0.66l2.53,-1.84l1.24,-0.05l3.58,-1.97l5.63,-1.0l3.94,-1.46l0.3,0.35l-1.89,0.73l-0.89,0.8l-0.7,-0.15l-0.4,0.38l-0.09,1.52l0.34,0.42l1.58,0.22l2.15,-0.55l-0.22,0.89l-1.98,0.62l-0.51,0.5l-0.15,1.2l0.6,1.38l1.13,0.98l2.55,0.95l2.96,-0.02l2.38,-1.58l3.19,1.45l0.97,0.11l0.18,1.17l-0.47,0.66l0.18,0.73l-0.47,1.12l-0.35,0.54l-1.24,0.56l-0.53,0.74l0.08,1.42l-3.18,3.13l-1.26,2.26l-0.33,2.16l-0.61,0.17l-0.62,1.85l-1.16,1.13l-3.67,2.08l-2.37,2.04l-1.06,-1.44l-1.11,-0.63l-0.51,-1.47l-1.4,-0.79l-1.98,0.19l-3.39,-0.22l-1.4,-0.52l-0.85,-0.98l-0.4,-2.45l-0.54,-0.49l0.65,-1.51l-0.45,-1.33l-2.65,-1.84l-1.35,-0.32l-3.51,1.59l-0.74,0.77l-0.4,1.18l-0.82,0.78l-0.72,0.08l-0.73,-1.22l0.31,-0.81l-1.07,-1.0l-0.58,0.04l-0.32,0.36ZM845.43,222.3l-0.61,0.82l-0.79,-0.06l-0.48,-1.09l1.9,-1.13l-0.02,1.47ZM779.43,235.19l-1.44,-0.76l-0.9,0.2l-0.33,0.39l-1.19,-0.89l-0.13,-0.61l0.59,-1.78l-0.23,-0.56l2.77,-0.32l0.4,-0.47l-0.34,-1.93l0.02,-0.9l0.29,-0.3l2.01,-1.52l0.71,0.19l0.58,-0.41l0.68,0.11l1.79,-1.07l1.75,-0.13l1.05,-0.64l2.78,0.97l-0.11,0.44l0.69,2.02l-0.95,0.59l-0.61,1.51l-1.45,0.91l-1.22,1.71l-1.76,1.1l-0.85,-0.28l-1.09,0.95l-0.67,2.69l-0.65,0.01l-0.43,-0.86l-0.69,-0.49l-1.08,0.13ZM782.37,242.36l1.04,-0.32l0.6,-0.75l1.8,2.29l1.61,0.78l1.63,-0.52l0.38,0.44l-0.02,0.55l-1.82,0.1l-2.95,-1.42l-2.32,1.88l-0.04,-1.38l0.41,-1.21l-0.31,-0.43Z\",\n            name: \"Baleares\"\n          },\n          \"ES-VI\": {\n            path: \"M597.76,46.37l-1.97,-2.06l1.98,-2.6l2.03,0.03l0.97,1.28l2.42,0.55l2.3,-0.24l2.27,-1.31l0.13,-0.56l-0.3,-0.71l-2.08,-1.11l1.35,-0.22l0.63,-1.17l-0.5,-0.95l-0.93,-0.4l-0.33,-0.88l-0.77,-0.2l-0.74,0.32l-1.05,1.52l-2.67,-0.47l0.55,-1.04l0.27,-2.58l-0.3,-0.59l-0.89,-0.49l0.38,-1.14l0.39,-0.28l1.59,0.87l2.43,-0.46l0.75,-0.5l0.42,-1.54l0.54,-0.37l0.85,0.44l1.25,2.03l-0.71,1.68l-0.06,0.91l0.43,0.7l2.12,1.76l1.89,0.1l2.81,0.98l1.81,-0.29l1.69,0.59l1.19,-0.3l1.23,0.2l0.51,-0.4l0.12,-0.76l-1.03,-1.6l0.92,-0.37l0.98,0.28l1.8,-0.27l0.41,2.01l-2.39,1.37l-0.37,1.19l0.2,0.46l1.94,0.99l0.92,-0.41l1.28,0.52l5.85,0.5l1.69,0.95l1.14,1.37l1.04,0.1l0.46,1.68l-0.1,0.72l-1.28,2.34l-0.2,1.92l-1.25,0.56l-0.42,0.66l0.34,2.31l0.76,0.74l-1.53,0.9l-0.86,0.06l-0.72,-0.83l-1.25,-0.22l-3.62,2.75l0.27,1.27l1.71,0.8l0.76,-0.26l0.68,-0.8l0.3,0.17l0.22,1.06l-0.41,2.82l-2.79,-0.95l-0.34,-0.73l-0.49,-0.21l-0.85,0.44l-0.48,0.77l-1.51,0.34l-0.81,-0.61l-1.26,0.29l-1.95,-1.22l-0.25,-2.43l-2.5,-1.51l-1.26,0.56l-0.42,0.99l-1.11,0.18l0.46,-1.1l-0.14,-0.44l-0.79,-0.11l-0.32,-1.76l-3.1,-2.46l-1.02,-0.43l-0.95,-1.06l-3.92,-2.39l-2.49,0.72l0.04,-0.62l-0.84,-1.02l1.56,-2.67l0.06,-0.77l-0.6,-0.71l-0.88,0.18l-0.93,1.0l-1.55,0.25l-0.81,1.36ZM621.09,49.14l-3.53,-1.01l-3.75,0.06l-0.88,0.48l-1.37,1.69l-0.16,0.78l2.38,2.18l2.54,1.06l4.88,1.34l3.03,0.07l0.86,0.48l1.05,-0.33l0.25,-1.19l-0.55,-1.37l-0.61,-0.1l-1.16,0.71l-1.12,-1.18l1.12,-0.7l0.59,-1.24l-0.02,-0.72l-1.04,-0.32l-1.05,-0.77l-1.46,0.09Z\",\n            name: \"\\xc1lava\"\n          },\n          \"ES-S\": {\n            path: \"M546.44,19.75l0.61,0.53l0.53,-0.0l0.75,-0.66l0.94,-0.16l2.15,0.92l0.86,-0.77l1.83,0.18l4.97,-0.47l1.24,-0.8l2.44,-0.68l2.86,-0.17l0.46,-0.62l1.04,0.61l0.51,-0.08l0.91,-0.54l-0.46,-0.55l1.08,-0.7l2.18,-0.11l2.17,-0.81l1.4,0.39l-2.39,1.45l0.4,1.3l0.91,0.39l1.15,-0.41l0.81,-0.9l0.51,0.52l0.78,-0.01l0.26,-0.54l-0.25,-0.78l0.72,-0.16l0.19,-0.55l1.24,-0.12l1.23,-0.77l2.97,-0.83l0.52,0.03l0.34,0.87l0.58,0.03l1.29,0.92l2.82,0.5l0.08,0.35l-0.29,0.03l-0.92,-0.4l-0.43,0.17l-1.33,1.42l1.82,1.18l0.79,-0.54l0.93,0.31l1.24,-0.31l7.13,1.67l1.18,1.04l0.94,0.32l0.04,1.36l-0.29,0.55l-1.53,0.67l-1.25,-0.32l-3.63,-0.02l-4.37,2.78l-0.73,1.15l0.15,1.9l0.64,1.91l-3.24,-0.17l-5.3,-1.59l-0.81,0.44l-2.34,2.47l-1.75,1.15l-2.1,0.1l-0.81,0.35l-0.3,1.44l-0.37,0.36l-1.6,0.68l-2.38,1.74l-1.31,2.97l-0.08,0.87l0.59,0.98l1.35,0.45l1.97,-0.82l0.88,-1.15l0.79,0.09l0.35,0.71l-1.04,0.59l-1.05,0.06l-0.8,1.4l0.35,1.27l0.63,0.42l0.88,-0.24l0.65,-0.83l0.67,-0.05l0.55,2.56l-2.38,0.39l-1.52,1.2l-1.68,0.46l-0.97,-0.25l-0.06,-2.25l-0.64,-0.42l-0.85,0.54l-1.04,2.07l-1.09,0.24l-0.95,-0.99l-1.96,-0.39l-0.91,-0.75l1.92,-0.83l0.22,-0.68l-0.45,-0.83l-0.74,-0.26l-2.02,0.94l-0.38,-0.18l-0.88,-4.98l-4.7,-1.73l-2.12,-2.56l-2.3,-0.65l-3.69,1.32l-6.56,0.39l-0.43,-1.34l-1.3,-1.54l-2.26,-1.39l-0.28,-1.15l0.14,-2.14l2.06,-0.34l1.14,0.13l0.55,-0.3l0.53,-1.18l0.25,-2.12l2.81,-0.32l1.87,-1.22l0.99,0.17l0.67,0.85l1.15,-0.36l0.53,-1.51l-0.72,-1.97l0.93,-1.96ZM594.81,27.57l0.0,-1.09l0.64,0.83l-0.64,0.26Z\",\n            name: \"Cantabria\"\n          },\n          \"ES-TE\": {\n            path: \"M658.15,167.84l0.2,-1.0l-0.3,-0.93l-1.69,-2.07l-1.47,-1.0l2.29,-2.63l1.74,-1.32l0.1,-2.45l0.73,-1.84l2.95,0.85l1.71,-0.77l0.45,-0.62l-0.06,-1.6l0.68,-1.83l-0.1,-1.58l-0.68,-1.44l0.71,-2.28l-0.1,-1.73l-0.24,-0.58l-1.44,-1.04l-1.04,-1.42l-0.22,-2.98l1.94,0.1l1.28,-0.45l2.07,0.19l0.62,-0.22l0.72,-1.15l-0.35,-2.02l1.34,-0.75l1.02,-1.66l1.04,-0.0l1.34,0.78l2.36,0.02l0.7,-0.39l0.33,-0.94l-0.49,-1.51l0.59,-0.99l1.03,-0.11l2.32,0.71l1.6,-0.71l0.72,-1.11l0.41,0.04l3.21,1.97l0.56,1.13l1.68,0.73l0.91,-0.29l1.94,-2.02l2.24,1.63l1.11,-0.03l0.63,-0.66l1.03,-2.57l2.23,2.21l0.6,0.0l3.36,-3.77l0.05,-0.47l-1.12,-1.9l0.55,-0.62l-0.17,-3.18l0.44,0.09l2.71,4.09l1.01,0.39l0.56,-0.64l0.06,-0.95l-2.16,-4.01l0.27,-0.36l2.1,-0.06l0.72,1.45l1.15,0.33l1.5,2.08l2.74,1.47l1.09,-0.5l1.69,1.77l9.25,3.84l0.65,0.5l1.7,3.33l1.12,0.21l1.14,-1.27l1.71,0.03l1.96,0.54l1.75,-0.22l0.48,1.19l1.76,1.09l0.54,1.52l-0.14,0.92l-0.98,1.73l-0.47,1.7l0.87,3.16l-1.6,2.14l-2.42,1.38l-0.03,0.64l-2.79,0.4l-2.05,1.07l-0.2,-0.87l-0.54,-0.53l-3.66,-0.22l-3.08,-2.08l-1.44,-0.25l-0.72,0.3l-1.2,1.53l-0.35,2.28l-2.64,1.41l-1.63,-0.5l-1.47,0.76l-0.12,1.96l0.31,0.66l1.78,0.67l1.23,-0.17l-0.13,4.18l1.01,1.56l-1.9,0.75l-0.79,1.04l0.27,0.91l1.61,1.48l0.27,0.76l-1.7,1.1l-1.04,1.34l-1.28,0.98l-0.18,1.67l-0.41,0.42l-1.37,0.59l-2.04,0.33l-1.53,-0.47l-0.9,0.37l-0.21,1.89l-0.69,2.12l-1.91,2.23l0.17,1.47l-2.54,1.18l-2.79,0.22l-1.01,1.9l-2.33,1.36l-0.36,1.53l0.27,1.35l1.49,1.7l-1.81,0.85l-1.06,0.12l-0.65,-0.38l-0.37,-1.86l0.26,-1.39l-0.94,-1.22l-3.18,-1.12l-2.26,0.02l-2.9,0.66l-0.38,-0.23l-0.48,-1.29l2.85,-1.27l0.48,-0.79l-0.18,-0.94l-3.02,-2.29l-3.32,-0.6l-2.5,-3.76l-0.59,-0.02l-0.65,0.49l-0.37,0.89l0.03,1.17l-1.35,0.38l-2.75,-0.36l0.24,-1.45l-0.38,-0.76l-1.66,0.01l-1.22,-0.34l-1.11,0.2l-4.74,-4.02l-1.13,-0.52l-1.05,0.09Z\",\n            name: \"Teruel\"\n          },\n          \"ES-CC\": {\n            path: \"M424.96,197.51l7.98,0.35l2.0,-0.54l2.2,-0.12l0.9,0.46l1.25,0.05l6.63,-0.92l0.68,-1.22l-0.11,-1.18l0.79,-1.62l-0.26,-1.4l0.39,-0.59l1.42,-0.67l1.07,-1.49l0.12,-2.65l0.62,-0.68l0.33,-2.13l0.81,-1.8l-3.13,-4.52l-0.98,-0.56l-1.43,-0.24l-0.34,-0.45l-0.54,-2.11l0.88,-1.78l2.33,-1.26l2.4,-0.15l0.94,-0.76l1.63,1.24l2.68,0.08l1.45,-0.64l1.55,0.38l1.29,-0.56l3.4,-0.7l0.95,-1.06l-0.17,-1.32l1.51,-1.24l2.84,-1.07l1.22,-1.03l1.66,-0.4l1.56,-1.71l2.07,-0.65l2.07,-1.12l3.93,2.13l0.58,0.89l1.27,0.5l-0.86,1.55l-0.12,0.56l0.28,0.32l2.76,1.2l1.46,1.19l2.52,1.04l1.28,-0.22l1.08,-1.72l2.65,-0.94l0.48,0.61l-0.4,1.32l0.45,0.66l1.07,0.17l1.42,-0.43l1.46,0.53l2.29,1.69l1.03,1.23l2.62,1.06l2.42,-0.2l2.53,-1.98l2.35,-0.52l-0.53,1.33l0.09,2.55l1.14,2.11l-0.91,0.45l-0.36,0.72l-0.37,4.66l-0.68,3.57l0.21,1.97l0.52,0.26l2.33,-0.3l1.01,0.95l-0.73,1.45l-0.37,2.62l0.68,1.07l2.36,0.19l1.88,-1.85l1.12,-0.08l0.27,0.77l-0.21,1.25l0.95,1.47l-0.64,2.82l-1.62,2.39l0.07,0.83l4.76,4.56l1.61,0.72l3.34,3.69l-1.29,0.67l-2.3,0.31l-1.04,-1.24l-1.07,-0.28l-0.7,0.73l-0.3,2.07l-2.03,1.25l-2.58,-0.01l-2.92,-0.83l-0.95,0.22l-0.62,1.27l-0.28,1.9l0.33,1.53l-1.84,2.5l-1.59,0.5l-2.89,-2.33l-1.16,-0.24l-0.99,0.24l-1.95,1.0l-0.05,0.68l1.23,1.7l-0.41,1.09l-0.72,0.55l-1.37,0.02l-1.52,0.78l-2.91,-2.36l-1.87,-0.45l-0.43,0.18l-0.68,1.12l-1.06,0.68l-2.31,0.8l-0.52,-0.9l-0.65,-0.06l-1.67,1.91l-0.41,0.06l-0.4,-2.65l-0.63,-0.27l-2.73,2.01l-1.85,2.18l-0.95,-1.05l-1.4,-0.08l-0.86,-1.2l-0.86,-0.54l-1.82,-0.12l-0.68,-1.08l-0.11,-2.49l-0.57,-0.34l-1.99,0.96l-6.17,-0.52l-1.09,0.94l-0.44,-0.21l-0.58,-1.04l-3.07,-0.84l-1.11,0.96l-3.17,-0.56l-0.99,-1.86l1.38,-1.62l0.5,-1.51l-0.33,-1.24l-0.88,-0.75l-0.84,-1.71l-0.84,-0.59l-2.89,0.21l-6.36,-2.48l-0.48,0.15l-0.71,1.05l0.15,0.58l1.23,0.63l0.37,0.58l-0.81,2.8l-0.51,-0.06l0.06,-2.67l-0.33,-0.43l-1.96,0.03l-2.05,1.16l-0.34,1.06l0.58,1.01l-1.71,2.1l-1.51,-0.18l-2.85,-3.07l-0.19,-1.84l0.73,-2.47l0.0,-1.0l-0.36,-0.68l-2.67,-0.91l-1.23,-1.8l-2.04,-1.24l-1.86,-2.01l-1.35,-3.37Z\",\n            name: \"C\\xe1ceres\"\n          },\n          \"ES-P\": {\n            path: \"M550.26,37.28l1.18,1.91l0.66,0.46l4.54,1.62l0.79,4.86l1.07,0.51l1.26,-0.74l0.95,-0.12l-0.02,0.5l-1.69,0.53l-0.21,1.04l1.2,1.07l1.99,0.41l0.71,0.77l-0.59,0.86l-1.22,-0.71l-0.86,0.17l-1.16,0.69l-1.27,1.47l-0.83,0.47l-1.18,-0.41l-0.64,0.94l-0.14,0.84l0.41,2.53l-0.62,0.44l-0.15,0.45l0.34,1.05l-0.52,0.21l-0.15,0.64l1.58,1.5l0.64,2.01l0.07,1.26l-1.88,-0.16l-0.84,0.25l-0.69,0.99l-0.04,1.75l0.64,1.39l1.57,0.02l1.6,7.1l-0.11,0.63l1.83,1.81l-0.51,1.99l0.35,0.5l3.11,0.29l0.59,2.91l1.16,1.3l3.81,-0.49l0.32,0.25l-2.2,2.68l0.09,1.25l0.39,0.32l0.92,-0.03l3.52,-1.66l0.35,0.2l0.08,0.72l-0.62,0.7l-2.61,0.73l-0.76,2.02l-2.07,0.72l-1.35,-0.04l-0.41,0.39l0.07,2.19l1.94,1.84l-0.05,0.44l-1.74,-0.22l-0.85,-1.41l-0.48,-0.17l-1.06,0.4l-4.25,-0.13l-2.16,1.41l-3.4,-0.44l-1.63,0.8l-0.77,-0.1l-1.0,-0.51l0.06,-2.54l-0.61,-0.35l-1.1,0.7l-1.77,0.3l-2.19,-2.06l-0.59,-1.4l-1.07,-0.46l-1.37,0.5l-2.57,3.02l-0.8,0.25l-1.81,-3.57l-1.28,-1.65l-0.44,-0.13l-2.11,0.71l-0.7,-0.72l-0.51,-0.05l-1.14,0.76l-0.39,-0.63l1.5,-3.03l0.86,-0.71l-0.07,-1.65l0.71,-0.89l0.25,-1.04l-0.21,-2.9l-0.38,-0.37l-3.45,-0.16l0.35,-1.13l-0.18,-2.13l0.6,-2.52l1.63,-0.29l0.32,-0.31l0.5,-2.43l-0.5,-0.47l-0.88,0.25l0.13,-0.85l2.16,-0.31l0.34,-0.42l0.93,-7.47l-1.0,-0.64l0.7,-3.37l-0.1,-2.32l0.68,-1.73l-0.34,-0.62l-1.67,-1.16l1.08,-1.72l0.15,-3.65l1.39,-0.32l0.63,-1.85l1.46,-1.32l0.51,-2.33l1.4,-1.26l2.71,-0.65l5.46,-0.21l3.66,-1.31l2.09,0.74ZM564.08,79.89l-1.08,-0.11l-0.01,-0.8l0.88,0.17l0.21,0.74Z\",\n            name: \"Palencia\"\n          },\n          \"ES-PO\": {\n            path: \"M369.5,64.09l1.85,-0.73l0.43,0.28l-0.34,0.27l-0.0,0.69l0.35,0.21l1.28,0.34l0.86,-0.42l0.08,-1.52l0.47,-0.69l-0.48,-1.63l0.07,-1.33l1.88,-1.67l2.26,-4.75l2.59,-0.84l1.59,0.33l1.22,-1.35l2.83,-0.46l1.22,0.6l1.34,-0.11l1.05,-0.7l1.02,-1.36l1.28,0.37l0.88,-0.34l0.42,-0.99l-0.11,-1.83l0.77,1.0l0.61,0.24l1.59,-0.76l1.75,0.25l1.38,-1.06l4.9,0.88l2.09,-0.67l0.86,0.19l-0.56,1.88l0.21,1.06l1.93,2.06l2.37,1.13l-0.75,1.4l-0.24,2.07l-1.4,2.55l-0.87,0.38l-1.41,-0.06l-1.03,1.32l-1.88,-0.45l-3.0,0.16l-0.96,-0.99l-0.56,-0.01l-1.54,1.48l-1.45,0.47l-2.03,1.87l-1.34,-0.09l-0.42,0.47l-0.05,2.94l0.95,2.11l-0.0,1.27l1.34,1.96l0.8,0.46l-0.42,1.38l0.07,0.88l1.72,1.83l2.4,-0.47l-0.51,2.71l-2.56,1.59l-1.74,0.37l-1.97,1.32l-6.12,0.89l-2.88,1.38l-2.31,0.23l-0.78,0.56l-1.04,1.94l-3.13,1.44l-1.11,1.57l-2.13,1.05l-1.17,1.11l-0.78,-10.39l2.72,-0.55l0.33,-0.84l-0.84,-0.77l0.97,-0.55l0.35,-0.99l1.32,-1.19l5.88,-3.85l0.26,-2.22l-0.33,-0.65l-0.7,0.05l-0.86,0.73l-0.9,1.61l-3.85,1.4l-0.48,0.43l-2.53,-0.03l0.36,-0.93l0.79,0.15l0.23,-0.36l0.02,-2.16l2.06,0.07l1.86,-2.26l2.57,-1.83l0.3,-1.28l-1.86,-0.05l-2.66,1.61l-1.99,0.29l-1.18,-0.13l-0.79,-0.44l-0.77,-1.88l-1.94,-0.62Z\",\n            name: \"Pontevedra\"\n          },\n          \"ES-GC\": {\n            path: \"M172.03,684.1l0.77,-0.51l0.53,-0.92l0.42,-3.36l1.93,-2.66l1.08,-0.61l2.4,-0.44l2.19,-1.59l3.94,-0.48l0.69,-0.74l1.59,-3.71l0.41,-0.08l1.49,1.18l-0.66,1.8l-0.88,0.7l-0.15,0.84l0.41,1.89l-0.54,1.22l0.01,1.38l-1.63,1.82l-3.05,1.08l-1.19,0.99l-3.73,0.67l-1.15,0.88l-1.38,2.15l-1.23,-0.67l-1.88,-0.03l-0.38,-0.79ZM185.57,668.86l0.96,-1.83l0.37,0.09l0.19,0.44l-0.43,0.78l-1.1,0.53ZM146.98,719.21l0.2,-0.75l2.16,0.12l3.83,-1.49l2.89,-1.82l1.29,-1.19l1.14,-1.59l0.47,-3.0l1.21,-2.08l1.16,-3.44l1.72,-2.29l0.92,-2.16l1.62,-2.34l1.4,-5.48l2.33,-1.25l1.33,-0.17l1.18,0.36l1.03,1.1l0.53,3.21l-0.3,3.62l-1.12,3.21l0.0,1.97l0.53,1.12l-0.99,1.15l-0.24,1.22l-2.27,4.43l-1.17,0.62l-6.05,1.19l-1.39,0.9l-1.61,0.42l-0.92,0.52l-3.51,3.95l-1.52,0.68l-0.86,-0.0l-2.38,-0.87l-2.62,0.13ZM99.0,715.68l3.79,0.89l2.98,0.0l2.46,0.57l1.15,-0.3l0.26,-0.39l0.66,4.37l0.46,0.74l0.95,0.65l-0.5,2.12l0.47,0.81l-1.04,1.58l0.55,1.93l-1.1,0.63l-1.74,1.93l-3.34,1.07l-1.45,1.3l-1.01,-0.61l-3.1,-0.55l-2.07,-1.7l-0.59,-0.81l-1.1,-0.66l-1.45,-3.33l0.14,-2.99l2.57,-1.64l1.73,-2.07l-0.11,-1.1l0.58,-1.24l-0.14,-1.19ZM109.66,716.36l-0.11,-1.05l0.61,-0.11l0.11,0.28l-0.61,0.88Z\",\n            name: \"Las Palmas\"\n          },\n          \"ES-GI\": {\n            path: \"M806.16,70.42l2.64,-0.18l2.12,-1.58l0.71,-1.25l0.44,-0.19l1.94,0.19l3.54,-0.79l3.84,1.85l1.75,0.29l0.9,1.4l0.85,0.62l2.66,0.78l1.05,-1.27l3.28,0.69l1.16,-0.05l0.36,-0.64l-0.8,-1.33l1.75,-1.32l1.31,-0.32l2.47,0.09l2.55,-1.76l1.94,-0.13l1.32,-0.87l1.1,0.38l0.88,-0.36l1.51,0.1l0.96,1.3l1.47,0.6l3.43,-0.11l-0.34,1.08l0.15,1.71l0.68,1.01l0.97,0.55l1.57,-0.16l0.72,0.67l0.82,-0.34l0.83,0.38l-1.06,2.57l-0.75,0.78l-1.92,0.1l-1.71,-0.94l-0.74,0.14l-1.06,0.93l-0.58,1.3l-0.09,2.88l0.26,0.98l2.15,1.58l1.5,1.9l-0.71,1.69l0.52,2.16l1.04,1.04l-0.11,0.71l-1.45,2.68l-1.63,1.87l-1.37,-0.02l-1.53,1.0l-0.5,1.38l-4.62,3.06l-0.73,1.01l-3.66,0.86l-2.3,1.82l-0.33,-0.82l0.56,-1.01l-0.38,-1.21l-0.93,-0.77l-1.86,-0.63l-1.55,0.06l-1.3,0.68l-3.32,0.63l-4.29,-3.88l-1.93,-0.17l-1.16,0.28l-1.11,-1.1l-0.42,-0.89l-0.08,-0.71l0.49,-0.79l1.9,0.78l1.65,-0.82l0.97,-0.11l0.78,-1.1l0.02,-0.97l-0.85,-0.95l1.93,-1.96l0.58,-1.83l-0.35,-1.18l-0.7,-0.94l-1.09,-0.61l-1.46,0.01l-1.96,-2.16l-2.47,0.26l-1.28,-1.47l-1.95,0.06l-1.17,0.68l-1.72,0.02l-1.18,0.37l-1.18,-0.82l-1.16,0.03l-0.41,-2.59l-1.06,-1.4l0.18,-0.95l0.7,-1.07l-0.27,-1.35l-0.75,-0.44l-2.16,0.19l-1.31,-0.87l-1.12,-0.26l-2.67,0.51l-0.13,-1.81l-0.99,-1.54l-0.2,-1.78l-2.72,-1.01l-0.77,-0.99l-0.2,-0.83l2.67,0.37l2.97,1.63l2.25,0.46l1.36,3.21l1.43,1.06ZM805.86,65.21l-1.05,-0.3l0.28,-0.93l0.24,0.23l0.53,1.0Z\",\n            name: \"Gerona\"\n          },\n          \"ES-TO\": {\n            path: \"M511.41,187.09l0.97,-9.37l0.17,-0.37l0.98,-0.41l3.74,0.43l1.68,0.81l1.04,0.02l1.18,-0.35l2.83,-2.28l1.59,-0.48l0.53,1.63l0.8,0.29l1.14,-0.2l1.87,-1.13l0.8,-1.62l3.06,-2.07l0.56,-0.75l0.34,-1.37l3.66,-0.48l0.47,2.5l0.71,0.73l1.48,0.49l2.64,-0.66l1.63,0.62l1.02,-0.27l0.63,-0.64l2.27,-1.1l2.77,-3.24l0.61,2.6l2.26,1.59l1.11,-0.64l1.42,-1.67l2.1,-0.69l1.7,1.5l1.61,0.3l1.41,-0.59l1.08,0.47l1.19,1.24l5.82,1.84l1.14,0.9l1.23,-0.07l1.43,1.29l3.46,0.3l2.17,1.08l0.01,0.79l-0.81,1.64l-1.44,0.73l-2.4,2.21l-0.78,0.23l-1.0,0.93l-2.94,0.75l-0.97,0.6l0.17,0.96l1.95,1.23l1.27,-0.03l2.58,-2.07l3.86,-1.37l0.28,-1.12l4.16,-1.46l0.97,-1.17l3.68,0.14l1.34,-0.5l1.36,0.53l2.21,-0.43l3.82,-1.59l0.49,0.26l-0.14,1.34l1.1,2.98l0.39,0.26l1.42,-0.06l-0.01,2.02l-1.09,2.53l0.23,0.53l1.07,0.39l1.34,1.36l0.72,2.27l1.04,1.17l0.7,2.07l3.48,3.56l-0.62,1.79l-0.23,5.92l-1.54,1.03l-1.79,-0.53l-1.72,0.29l-3.13,-2.09l-1.65,0.35l-0.33,0.65l-3.99,0.15l-0.82,0.68l-0.75,2.24l-2.79,0.21l-2.86,1.54l-0.43,1.48l-2.87,1.86l-1.23,-0.36l-3.69,0.6l-1.79,1.18l-1.98,-1.09l-1.01,0.05l-1.82,1.5l-1.06,-0.09l-1.09,-0.84l-2.33,-0.77l-0.18,-2.26l-0.34,-0.36l-4.05,-0.61l-1.41,1.06l-1.02,-0.63l0.9,-3.87l1.51,0.05l0.83,-1.11l0.04,-0.8l-0.7,-1.12l1.3,-1.01l0.25,-0.56l-0.12,-1.55l-0.46,-0.31l-3.19,0.53l-1.26,-0.56l-0.54,0.23l-1.3,3.54l-1.71,0.82l-7.25,-1.42l-0.7,0.18l-0.59,0.79l-0.62,0.1l-0.7,-0.59l-0.5,-2.05l-0.4,-0.3l-1.05,0.02l-0.98,0.65l-0.54,1.84l-1.25,0.72l-0.73,1.23l-2.69,0.19l-2.25,1.38l-0.2,-0.29l0.89,-2.09l-0.53,-1.27l-1.0,-0.95l-3.87,-1.72l-0.6,0.37l-1.03,1.7l-1.66,5.32l-3.37,-3.71l-1.56,-0.67l-3.22,-3.34l-1.39,-1.03l1.59,-2.51l0.7,-3.04l-0.11,-0.69l-0.84,-1.04l0.22,-1.15l-0.39,-1.16l-0.64,-0.4l-1.22,0.11l-1.19,0.78l-0.94,1.15l-1.77,-0.21l0.19,-2.73l0.74,-1.3l-0.04,-0.68l-1.55,-1.4l-2.4,0.18Z\",\n            name: \"Toledo\"\n          },\n          \"ES-MU\": {\n            path: \"M654.09,301.04l-0.76,-0.56l-6.42,-9.09l-0.12,-2.15l0.37,-1.51l-0.3,-2.36l0.42,-2.35l0.64,-0.99l-0.13,-0.6l-0.49,-0.32l-3.71,-0.47l-1.93,-0.81l-1.87,0.08l-2.27,-1.3l-2.55,-3.43l-1.47,-1.05l0.46,-1.33l2.9,-3.36l1.53,-2.75l1.52,-1.19l1.81,-0.59l3.26,-2.86l0.51,-0.03l1.34,0.92l2.8,-0.56l1.67,-0.73l3.62,-2.22l0.32,-0.59l1.35,-0.6l2.08,0.39l0.28,1.71l1.63,1.04l1.01,0.04l2.51,-0.75l2.9,-2.18l0.7,-0.94l-0.18,-4.56l-0.64,-2.32l0.58,-1.09l1.28,-1.31l0.19,-1.84l0.62,-1.21l1.8,-1.8l0.48,-0.18l0.72,0.66l0.84,0.01l2.24,-1.16l1.74,-1.4l2.24,-0.53l1.92,0.58l0.57,1.49l3.23,2.4l0.62,2.8l-0.53,4.44l-2.2,2.17l-0.44,1.48l0.34,3.21l3.35,1.28l0.92,2.3l-0.64,3.31l-1.7,2.83l-0.2,0.98l0.29,1.82l4.17,6.52l1.41,1.59l2.1,1.93l2.06,1.1l0.9,0.04l0.09,0.94l-0.53,-0.6l-0.67,0.12l-0.94,2.34l-1.44,0.71l-0.37,0.88l0.14,0.87l1.9,2.91l2.37,1.24l0.8,0.09l0.53,-0.43l0.35,0.7l-1.01,0.77l-0.81,-0.17l-3.17,1.24l-1.99,0.1l-1.45,0.76l-1.78,-0.83l-1.41,-0.26l-3.45,0.04l-1.31,0.77l-0.24,0.73l0.17,0.56l-1.4,-0.31l-0.68,-0.98l-2.52,-0.7l-1.14,0.97l-2.38,-0.15l-1.86,0.97l-1.81,1.62l-2.32,1.15l-0.85,2.37l-0.86,-0.15l-1.14,0.83l-3.69,1.45l-3.52,-2.55l-2.47,-0.58l-0.85,0.5Z\",\n            name: \"Murcia\"\n          },\n          \"ES-GR\": {\n            path: \"M632.95,274.73l1.44,1.02l1.39,2.16l1.61,1.55l-1.97,1.26l-0.65,0.89l-0.22,2.27l0.31,2.53l-1.53,2.95l0.17,3.33l-2.06,0.39l-0.32,0.46l0.64,3.8l-5.06,1.49l-6.08,4.9l-0.41,0.96l-0.15,2.56l-0.51,1.26l0.17,2.82l-1.54,-0.6l-1.78,-0.12l-1.94,-1.67l-1.34,-0.21l-1.07,0.43l-1.23,4.08l-1.72,1.02l-0.91,2.48l-1.55,0.16l-0.91,0.79l-0.17,0.87l0.26,1.54l0.71,2.19l-0.18,0.53l-2.76,2.5l-0.31,0.74l1.2,1.41l0.44,1.2l-4.16,2.43l-0.19,0.44l0.36,1.44l-3.53,-0.42l-4.07,0.46l-3.48,2.26l-2.26,-0.02l-1.73,-1.14l-1.31,0.35l-1.2,-0.54l-0.86,-0.81l-2.59,0.15l-0.71,0.5l-1.86,0.19l-1.52,-0.44l-0.15,-0.97l0.44,-2.03l-2.36,-2.46l-2.16,-0.02l-10.78,-4.33l-4.84,-3.96l-0.54,-3.72l-1.2,-2.79l2.36,-1.79l-0.14,-1.67l0.96,-1.52l0.12,-1.52l0.55,-0.82l2.49,0.06l3.02,-2.47l2.83,0.06l2.14,1.09l4.38,-0.36l2.24,-3.8l4.2,-2.31l2.34,-0.59l4.73,-3.82l1.14,0.28l1.72,1.7l1.19,0.31l3.66,-0.69l2.5,-2.52l0.98,-0.25l1.31,0.14l3.8,1.81l1.82,-0.74l2.55,0.51l0.5,-0.31l0.25,-1.25l3.01,-1.78l0.07,-3.76l0.39,-1.1l4.07,-6.3l3.32,-2.67l1.23,0.45l2.9,-2.05l0.02,-2.67l1.78,-0.7l3.16,1.4l4.19,1.16l0.94,-0.05Z\",\n            name: \"Granada\"\n          },\n          \"ES-GU\": {\n            path: \"M587.1,144.41l0.66,-1.26l0.37,-1.78l0.89,-0.83l-0.11,-1.38l1.57,-3.91l0.11,-1.2l-1.08,-3.21l-2.04,-1.04l-2.22,-2.41l0.77,-0.15l3.04,-2.07l1.23,-0.35l0.34,-0.7l0.01,-1.37l2.43,0.2l3.56,-0.62l2.05,-1.63l4.55,0.96l4.1,-0.31l1.68,-0.61l0.61,-0.84l0.96,-0.18l0.65,0.44l0.52,1.5l0.88,0.58l1.72,0.42l2.9,-0.63l1.21,1.16l1.76,0.36l1.46,0.98l0.98,-0.08l-0.88,0.92l0.13,0.45l1.05,0.7l-0.23,1.14l1.1,0.44l1.52,-0.44l0.66,1.28l0.99,0.56l0.85,1.61l1.79,0.8l2.34,-0.71l1.45,0.72l1.66,-0.11l2.11,-1.03l2.34,-0.08l1.58,-1.28l2.24,1.74l0.76,0.16l0.52,-0.62l-0.16,-1.27l0.35,-1.67l2.85,-0.82l0.83,0.2l7.06,4.67l1.37,1.84l4.41,3.75l0.37,0.71l-0.14,1.86l0.25,0.91l0.68,1.1l1.99,1.78l0.09,1.42l-0.73,2.49l0.71,1.6l0.07,1.29l-0.67,1.8l0.1,1.4l-0.54,0.54l-1.05,0.31l-1.28,-0.63l-1.42,-0.25l-0.69,0.36l-0.9,2.22l-0.05,2.25l-1.56,1.08l-2.46,2.83l-1.5,-0.99l-1.4,-4.87l-1.53,-2.83l-0.57,-0.44l-0.8,-0.07l-1.45,0.55l-1.37,-0.51l-2.26,-2.01l-2.58,-0.91l-0.79,0.32l-0.42,1.04l-0.78,0.34l-1.83,-0.38l-1.09,-0.63l-0.79,0.05l-0.48,0.78l-0.06,1.82l-0.78,0.79l-2.48,-1.76l-0.88,0.02l-0.64,0.7l-0.16,1.1l1.08,1.99l-1.49,-0.27l-2.13,1.02l-1.21,-1.32l-0.97,0.05l-0.42,0.43l-0.13,0.74l0.77,1.3l-0.24,1.26l1.18,1.17l0.13,0.76l-2.43,-1.28l-2.16,-0.25l-2.26,0.97l-1.63,1.56l-1.62,-0.98l-1.88,0.66l-0.54,4.19l0.56,2.81l-0.56,2.47l-1.89,0.47l-1.07,1.59l-0.49,0.21l-1.2,-0.5l-1.99,-1.82l-0.53,-0.0l-1.0,1.11l0.14,1.17l-1.63,-0.35l-0.4,-3.15l-0.86,-1.69l-1.12,-0.29l-2.0,1.42l0.31,-2.65l0.95,-1.06l0.45,-1.27l0.0,-2.47l-0.7,-1.02l-1.49,-0.8l-0.38,-3.33l-1.87,-1.42l-0.65,-0.07l-0.83,0.4l-0.08,-1.38l-1.29,-1.32l0.3,-2.13l-0.25,-0.47l-1.39,-0.11l-1.59,-1.82l-1.77,0.5l-0.53,-0.45l0.69,-1.38l-0.28,-1.9l-0.64,-1.02l-1.37,-0.47Z\",\n            name: \"Guadalajara\"\n          },\n          \"ES-AB\": {\n            path: \"M629.02,265.35l0.61,-1.09l0.02,-1.5l-1.81,-1.68l-0.44,-4.17l-2.92,-1.0l-0.41,-0.44l-0.04,-3.43l-1.39,-0.62l-1.82,0.03l-1.25,0.39l-2.69,-1.25l0.16,-0.7l-0.64,-1.08l0.49,-1.25l0.72,-0.71l1.89,-0.49l0.66,-0.81l1.0,-2.91l-0.24,-1.79l-1.3,-1.73l-2.07,-0.71l-0.57,-0.8l-0.65,-3.4l-1.48,-1.27l-2.14,0.01l-0.69,-0.23l-0.33,-0.64l2.97,-5.63l-0.1,-1.55l-1.23,-2.22l4.66,-6.08l-0.56,-2.19l2.67,-0.15l1.73,-0.82l2.03,0.58l1.54,-0.03l0.72,-0.53l5.22,4.86l0.64,-0.13l0.9,-1.97l0.62,-0.12l1.16,2.39l0.55,0.18l4.7,-2.48l4.65,0.65l0.43,-0.54l-1.43,-3.72l1.57,0.2l-0.04,0.57l1.93,2.23l3.99,-0.5l1.71,0.85l3.01,0.26l1.53,-1.99l9.31,-4.62l1.51,1.23l0.58,1.34l1.59,-0.17l2.98,1.5l5.96,1.56l-0.17,3.49l-0.87,2.21l-1.02,1.14l-1.14,2.4l-0.32,1.24l0.27,1.32l4.26,4.78l1.34,0.84l3.58,-0.19l1.77,-0.64l1.0,0.41l1.41,2.31l-0.2,1.37l0.54,1.6l-0.29,1.13l-1.12,0.72l-0.21,0.94l0.48,1.55l1.45,1.86l-1.78,0.96l-2.43,0.15l-3.08,-2.29l-0.6,-1.53l-2.4,-0.78l-2.61,0.59l-1.85,1.45l-2.11,1.09l-0.99,-0.67l-1.14,0.24l-2.1,2.1l-0.71,1.43l-0.16,1.72l-1.18,1.15l-0.72,1.4l0.64,2.56l0.31,3.66l-0.53,1.13l-2.82,2.12l-2.56,0.68l-1.38,-0.6l-0.12,-1.48l-0.49,-0.62l-2.7,-0.51l-1.83,0.76l-0.18,0.57l-5.0,2.82l-2.47,0.53l-1.11,-0.85l-1.19,0.02l-3.4,2.94l-1.69,0.52l-1.73,1.34l-1.62,2.85l-2.94,3.43l-0.55,1.56l-4.65,-1.11l-2.77,-1.23l3.78,-4.58l-0.06,-1.7Z\",\n            name: \"Albacete\"\n          },\n          \"ES-SO\": {\n            path: \"M622.78,125.45l0.72,-0.93l-0.57,-0.85l-1.06,0.07l-1.37,-0.94l-1.71,-0.34l-1.29,-1.2l-1.16,-0.02l-1.12,0.59l-2.27,-0.31l-0.59,-0.37l-0.64,-1.69l-1.01,-0.51l-1.5,0.28l-1.19,1.17l-3.43,0.48l-1.33,0.01l-4.48,-0.95l-5.24,-3.55l-0.39,-1.02l0.34,-2.0l-0.22,-0.72l-3.03,-1.17l-0.28,-1.42l-0.7,-0.77l-0.9,-0.31l-1.02,0.35l-1.46,-0.76l-0.38,-0.57l-0.19,-1.8l2.76,0.74l0.47,-0.19l2.55,-4.66l1.19,-0.11l0.36,-0.37l0.14,-1.83l1.16,-0.35l1.74,-1.12l0.18,-0.53l-0.39,-2.96l0.04,-0.81l0.31,-0.26l2.66,1.7l0.89,1.56l0.65,0.07l3.76,-4.23l2.5,-0.4l0.61,-1.72l1.1,-0.37l0.39,-1.55l1.18,-2.46l0.61,-0.18l1.72,0.37l2.45,-1.2l0.74,-0.96l-0.01,-1.15l0.42,-0.99l0.72,-0.64l1.21,-0.0l0.26,0.46l-0.1,0.82l-0.72,0.75l-0.55,1.39l0.2,1.0l3.51,1.28l3.66,-0.03l1.72,-2.64l0.89,-0.84l0.21,-1.84l0.97,0.1l2.76,-1.43l4.39,0.03l0.36,0.21l0.38,1.36l0.96,0.76l2.74,-0.71l1.84,0.1l0.34,0.35l-0.92,0.75l-0.14,1.01l0.43,0.86l1.32,1.27l-0.46,1.04l0.69,1.64l3.38,0.8l2.34,1.1l1.92,-0.37l2.11,-1.16l0.21,1.86l0.59,1.54l0.81,1.07l-1.17,2.92l1.56,2.67l0.8,0.74l-1.04,2.31l-1.47,0.4l-2.77,2.36l-1.55,-0.3l-1.24,0.9l-0.09,0.8l0.57,1.87l0.03,2.51l0.79,1.27l0.35,2.1l-2.85,1.21l-0.13,-1.56l-0.33,-0.53l-1.09,-0.47l-1.5,-0.13l-0.86,0.76l-0.47,2.59l-1.54,1.53l-0.3,2.54l0.57,1.32l0.43,3.67l0.68,0.81l1.83,0.32l1.3,0.94l-0.24,2.85l-2.62,-1.86l-1.91,1.34l-2.25,0.05l-2.09,1.03l-1.33,0.11l-1.52,-0.73l-2.34,0.72l-1.56,-0.82l-0.54,-1.29l-1.04,-0.62l-0.76,-1.37l-0.7,-0.26l-1.66,0.48l0.23,-1.04l-0.95,-0.76Z\",\n            name: \"Soria\"\n          },\n          \"ES-ML\": {\n            path: \"M609.41,400.22l-0.46,0.16l-0.55,-0.55l-0.09,-0.92l0.24,-0.23l0.86,1.55Z\",\n            name: \"Melilla\"\n          },\n          \"ES-LU\": {\n            path: \"M416.6,64.69l-1.08,-0.92l-3.2,-1.54l-1.14,-0.1l0.01,-1.77l-1.31,-1.45l1.36,-2.46l0.13,-1.69l0.82,-1.29l0.09,-0.97l-0.63,-0.73l-2.08,-0.88l-1.73,-1.87l0.57,-2.66l-0.3,-0.51l-0.88,-0.19l0.66,-1.12l1.62,-1.05l0.95,-1.61l0.26,-1.36l-0.01,-1.45l-1.12,-3.05l0.39,-2.0l-1.42,-4.61l1.29,-3.16l-0.34,-1.75l1.86,-2.29l0.29,-2.94l1.42,0.21l0.7,-0.26l0.84,-1.58l1.13,-0.71l1.43,-3.83l-0.54,-1.38l1.22,-1.43l0.11,-1.89l1.26,-1.32l0.03,-0.52l-0.63,-0.85l0.4,-2.11l1.62,-1.06l0.99,1.87l-0.1,0.63l0.53,0.44l0.53,-0.25l0.73,-1.07l0.51,-0.0l1.13,-0.75l1.85,0.27l4.81,2.17l2.44,3.85l1.64,0.79l-0.38,0.82l0.78,0.59l1.78,-0.56l2.41,0.46l2.44,-0.08l0.66,-0.32l1.48,0.54l0.04,0.65l-0.89,1.76l0.21,0.82l-2.32,2.18l-1.3,-0.11l-0.8,0.25l-0.4,0.77l-0.05,1.45l0.36,0.5l1.34,0.29l0.28,1.93l0.61,0.98l1.38,0.94l0.32,1.95l0.53,1.01l3.36,2.06l-0.32,1.63l0.67,1.14l0.82,0.42l0.93,-0.27l1.5,-0.78l0.65,-0.99l1.11,1.46l0.04,0.59l-1.35,1.09l-3.03,0.89l-0.82,1.71l-0.92,0.63l-0.18,0.72l0.56,1.3l0.53,0.34l0.86,-0.3l0.24,-0.79l1.05,1.08l1.73,0.27l1.12,1.1l0.29,2.02l-1.27,2.02l0.26,2.18l-0.31,0.83l-2.49,2.71l-1.37,0.1l-1.02,0.86l-1.18,0.48l-0.74,0.84l-0.31,0.93l0.14,0.8l0.88,1.39l-1.18,1.21l0.03,1.96l-0.69,1.41l-0.09,1.31l-1.54,2.88l-1.34,0.79l-0.59,0.74l-1.8,4.22l-1.73,-3.16l-0.8,-0.61l-2.04,-0.5l-1.74,0.24l-1.56,-1.11l-4.85,2.27l-2.11,-0.57l-1.64,0.24l-3.8,-2.29l-1.6,-0.1Z\",\n            name: \"Lugo\"\n          },\n          \"ES-SE\": {\n            path: \"M478.33,326.02l0.78,-0.94l-0.01,-0.52l-0.51,-0.08l-1.66,0.8l-0.8,0.02l-1.01,-0.57l-2.06,0.85l-1.12,-0.96l0.86,-2.37l-1.07,-3.38l1.12,-2.29l-0.02,-1.55l0.39,-1.53l-0.44,-2.65l0.63,-2.45l-0.31,-0.85l-1.32,-1.39l0.8,-0.96l-0.08,-1.96l1.58,-0.57l0.28,-1.22l-1.66,-2.78l-0.82,-2.39l-0.93,-1.2l0.25,-1.15l-0.23,-0.45l-2.14,-0.92l-2.41,0.08l-0.67,-0.3l0.1,-0.82l0.93,-0.84l1.32,-2.1l0.67,-0.37l5.41,-1.38l1.6,0.02l0.67,1.34l1.52,0.16l0.33,-0.42l0.06,-2.24l0.34,-0.5l2.18,0.25l0.91,-0.51l0.17,-0.51l-0.83,-1.9l0.75,-2.58l-0.56,-0.63l-1.21,-0.07l-0.37,-0.79l2.41,-1.55l5.47,-0.92l1.08,-0.48l1.83,-2.93l-0.45,-1.45l0.24,-0.67l1.88,-1.35l0.82,-1.09l1.38,-0.58l2.57,-0.32l1.38,0.97l0.12,0.26l-1.65,1.15l0.24,1.71l0.36,0.44l1.49,0.06l2.84,-2.11l1.18,0.06l0.1,0.81l3.35,3.29l0.81,2.96l2.2,1.82l0.65,3.33l1.88,1.32l0.72,2.25l1.15,0.83l-0.05,2.87l-2.77,0.01l-1.26,1.23l0.43,2.35l0.93,1.06l1.82,0.2l2.7,-0.67l3.34,-2.01l1.49,0.29l1.03,-0.17l1.16,-1.24l1.94,-0.74l1.73,0.17l1.26,1.36l0.4,0.96l0.02,1.39l0.93,0.79l-0.34,3.94l1.37,1.13l0.75,1.35l0.23,1.3l1.34,1.21l1.18,2.49l1.75,1.37l1.08,0.0l1.93,-1.38l0.91,0.68l0.25,1.8l0.6,1.5l-2.14,-0.14l-0.95,0.81l-0.07,0.45l0.63,1.28l-0.09,0.62l-0.52,0.53l-1.97,0.93l-1.59,-1.4l-0.54,-0.14l-1.11,1.2l-1.84,-0.6l-1.2,0.2l-0.6,0.6l0.04,0.44l1.95,1.4l-0.31,0.53l-8.93,4.98l-1.45,1.56l-1.51,0.87l-0.89,-0.22l-1.78,-2.52l-0.8,-0.38l-5.0,3.12l-0.18,-0.77l0.73,-1.33l0.08,-1.17l-0.89,-0.95l-1.29,-0.2l-1.22,0.69l-0.11,2.82l-0.4,0.84l-1.35,1.14l-1.37,0.19l-2.12,-1.59l-1.52,-0.33l-1.07,0.7l-0.86,1.33l-3.35,-0.04l-1.72,0.51l-1.03,0.78l-0.92,2.24l-1.65,-0.37l-1.38,0.35l-5.12,-0.59l-2.02,-1.26l-2.17,-0.59Z\",\n            name: \"Sevilla\"\n          },\n          \"ES-CA\": {\n            path: \"M475.93,344.23l0.23,0.25l-0.04,0.08l-0.19,-0.34ZM476.86,345.98l0.56,0.32l0.97,-0.45l1.32,-1.54l-0.25,-0.67l-1.57,0.15l0.03,-1.88l-0.35,-0.87l-2.13,-1.89l-3.84,-0.55l-0.44,-0.43l-0.49,-1.79l-1.18,-2.44l0.13,-0.61l0.62,-0.62l2.12,-0.79l0.78,-0.66l0.44,-1.28l-0.33,-1.84l0.18,-0.88l1.12,-0.89l2.72,0.19l2.86,0.75l2.21,1.34l5.28,0.61l1.32,-0.35l1.92,0.43l0.47,-0.28l0.91,-2.36l0.78,-0.56l1.36,-0.4l3.51,0.04l1.27,-1.63l0.71,-0.44l0.83,0.24l2.36,1.7l1.94,-0.28l1.66,-1.44l0.58,-1.65l-0.09,-1.97l0.64,-0.33l0.81,0.1l0.51,0.53l-0.85,2.14l0.14,1.09l0.78,0.58l0.65,-0.16l4.42,-2.98l1.98,2.62l0.68,0.45l0.91,0.04l1.05,-0.43l1.99,-1.84l1.47,1.79l0.44,1.25l-0.12,1.29l-1.57,2.08l-1.09,0.56l-1.06,0.04l-2.9,-2.05l-1.12,0.07l-0.82,0.45l-1.2,1.17l-0.35,0.79l0.42,1.33l1.29,1.47l-0.09,0.64l-0.82,1.06l-0.71,2.78l-1.57,1.27l-2.56,0.83l-1.52,2.04l-4.34,1.57l-0.76,1.06l0.45,1.0l1.37,0.73l1.06,-0.04l2.8,-1.26l1.72,0.11l1.35,2.34l1.4,1.42l0.76,1.65l0.6,3.17l0.52,0.31l1.37,-0.44l0.67,1.27l-1.38,1.02l0.15,0.65l-1.87,3.25l-0.18,1.88l-0.53,-0.94l-0.73,-0.46l-1.06,-0.34l-1.17,0.26l-0.69,1.55l0.53,3.1l-0.47,0.7l-6.23,2.2l-0.74,-1.27l-2.34,-1.36l-1.19,0.23l-3.12,-1.11l-1.39,-1.62l-3.44,-2.86l-2.84,0.26l-1.92,-0.52l-2.61,-4.04l-2.21,-1.15l-0.94,-2.91l-1.4,-1.51l-1.34,-2.91Z\",\n            name: \"C\\xe1diz\"\n          },\n          \"ES-SG\": {\n            path: \"M584.62,107.66l0.83,1.55l1.63,0.86l1.29,-0.31l0.48,0.2l0.83,2.08l1.41,0.78l1.56,0.33l-0.29,2.13l0.17,1.14l5.29,3.82l-1.38,1.32l-3.47,0.62l-3.37,-0.36l-0.15,0.6l0.48,0.73l-0.13,1.05l-1.12,0.3l-3.05,2.08l-2.8,0.36l-1.46,0.79l-2.42,2.59l-2.37,1.61l-1.76,2.6l-4.6,1.83l-1.92,2.52l-0.11,1.75l-1.3,3.83l-1.09,0.29l-1.61,-0.22l-1.05,0.46l-3.14,4.05l-3.21,-0.55l-1.31,0.37l-0.79,-0.15l-1.1,0.75l-0.25,1.22l-3.21,0.93l-0.93,-5.19l-1.26,-1.64l-0.48,-1.9l-0.39,-0.44l-0.86,-0.21l-1.64,0.26l0.59,-1.83l-0.77,-3.62l-0.31,-0.48l-1.3,-0.65l-1.57,-2.85l-2.28,-1.88l-0.47,-0.88l0.45,-2.81l1.95,-2.05l0.1,-1.14l2.74,-2.61l-0.02,-0.6l-0.89,-0.73l0.14,-0.38l1.17,0.64l1.18,-0.67l2.27,1.2l0.59,-0.32l0.03,-0.66l-1.0,-1.82l-0.04,-1.14l-0.57,-1.63l0.75,-0.03l3.06,-1.52l1.59,0.14l1.74,-0.58l2.93,-0.07l9.49,-2.95l1.17,-1.45l0.36,-1.66l3.14,1.48l2.27,2.32l1.8,-0.08l0.55,1.71l0.35,0.28l1.63,0.12l0.43,-0.4l0.05,-2.52l1.35,-0.92l0.7,-1.09l1.73,-0.61l1.94,0.38l1.04,-0.4Z\",\n            name: \"Segovia\"\n          },\n          \"ES-BU\": {\n            path: \"M620.91,49.92l1.47,-0.09l0.85,0.71l0.64,0.12l-0.58,1.13l-1.02,0.54l-0.05,0.82l1.63,1.59l0.77,-0.08l0.74,-0.59l0.28,1.2l-4.36,-0.38l-4.69,-1.29l-2.4,-0.99l-2.01,-1.71l1.78,-1.94l3.5,-0.05l3.45,1.0ZM555.27,59.55l0.39,-0.56l-0.36,-1.13l0.72,-0.74l-0.43,-2.87l0.35,-0.73l1.03,0.31l3.4,-2.7l0.71,0.03l0.93,0.6l0.59,-0.15l0.83,-1.2l1.63,-0.51l1.17,-2.2l-0.04,1.98l0.3,0.44l1.55,0.36l2.02,-0.56l1.39,-1.13l2.09,-0.15l0.74,-0.6l0.09,-0.95l-0.85,-2.67l-1.09,-0.22l-1.21,1.1l-0.42,-0.11l-0.15,-0.77l0.33,-0.54l1.02,-0.1l1.57,-1.19l-0.04,-0.62l-0.63,-0.84l-0.78,-0.4l-0.92,0.2l-0.92,1.18l-1.59,0.7l-0.55,-0.1l-0.55,-0.63l1.22,-3.23l2.17,-1.55l1.69,-0.74l0.59,-0.63l0.23,-1.26l2.6,-0.24l1.93,-1.27l2.78,-2.72l4.95,1.58l2.79,0.24l1.23,-0.11l2.45,-0.84l3.73,-2.03l1.39,0.64l3.04,0.26l0.13,0.2l-0.65,0.51l-0.56,1.4l0.38,0.91l0.83,0.46l-0.26,2.4l-0.62,1.06l0.07,0.48l1.92,0.74l1.69,0.13l0.68,-0.35l0.66,-1.29l0.55,-0.17l0.43,0.99l1.02,0.54l-0.23,0.55l-1.42,0.1l-0.42,0.39l0.08,0.7l1.2,1.04l1.1,0.36l0.07,0.34l-1.79,0.92l-2.04,0.2l-2.03,-0.44l-0.37,-0.84l-0.77,-0.52l-2.47,-0.06l-2.15,2.26l-0.39,1.41l1.98,2.21l0.73,0.41l0.74,-0.37l0.5,-1.15l1.43,-0.19l1.28,-1.15l-0.0,0.49l-1.56,2.56l0.02,0.58l0.83,1.03l-0.22,0.57l0.37,0.56l0.77,0.04l2.13,-0.75l3.56,2.19l0.95,1.06l1.12,0.5l2.92,2.37l-2.3,0.71l-4.23,-0.69l-2.51,0.45l-0.31,0.92l0.52,0.92l-2.01,2.28l-0.17,0.6l0.54,0.64l1.22,-0.11l-0.46,2.02l1.33,1.82l-0.36,1.2l0.09,2.1l-0.53,0.84l-1.3,0.41l-0.29,0.54l0.41,0.81l0.44,2.82l-0.54,2.34l-0.63,0.64l-0.13,0.6l1.74,2.94l0.99,0.74l1.11,1.73l0.92,0.44l2.85,-0.08l0.74,2.22l-0.79,0.37l-1.28,2.66l-0.31,1.35l-1.06,0.34l-0.65,1.68l-0.95,-0.08l-1.41,0.42l-3.47,3.91l-0.77,-1.27l-1.38,-0.67l-0.89,-1.04l-1.32,-0.12l-0.71,0.77l0.33,4.02l-2.75,1.26l-0.29,0.35l-0.14,1.77l-1.38,0.31l-2.49,4.56l-2.62,-0.77l-0.74,0.44l-0.15,1.12l-0.88,0.42l-2.03,-0.37l-2.09,0.73l-0.86,1.22l-1.45,1.04l-0.17,2.52l-0.93,-0.07l-0.56,-1.75l-0.41,-0.28l-1.78,0.11l-2.14,-2.23l-3.52,-1.66l-0.58,-1.25l-1.32,-0.92l-0.06,-3.24l-0.93,-1.84l0.67,-2.29l-2.08,-2.19l0.04,-1.31l1.16,0.01l2.34,-0.84l0.61,-0.74l0.24,-1.34l2.33,-0.57l0.67,-0.44l0.5,-1.57l-0.55,-0.98l-0.67,-0.2l-4.12,1.7l-0.08,-0.4l2.22,-2.66l-0.29,-1.14l-0.79,-0.31l-3.52,0.53l-0.67,-0.79l-0.63,-3.1l-0.36,-0.32l-2.93,-0.27l0.46,-1.77l-1.84,-1.86l-1.44,-8.22l-0.41,-0.27l-1.6,0.13l-0.29,-0.74l0.01,-1.48l0.39,-0.57l2.65,0.09l0.43,-0.42l-0.11,-1.87l-0.68,-2.12l-1.17,-1.37ZM562.65,80.51l1.08,0.29l0.92,-0.33l0.24,-0.58l-0.49,-1.35l-1.05,-0.47l-0.94,0.35l-0.37,0.96l0.6,1.13Z\",\n            name: \"Burgos\"\n          },\n          \"ES-SA\": {\n            path: \"M449.85,132.63l0.56,-0.26l3.52,0.08l0.77,-0.59l1.69,-2.27l0.35,-2.31l1.93,-1.71l2.26,-3.32l3.14,-0.12l3.34,-1.52l6.19,1.04l7.67,3.94l1.1,-0.68l1.88,0.18l0.98,0.42l-0.14,1.31l0.94,0.89l0.95,0.14l0.6,-0.57l0.3,0.64l0.69,0.36l0.79,-0.11l0.76,-0.59l0.27,-0.71l-0.14,-2.65l0.73,-0.39l3.2,0.88l3.98,-0.57l1.8,-0.76l1.23,1.31l0.92,0.4l2.37,0.09l2.0,1.34l3.44,-0.28l0.42,1.72l1.6,0.21l0.93,0.99l0.81,0.33l1.34,-0.53l0.38,-2.77l0.96,-0.52l1.03,1.14l2.02,0.3l1.65,1.33l-0.93,2.1l0.16,1.73l0.51,0.7l1.06,0.29l0.48,1.3l-0.26,1.07l-0.99,1.29l0.57,1.65l-1.88,2.04l-0.05,2.48l-0.64,1.07l-1.55,1.03l-1.01,1.47l-4.7,3.07l-1.02,2.69l-0.99,0.85l-1.24,0.56l-2.63,0.17l-0.46,0.45l0.22,1.64l0.39,0.35l2.48,0.02l-1.01,3.11l-1.67,0.47l-0.34,0.47l0.02,1.26l-0.73,-0.26l-0.83,-0.88l-0.34,-1.22l-0.69,-0.22l-1.35,0.35l-2.83,2.04l-0.44,0.89l0.78,2.47l-1.95,2.81l-1.19,0.39l-0.69,-0.1l0.34,-1.48l-0.6,-0.98l-0.62,-0.2l-3.13,1.08l-1.34,1.85l-1.34,-0.36l-1.39,-0.64l-1.43,-1.17l-2.48,-1.07l0.84,-1.82l-0.34,-0.68l-1.39,-0.56l-0.54,-0.92l-1.0,-0.3l-1.08,-0.94l-2.28,-0.97l-0.65,0.09l-2.18,1.29l-1.28,0.28l-1.13,0.8l-0.79,1.11l-1.6,0.38l-1.26,1.04l-2.95,1.14l-1.8,1.57l0.13,1.45l-0.5,0.54l-3.31,0.66l-1.26,0.55l-1.16,-0.42l-1.67,0.65l-2.12,0.03l-2.03,-1.44l0.27,-0.52l2.09,-1.5l0.77,-1.22l-0.08,-0.51l-1.3,-1.11l-0.85,-1.25l-0.2,-1.34l1.76,-3.41l-0.28,-1.11l-1.16,-1.49l-0.06,-0.64l1.44,-3.12l-0.99,-5.26l0.09,-3.6l0.65,-0.39l0.16,-0.83l-0.37,-0.85l-1.22,-0.68l-1.22,-2.96l-2.16,-2.52l0.48,-1.69Z\",\n            name: \"Salamanca\"\n          },\n          \"ES-V\": {\n            path: \"M666.85,205.29l0.14,-2.53l1.36,-1.21l1.45,-2.61l1.07,-1.03l1.18,-0.63l2.53,0.62l1.54,-0.94l0.13,-2.69l1.66,-2.49l0.93,-3.21l0.25,-2.69l-0.37,-0.92l2.06,-1.14l0.71,0.29l2.96,-0.68l2.1,-0.02l2.86,1.03l0.55,0.72l-0.28,1.28l0.39,1.98l0.41,0.56l0.83,0.39l0.94,-0.03l2.65,-1.1l0.43,0.22l1.41,2.22l1.24,0.36l0.43,-0.21l0.68,-1.3l0.88,0.49l0.41,1.87l-0.08,1.57l0.81,0.81l1.64,-0.18l1.28,-1.39l1.07,-0.55l2.0,2.92l1.35,0.4l1.98,-1.12l1.23,-1.77l1.12,-0.56l1.19,0.39l1.52,1.71l2.78,1.5l-0.42,2.05l-1.93,2.23l-0.96,2.2l-1.72,2.63l-0.29,1.77l0.13,2.37l1.05,5.14l3.28,6.34l-0.91,0.96l1.31,4.15l3.64,6.07l3.04,2.67l-7.08,1.22l-3.48,-1.23l-4.16,2.86l-7.06,1.12l-0.27,0.61l1.18,1.84l0.47,0.16l1.11,-0.29l0.49,0.38l-3.72,1.96l-1.24,-1.01l-3.16,-1.63l-0.96,-0.11l-2.63,0.6l-1.85,-1.48l-1.95,0.04l-0.19,-0.18l0.5,-1.7l-0.54,-1.68l0.17,-1.55l-1.68,-2.68l-1.53,-0.58l-1.86,0.65l-3.21,0.22l-1.04,-0.64l-4.07,-4.49l-0.21,-1.03l0.26,-0.96l1.07,-2.27l1.03,-1.15l0.95,-2.41l0.34,-3.34l-0.36,-0.91l-6.31,-1.77l-3.04,-1.51l-1.41,0.16l-0.34,-1.11l-2.42,-2.09l0.76,-2.59l-0.16,-0.3ZM674.54,172.89l0.62,1.34l1.19,1.15l0.55,1.11l1.01,0.44l2.48,0.27l2.63,1.93l-0.11,0.74l-2.05,1.0l-4.09,0.86l-5.02,-1.01l-1.39,-3.88l-1.43,-1.03l0.0,-0.38l3.04,0.4l1.73,-0.48l0.46,-0.67l-0.05,-1.35l0.41,-0.42Z\",\n            name: \"Valencia\"\n          },\n          \"ES-LE\": {\n            path: \"M453.74,67.14l0.59,-0.87l0.31,-1.67l-0.79,-1.49l-2.82,-0.7l-1.22,-0.65l-1.43,0.24l-1.09,0.63l-2.95,-0.39l0.23,-1.66l0.71,-1.52l-0.06,-1.86l1.2,-1.22l-0.12,-0.78l-0.78,-1.06l-0.05,-0.8l0.56,-0.8l2.13,-1.32l1.55,-0.2l2.64,-2.85l0.49,-1.3l-0.28,-1.99l1.08,-1.7l1.03,0.15l1.31,0.88l2.66,-1.53l2.5,-0.13l3.03,0.51l2.55,-0.67l2.1,-1.04l0.35,-0.5l-0.07,-0.8l-1.29,-0.65l2.23,-0.45l1.12,-2.05l0.89,-0.36l5.25,1.77l0.57,-0.19l0.36,-0.95l0.4,-0.14l2.47,0.66l0.79,-0.06l0.95,-0.46l0.66,-1.3l2.43,0.36l1.13,-0.22l1.07,2.0l2.11,1.31l2.47,1.05l2.44,-0.03l0.95,-0.55l1.59,-2.84l0.79,-0.31l1.43,0.02l1.15,0.5l3.95,0.79l2.02,-0.33l0.83,-1.09l2.95,-0.28l0.98,-1.6l2.56,0.22l3.82,-0.41l2.16,-0.94l1.6,0.23l1.18,-1.13l1.19,-2.33l2.14,-0.67l4.22,-2.17l1.26,0.61l0.99,1.51l-0.15,2.57l0.41,1.49l0.73,0.71l1.61,0.78l1.32,1.63l0.22,0.85l-2.36,1.3l-0.49,0.83l-0.5,2.3l-1.34,1.11l-0.68,1.8l-0.86,-0.02l-0.62,0.66l-0.14,3.62l-1.12,1.9l0.59,1.07l1.43,0.85l-0.65,1.49l0.09,2.38l-0.76,3.66l0.26,0.46l0.79,0.29l-0.0,0.6l-0.95,6.27l-2.09,0.3l-0.34,0.33l-0.27,1.75l0.5,0.45l0.85,-0.24l-0.31,1.52l-1.54,0.27l-1.36,-0.36l-0.5,0.35l-0.09,0.92l-1.41,-1.71l-1.15,-0.01l-2.4,1.87l-0.78,0.22l-0.86,-0.36l-0.8,0.11l-0.93,1.12l-0.41,1.23l-1.72,0.71l-1.84,-0.98l-1.14,0.53l-0.42,1.34l0.4,2.87l-0.41,2.55l0.36,1.63l-1.25,0.35l-4.03,-3.14l-0.84,-0.05l-0.41,0.29l-0.35,1.27l-2.13,-0.74l-0.01,-1.07l-0.88,-1.1l-1.65,-0.68l-0.5,0.43l0.06,0.56l-1.96,0.24l-0.36,-0.84l-0.47,-0.23l-3.25,0.85l-0.98,-0.13l-0.9,-1.27l-0.69,-0.15l-0.71,0.7l-1.35,0.5l-3.65,-1.52l-6.59,0.37l-1.2,-0.85l-1.36,-0.45l-0.87,-1.15l-0.66,-0.35l-1.15,0.38l-3.58,-0.07l-2.34,0.8l-1.28,-0.75l-1.36,-0.31l-2.35,0.06l-1.13,-0.47l-2.36,-0.05l-2.55,-1.41l1.38,-2.01l0.2,-2.07l-0.21,-0.7l-3.61,-2.7ZM514.65,75.08l0.26,-1.35l-0.31,-1.1l-0.46,-0.28l-0.84,0.17l-0.89,0.62l-0.16,1.15l0.51,0.91l1.01,0.26l0.87,-0.39Z\",\n            name: \"Le\\xf3n\"\n          },\n          \"ES-BI\": {\n            path: \"M600.96,21.65l1.08,0.16l0.98,-0.55l2.99,2.08l0.64,-0.32l0.0,-0.37l-0.82,-2.2l3.24,-1.72l0.3,-0.39l-0.13,-0.5l5.08,-0.3l1.52,-0.51l1.81,1.21l0.88,2.57l0.7,0.2l0.6,-1.96l0.27,-0.06l6.87,1.94l0.86,1.07l1.86,0.78l-1.07,1.6l0.03,0.49l0.65,0.74l-1.38,1.64l-0.61,-0.06l-0.77,0.63l0.06,1.8l-0.72,1.1l0.24,2.67l-0.32,0.31l-3.22,0.53l-0.99,-0.28l-0.74,0.16l-0.92,0.63l-0.09,0.46l1.06,1.88l-0.98,-0.2l-1.22,0.31l-1.53,-0.58l-1.86,0.28l-2.71,-0.96l-1.71,-0.04l-2.17,-2.02l0.82,-2.37l-0.61,-1.48l-0.93,-1.12l-1.29,-0.64l-1.08,0.42l-0.61,1.83l-2.55,0.63l-1.16,-0.76l-0.56,-0.92l-3.19,-0.32l-1.3,-0.71l-6.29,2.8l-0.63,-1.85l-0.14,-1.69l0.41,-0.61l4.13,-2.65l3.39,0.05l1.26,0.32l1.94,-0.78l0.64,-1.03l-0.01,-1.35ZM596.03,27.94l0.19,-0.92l-0.77,-1.1l-0.93,-0.35l-0.51,0.38l-0.0,1.87l0.29,0.5l0.46,0.12l1.27,-0.51Z\",\n            name: \"Bizkaia\"\n          },\n          \"ES-HU\": {\n            path: \"M690.93,65.74l0.49,-1.29l-0.34,-1.46l-0.32,-5.69l-0.79,-1.74l1.39,-0.59l0.39,-0.94l-0.26,-0.67l-0.94,-0.78l0.21,-1.37l0.25,-0.47l1.1,-0.66l0.53,-0.97l0.29,-2.65l1.22,-1.66l0.24,-0.97l1.4,-0.86l0.7,-0.01l-0.13,0.98l0.73,0.92l1.32,0.14l1.94,1.2l1.47,1.75l0.18,0.78l1.01,0.14l0.0,0.54l0.58,0.58l1.65,-0.52l0.33,-1.12l2.65,0.88l1.4,-0.06l2.83,-1.75l0.82,0.07l0.51,-0.58l2.59,1.47l0.73,1.0l1.21,0.1l1.32,-0.34l0.28,1.3l1.34,1.42l0.39,0.84l3.22,1.54l1.64,-0.11l6.79,-1.86l2.51,0.69l0.84,1.31l0.97,0.78l0.86,-0.23l1.1,-1.39l1.07,-0.7l0.86,0.66l0.36,0.77l0.99,0.23l2.35,-0.37l0.7,0.23l6.34,0.04l1.03,-0.33l1.61,3.01l2.03,0.87l-0.35,1.69l-1.17,2.19l0.0,0.81l-0.89,0.3l-0.28,0.63l0.41,1.87l0.87,1.21l0.5,1.63l0.19,2.88l-0.37,3.02l-0.88,1.75l-0.58,2.39l-0.1,2.8l-1.89,4.38l-0.14,1.21l-1.64,1.64l-1.27,0.67l-0.49,0.7l0.13,0.79l0.93,0.77l0.05,1.82l-1.99,1.89l-1.66,0.7l-1.43,2.13l-2.38,0.74l-3.12,3.65l-0.04,1.04l0.96,2.8l0.82,0.58l2.12,0.19l0.54,1.9l-1.55,2.15l-1.33,0.42l-0.66,0.57l-0.41,3.09l-3.53,-0.98l-0.43,0.15l-0.78,1.08l-1.13,0.33l-1.05,-0.47l-1.52,1.05l-0.79,1.51l-3.13,-0.4l-1.5,-1.12l-1.91,0.39l-1.26,-4.57l-0.62,-1.14l-1.34,-1.41l-0.59,-1.92l-0.81,-1.15l-1.29,-0.29l-1.31,0.88l-0.39,-0.06l-2.14,-2.06l-1.27,-0.46l-1.39,-2.49l-4.35,-2.47l-0.45,-0.74l-0.92,-4.17l-1.22,-1.41l-2.13,-1.0l-1.84,-2.78l-0.86,-0.53l-4.3,-0.09l-2.84,-1.78l-0.39,-1.15l0.79,-2.13l0.81,-0.07l0.75,0.9l0.77,0.23l0.72,-0.33l0.85,-1.31l-0.34,-8.36l0.89,-1.5l0.14,-0.98l-0.6,-3.86l-0.58,-0.5l-1.17,-0.05l-0.5,0.55l0.39,2.03l-1.2,2.82l-0.38,0.26l-0.74,-0.38l-0.98,0.01l-0.77,0.52l-0.47,1.02l-0.5,-0.13l-0.13,-0.39l3.27,-4.58l0.24,-0.82l-0.51,-1.63l-2.12,-1.15Z\",\n            name: \"Huesca\"\n          },\n          \"ES-LO\": {\n            path: \"M602.18,77.32l0.69,-0.83l0.59,-2.59l-0.47,-3.12l-0.33,-0.45l1.27,-0.44l0.8,-1.33l-0.09,-2.12l0.34,-1.49l-0.51,-1.05l-0.81,-0.72l0.49,-1.93l-0.67,-0.79l-1.08,0.16l2.09,-2.43l0.01,-0.71l-0.47,-0.8l1.97,-0.31l4.23,0.7l2.44,-0.71l0.12,0.77l0.67,0.47l-0.37,0.81l0.45,0.64l0.61,0.2l1.17,-0.22l0.42,-0.27l0.55,-1.17l0.75,-0.04l1.61,1.12l0.13,2.34l2.91,1.76l0.95,-0.43l0.17,0.63l0.66,0.26l0.87,-0.59l1.27,0.03l0.66,-1.22l0.42,0.71l2.66,1.03l3.51,0.8l2.79,-0.22l2.42,1.92l0.7,0.22l4.54,0.02l0.45,0.36l-0.33,0.83l0.56,0.76l1.25,0.46l2.05,-0.0l2.9,3.13l1.47,0.97l0.06,0.94l0.42,0.5l1.09,0.0l1.29,0.98l3.72,1.82l0.43,3.02l-0.58,0.19l-1.35,-0.5l-1.49,0.35l-1.25,-0.36l-0.69,0.18l-2.91,3.35l-0.32,0.89l0.02,0.98l0.46,1.04l1.54,1.21l0.21,0.6l-0.4,1.1l-2.43,1.32l-1.62,0.31l-2.11,-1.07l-3.15,-0.69l-0.34,-1.01l0.49,-1.07l-1.79,-2.2l1.08,-1.8l-0.92,-0.94l-2.2,-0.13l-2.5,0.7l-0.41,-0.4l-0.44,-1.44l-0.7,-0.45l-2.25,-0.25l-2.61,0.19l-1.08,0.32l-1.7,1.11l-1.38,0.13l-0.32,2.04l-0.79,0.69l-1.37,2.36l-3.36,0.02l-1.38,-0.71l-1.56,-0.31l0.43,-1.43l0.8,-0.93l0.06,-1.51l-0.73,-0.77l-1.62,-0.03l-1.28,1.07l-0.47,1.15l-0.11,1.34l-2.47,1.38l-1.19,-0.32l-0.3,-1.5l-0.89,-1.41l-3.55,-0.19l-1.1,-1.71l-0.89,-0.61l-1.61,-2.66Z\",\n            name: \"La Rioja\"\n          },\n          \"ES-SS\": {\n            path: \"M624.31,40.0l-1.38,-0.74l0.18,-0.64l1.96,-0.89l0.48,-0.56l0.12,-0.97l-0.45,-1.56l1.08,-0.28l0.6,-0.7l-0.19,-2.81l0.68,-1.03l-0.03,-1.77l1.04,-0.14l1.75,-2.04l-0.01,-0.52l-0.68,-0.77l0.98,-1.47l2.94,0.98l1.76,0.17l3.47,-0.54l0.86,0.81l0.79,0.13l0.4,-0.26l0.65,0.61l1.47,-0.82l4.11,-1.16l1.32,-0.69l0.69,0.24l0.66,0.75l0.46,0.02l0.56,-0.36l-0.0,-0.67l-0.29,-0.23l1.12,-0.47l1.46,-1.18l1.2,-0.57l0.28,0.18l-0.08,2.0l1.3,0.82l0.47,1.15l-1.41,0.83l-1.65,2.29l-0.64,0.25l-0.92,-0.16l-0.46,0.67l-0.57,-0.25l-0.55,0.2l-0.46,1.77l0.28,2.3l-0.88,1.25l-3.15,1.97l-0.92,1.56l-0.23,1.98l-0.38,0.33l-1.53,0.43l-1.42,1.34l-3.43,-0.04l-0.79,0.82l-0.73,1.48l-0.77,-0.03l-1.02,-1.29l-2.01,-1.09l-5.88,-0.5l-1.48,-0.61l-0.75,0.5Z\",\n            name: \"Gipuzkoa\"\n          },\n          \"ES-BA\": {\n            path: \"M463.09,220.86l0.38,0.94l0.82,0.35l0.8,-0.25l0.5,-0.68l6.1,0.51l1.75,-0.79l0.27,2.69l0.84,0.92l1.96,0.18l1.58,1.67l1.55,0.16l0.94,1.17l0.62,0.01l2.07,-2.45l2.15,-1.58l0.29,2.08l0.81,0.6l0.92,-0.24l1.4,-1.6l0.41,0.71l0.48,0.18l2.66,-0.93l1.26,-0.79l0.71,-1.08l1.33,0.29l3.04,2.46l0.43,0.05l1.67,-0.85l1.83,-0.21l0.62,-0.62l0.58,-1.71l-1.13,-1.8l1.33,-0.69l1.61,-0.01l2.92,2.35l1.63,-0.2l0.71,-0.42l1.13,-1.21l1.02,-1.75l-0.31,-1.66l0.52,-2.5l0.42,-0.13l2.96,0.83l2.74,0.01l2.58,-1.57l0.4,-2.23l0.28,-0.25l1.67,1.56l2.59,-0.35l1.86,-0.94l2.75,1.08l4.49,-1.76l0.65,-0.68l2.04,-1.03l0.3,0.77l-1.26,3.2l-1.5,0.88l-0.38,0.64l0.16,1.04l1.54,3.11l1.82,1.95l-1.89,-0.89l-3.48,-0.03l-1.72,1.69l-0.85,2.87l0.14,1.35l1.25,1.19l-1.36,0.58l-2.57,-0.93l-0.94,0.76l1.4,3.99l3.2,1.13l-0.24,1.86l-2.09,0.07l-1.09,0.84l-0.89,1.57l-0.97,3.3l-0.65,1.22l-3.38,0.84l-3.7,0.29l-0.31,0.48l0.19,0.82l-0.36,0.94l-1.15,0.34l-1.86,1.17l-1.36,1.08l-0.7,1.17l-2.21,0.1l-1.56,1.66l-0.74,1.51l-1.8,1.25l-0.85,1.08l-2.44,1.11l-0.92,0.81l-0.38,1.52l0.65,1.23l-0.28,1.66l1.8,3.22l0.17,1.42l-0.7,3.16l-1.55,1.15l-1.78,-0.02l-2.75,2.08l-0.54,0.09l-0.33,-0.11l-0.21,-1.2l1.33,-0.71l0.37,-0.71l-1.04,-1.43l-1.34,-0.54l-3.95,0.76l-3.36,2.98l-0.34,1.18l0.48,1.14l-1.5,2.47l-6.4,1.32l-2.6,1.66l-0.53,-0.44l-6.09,-2.19l-0.72,-1.44l-2.15,-1.23l-1.37,0.3l-1.38,1.58l-3.11,-0.36l-0.36,-1.39l-1.39,-1.46l-2.62,-0.51l-2.83,0.11l-2.03,-0.68l-0.16,-0.3l0.79,-1.64l-0.28,-0.87l-5.66,-1.87l-0.8,0.4l-0.56,-0.27l-2.34,0.32l-1.7,1.02l-1.35,0.17l-0.75,-0.65l-1.66,-3.81l-1.13,-0.9l-0.61,-1.19l-4.23,-4.98l-1.29,-0.87l0.66,-0.92l-0.32,-1.19l0.98,-2.7l1.91,-2.92l-0.13,-0.62l-0.69,-0.62l-0.06,-0.69l0.34,-2.55l0.49,-0.99l3.54,-2.43l1.08,-1.27l1.84,-0.38l1.99,-1.32l0.34,-1.63l-0.41,-0.92l1.54,-1.64l2.0,-3.4l-0.03,-0.65l-0.38,-0.42l0.19,-0.76l-0.25,-0.92l-1.32,-1.6l-2.13,-0.93l-1.19,0.1l-1.44,0.69l-0.93,-0.3l-0.28,-0.37l0.5,-1.38l-0.53,-1.16l-3.13,-1.29l-0.46,-0.61l-0.22,-1.61l0.35,-0.56l1.98,0.05l1.92,-2.36l0.04,-0.8l-0.51,-0.74l0.22,-0.52l1.59,-0.81l1.24,-0.07l-0.18,1.75l0.23,1.04l1.07,0.51l0.62,-0.2l0.4,-0.53l0.76,-2.96l-0.4,-0.92l-1.24,-0.77l0.28,-0.41l6.12,2.38l2.94,-0.19l1.19,1.94l0.82,0.66l0.26,0.98l-1.9,3.16l1.3,2.37l3.78,0.76l1.06,-0.95l2.74,0.75Z\",\n            name: \"Badajoz\"\n          }\n        },\n        height: 738.0097895570743,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"europe_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 790.3360148034734,\n          bbox: [{\n            y: -9690291.808548316,\n            x: -4159652.5301950974\n          }, {\n            y: -3201145.6268246872,\n            x: 3229902.613642692\n          }],\n          left: 0\n        }],\n        paths: {\n          BE: {\n            path: \"M400.73,433.08l-0.52,-2.25l-0.56,-0.57l-4.28,-0.9l-0.52,-2.3l-0.72,-1.23l-1.11,-0.96l-1.47,0.14l-2.34,0.95l-0.92,-0.59l-2.1,-2.13l0.06,-1.42l-0.94,-2.11l5.63,-2.88l4.83,-1.89l0.35,1.28l1.0,1.0l0.79,0.0l1.32,-0.72l1.22,0.17l1.92,1.09l1.13,0.14l2.05,-0.73l1.86,-1.11l0.78,-1.23l1.7,0.4l0.63,-0.24l0.21,-0.45l-0.2,-0.84l1.02,-0.55l1.09,0.83l0.82,0.06l1.67,-1.16l0.71,1.31l0.55,0.19l1.3,-0.08l1.17,-1.0l0.54,1.83l1.68,1.4l1.62,0.43l2.18,-0.42l1.56,1.44l2.54,0.82l0.16,0.74l-0.9,1.69l-0.1,0.88l-1.21,1.21l-0.17,0.9l0.73,1.23l0.43,0.19l1.64,-0.55l0.67,0.81l1.43,0.18l1.66,1.17l1.24,1.25l-0.57,0.57l0.11,0.94l0.57,0.56l1.13,0.22l0.42,0.41l0.27,2.03l-2.32,1.34l-0.73,1.47l-2.05,-0.25l-1.48,1.5l-1.78,3.11l-0.26,2.02l2.04,2.91l-0.89,1.46l-3.56,0.48l-3.15,-2.93l-1.99,-0.73l-1.61,-1.01l-1.76,-0.23l-0.27,-1.86l-0.65,-0.86l0.89,-2.91l-0.19,-0.47l-0.91,-0.33l-0.73,0.31l-1.0,0.88l-0.65,1.57l-1.29,0.64l-2.28,0.26l-2.49,-0.26l-0.25,-0.23l0.75,-1.69l-0.73,-1.1l0.42,-1.16l-0.09,-0.82l-1.77,-1.33l-1.44,-0.33l-2.31,-0.2l-1.24,0.59Z\",\n            name: \"Belgium\"\n          },\n          FR: {\n            path: \"M467.41,568.7l0.77,-0.77l0.94,-1.92l1.23,-0.85l3.09,-0.88l1.24,-1.13l1.71,0.56l0.82,-0.34l0.45,-1.04l-0.08,-2.97l0.33,-0.92l0.66,0.38l0.24,2.71l-0.35,2.37l0.98,1.89l0.4,6.29l-2.07,3.66l-0.12,3.28l-1.87,4.27l-0.66,0.89l-3.62,-1.94l-0.93,-0.91l0.99,-1.66l-0.25,-0.45l-2.03,-0.85l0.51,-1.36l-0.22,-1.18l-0.41,-0.29l-1.25,-0.03l1.06,-1.23l0.08,-1.13l-1.58,-1.27l-0.2,-0.63l1.2,-0.8l0.16,-0.59l-0.67,-0.97l-0.55,-0.18ZM313.21,482.01l0.65,-0.84l-0.12,-0.59l-0.73,-0.41l-2.58,0.36l-1.17,-0.3l-1.49,-1.3l-1.38,0.14l-0.87,-0.45l-1.52,-0.0l-0.86,-0.67l-5.41,-1.47l-2.3,-0.18l-2.17,0.65l-0.93,-0.18l-1.64,-2.53l-2.86,-1.03l3.52,-0.98l0.83,-0.83l-0.09,-0.62l-1.43,-0.83l-1.1,-0.24l-0.48,-0.52l4.03,0.01l0.24,-0.69l-0.82,-0.75l-1.49,-0.46l-4.19,0.09l-0.42,-1.11l0.47,-1.3l2.39,-1.3l6.29,-1.5l2.69,0.22l2.0,-0.28l2.39,-0.99l1.02,-0.81l3.06,-0.46l2.9,0.82l2.77,3.22l1.41,1.17l0.45,0.04l3.24,-1.89l4.69,0.05l0.91,0.97l0.66,-0.11l1.04,-1.64l1.04,1.03l6.16,-0.4l0.3,-0.33l-0.2,-0.4l-1.32,-0.73l-1.04,-1.7l-0.24,-6.84l-3.16,-5.21l-0.74,-1.78l0.1,-1.05l3.43,0.27l2.91,-0.67l1.05,0.35l-0.06,1.26l0.44,1.82l1.68,2.19l2.38,-0.09l2.65,0.59l3.28,0.09l5.0,1.0l2.17,-0.63l1.94,-1.22l3.74,-0.81l0.55,-0.6l-0.36,-0.63l-2.1,0.17l-1.75,-0.69l-0.18,-0.57l0.93,-2.27l5.65,-2.74l4.18,-0.84l4.36,-1.56l2.29,-1.65l1.52,-2.13l0.98,-0.76l0.11,-0.58l-0.47,-0.63l0.37,-7.74l0.38,-1.32l0.77,-1.06l3.1,-1.8l7.88,-1.69l0.89,1.98l-0.23,0.88l0.24,0.64l2.37,2.44l1.4,0.75l3.42,-1.17l1.46,1.79l0.67,2.53l0.79,0.51l3.63,0.5l1.16,2.95l0.53,0.06l1.11,-0.65l2.15,0.19l1.16,0.24l1.51,1.13l-0.49,1.57l0.74,1.06l-0.73,1.84l0.74,0.77l2.77,0.32l2.61,-0.31l1.51,-0.75l0.83,-1.78l1.17,-0.81l-0.75,2.87l0.69,1.08l0.35,2.16l0.4,0.31l1.75,0.15l1.55,0.99l2.02,0.76l3.1,2.91l3.88,-0.4l0.56,0.58l2.56,1.05l1.01,-0.16l1.41,-0.77l0.66,0.06l1.34,0.7l1.53,0.18l0.9,0.74l0.57,1.33l2.4,2.92l0.83,0.07l1.34,-0.87l1.18,0.37l0.34,0.99l0.66,0.25l0.87,-0.21l1.22,0.23l3.14,-0.67l0.9,1.02l1.32,0.54l5.32,0.9l1.54,0.57l0.05,1.07l-4.07,4.38l-1.79,6.17l-1.23,2.2l-0.44,1.6l0.31,1.21l-0.19,1.55l-0.73,2.24l-0.14,1.82l0.62,1.44l-1.04,0.58l-0.92,1.45l-0.88,0.32l-1.65,0.02l-0.4,-0.65l-0.67,-0.35l-1.31,0.06l-1.26,0.7l-0.98,1.46l0.57,0.78l0.73,0.14l-4.42,4.94l-2.89,1.4l-0.65,3.28l-3.37,2.5l-1.41,3.23l0.82,1.07l-0.3,1.32l-1.75,1.33l0.3,1.45l1.86,0.05l1.53,-0.78l1.1,-1.08l0.06,-0.49l-0.55,-0.89l1.09,-0.96l1.33,-0.57l1.91,-0.11l2.26,0.34l0.17,1.45l0.39,0.63l-0.48,2.05l2.49,2.54l0.73,1.16l-2.84,1.86l-0.18,1.53l0.36,0.71l0.96,0.63l1.82,2.88l1.7,1.48l-0.9,2.31l-1.21,0.37l-1.75,1.24l-1.95,-0.12l-1.05,0.48l-0.22,0.4l0.1,0.84l0.84,0.96l0.72,1.77l0.97,0.7l2.2,0.58l0.6,1.76l-0.88,0.55l-1.6,2.79l0.62,1.54l-0.2,0.75l0.43,1.08l1.01,1.0l4.78,2.37l0.96,0.2l3.03,-0.67l0.61,0.99l-2.55,3.41l0.06,1.58l-1.05,-0.07l-0.48,0.65l-2.48,1.14l-4.33,3.66l-1.97,1.05l-0.96,1.97l-1.06,0.92l-3.53,0.96l-2.42,1.03l-1.16,-0.44l-2.87,0.05l-1.9,-1.3l-3.43,-0.8l-1.08,-1.78l-3.35,-0.43l-0.12,-1.01l-0.5,-0.38l-2.08,0.32l-0.81,0.45l-0.79,-0.06l-0.3,0.4l-0.61,0.05l-6.52,-1.74l-2.24,-1.83l-2.23,0.45l-1.85,1.74l-7.11,4.41l-2.95,4.72l-0.16,1.53l0.65,4.05l1.42,2.15l-2.56,-0.58l-1.25,0.17l-2.71,0.83l-0.83,1.03l-5.69,-1.28l-2.78,1.04l-0.81,-1.08l-2.69,-1.15l0.34,-0.96l-0.7,-0.84l-2.87,-0.64l-0.99,0.54l-0.97,-1.3l-1.99,-0.4l-6.05,-2.05l-1.12,-0.09l-0.58,0.37l-0.39,2.16l-4.75,-0.06l-0.9,-0.43l-3.17,0.48l-3.51,-2.22l-3.8,0.42l-2.47,-2.29l-2.3,-0.16l-4.56,-1.73l-0.58,-0.75l-1.12,1.09l-0.39,-0.03l-0.36,-0.23l0.9,-1.92l-0.24,-1.16l-0.96,-0.5l-3.17,-0.62l-0.85,-0.97l2.08,-0.55l2.09,-2.26l1.89,-7.6l1.35,-8.91l0.9,-1.51l1.14,-0.42l0.17,-0.63l-1.03,-1.24l-0.59,-0.03l-0.43,0.42l0.62,-6.75l1.3,-5.66l2.93,2.19l0.74,1.02l1.11,3.82l1.99,1.61l0.49,-0.04l0.08,-0.49l-1.25,-1.54l-1.22,-4.82l-0.82,-1.5l-1.35,-1.33l-4.12,-2.8l-0.07,-0.37l1.77,0.46l0.54,-0.47l-0.98,-3.09l-0.57,-6.56l-0.32,-0.32l-3.25,-0.63l-5.23,-2.74l-4.03,-5.76l0.93,-3.09l-0.86,-1.27l-1.37,-0.73l0.46,-0.73l0.44,-0.53l0.88,-0.15l3.8,0.98l0.44,-0.27l-0.2,-0.48l-3.38,-1.67l-5.06,0.54l-1.01,-0.19l-0.72,-0.28l-0.23,-0.74l1.26,-1.47l-0.06,-0.51l-0.75,-0.7l-1.25,-0.37l-2.76,0.2ZM332.31,508.2l1.88,1.81l-0.15,0.48l-1.62,-1.85l-0.11,-0.43Z\",\n            name: \"France\"\n          },\n          BG: {\n            path: \"M662.06,585.15l0.29,-3.94l0.71,-1.75l-0.05,-0.72l-0.86,-0.68l-1.48,-3.54l-0.69,-0.61l-2.8,-1.24l-2.73,-2.84l0.66,-0.27l1.35,-1.8l0.2,-0.83l-1.28,-2.51l0.35,-1.29l-0.28,-1.38l0.24,-0.54l0.99,-0.47l2.26,-0.25l3.25,-3.58l0.5,-1.6l-1.7,-1.41l-1.32,-1.73l-2.83,-1.63l-0.65,-0.92l-1.73,-4.25l-0.05,-1.22l0.63,-2.11l2.3,-1.11l0.53,-2.08l0.71,-0.5l3.99,2.37l-2.14,1.89l-0.0,1.56l1.15,0.79l4.1,-0.65l4.13,0.33l5.62,1.1l3.78,0.39l2.81,-0.5l9.82,1.78l4.63,0.26l2.69,-0.69l1.88,-0.94l1.63,-1.76l3.74,-2.22l3.65,-1.25l7.88,-1.36l4.53,2.38l3.3,0.38l0.99,0.7l1.96,-0.44l2.27,2.66l4.46,1.3l2.5,0.06l-0.28,3.44l-1.08,1.52l-1.9,-0.54l-2.52,0.52l-1.56,2.22l-1.43,1.35l-0.55,2.99l-0.1,4.22l-1.73,0.67l-3.65,3.91l0.11,0.63l2.91,1.84l3.87,5.45l-1.3,-0.19l-1.15,0.47l-1.76,-0.06l-1.68,0.63l-3.01,-2.44l-0.84,-0.32l-3.33,0.55l-1.81,1.11l-3.72,0.47l-0.64,0.45l-0.8,1.79l-2.11,0.49l-0.68,1.13l-1.29,-0.3l-1.48,0.43l-0.64,1.22l1.04,2.44l-0.05,1.85l-2.58,1.05l-1.96,-0.27l-7.03,1.36l-1.54,-1.11l-1.96,-0.82l-1.99,-0.47l-1.13,0.51l-2.12,-1.23l-0.94,-1.63l-0.73,-0.26l-1.48,0.51l-4.43,-0.06l-0.74,1.11l-1.79,0.08l-3.22,1.09l-2.63,-0.19l-2.7,0.22l-1.27,1.01l-2.52,-0.16Z\",\n            name: \"Bulgaria\"\n          },\n          DK: {\n            path: \"M554.98,347.03l-0.27,0.17l-2.03,-0.48l-2.42,-1.16l0.34,-2.19l0.45,-0.72l4.46,2.58l0.04,0.75l-0.57,1.04ZM521.14,336.77l-0.22,-0.59l0.73,-0.83l0.32,0.89l-0.83,0.53ZM520.72,332.89l0.03,1.74l-0.25,0.39l-3.02,1.28l-1.05,0.95l-0.5,1.54l0.9,1.36l1.45,0.59l0.29,1.42l-0.97,0.73l-3.08,0.91l-0.28,0.33l-0.5,6.78l-2.01,0.63l-1.43,-2.33l-0.04,-1.11l-1.16,-4.03l-2.77,-0.74l-2.34,0.21l-1.42,-2.13l0.24,-2.46l-0.86,-1.5l-0.07,-1.09l-0.84,-0.87l-0.75,-0.28l-0.25,-0.91l2.9,-0.04l1.44,-0.44l2.06,-2.53l0.15,-1.11l1.62,-0.2l0.65,0.66l-0.05,3.29l0.25,0.34l1.84,0.62l0.44,-0.26l0.83,-1.98l0.58,-0.6l0.15,-1.49l-0.66,-1.19l4.25,-2.53l1.27,-0.06l3.23,1.02l0.2,0.29l-1.04,2.06l0.58,2.72ZM517.34,347.25l1.62,0.28l1.26,0.71l-1.94,-0.19l-2.4,1.26l-0.36,-0.17l1.82,-1.88ZM504.49,350.08l2.48,1.22l1.72,-0.02l0.86,0.38l0.26,1.85l-0.8,0.33l-1.36,-0.13l-1.59,0.57l-5.33,-2.52l0.22,-2.53l2.27,-0.18l1.27,1.03ZM500.25,304.31l-0.34,0.28l-1.08,-0.37l0.33,-0.36l1.93,-0.37l-0.83,0.82ZM495.95,352.06l-0.81,-1.41l2.94,-3.53l-1.8,4.22l-0.33,0.72ZM468.61,349.15l-0.42,-2.39l-0.69,-1.33l0.85,-0.26l0.28,-0.41l-0.25,-3.27l-0.49,-1.78l-6.52,-3.55l0.92,-7.01l-1.09,-3.15l0.55,-8.59l1.14,-0.12l3.56,1.07l0.64,0.76l1.02,0.47l0.49,-0.15l0.69,-1.1l0.23,-1.47l1.93,-1.94l2.11,-1.0l1.52,1.58l0.43,0.13l0.28,-0.35l0.79,-5.97l-0.27,-0.44l-1.96,-0.62l-1.84,0.54l-1.79,2.66l-1.35,2.98l-2.07,0.26l-1.77,0.83l-2.33,-1.48l0.18,-1.51l1.88,-2.48l2.46,-2.33l2.46,0.02l2.01,-0.79l1.05,-0.09l3.53,0.17l2.07,-0.61l1.73,-1.22l3.52,-4.77l1.89,-1.89l4.04,-0.74l3.41,-2.12l-0.98,1.01l-0.52,1.77l1.23,2.37l-0.16,3.79l-1.14,1.36l-1.29,2.84l-0.65,0.68l-0.18,7.31l1.5,1.58l1.55,0.73l4.81,0.01l0.84,1.17l-0.84,2.52l-2.95,1.65l-0.87,0.03l-1.4,-1.34l-0.5,-0.05l-0.79,0.52l-0.85,0.91l-1.81,6.51l-1.88,-0.35l-1.7,0.66l-0.08,0.69l1.36,1.25l-1.46,0.7l-1.73,1.9l-1.54,1.01l-0.95,1.22l0.98,4.54l-0.31,0.95l-1.8,1.6l-0.79,1.57l0.37,0.57l1.54,-0.02l1.37,0.66l0.38,0.38l-0.27,0.76l0.33,1.37l-1.23,-0.49l-3.7,0.92l-0.99,-0.03l-0.97,-0.68l-3.84,-0.98l-2.88,-0.13ZM494.78,336.56l2.16,5.08l-0.38,0.82l0.26,1.43l-0.26,1.07l-1.97,1.37l-2.27,0.06l-5.9,-2.06l-1.67,-3.44l0.02,-2.6l5.4,-1.72l1.83,0.94l1.1,0.04l1.67,-1.0ZM494.14,332.71l-0.34,-0.12l0.24,-1.95l-0.31,-1.07l1.07,1.5l-0.65,1.64ZM490.96,349.9l0.79,0.15l0.49,0.27l-0.27,0.06l-1.01,-0.48ZM483.63,346.94l2.33,1.33l0.69,1.28l-0.87,0.16l-1.78,-0.57l-0.36,-2.2Z\",\n            name: \"Denmark\"\n          },\n          HR: {\n            path: \"M540.52,517.06l1.22,0.46l4.0,-0.1l0.92,-0.53l1.59,-2.35l0.82,1.3l2.12,1.67l1.03,0.14l1.21,-0.48l2.01,0.79l1.9,0.18l1.48,-0.45l0.26,-0.49l-0.74,-1.79l0.98,-1.18l-0.98,-1.19l4.32,-1.54l0.65,-0.75l0.33,-2.14l-0.13,-1.17l-0.95,-1.16l0.13,-0.69l0.25,-0.33l4.9,-1.78l0.95,-1.14l2.19,-0.05l0.5,-0.65l-0.2,-1.45l0.85,-0.55l3.1,0.8l2.36,1.14l1.59,1.24l0.96,1.48l1.26,1.13l2.81,1.85l1.03,1.44l1.3,0.76l2.64,0.6l1.39,1.47l1.44,0.67l7.73,0.66l2.52,-0.79l1.72,-1.78l2.6,-0.25l-0.75,1.25l1.37,2.81l-0.3,1.16l0.68,0.87l0.9,0.34l-0.43,0.82l0.1,1.43l1.31,1.12l3.14,1.15l0.78,0.85l-2.14,0.07l-0.85,-0.44l-0.57,0.26l-0.1,0.53l-0.62,0.17l-0.29,0.46l0.49,2.66l-0.15,0.57l-0.99,0.12l-0.22,0.72l-0.35,0.03l-1.74,-0.65l-0.59,-1.84l-1.46,-1.06l-2.32,-0.14l-2.74,-0.81l-2.1,0.23l-1.83,-0.36l-1.83,1.07l-0.59,-0.01l-1.56,-1.26l-0.68,-0.17l-2.04,0.71l-2.45,-0.72l-2.59,-0.11l-2.75,-1.72l-0.46,0.02l-1.61,1.24l-3.67,-0.22l-3.04,3.34l-1.49,-0.9l-1.72,-1.94l-1.03,-0.46l-1.26,-0.1l-1.52,0.7l-0.82,5.66l0.14,1.89l1.92,1.38l2.27,2.38l0.73,0.32l1.41,4.88l1.26,1.68l3.93,3.5l1.7,2.26l5.03,4.33l2.43,1.02l0.02,1.54l0.34,0.88l1.53,1.81l2.97,2.53l0.33,0.71l-0.53,0.3l-3.22,-2.75l-2.74,-1.61l-3.2,-3.05l-4.08,-1.17l-2.77,-1.3l-3.78,0.58l-1.68,-0.17l-0.41,-0.57l-0.18,-1.66l-5.98,-4.16l-4.2,-4.32l-0.57,-0.94l1.66,-0.36l2.37,0.27l0.45,-0.22l-0.12,-0.48l-2.73,-1.86l-3.85,-3.6l-1.08,-1.61l0.16,-4.25l-0.73,-2.03l-4.37,-3.88l-2.23,-0.75l-1.46,0.24l-0.65,1.06l-0.42,1.98l-3.52,5.22l-0.94,-0.0l-3.02,-4.37l-1.43,-5.94l0.28,-0.2l0.5,0.51l3.57,0.82l1.03,-0.39l0.69,-0.9ZM587.09,559.57l2.86,1.2l-0.65,-0.13l-2.2,-1.07ZM591.3,561.05l-0.27,-0.82l0.24,-0.07l0.56,0.15l0.73,1.02l-1.27,-0.27ZM599.03,565.39l1.29,0.47l0.05,0.42l-0.83,-0.52l-0.5,-0.37ZM574.06,555.07l2.29,0.14l0.72,0.66l0.72,0.07l-0.88,-0.02l-1.68,-0.33l-1.18,-0.53ZM577.19,558.94l1.74,0.32l1.9,-0.2l1.59,0.28l-1.61,-0.19l-1.63,0.5l-1.35,-0.25l-0.64,-0.46ZM578.24,553.5l-2.04,0.04l-2.36,-0.62l0.18,-0.53l1.76,0.07l3.32,0.71l-0.86,0.32ZM552.42,532.01l1.48,1.22l2.64,2.63l-0.28,0.25l-3.01,-2.61l-0.83,-1.49ZM551.01,528.89l-1.01,-0.23l0.11,-0.55l0.35,0.02l0.55,0.76ZM547.01,523.61l0.87,-0.6l0.52,-0.96l2.47,3.21l-0.92,0.2l-1.06,-1.14l-1.25,-0.15l-0.64,-0.56ZM545.04,522.83l0.07,0.67l-0.21,-0.6l0.14,-0.08ZM545.55,524.84l0.91,0.95l-0.18,1.58l0.44,3.22l-1.56,-3.9l0.39,-1.86Z\",\n            name: \"Croatia\"\n          },\n          DE: {\n            path: \"M430.54,420.84l0.92,-0.06l2.69,-2.09l-0.09,-0.78l-0.62,-0.26l-0.01,-0.35l1.2,-2.32l0.46,-1.8l-0.14,-0.96l-1.33,-1.91l-0.18,-0.88l-1.75,-2.06l0.0,-0.39l2.55,-1.2l2.73,0.97l0.9,-0.57l1.27,0.05l3.04,-1.03l1.09,-1.59l-1.19,-1.26l0.08,-0.38l3.33,-2.18l0.69,-1.23l0.26,-2.25l-0.57,-1.0l-0.78,-0.57l-1.72,0.03l-0.99,-0.34l-0.56,-0.77l0.32,-0.81l-0.14,-0.63l0.26,-0.15l3.48,0.01l0.58,-0.47l1.2,-4.4l0.87,-1.53l0.25,-5.88l-0.69,-1.09l-1.23,-0.85l0.66,-2.97l1.24,-1.67l0.91,-0.42l4.57,-0.29l4.95,0.12l1.86,2.37l-0.66,1.17l0.16,0.55l1.25,0.65l0.93,-0.22l1.1,-2.84l1.71,1.34l0.03,2.08l0.36,0.39l0.43,-0.32l0.59,-3.01l-0.42,-2.2l0.28,-1.9l0.99,-1.44l3.67,0.69l4.06,-0.37l1.41,0.7l3.63,3.98l1.33,0.69l1.5,0.2l0.44,-0.29l-0.24,-0.47l-1.99,-0.81l-4.4,-4.83l-1.43,-0.63l-1.94,-0.18l-1.77,-1.03l-0.25,-5.57l-0.75,-0.72l-1.14,-0.35l-1.62,0.32l-0.16,-0.68l0.18,-0.5l2.27,-0.51l1.72,-0.78l0.31,-1.67l-3.74,-4.94l-0.12,-1.54l2.65,0.11l3.74,0.96l1.1,0.72l1.31,0.02l3.51,-0.89l1.75,0.87l1.88,0.47l1.57,1.79l0.07,1.44l-2.01,1.88l-0.12,0.46l0.4,0.25l3.46,-0.28l0.85,1.3l0.43,0.15l1.87,-0.51l4.9,2.22l3.72,-1.12l0.53,1.41l-0.65,1.61l-2.59,1.91l-0.12,0.5l0.59,1.22l1.1,0.48l2.61,-0.23l4.21,1.16l0.93,-0.43l3.21,-2.73l1.19,-0.54l4.49,-0.58l0.73,-1.01l1.74,-1.1l3.62,-3.29l5.8,1.01l1.62,2.36l4.08,2.65l3.73,-0.15l1.18,2.22l0.71,3.25l2.21,1.63l3.05,0.68l0.48,2.97l1.56,5.02l-0.04,1.42l-0.54,1.61l-0.94,1.33l-1.28,0.77l-0.85,1.0l-0.23,1.2l1.81,2.09l3.53,2.51l1.27,1.91l-0.81,3.15l0.34,0.97l1.43,1.19l0.26,2.35l0.57,0.56l-0.95,2.89l-1.01,1.59l0.34,1.21l1.36,1.97l-0.22,1.81l0.22,0.65l2.57,1.24l1.33,3.49l-1.29,4.18l-1.87,3.2l-1.46,-0.48l0.11,-0.81l-1.26,-1.82l-3.37,-0.82l-0.7,0.29l-0.4,0.92l1.31,1.41l-5.96,2.33l-2.6,0.78l-2.07,0.25l-1.5,1.77l-0.94,-0.31l-2.04,0.96l-0.67,1.03l-2.06,0.33l-0.98,1.46l-2.31,-0.41l-3.18,0.72l-1.4,0.85l-2.01,2.57l-1.77,-1.93l-0.72,-0.08l-0.44,0.32l-0.04,1.02l1.14,1.65l0.52,1.47l1.03,1.06l2.35,1.46l0.63,0.91l-1.61,2.81l1.52,1.82l2.46,3.98l1.87,1.57l1.49,0.06l2.95,2.95l2.61,1.64l0.92,1.52l0.79,0.46l1.3,-0.06l3.29,3.0l-0.16,2.44l-0.83,1.09l-0.5,0.23l-2.76,-0.87l-0.49,0.51l-0.66,2.87l-0.38,0.46l-6.37,2.67l-1.17,0.77l-0.83,1.02l-0.01,1.03l2.54,3.11l0.01,1.18l-0.74,1.46l0.24,0.51l1.68,0.35l0.18,0.48l-0.4,2.61l-2.26,-1.03l-0.43,-1.57l-1.34,-0.68l-2.77,0.52l-1.62,-0.86l-2.11,-0.53l-0.57,0.25l-0.13,1.46l-6.22,0.61l-4.4,1.66l-1.31,1.07l-1.45,0.0l-1.91,0.52l-0.6,-0.06l-1.66,-2.12l-5.79,-0.52l-0.56,0.34l-0.83,3.01l-0.69,0.81l-1.08,0.46l0.2,-0.9l-0.26,-0.48l-1.5,-0.34l-0.22,-1.01l-1.29,-1.05l-3.11,-1.25l-0.84,0.49l-7.44,-4.01l-0.69,0.18l-0.13,0.52l0.63,1.16l-3.25,0.23l-0.69,-0.77l-0.81,-0.23l-0.59,0.27l-1.41,-1.07l-0.93,-0.24l-2.0,0.82l-0.58,0.89l0.1,0.75l0.97,0.47l-0.22,0.19l-3.28,-0.22l-1.51,0.54l-2.18,0.2l-3.02,-0.1l-1.57,-0.55l-0.38,-0.91l0.11,-1.58l0.74,-2.31l0.21,-1.68l-0.31,-1.12l0.4,-1.44l1.21,-2.16l1.76,-6.1l4.05,-4.32l0.04,-1.82l-0.29,-0.36l-1.85,-0.66l-5.27,-0.89l-1.02,-0.38l-1.24,-1.21l-3.4,0.67l-2.1,-0.1l-0.44,-1.02l-1.73,-0.51l-1.82,0.86l-2.04,-2.62l-0.66,-1.44l-1.19,-0.93l-1.22,-0.27l0.41,-1.96l1.46,-1.99l0.04,-1.7l-3.27,-1.56l-1.51,-1.71l-0.36,-1.88l0.82,-2.22l2.46,-1.42l0.19,-0.42l-0.31,-2.35l-0.75,-0.87l-1.5,-0.57l0.7,-0.84l-0.06,-0.62l-3.08,-2.45l0.64,-2.95l-0.69,-0.92l-1.76,-0.94ZM538.5,364.74l4.43,2.81l-0.02,0.85l-1.71,0.2l-1.36,-0.24l-0.07,-2.1l-1.21,-1.13l-0.06,-0.38ZM536.24,359.59l0.19,1.05l-1.4,-0.89l-1.53,0.01l-1.16,1.66l-0.34,0.03l-2.16,-1.36l-0.36,-1.05l0.29,-2.61l0.72,-0.83l0.1,-0.88l1.09,-0.91l0.75,-0.03l0.89,1.43l2.04,0.8l0.23,0.34l-1.13,1.59l0.47,0.93l1.31,0.71ZM503.18,358.26l-1.43,0.03l-1.18,-0.81l0.48,-0.55l1.69,0.5l0.45,0.83ZM463.5,350.42l0.29,-1.31l0.49,0.91l0.99,0.04l-1.77,0.36ZM466.66,353.0l-0.22,0.19l-1.35,-0.23l0.93,-0.31l0.63,0.36Z\",\n            name: \"Germany\"\n          },\n          BA: {\n            path: \"M608.48,527.74l3.07,-0.74l1.2,0.42l-0.79,2.63l-1.93,2.88l-0.46,3.03l0.51,1.08l2.62,1.37l3.17,2.88l-0.23,0.39l-1.2,0.13l-2.07,-0.23l-0.97,0.56l0.15,0.91l3.04,3.85l0.08,0.83l-0.38,0.94l-1.06,-0.49l-0.81,0.03l-0.9,0.24l-0.68,0.71l-1.4,0.25l-1.35,-0.37l-0.66,0.34l-0.25,0.99l1.25,2.21l-0.08,0.64l-0.78,-0.82l-1.48,-0.05l-2.53,2.08l-0.73,1.8l0.01,1.34l-1.64,0.26l-0.76,0.89l0.27,3.36l1.07,2.1l-1.07,0.99l-1.63,-0.59l-2.39,-1.46l-3.77,-2.5l-0.73,-1.04l-2.18,-0.15l0.47,-0.54l-0.1,-0.84l-4.84,-4.93l-0.31,-2.37l-0.52,-0.52l-2.14,-0.74l-4.93,-4.25l-1.71,-2.26l-3.91,-3.48l-1.1,-1.42l-1.51,-5.08l-0.87,-0.45l-2.23,-2.34l-1.83,-1.33l0.67,-6.52l0.28,-0.24l0.73,-0.18l1.63,0.37l1.74,1.95l1.96,1.12l1.37,-0.9l2.12,-2.55l3.36,0.32l1.8,-1.25l2.69,1.66l1.16,0.26l1.55,-0.13l2.52,0.74l2.08,-0.71l2.1,1.42l1.04,-0.04l1.55,-1.0l1.73,0.34l2.04,-0.24l2.68,0.79l2.34,0.15l0.97,0.73l0.49,1.68l0.79,0.76l2.6,0.32Z\",\n            name: \"Bosnia and Herz.\"\n          },\n          HU: {\n            path: \"M574.1,479.74l1.55,-0.97l2.58,1.22l3.97,-0.49l0.32,-0.51l-0.38,-2.54l0.54,-0.63l0.13,-0.94l0.82,-0.63l1.72,0.33l4.27,3.09l1.92,0.75l5.23,0.12l7.85,-0.41l1.05,-1.32l-0.32,-1.6l0.46,-0.86l1.48,-0.78l4.68,-0.38l2.8,-0.66l1.42,-1.79l0.61,-0.13l3.87,1.55l5.93,-2.86l2.25,-4.04l1.81,-0.35l2.94,0.07l2.8,0.69l5.06,-0.81l1.4,0.91l2.13,2.58l0.79,0.23l6.37,-1.27l1.33,2.56l2.34,0.93l0.97,1.3l1.37,0.54l1.12,-0.08l0.79,0.7l0.31,1.75l-3.23,2.7l-1.51,-0.12l-2.92,0.86l-2.41,2.67l-1.56,1.19l-0.16,1.98l-1.62,1.48l-1.18,2.9l-1.73,1.75l-0.13,1.34l-2.12,2.95l-0.24,0.62l0.18,0.84l-2.28,1.58l-0.95,2.12l0.13,1.13l-0.95,0.47l-0.52,1.42l-1.26,0.86l-2.62,-0.28l-1.17,0.24l-0.9,1.34l-0.99,0.54l-1.52,-0.54l-3.55,0.89l-1.03,-0.47l-3.08,-0.33l-1.29,0.26l-3.03,-0.39l-1.28,0.24l-1.63,1.6l-1.88,1.0l-1.5,0.24l-1.07,-0.47l-1.04,0.98l-1.05,0.42l-2.71,0.54l-0.7,-0.13l-2.05,1.92l-2.19,0.68l-7.36,-0.61l-2.08,-1.2l-0.59,-0.87l-1.18,-0.5l-1.58,-0.16l-1.15,-0.67l-0.95,-1.37l-4.05,-2.96l-0.99,-1.51l-1.75,-1.36l-3.01,-1.38l-1.73,-2.2l-0.02,-0.77l-0.66,-0.74l-0.73,-2.3l-1.88,-0.24l2.28,-1.61l1.33,0.05l0.62,-0.39l0.55,-2.05l-0.16,-0.54l-0.64,-0.29l-0.2,-0.91l0.58,-1.02l-0.33,-1.71l2.32,-0.86l0.87,-1.68l-0.74,-1.83l-2.35,-0.68Z\",\n            name: \"Hungary\"\n          },\n          JE: {\n            path: \"M322.87,452.86l-0.06,0.38l-0.56,-0.27l-1.49,0.09l0.08,-0.64l2.02,0.44Z\",\n            name: \"Jersey\"\n          },\n          FI: {\n            path: \"M642.77,218.25l1.12,-0.27l0.17,-0.8l-3.01,-6.76l-1.66,-1.51l1.26,-4.66l-0.13,-1.29l-0.44,-1.65l-2.0,-1.41l-0.81,-4.2l0.5,-2.29l0.65,-0.99l3.52,-3.35l0.3,-1.68l2.07,-0.11l0.31,-0.63l-1.08,-1.53l-0.27,-1.43l3.0,-0.62l1.43,0.56l3.05,-0.72l2.8,-1.45l0.17,-1.13l-0.91,-1.85l1.24,0.03l-0.36,-1.06l1.03,0.05l1.76,-1.91l0.16,-1.42l2.91,-0.77l3.47,-2.96l3.21,-1.64l3.23,-2.9l1.63,-0.39l0.7,-1.93l2.7,-2.58l0.99,-0.5l1.28,-2.37l3.5,-2.87l2.18,-3.57l1.19,-1.25l0.4,-1.27l1.07,-0.09l1.37,-1.04l2.49,-0.66l2.47,0.18l1.24,0.48l1.0,-0.15l0.34,-0.43l-0.1,-1.23l-0.59,-0.75l1.83,-1.31l-0.47,-2.07l-1.07,-0.98l1.19,-7.23l-1.66,-1.93l-5.46,-2.54l-2.15,-0.22l-1.08,-1.64l0.59,-2.18l-0.41,-0.44l-0.76,0.14l-0.76,0.77l-1.54,0.82l-2.1,-0.66l-0.96,0.1l-1.35,-3.86l-1.94,-3.6l-2.51,-1.5l-0.6,-3.55l0.1,-1.33l0.2,-0.66l0.88,-0.57l1.4,-1.77l0.39,-2.96l1.27,-2.55l-0.7,-1.67l-3.55,-4.29l-0.46,-1.32l-0.2,-2.19l1.99,-2.12l-0.54,-2.44l-1.32,-0.69l-2.46,-0.23l0.14,-1.03l1.05,-2.32l-0.56,-2.01l0.01,-3.87l1.64,-1.24l0.06,-1.15l-2.2,-1.44l-1.54,-1.59l-0.47,-0.92l-1.92,-0.34l-1.17,-2.76l-3.36,-2.61l-1.06,-0.59l-5.7,-1.72l-2.28,-0.33l-2.6,-0.97l-7.13,-3.97l-0.62,-0.81l-3.28,-2.49l-3.42,-1.76l-0.17,-1.37l-0.37,-0.48l-3.13,-1.15l2.86,-0.25l2.65,0.65l0.68,-0.47l0.33,-0.96l-0.97,-2.39l0.11,-0.4l2.45,-1.26l4.54,0.04l9.08,9.74l1.07,1.8l0.37,1.29l0.39,0.29l8.8,1.06l1.17,0.77l2.44,-0.15l5.27,-1.54l2.05,-2.15l1.69,0.15l4.54,2.05l4.94,1.36l1.47,1.13l2.14,0.27l2.15,-1.3l1.14,-2.92l0.96,-1.23l1.35,-0.9l3.04,-0.64l2.41,-2.51l0.36,-2.25l-0.26,-3.73l0.23,-1.11l1.13,-2.04l1.5,-5.3l0.64,-1.46l0.73,-0.83l3.2,-2.19l2.92,-3.19l2.69,-0.38l5.31,0.64l3.11,-1.34l3.28,-1.98l2.0,-0.52l1.71,0.07l2.06,2.1l4.99,3.64l5.33,2.23l4.51,1.41l2.41,4.42l-1.13,1.66l-2.89,2.52l-2.42,2.65l-0.24,1.85l1.38,1.94l-6.81,2.58l-0.22,0.62l0.84,0.92l3.36,0.16l0.61,0.39l0.04,0.39l-0.3,0.87l-3.67,5.48l-0.16,1.52l2.92,7.03l9.06,3.17l2.4,3.03l4.03,4.07l2.13,1.71l-0.59,2.59l-4.94,5.07l-4.47,5.24l-2.13,2.89l-0.36,2.03l0.45,1.23l2.7,3.48l2.31,3.68l2.8,5.79l3.13,4.14l2.47,6.75l0.12,1.92l-2.63,0.33l-2.15,0.65l-0.35,0.42l0.09,0.48l1.16,1.03l-1.13,2.01l-0.17,2.9l-1.24,1.49l-0.21,0.7l0.62,0.87l2.25,0.39l0.09,0.91l-0.16,0.59l-2.59,1.65l-0.27,1.72l1.38,2.88l1.19,1.01l3.95,0.91l0.37,0.52l0.12,1.59l-1.73,1.8l-0.07,1.16l1.84,3.66l3.8,1.8l1.2,0.91l0.47,1.84l-0.02,1.31l-0.27,1.1l-3.85,4.54l-2.72,1.17l-0.31,0.89l5.84,5.02l7.58,4.38l2.72,1.92l2.09,2.95l2.32,2.38l0.27,1.15l-3.32,6.63l-1.3,1.77l-3.37,3.29l-5.05,4.15l-11.85,12.11l-2.68,2.11l-3.26,3.24l-6.92,4.7l-1.08,1.18l-3.43,2.16l-8.21,7.34l-1.68,0.75l-1.87,0.16l-0.84,0.47l-3.55,-1.54l-1.89,0.43l-1.61,1.04l-3.07,0.33l-2.14,0.65l0.29,-1.94l0.65,-0.96l0.13,-0.85l-0.45,-0.43l-0.5,0.07l-1.28,1.66l-0.55,1.73l-0.89,0.73l-2.1,0.32l-2.16,-1.32l-1.3,-0.04l-0.33,0.63l1.05,2.05l-1.03,-0.03l-2.52,1.57l-0.89,-1.14l-0.5,-0.16l-2.71,1.45l-2.64,0.33l-1.46,1.06l-7.46,1.6l-1.27,1.45l-0.76,0.39l-1.42,-0.39l-8.4,1.55l-3.69,-0.35l-3.8,2.83l-1.98,0.53l2.58,-2.49l0.22,-1.21l-0.2,-0.4l-1.63,-0.55l-1.02,-0.91l-1.36,-2.4l-1.04,0.08l-0.67,2.35l-0.77,0.71l-1.25,0.53l-2.16,-0.02l-0.21,-0.77l0.41,-1.08l-0.13,-0.82l1.1,-0.12l0.67,-0.88l-0.37,-0.93l-0.65,-0.1l0.93,-1.94l-0.28,-0.49l-4.43,-0.42l-4.34,-2.0l-0.96,-0.12l-0.58,-1.58l-0.46,-0.25l-1.2,0.29l-1.32,0.91l-2.1,-1.16l-0.93,-7.31l0.22,-1.74l1.36,-2.29l0.49,-2.36l0.11,-2.75l-0.24,-1.14l0.43,0.0l0.38,-0.53l-0.76,-1.2ZM687.44,144.29l-1.79,0.65l-1.22,-0.34l-0.02,-0.9l0.76,-0.51l1.66,-0.25l1.7,0.47l-1.08,0.89ZM651.46,242.91l1.58,0.43l0.67,-0.11l0.37,0.48l-1.17,0.78l-0.1,0.84l0.63,0.93l-0.71,-0.0l-0.85,-1.35l-1.17,-0.85l0.4,-0.98l0.37,-0.17ZM646.99,242.06l0.23,-0.82l0.48,0.41l-0.15,0.7l0.64,0.51l-1.2,-0.79ZM646.46,246.89l-1.07,0.55l-0.05,-0.02l0.08,-0.67l0.56,-0.37l0.66,-0.03l-0.18,0.54ZM643.72,247.48l-0.79,0.13l-0.32,-0.25l1.18,-0.39l-0.07,0.51ZM641.16,239.43l-0.07,0.33l-1.37,0.07l-0.55,-0.69l-0.31,-1.48l2.3,1.77ZM638.04,182.53l0.17,0.59l0.43,0.26l0.96,-0.17l0.89,-0.6l0.27,0.45l-0.56,-0.04l-1.2,1.04l-1.18,-0.84l-0.53,-1.0l0.8,-0.0l-0.05,0.32Z\",\n            name: \"Finland\"\n          },\n          BY: {\n            path: \"M670.47,410.28l-0.13,-0.27l0.06,-1.46l1.09,-1.97l-0.23,-1.17l0.56,-1.59l0.0,-1.53l-0.91,-1.32l-1.93,-1.22l-3.4,-1.52l-0.13,-0.47l3.0,-3.66l5.77,-2.64l0.89,-0.8l0.33,-2.39l-0.79,-5.49l-3.54,-9.02l-1.36,-5.56l2.79,0.28l1.97,-0.44l4.12,-0.26l1.99,1.03l4.06,-1.59l1.9,0.09l0.64,-0.62l0.52,-2.25l0.36,-0.3l2.44,0.18l1.03,-0.51l0.87,-1.04l1.25,-0.61l1.3,-0.06l0.98,-0.62l0.5,0.91l-0.32,0.99l0.36,0.45l1.01,0.4l2.51,-0.34l0.49,-0.81l-0.35,-1.77l-0.8,-0.73l-1.79,-0.35l0.92,-2.21l1.46,-2.06l-0.02,-2.89l0.75,-2.06l0.97,-1.47l2.97,-0.75l1.28,-0.84l1.11,-2.33l0.33,-0.17l4.09,0.17l1.26,-1.87l1.39,-0.94l0.08,-0.49l-0.47,-0.58l-3.74,-0.67l1.4,-3.61l0.38,-2.21l2.87,-0.65l1.83,-1.99l1.15,-0.29l3.4,0.5l3.99,-0.04l0.92,-2.18l3.35,-3.06l1.75,-1.04l1.25,-0.18l1.76,1.58l0.64,0.16l1.24,-0.67l2.07,-0.07l0.81,0.47l1.37,1.98l0.92,0.38l3.4,-1.49l3.19,1.0l1.29,0.81l-0.51,2.56l1.82,1.98l0.47,0.03l2.62,-1.56l1.96,-0.52l1.42,-0.92l3.92,-0.0l2.83,1.04l2.24,2.21l1.47,0.96l2.03,0.41l0.22,0.33l-0.08,3.01l-1.07,1.29l-0.11,1.14l1.99,2.8l0.22,1.35l-1.98,2.56l-0.54,2.11l0.11,0.59l4.8,3.05l-1.06,2.24l0.22,0.44l1.4,0.68l1.5,2.95l1.42,1.79l5.69,3.04l-0.04,1.47l-0.94,2.24l0.22,0.54l1.06,0.37l5.02,0.19l3.1,1.5l-0.32,1.27l0.64,1.39l3.16,2.26l0.01,1.08l-3.01,1.21l-0.7,1.17l-3.65,2.08l-3.72,-0.26l-1.43,-1.43l-1.18,-0.32l-3.43,0.09l-0.75,0.46l-1.71,3.0l0.04,0.52l4.03,4.54l-0.61,1.04l0.17,1.42l0.95,1.23l-0.33,4.38l1.6,1.88l0.82,1.53l-5.16,-0.05l-1.77,0.96l-1.99,-0.42l-1.46,0.63l-3.05,2.73l-1.29,1.6l-1.83,3.95l1.26,4.37l-0.98,1.32l-0.92,-0.12l-1.36,-0.8l-0.44,-1.39l-2.23,-1.49l-8.28,0.78l-2.69,0.89l-2.12,-3.38l-0.52,-0.66l-0.8,-0.34l-0.77,0.12l-1.1,0.93l-1.76,0.6l-0.87,0.66l-0.7,1.15l-0.62,-0.26l-0.83,-1.64l-5.66,-1.19l-2.43,0.84l-2.32,-0.52l-1.82,1.98l0.15,-1.24l-0.24,-0.41l-1.34,-0.56l-4.0,0.09l-2.18,-2.8l-5.0,-0.34l-4.26,-0.76l-0.91,-0.58l-8.26,-1.44l-9.81,-0.12l-2.74,0.57l-6.86,0.57l-0.74,0.64l-0.63,1.19l-2.0,1.92l-1.94,1.27l-1.28,-0.61l-2.2,-0.32l-1.06,0.29l-0.7,0.7Z\",\n            name: \"Belarus\"\n          },\n          GR: {\n            path: \"M728.08,670.66l-0.79,0.26l-0.27,-0.39l0.51,-1.56l-0.52,-1.53l2.47,-2.52l3.7,-1.26l-1.12,2.79l-1.0,1.2l0.08,0.93l-1.45,0.33l-1.59,1.75ZM727.96,660.69l0.31,-0.19l-0.05,0.46l-0.26,-0.27ZM717.45,657.54l2.45,-1.2l0.79,0.06l-1.92,1.05l-1.31,0.09ZM718.65,675.52l0.9,2.17l-0.84,0.63l0.1,-1.01l-0.53,-1.15l0.37,-0.64ZM711.88,642.87l1.58,-0.77l0.98,-0.02l2.64,0.58l0.06,0.28l-2.41,0.93l-1.62,-0.93l-1.23,-0.07ZM716.41,654.11l0.54,0.48l-0.03,0.04l-0.63,0.1l0.12,-0.63ZM708.43,617.81l-0.05,1.13l1.83,1.52l0.65,1.19l-0.81,-0.3l-0.49,0.49l0.43,0.99l-0.37,0.12l-3.89,-0.79l-0.36,-0.44l1.99,-1.7l-0.34,-0.63l-1.6,0.18l-1.24,1.38l-1.92,-0.59l-0.59,-0.58l0.65,-1.02l1.36,0.04l0.99,-0.34l1.05,-0.45l0.25,-0.65l1.92,-0.12l0.56,0.56ZM623.87,612.82l0.81,0.1l0.84,-0.47l0.47,-0.56l0.3,-1.23l0.8,-0.02l0.42,-0.51l-0.08,-0.84l-0.89,-1.74l1.18,-1.04l2.5,-0.46l0.86,-0.63l2.04,-5.25l1.85,-0.75l0.87,-1.26l0.46,-1.74l-1.01,-1.95l0.07,-0.75l4.52,-0.26l1.17,-0.64l2.45,0.55l2.71,-1.28l2.13,-2.58l0.71,-0.31l2.57,-0.43l4.21,0.63l3.19,-0.98l0.81,-2.47l4.88,0.17l1.31,-1.02l5.3,-0.03l3.31,-1.11l1.87,-0.11l0.72,-1.05l4.19,0.07l1.53,-0.5l1.02,1.67l2.5,1.47l1.25,-0.53l1.82,0.43l3.69,1.98l7.19,-1.39l1.97,0.27l2.96,-1.23l0.46,-1.18l-0.61,-2.89l-0.57,-0.89l0.35,-0.54l1.04,-0.24l2.68,0.72l2.17,1.52l0.5,2.84l-0.19,0.48l-0.81,0.19l-2.79,1.69l-0.26,1.91l0.38,2.25l-3.16,3.73l-0.56,0.18l-0.34,-0.5l-2.25,-1.26l-4.82,-0.7l-2.28,-0.88l-1.1,0.12l-2.16,-0.96l-1.44,0.48l-2.75,1.7l-1.32,-0.16l-1.58,-1.02l-1.46,-0.22l-1.39,0.65l-1.98,1.99l-1.88,0.91l-1.8,-0.37l-2.49,0.01l-0.39,0.31l-0.22,1.44l1.67,1.98l-0.49,1.12l0.47,1.01l0.99,0.39l-1.39,-0.11l-1.3,0.61l-0.33,1.0l1.52,1.65l1.88,1.38l0.37,1.18l-0.35,0.48l-1.18,-0.71l-2.27,-3.16l-3.48,-0.8l-0.39,0.14l-0.6,1.06l0.63,1.71l0.62,0.86l2.45,1.61l-2.93,-0.93l-0.8,-1.4l-0.43,-2.26l-5.5,-2.86l-0.45,-1.08l0.86,-1.57l-0.43,-0.54l-1.68,0.27l-2.63,1.64l0.16,2.07l-0.97,3.91l0.31,1.49l3.35,3.9l1.1,2.68l0.87,1.13l1.73,1.2l1.71,2.07l0.7,1.04l0.44,1.49l-1.17,0.88l-0.56,0.03l0.43,-1.37l-0.31,-1.06l-2.29,-1.17l-1.38,0.42l-1.12,0.76l-0.14,0.5l1.36,2.35l0.34,1.2l0.45,0.29l-2.36,1.26l-2.76,0.18l-0.61,0.48l0.16,0.67l1.6,0.3l1.19,0.76l3.27,0.91l1.74,1.2l1.38,0.09l1.7,2.15l2.57,0.54l1.7,2.19l2.02,0.42l1.63,0.73l0.65,1.86l0.5,5.06l-0.07,1.48l-0.27,0.28l-0.29,0.01l-1.21,-1.49l-4.01,-3.64l-1.32,-0.49l-1.28,0.69l-3.11,0.54l-1.92,0.86l-0.41,0.62l0.17,0.49l1.31,1.11l0.04,1.25l0.68,1.51l1.09,0.59l1.64,0.17l1.16,1.61l-3.98,1.51l-0.47,-0.26l-0.24,-1.31l-2.13,-1.2l-1.23,-0.26l-0.96,-0.77l-0.53,0.03l-0.67,0.67l0.43,2.7l1.21,1.72l2.8,6.72l0.16,1.11l-0.37,2.26l1.29,2.3l-1.48,-1.02l-1.97,-2.38l-0.69,-1.5l-1.16,-0.35l-1.89,0.44l-1.62,3.29l-0.04,1.39l-0.21,-0.11l-0.53,-0.44l-0.06,-2.98l-1.96,-2.81l-0.93,-0.41l-1.11,-1.88l-0.41,-0.16l-1.04,0.23l-0.97,0.71l-0.56,3.35l-1.68,-1.57l-2.02,-3.26l-0.05,-1.6l1.53,-1.91l-0.24,-1.37l-1.56,-2.52l-2.1,-1.55l-1.1,-0.44l-0.63,-1.66l-2.03,-1.46l2.41,-2.02l1.21,-2.49l1.74,0.55l1.49,-0.17l2.34,-2.4l1.5,0.09l3.86,2.05l4.28,1.21l2.03,1.0l1.29,1.08l1.71,0.38l0.46,-0.42l-0.23,-1.23l2.57,-0.15l0.74,-0.53l0.42,-1.05l-0.47,-0.67l-1.03,-0.49l-1.47,-0.29l-0.73,0.18l-1.18,-0.46l-5.55,-3.19l-0.57,0.13l-0.44,0.74l-0.71,0.36l-1.11,0.06l-3.71,-0.92l-2.15,0.71l-4.25,0.68l-1.88,-2.53l-0.6,0.34l-0.26,1.46l-1.28,0.35l-0.68,-0.45l-1.66,-4.25l-1.61,-1.93l-1.24,-0.53l-0.08,-0.77l0.07,-0.5l1.17,-0.16l2.36,0.85l0.88,-0.23l0.71,-0.78l-0.49,-1.83l-2.98,-0.34l-1.94,0.42l-0.66,-0.31l-3.3,-3.44l-2.27,-1.18l-1.43,-3.35l-1.02,-1.26ZM675.16,600.88l1.34,-0.04l2.3,1.22l1.04,1.37l-1.41,-1.3l-3.27,-1.24ZM707.89,661.28l-0.16,0.18l-0.36,-0.27l0.41,0.1l0.11,-0.02ZM708.79,660.68l0.03,-0.08l0.05,0.06l-0.08,0.03ZM703.69,645.69l0.95,-0.85l2.01,-0.19l-0.72,0.46l-2.24,0.58ZM672.76,675.97l0.47,1.17l1.83,0.46l1.71,-0.13l0.86,-0.89l0.55,-0.01l0.13,0.28l-0.96,0.59l0.02,0.55l1.05,0.63l0.84,-0.04l0.27,0.97l0.84,0.59l1.91,-0.04l3.7,-0.9l3.66,0.22l1.49,0.98l2.58,0.12l2.39,0.5l3.4,-0.62l-0.05,2.83l0.84,0.58l0.89,-0.12l0.88,-0.75l1.68,-0.51l1.84,0.0l1.35,-1.09l-0.21,1.46l-0.45,1.56l-0.8,0.3l-4.51,-0.1l-13.88,1.39l-0.4,-0.13l-0.14,-1.43l-0.43,-0.64l-3.49,-1.22l-7.93,-1.34l-2.54,0.18l-1.23,-0.27l-0.31,-0.42l-0.17,-1.7l0.27,-1.65l0.87,0.49l0.43,-0.08l0.58,-0.56l0.16,-1.18ZM702.17,634.63l0.83,-0.47l0.56,-1.18l-0.51,-1.11l-1.37,-1.35l-0.04,-0.53l1.75,-0.34l1.57,0.89l0.07,3.17l-0.61,0.53l-0.14,0.76l-0.95,0.65l-1.15,-1.03ZM698.48,599.9l-0.88,0.24l-0.94,-0.74l0.76,-0.25l1.05,0.74ZM696.85,654.58l-0.82,0.4l-0.91,-1.59l1.84,-1.64l0.35,0.34l-0.04,1.56l-0.43,0.92ZM695.75,663.45l0.09,0.3l-0.33,0.43l0.19,-0.35l0.05,-0.37ZM695.08,647.43l-0.75,0.06l0.03,-0.54l1.08,0.27l-0.36,0.21ZM690.86,607.38l1.89,-0.07l0.57,0.64l0.49,0.09l1.51,-1.04l-0.9,1.57l-0.18,1.09l-0.59,-0.12l-0.12,-0.89l-0.43,-0.38l-0.69,0.27l-0.36,0.77l-1.05,-0.22l-0.14,-1.72ZM694.65,659.11l-0.68,-0.65l-0.17,-0.27l0.96,0.71l-0.11,0.21ZM693.06,653.23l-0.77,0.86l-0.66,-0.29l0.4,-0.81l0.94,-0.5l0.09,0.74ZM690.94,644.63l1.66,0.25l0.15,0.17l-0.25,0.51l-0.46,-0.08l-1.1,-0.84ZM689.21,642.46l-0.12,0.31l-1.78,-1.57l-1.08,-1.15l-0.1,-0.51l0.59,-0.25l0.74,1.01l1.24,0.26l0.52,1.9ZM686.25,596.85l-1.26,0.42l-1.41,-0.87l0.01,-0.29l1.17,-1.42l0.98,0.08l0.69,0.96l-0.17,1.13ZM685.69,654.47l0.32,0.59l-0.13,0.1l-0.14,-0.27l-0.05,-0.42ZM682.97,623.8l0.52,0.29l0.25,0.92l-0.86,-0.54l0.1,-0.68ZM684.19,625.48l0.31,0.27l-0.27,0.07l-0.04,-0.34ZM661.67,625.04l3.09,-1.8l1.96,-0.47l1.2,1.04l0.73,1.64l0.92,0.78l4.78,2.0l3.0,0.27l1.17,1.85l-0.19,1.13l1.22,3.9l1.43,1.15l2.67,0.25l-0.01,1.43l-0.63,0.53l-1.01,-0.67l-0.75,-0.06l-1.88,-1.44l-0.34,-1.37l-2.27,-3.04l-3.76,-0.18l-1.21,-0.55l-0.6,-1.8l-4.92,-3.91l-3.14,-1.2l-1.46,0.5ZM681.22,658.91l0.47,0.25l-0.55,0.09l0.08,-0.34ZM682.34,659.06l0.37,-0.41l0.36,-0.09l0.0,0.38l-0.73,0.12ZM682.94,652.14l-0.52,-0.06l0.36,-0.53l0.24,0.11l-0.07,0.48ZM681.96,648.45l-0.28,-0.62l0.24,-0.28l0.32,0.46l-0.27,0.44ZM680.69,645.1l-0.29,0.25l0.39,-1.2l0.31,-0.03l-0.41,0.98ZM672.52,621.17l-0.6,-0.11l-0.2,-0.37l0.8,0.47ZM668.93,639.82l0.26,-0.51l0.33,0.09l-0.09,0.46l-0.5,-0.04ZM661.94,664.62l1.47,1.53l-0.51,0.98l-0.83,-0.28l-0.27,-0.48l0.14,-1.75ZM633.7,642.06l0.48,0.52l-1.17,0.88l-1.26,-1.0l-0.97,-1.4l0.5,-0.6l0.61,0.8l1.24,0.33l0.56,0.47ZM627.1,635.32l0.7,-1.67l0.81,0.42l0.52,-0.22l0.62,-1.26l0.25,1.95l1.11,0.64l1.1,1.42l-0.07,0.54l-1.85,-0.68l-0.97,0.24l-0.29,-1.09l-0.71,-0.88l-0.52,0.0l-0.69,0.6ZM630.95,631.66l0.08,0.09l-0.0,0.18l-0.08,-0.27ZM629.87,628.81l0.45,-1.93l0.83,-0.95l0.06,2.57l-0.21,0.26l-1.14,0.06ZM620.81,615.4l-0.15,-0.1l-1.04,-1.97l-2.08,-2.4l2.14,-0.65l0.9,0.56l-1.09,1.26l0.72,1.12l0.59,2.18Z\",\n            name: \"Greece\"\n          },\n          RU: {\n            path: \"M726.11,290.03l1.44,0.47l1.4,1.79l1.34,0.66l1.83,0.02l1.0,-1.42l-1.01,-2.65l-1.75,-1.83l-1.79,-0.93l-3.39,0.01l-0.29,-1.23l0.24,-0.8l2.94,-2.83l0.33,-0.93l-0.98,-8.52l-0.89,-1.42l0.98,-1.16l1.86,-4.42l1.6,-0.5l0.55,-0.74l1.26,-0.69l-0.24,-1.11l-1.43,-1.46l0.6,-1.35l-0.65,-3.35l0.42,-0.82l0.57,-0.06l1.12,1.2l2.03,0.6l1.21,-0.84l0.54,-1.72l0.56,-0.46l1.07,0.55l1.95,0.23l2.87,-0.46l2.72,-3.42l6.88,0.87l6.12,1.65l0.89,-0.77l0.29,-1.23l-0.19,-0.42l-2.61,-1.39l-1.44,-1.91l-2.05,-1.51l-2.27,-0.21l-2.75,0.52l-3.91,-0.3l-3.38,-2.77l-2.3,-0.91l-1.57,-2.17l0.85,0.47l0.58,-0.26l0.39,-2.49l-2.07,-1.74l-4.84,2.14l-3.82,0.53l7.28,-6.51l3.44,-2.16l1.07,-1.18l6.97,-4.75l3.26,-3.23l2.7,-2.13l11.86,-12.12l5.03,-4.13l3.4,-3.32l1.38,-1.87l3.45,-6.95l-0.01,-0.97l-0.42,-0.8l-2.34,-2.4l-2.18,-3.05l-2.83,-1.99l-7.52,-4.34l-5.48,-4.63l2.72,-1.22l4.0,-4.72l0.38,-1.46l-0.17,-2.73l-0.38,-0.9l-1.51,-1.2l-3.71,-1.77l-1.54,-3.23l-0.01,-0.49l1.82,-2.02l-0.21,-2.19l-0.75,-0.87l-3.83,-0.84l-0.98,-0.81l-1.23,-2.52l0.19,-1.23l2.4,-1.41l0.44,-1.18l-0.26,-1.49l-2.69,-0.77l1.34,-1.73l0.27,-3.17l1.19,-2.04l-0.08,-0.5l-1.02,-0.91l4.61,-0.92l0.39,-1.34l-0.21,-1.45l-2.56,-6.99l-3.15,-4.16l-2.8,-5.79l-2.34,-3.73l-2.68,-3.45l-0.31,-0.84l0.25,-1.57l2.07,-2.8l4.43,-5.2l5.01,-5.15l0.73,-3.16l-0.28,-0.7l-2.11,-1.5l-3.99,-4.03l-2.62,-3.21l-8.77,-2.94l-2.79,-6.73l0.1,-0.97l3.69,-5.53l0.3,-1.8l-1.15,-0.93l-3.46,-0.31l9.02,-3.32l0.82,-0.57l0.66,-0.76l2.29,-4.62l8.22,-2.29l1.33,-1.04l1.09,-1.73l0.48,-2.01l-0.34,-0.97l5.48,2.43l2.48,0.12l1.09,-0.25l0.77,-0.81l0.37,-1.19l-0.59,-3.81l1.82,0.26l5.43,1.91l1.55,-0.18l1.81,-0.72l1.58,-2.18l0.98,-0.31l1.48,0.49l0.45,-0.15l0.48,-1.01l-0.7,-2.17l5.05,1.88l2.44,1.53l5.02,1.3l0.69,0.55l-0.14,1.85l-0.82,0.45l-2.04,-0.09l-8.15,-1.55l-1.16,1.0l-0.01,0.6l1.05,0.94l2.14,0.95l0.58,1.64l0.41,0.27l3.46,-0.24l3.3,0.68l1.42,-0.18l-0.88,1.41l0.08,0.55l0.89,0.44l3.73,-1.44l1.6,-0.36l0.6,0.25l0.09,0.86l-0.58,1.41l-0.09,1.2l-1.07,2.55l-1.81,0.91l-0.74,1.6l0.43,0.15l2.61,-0.7l1.48,-0.8l2.69,-3.85l0.61,-0.4l7.25,-0.07l8.54,2.02l2.04,0.17l2.33,-0.23l1.51,-1.05l7.57,1.96l10.28,4.47l15.04,7.36l8.43,6.46l1.18,1.5l3.07,0.79l0.85,-0.48l1.46,0.4l10.12,5.95l3.45,0.31l0.41,-0.54l-0.6,-1.55l0.93,0.68l1.87,2.27l2.36,1.76l2.33,2.53l1.51,0.78l0.0,30.64l-5.15,3.01l-10.98,3.76l-8.56,1.41l-3.42,0.1l-6.69,-0.7l-3.63,-0.75l-4.48,-2.13l-4.29,-1.1l-2.98,-0.49l-5.35,-0.2l-11.6,-2.1l-1.97,-0.72l-7.29,-4.12l-3.2,1.13l-1.46,0.18l-0.78,-0.94l0.53,-0.72l-0.24,-0.58l-4.14,-1.18l-3.43,-0.09l-4.02,-1.75l-1.59,0.44l-4.38,-1.76l-1.93,-1.41l-1.89,-2.33l0.92,-1.16l-0.19,-0.68l-7.27,-1.52l-6.84,-0.2l-0.4,0.29l0.18,0.46l1.19,0.72l3.05,0.43l3.73,2.29l-0.44,1.73l0.17,0.43l5.18,3.73l0.29,0.74l4.18,0.93l0.44,1.29l-0.47,0.94l0.67,1.15l5.49,1.86l-0.52,0.8l-1.44,0.78l-1.53,0.38l-0.3,0.36l0.24,0.4l0.93,0.34l1.98,-0.12l7.3,2.13l3.81,2.13l3.89,3.9l1.2,1.84l-0.12,1.89l-2.15,5.68l-0.9,1.09l-1.83,1.32l-0.1,0.55l3.58,5.02l1.76,3.94l0.38,3.98l1.24,0.96l-0.89,1.1l0.25,3.45l2.37,2.71l3.37,1.69l2.28,0.38l2.79,-0.66l1.95,0.87l4.57,3.12l2.06,3.28l1.09,0.86l8.27,2.02l5.37,1.99l1.05,0.1l2.82,-1.76l4.45,-1.19l1.69,-2.08l-0.15,-1.55l-1.13,-2.46l-0.48,-2.68l-2.94,-1.7l-4.41,0.47l-1.79,-0.09l-1.31,-0.61l-1.88,-1.7l-3.66,-4.27l-1.98,-1.45l-0.57,-0.81l-0.62,-1.12l0.06,-1.49l1.44,-0.01l1.8,-1.14l1.41,-4.09l3.11,-0.43l5.13,1.86l6.59,5.08l1.56,0.56l3.82,-0.04l0.42,0.59l1.34,0.79l7.02,1.73l7.13,3.16l2.91,-0.34l1.23,-2.43l2.64,-1.63l1.82,-0.27l2.7,0.62l0.94,-0.91l0.0,400.07l-4.46,-0.79l-1.09,0.42l-1.26,1.88l-5.84,-4.82l-2.57,-2.84l-8.3,-6.49l-7.29,-2.21l-4.42,-4.6l-2.32,0.5l-2.63,-0.52l-1.78,-1.42l-0.9,-1.9l-1.27,-1.31l-3.61,-1.66l-3.84,-0.92l-0.2,-0.37l3.1,-1.0l1.03,-0.69l-0.05,-0.69l-2.45,-1.01l1.22,-0.52l3.01,1.98l1.61,0.58l1.01,-0.66l5.08,-1.09l0.64,-1.13l0.01,-1.14l-0.83,-0.39l0.02,-0.79l0.7,-1.38l2.37,-2.55l1.21,-3.3l0.78,-0.55l0.38,0.25l0.1,1.27l0.32,0.31l0.41,-0.18l1.33,-2.52l3.98,0.07l0.24,-0.67l-2.44,-2.61l-3.22,-2.59l-1.55,0.09l-0.65,-0.3l-1.32,-2.0l-0.39,-1.18l2.35,0.25l3.37,-1.37l3.64,0.63l0.44,-0.46l-0.69,-2.28l4.53,-1.44l4.37,-1.99l2.18,-0.55l0.33,-1.4l-0.68,-1.65l-1.0,-1.4l-2.33,-0.06l-1.52,1.69l-3.33,0.51l-0.55,-0.04l1.8,-0.89l0.38,-0.89l-0.41,-0.19l-2.5,0.39l-1.4,1.14l-3.14,1.23l-0.09,-0.82l0.81,-0.93l0.26,-0.87l-1.06,-0.72l0.72,-1.44l0.38,-2.47l0.91,-0.72l1.93,-0.23l1.85,-0.8l1.15,-0.93l1.32,-2.0l0.85,-0.25l6.6,0.37l4.71,-0.19l0.87,-0.89l0.05,-1.5l1.42,-3.4l0.99,-1.16l0.05,-0.83l-1.49,-0.71l0.56,-0.88l-0.75,-3.25l-1.15,-0.75l-1.32,-0.29l0.66,-2.07l0.97,-0.98l1.32,0.21l1.24,-0.24l0.55,-0.79l-0.46,-0.76l-3.06,-1.05l-0.67,-1.1l2.56,-0.9l2.44,-2.39l0.59,-0.98l0.29,-2.27l-0.93,-1.24l0.0,-0.89l0.48,-1.04l-0.19,-0.6l-1.1,-0.63l-2.1,0.51l-1.12,-0.07l-4.23,-2.7l-2.19,-0.27l-1.68,-1.96l-2.3,0.57l-1.31,-0.1l-3.56,-2.2l-2.76,-0.26l-2.75,-1.58l-0.96,0.15l-0.52,0.67l-0.27,1.26l-1.02,0.25l-4.44,-3.21l-1.26,-1.76l-0.43,-1.51l-2.37,-2.21l-1.25,-0.09l-2.83,1.16l-5.07,1.07l-1.8,1.39l-1.55,-1.19l-1.78,-0.29l-0.86,0.24l-2.57,-2.23l-3.28,-0.48l-2.83,1.54l-0.78,-0.28l-0.55,-1.12l-0.87,-0.5l-0.93,-1.27l-0.22,-1.05l0.59,-1.13l0.05,-1.01l-1.71,-4.09l0.2,-1.4l-0.59,-0.56l-1.82,-0.2l-1.28,-2.54l-1.35,-0.09l-3.1,0.57l-3.49,-1.19l-3.32,-0.13l0.6,-0.53l0.05,-0.87l-0.67,-0.61l-0.34,-3.22l-1.12,-1.88l3.23,-0.64l0.56,-0.61l0.0,-0.97l-3.92,-3.8l-1.29,-3.12l-1.31,-1.82l-1.47,-1.24l-1.22,-0.59l-3.98,0.16l-2.32,-0.36l-1.88,0.24l-3.42,1.53l-1.14,0.06l-3.97,-1.0l-1.1,0.01l-1.27,0.77l-1.12,2.88l-1.96,1.03l-1.84,0.07l-2.57,-0.95l-1.02,-2.05l-1.46,-1.55l0.1,-3.66l0.34,-0.73l-1.14,-1.49l-0.07,-0.9l0.58,-0.74l-0.03,-0.72l-3.97,-4.57l1.74,-2.87l3.23,-0.09l0.87,0.25l1.61,1.49l4.18,0.24l3.9,-2.22l0.67,-1.14l2.96,-1.12l0.33,-0.34l-0.01,-1.77l-0.42,-0.68l-2.85,-1.78l-0.46,-0.98l0.32,-0.71l-0.24,-1.09l-3.52,-1.68l-5.55,-0.36l0.81,-2.04l0.17,-1.22l-0.27,-0.89l-0.58,-0.55l-5.18,-2.56l-1.33,-1.67l-0.71,-1.81l-0.87,-1.24l-1.36,-0.72l0.98,-1.81l-0.1,-0.74l-4.73,-2.94l0.42,-2.01l2.06,-2.77l-0.33,-1.87l-1.9,-2.6l0.05,-0.61l1.13,-1.47l0.09,-3.31l-0.53,-0.83l-2.18,-0.5l-1.26,-0.82l-2.4,-2.34l-3.18,-1.14l-4.12,0.02l-2.58,1.41l-1.63,0.4l-1.8,1.14l-1.34,-1.49l0.57,-1.78l-0.08,-0.77l-0.47,-0.67l-4.06,-1.61l-2.03,0.38l-1.99,1.08l-0.45,-0.15l-1.32,-1.91l-1.12,-0.71l-2.42,0.01l-1.23,0.67l-1.72,-1.43l0.66,-2.19l-1.34,-5.49l-1.34,-1.21l-0.23,-0.86l-1.31,-1.81l-0.13,-1.47l-0.53,-0.78l-0.98,-0.41l-1.57,0.36l0.75,-1.97l0.11,-1.54l0.56,-1.41l0.95,-1.24l0.0,-2.13l-0.62,-0.75l-3.35,-2.1l-0.53,-1.63l-1.92,-0.42l0.57,-2.1l1.17,-1.07l0.68,-1.42l2.7,-0.77l0.62,-0.66l-0.15,-0.75l-1.29,-1.03l-0.25,-1.0ZM899.6,149.08l-0.91,-2.5l-1.31,-2.3l-1.94,-1.53l-3.3,-4.18l-1.3,-2.04l-0.62,-2.02l0.83,-3.04l6.79,-3.36l1.76,-1.43l0.0,22.4ZM836.18,140.74l0.44,1.89l-0.38,0.82l0.1,0.76l-0.3,0.19l-1.12,-1.49l-0.96,-0.18l-0.66,-0.6l-0.26,-0.83l0.79,0.0l1.49,-0.81l0.85,0.25ZM617.41,357.73l1.54,-1.2l1.41,-1.73l1.16,-2.18l0.41,-3.11l1.52,-0.56l4.03,0.06l1.68,-0.82l1.35,-1.25l-0.8,0.85l0.13,0.64l1.12,0.5l1.36,0.19l1.62,0.72l1.47,0.13l2.74,-0.62l0.3,-0.33l0.62,-5.87l1.57,-0.18l2.24,1.46l4.31,1.78l2.75,0.72l6.56,0.09l0.88,1.63l2.49,1.72l-1.93,5.57l-0.04,1.47l0.9,2.13l-41.39,-1.79Z\",\n            name: \"Russia\"\n          },\n          NL: {\n            path: \"M408.11,413.92l-2.98,-1.02l-2.63,0.56l-1.62,-0.68l-1.47,-0.1l-1.43,-1.16l0.86,-0.49l2.54,-0.12l1.81,0.37l3.4,2.1l2.12,-0.24l0.2,-0.64l-0.47,-0.58l-2.47,-1.11l1.44,-0.16l0.27,-0.65l-0.68,-1.17l-2.31,-2.26l1.63,-2.96l1.7,-1.22l3.79,-4.66l1.1,-2.5l1.57,-6.68l1.04,-2.07l1.58,0.51l2.03,-0.83l0.61,2.01l1.68,1.87l-0.05,0.7l-2.4,1.06l0.04,3.13l-0.72,1.49l0.08,0.43l0.54,0.48l6.52,1.61l4.07,-3.2l1.17,-1.38l-0.04,-1.42l-0.47,-1.01l-2.62,-0.56l-0.29,-0.33l0.01,-1.58l0.57,-0.88l-0.05,-0.97l-0.42,-0.31l-1.44,0.1l-1.38,-0.36l-0.26,-2.87l-0.67,-0.7l1.23,-2.18l1.06,-0.92l4.54,-1.93l2.49,-0.57l10.02,-0.62l2.06,2.07l2.84,0.79l-0.08,4.83l-1.86,4.59l-0.24,1.67l-3.48,0.08l-0.9,0.62l0.09,0.93l-0.34,0.86l0.88,1.38l1.41,0.52l1.7,-0.01l0.65,0.86l-0.19,1.84l-0.5,0.96l-3.49,2.4l-0.14,0.98l1.13,1.12l-0.6,0.77l-2.87,0.97l-1.44,-0.0l-0.68,0.49l-2.7,-0.95l-2.28,0.91l-0.97,0.89l0.08,0.97l1.84,2.22l0.1,0.74l1.31,1.87l0.06,0.56l-0.41,1.55l-1.26,2.5l0.11,0.92l0.53,0.33l-2.24,1.64l-0.78,-0.07l-0.53,0.48l0.1,0.74l0.47,0.55l1.53,0.64l0.41,0.58l-0.61,2.28l-2.95,-0.15l-0.55,-0.2l-0.58,-0.97l1.24,-1.33l0.21,-1.07l0.9,-1.71l0.16,-0.82l-0.5,-0.82l-2.67,-0.92l-1.82,-1.56l-2.38,0.42l-1.15,-0.3l-1.39,-1.09l-0.5,-1.77l-0.54,-0.52l-0.49,0.01l-1.11,1.02l-1.05,0.07l-0.27,-0.74l-0.84,-0.78l-0.46,0.02l-1.54,1.17l-1.76,-0.94l-1.73,0.91l0.02,1.2l-1.77,-0.51ZM421.28,396.41l4.65,-3.0l1.5,-0.51l0.91,0.09l0.98,0.62l-0.3,0.84l-3.92,2.87l-0.85,0.06l-2.96,-0.97ZM416.5,383.47l-1.03,1.0l-0.51,-0.26l0.29,-0.71l1.25,-1.07l-0.0,1.03ZM407.31,414.89l-2.06,1.54l-1.75,0.66l-0.79,-0.07l-2.0,-1.12l-1.46,-0.21l-1.9,0.74l-0.5,-0.59l-0.29,-1.12l2.71,-0.27l3.99,0.8l1.77,-0.71l1.2,0.56l1.08,-0.22ZM401.26,408.39l0.8,-0.2l1.99,0.12l1.27,0.97l-1.02,0.24l-1.64,-1.11l-1.39,-0.02Z\",\n            name: \"Netherlands\"\n          },\n          PT: {\n            path: \"M226.07,631.38l0.09,-1.3l-0.52,-1.53l1.89,-0.52l1.05,-0.88l0.66,-1.19l-0.29,-1.44l0.72,-1.29l1.9,-1.22l0.16,-0.48l-0.45,-0.25l-1.03,0.19l-1.33,0.85l-2.54,4.33l-2.69,0.63l-1.22,-0.39l0.0,-1.58l0.59,-1.75l0.23,-2.35l0.81,-2.11l-0.23,-1.47l1.55,-1.26l1.45,-1.94l4.21,-9.14l-0.16,-0.87l-0.43,-0.47l0.16,-1.05l1.34,-5.47l1.22,-2.52l0.34,-5.43l-1.08,-3.3l-0.9,-4.39l-0.06,-1.28l0.63,-0.63l-0.25,-0.68l-1.03,-0.09l-0.39,-0.67l0.1,-0.85l2.5,-2.7l1.86,-0.94l3.64,-1.08l0.35,0.03l0.97,1.44l-1.22,1.94l0.7,1.49l0.68,0.39l0.93,-0.07l2.18,-1.03l3.06,-0.14l2.4,0.83l1.69,0.04l2.74,-1.05l0.62,-1.31l1.58,0.47l2.24,0.09l0.56,-0.29l1.51,0.44l1.18,-0.08l0.55,0.78l-0.02,2.66l0.26,0.7l3.35,0.69l0.74,0.55l0.28,0.69l-2.34,2.39l-2.17,1.14l-1.76,1.49l-1.17,1.72l-1.44,0.74l-0.73,1.02l1.23,3.94l0.23,1.9l-0.45,3.46l0.52,1.45l-2.57,1.96l-0.37,0.82l0.17,0.84l1.64,1.7l-1.02,3.33l-0.78,1.27l-0.86,0.37l-4.59,0.03l-1.11,0.3l-0.24,0.59l1.23,2.01l1.47,1.18l0.41,1.96l1.81,3.22l1.87,0.6l0.43,0.57l-0.58,2.04l-3.14,2.99l-0.94,4.28l3.28,4.65l1.82,-0.01l-0.66,1.6l-2.21,0.66l-3.59,4.5l-0.83,2.42l1.24,5.98l-0.9,0.16l-4.53,2.49l-1.25,0.0l-2.72,-1.12l-6.2,-0.68l-2.07,0.72l-1.41,-0.02l-1.47,0.83l2.33,-5.99l-0.06,-2.49l0.35,-2.3l-0.42,-2.18l-0.73,-1.34l1.01,-3.52l-0.12,-1.83l-0.72,-1.81l2.21,0.27l0.41,-0.22l-0.07,-0.46l-0.89,-0.92l-1.23,-0.68l-1.65,0.12l-3.48,1.12ZM117.56,718.32l1.56,0.67l1.81,-0.33l2.3,1.05l-1.15,1.04l-2.21,-0.2l-2.57,-1.4l0.26,-0.82ZM10.64,654.82l-1.1,0.02l-0.19,-0.31l0.92,-0.12l0.37,0.41ZM2.49,641.55l1.09,0.17l5.02,-0.12l-0.06,0.57l-0.57,0.32l-2.41,0.29l-3.86,-0.72l-1.16,-0.85l-0.14,-0.53l0.41,-0.13l1.67,1.01Z\",\n            name: \"Portugal\"\n          },\n          NO: {\n            path: \"M728.73,12.12l0.23,0.63l1.37,0.34l2.91,-0.91l0.43,0.5l-0.87,2.15l-0.5,5.32l0.03,1.92l0.75,1.21l0.37,-0.28l1.54,-4.63l1.79,-1.59l0.63,-2.84l1.64,-3.37l1.81,-1.92l0.96,-0.48l3.49,0.08l1.42,0.68l1.34,1.62l1.13,0.76l3.32,0.75l1.46,1.46l1.05,0.06l2.14,-1.24l1.18,-0.17l2.0,1.7l-0.39,1.45l0.53,0.75l2.78,-0.09l2.24,0.55l4.31,2.89l0.39,1.18l-0.18,1.34l-6.19,1.79l-2.83,1.78l-4.44,0.67l-15.48,-1.19l-0.42,0.49l0.6,1.58l10.68,2.78l0.42,0.55l-0.32,1.59l0.21,2.36l1.07,1.15l1.47,0.42l2.61,-0.21l1.62,0.37l1.06,-0.95l0.31,-2.12l0.45,-0.29l1.14,0.5l0.61,2.27l0.6,0.49l0.57,-0.18l0.65,-1.49l4.65,0.21l0.66,2.86l-0.33,1.93l-1.15,0.59l-2.23,-0.09l-3.11,-1.22l-2.04,-1.17l-1.03,-0.06l-0.46,0.65l0.46,1.08l-0.11,0.77l-1.24,2.44l-1.18,0.9l-2.11,0.74l-6.01,1.49l-0.74,0.88l-1.92,4.09l-1.08,0.98l-1.79,0.57l-1.49,-1.94l0.15,-1.12l2.32,-2.54l2.91,-2.55l1.33,-1.95l0.02,-0.42l-2.6,-4.77l-10.07,-3.82l-4.86,-3.54l-2.12,-2.17l-2.31,-0.18l-2.22,0.59l-3.29,1.99l-2.88,1.26l-2.52,-0.53l-2.63,-0.12l-3.06,0.46l-3.09,3.3l-3.22,2.21l-0.89,1.04l-0.68,1.54l-1.52,5.34l-1.15,2.08l-0.26,1.33l0.26,3.66l-0.25,1.89l-2.12,2.23l-2.9,0.58l-1.59,1.03l-1.19,1.51l-1.11,2.84l-1.73,0.96l-1.64,-0.27l-1.4,-1.1l-5.01,-1.38l-4.52,-2.05l-2.06,-0.21l-2.25,2.22l-5.05,1.49l-2.23,0.14l-1.05,-0.74l-8.72,-1.08l-1.51,-3.09l-9.21,-9.88l-5.12,-0.19l-1.9,0.71l-1.2,1.0l-0.17,0.91l0.95,2.35l-0.45,0.52l-2.35,-0.67l-2.89,0.05l-0.9,0.78l-6.7,0.37l-0.25,0.69l2.88,2.76l0.13,1.02l-0.37,2.12l-1.03,1.82l-1.19,1.48l-2.37,1.5l0.06,0.71l3.06,1.26l-3.0,2.32l-12.25,-3.18l-3.88,-0.18l-5.25,-1.45l-1.26,0.17l-2.17,0.96l-0.21,1.5l0.39,6.19l-0.64,1.44l-2.61,3.64l-7.75,-3.12l-7.69,4.89l-2.94,6.47l-1.5,1.49l-3.45,1.03l-1.17,2.04l0.05,0.43l3.13,3.96l0.93,2.08l-0.36,2.0l-2.18,1.74l-9.23,9.65l-1.79,1.39l-0.15,0.39l0.78,3.92l-1.25,1.03l-4.43,1.86l-6.68,0.85l-0.35,0.48l1.23,7.36l-1.15,3.32l-0.93,7.54l-4.89,7.78l-6.29,7.98l0.14,0.61l5.66,2.51l0.87,4.15l-0.09,1.74l-1.0,1.6l-1.2,1.56l-10.12,-1.3l-3.0,0.54l-2.79,1.15l-1.83,1.34l-4.9,5.82l-1.7,1.6l0.35,2.44l-2.78,4.15l1.85,4.71l0.95,1.67l-1.39,1.81l0.42,4.16l-0.34,2.72l2.56,6.56l-0.15,2.34l-1.85,9.33l2.03,1.82l4.12,2.33l3.65,3.7l-0.65,2.4l-1.65,3.3l-4.52,0.59l-1.11,0.86l0.31,2.38l3.23,7.09l0.44,1.8l-0.98,2.96l-0.38,3.87l-2.51,2.69l-1.57,1.04l-2.34,0.41l-0.95,0.63l-1.44,3.47l-2.02,2.05l-0.04,1.14l1.51,5.23l-1.14,5.29l-0.86,1.68l-1.08,0.53l-0.66,-0.22l-1.62,-3.96l-7.05,-1.56l-2.46,-3.92l-0.13,-4.22l-0.52,-3.2l-0.31,-0.36l-0.44,0.18l-0.83,1.39l0.39,2.25l-2.28,1.54l0.12,1.28l0.55,0.47l-0.21,2.89l-3.22,5.07l-1.36,-0.24l-1.59,1.15l-1.18,0.14l-0.57,-1.25l-2.24,-1.81l-1.35,0.01l-0.24,0.69l1.66,1.79l-0.34,0.49l-4.57,2.18l-0.1,0.66l0.87,0.76l-0.63,0.74l-1.2,0.24l-0.9,1.31l-3.32,2.06l-5.48,5.29l-2.79,1.48l-1.93,1.51l-1.6,-0.04l-2.35,1.35l-5.42,1.13l-3.62,-0.52l-2.54,0.44l-1.12,-0.74l0.13,-0.99l-0.23,-0.57l-0.48,-0.15l-1.42,0.03l-0.43,0.44l-0.3,1.11l-1.65,-0.49l-0.19,-0.21l0.48,-0.73l1.13,-0.9l0.02,-0.61l-0.66,-0.86l-3.61,-0.1l-4.41,-2.06l-1.12,-1.16l-3.59,-1.77l-1.55,-1.81l-0.87,-1.97l0.49,-4.68l0.5,-0.49l3.02,0.98l3.54,1.8l0.77,-0.24l0.99,-1.33l1.95,-1.08l-0.0,-0.7l-0.92,-0.33l-2.81,1.2l-2.49,-1.9l0.0,-0.39l0.79,-0.82l0.27,-1.01l-0.4,-1.12l0.16,-1.06l4.66,-4.01l1.45,-0.81l0.15,-0.54l-0.62,-0.47l-1.78,0.56l-5.83,3.61l-3.78,1.24l-1.46,1.82l-1.27,0.66l-2.2,0.07l-0.41,-0.93l0.7,-4.41l0.75,-2.16l0.75,-1.38l1.39,-0.37l0.82,-1.01l3.8,1.04l1.57,-1.49l1.65,-0.23l3.06,-1.49l0.15,-0.72l-0.45,-0.3l-5.05,0.73l-0.67,-0.19l-0.29,-0.73l4.44,-4.25l0.62,-1.06l0.39,-2.03l2.7,-2.33l1.96,-0.95l0.44,0.56l-0.61,2.9l0.01,1.23l0.32,0.39l0.45,-0.24l1.8,-4.31l0.74,-0.96l0.8,-0.65l2.32,-0.59l0.69,-1.14l-0.39,-0.22l-2.64,0.24l-6.23,1.67l-2.72,1.52l-3.5,4.09l-0.42,1.66l-0.85,0.74l-1.49,0.42l-1.92,2.07l-0.87,1.66l-3.08,2.3l-1.17,1.31l-0.32,-1.44l0.18,-1.94l0.87,-1.41l0.48,-1.55l-0.55,-1.47l0.23,-0.46l2.09,0.41l1.6,-0.06l2.77,-1.1l0.18,-0.59l-0.72,-0.8l-3.19,-0.01l-1.6,-0.94l-1.3,-1.95l-0.58,-2.58l0.3,-0.56l5.03,-2.8l1.46,-1.36l-0.21,-0.69l-1.12,-0.04l-1.87,1.53l-2.49,0.88l-1.51,-1.18l-0.83,-1.34l-0.5,-2.97l-0.01,-3.47l0.81,-0.47l2.52,0.47l3.01,-0.18l6.47,-1.26l4.11,0.74l1.79,-0.06l2.68,-1.09l2.11,-0.1l1.55,0.76l0.78,0.8l0.21,1.37l0.79,0.85l0.48,0.08l0.53,-0.28l0.19,-0.51l-0.46,-2.11l6.53,-1.69l0.97,-0.77l-0.22,-0.7l-2.49,-0.22l-0.59,-1.22l1.35,-2.63l-0.14,-0.32l-0.63,-0.15l-1.62,1.45l-0.74,1.82l0.08,1.93l-1.16,0.26l-3.03,0.11l-3.76,-0.93l-0.35,-0.26l0.16,-0.79l-0.54,-0.64l-0.52,0.09l-0.77,0.93l-0.68,1.78l-1.2,0.35l-4.09,-0.68l-5.91,0.41l-2.68,0.93l-1.55,-0.11l-2.82,-1.56l-1.03,-1.16l-0.28,-3.28l3.31,-0.44l1.09,-0.62l-0.04,-0.72l-2.18,-1.12l-0.87,-1.51l-1.48,-0.65l-0.81,-1.18l-0.22,-1.9l0.22,-1.2l0.47,-0.29l1.73,0.29l4.65,-0.24l7.55,2.28l6.23,-0.44l3.58,-1.3l0.06,-0.73l-0.93,-0.4l-3.85,0.74l-3.51,-0.03l-8.9,-1.94l-2.82,0.2l-1.23,-0.38l-0.7,-1.19l0.55,-2.45l0.89,-0.41l0.79,0.65l1.21,-0.11l1.76,-1.91l0.61,-1.39l2.32,-1.33l2.5,-0.75l0.72,0.14l1.38,1.17l2.02,-0.0l5.03,-1.15l1.71,-1.38l0.08,-0.46l-0.41,-0.22l-7.2,1.24l-0.09,-0.31l1.55,-1.5l0.43,-1.2l0.86,-0.45l5.24,-0.57l2.87,0.23l4.31,0.51l2.77,1.23l1.27,-0.08l1.2,-0.35l0.66,-0.54l-0.17,-0.69l-1.96,-0.46l0.08,-0.64l3.4,-0.97l3.9,-0.23l0.29,-0.65l-1.05,-0.98l-8.54,1.25l-2.16,-0.82l-1.92,-0.02l-1.28,0.51l-3.32,0.42l0.48,-1.11l2.15,-2.94l0.74,-0.46l5.1,-1.38l2.53,-1.63l3.76,-0.26l3.04,0.43l1.55,2.02l5.55,3.15l0.45,-0.02l-0.16,-1.34l-3.67,-3.44l-1.39,-0.85l-0.91,-1.47l0.3,-1.32l0.99,-0.9l4.06,-0.56l0.95,-0.71l0.22,-1.35l-0.74,-1.02l-2.79,-0.46l-0.24,-0.78l0.35,-0.54l2.3,-1.35l3.43,-0.91l3.72,1.05l-0.85,1.42l0.03,1.1l0.36,0.34l0.97,0.09l2.5,-2.4l2.53,-0.31l2.2,-0.78l1.72,2.01l1.34,0.96l0.53,1.63l0.88,0.37l1.1,-0.94l3.3,-0.73l3.35,0.47l2.32,-0.3l0.39,-0.56l-1.06,-1.99l0.54,-1.1l2.88,-1.45l2.34,-0.5l3.37,-1.82l0.2,-0.52l-0.89,-1.59l-1.46,-0.24l3.35,-1.94l0.12,-0.61l-0.57,-0.59l-1.9,-0.53l-3.2,1.34l-2.23,1.48l0.02,0.68l1.46,1.29l-1.23,1.3l-7.99,4.24l-3.74,1.22l-1.44,-0.16l-2.06,-3.63l-0.37,-0.22l-2.26,0.2l0.56,-1.66l1.17,-1.4l2.19,-1.22l1.06,-1.46l0.91,-2.09l3.05,-2.1l4.41,-5.13l3.56,-1.63l1.42,-1.85l2.14,-0.82l1.74,-1.35l1.46,-0.17l2.61,-1.28l1.59,-1.61l-0.25,-0.68l-0.97,-0.1l-3.2,1.24l0.63,-2.53l1.77,-1.44l8.82,-4.35l2.09,1.98l2.74,-0.3l3.33,-2.63l2.45,-2.81l0.03,-0.49l-0.47,-0.15l-1.3,0.48l-4.18,2.7l-1.12,0.22l-0.44,-0.12l-0.57,-1.09l-0.96,-0.34l-0.9,0.17l-0.6,-0.51l-0.14,-1.58l1.98,-4.43l4.76,-5.24l0.87,-2.16l1.51,-0.99l2.11,0.24l0.9,-0.37l0.18,-0.55l-0.77,-1.41l-2.49,-1.33l7.75,-1.75l3.85,0.06l1.35,-0.96l2.16,-0.63l1.61,-1.13l-0.02,-0.67l-1.14,-0.54l-6.37,1.52l-4.78,0.46l-0.62,-4.09l0.41,-2.05l0.84,0.04l0.41,-0.35l0.25,-2.21l1.17,-1.2l1.9,-0.35l2.23,-1.72l2.18,0.26l2.33,-0.27l0.24,-0.68l-0.58,-0.57l-2.9,-0.8l-0.45,-0.8l1.71,-0.96l1.18,-0.24l2.91,-3.35l1.39,0.1l1.69,-1.01l1.64,0.34l4.23,-1.18l8.65,-0.18l0.38,-0.3l0.26,-1.02l-0.34,-0.5l-8.31,-0.5l-4.78,0.14l4.07,-4.74l2.62,-1.62l1.91,0.39l2.4,1.68l1.53,0.19l0.6,0.42l1.45,2.41l0.56,0.07l0.45,-0.44l-0.23,-2.02l1.45,-1.66l0.01,-0.52l-0.82,-0.63l-2.24,0.61l-1.61,-0.6l-1.3,-1.22l-0.31,-0.94l1.52,-1.58l0.08,-0.57l-0.57,-0.72l-0.5,-0.1l-3.51,1.89l-2.88,0.28l0.42,-1.34l-0.25,-1.37l3.16,-3.18l0.98,-0.33l1.73,0.25l1.89,0.97l3.07,-0.68l0.26,-0.47l-0.56,-1.23l-3.25,-0.35l-0.56,-0.49l0.13,-0.32l2.23,-0.78l2.23,-1.39l2.56,-0.4l2.05,-1.03l0.41,0.39l0.79,4.05l1.9,3.28l0.98,0.31l0.45,-0.5l-0.68,-2.59l1.33,-1.19l0.41,-0.88l-0.28,-0.53l-0.85,-0.21l-0.68,-0.84l-1.07,-2.98l0.28,-0.58l2.33,-1.59l2.94,-0.37l3.25,1.17l1.3,0.04l8.52,-1.9l0.25,-0.5l-0.23,-0.56l-2.0,-0.82l-3.16,0.52l-8.21,-0.17l-0.57,-0.4l-0.1,-0.67l0.77,-1.23l0.88,-0.71l3.04,-1.36l3.48,-0.26l3.52,-2.5l1.5,-2.11l0.74,-2.81l2.0,-2.19l5.55,-1.56l0.2,-0.9l-0.53,-1.14l0.04,-2.02l1.39,-2.44l0.86,-0.79l1.14,0.66l1.52,1.87l2.21,1.03l3.04,0.21l1.02,-0.57l-0.05,-0.7l-2.21,-1.01l-1.53,-1.21l-0.1,-0.98l0.53,-0.47l2.73,-0.08l1.64,-0.97l0.77,-2.5l2.01,-1.97l6.3,-1.3l0.22,0.25l-0.34,3.86l-0.77,2.7l0.02,1.91l0.29,0.38l0.45,-0.16l1.34,-2.01l1.72,-5.22l1.26,-2.39l1.36,-1.31l3.1,-1.38l0.59,1.45l-0.72,4.51l0.06,1.44l-0.77,1.82l-3.14,4.28l0.08,0.89l0.5,0.28l2.12,-1.02l3.78,-3.96l3.22,0.49l0.46,-0.35l-0.06,-0.66l-2.39,-2.32l-0.35,-1.26l0.17,-3.66l0.84,-1.24l4.41,-0.04l0.96,0.67l1.78,-0.05l0.35,-0.24l1.13,-2.54l2.03,-0.2l2.09,1.77l2.52,1.2l2.02,1.73l0.51,0.0l0.58,-0.48l0.13,-0.41l-1.11,-4.11l-1.29,-1.65l-2.78,-0.9l-2.72,-1.79l-0.53,-0.8l2.15,-0.51l3.46,0.62l2.73,-1.45l0.94,0.35l2.03,-0.73l1.6,1.01l1.09,-0.57l0.42,-1.26l3.24,-0.82l2.1,0.78l1.07,0.76l1.38,4.8l1.87,1.95l1.31,0.98l1.7,0.08l0.63,-0.88l-0.06,-0.53l-1.14,-0.99l-0.26,-0.79l0.54,-2.31l0.62,-0.89l3.76,-3.66l3.08,-1.86l2.11,-0.31l3.32,-4.31l0.84,-0.7l0.78,-0.16l0.31,-0.47l-0.22,-1.07l-1.84,-0.88l-0.04,-0.83l2.28,-1.52l2.84,-2.62l1.15,-0.15l0.87,0.7l2.81,1.2l3.03,2.11l1.09,-0.1l1.51,-1.52l1.59,0.24l2.48,1.05l0.09,0.44l-1.4,0.88l-5.34,5.55l-0.92,1.62l-0.88,4.07l-2.09,2.72l-0.04,2.12l1.23,0.95l2.43,-0.75l2.81,-2.41l0.8,-2.66l6.95,-6.9l3.3,-3.87l3.66,-3.14l1.68,-0.53l0.78,1.68l-0.73,2.55l-1.53,1.7l0.07,0.6l0.98,0.67l-0.8,4.29l0.01,1.07l0.5,0.38l5.56,-2.51l2.31,-4.33l0.49,-1.52l1.51,-1.3l3.07,-0.01l0.39,-0.32l-0.08,-1.02l-3.77,-1.98l-0.27,-0.54l4.51,-3.24l1.64,0.23l1.19,0.54l4.36,0.4l3.1,1.53l-0.11,2.24l-0.67,0.96l-0.67,0.6l-4.3,1.96l-0.87,1.1ZM756.8,33.48l-2.19,0.6l-0.05,-0.09l1.06,-2.35l0.65,0.05l1.44,1.11l-0.91,0.68ZM694.5,3.24l3.24,-1.93l3.48,0.91l1.18,-0.0l1.68,1.66l0.73,0.04l-0.05,0.28l-1.54,0.43l-3.26,0.51l-2.15,-0.15l-1.48,-1.46l-1.85,-0.29ZM676.11,14.77l-2.24,0.85l-1.26,-0.71l-0.51,-0.7l-0.08,-1.73l0.28,-0.94l0.87,-0.43l3.59,2.07l-0.64,1.59ZM670.58,15.65l0.31,1.83l-1.11,1.19l-2.87,1.76l-0.12,0.61l-0.64,0.29l-1.35,0.3l-0.41,-0.17l0.09,-1.24l-0.29,-0.67l-0.54,-0.17l-0.94,0.5l-0.82,-0.53l0.24,-1.01l0.99,-0.93l1.66,-0.64l1.41,0.18l3.74,-2.54l0.64,1.25ZM668.13,9.06l-0.57,1.15l-4.23,3.85l-1.79,0.48l-1.29,0.76l-2.24,-0.41l-1.54,1.06l-2.45,0.03l-2.48,-1.12l-1.76,-1.58l2.44,-0.24l1.51,0.21l1.19,-1.09l1.94,0.11l3.8,-0.75l1.7,0.33l3.15,-2.48l1.07,0.02l1.3,-0.61l0.25,0.27ZM632.13,26.52l-1.42,0.6l-1.43,-0.54l-0.88,0.07l-0.57,-0.73l0.06,-0.58l0.93,-1.0l2.01,-0.61l1.59,0.25l-0.3,2.55ZM618.46,23.91l0.85,0.4l1.16,0.04l1.08,1.22l1.16,0.66l-0.83,0.46l-2.68,-0.01l-0.82,-1.9l-1.32,-1.37l-0.11,-0.62l0.52,-0.08l0.99,1.21ZM611.42,27.32l1.31,1.58l1.41,0.0l0.98,-0.71l1.05,0.5l-0.13,0.73l-2.0,1.5l-1.38,2.01l-1.62,0.43l-1.14,-0.16l-1.71,1.26l-2.75,2.91l-0.3,1.36l-6.62,1.0l-1.74,-0.48l-0.67,-0.77l1.82,-0.35l0.35,-0.37l0.05,-0.86l1.11,-0.95l0.41,-1.1l0.5,-0.21l1.67,0.18l1.11,-0.91l0.51,0.57l0.68,-0.15l0.32,-1.04l-0.18,-1.5l1.77,-1.6l0.83,-1.23l0.97,-0.66l0.97,0.11l0.43,-0.29l0.32,-1.16l-0.2,-1.95l0.85,-1.63l0.54,-0.04l0.39,1.32l0.08,2.68ZM588.18,39.31l1.24,1.04l2.37,-0.47l1.73,1.23l1.09,0.15l0.79,2.15l-0.6,0.87l-1.19,0.73l-0.29,1.48l0.32,1.44l-4.59,0.78l-0.96,-0.77l-0.48,-0.01l-2.23,1.59l-2.19,2.45l-0.49,0.13l-0.3,-0.65l-1.59,-0.54l-1.71,-0.05l2.13,-1.1l0.35,-1.26l-0.3,-2.33l0.35,-1.67l0.84,-0.67l3.6,0.4l0.4,-0.21l0.46,-0.84l-0.29,-0.91l-1.77,-0.93l1.26,-0.6l1.26,-0.07l0.78,-1.35ZM564.03,63.2l0.26,0.57l0.6,-0.03l1.78,-2.18l1.94,-0.67l1.19,-1.96l-0.08,-1.16l0.3,-0.74l1.54,-0.58l0.51,-0.13l1.1,0.7l1.51,2.7l-0.32,1.68l-2.27,1.42l-2.05,0.76l-1.97,1.76l-0.98,1.4l-0.62,0.23l-0.99,-0.45l-1.0,-0.0l-1.33,1.3l-3.11,0.95l-0.9,-0.2l-0.04,-0.94l-0.45,-0.38l-0.78,0.1l-1.44,1.55l-1.76,0.57l-1.75,-0.49l-3.97,2.48l-3.63,0.45l-0.87,-0.2l-0.0,-1.04l4.21,-3.17l6.82,-0.95l4.52,-4.21l1.14,-4.61l0.98,-1.56l-0.46,-1.31l-1.13,-0.33l-0.05,-0.99l0.54,-1.38l3.49,-3.01l2.0,-2.51l0.83,-0.49l0.9,0.0l0.78,0.48l-0.15,1.02l-1.58,2.35l-2.55,2.45l0.3,1.51l0.99,1.32l0.28,3.88l-1.79,2.64l-0.46,1.42ZM556.54,54.46l2.5,3.67l-0.58,2.34l-1.51,1.17l-4.24,0.12l-0.93,-0.51l-0.38,-0.83l-0.68,-0.21l-2.02,0.91l-1.06,0.11l-1.33,-0.6l-0.27,-0.72l2.17,-2.25l1.51,0.08l1.57,0.56l0.44,-0.22l0.64,-1.34l0.13,-1.3l1.99,0.41l0.48,-0.39l0.0,-2.2l0.64,-0.04l0.9,1.25ZM538.67,70.65l0.96,0.42l1.95,-0.11l-0.84,0.76l-1.83,0.42l-1.5,1.47l-2.63,0.27l-1.11,0.86l-0.71,-0.54l-0.6,0.13l-0.45,1.35l-1.52,0.4l-0.29,-1.54l1.17,-1.47l1.83,-0.2l1.4,-1.9l1.86,-0.52l2.31,0.17ZM526.33,79.08l-1.04,0.64l1.42,-3.36l1.2,-1.04l0.24,0.17l-0.26,1.89l-1.56,1.71ZM520.21,124.0l-0.58,0.03l0.0,-0.36l1.34,-1.14l2.38,-0.19l-3.14,1.65ZM519.02,120.83l-0.67,0.08l1.06,-1.26l0.6,-1.36l0.56,-0.36l0.86,0.5l0.02,0.92l-0.5,0.9l-1.93,0.59ZM512.64,130.29l-0.68,0.52l-1.32,-0.35l0.37,-0.91l0.78,-0.38l1.19,0.26l-0.35,0.85ZM502.61,147.16l-0.44,0.38l-1.54,-0.44l-3.0,0.37l-0.68,-0.32l0.6,-0.7l2.65,-1.15l1.27,0.05l1.27,1.24l-0.12,0.58ZM465.49,173.05l-1.51,-0.0l4.89,-1.52l0.48,-0.61l0.39,0.44l-0.14,0.94l-4.11,0.75ZM460.35,180.13l-2.56,-0.29l-0.84,-0.71l3.06,-1.01l0.58,0.58l0.05,1.08l-0.3,0.36ZM418.13,241.28l1.08,2.55l0.03,1.89l-0.6,-0.09l-0.57,-1.19l-0.17,-2.75l0.22,-0.42ZM417.53,227.52l-1.35,0.07l0.25,-1.42l0.69,-0.25l0.54,0.73l-0.13,0.88ZM229.04,8.0l-1.2,-0.01l1.39,-1.16l5.98,-2.82l2.44,-2.71l4.12,-0.83l0.21,1.05l-0.27,1.57l-3.83,1.4l-4.49,1.0l-4.36,2.51Z\",\n            name: \"Norway\"\n          },\n          LI: {\n            path: \"M479.66,489.8l0.02,-1.42l0.15,-0.43l0.74,1.46l-0.19,0.45l-0.72,-0.06Z\",\n            name: \"Liechtenstein\"\n          },\n          LV: {\n            path: \"M693.81,289.47l3.55,1.99l1.99,0.57l1.08,0.9l2.53,0.56l0.49,0.96l3.62,3.6l2.41,1.22l1.17,0.26l5.65,-1.51l2.97,1.36l4.19,0.48l0.5,1.6l3.78,2.51l0.01,1.64l-0.9,1.1l-0.62,1.56l-0.11,1.55l-0.95,2.51l0.51,0.58l2.08,-0.43l0.37,0.17l0.31,0.4l0.24,1.72l1.27,1.73l0.34,1.03l1.18,0.95l1.31,5.24l-0.59,1.84l-1.52,0.28l-1.91,1.15l-3.42,3.12l-0.81,2.06l-7.03,-0.58l-1.55,0.46l-1.71,1.91l-2.96,0.71l-2.36,-0.64l-1.52,-0.83l-2.67,-2.8l-5.8,-4.02l-1.15,-0.52l-6.83,-1.31l-1.59,-2.24l-0.54,-1.35l-1.1,-0.49l-2.14,0.57l-3.02,1.85l-4.67,0.37l-4.2,-1.24l-8.35,-0.73l-1.97,0.8l-1.07,-1.05l-1.26,-0.31l-1.54,0.36l-2.45,0.04l-6.91,-0.6l-5.95,1.81l-7.73,4.37l-0.35,-2.96l0.22,-7.21l0.51,-3.44l2.41,-2.01l1.33,-1.71l0.8,-2.32l0.72,-3.67l3.52,-4.67l2.8,-0.51l7.98,-2.39l1.23,2.38l6.53,5.21l2.21,4.68l4.89,2.3l4.09,-0.69l4.9,-3.24l1.55,-1.77l0.29,-1.57l-0.55,-6.25l-0.82,-2.71l0.2,-1.21l10.32,-3.79l1.64,1.26l0.73,-0.15l0.24,-0.81Z\",\n            name: \"Latvia\"\n          },\n          LT: {\n            path: \"M639.02,342.33l-0.39,-1.13l0.47,-2.2l-2.37,-6.79l-0.19,-4.61l7.95,-4.51l5.74,-1.75l6.79,0.61l2.53,-0.04l1.39,-0.36l1.04,0.26l1.27,1.12l1.22,-0.19l0.91,-0.62l8.2,0.71l4.28,1.25l4.86,-0.4l3.12,-1.88l1.75,-0.52l0.54,0.16l0.53,1.3l1.95,2.56l6.96,1.34l0.97,0.45l5.67,3.93l2.72,2.84l1.7,0.92l2.31,0.66l-0.34,1.84l-1.48,3.87l0.12,0.41l0.75,0.57l3.29,0.4l-1.48,1.08l-0.6,1.26l-4.13,-0.12l-0.74,0.49l-0.95,2.16l-0.97,0.67l-1.73,0.29l-1.62,0.68l-1.11,1.7l-0.79,2.17l0.04,2.82l-1.39,1.93l-1.03,2.49l0.51,0.92l1.76,0.29l0.48,0.48l0.08,1.37l-2.03,0.25l-0.64,-0.28l0.32,-0.85l-0.29,-0.93l-0.72,-0.7l-0.47,-0.03l-1.13,0.71l-1.24,0.04l-1.41,0.69l-1.0,1.14l-0.71,0.33l-2.58,-0.13l-0.73,0.71l-0.6,2.36l-1.96,-0.05l-3.92,1.55l-1.77,-1.04l-4.31,0.27l-1.89,0.43l-3.01,-0.41l0.02,-2.29l-0.39,-1.31l-1.24,-1.24l-2.8,-1.58l-1.61,-0.43l-0.45,-0.8l-1.72,-0.82l-1.06,-0.13l-0.74,0.5l-0.85,-1.99l0.06,-1.19l1.96,-5.08l-0.06,-0.83l-1.32,-1.32l-1.45,-0.78l-1.11,-1.78l-6.66,-0.08l-2.63,-0.68l-4.3,-1.77l-2.12,-1.44l-2.03,0.1Z\",\n            name: \"Lithuania\"\n          },\n          LU: {\n            path: \"M433.15,437.03l-0.02,1.54l0.46,1.19l0.9,1.05l1.71,1.44l2.06,0.7l-0.04,1.05l-1.43,1.94l-0.47,2.14l-1.81,-0.59l-2.33,0.93l-2.45,-1.16l1.0,-2.17l-2.04,-2.82l0.23,-1.64l1.61,-2.82l1.29,-1.3l1.16,0.19l0.17,0.33Z\",\n            name: \"Luxembourg\"\n          },\n          FO: {\n            path: \"M263.24,203.53l-0.39,0.92l-0.69,-0.21l-0.02,-1.73l1.1,1.03ZM260.24,213.24l-2.12,-1.39l-0.34,-0.59l2.22,0.79l0.37,0.54l-0.11,0.65ZM259.07,209.25l-3.26,-2.64l-1.87,-3.49l2.24,-0.5l4.06,1.71l-0.25,2.13l-1.84,-0.94l-0.67,0.61l-0.01,0.73l1.6,2.38ZM257.22,217.52l1.57,0.48l0.55,2.18l-1.8,-1.85l-0.31,-0.8ZM252.95,206.27l1.28,0.96l-1.0,0.36l-0.92,-0.12l-1.48,-0.53l-0.27,-0.64l1.89,-0.23l0.51,0.19Z\",\n            name: \"Faeroe Is.\"\n          },\n          PL: {\n            path: \"M543.65,368.02l2.24,0.2l4.48,-1.73l7.75,-2.26l8.26,-2.12l3.9,-0.68l5.16,-4.95l4.31,-0.78l5.16,-2.51l7.82,-1.63l3.25,-0.36l3.12,-0.04l2.21,1.0l-0.57,-0.04l-0.39,0.57l2.05,4.35l1.16,1.6l2.4,1.27l2.0,0.42l5.97,-0.69l2.69,-1.31l8.11,0.66l26.59,1.14l7.65,0.18l1.4,-0.84l1.75,0.49l1.01,1.2l3.12,1.15l2.17,1.68l0.33,1.05l-0.04,2.27l1.64,6.67l2.6,6.11l1.31,4.41l0.39,3.77l-0.18,1.9l-0.61,0.58l-4.89,2.03l-1.01,0.69l-2.89,3.33l-0.47,1.1l0.51,0.99l3.51,1.58l1.85,1.18l0.6,0.91l-0.02,1.06l-0.57,1.63l0.2,1.32l-1.03,1.7l-0.08,2.01l1.61,3.05l0.13,2.59l2.67,3.26l1.68,3.35l1.47,1.21l-1.11,0.52l-0.48,0.6l1.52,3.27l-0.05,1.28l-1.46,1.98l-3.57,0.67l-4.09,3.59l-5.08,4.9l-5.28,6.4l1.06,4.51l-0.36,2.22l1.95,1.75l-0.24,0.41l-2.87,-0.93l-1.5,-0.09l-5.93,-2.17l-0.67,-1.45l-1.17,-0.92l-3.61,-1.28l-3.95,-0.3l-3.67,0.18l-1.34,1.47l-1.49,0.35l-1.84,-0.96l-1.53,-0.38l-3.52,0.1l-3.01,1.33l-0.84,0.92l-0.53,1.22l-1.56,-0.57l-1.82,0.42l0.34,-0.9l-0.2,-1.86l-0.8,-0.59l-1.18,-0.23l-2.68,-3.4l-0.49,0.01l-2.67,1.6l-1.25,1.8l-1.91,0.05l-0.36,-1.5l-1.45,-0.45l-0.45,-1.77l-2.8,-2.47l-0.57,-2.25l-0.76,-0.46l-2.28,-0.49l-0.66,0.22l-3.69,-2.09l-0.89,0.68l-1.68,0.28l-1.96,-2.02l-0.78,-0.32l-0.18,-0.17l1.22,-0.48l0.56,-0.84l-0.17,-1.46l-0.42,-0.42l-2.29,0.71l-1.7,0.16l-3.57,-2.18l-3.74,-0.88l-0.39,0.17l-0.17,0.62l1.62,2.71l-1.84,0.82l-1.61,1.27l-0.79,0.19l-3.93,-4.52l-1.56,-0.77l0.71,-0.74l1.08,-0.38l0.91,-1.37l-0.16,-0.72l-1.84,-1.31l-3.84,0.66l-0.82,-0.97l-2.85,-1.21l-5.03,-1.25l-0.92,-1.11l-0.5,-1.57l-3.64,-1.01l-0.61,0.61l0.01,1.78l-1.35,0.36l1.83,-3.66l0.72,-3.12l-1.56,-3.9l-2.48,-1.15l0.28,-1.67l-1.8,-3.51l0.94,-1.3l1.05,-3.2l-0.68,-0.86l0.02,-1.7l-0.35,-0.77l-0.98,-0.65l-0.68,-1.21l0.8,-3.27l-1.53,-2.24l-3.5,-2.48l-1.54,-1.59l0.1,-0.7l0.63,-0.77l1.41,-0.89l1.02,-1.45l0.65,-1.93l0.03,-1.7l-1.56,-5.02l-0.4,-2.5l3.71,1.43l0.56,-0.46l-0.4,-1.21l0.07,-2.13l-0.31,-0.36l-4.44,-0.86l-0.11,-0.47ZM603.71,353.39l0.66,0.35l-0.21,-0.08l-0.46,-0.27Z\",\n            name: \"Poland\"\n          },\n          XK: {\n            path: \"M623.28,565.63l0.23,-1.37l-0.65,-1.57l1.63,0.09l0.64,-0.79l3.48,-1.07l0.27,-0.76l-0.2,-0.76l1.93,-1.27l0.5,-0.84l0.09,-0.77l-0.53,-1.12l1.95,-0.93l0.57,1.38l2.88,1.35l2.09,2.07l0.37,0.86l2.01,1.19l-0.14,1.07l0.28,0.43l4.62,1.2l-1.88,4.12l-1.1,0.72l-0.15,0.66l0.36,0.88l-1.97,0.42l-0.92,0.69l-0.55,1.2l-1.4,-1.12l-1.41,-0.04l-3.96,1.67l-0.59,1.07l-0.11,1.91l-0.39,0.51l-1.14,-0.15l0.02,-2.13l-1.26,-3.53l-1.98,-1.52l-1.41,-0.49l-2.18,-3.23Z\",\n            name: \"Kosovo\"\n          },\n          CH: {\n            path: \"M474.98,480.14l0.93,1.21l2.74,1.45l1.43,0.09l0.68,0.53l-1.86,4.76l-0.08,1.49l0.52,0.93l1.74,0.08l2.81,0.78l0.54,1.22l3.54,1.51l1.02,-0.27l2.12,-1.93l0.51,0.2l0.41,1.32l-0.75,3.44l0.56,0.97l-0.02,0.65l-1.65,-0.23l-1.29,-0.99l-1.55,0.38l-0.6,1.17l-0.22,1.86l0.55,0.63l0.74,2.52l-0.69,0.02l-1.59,-2.16l-0.91,-0.09l-3.3,1.21l-1.21,-0.13l-0.52,-0.58l-0.68,-2.14l-0.42,-0.32l-1.84,-0.17l-0.8,0.69l-0.12,3.09l-3.34,4.57l-0.07,0.81l0.58,1.67l-0.72,0.36l-0.75,-1.36l-1.21,-1.09l0.49,-0.82l-0.08,-0.63l-2.59,-0.79l-2.33,-2.15l-0.24,-3.0l-0.6,-0.57l-0.93,0.09l-1.91,1.79l-1.9,1.26l-0.23,0.68l0.55,1.27l-1.71,2.33l-2.51,1.44l-3.3,-0.92l-3.01,1.12l-2.56,0.51l-0.83,-0.33l-1.26,-1.8l-2.35,-2.36l0.54,-1.67l-0.64,-1.73l0.1,-0.55l-0.58,-0.62l-2.44,-0.37l-2.11,0.11l-1.59,0.66l-1.5,1.42l0.49,1.3l-0.73,0.74l-1.4,0.72l-1.06,0.03l-0.01,-0.52l1.69,-1.25l0.38,-1.74l-0.82,-1.03l1.23,-2.71l3.31,-2.41l0.66,-3.3l2.81,-1.32l3.99,-4.25l0.72,-1.16l-0.34,-0.8l-0.94,-0.37l0.69,-0.76l1.01,-0.54l0.9,-0.01l0.97,0.98l2.09,-0.03l1.04,-0.38l1.17,-1.66l1.37,-0.65l1.08,0.36l3.11,0.1l2.31,-0.21l1.45,-0.53l3.48,0.18l1.83,-0.89l0.01,-0.53l-0.38,-0.39l-1.8,-0.11l0.3,-0.51l1.54,-0.64l2.09,1.29l1.19,-0.13l0.95,0.88l3.86,-0.25Z\",\n            name: \"Switzerland\"\n          },\n          AD: {\n            path: \"M373.44,566.17l-1.46,0.73l-1.49,0.29l-0.26,-1.45l0.13,-0.56l0.71,-0.55l2.52,0.57l0.23,0.31l-0.38,0.67Z\",\n            name: \"Andorra\"\n          },\n          EE: {\n            path: \"M681.02,292.17l1.82,-4.13l0.34,-3.01l0.83,-0.92l-0.26,-1.25l-2.11,-0.9l-0.93,0.07l-1.54,1.86l-1.37,0.39l-1.34,-0.75l-3.16,-1.02l-0.72,-1.23l-0.33,-1.62l-1.67,-1.33l-0.63,-1.43l0.21,-0.83l1.41,-0.67l0.61,-0.79l-0.35,-0.63l-2.02,0.06l-0.86,-2.23l1.02,-1.49l-0.57,-0.94l0.62,-1.45l-0.25,-1.46l3.54,-1.43l4.03,-0.33l0.36,-0.5l-0.29,-1.14l1.37,-0.12l2.65,-1.86l2.78,0.31l3.93,-1.31l7.61,0.02l1.28,-0.85l-0.01,-1.46l3.45,0.02l9.0,1.62l2.2,0.01l2.99,1.6l1.75,0.46l4.98,0.02l7.53,0.73l1.76,-1.2l1.2,1.24l0.06,0.35l-0.81,0.25l-0.7,0.83l-0.89,0.08l-0.75,0.46l-2.01,4.63l-1.0,1.16l-1.86,-0.45l-3.15,0.26l-2.71,0.88l-1.96,1.68l-0.01,1.85l2.53,3.07l1.06,3.8l1.27,1.16l1.32,1.87l0.64,1.7l2.36,4.15l0.34,1.32l1.41,1.24l-3.15,1.13l-0.66,1.42l-1.29,1.24l-0.65,2.49l-1.76,-0.23l-3.1,-1.39l-1.03,0.03l-4.85,1.48l-0.81,-0.22l-2.13,-1.06l-3.53,-3.51l-0.79,-1.2l-2.57,-0.57l-0.91,-0.82l-2.12,-0.63l-3.1,-1.88l-0.9,-0.23l-0.43,0.19l-0.22,0.83l-1.92,-1.29l-2.69,1.15l-6.13,1.9l-1.25,0.77ZM666.97,278.74l-0.76,0.14l-2.16,-1.14l0.85,-0.76l1.89,0.49l0.18,1.27ZM647.68,284.33l1.21,-1.0l0.33,-0.88l-1.4,-2.14l1.14,-0.04l1.0,0.59l1.87,-0.79l0.73,0.23l0.47,-0.18l0.75,-1.3l2.77,-0.86l1.92,0.59l1.76,-0.47l1.78,0.29l4.32,2.36l-2.29,0.37l-1.11,1.14l-0.83,0.23l-3.35,2.53l-2.91,-0.1l-1.98,0.46l-1.39,1.11l-0.69,2.3l-0.93,1.54l-0.87,0.51l-0.69,0.06l-0.04,-0.64l2.71,-3.11l-0.23,-0.59l-1.05,-0.32l-2.99,-1.89ZM661.53,273.2l-1.11,0.89l-0.64,-0.61l-0.66,0.02l-1.35,2.09l-1.33,0.31l-0.56,-0.26l0.03,-0.74l-1.12,-2.39l-1.41,-0.64l-2.39,-0.33l4.37,-0.49l1.83,-2.15l0.62,-0.09l0.4,0.14l0.6,1.28l2.34,0.45l0.84,1.22l0.26,1.21l-0.72,0.09Z\",\n            name: \"Estonia\"\n          },\n          IS: {\n            path: \"M31.07,119.93l0.78,-1.15l1.61,-0.28l4.07,2.06l0.46,0.86l-0.12,0.97l0.59,0.58l1.15,-0.26l1.6,0.23l1.28,-1.18l0.53,0.18l0.52,0.85l-0.08,2.47l0.67,0.18l0.77,-0.74l1.34,-0.06l0.57,-0.82l-0.3,-3.42l-5.08,-2.02l-1.59,-1.09l2.14,-0.53l3.31,0.02l0.54,-0.25l0.04,-0.67l-0.81,-0.56l-1.45,-0.29l-0.78,-0.84l-1.8,0.29l-3.49,-0.24l2.65,-1.57l2.25,0.17l2.17,-0.28l1.66,0.32l3.37,2.7l2.76,1.16l4.63,3.74l2.86,1.41l-1.29,0.67l-0.13,0.64l1.85,0.74l0.89,0.81l-0.88,3.03l-0.82,0.75l-2.59,-0.54l-0.41,0.17l0.0,0.45l0.8,1.08l1.88,0.98l0.21,1.15l1.01,-0.03l-0.8,1.9l0.1,0.7l1.67,0.26l0.95,0.72l1.35,3.36l0.72,-0.03l0.75,-2.67l0.28,-0.71l0.75,-0.57l0.78,-2.62l1.71,-1.48l1.4,-0.51l1.72,1.83l1.05,0.29l0.7,-0.3l1.38,-3.46l0.17,-2.52l-0.4,-2.63l0.22,-1.76l0.73,-0.96l0.91,-0.28l1.25,0.39l0.94,0.63l2.01,2.62l3.17,2.99l0.89,0.55l1.58,0.24l0.92,-0.75l-0.16,-4.45l0.82,-1.73l2.45,-0.49l2.78,-1.42l1.76,-0.48l1.69,0.98l3.36,3.79l2.41,1.8l1.51,3.25l0.57,0.25l0.7,-0.5l0.28,-0.64l0.06,-1.56l-2.91,-5.85l0.12,-0.95l4.9,0.32l1.06,0.59l2.5,2.56l1.27,0.86l2.2,-1.44l3.52,-3.91l0.88,0.12l1.88,1.21l1.36,0.43l1.36,-0.19l3.5,-1.42l1.05,-2.16l-1.46,-3.81l0.41,-0.5l3.14,-0.9l2.77,-0.07l4.05,3.55l0.28,1.79l2.4,1.38l1.69,0.07l2.54,-0.77l3.73,-2.29l1.42,-0.45l1.92,0.1l-1.26,0.29l-1.68,1.06l-2.97,3.92l0.2,0.85l1.53,0.97l1.58,0.53l1.58,-0.44l0.86,0.67l0.33,1.12l-0.24,1.28l-1.95,2.46l0.08,0.82l1.38,0.42l4.66,-0.73l0.73,2.3l-1.88,1.76l-0.05,0.52l0.51,0.13l2.27,-1.14l1.71,-0.31l3.01,0.56l1.14,0.59l0.7,1.09l0.47,0.16l1.26,-0.35l0.48,0.46l0.02,0.45l-0.66,1.81l-1.5,0.63l-0.34,0.8l1.16,1.48l1.0,0.19l-0.24,0.7l-1.16,0.7l0.08,0.68l2.27,1.05l0.19,0.64l-0.48,1.12l-0.53,0.32l-1.6,0.06l-1.19,0.49l-0.2,0.53l0.29,1.51l-0.28,1.02l-1.26,1.62l-1.18,0.86l-1.1,0.53l-2.03,-0.19l-1.14,-0.44l-0.54,0.41l0.11,1.26l-1.04,0.78l-0.14,0.44l0.6,1.18l-0.67,1.57l-0.9,0.98l-3.26,1.43l-1.83,1.28l-1.16,0.47l-3.2,-0.01l-3.29,0.86l-4.61,1.78l-3.14,1.45l-5.52,4.21l-2.25,1.06l-3.96,0.53l-11.96,2.76l-1.63,1.96l-0.06,0.36l0.49,0.61l-0.73,0.94l-1.63,0.77l-2.27,-0.71l-0.55,0.49l0.36,0.92l-5.26,1.22l-8.0,-0.75l-7.17,-2.03l-5.63,-0.41l-3.77,-2.65l0.22,-0.77l1.52,-0.44l-0.0,-0.49l-0.69,-0.87l-0.47,-0.12l-2.39,1.47l-0.55,-0.03l-0.77,-0.45l-0.38,-0.76l-1.96,-0.22l-3.31,-1.72l0.52,-0.39l0.0,-0.65l-0.33,-0.19l-2.03,0.09l-2.76,1.66l-16.08,0.58l-1.0,-3.65l0.36,-0.95l1.51,1.48l0.97,0.46l6.2,-1.75l2.75,-2.48l1.93,-3.05l1.4,-0.87l1.88,-0.27l0.34,-0.36l-0.28,-0.41l-1.27,-0.41l-1.34,-0.02l-4.72,1.83l1.48,-0.95l0.18,-0.44l-1.34,-0.54l-0.03,-0.6l0.62,-1.17l3.21,-1.73l1.31,-0.36l0.35,-0.36l-0.06,-0.61l-1.56,-0.48l-3.34,1.84l-2.33,0.61l-1.77,-0.77l-0.77,-0.91l1.13,-1.61l-0.17,-0.76l-3.1,-1.61l-3.64,0.07l-8.59,-0.77l-6.31,1.85l-1.28,-0.73l-1.11,-1.62l0.13,-0.38l1.65,-0.52l2.39,0.23l5.12,-0.99l1.5,-0.94l1.31,0.76l2.88,-0.83l1.42,-0.89l2.48,0.42l1.48,-0.31l8.37,-0.29l1.38,-1.45l0.5,-1.5l-0.27,-0.67l-0.47,-0.14l-3.45,1.35l-4.68,-0.73l-1.02,-0.57l2.26,-1.62l5.53,-2.4l0.77,-0.48l0.26,-0.86l-0.23,-0.42l-2.19,-1.02l-4.15,0.23l-1.15,-1.19l-3.44,-0.72l-2.3,0.42l-1.42,-0.69l-2.96,1.01l-6.52,1.47l-3.87,1.32l-4.32,-1.72l-3.0,-0.29l1.48,-1.5l1.08,-0.26l1.12,0.14l2.43,1.18l1.66,0.37l0.45,-0.21l-0.1,-0.48l-1.92,-1.6l-0.12,-1.55l-1.18,-1.48l2.13,0.26l4.18,1.93l1.95,-0.34l2.6,-1.25l0.09,-0.71l-0.41,-0.27l-3.61,-0.1l-1.73,-0.37l-1.39,-1.18l0.81,-0.36l2.86,0.1l0.39,-0.25l-0.11,-0.45l-3.27,-2.81l0.21,-0.7l3.27,0.93l1.13,-0.2l-0.78,-1.08l-1.26,-0.79Z\",\n            name: \"Iceland\"\n          },\n          AL: {\n            path: \"M613.48,601.01l0.69,0.32l0.52,-0.18l0.25,-0.48l-0.24,-1.33l-1.36,-2.98l1.67,-4.38l-0.07,-2.75l0.32,-2.07l-0.52,-3.06l0.7,-2.05l1.07,-1.3l0.08,-2.58l-1.64,-1.44l-1.53,-0.24l0.23,-2.82l0.99,0.15l0.61,-0.73l-1.54,-3.11l4.15,-5.4l0.14,1.73l0.81,0.95l1.33,-0.11l2.5,-1.0l2.2,3.21l2.39,1.18l1.42,1.53l0.69,2.49l0.08,1.45l-1.02,3.38l0.14,2.01l-0.9,1.2l0.57,2.04l-0.01,2.05l1.13,2.44l1.16,1.07l0.79,2.19l0.74,0.47l2.32,-0.02l0.26,0.54l-0.07,1.35l0.98,2.21l-0.97,1.82l-2.03,0.9l-1.22,2.51l-0.81,2.73l-0.5,0.4l-2.66,0.53l-1.35,1.13l-0.18,0.98l0.92,1.95l-0.95,0.1l-0.49,1.55l-0.64,0.55l-2.31,-0.88l-0.5,-2.34l-1.56,-2.8l-5.09,-2.79l-1.09,-1.11l-0.61,-1.18Z\",\n            name: \"Albania\"\n          },\n          IT: {\n            path: \"M460.72,503.99l1.78,-1.15l1.8,-1.71l0.38,-0.01l0.0,2.36l0.39,0.92l2.52,2.32l2.27,0.58l-0.51,0.85l0.07,0.5l1.37,1.23l0.36,1.05l1.03,0.61l0.95,-0.27l0.54,-0.68l-0.54,-2.47l3.32,-4.52l0.17,-3.17l0.27,-0.16l1.28,0.23l0.67,1.99l0.92,0.97l1.6,0.19l2.15,-0.87l1.7,-0.27l1.26,1.94l0.98,0.35l0.84,-0.3l0.31,-0.66l-0.49,-1.87l-0.93,-1.88l0.56,-1.7l1.03,-0.25l1.08,0.92l1.23,0.3l1.4,-0.33l0.12,-1.32l-0.53,-0.86l0.59,-2.76l2.77,0.16l0.85,0.81l1.18,0.42l2.32,-0.03l0.73,-0.56l1.38,-2.24l1.33,-0.6l3.78,-0.37l3.34,0.19l5.15,-1.58l-0.68,0.99l0.28,1.2l3.4,4.2l1.31,0.54l9.36,1.7l4.38,0.3l2.39,0.51l-0.11,0.38l-3.72,2.46l-0.42,1.14l0.72,1.28l1.07,-0.01l1.62,0.59l-1.85,1.75l-0.19,0.73l0.54,0.98l1.22,0.01l-0.54,1.93l0.36,0.78l-1.48,0.98l-3.63,-0.93l-2.36,2.24l-1.64,0.43l-2.0,1.15l-3.31,1.29l0.8,-1.08l-1.15,-0.24l-1.93,0.95l-1.23,1.0l-0.67,3.49l0.91,0.9l1.39,2.73l1.66,1.19l-0.66,1.62l-0.77,0.57l-0.89,-0.5l-0.92,0.33l-0.41,1.84l0.76,5.04l1.33,3.62l1.28,1.54l2.77,2.32l2.99,1.26l5.23,3.87l2.91,1.25l0.66,0.58l1.71,2.92l1.49,3.41l1.62,5.38l1.23,2.79l2.39,3.05l4.89,4.31l4.41,3.13l4.29,2.0l3.27,0.34l7.54,-0.42l2.4,0.6l0.24,0.98l-0.38,0.67l-3.18,2.21l-0.18,2.39l1.61,1.3l7.31,3.29l7.47,2.74l2.27,1.37l2.76,2.21l6.43,2.94l1.11,1.44l3.92,3.08l1.71,2.29l0.3,1.65l-1.72,4.11l-1.31,-0.39l-1.79,-1.26l-3.15,-5.62l-5.22,-0.55l-1.02,-0.38l-1.68,-0.84l-0.59,-1.34l-0.79,-0.46l-2.02,-0.17l-1.65,0.95l-3.66,5.33l-1.89,4.44l-0.14,1.92l1.31,2.14l3.02,0.95l2.29,1.49l1.42,1.46l0.11,3.72l0.65,2.1l-0.75,0.9l-1.95,-0.28l-2.66,0.79l-2.01,1.48l-0.94,1.69l0.2,3.43l-0.33,1.13l-3.55,2.53l-1.88,2.57l-1.09,2.11l-4.07,0.04l-0.87,-1.22l-0.03,-1.99l0.65,-1.15l1.75,-0.82l1.12,-2.85l-0.3,-2.11l0.54,-0.76l0.52,-0.55l2.91,-0.7l0.32,-0.37l0.18,-2.88l-1.43,-1.55l-1.14,-5.21l-2.28,-4.31l-1.22,-3.85l-0.99,-1.98l-1.82,-1.22l-3.79,-0.25l-4.54,-2.64l-0.17,-0.69l0.76,-1.36l-1.08,-2.88l-1.08,-1.38l-1.28,-0.67l-4.64,0.8l0.89,-1.13l-0.46,-1.01l-1.89,-0.99l-2.76,-0.23l-0.43,0.22l-0.03,-0.73l-2.55,-4.19l-1.92,-1.88l-1.09,-0.32l-1.46,0.34l-4.14,-0.9l-2.16,0.68l-0.35,-0.2l-0.31,-0.6l-2.37,-1.75l-2.99,-1.02l-5.69,-5.49l-1.76,-2.07l-3.66,-2.33l-2.37,-3.39l-1.97,-1.27l-2.74,-0.99l-2.14,0.48l0.88,-0.72l-0.33,-1.49l-3.12,-3.34l-1.85,-1.11l-1.41,-2.23l-2.37,-0.46l0.05,-3.7l-0.99,-2.76l-1.72,-2.37l-1.03,-5.63l-0.93,-1.74l-1.9,-1.2l-4.34,-1.38l-5.95,-3.6l-1.39,-0.12l-3.65,-1.41l-2.23,-0.24l-3.23,1.38l-3.52,3.49l-2.85,3.6l-0.94,0.63l-3.61,1.2l-2.78,0.5l-0.11,-1.05l2.2,-2.66l0.4,-0.9l-0.55,-1.68l-0.96,-0.28l-3.01,0.66l-0.58,-0.14l-4.66,-2.31l-0.81,-0.82l-0.26,-0.71l0.21,-0.75l-0.61,-1.26l1.42,-2.43l1.01,-0.77l-0.46,-2.18l-0.92,-0.77l-1.88,-0.41l-0.68,-0.51l-0.19,-0.83l-1.24,-2.01l0.54,-0.27l2.17,0.07l1.81,-1.29l1.33,-0.43l1.23,-2.96l-0.1,-0.39l-1.86,-1.65l-1.79,-2.85l-1.02,-0.7l-0.03,-1.21l2.63,-1.65l1.53,0.64l2.74,-0.55l2.8,-1.08l3.49,0.9l2.81,-1.61l1.89,-2.55l0.07,-0.89l-0.5,-0.93ZM518.47,542.68l-0.02,0.45l0.8,0.86l1.1,-0.35l0.42,-1.12l-0.15,-0.61l-0.45,-0.3l-1.11,0.28l-0.6,0.79ZM536.34,512.54l1.58,1.41l0.32,0.86l-0.4,0.08l0.05,-0.55l-1.56,-1.8ZM561.64,634.95l-1.42,2.54l-3.32,4.46l-1.83,5.11l0.22,2.17l1.35,1.24l-0.42,0.3l-0.08,0.57l1.5,1.71l0.07,0.48l-0.01,0.44l-2.03,1.93l-0.54,1.75l0.13,1.17l-2.54,-0.51l-1.61,0.18l-3.5,-1.28l-1.85,-2.71l-3.09,-2.07l-3.36,-0.01l-7.24,-3.82l-2.59,-2.04l-1.81,-0.46l-1.69,-1.03l-2.3,0.05l-1.38,-0.37l-1.44,-1.1l-1.12,-2.08l1.41,-3.4l1.55,-0.85l0.7,-0.8l1.23,1.47l1.07,0.59l2.12,-0.82l0.29,-0.86l1.15,-0.77l1.62,-0.02l0.59,0.12l0.56,0.87l1.47,0.38l2.51,1.57l1.64,0.37l3.58,-0.93l3.17,0.37l3.02,-0.45l1.89,-0.64l2.03,-1.27l4.49,0.21l0.95,-0.35l0.59,-0.62l1.54,-0.09l2.07,-1.12l1.04,0.08l-0.37,0.35ZM539.0,595.31l0.02,-0.06l0.31,0.09l-0.19,0.04l-0.15,-0.08ZM512.96,657.33l0.48,0.16l0.18,0.38l-0.64,-0.31l-0.02,-0.24ZM491.6,561.34l-0.16,0.88l-0.71,-0.33l-2.41,0.32l-0.12,-0.3l2.9,-0.24l0.5,-0.33ZM462.39,592.89l0.87,0.72l2.19,0.38l3.34,-1.01l1.8,-0.98l2.33,-2.52l1.52,-0.57l1.25,-1.67l0.83,0.82l0.84,0.09l1.28,0.67l1.77,2.0l-0.54,1.02l0.07,0.46l1.67,1.74l1.62,4.91l-2.19,3.79l0.86,3.95l-1.21,10.52l-0.69,2.78l-0.7,0.28l-2.83,-1.16l-1.72,0.25l-1.03,-0.57l-0.63,0.27l-0.45,3.03l-0.67,1.12l-0.99,0.69l-0.92,0.04l-1.96,-0.27l-0.55,-0.46l-2.33,-3.7l-0.25,-4.19l0.64,-1.31l0.09,-2.38l0.53,0.16l0.66,-0.55l0.1,-1.66l-0.78,-1.22l-1.15,-0.39l0.02,-1.42l0.64,-0.73l0.21,-0.85l0.02,-2.69l-0.87,-1.15l-0.82,-2.45l-2.13,-2.32l-0.11,-1.75l0.39,-1.75ZM464.42,621.63l0.71,0.35l-0.34,0.68l-0.36,-0.48l-0.02,-0.54ZM462.96,589.81l0.1,-0.19l0.15,-0.08l-0.06,0.11l-0.19,0.16Z\",\n            name: \"Italy\"\n          },\n          GG: {\n            path: \"M315.47,448.51l0.52,-0.25l-0.15,0.36l-0.37,-0.12Z\",\n            name: \"Guernsey\"\n          },\n          CZ: {\n            path: \"M515.02,433.92l1.19,1.02l0.6,1.08l0.65,0.07l2.33,-2.94l1.17,-0.7l2.89,-0.65l2.52,0.38l1.09,-1.49l2.02,-0.32l0.92,-1.17l1.6,-0.76l0.75,0.3l0.81,-0.32l1.06,-1.52l1.96,-0.22l2.67,-0.8l6.38,-2.46l0.37,-0.51l-0.15,-0.48l-1.0,-0.66l-0.25,-0.73l2.98,0.56l0.95,1.48l0.08,1.06l1.76,0.8l0.83,-0.18l0.54,-0.62l2.25,-0.51l0.25,-0.32l0.04,-1.87l2.95,0.83l0.28,1.28l1.19,1.4l5.17,1.32l2.81,1.22l0.78,0.97l3.93,-0.66l0.9,0.52l0.57,0.52l-0.42,0.79l-1.8,1.04l-0.5,1.04l0.46,0.7l1.33,0.49l2.02,2.0l1.45,2.2l0.85,0.53l0.79,0.04l4.42,-2.78l-0.02,-0.68l-1.44,-2.28l3.1,0.77l3.73,2.23l1.99,-0.18l1.8,-0.62l-0.09,1.16l-1.49,0.59l-0.24,0.49l0.61,0.9l0.8,0.34l2.0,2.05l0.71,0.26l1.73,-0.47l0.64,-0.55l0.67,0.66l2.73,1.37l0.83,-0.21l2.07,0.44l0.44,0.29l0.4,2.02l2.9,2.63l0.27,1.24l-2.96,0.35l-2.55,1.84l-0.7,0.94l-2.65,1.33l-0.88,1.57l-0.32,1.96l-2.18,1.02l-2.09,1.93l-1.71,0.77l-1.83,0.23l-3.9,-0.57l-0.98,0.38l-1.15,1.21l-1.28,2.46l-0.71,-1.3l-2.27,-0.52l-2.33,-1.09l-1.21,-0.03l-1.45,1.01l-3.92,-0.26l-3.07,-1.87l-1.85,0.01l-5.24,-1.97l-1.92,0.46l-1.3,-0.85l-1.15,-0.1l-0.71,0.65l-0.56,3.35l-1.36,0.07l-1.6,1.82l-0.23,1.07l-2.5,-0.4l-0.95,0.24l-0.75,0.61l-2.23,-0.04l-1.69,-0.37l-0.86,-1.54l-2.34,-1.31l-3.63,-3.34l-1.58,-0.02l-1.91,-2.37l-2.02,-1.08l-3.04,-3.02l-1.53,-0.08l-1.63,-1.37l-2.41,-3.91l-1.35,-1.5l1.34,-1.87l0.16,-1.15l-0.82,-1.15l-2.46,-1.54l-0.83,-0.87l-1.55,-3.17Z\",\n            name: \"Czech Rep.\"\n          },\n          IM: {\n            path: \"M286.48,364.63l0.75,-2.12l1.13,-0.81l1.38,-1.97l1.16,-0.38l0.45,1.97l-0.91,1.44l-2.48,2.14l-1.47,-0.27Z\",\n            name: \"Isle of Man\"\n          },\n          GB: {\n            path: \"M268.15,314.94l0.76,-0.51l2.22,-0.36l1.99,-1.42l-0.04,-0.68l-1.33,-0.72l1.39,-0.78l1.97,-2.75l0.47,-2.7l-1.51,-2.4l-1.71,-0.79l-0.08,-1.24l3.04,-1.75l-0.26,-0.39l-1.22,-0.45l-0.73,-1.5l0.65,-2.06l1.01,-1.76l3.3,0.06l0.77,-0.52l1.74,0.44l0.45,-0.58l-3.37,-3.5l0.78,-1.43l0.07,-1.57l4.32,-0.43l0.23,-0.54l-1.07,-2.23l0.29,-2.53l0.57,-0.77l0.99,-0.34l1.4,0.28l1.48,1.26l2.81,-1.1l1.07,1.04l3.29,-0.87l9.93,-1.18l2.64,-0.65l2.45,0.26l-0.8,1.82l-0.05,2.13l-1.24,1.58l-10.66,7.29l-0.65,2.2l0.34,0.47l1.91,0.38l-2.81,2.5l-0.76,1.94l0.39,0.55l3.69,-0.45l6.29,-2.1l1.36,-0.03l3.54,0.74l2.46,-0.39l8.29,0.22l2.29,-0.41l1.34,0.44l1.17,1.15l1.11,2.32l-3.2,4.12l-0.97,3.1l-2.28,4.57l-2.22,2.52l-2.23,3.23l-2.32,1.42l-3.73,0.67l-3.51,1.63l-0.28,0.45l0.41,0.33l1.52,-0.05l1.56,-0.45l2.59,-0.15l2.77,1.34l-0.19,0.79l-1.06,0.82l-2.98,0.24l-2.66,2.16l-2.31,0.93l-4.35,-0.66l-1.23,-0.59l-0.51,0.14l0.07,0.52l1.15,1.0l1.42,0.59l7.67,1.25l3.04,-1.42l3.05,-0.02l5.98,2.32l4.24,4.35l2.33,1.89l3.11,10.2l1.78,4.76l0.84,1.39l1.25,1.09l6.45,2.77l4.06,4.18l3.44,2.72l-0.61,0.48l-0.71,1.43l0.53,1.56l3.18,5.0l-1.41,-0.06l-2.86,-1.74l-2.54,0.37l-2.7,-0.14l-0.39,0.36l0.31,0.43l2.37,0.55l2.55,0.05l5.58,4.04l1.86,2.36l1.07,3.01l-0.66,1.22l-3.41,3.22l0.1,0.61l3.4,1.83l1.62,-0.4l2.3,-2.51l1.81,-0.17l4.73,0.34l4.27,1.16l3.61,2.48l0.73,1.26l0.39,3.6l-2.05,6.22l-2.29,2.13l-1.08,0.57l-1.18,-0.21l-0.37,0.34l0.56,2.13l-0.93,0.61l-1.03,0.28l-2.15,-0.35l-2.75,1.41l0.05,0.73l1.83,0.67l0.25,0.48l-0.38,1.04l-1.05,0.51l-3.94,0.66l-1.21,0.68l-0.17,0.49l0.47,0.24l1.3,-0.31l0.71,0.22l0.54,0.99l0.71,0.48l2.88,0.54l6.8,-0.18l-0.22,2.81l-0.29,0.32l-4.28,1.91l-1.27,2.12l-2.49,-0.05l-1.14,0.82l-6.33,2.15l-5.55,-0.91l-3.41,0.08l-4.48,0.79l-4.59,-1.4l-2.08,-0.24l-1.73,-0.69l-0.47,0.14l0.01,0.49l0.8,0.98l-1.99,1.06l-4.61,0.55l-2.19,-0.18l-0.41,0.53l0.75,1.52l-0.44,0.12l-4.2,-0.6l-0.74,0.12l-0.59,0.52l-1.26,-0.25l-3.19,-1.61l-1.68,-0.3l-1.51,0.11l-5.71,1.65l-1.16,1.64l-1.3,3.91l-1.15,1.29l-1.24,0.15l-5.49,-2.9l-1.51,0.61l-2.85,0.32l-3.11,0.94l-3.9,2.36l-1.47,2.12l-1.08,0.22l-1.33,-1.05l-1.51,-0.38l-2.58,0.83l-0.13,-0.77l0.97,-0.96l3.15,-0.92l2.75,-2.3l1.87,-2.16l1.57,-0.78l0.41,-0.8l3.82,-3.57l0.78,-3.42l3.09,-1.03l1.41,-2.79l4.41,-0.65l3.12,0.04l3.18,0.57l3.47,-0.2l1.38,-0.88l2.17,-2.81l3.94,-3.66l2.13,-2.39l0.01,-0.52l-0.51,-0.1l-1.44,0.82l-2.73,2.04l-3.23,0.78l-4.11,2.62l-3.45,-0.4l-2.63,-2.2l-1.94,-1.02l-3.92,0.43l1.54,-1.33l-0.33,-0.33l-2.46,-0.4l-1.59,-1.07l-3.01,0.07l-4.0,1.97l-3.22,-1.79l-0.02,-1.23l-0.45,-0.97l-0.54,-0.33l0.67,-0.79l1.19,-0.77l2.84,-0.84l6.68,-2.81l2.33,-1.5l1.06,-1.03l1.34,-2.7l0.92,-1.18l-0.2,-0.63l-0.75,-0.24l-0.29,-0.65l0.5,-1.83l-1.03,-2.09l0.21,-1.57l-0.4,-0.48l-3.51,0.34l-3.15,1.52l-0.81,0.1l0.49,-0.83l3.19,-2.29l1.77,-2.32l2.07,-1.33l4.53,-1.59l1.66,0.17l4.2,-0.9l3.0,1.55l0.45,-0.06l0.11,-0.44l-0.79,-2.12l0.75,-0.33l1.97,2.14l0.94,0.25l1.56,-0.33l0.31,-0.32l-0.78,-0.79l-1.62,-0.37l-0.67,-0.62l-1.2,-2.13l0.06,-1.14l1.75,-2.6l-0.2,-0.62l-1.2,-0.59l0.05,-1.98l1.75,-1.15l0.72,-3.51l-0.69,-1.04l-1.82,0.15l-2.04,0.77l-1.98,-1.77l-3.27,-4.34l-0.27,-1.6l1.65,-3.73l2.54,-2.39l3.05,-0.85l0.29,-0.39l-0.29,-0.39l-5.5,-0.22l-1.66,0.32l-1.58,1.06l-1.72,0.45l-2.24,1.6l-2.19,0.01l-1.01,-1.05l-0.84,-0.18l-3.47,1.62l-3.9,-1.59l-0.98,0.57l-0.72,2.0l-1.09,-0.89l-1.34,-1.73l-0.45,-2.0l0.37,-0.24l0.61,0.34l0.56,-0.2l1.22,-3.01l3.27,-5.08l0.68,-1.8l-0.1,-1.0l-0.6,-1.02l-2.21,-1.89l0.26,-3.02l0.63,-1.0l2.88,0.03l0.39,-0.31l-0.22,-0.45l-3.28,-1.99l0.55,-1.71l-0.12,-0.45l-0.46,-0.04l-1.82,2.56l-2.04,0.67l-0.55,0.96l-1.04,0.34l0.28,-2.25l0.57,-0.88l2.4,-2.19l0.05,-0.53l-0.52,-0.11l-1.23,0.72l-2.72,2.09l-1.84,1.98l-0.11,1.04l0.59,2.29l-0.16,0.98l-2.29,7.16l-0.67,0.9l-1.14,-0.06l-0.3,-0.73l1.15,-4.26l2.4,-3.66l-0.54,-0.36l-1.04,0.13l0.17,-4.38l0.74,-1.58l0.27,-2.18l1.9,-4.94l0.89,-0.94l0.21,-1.12l1.66,-2.66l-0.05,-0.45l-0.94,0.08l-5.74,4.13l-2.6,-0.52l-0.82,-0.71l-0.4,-1.51l-0.37,-0.3l-1.52,-0.14ZM339.59,233.48l-0.57,2.19l-0.53,-0.03l-0.06,-1.74l0.74,-0.02l0.42,-0.4ZM336.19,239.14l-0.93,-1.46l0.79,-1.92l0.63,0.04l0.08,0.26l-0.75,0.66l0.18,2.42ZM329.81,239.86l0.8,-0.37l1.06,-1.32l0.87,-0.15l0.23,2.57l0.58,0.28l0.4,-0.21l1.17,1.27l0.92,-0.16l-1.6,5.89l-0.26,2.06l-0.62,0.77l-0.43,1.4l-0.23,-0.2l1.02,-3.91l-0.25,-1.08l-0.77,-0.9l-1.96,0.22l-0.43,-1.0l-1.48,-0.05l-0.32,-0.39l2.04,-0.14l1.63,-0.82l0.19,-0.49l-1.02,-2.77l-1.52,-0.49ZM330.39,426.85l1.55,-0.47l0.95,-0.66l2.54,0.99l-0.75,0.49l-0.48,0.83l-0.59,0.15l-0.6,0.0l-2.6,-1.33ZM315.95,265.12l-0.68,0.01l0.29,-0.44l0.71,-0.23l0.87,0.07l-1.2,0.59ZM309.8,263.74l0.37,-0.11l1.34,1.02l-1.51,-0.67l-0.2,-0.25ZM312.26,265.65l1.03,0.29l-0.03,0.18l-0.75,0.32l-0.25,-0.79ZM308.85,269.28l-0.26,0.62l0.38,0.54l3.29,0.45l0.39,0.27l-0.24,0.56l-0.56,0.19l-1.93,-0.96l-2.24,0.39l-0.45,-0.22l-0.26,-1.19l-0.58,-0.1l-0.8,0.43l0.01,-1.32l0.41,-1.08l0.57,-0.18l1.09,0.13l1.3,0.68l0.27,0.34l-0.41,0.45ZM310.59,274.73l-0.03,-0.02l-0.47,-0.75l0.7,-0.11l-0.21,0.88ZM306.77,274.1l-0.45,-0.01l-1.04,-1.0l-0.33,-0.85l1.05,0.15l0.78,1.72ZM293.4,379.3l0.66,0.42l0.9,0.03l-3.55,2.22l-0.41,-0.54l-0.84,-0.13l-0.91,-1.28l-0.16,-1.93l1.09,-0.46l1.73,0.03l1.49,1.64ZM281.03,338.84l-1.32,0.01l-1.07,-0.49l-0.75,-2.35l0.78,-1.35l0.65,-0.11l0.96,0.74l0.71,1.66l0.05,1.88ZM243.78,353.56l2.07,-0.03l2.55,-1.09l1.48,-2.17l0.71,-2.43l2.02,-1.34l0.58,0.54l1.33,0.1l1.08,-0.74l1.04,-1.76l3.18,-0.18l3.04,-0.9l1.25,-0.01l3.21,0.46l1.09,1.18l0.71,2.2l1.58,2.14l2.0,1.81l0.06,0.77l-2.05,1.18l-0.22,1.17l0.55,0.37l1.78,-0.56l1.9,0.16l0.59,0.65l0.71,2.04l-0.07,0.41l-0.62,-0.99l-1.5,-0.75l-0.51,0.48l0.32,1.28l-0.13,1.73l0.21,0.38l0.95,0.23l-0.41,1.14l-3.01,0.79l-1.46,2.65l-0.91,0.58l-3.72,-0.8l-1.47,0.62l-2.99,0.05l0.16,-1.49l-0.39,-0.71l-1.84,-0.6l-0.68,-0.91l-0.33,-1.22l-2.04,-1.58l-0.85,0.07l-2.1,2.02l0.45,1.34l-2.25,1.86l-3.2,-0.35l-1.07,-0.82l-2.16,-0.48l-0.53,-1.29l-3.24,-2.77l1.07,-0.79l3.35,-1.09l0.67,-0.52l0.24,-0.59l-0.22,-0.47l-1.93,-1.02ZM261.43,298.81l2.77,-0.68l0.52,-1.27l0.92,0.27l0.98,1.15l0.26,1.42l-0.24,1.96l0.61,2.1l1.02,0.63l2.54,0.4l2.31,-0.1l0.21,0.31l-3.17,2.99l-0.73,0.23l-0.24,-2.65l-0.48,-0.35l-2.97,0.32l-0.61,-0.28l-1.79,-2.5l-3.04,-0.66l-0.76,-0.83l-0.17,-0.38l0.46,-0.56l0.82,0.18l0.99,-0.58l-0.19,-1.09ZM269.34,332.0l-0.57,-0.07l-0.12,-1.03l1.96,-1.32l-0.03,-0.72l-0.51,-0.21l0.28,-0.48l1.95,-1.22l-2.97,5.06ZM271.87,321.8l-5.06,1.0l-1.54,-0.08l1.84,-0.73l0.62,-2.57l-0.21,-0.45l-2.19,-1.11l0.09,-0.39l2.26,-0.75l1.96,2.01l2.42,0.81l-0.19,2.27ZM263.06,333.89l0.29,-1.39l0.53,-0.68l0.58,-0.27l0.79,0.24l1.95,-1.18l0.87,3.48l-0.29,0.85l-2.16,0.88l0.34,-0.95l-0.39,-0.99l0.18,-0.72l-0.36,-0.57l-0.93,0.13l-1.39,1.16ZM255.41,289.78l0.69,-0.49l-0.15,-0.72l-1.04,-0.51l-0.13,-0.82l0.1,-0.64l0.69,-0.72l1.74,0.87l2.02,-0.12l0.46,-0.5l-0.77,-1.87l6.87,-3.75l0.25,2.18l-1.59,3.18l-0.74,0.23l-0.54,0.78l-1.75,0.9l-0.21,0.45l0.38,0.31l1.48,0.02l-0.0,0.7l-1.99,1.51l-1.52,0.67l-1.42,1.52l-0.92,0.18l-1.21,1.34l-0.95,-0.76l2.62,-1.89l0.17,-0.55l-2.55,-1.49ZM265.16,309.88l-0.49,0.1l-0.68,-0.67l0.84,-0.36l0.47,0.45l-0.13,0.47ZM261.42,316.68l0.29,-0.28l0.09,-0.02l-0.03,0.04l-0.35,0.27ZM249.11,297.53l0.35,-0.38l1.04,0.14l2.36,-0.64l1.01,0.73l-0.88,1.33l-1.56,-0.01l-2.31,-1.17ZM251.9,306.91l-1.08,-0.23l-0.4,-1.03l0.09,-3.19l1.15,0.03l0.25,4.42ZM248.75,309.97l0.68,-0.43l0.37,0.2l-0.96,0.26l-0.09,-0.03Z\",\n            name: \"United Kingdom\"\n          },\n          AX: {\n            path: \"M628.45,248.96l0.16,-0.05l0.84,0.08l0.31,0.32l-0.63,0.06l-0.68,-0.41ZM621.7,243.28l1.25,-0.06l2.02,1.49l-0.63,0.99l-0.8,-0.15l-1.25,0.46l-0.31,1.74l-2.69,0.2l-0.49,-0.23l-0.9,-2.45l0.11,-0.4l0.54,-0.21l0.06,1.05l0.47,0.37l0.85,-0.15l0.32,-0.29l0.34,-1.72l-1.05,-1.12l0.26,-0.39l0.48,-0.17l0.58,0.75l0.84,0.28ZM616.9,246.18l-0.55,0.17l-0.39,0.42l0.16,-1.31l0.49,-0.02l0.28,0.74Z\",\n            name: \"Aland\"\n          },\n          IE: {\n            path: \"M245.03,355.16l-3.75,1.4l-1.46,1.19l0.42,1.3l3.09,2.41l0.65,1.39l2.3,0.51l1.07,0.82l3.69,0.38l2.79,-2.26l0.09,-0.46l-0.49,-0.95l1.71,-1.63l0.31,0.02l1.52,1.24l0.25,1.06l0.91,1.22l1.92,0.73l-0.18,1.51l0.56,0.74l3.32,-0.04l1.44,-0.63l0.91,0.09l0.42,0.48l-0.42,0.31l-1.28,-0.03l-0.65,0.73l-0.03,0.85l0.37,1.24l0.72,0.86l0.99,3.59l0.72,1.21l0.15,3.22l-0.29,0.63l1.44,5.06l0.23,2.86l-1.89,3.4l-0.67,3.58l-1.65,2.45l-1.46,0.94l-0.11,0.65l1.47,1.41l-0.98,0.51l-1.53,0.23l-1.77,-0.43l-1.27,0.04l-1.49,0.84l-1.01,-1.55l-0.81,1.63l-0.82,0.37l-1.8,-0.09l-4.31,0.86l-1.41,1.96l-3.3,1.03l-1.16,1.3l-1.31,0.67l-0.96,0.18l-1.89,-1.34l-1.79,-0.0l-0.38,0.32l0.85,0.97l-0.0,1.57l-1.61,0.5l-1.42,0.95l-1.89,0.26l-1.2,0.96l-6.42,1.53l-2.25,-0.55l-4.26,0.91l1.21,-1.55l2.33,-1.17l0.24,-0.3l-0.24,-0.64l-0.89,-0.15l-4.33,0.76l-2.09,0.72l3.76,-2.46l0.67,-0.74l1.97,-0.87l0.21,-0.5l-0.49,-0.25l-6.5,1.85l-1.48,-0.2l-0.69,-0.54l-1.03,0.19l-0.29,-0.71l1.78,-1.71l1.09,-0.77l2.7,-1.09l0.66,-0.93l-0.19,-0.58l-0.79,-0.28l-5.41,0.07l0.29,-0.66l1.82,-1.08l0.94,-0.17l2.67,0.8l2.24,-0.23l0.34,-0.28l-0.13,-0.43l-0.81,-0.65l-0.15,-1.37l-0.45,-0.48l1.55,-0.82l1.69,-1.42l7.69,-1.32l3.73,-1.08l0.29,-0.38l-0.28,-0.39l-1.82,-0.57l-0.85,-0.73l-0.56,0.03l-1.42,1.55l-0.93,0.54l-2.82,0.31l-2.45,-0.63l-2.94,1.35l4.74,-3.85l0.97,-1.34l0.03,-0.41l-0.67,-0.88l1.87,-2.34l0.63,-0.41l3.34,-0.71l1.03,-0.9l-0.13,-0.67l-2.92,-0.82l-5.04,0.23l-0.67,-0.44l-0.24,-0.84l-0.5,-0.44l-2.93,0.12l0.68,-0.6l-0.2,-0.69l-3.7,-0.25l0.42,-0.63l-0.05,-0.58l-0.65,-0.76l4.97,-0.87l0.35,-0.37l-0.29,-0.42l-2.29,-0.83l0.06,-0.78l1.91,-0.9l2.21,-0.43l0.31,-0.49l-0.01,-1.2l-0.35,-0.48l-2.29,-0.21l-1.8,0.38l0.68,-2.04l-0.0,-1.8l-0.53,-0.33l-0.58,0.2l-0.57,-1.73l-0.49,-0.19l-1.01,0.38l0.02,-0.42l0.33,-0.58l0.59,-0.24l2.28,0.12l1.54,-0.59l2.01,-0.15l3.2,0.18l2.21,1.59l1.01,-0.26l1.2,-1.12l5.49,1.04l0.81,-0.19l0.26,-0.48l-0.31,-1.17l-0.59,-0.71l1.72,-1.42l3.26,-1.22l1.45,-2.62l-0.38,-0.63l-4.29,0.58l-3.57,-1.16l1.07,-0.91l1.46,-0.4l0.38,-0.61l1.96,-1.47l-0.31,-1.75l0.19,-0.79l0.94,-0.8l0.56,-1.44l3.44,-0.89l2.64,-0.09l0.63,0.24l0.54,-0.43l-0.11,-0.78l0.78,-0.09l1.02,1.41l0.13,0.66l-0.89,1.03l-0.02,0.6l0.31,0.29l-0.67,0.73l-0.03,0.5l0.48,0.14l2.52,-1.47l0.1,-1.18l-0.63,-1.97l0.14,-0.76l0.61,-0.48l2.02,-0.31l0.26,-0.64l-0.46,-0.62l4.01,2.13l-5.21,3.62l-1.07,2.92l-1.25,1.91l-2.31,0.96l-1.79,-0.12l-0.73,0.44l-0.03,0.88l1.98,1.2ZM212.65,366.62l-0.13,-0.02l0.03,-0.02l0.09,0.04ZM213.87,366.77l1.05,0.02l0.27,0.15l0.07,0.94l-0.8,-0.9l-0.59,-0.21Z\",\n            name: \"Ireland\"\n          },\n          ES: {\n            path: \"M408.55,609.24l-3.95,-1.75l-1.35,-0.22l-0.04,-0.91l2.43,-0.17l2.05,0.62l1.1,1.67l-0.24,0.75ZM392.9,610.25l0.24,0.47l1.3,0.53l1.55,-0.44l0.59,0.12l0.47,0.17l0.11,0.64l-2.84,4.76l-2.01,1.18l-3.51,-1.26l-0.53,-1.7l-0.91,-0.82l-1.18,-0.19l-1.55,1.01l-0.31,-0.47l-1.13,-0.56l0.01,-0.33l5.42,-3.73l1.57,-0.82l3.07,-0.89l-0.06,0.57l0.37,0.41l-0.66,1.32ZM246.2,546.17l1.24,0.54l1.33,-0.16l1.25,0.65l2.0,1.73l2.73,0.67l2.32,-0.51l11.05,-0.15l3.17,-0.81l2.44,1.01l4.71,0.48l2.86,0.85l7.97,1.43l2.93,0.01l5.69,-1.37l1.66,0.32l2.22,-0.66l0.92,0.12l1.48,0.98l5.05,1.32l1.62,-1.15l0.81,-0.2l3.51,0.67l3.75,1.41l1.98,0.1l2.79,-0.38l2.24,-0.92l0.61,1.08l0.69,0.42l3.9,1.0l-0.15,1.08l-0.77,1.27l0.05,0.44l0.81,0.66l1.09,0.03l0.6,-0.74l0.3,0.36l4.79,1.82l2.22,0.15l2.37,2.24l1.74,0.09l2.29,-0.44l3.47,2.21l3.37,-0.44l0.82,0.42l5.11,0.05l0.53,-0.55l0.4,-1.99l8.53,2.45l0.9,1.31l0.03,2.1l0.64,0.81l1.32,-0.09l2.19,-0.97l2.73,1.14l1.03,1.21l0.88,0.03l2.11,-1.03l6.05,1.3l0.84,-1.12l2.56,-0.78l0.93,-0.16l3.02,0.58l1.09,1.68l-1.81,0.71l-0.22,1.53l1.19,1.45l0.12,2.0l-3.11,2.7l-9.38,4.87l-3.07,2.88l-6.93,1.47l-7.25,2.16l-4.47,3.93l0.14,0.7l1.0,0.28l0.97,0.99l-1.94,1.07l-1.87,0.41l-3.14,4.73l-5.95,7.1l-3.44,5.71l-0.07,1.96l1.73,5.74l1.03,1.55l1.35,1.24l2.56,1.08l0.41,0.67l-3.16,2.45l-4.44,2.36l-1.99,1.94l-0.48,1.83l-1.34,0.98l-0.48,2.47l-1.8,3.57l-0.11,0.91l1.16,1.29l-0.27,0.21l-2.08,0.35l-5.27,0.16l-4.46,2.79l-2.28,2.59l-1.9,4.42l-2.24,2.53l-0.75,0.35l-1.61,-1.09l-2.0,-0.18l-2.05,0.39l-1.14,0.96l-1.39,0.45l-1.52,-0.42l-3.39,-0.24l-1.6,0.06l-2.23,0.71l-1.96,-0.48l-3.38,-0.25l-7.46,0.61l-1.12,0.41l-3.08,2.87l-3.54,0.09l-3.2,1.22l-1.0,0.94l-1.35,2.14l-0.35,1.21l-0.96,-0.07l-0.5,1.3l-1.83,0.61l-2.33,-0.91l-2.03,-1.42l-1.11,-0.16l-2.36,-3.47l-0.56,-2.6l-1.61,-0.81l-0.29,-1.07l1.02,-1.66l1.6,-1.37l-0.41,-0.31l-1.41,0.08l-0.96,0.94l-1.11,-1.59l-5.06,-3.56l0.19,-1.23l-0.7,-0.22l-1.27,1.12l-2.71,-0.15l-2.77,0.4l-1.23,-5.85l0.75,-2.07l2.03,-2.77l1.34,-1.45l2.36,-0.79l0.91,-2.31l-0.45,-0.59l-1.76,0.15l-2.97,-4.04l0.81,-3.79l3.11,-2.96l0.63,-1.46l0.03,-1.41l-0.83,-0.95l-1.59,-0.4l-1.69,-3.02l-0.39,-1.96l-1.57,-1.32l-0.92,-1.49l5.21,-0.2l1.22,-0.59l0.9,-1.43l0.9,-2.28l0.23,-1.44l-0.4,-0.92l-1.43,-1.44l0.17,-0.44l2.07,-1.45l0.76,-1.07l-0.54,-1.45l0.45,-3.48l-0.24,-1.99l-0.33,-1.74l-0.89,-1.96l1.97,-1.35l1.13,-1.68l1.61,-1.38l2.17,-1.14l1.61,-1.34l1.17,-1.66l-0.43,-1.19l-1.01,-0.82l-1.25,-0.44l-1.89,-0.09l-0.11,-3.06l-0.36,-0.8l-0.88,-0.56l-1.06,0.12l-1.76,-0.47l-0.61,0.3l-2.06,-0.08l-1.78,-0.47l-0.82,0.53l-0.24,0.98l-2.34,0.86l-1.37,-0.03l-2.55,-0.85l-3.24,0.12l-2.87,1.11l-0.62,-1.02l1.23,-2.07l-1.13,-1.88l-1.06,-0.33l-4.57,1.41l-2.58,1.82l-0.72,0.16l-0.18,-2.32l2.53,-2.61l-0.12,-0.66l-1.4,-0.22l1.06,-1.45l-0.13,-0.55l-0.92,-0.75l-0.01,-2.74l-0.53,-0.28l-2.47,0.81l-0.02,-0.67l1.45,-2.27l-0.32,-0.5l-1.46,-0.24l-1.05,-0.76l-1.33,-1.66l0.71,-2.85l2.0,-1.02l1.92,-1.48l2.78,0.27l1.74,-0.34l2.56,-1.02l1.67,-1.08l-0.05,-0.95l-0.41,-0.69l0.23,-0.35l3.27,-1.81l2.1,-0.23l1.93,-0.88ZM370.1,623.83l-0.59,0.91l-1.82,-0.41l0.26,-0.64l0.7,-0.46l0.03,-0.65l0.46,-0.58l2.6,-0.57l0.4,0.32l0.08,0.41l-1.53,1.47l-0.58,0.19ZM370.18,627.26l0.43,0.46l-0.55,0.0l0.12,-0.46ZM164.44,776.55l-0.91,0.89l-0.44,-0.15l0.76,-2.18l3.27,-1.23l0.83,-1.23l-0.52,2.64l-2.99,1.26ZM155.44,788.95l2.37,-1.46l2.87,-6.04l0.34,-1.27l0.46,-0.35l0.91,0.01l0.27,0.45l-0.01,1.42l-0.47,2.52l-0.8,2.08l-3.47,1.18l-1.83,1.61l-0.64,-0.14ZM141.28,788.62l0.11,1.32l-4.04,0.0l0.8,-1.44l3.13,0.12ZM128.81,784.44l-1.25,3.48l-1.5,1.58l-1.26,0.29l-1.66,-1.86l-1.25,-2.48l4.27,-0.62l3.26,-2.31l2.13,-0.21l-2.74,2.13ZM117.34,789.64l-0.75,-0.17l-0.52,-0.88l0.58,-0.83l1.31,0.57l0.26,0.48l-0.88,0.82ZM108.62,782.59l-1.69,-3.37l0.7,-0.91l1.39,-0.03l0.72,1.33l-0.36,2.16l-0.76,0.82Z\",\n            name: \"Spain\"\n          },\n          ME: {\n            path: \"M601.12,565.85l1.19,-0.97l0.28,-0.68l-0.09,-0.72l-1.0,-1.62l-0.28,-2.93l0.34,-0.41l1.75,-0.24l0.34,-0.4l0.06,-1.92l0.56,-1.18l2.2,-1.75l0.74,0.07l0.92,0.94l0.98,-0.46l0.08,-1.33l-1.22,-2.13l0.14,-0.28l1.2,0.35l1.26,-0.26l0.56,1.35l2.58,1.71l2.74,2.82l2.42,1.12l2.14,0.45l5.15,2.95l0.06,0.52l-1.49,0.41l-0.45,0.68l-1.62,-0.06l-0.66,0.62l0.72,1.91l-0.2,0.93l-3.37,1.17l-0.38,-0.47l-0.16,-1.85l-0.88,-0.44l-0.81,0.44l-3.97,5.49l-0.67,0.29l-2.58,-0.2l-0.31,0.65l1.59,1.94l1.69,0.85l-0.04,2.92l-1.44,-0.88l-0.9,-1.83l-3.09,-3.08l-3.53,-2.11l0.23,-0.58l-0.34,-0.59l-1.53,0.19l-0.92,-1.43Z\",\n            name: \"Montenegro\"\n          },\n          MD: {\n            path: \"M712.53,469.1l2.31,-1.33l5.14,0.23l1.53,-1.02l1.05,0.19l1.72,-0.95l3.49,0.95l0.98,0.89l2.03,0.79l0.72,1.12l1.09,0.35l1.68,-0.01l0.39,0.23l-0.18,0.59l0.23,0.62l1.14,0.03l0.57,0.96l0.6,-0.0l0.78,-0.88l2.88,0.47l1.16,1.99l0.96,0.93l0.99,0.32l1.65,-0.6l0.82,1.24l0.21,1.74l-0.32,1.87l-0.84,2.17l0.18,1.06l0.34,0.59l2.44,1.48l0.73,0.86l1.98,0.87l-0.38,2.89l0.67,0.88l0.19,1.52l2.11,1.48l2.08,0.9l0.74,1.53l-0.07,3.43l2.44,1.72l-0.33,0.32l-2.9,0.39l-1.0,-1.27l-0.81,-0.32l-1.41,0.82l-2.03,-0.92l-1.01,0.26l-0.87,-0.4l-0.6,0.12l-0.62,1.15l-0.1,-1.82l-0.5,-0.51l-0.54,-0.05l-2.77,1.21l-0.63,0.95l0.04,1.05l0.21,1.4l0.77,1.72l-0.71,1.95l-1.2,1.09l-1.45,0.68l-0.35,1.64l-3.15,3.06l0.03,2.49l-2.33,0.22l-1.08,0.59l-1.37,-1.89l0.96,-0.86l-0.81,-5.49l0.26,-2.73l1.68,-5.26l-0.27,-1.14l0.22,-2.18l-2.29,-5.93l-3.05,-2.49l-1.16,-1.93l-2.06,-1.92l-2.23,-3.64l-1.53,-1.5l-2.47,-5.46l-2.41,-3.5l-1.17,-1.03l-1.54,-0.78l-1.64,-0.15Z\",\n            name: \"Moldova\"\n          },\n          RO: {\n            path: \"M631.66,512.33l-1.62,-2.15l-2.98,-1.78l-1.3,-1.89l3.0,-0.64l1.59,0.53l1.44,-0.77l0.67,-1.16l0.81,-0.18l2.69,0.29l1.42,-0.78l0.52,-0.55l0.45,-1.28l1.09,-0.68l-0.15,-1.22l0.78,-1.78l2.38,-1.66l0.06,-1.57l2.13,-2.96l0.14,-1.37l1.69,-1.68l1.11,-2.8l1.64,-1.49l0.18,-2.0l1.41,-1.04l2.32,-2.6l2.53,-0.74l1.81,0.04l3.7,-3.16l2.29,-0.96l1.16,-1.36l0.58,0.03l2.92,1.64l3.46,-0.04l4.49,0.97l0.86,-0.12l1.63,0.64l4.11,-0.7l1.11,0.24l4.5,3.72l2.52,-0.5l1.41,-1.38l3.87,-1.47l9.43,-1.41l1.84,-2.27l0.38,-1.46l5.19,-0.97l2.33,0.84l0.99,0.89l2.29,3.34l2.51,5.52l1.57,1.55l2.19,3.59l2.1,1.97l1.18,1.95l2.93,2.32l2.21,5.6l-0.22,2.16l0.27,1.0l-1.66,5.2l-0.28,2.9l0.8,5.36l-1.04,0.73l0.01,0.55l1.84,2.47l1.43,1.74l1.94,1.03l4.29,1.01l0.85,-0.41l-0.23,-0.86l1.39,0.33l1.88,-0.54l2.59,-1.35l2.28,-0.26l2.07,0.77l1.65,1.62l-0.91,4.49l-0.93,2.04l-5.84,1.21l-0.37,-2.16l0.52,-0.66l-0.24,-0.64l-1.85,-0.24l-1.32,1.35l0.37,1.96l-0.97,1.47l-0.08,1.37l-0.53,1.29l0.45,0.45l0.39,-0.06l-2.26,2.65l-0.78,1.52l0.18,5.12l-0.96,3.66l-2.42,-0.04l-4.24,-1.23l-2.16,-2.64l-0.42,-0.14l-1.86,0.48l-0.84,-0.66l-3.33,-0.39l-4.73,-2.44l-8.15,1.39l-3.76,1.29l-3.9,2.3l-1.6,1.74l-1.7,0.86l-2.46,0.65l-4.49,-0.25l-9.87,-1.78l-2.85,0.5l-3.67,-0.38l-5.67,-1.11l-4.2,-0.34l-4.08,0.63l-0.45,-0.32l0.03,-0.96l2.02,-1.54l0.02,-1.12l-4.47,-2.72l-0.15,-0.7l-1.44,-0.93l-0.99,-1.35l0.08,-0.66l0.56,-0.68l2.39,-0.47l0.2,-0.47l-0.33,-0.8l-3.36,-1.74l-1.99,0.5l-2.13,1.95l-1.09,0.23l-0.9,-1.21l-1.6,-0.77l-3.63,-0.72l-0.58,-0.76l-1.0,-0.58l-2.03,-0.57l1.83,-0.2l0.48,-0.55l-0.18,-0.85l-2.12,-0.97l0.62,-0.23l0.99,-1.51l0.07,-1.02l-0.99,-0.87l-2.71,-0.8l-1.0,-0.8l-1.74,-0.54l-3.06,-2.42l-0.11,-4.46l-0.37,-0.46l-0.8,0.27Z\",\n            name: \"Romania\"\n          },\n          RS: {\n            path: \"M607.42,509.85l1.42,-0.57l0.68,-0.8l0.8,0.44l1.93,-0.29l2.06,-1.11l1.45,-1.49l0.91,-0.19l3.1,0.39l1.26,-0.26l3.53,0.55l2.01,2.55l2.91,1.72l1.76,2.28l0.78,-0.01l-0.05,3.73l0.4,0.78l3.18,2.52l1.76,0.56l1.1,0.84l2.71,0.8l0.59,0.54l-0.89,1.5l-0.59,0.16l-0.38,0.59l0.52,0.87l1.89,0.81l-2.09,0.34l-0.26,0.39l0.32,0.95l2.16,0.6l1.56,1.34l1.5,0.52l2.22,0.24l1.44,0.7l1.25,1.38l1.66,-0.41l1.95,-1.86l1.75,-0.44l2.73,1.51l-2.07,0.47l-0.95,1.17l-0.06,1.13l0.49,0.96l1.72,1.18l0.39,0.86l-0.82,0.68l-0.41,1.88l-2.37,1.2l-0.78,2.48l0.04,1.46l1.83,4.56l0.75,1.06l2.95,1.73l1.3,1.71l1.38,0.92l-0.36,1.07l-3.08,3.35l-1.91,0.1l-1.5,0.81l-0.37,0.83l0.32,0.93l-0.37,2.03l0.49,1.4l0.79,0.91l-1.33,2.11l-0.79,0.18l-1.6,-0.67l-2.39,0.83l-2.13,-0.25l-2.26,0.89l-1.99,0.33l-0.42,-0.94l1.19,-0.89l1.63,-3.37l0.31,-1.03l-0.21,-0.67l-4.66,-1.26l-0.05,-1.37l-2.13,-1.28l-0.24,-0.7l-2.28,-2.26l-2.83,-1.32l-0.6,-1.42l-1.02,-0.04l-2.04,1.13l-0.19,0.7l0.51,1.45l-0.26,0.47l-2.08,1.44l-0.22,0.83l0.25,0.57l-1.01,0.3l-0.25,-0.85l-0.97,-0.7l-4.43,-2.42l-2.27,-0.5l-2.24,-1.04l-2.64,-2.74l-2.6,-1.74l-0.26,-0.89l0.64,-0.67l1.1,-0.11l1.32,0.51l0.77,-0.71l0.28,-1.06l-0.17,-1.2l-3.14,-4.01l3.69,-0.06l0.68,-0.49l0.14,-0.84l-3.45,-3.32l-2.76,-1.62l0.3,-2.93l1.92,-2.86l0.89,-2.97l-0.3,-0.61l-1.61,-0.6l-1.79,0.3l0.22,-0.99l-0.44,-2.38l0.55,-0.15l0.3,-0.53l0.63,0.27l2.51,-0.09l0.48,-0.45l0.05,-0.62l-1.26,-1.31l-3.09,-1.11l-1.01,-0.88l0.03,-0.83l0.71,-1.15l-1.87,-1.28l0.32,-1.03l-1.29,-2.79l0.59,-0.56l0.11,-0.78Z\",\n            name: \"Serbia\"\n          },\n          MK: {\n            path: \"M629.75,577.29l1.84,0.12l0.78,-0.95l0.41,-2.59l3.61,-1.54l0.89,-0.05l1.45,1.15l0.65,0.06l0.91,-1.54l0.63,-0.43l3.04,-0.35l3.84,-1.29l2.05,0.27l2.48,-0.84l1.15,0.64l3.21,3.37l3.37,1.74l1.43,3.5l0.79,0.71l-0.73,1.84l-0.29,3.95l-1.62,0.11l-0.61,0.4l-0.51,2.19l-2.82,0.86l-4.13,-0.64l-2.65,0.45l-1.15,0.53l-1.97,2.46l-2.56,1.2l-2.25,-0.57l-1.24,0.65l-4.44,0.26l-0.63,-0.83l-2.8,-0.25l-0.69,-2.05l-1.24,-1.16l-1.01,-2.21l0.03,-1.94l-0.54,-1.92l0.88,-0.94l-0.14,-2.11l0.57,-2.22Z\",\n            name: \"Macedonia\"\n          },\n          SK: {\n            path: \"M655.85,455.69l-1.87,2.97l-1.26,3.23l-2.02,2.0l-0.31,2.96l-4.93,0.82l-2.05,-2.5l-1.8,-1.11l-5.19,0.8l-2.74,-0.69l-3.03,-0.07l-2.16,0.4l-2.33,4.11l-5.08,2.53l-0.54,0.2l-3.78,-1.56l-1.02,0.28l-1.32,1.71l-2.52,0.6l-4.73,0.38l-1.81,0.92l-0.78,1.39l0.31,1.5l-0.48,0.75l-7.63,0.4l-5.12,-0.11l-1.62,-0.65l-4.25,-3.08l-2.48,-0.39l-0.57,-0.4l-2.93,-5.87l-0.03,-0.76l1.03,-1.78l0.6,-2.25l1.91,-2.7l0.53,-0.25l3.99,0.56l2.05,-0.28l1.81,-0.81l2.23,-2.01l1.68,-0.56l0.66,-0.61l0.43,-2.19l0.57,-1.15l2.67,-1.34l0.77,-1.01l2.29,-1.67l3.09,-0.34l1.14,0.17l0.33,1.5l0.41,0.33l2.46,-0.07l1.61,-2.02l2.36,-1.35l2.4,3.23l1.74,0.5l0.15,1.45l-0.41,1.13l0.26,0.48l0.62,0.21l1.69,-0.45l1.76,0.65l0.5,-0.22l0.65,-1.5l0.65,-0.68l2.55,-1.15l3.34,-0.11l1.37,0.34l1.03,0.74l2.12,0.22l1.03,-0.56l0.94,-1.22l3.47,-0.19l3.82,0.29l3.33,1.18l0.92,0.68l0.88,1.68l6.68,2.35Z\",\n            name: \"Slovakia\"\n          },\n          MT: {\n            path: \"M547.69,672.17l-1.11,0.1l-0.87,-0.6l-0.01,-0.92l0.72,0.18l1.27,1.23ZM543.86,669.2l0.21,-0.04l0.18,0.07l-0.23,0.07l-0.16,-0.09Z\",\n            name: \"Malta\"\n          },\n          SI: {\n            path: \"M558.4,514.15l-0.58,0.36l-0.27,0.83l0.66,1.7l-0.87,0.29l-1.65,-0.15l-2.27,-0.83l-1.46,0.52l-0.51,-0.13l-1.82,-1.48l-0.69,-1.19l-0.57,-0.36l-0.96,0.41l-1.36,2.21l-0.59,0.31l-3.71,0.06l-1.44,-0.5l-1.47,1.32l-3.3,-0.75l1.3,-1.09l1.85,-0.21l0.49,-0.85l-0.67,-1.21l-1.48,-1.37l-1.87,-0.9l0.48,-2.4l-0.56,-0.5l-1.19,-0.12l1.78,-1.87l0.27,-0.99l-2.23,-1.02l-1.0,-0.0l-0.2,-0.4l0.21,-0.69l3.61,-2.34l0.41,-0.89l11.45,1.94l2.8,-1.69l1.79,-1.78l4.25,-0.61l3.12,0.21l2.65,-1.17l1.66,-0.2l2.52,0.56l0.72,-0.63l0.04,-1.7l0.63,-0.57l0.61,-0.26l2.29,0.09l0.53,2.01l0.65,0.71l0.07,0.9l1.15,1.33l-1.93,-0.14l-1.22,0.94l0.08,1.71l-2.19,0.06l-1.02,1.18l-0.8,0.41l-4.21,1.44l-0.67,1.31l0.16,0.75l0.85,0.93l-0.17,2.79l-4.89,2.01l-0.16,0.91l0.87,0.78Z\",\n            name: \"Slovenia\"\n          },\n          SM: {\n            path: \"M519.71,543.1l-0.45,-0.16l0.66,-0.49l0.03,0.12l-0.25,0.53Z\",\n            name: \"San Marino\"\n          },\n          UA: {\n            path: \"M653.07,467.62l-0.48,-1.02l-1.33,-0.03l0.12,-2.22l2.03,-2.04l1.29,-3.29l1.97,-3.29l3.27,0.94l0.74,-0.39l0.29,-0.58l-0.19,-0.78l-1.79,-1.47l0.38,-2.03l-1.1,-4.13l0.67,-1.03l4.45,-5.14l5.01,-4.84l4.05,-3.55l3.41,-0.56l1.93,-2.52l0.04,-1.69l-0.66,-1.89l-0.81,-1.03l1.48,-0.7l0.01,-0.92l-1.58,-1.38l-1.65,-3.31l-2.63,-3.21l0.21,-1.48l-0.93,-2.11l-0.01,-1.46l0.96,-0.36l1.05,0.07l2.34,0.93l2.54,-1.53l2.08,-1.99l1.03,-1.59l6.71,-0.55l2.72,-0.57l11.52,0.31l11.49,2.58l4.85,0.31l2.07,2.74l4.3,0.01l0.86,0.38l-0.14,1.19l0.77,0.66l0.82,-0.23l1.34,-1.79l2.04,0.55l0.94,-0.1l1.34,-0.76l5.35,1.07l0.77,1.59l1.26,0.46l1.86,-1.96l1.65,-0.54l1.52,-0.99l0.71,0.66l1.69,3.01l0.73,0.64l3.15,-0.84l8.03,-0.78l1.78,1.25l0.48,1.45l1.58,0.92l1.44,0.22l1.63,-2.14l-0.44,-2.15l-0.87,-2.05l0.63,-1.52l1.11,-2.22l1.14,-1.4l2.99,-2.68l1.16,-0.48l2.04,0.41l1.65,-0.95l2.97,-0.05l2.74,0.15l2.68,0.97l2.06,-0.07l2.35,-1.21l1.22,-3.0l0.71,-0.46l4.98,0.99l1.41,-0.1l3.32,-1.51l1.76,-0.22l2.24,0.36l3.78,-0.19l2.3,1.56l1.21,1.66l1.4,3.3l3.75,3.5l-0.11,0.61l-3.32,0.63l-0.34,0.35l-0.02,0.88l1.11,1.58l0.4,3.4l0.62,0.53l-0.82,1.11l0.12,0.5l0.5,0.29l3.42,0.12l3.05,1.17l4.64,-0.55l1.25,2.5l0.76,0.36l1.36,0.04l-0.19,1.29l0.94,2.76l0.76,1.25l-0.65,2.08l0.27,1.27l1.11,1.57l0.8,0.42l0.78,1.34l1.47,0.37l2.77,-1.54l2.87,0.47l2.51,2.23l1.11,-0.21l1.55,0.25l0.81,0.78l1.22,0.44l1.88,-1.45l4.96,-1.04l2.8,-1.15l0.83,0.08l2.01,1.97l0.34,1.37l1.43,1.96l4.69,3.37l1.87,-0.44l0.48,-1.59l0.62,-0.26l2.67,1.56l2.59,0.2l3.77,2.27l1.65,0.09l1.78,-0.6l1.55,1.86l2.32,0.35l4.21,2.69l1.5,0.14l2.03,-0.5l0.42,0.22l-0.38,2.28l0.93,1.25l0.02,0.88l-0.71,1.68l-2.33,2.28l-1.74,0.48l-0.99,0.5l-0.2,0.47l0.33,0.98l0.8,0.9l3.08,1.14l-2.66,0.06l-1.31,1.36l-0.82,2.61l0.3,0.5l2.33,0.73l0.65,2.74l-0.56,1.14l0.38,0.56l1.14,0.33l-0.98,1.32l-1.48,3.53l0.0,1.35l-0.38,0.48l-4.48,0.18l-6.63,-0.37l-1.19,0.33l-1.59,2.23l-0.97,0.76l-1.66,0.71l-2.07,0.29l-1.24,1.08l-0.43,2.63l-0.72,1.43l0.07,0.65l0.94,0.53l-1.01,1.32l0.1,1.34l-4.77,-0.22l-3.93,0.37l-2.89,2.7l-1.6,0.01l-2.4,0.74l-1.66,0.94l-1.64,1.67l-1.38,-0.75l-1.76,0.02l-1.92,0.57l-2.01,1.22l-1.01,0.2l-2.4,-0.34l-2.68,0.72l-5.92,4.2l-0.85,1.26l-0.06,-0.98l-0.84,-1.19l-0.64,-0.01l-2.18,2.85l-2.86,1.3l-0.28,2.37l0.9,3.43l1.61,3.06l3.22,4.28l1.58,1.61l1.23,0.7l1.53,0.14l2.77,-1.34l0.99,-0.18l2.36,0.49l1.18,-0.93l1.12,-0.43l1.51,-0.06l3.32,0.89l-1.49,2.39l-0.71,2.57l-1.95,0.58l-2.39,-0.07l-2.35,0.4l-2.62,-1.59l-1.47,-0.29l-1.5,0.36l-1.71,2.08l-2.67,1.33l-0.94,1.5l-2.45,-0.32l-2.42,0.27l-3.46,1.46l-2.67,3.13l-2.71,1.84l-2.1,0.57l-1.96,-0.18l-1.25,-0.53l-2.53,-1.83l1.01,-1.84l1.11,-3.8l-0.15,-1.47l-0.78,-2.16l-2.21,-1.51l-1.96,0.2l-0.87,-0.34l-3.79,-2.62l-2.11,-0.17l-2.05,0.49l-0.9,-0.76l8.2,-5.54l1.9,-0.29l2.58,-1.26l2.69,-1.85l0.16,-0.43l-0.38,-1.45l-0.61,-1.16l-0.44,-0.2l-2.12,0.61l-3.21,-1.95l-3.47,0.87l-2.0,-0.12l-4.23,0.79l-5.91,-2.98l-1.5,-0.45l-1.23,0.07l-0.17,-0.18l0.26,-0.11l2.25,-0.47l0.37,-0.66l-0.06,-0.73l-0.3,-0.35l-2.07,-0.55l-1.91,-0.16l-1.14,-0.62l9.74,1.35l2.9,-2.06l0.45,-0.95l-0.45,-0.17l-2.95,0.84l-2.9,-0.52l-1.01,-0.69l-0.86,-1.03l-0.34,-1.11l0.24,-1.25l-0.37,-2.3l-1.35,-2.95l-1.18,-1.12l-0.51,-0.02l-0.12,0.49l2.04,4.82l-0.14,3.34l-0.31,0.96l-0.98,0.24l-2.85,-0.46l0.34,-1.53l-0.17,-0.42l-0.46,0.01l-1.0,0.76l-1.19,1.74l-0.91,0.23l-2.56,-0.19l-4.62,1.24l-2.15,5.06l-1.92,2.66l-3.91,3.98l-4.21,1.88l-0.96,0.3l-1.74,-0.36l-1.2,0.75l-0.41,0.86l-0.01,1.39l0.97,1.2l0.63,3.62l-1.51,-1.33l-2.41,-0.85l-2.58,0.32l-2.62,1.37l-1.64,0.47l-1.56,-0.31l-0.55,0.61l0.02,0.59l-3.8,-0.88l-1.69,-0.86l-1.12,-1.36l0.85,-0.48l2.64,-0.36l0.43,-1.31l-0.26,-1.46l3.09,-2.98l0.2,-1.44l1.39,-0.67l1.45,-1.41l0.77,-2.41l-0.83,-1.85l-0.2,-2.07l0.28,-0.4l2.58,-1.04l0.09,2.09l0.34,0.39l0.96,-0.28l0.59,-0.99l0.99,0.29l0.82,-0.29l2.2,0.94l1.43,-0.79l1.79,1.6l3.15,-0.45l1.01,-0.9l-0.07,-0.59l-2.61,-1.84l0.21,-3.09l-0.93,-1.9l-4.09,-2.24l-0.11,-1.31l-0.67,-0.88l0.48,-2.47l-0.27,-0.75l-2.11,-0.98l-0.72,-0.85l-2.54,-1.77l-0.12,-0.51l0.82,-2.15l0.35,-2.11l-0.29,-2.08l-1.12,-1.57l-0.78,-0.17l-1.42,0.65l-1.15,-0.9l-1.49,-2.29l-3.33,-0.54l-0.94,0.81l-0.37,-0.7l-0.98,-0.21l-0.04,-0.93l-0.76,-0.44l-2.59,-0.27l-0.22,-0.69l-0.56,-0.44l-1.12,-0.28l-1.94,-1.43l-4.0,-1.06l-1.85,1.0l-1.09,-0.18l-1.37,0.99l-5.24,-0.22l-2.8,1.62l-0.38,0.61l-4.06,0.92l-0.67,1.8l-1.39,1.88l-9.41,1.42l-4.0,1.52l-1.37,1.36l-2.09,0.42l-4.14,-3.56l-1.48,-0.38l-4.17,0.7l-1.51,-0.63l-0.93,0.12l-4.48,-0.97l-3.48,0.03l-2.69,-1.58l-1.04,-0.1l-1.43,1.47l-2.08,0.85l0.02,-1.1l-1.22,-1.43l-1.5,-0.07l-1.1,-0.44l-0.93,-1.27l-2.27,-0.88l-0.94,-1.63Z\",\n            name: \"Ukraine\"\n          },\n          SE: {\n            path: \"M520.76,323.75l2.31,0.87l1.42,-0.61l0.14,-0.52l-1.76,-2.91l2.49,-0.3l0.9,-1.54l-0.49,-1.97l-2.39,-1.12l-1.88,-2.97l-2.08,-1.66l-3.6,-6.12l-1.32,-4.24l-0.51,-0.26l-0.86,0.28l-0.98,-4.47l-1.97,-1.01l-0.41,-4.77l-0.3,-0.35l-1.93,-0.51l-1.22,-2.08l-0.43,-4.6l-1.38,-0.8l-0.89,0.07l0.29,-1.68l-0.86,-7.72l-0.81,-2.41l0.49,-1.42l0.99,-0.13l1.05,0.84l1.08,2.44l1.23,0.55l1.65,-0.68l1.12,-2.03l1.2,-5.71l-1.57,-5.83l2.04,-2.13l1.28,-3.25l0.59,-0.43l2.52,-0.49l1.73,-1.15l2.66,-2.86l0.5,-4.2l0.98,-2.97l-0.5,-2.21l-3.21,-7.03l-0.24,-1.94l1.98,-0.63l2.88,-0.11l0.56,-0.37l1.78,-3.52l0.73,-2.76l-1.76,-2.27l-2.22,-2.02l-1.56,-0.72l-4.24,-2.89l1.8,-9.09l0.16,-2.55l-2.56,-6.53l0.33,-2.72l-0.41,-4.04l1.37,-1.57l0.05,-0.47l-2.85,-5.97l2.76,-4.11l-0.39,-2.32l6.46,-7.29l1.66,-1.21l2.57,-1.06l2.85,-0.52l10.18,1.32l0.91,-0.69l0.88,-1.26l1.06,-1.69l0.15,-2.08l-0.38,-2.85l-0.59,-1.74l-5.55,-2.58l6.02,-7.64l5.01,-8.02l0.94,-7.63l1.16,-3.36l-1.16,-7.19l6.39,-0.83l4.58,-1.92l1.56,-1.27l-0.64,-4.3l1.68,-1.31l4.43,-4.91l7.14,-6.7l0.4,-2.56l-1.05,-2.31l-3.01,-3.81l0.7,-1.43l3.43,-1.05l1.77,-1.7l2.84,-6.35l5.14,-3.08l1.96,-1.6l7.81,3.15l0.47,-0.13l2.84,-3.95l0.73,-1.63l-0.2,-7.55l1.64,-0.55l0.91,-0.15l5.22,1.45l3.88,0.18l11.04,3.05l1.69,0.08l3.69,-2.87l-0.1,-0.68l-2.97,-1.22l1.87,-1.21l2.42,-3.65l0.39,-2.24l-0.15,-1.32l-2.42,-2.49l5.83,-0.32l3.49,1.28l0.41,1.76l3.54,1.83l3.19,2.43l0.7,0.87l7.17,3.99l2.75,1.04l2.32,0.34l5.63,1.69l0.91,0.52l3.19,2.48l1.11,2.74l1.96,0.38l2.08,2.53l2.08,1.38l-1.82,1.61l-0.02,4.22l0.55,1.9l-1.01,2.11l-0.15,1.45l0.57,0.6l3.27,0.52l0.47,1.84l-1.41,1.11l-0.54,0.92l0.17,2.66l0.56,1.56l3.57,4.32l0.53,1.22l-1.21,2.31l-0.38,2.92l-1.22,1.48l-0.86,0.53l-0.43,1.07l-0.12,1.6l0.36,2.86l0.77,1.59l2.15,1.04l1.83,3.4l1.28,3.66l-3.01,0.43l-2.89,-1.0l-1.28,0.49l-5.02,0.43l-1.55,1.09l-2.27,-1.04l-2.3,-1.86l-0.51,0.01l-1.64,1.38l-0.76,0.19l-1.06,-1.24l-1.24,-0.12l-1.65,2.67l-0.35,3.09l-1.94,-0.25l-0.44,0.48l0.14,0.6l0.53,0.47l-2.9,0.43l-0.18,0.93l0.46,0.62l-0.61,0.63l-4.41,0.46l-0.55,0.67l-0.09,0.87l0.3,0.61l0.77,0.46l0.08,0.6l-1.88,-1.4l-0.5,0.08l-0.3,0.57l1.85,2.46l0.35,1.44l-1.93,2.38l-3.11,2.99l-0.85,1.59l0.1,0.49l1.82,1.74l1.54,3.9l1.61,1.71l-0.59,1.44l-2.79,1.72l-3.32,2.76l-3.43,6.64l-1.04,0.81l-2.98,1.11l-1.22,1.15l-2.17,1.25l-4.05,1.19l-1.79,1.56l-0.81,1.54l-0.53,0.07l-2.04,-1.05l-0.54,0.31l-0.16,1.14l-1.25,-0.75l-0.51,0.08l-0.97,1.16l-0.67,1.65l-2.53,2.16l-2.77,-0.4l-0.7,0.56l0.41,0.72l-2.6,0.41l-0.39,0.27l-0.94,2.25l-2.29,0.6l-0.72,0.96l0.32,0.59l2.05,0.13l-0.3,1.29l-2.74,0.93l-1.07,1.24l-0.71,-0.02l0.17,-0.42l-0.38,-0.55l-1.69,0.04l-0.49,-0.91l-0.6,-0.13l-0.37,0.29l0.08,1.31l1.02,2.21l-0.79,1.02l-0.03,0.58l1.47,0.79l-0.87,0.37l-1.41,1.48l-1.42,0.04l-1.13,1.05l-0.71,-0.0l-2.16,-1.18l-0.52,0.21l-0.53,1.86l0.78,2.11l2.2,1.98l-1.12,1.3l-1.84,6.3l0.91,3.42l-2.8,-0.75l-0.53,0.45l0.23,1.26l-1.12,1.82l0.44,2.39l-0.34,1.5l0.79,1.46l-0.42,0.9l0.53,6.73l0.99,2.76l-0.36,2.22l1.62,1.58l3.13,0.25l0.85,1.75l0.4,0.25l1.24,-0.12l2.49,-0.95l0.7,1.43l2.09,2.15l1.35,1.02l1.94,0.48l1.89,1.5l-0.11,2.2l1.01,0.75l2.41,0.77l1.86,2.64l0.72,2.14l-0.21,1.13l-3.27,1.95l-1.93,1.86l-3.29,1.82l-0.78,0.74l-0.61,0.26l-0.88,-0.13l-2.7,1.43l-0.19,0.48l0.54,0.87l2.07,0.26l1.22,-0.32l0.88,-0.73l1.45,-0.01l1.59,-0.76l0.43,0.17l0.48,0.84l-2.58,0.83l-0.54,2.14l-1.03,1.23l-2.47,0.91l-3.56,2.1l-1.06,-0.11l-1.26,0.94l-2.84,1.13l-1.56,1.59l-3.24,1.35l-1.66,1.1l-8.84,-0.19l-1.55,0.56l-0.25,0.42l2.6,0.99l1.39,-0.17l4.0,0.51l1.35,1.35l-3.09,0.88l-0.3,0.52l1.51,4.14l-0.88,1.13l-0.06,4.42l-1.32,0.36l-0.56,1.98l0.4,1.19l0.25,3.77l0.62,1.3l-0.25,1.17l-2.12,3.38l0.05,1.51l0.64,2.28l-2.37,6.77l-1.76,2.26l-0.93,1.78l-2.08,5.31l-1.98,1.63l-2.71,-1.1l-1.67,0.06l-2.41,0.6l-3.73,-0.4l-3.83,0.25l-0.92,0.53l-0.18,0.46l0.43,1.51l-0.8,0.15l-1.56,-0.48l-2.19,1.42l-1.9,1.7l-0.71,1.14l-0.17,2.38l1.76,3.55l-2.0,2.18l-1.06,0.07l-3.83,-0.68l-6.49,1.54l-5.29,-1.1l0.53,-1.06l0.42,-5.2l-0.52,-1.24l-1.43,-1.42l-3.24,-4.83l-1.03,-2.15ZM610.35,291.1l-0.44,1.16l-0.16,-0.02l-0.35,-0.5l0.95,-1.01l0.99,0.04l-0.99,0.33ZM608.6,293.08l-0.69,0.4l-0.58,1.21l-1.9,1.01l-0.31,4.36l1.23,1.47l-1.23,0.69l-1.15,2.25l-2.03,0.82l-0.99,0.77l-1.3,1.61l-0.6,1.99l-1.6,0.85l1.52,-2.4l-0.04,-0.53l-0.96,-0.91l-1.29,-2.5l0.57,-1.33l-0.21,-4.03l3.53,-3.79l1.7,-1.37l2.27,-0.59l0.99,0.53l0.56,-0.21l0.42,-1.14l0.49,-0.18l1.6,1.03ZM602.8,260.19l0.1,-0.33l0.6,-0.21l-0.46,0.3l-0.23,0.24ZM600.15,269.23l0.11,-0.28l0.27,-0.3l-0.36,0.57l-0.02,0.01ZM574.47,322.99l-0.65,0.71l-0.32,-0.99l0.14,-4.77l2.86,-5.75l1.39,-0.63l3.64,-8.06l0.2,-0.26l0.38,0.11l-0.59,0.73l0.06,1.24l-2.27,4.27l-0.62,2.77l-0.83,0.77l-3.37,9.86Z\",\n            name: \"Sweden\"\n          },\n          AT: {\n            path: \"M481.24,489.9l0.13,-0.58l-1.06,-2.68l1.05,-2.02l0.09,-1.67l1.32,-0.27l0.2,-0.84l3.5,1.6l0.51,1.42l1.54,0.43l-0.16,1.17l0.45,0.42l1.9,-0.64l0.89,-1.0l0.56,-1.07l0.32,-1.9l2.68,-0.0l2.56,0.45l1.56,1.96l1.23,0.23l3.45,-0.54l1.5,-1.13l4.2,-1.6l6.32,-0.62l0.56,-0.68l-0.02,-0.91l1.71,0.39l1.72,0.89l2.72,-0.54l0.93,0.41l0.03,1.0l0.54,0.69l2.21,1.18l0.81,-0.01l0.6,-0.84l0.29,-2.75l-0.54,-1.0l-1.45,-0.25l0.66,-1.25l-0.01,-1.43l-2.62,-3.34l0.61,-1.04l3.51,-1.91l3.25,-0.97l0.81,-0.58l0.62,-0.8l0.73,-2.89l2.33,0.93l1.08,-0.42l0.94,-0.96l0.25,-2.75l1.82,1.08l1.04,1.69l1.99,0.43l2.41,0.04l1.64,-0.85l2.7,0.45l0.45,-0.33l0.19,-1.16l1.34,-1.55l1.2,0.04l0.39,-0.27l0.74,-3.74l0.73,0.04l1.42,0.91l2.0,-0.47l5.16,1.96l1.7,-0.05l3.21,1.91l4.25,0.28l1.59,-1.06l5.12,1.61l0.79,1.59l-1.13,2.46l0.03,1.3l1.48,3.33l1.49,2.65l0.58,0.5l-0.55,0.63l-0.13,0.95l-0.66,1.21l0.38,2.0l-3.35,0.39l-2.64,-1.21l-0.78,0.17l-1.67,1.19l-0.17,0.52l0.4,0.53l2.63,0.76l0.36,0.9l-0.61,1.28l-2.51,1.02l0.22,2.14l-0.57,1.05l0.29,1.33l0.71,0.37l-0.38,1.52l-1.55,0.13l-1.08,0.52l-3.02,2.24l-0.95,1.05l-0.06,1.65l-2.43,-0.52l-1.83,0.22l-2.62,1.17l-3.01,-0.22l-4.42,0.64l-0.86,0.49l-1.18,1.41l-2.58,1.56l-9.66,-1.84l-4.61,-0.75l-4.38,-0.3l-9.29,-1.69l-1.1,-0.46l-3.08,-3.86l-0.22,-0.59l0.9,-1.44l-0.7,-0.65l-5.54,1.63l-3.29,-0.2l-4.01,0.41l-1.66,0.81l-1.47,2.36l-1.02,0.33l-2.05,-0.36l-1.13,-0.95l-2.83,-0.17l-0.56,-1.63l-1.1,-0.55l-3.07,2.23l-3.13,-1.32l-0.64,-1.3l-3.07,-0.87Z\",\n            name: \"Austria\"\n          }\n        },\n        height: 790.3360148034734,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 11.5\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"fr_mill\", {\n        insets: [{\n          width: 100,\n          top: 600,\n          height: 122.71220181016422,\n          bbox: [{\n            y: -640515.9263248637,\n            x: -6082830.163693012\n          }, {\n            y: -235112.28629661424,\n            x: -5752460.702426716\n          }],\n          left: 0\n        }, {\n          width: 50,\n          top: 440,\n          height: 42.928059423707,\n          bbox: [{\n            y: -1855676.1027106678,\n            x: -6882793.3793751765\n          }, {\n            y: -1778355.8860469644,\n            x: -6792735.480530344\n          }],\n          left: 0\n        }, {\n          width: 50,\n          top: 510,\n          height: 57.21127928831266,\n          bbox: [{\n            y: -1668974.3969949444,\n            x: -6819419.302373176\n          }, {\n            y: -1615651.747314515,\n            x: -6772817.783980524\n          }],\n          left: 0\n        }, {\n          width: 50,\n          top: 700,\n          height: 42.31095479952366,\n          bbox: [{\n            y: 2357030.8412201093,\n            x: 6150785.273719754\n          }, {\n            y: 2416319.6251247157,\n            x: 6220848.433704593\n          }],\n          left: 740\n        }, {\n          width: 40,\n          top: 690,\n          height: 55.96611426730096,\n          bbox: [{\n            y: 1415975.8044653006,\n            x: 5016650.333473452\n          }, {\n            y: 1454680.1669724442,\n            x: 5044313.045465417\n          }],\n          left: 640\n        }, {\n          width: 900,\n          top: 0,\n          height: 749.2159980728637,\n          bbox: [{\n            y: -6244653.662562441,\n            x: -571670.6975907331\n          }, {\n            y: -4882430.695155527,\n            x: 1064707.428102987\n          }],\n          left: 0\n        }],\n        paths: {\n          \"FR-28\": {\n            path: \"M407.07,246.39l-2.7,-0.64l-6.08,2.98l-1.29,0.33l-1.3,-0.03l-4.61,-1.88l-2.65,0.56l-2.46,-3.3l-2.56,-2.35l-1.46,-1.98l-0.99,-0.54l-2.75,-0.62l-0.56,-2.81l-0.76,-0.98l-0.97,-0.09l-2.55,1.38l-1.99,0.58l-3.85,0.17l-1.75,0.55l4.24,-2.29l0.59,-0.56l0.14,-0.72l-1.12,-1.06l-3.14,-0.41l-2.36,-1.54l1.12,-0.96l0.25,-1.0l-1.86,-3.44l0.03,-2.94l-1.33,-1.67l0.61,-1.35l2.29,-0.4l5.6,-2.3l2.13,-1.95l0.67,-1.64l1.22,-1.8l-0.16,-0.83l-1.74,-2.11l0.08,-3.7l-3.65,-3.73l-2.55,-1.62l-1.61,-2.81l-0.36,-3.23l1.82,-1.67l1.34,-0.77l5.76,-1.41l2.04,-0.07l0.74,-0.36l1.7,-2.02l3.48,-0.35l0.63,-0.53l0.22,-1.53l3.0,1.67l3.49,-0.02l1.93,0.63l4.71,-2.07l1.42,-1.16l0.69,-1.87l0.95,-1.4l1.34,-1.03l2.49,-1.16l1.05,-1.01l0.26,-1.64l-0.52,-1.68l0.12,-0.44l2.22,-1.39l3.12,5.29l1.41,1.78l0.26,1.59l-0.56,2.83l0.31,1.68l0.56,0.67l1.6,0.81l-0.36,1.11l-1.35,1.63l-0.2,0.71l0.26,0.98l1.48,0.99l0.55,1.38l1.5,1.71l3.83,2.4l0.73,2.38l2.38,1.58l0.52,0.67l0.38,1.69l-0.03,2.29l1.38,2.04l1.1,0.79l4.59,1.88l2.43,-0.21l0.24,2.38l2.15,2.42l0.66,2.91l0.56,0.84l1.29,0.92l-1.7,2.02l0.05,0.99l0.8,0.61l-1.24,2.16l0.67,3.68l-0.27,0.93l-0.37,0.49l-2.85,1.06l-1.77,4.01l-0.98,1.3l-1.0,0.81l-1.08,0.27l-1.41,-0.35l-1.39,0.17l-3.64,1.38l-3.25,-0.59l-1.79,0.16l-1.29,0.78l-1.79,2.16l-0.7,0.16l-1.79,-0.73l-1.17,0.14l-1.18,0.96l-0.45,1.05l0.17,2.31Z\",\n            name: \"Eure-et-Loir\"\n          },\n          \"FR-29\": {\n            path: \"M25.63,242.25l0.98,-1.98l0.98,0.49l19.62,-3.77l3.65,0.88l0.91,-0.32l0.5,-0.76l0.62,-2.51l-0.36,-1.04l-0.81,-0.89l-0.58,-2.39l-1.01,-0.81l-2.92,-0.69l-0.66,-1.14l-0.5,-0.27l-1.37,0.44l-3.11,-1.71l-2.01,0.46l-2.96,4.7l-0.73,0.21l0.57,-1.39l-1.14,-2.33l0.91,-1.36l-0.39,-1.22l-1.09,-0.38l-3.21,-0.11l-0.03,-1.0l1.84,0.17l0.95,-0.24l0.41,-0.81l-0.22,-0.93l0.98,-2.21l0.53,-0.43l0.46,0.19l-0.71,2.55l0.23,0.48l1.87,0.72l5.36,-0.32l1.36,0.83l1.04,0.18l3.66,-0.78l2.04,-0.12l0.21,0.35l1.46,0.44l5.01,-0.91l0.33,-0.98l-0.42,-0.4l-1.83,0.11l-0.45,-0.19l-0.2,-0.74l-0.68,-0.16l-1.09,0.67l-1.22,-1.03l-2.07,0.18l0.59,-0.25l0.44,-0.73l1.79,-1.5l0.1,-0.44l-0.38,-0.25l-1.24,0.08l-1.29,0.8l0.0,-0.47l-0.85,-0.4l-0.96,1.04l-0.96,-0.2l-1.87,1.11l-0.5,0.08l-0.43,-0.77l-0.56,-0.05l-1.09,0.68l-1.02,0.2l3.24,-3.36l6.46,-3.39l0.19,-0.5l-0.47,-0.25l-4.22,1.6l-4.19,0.6l-5.77,2.77l-2.94,0.62l-1.85,0.8l-1.08,0.12l-4.35,-1.11l-0.58,0.4l-0.15,1.12l-0.27,0.13l-3.57,-0.23l-0.68,-1.74l0.68,-0.06l0.36,-0.44l-0.1,-1.01l-1.05,-2.18l-0.09,-1.34l0.28,-1.34l0.6,-0.89l1.01,-0.27l0.3,-0.88l-1.49,-1.16l0.52,-1.93l2.34,-3.42l1.07,0.45l0.46,-0.14l-0.19,-0.71l0.54,-0.32l2.86,-0.47l3.08,1.22l1.04,-0.16l0.21,-0.65l-1.67,-2.31l0.37,-0.22l2.65,0.59l1.24,-0.03l0.38,-0.34l-0.26,-0.44l-1.23,-0.43l0.07,-0.55l-0.35,-0.44l4.17,-0.0l3.43,-1.04l1.35,-0.03l0.38,-0.31l-0.2,-0.45l-0.86,-0.45l1.38,-0.23l3.24,-1.36l1.36,0.05l0.84,0.86l-0.39,1.52l0.42,0.5l1.58,-0.18l2.35,-1.07l2.95,0.58l0.4,-0.4l0.0,-0.59l-1.04,-0.57l0.11,-0.28l1.91,-1.43l2.45,-0.6l1.27,0.07l1.03,0.52l0.71,-0.39l0.36,0.69l0.75,0.24l1.01,-1.05l-0.02,-1.18l4.45,-1.51l-0.24,1.62l0.55,0.4l-0.25,0.84l1.04,1.07l-0.07,1.9l0.48,-0.03l1.68,-1.43l0.9,-0.29l-0.28,0.38l0.1,0.75l3.35,2.74l0.61,-0.01l0.45,-0.54l-0.24,-0.79l0.28,-0.74l-0.54,-1.41l0.79,0.35l0.21,-0.4l0.01,-2.72l0.24,-0.43l0.93,0.16l0.45,-0.85l1.48,0.59l2.89,-0.11l2.82,1.61l2.57,-0.38l0.01,5.63l0.41,1.35l3.32,3.92l0.57,1.55l-0.36,1.83l-1.33,2.12l-0.1,1.26l0.52,0.77l1.4,0.36l0.66,0.75l0.01,0.67l-0.6,1.06l-1.9,0.16l-0.76,0.41l-0.39,1.02l0.05,1.22l2.94,1.69l0.6,2.77l2.0,4.19l-0.39,1.62l-1.49,2.95l0.56,2.13l-9.89,3.86l-1.13,1.08l-0.47,1.46l0.1,1.1l3.11,3.22l2.08,5.24l1.33,1.07l3.63,-0.54l1.28,0.09l3.08,1.88l1.56,0.51l3.03,-0.58l0.9,0.18l0.66,0.71l0.41,1.48l-0.28,3.56l-0.88,1.31l-1.5,-0.11l-0.95,0.28l-0.67,0.77l-0.51,1.32l-0.62,0.5l-0.54,0.09l-1.97,-0.83l-1.48,0.68l-0.82,2.17l0.47,2.09l-2.3,-0.46l-2.06,0.0l-1.6,-1.08l-2.25,0.1l-0.95,-0.29l-0.44,-0.91l-0.74,-0.41l-3.29,1.44l-0.96,-0.68l-3.48,0.2l-1.22,-1.97l-0.89,-0.77l0.11,-1.0l-0.37,-0.51l-1.34,-0.44l-0.26,-0.87l-1.15,-1.13l-1.72,-1.0l-1.75,-0.32l-0.44,0.53l0.51,1.46l-0.36,0.96l-0.24,0.22l-0.49,-0.49l-1.37,0.27l-0.79,0.62l-1.44,-1.0l-2.43,-0.67l-0.69,-0.82l-1.04,-2.67l-0.42,0.16l-0.7,1.27l0.43,1.31l1.4,1.55l-1.0,0.23l-0.97,0.66l-0.91,-1.34l-1.28,0.04l-0.48,1.28l0.73,0.75l-0.22,0.89l0.4,0.4l1.27,0.0l-1.81,1.5l-2.27,0.79l-8.52,-0.35l-0.07,-1.48l1.2,-0.18l0.52,-0.76l-0.21,-1.72l-1.54,-4.18l-0.96,-1.47l-2.99,-3.31l-6.1,-3.99l-1.18,0.45l-1.3,1.04l-1.84,-1.46l-3.15,-0.06l-3.8,-0.92ZM1.37,208.95l2.5,-0.92l1.47,0.95l-2.48,1.11l-0.61,-1.01l-0.88,-0.14Z\",\n            name: \"Finist\\xe8re\"\n          },\n          \"FR-22\": {\n            path: \"M104.04,181.46l-0.28,0.54l0.32,0.6l2.41,-0.01l1.55,-1.18l5.84,-2.09l1.17,0.0l1.67,-1.78l0.55,0.11l0.3,0.85l-0.03,1.41l-0.4,1.28l-0.83,1.08l0.5,1.21l0.41,0.18l0.97,-1.9l1.78,-1.89l1.89,-1.51l0.81,0.06l1.06,-1.09l0.51,-0.13l0.85,0.83l-0.4,1.97l0.68,0.68l-1.05,2.42l-1.65,2.02l-0.1,0.85l0.4,0.4l0.8,-0.2l3.03,-4.81l0.76,0.15l1.33,-0.56l0.67,0.24l-0.02,0.75l-1.71,1.0l-0.01,1.15l2.48,1.16l4.01,0.41l0.01,1.2l-0.8,0.72l0.21,0.84l1.94,1.27l1.37,1.73l3.87,2.85l0.88,3.1l-0.26,0.69l0.22,0.77l2.78,1.74l3.18,1.32l-1.16,1.99l1.46,0.52l1.88,1.65l0.62,-0.24l0.25,-2.13l2.16,0.1l1.16,-0.4l3.22,-3.61l5.89,-2.95l0.99,-1.12l0.0,-0.53l-0.84,-0.45l1.49,-0.39l1.05,0.13l0.44,0.89l0.49,0.2l3.51,-1.61l2.1,-2.09l0.67,0.82l1.02,0.23l-1.01,1.46l-1.68,1.58l0.05,0.62l1.51,0.76l3.43,-2.2l0.62,2.37l0.78,0.42l0.63,2.14l0.57,0.3l1.25,-1.02l0.75,0.88l1.35,-0.4l0.22,-0.89l-0.64,-0.57l0.93,-0.86l1.16,0.66l0.55,-0.01l0.02,-0.55l-1.01,-1.64l2.26,-0.68l2.61,-0.22l1.31,2.11l0.42,1.64l1.16,0.92l-0.26,1.06l1.54,2.0l0.32,0.9l-0.23,1.64l0.21,0.41l2.88,-1.61l-0.12,-0.77l0.31,-0.32l1.0,3.2l0.07,0.98l-0.5,1.15l-1.56,2.03l-0.55,1.44l1.21,5.85l-0.19,0.43l-1.6,0.61l-0.26,0.89l0.25,2.37l-1.06,1.3l-1.44,-0.16l-1.87,-0.79l-1.86,-0.12l-1.43,0.93l-1.63,1.7l-2.5,0.01l-0.83,0.43l-0.6,0.93l-0.51,1.8l-1.36,0.88l-0.58,0.89l-0.84,2.78l-3.24,2.24l-1.18,0.08l-1.98,1.13l-1.07,-0.2l-1.02,-1.98l-0.71,-0.74l-2.2,-0.9l-5.18,0.18l-1.12,0.38l-0.78,1.34l-0.32,3.61l-0.63,1.03l-3.24,2.8l-1.93,1.02l-0.89,-0.31l0.03,-6.22l-1.02,-0.8l-3.85,1.09l-2.18,1.62l-1.52,-2.73l-1.06,-0.54l-2.3,-0.42l-4.05,-2.12l-1.96,-0.25l-3.07,0.85l-0.87,-2.72l-1.63,-0.71l-3.91,-0.25l-1.45,0.38l-0.67,0.79l-0.52,1.85l-0.51,0.69l-0.75,0.34l-7.76,0.9l-1.49,-0.44l-1.57,-1.45l-4.69,1.36l-0.71,-0.6l-0.17,-1.41l-0.94,-0.58l-6.12,0.21l0.62,-0.67l-0.63,-2.09l1.45,-2.84l0.43,-1.94l-0.2,-0.94l-1.84,-3.43l-0.68,-2.96l-1.07,-0.87l-1.75,-0.64l0.16,-1.46l2.41,-0.37l0.67,-0.68l0.36,-1.88l-0.59,-1.08l-1.99,-0.83l0.03,-0.79l1.74,-3.13l0.01,-1.29l-0.67,-1.83l-3.26,-3.8l-0.36,-1.12l-0.02,-4.22l2.89,0.27l1.04,-0.44l0.21,-0.49l-0.71,-3.08l2.98,-0.46l0.33,-0.33l-3.03,-3.0l-0.19,-0.98l2.29,-1.26l1.58,-2.51l0.68,0.39l1.86,0.1l2.17,1.06Z\",\n            name: \"C\\xf4tes-d'Armor\"\n          },\n          \"FR-23\": {\n            path: \"M407.84,404.16l2.43,-1.5l1.15,-1.7l-0.27,-0.62l-1.4,-0.23l-1.46,-5.31l-2.08,-1.27l-0.26,-0.59l0.44,-2.8l-0.54,-1.42l-1.49,-1.67l-3.65,-1.46l-0.95,-1.46l-0.08,-1.94l3.24,-5.87l0.11,-1.78l-1.22,-1.12l1.46,-0.82l3.93,-3.54l0.68,-0.15l2.17,0.53l2.02,-0.06l0.36,1.35l0.7,0.52l1.01,0.19l1.02,-0.2l1.87,-1.33l3.01,0.41l0.9,-0.2l1.03,-0.98l0.25,-2.59l0.71,-0.54l0.76,0.32l1.92,1.93l0.96,0.16l2.07,-1.12l1.08,-0.24l5.41,0.14l2.45,0.84l3.5,0.01l2.22,0.72l3.19,-0.59l5.83,0.29l2.01,2.5l1.67,1.44l0.91,2.78l0.59,0.64l0.74,0.43l2.88,0.63l0.67,0.63l1.08,2.07l0.77,0.02l0.86,-0.61l0.63,0.2l3.01,4.0l1.01,3.07l2.11,3.67l-0.39,3.35l0.22,1.7l2.06,4.03l-0.15,3.39l-1.62,1.78l-1.56,3.24l-2.36,2.46l-2.3,0.1l-4.07,3.26l0.03,1.36l1.66,2.11l0.73,2.07l0.5,0.47l1.47,0.35l0.87,0.8l-1.59,1.22l-1.28,0.53l-4.46,-0.26l-0.54,0.33l-1.09,1.7l-2.01,0.86l-0.63,-0.08l-6.99,-3.85l-4.38,-0.7l-1.8,-1.52l-1.17,-0.47l-1.17,0.08l-1.19,0.61l-1.14,1.13l-1.47,2.58l-3.43,0.58l-1.46,-0.05l-1.05,-0.8l0.64,-1.91l0.16,-2.73l-1.27,-1.93l-4.16,-1.9l-1.02,-0.88l-1.0,-1.64l-0.86,-0.45l-1.58,-0.05l-4.36,1.16l-1.89,-0.21l-0.58,-1.04l0.41,-3.19l-0.67,-1.02l-1.19,-0.57l-3.98,-0.11l-0.45,-0.43l0.14,-1.22Z\",\n            name: \"Creuse\"\n          },\n          \"FR-21\": {\n            path: \"M575.96,257.27l0.42,-2.75l1.05,-2.73l2.12,-1.57l13.22,-1.52l1.29,-0.82l0.21,-1.86l1.09,-0.89l1.41,-0.3l3.05,0.51l2.38,-0.98l2.0,1.2l4.19,1.0l-0.48,1.26l0.41,0.79l2.84,0.99l0.59,0.52l-1.02,1.96l0.47,1.65l1.15,0.43l0.67,-0.37l0.54,-0.83l0.47,-0.03l4.35,5.21l1.1,2.15l0.05,1.03l-2.6,0.55l-0.58,0.46l-0.24,0.88l1.41,1.97l0.59,3.57l0.48,0.95l0.76,0.58l1.41,0.03l1.38,-1.3l0.41,0.07l2.15,2.8l2.67,1.55l2.02,-0.25l1.44,-1.65l0.75,-0.28l0.64,1.53l0.67,0.7l3.65,2.12l0.68,2.08l0.72,0.4l0.98,-0.16l2.08,-1.37l1.56,1.15l0.73,-0.29l0.57,-0.7l2.12,0.66l1.85,-1.62l1.32,0.46l0.47,0.78l-0.15,1.58l0.96,1.46l0.24,1.5l-2.04,2.72l-2.41,0.69l-0.46,0.6l-0.51,2.35l0.56,0.82l2.03,0.82l0.58,3.42l0.55,0.75l1.63,1.12l0.52,4.8l1.07,1.44l-1.39,4.41l-0.25,2.08l-0.45,0.8l-5.64,7.93l-5.33,2.53l-0.45,1.23l0.54,1.75l-0.09,0.77l-3.17,1.8l-1.27,-0.38l-1.39,0.38l-2.65,1.37l-5.08,0.22l-1.89,-1.56l-3.71,0.97l-5.06,0.51l-7.43,2.91l-3.36,0.22l-1.48,1.18l-1.07,0.3l-0.64,-0.34l-1.05,-2.42l-3.56,-1.1l-0.91,-0.86l-1.77,-3.81l-0.5,-0.46l-2.63,0.05l-3.91,-1.17l-2.82,-2.95l-2.6,0.5l-1.77,-2.91l-3.29,-1.19l-2.43,-2.51l-1.01,-0.28l0.09,-1.16l0.73,-1.82l-0.33,-1.87l-0.83,-1.33l-1.12,-0.8l-3.77,-0.35l-0.09,-5.37l-1.07,-1.4l-0.27,-2.24l-0.42,-0.68l-0.93,-0.37l-0.88,-2.41l0.48,-0.93l1.77,-0.82l0.87,-1.18l0.15,-3.95l0.39,-0.79l1.06,-0.69l3.61,-5.79l1.07,-2.54l1.57,-1.87l0.79,-2.55l0.09,-3.43l4.19,-1.97l0.84,-1.26l-0.19,-1.71l-1.61,-4.02l-1.03,-0.48l-1.89,0.05Z\",\n            name: \"C\\xf4te-d'Or\"\n          },\n          \"FR-26\": {\n            path: \"M609.51,454.85l0.02,-0.57l3.87,-0.36l5.44,-2.98l1.85,-0.05l0.97,1.55l1.89,0.16l1.14,1.78l0.99,0.77l2.55,0.12l-0.44,2.43l0.54,0.44l2.01,-0.78l0.58,1.1l0.15,2.45l0.87,4.09l-1.17,3.72l0.41,1.63l0.58,0.24l0.72,-0.4l2.23,0.09l0.9,1.68l3.94,0.49l1.79,-0.37l0.3,0.76l0.53,0.35l2.46,0.05l4.23,-2.52l0.98,-0.04l-0.68,1.52l0.16,1.34l1.19,3.22l-0.69,2.72l0.01,2.73l-1.34,7.85l0.13,1.72l1.13,1.08l4.47,1.24l0.51,-0.39l-0.02,-1.07l0.46,0.2l5.46,4.76l7.39,1.17l2.2,-0.2l0.89,0.97l-0.25,1.02l-1.71,1.52l-4.17,1.0l-3.09,-0.29l-1.24,0.51l-0.43,1.87l-2.53,3.81l-0.14,0.94l0.84,1.52l2.0,1.4l0.28,0.97l-0.33,0.33l-3.19,1.81l-4.23,-1.27l-3.35,-0.13l-0.63,0.63l0.07,1.69l0.63,1.09l1.24,0.83l0.0,0.57l-0.98,0.17l-2.3,-0.43l-1.08,0.62l-0.06,0.66l1.42,1.81l0.6,1.94l2.39,1.76l4.27,1.43l3.69,-0.02l-0.41,1.18l0.12,0.71l1.56,1.75l2.09,1.43l-0.14,4.66l-0.66,1.16l0.12,1.87l-0.76,-0.17l-0.63,-1.31l-0.81,-0.55l-1.74,-0.29l-0.98,0.29l-3.26,3.17l-1.73,0.96l-1.95,-0.21l-4.26,-2.77l-0.76,-2.13l-1.01,-1.15l-2.12,-0.25l-4.34,-1.4l-2.82,0.21l-2.6,-0.66l-0.67,-0.77l-0.1,-1.5l0.78,-2.2l-0.29,-0.88l-0.62,-0.28l-2.47,1.42l-4.48,-0.52l-4.27,1.08l-3.5,1.47l-2.77,0.41l-2.98,1.5l-1.01,-0.71l-1.74,-4.11l-1.5,-1.39l-1.0,-0.49l-1.77,-0.25l-3.2,0.13l0.91,-6.09l-0.09,-0.98l1.91,-3.48l1.11,-7.45l1.1,-2.37l3.09,-4.1l0.42,-3.02l-1.45,-3.45l-0.09,-2.65l0.96,-1.96l2.09,-1.76l0.57,-1.55l1.89,-1.85l1.93,-5.75l-0.42,-1.5l-1.76,-2.74l-0.36,-1.32l0.45,-3.31l-1.04,-1.77l0.19,-0.82l-0.19,-0.44l-1.15,-0.66l0.27,-3.41l-0.8,-2.96l-0.1,-4.66l0.26,-1.41l-0.36,-0.43ZM619.51,528.65l1.54,-0.89l1.27,-2.18l1.36,-1.26l0.07,-0.97l-0.77,-1.43l-2.49,-2.28l-2.0,-0.54l-1.01,0.36l-0.89,0.76l-3.05,4.55l-0.55,2.1l0.5,1.33l0.7,0.43l5.31,0.04Z\",\n            name: \"Dr\\xf4me\"\n          },\n          \"FR-27\": {\n            path: \"M332.92,132.9l6.85,-1.33l2.9,-1.27l2.43,-2.0l2.13,1.51l2.15,2.4l1.37,0.48l2.33,-0.41l1.96,2.85l2.96,0.4l5.7,-1.35l0.69,0.25l2.91,2.44l2.44,1.07l0.61,0.63l0.04,1.17l-3.24,-0.47l-0.43,0.53l1.04,2.61l1.94,1.1l2.11,0.61l3.9,2.82l1.33,0.19l1.52,-0.46l0.26,-0.51l-0.39,-1.15l0.41,-0.82l0.89,-0.65l4.02,-0.98l0.71,-0.53l0.82,-1.31l1.09,-0.77l1.27,-0.37l4.38,0.27l1.04,-0.64l2.79,-5.08l1.55,-1.8l2.41,-0.87l8.83,1.1l8.42,3.24l2.29,-0.78l0.17,1.85l1.76,5.64l1.98,4.52l-0.91,-0.06l-0.81,-0.99l-1.21,-0.74l-0.85,0.03l-0.88,0.48l-0.92,1.37l0.38,1.6l-1.77,3.08l-2.9,8.4l-2.17,1.01l-7.75,1.57l-0.75,0.55l-0.17,1.05l0.69,1.52l-0.24,2.26l0.57,0.74l1.67,0.42l0.21,2.28l-2.16,1.15l-0.44,0.6l-0.21,0.94l0.52,1.61l-0.14,1.15l-0.79,0.76l-2.47,1.15l-1.51,1.17l-1.09,1.61l-0.67,1.82l-0.53,0.5l-4.94,2.31l-1.82,-0.62l-3.38,0.04l-2.24,-1.49l-1.25,-0.15l-0.48,0.48l-0.06,1.17l-0.31,0.42l-3.47,0.34l-2.42,2.37l-1.92,0.04l-5.91,1.45l-1.53,0.88l-1.84,1.69l-2.56,-0.94l-1.25,-1.56l-1.01,-0.49l1.29,-1.62l0.54,-1.51l-1.16,-2.36l-1.26,-0.82l-2.33,-0.57l-1.49,-0.86l-2.76,-3.3l-0.98,-2.3l-0.73,-0.39l-0.92,0.06l-2.15,0.77l-4.68,-1.11l-2.05,0.04l-1.51,-1.08l-0.27,-0.99l1.87,-3.64l0.25,-4.05l-0.86,-1.45l-2.12,-1.54l-0.49,-1.34l0.35,-0.36l1.57,0.06l0.59,-0.55l-0.39,-2.41l0.87,-2.03l-1.68,-3.19l-0.73,-2.11l-2.48,-2.25l-0.45,-0.94l0.06,-0.6l2.03,-0.96l0.42,-0.91l-0.82,-1.2l-2.45,-0.56l-1.1,-1.77l-0.07,-6.22l-0.51,-3.02Z\",\n            name: \"Eure\"\n          },\n          \"FR-24\": {\n            path: \"M314.48,486.38l2.21,-3.24l-0.09,-0.97l-1.46,-1.8l0.11,-0.89l1.91,-2.6l-0.01,-1.78l1.7,-3.57l-0.17,-1.51l-1.03,-2.19l-1.3,-0.94l-3.17,0.0l1.56,-1.93l0.02,-0.71l-0.65,-1.26l0.58,-0.84l4.32,-2.1l0.99,-0.15l2.1,0.65l1.19,-0.32l1.22,-1.11l0.8,-1.83l2.77,-1.19l1.9,-1.66l0.55,-1.77l-0.03,-3.99l0.77,-2.85l0.66,-1.26l6.52,-4.29l1.11,-0.35l0.88,0.11l0.87,-0.54l4.41,-6.14l0.49,-1.81l0.23,-3.15l0.79,-0.39l1.26,-0.03l0.77,-0.51l2.26,-3.05l1.88,-1.54l1.09,0.73l4.71,0.47l2.19,2.61l-0.7,2.48l0.06,0.82l1.7,1.06l2.04,0.48l1.19,-0.1l0.81,-0.34l1.25,-1.36l1.25,0.8l3.25,-0.49l4.3,0.25l3.95,4.87l1.43,0.54l2.5,0.33l0.6,0.42l-0.17,0.68l-1.67,1.44l-0.1,0.87l0.38,0.6l4.23,2.02l1.93,-0.26l1.79,1.23l1.56,0.22l-0.04,0.74l-1.01,1.7l0.11,1.19l0.83,0.73l2.37,-0.06l-0.41,1.14l-1.53,0.87l-2.43,2.37l-0.63,3.22l0.4,0.65l1.93,1.39l-0.41,0.68l-1.65,1.24l-0.56,1.57l0.46,0.73l2.59,0.41l0.07,0.86l-0.73,1.62l0.87,1.3l2.81,1.17l3.51,-0.14l0.38,0.23l-0.49,2.38l0.26,0.87l1.61,2.88l1.96,2.11l-1.43,0.93l-0.47,1.47l1.31,4.0l-0.03,0.72l-0.72,1.24l0.17,1.64l-2.71,2.63l-1.66,2.62l-2.23,0.65l-0.87,1.1l-0.29,0.94l0.72,1.44l-0.03,0.57l-1.25,1.78l-4.31,2.66l-2.26,0.48l-1.02,0.79l-3.42,5.27l-2.22,1.89l-1.15,-1.69l-2.43,-1.73l-2.96,-1.21l-2.23,0.1l-3.98,2.49l-1.65,0.12l-1.09,-1.41l1.15,-1.09l0.19,-1.6l-0.74,-1.47l-1.44,-1.06l-1.33,-0.13l-3.49,1.12l-2.89,0.24l-1.12,-0.4l-0.76,-1.1l-0.75,-0.43l-2.73,-0.11l-0.98,0.27l-1.66,2.01l-0.66,0.39l-1.74,-0.76l-0.88,-0.04l-4.01,2.01l-1.21,0.29l-2.31,-0.83l-1.43,-2.24l-1.35,-2.99l-2.8,-3.51l-0.48,-1.07l-0.54,-2.25l1.77,-0.61l1.64,-1.81l-0.08,-0.54l-0.82,-0.74l-4.83,-1.21l-0.43,0.55l0.31,0.75l-2.6,2.49l-0.96,0.33l-8.53,-1.0l-2.05,-1.71Z\",\n            name: \"Dordogne\"\n          },\n          \"FR-25\": {\n            path: \"M688.99,356.49l-3.01,-2.44l-0.3,-1.03l2.61,-2.75l-0.18,-0.94l-0.68,-1.03l-0.01,-0.89l6.56,-4.56l0.94,-1.19l-0.07,-0.55l-7.63,-6.19l-3.48,-0.87l-1.8,-2.69l-0.2,-3.0l-0.41,-1.24l-1.38,-2.14l-0.82,-0.72l-2.31,-1.03l-4.64,-0.91l-2.02,-1.7l-1.1,0.17l-1.14,1.02l-0.84,-0.15l-0.19,-0.71l0.21,-0.42l1.01,-0.87l0.65,-1.18l-0.05,-2.0l1.71,-1.85l0.57,-1.45l0.03,-0.97l-2.12,-3.71l-3.5,-2.24l-1.18,-2.95l1.46,-0.01l11.91,-6.07l4.21,0.52l4.83,-1.49l2.98,-2.96l1.96,0.09l1.28,-0.46l1.15,-1.98l0.7,-0.56l2.48,0.3l1.02,-0.19l1.05,-0.99l1.87,-4.02l1.59,-0.97l6.12,-0.77l2.06,1.6l0.7,-0.11l1.02,-0.95l3.1,1.45l1.21,-0.84l1.11,-2.3l0.58,-0.55l2.31,0.4l2.04,-1.31l2.08,-0.58l4.57,1.14l1.75,-1.38l1.11,1.02l2.86,-0.39l1.23,0.06l0.74,0.46l0.78,1.52l-0.56,1.79l0.03,0.89l1.44,4.33l-0.72,0.44l-0.08,1.24l-1.37,0.7l-1.06,1.16l-1.11,2.3l0.42,0.52l7.29,-0.62l1.04,-0.41l2.04,1.73l-0.29,0.52l-1.73,0.73l-0.94,1.05l-0.92,0.22l-1.15,1.02l-0.52,1.79l0.21,1.82l-4.0,2.53l-1.78,1.58l-1.19,1.68l-3.91,3.12l-1.76,0.53l-0.28,0.41l0.06,1.05l-0.9,0.44l-0.31,0.51l-1.37,0.42l-0.72,0.57l-0.9,1.31l0.59,1.61l-1.2,1.49l-3.98,2.62l-6.53,1.77l-3.04,1.51l-1.11,2.94l1.07,2.32l0.08,1.66l-1.81,4.3l0.94,1.51l-0.16,1.55l-1.18,1.03l-2.12,1.0l-2.15,1.96l-4.43,2.12l-8.29,6.58l-0.82,0.93l0.08,1.25Z\",\n            name: \"Doubs\"\n          },\n          \"FR-MQ\": {\n            path: \"M29.58,521.59l2.04,4.09l0.61,0.13l1.69,-1.37l2.35,-1.15l2.71,-0.7l1.66,-0.01l-1.1,1.0l0.15,0.92l-1.99,2.03l-1.17,-1.91l-0.57,-0.12l-1.08,0.91l-0.34,2.42l0.25,2.72l0.56,0.33l1.58,-0.37l0.87,0.65l-2.81,1.51l-0.09,0.63l0.51,0.51l-0.97,0.5l-0.21,0.44l0.48,1.35l1.03,0.35l0.45,-0.14l0.84,-1.13l2.53,1.1l-1.26,0.61l-0.22,0.52l0.83,1.98l1.01,1.02l2.32,1.31l0.92,2.1l2.03,0.78l0.32,0.71l-0.03,1.98l0.6,0.39l0.71,-0.41l-0.25,2.4l0.41,1.46l0.77,1.07l-1.35,1.57l0.15,0.59l1.42,0.69l1.69,5.35l-1.43,0.75l-1.43,3.51l-1.14,1.51l-1.19,0.51l-1.52,0.14l-1.15,-0.51l-0.42,-1.43l0.56,-0.96l1.27,-0.41l1.36,-0.96l0.05,-2.11l-1.15,-1.71l-0.48,-0.15l-3.49,1.8l-1.39,-0.1l0.06,-0.84l-0.32,-0.42l-0.79,-0.15l-3.38,0.55l-6.91,-0.91l-2.07,0.3l-2.92,1.18l-1.59,0.24l-0.81,-0.46l-2.5,-3.48l-0.12,-1.4l-1.35,-0.99l2.86,-2.99l3.07,-1.49l0.78,-0.71l1.21,1.62l2.11,0.55l1.94,-0.83l0.87,-2.13l-2.15,-3.7l-0.25,-2.0l-0.53,-0.33l-3.16,0.87l-5.49,-0.02l-1.6,-2.4l-4.32,-2.94l-2.07,-1.98l-1.24,-3.51l-1.31,-1.93l0.78,-2.27l-0.31,-1.75l-1.64,-2.67l-3.41,-3.56l-0.79,-1.4l-0.29,-1.59l0.29,-1.51l0.74,-1.23l0.98,-0.9l4.61,-2.61l4.02,-0.06l3.94,1.27l5.23,3.33l4.71,2.09l1.84,1.19l1.36,2.81l1.45,0.5Z\",\n            name: \"Martinique\"\n          },\n          \"FR-94\": {\n            path: \"M466.21,178.65l2.11,0.61l2.35,1.33l2.16,1.85l0.38,4.44l-0.29,1.33l-1.36,1.9l-0.03,0.91l-1.22,-0.15l-1.91,-2.76l-1.06,-0.43l-6.59,0.94l-0.95,-0.2l-1.79,-1.39l-1.1,-0.45l-0.05,-2.34l0.67,-2.35l6.74,0.05l1.04,-0.63l0.91,-2.65Z\",\n            name: \"Val-de-Marne\"\n          },\n          \"FR-93\": {\n            path: \"M472.66,181.23l-1.56,-1.32l-2.43,-1.37l-5.3,-1.53l-2.33,-2.22l-1.05,-0.36l-5.61,0.01l2.25,-0.99l0.64,-0.68l0.25,-1.61l-0.47,-0.74l1.16,-0.77l5.85,1.29l2.14,-0.65l3.11,-2.8l1.54,-0.8l0.44,0.13l0.66,0.88l-0.46,1.83l1.31,2.84l0.0,1.04l-1.18,3.47l-0.12,1.34l1.15,3.02Z\",\n            name: \"Seine-Saint-Denis\"\n          },\n          \"FR-92\": {\n            path: \"M453.01,174.53l-2.13,2.61l-0.44,1.64l0.52,1.5l0.5,0.25l1.06,-0.33l4.2,1.5l-0.66,2.43l-0.15,1.7l0.24,1.0l-0.8,1.08l-0.44,-0.05l-1.28,-1.75l-1.79,-0.89l-4.42,-4.05l-0.76,-1.72l-0.05,-3.0l1.83,-2.23l1.79,-0.6l2.49,-1.89l2.33,-0.89l1.22,-0.09l0.43,0.49l-0.12,1.09l-3.59,2.2Z\",\n            name: \"Hauts-de-Seine\"\n          },\n          \"FR-91\": {\n            path: \"M456.79,187.38l2.59,1.71l1.27,0.31l6.54,-0.94l0.61,0.19l1.97,2.81l0.97,0.45l0.87,-0.1l0.16,0.88l-2.22,2.01l-0.87,1.32l-0.24,4.09l-1.52,5.03l0.4,6.02l0.31,0.86l0.95,0.72l-2.17,1.51l-5.68,5.42l-0.27,1.05l-1.4,0.19l-2.83,-1.36l-0.86,0.16l-1.36,1.23l-1.4,0.35l-0.76,-0.38l-0.47,-1.03l-0.68,-0.61l-0.85,-0.52l-0.84,-0.03l-0.66,0.4l-1.38,1.92l-1.99,0.8l-8.7,1.71l-0.72,-0.42l-0.0,-0.42l1.65,-1.87l0.02,-0.74l-1.91,-1.77l-0.62,-2.84l-0.52,-0.9l-1.62,-1.5l-0.13,-3.53l2.05,-7.23l2.71,-0.1l1.11,-0.59l0.78,-1.27l0.5,-2.83l-0.54,-3.08l0.18,-1.2l1.3,-1.52l2.25,-0.6l0.6,-0.93l0.51,-2.22l0.82,-1.31l5.93,-1.53l0.8,0.81l1.61,0.75l1.6,1.97l1.04,0.01l0.7,-0.5l0.4,-0.78Z\",\n            name: \"Essonne\"\n          },\n          \"FR-90\": {\n            path: \"M734.8,260.13l0.14,1.19l0.91,0.99l8.6,4.3l1.49,1.43l0.42,3.57l-0.51,1.44l-1.54,2.09l0.01,1.47l0.98,0.9l2.57,0.38l3.26,3.13l0.91,1.7l-0.38,2.33l-2.02,-0.53l-3.13,0.45l-2.79,-0.68l-2.25,0.79l-0.29,0.46l0.15,0.87l0.88,1.86l-1.14,1.05l-1.28,0.52l-1.43,-4.29l0.53,-2.44l-0.33,-1.39l-0.77,-0.9l-1.08,-0.61l-4.07,0.32l-0.83,-0.9l0.15,-1.25l-1.27,-1.96l-0.19,-3.89l-1.58,-4.63l0.26,-2.81l1.14,-2.01l2.88,-3.16l1.57,0.24Z\",\n            name: \"Territoire de Belfort\"\n          },\n          \"FR-17\": {\n            path: \"M244.25,389.03l0.07,-0.62l-0.38,-0.5l-2.85,-0.2l-0.42,-0.73l1.36,-1.47l0.19,-0.43l-0.29,-1.3l0.52,-0.79l4.3,-2.4l0.54,-1.19l-0.81,-3.17l1.05,-1.33l0.86,-0.51l6.91,-1.45l0.17,0.65l-1.0,1.63l0.99,0.9l1.99,-0.09l4.86,-0.96l1.46,0.21l4.02,2.22l0.83,2.01l-0.02,0.89l-0.54,0.92l0.13,0.54l1.67,1.05l5.25,5.83l1.44,0.93l1.64,0.37l2.47,-0.03l1.07,0.48l2.44,2.27l4.27,-0.1l3.24,2.1l4.08,0.11l2.6,0.81l4.93,3.14l3.23,3.61l1.35,0.53l0.76,1.2l-0.59,0.7l-2.91,0.66l-0.35,0.33l-0.05,0.62l1.66,4.54l0.07,0.94l-0.24,1.04l-0.93,1.34l-1.71,1.68l-1.68,0.97l-1.08,-0.4l-1.42,-1.39l-1.56,-0.29l-5.31,1.39l-3.52,0.2l-1.54,0.5l-1.01,1.01l-0.55,2.06l0.41,0.49l2.22,-0.09l0.28,5.29l-0.58,2.52l0.05,1.06l0.3,0.36l2.01,0.51l5.09,3.43l-1.26,1.89l0.12,0.61l4.33,2.22l-1.19,2.13l1.11,2.92l-0.43,1.28l-0.85,1.14l-2.34,1.67l-0.02,0.63l1.71,1.72l-0.36,1.26l0.14,1.33l0.44,0.68l0.99,0.35l3.23,-0.63l4.16,1.92l1.86,0.07l-0.34,2.71l0.36,0.45l4.73,0.43l1.66,1.08l0.31,2.23l-0.73,1.33l0.67,1.71l-1.85,2.2l-1.43,0.56l-1.58,-0.52l-1.1,0.11l-2.6,1.0l-1.58,0.23l-3.9,-1.19l-2.34,-1.94l-1.85,-0.63l-1.88,-1.13l-2.58,0.24l-0.76,-0.22l-1.52,-2.46l-0.05,-3.59l-1.3,-1.65l-2.79,-1.63l-2.48,-0.15l-1.8,-0.57l-0.72,-2.44l-1.16,-1.24l-1.2,0.22l-0.92,1.41l-0.63,0.41l-4.5,-0.2l-0.74,-2.71l-2.06,-4.83l-2.62,-4.07l-2.88,-2.9l-8.68,-5.52l-0.48,-1.77l-2.47,-1.03l-3.22,-2.81l-4.04,-1.44l-2.76,-2.39l-2.34,0.33l-0.67,-0.24l0.99,-5.73l3.71,-0.99l0.98,0.04l3.79,3.91l1.46,1.04l4.4,1.81l0.48,-0.15l-0.05,-0.5l-1.38,-1.36l-5.52,-3.9l-1.78,-2.15l-0.36,-2.01l-0.73,-1.64l2.03,-1.93l0.85,-0.46l1.49,-0.18l0.47,-1.14l-0.1,-1.07l-0.95,-1.64l0.89,-0.77l-0.02,-0.68l-0.92,-0.54l-1.09,-2.34l1.82,0.24l0.92,-0.76l0.72,-1.95l-0.78,-1.03l-1.49,-0.65l-0.71,-3.23l-1.9,-1.16l0.55,-0.47l-0.04,-0.64l-1.96,-1.09ZM235.41,400.43l1.09,0.41l1.35,-0.28l0.64,0.57l0.15,2.37l0.68,0.73l-0.16,1.32l2.38,1.46l0.35,0.53l-0.41,3.62l-0.61,1.91l-0.67,0.91l-0.62,-0.25l-0.84,-2.53l-1.25,-2.19l-3.59,-3.54l-1.32,-0.83l-2.14,-2.59l0.33,-1.57l-1.72,-3.8l1.1,0.13l1.99,0.91l3.27,2.7ZM219.58,381.29l3.07,-0.67l0.94,0.18l0.51,0.48l-0.09,0.29l-1.95,-0.5l-0.35,0.62l1.41,1.8l1.75,-0.06l1.83,-0.69l0.25,0.77l1.02,0.43l6.19,0.88l1.32,0.74l1.5,1.94l-0.96,0.35l-3.3,-0.75l-5.87,-3.31l-3.6,0.51l-0.76,-0.27l-2.9,-2.73Z\",\n            name: \"Charente-Maritime\"\n          },\n          \"FR-16\": {\n            path: \"M362.89,390.47l0.58,2.28l-0.05,2.42l0.47,1.18l2.26,2.74l0.64,0.29l1.45,-0.41l0.5,0.27l1.86,3.56l-1.18,1.27l-1.48,0.92l-1.24,0.43l-2.32,0.15l-0.58,0.36l-0.39,1.01l0.03,1.69l-1.25,6.55l-0.51,0.55l-1.1,0.02l-1.68,-0.77l-1.19,0.49l-0.97,1.76l-2.34,1.96l-1.37,2.98l-2.13,1.76l-2.19,2.98l-0.47,0.34l-1.88,0.21l-0.55,0.47l-0.33,0.71l-0.08,2.84l-0.44,1.62l-4.25,5.89l-2.66,0.63l-6.76,4.5l-0.78,1.47l-0.8,2.98l-0.04,4.61l-0.94,1.41l-1.05,0.85l-2.57,1.0l-0.63,0.64l-0.63,1.62l-0.92,0.86l-0.88,0.24l-2.68,-0.62l-4.63,2.09l-0.46,-2.32l-1.9,-1.24l-4.6,-0.47l0.35,-2.74l-0.39,-0.45l-2.07,-0.04l-4.41,-1.97l-3.64,0.52l-0.36,-1.43l0.32,-1.55l-0.46,-0.82l-1.1,-0.91l1.97,-1.41l1.07,-1.44l0.49,-1.76l-1.1,-2.64l1.3,-2.17l-0.15,-0.57l-4.28,-2.2l1.22,-1.86l-0.09,-0.59l-5.52,-3.72l-1.92,-0.51l0.55,-3.24l-0.25,-5.68l-0.42,-0.42l-2.13,0.09l0.3,-1.25l0.86,-0.86l1.22,-0.36l3.51,-0.2l5.08,-1.38l1.34,0.25l1.18,1.25l1.5,0.6l2.31,-1.18l1.82,-1.8l0.99,-1.44l0.34,-1.31l-0.1,-1.28l-1.64,-4.51l3.05,-0.82l0.85,-1.01l0.03,-0.47l-0.7,-1.1l2.14,-1.0l3.16,-5.24l2.77,-2.14l3.15,-1.37l2.74,-0.38l2.49,1.27l1.37,-0.59l1.27,0.36l2.69,1.78l1.37,0.37l7.15,-0.07l2.62,0.71l1.14,-0.58l0.82,-1.73l-0.13,-0.5l-1.38,-0.98l1.45,-2.09l1.35,-0.14l3.32,3.2l3.03,0.6l3.05,-0.72l3.64,-3.43l4.95,0.29Z\",\n            name: \"Charente\"\n          },\n          \"FR-15\": {\n            path: \"M458.84,445.76l1.95,-0.35l3.03,1.58l1.95,0.27l0.86,-0.25l0.6,-0.61l0.62,-1.58l1.16,-4.44l0.73,-0.04l3.18,1.89l3.22,0.73l1.42,0.74l2.43,3.63l2.81,0.16l5.14,-0.78l3.9,1.73l0.89,0.93l1.96,3.79l3.01,1.68l2.83,-0.95l3.8,-3.67l0.38,1.88l-0.06,2.68l0.45,0.41l3.22,-0.38l1.54,0.27l1.42,0.66l0.39,0.49l0.46,2.74l1.75,2.34l0.32,0.9l0.47,4.09l1.0,1.32l2.22,0.5l0.12,0.72l-2.16,2.18l-0.27,1.3l0.38,1.24l3.69,3.59l0.61,1.24l0.11,1.01l-1.67,0.38l-3.17,1.81l-1.69,-0.0l-0.85,0.32l-4.65,3.8l-0.58,0.1l-1.2,-1.57l-0.6,-0.32l-1.46,0.59l-0.57,0.8l-0.62,3.19l-1.64,1.03l-0.58,0.99l-1.42,4.71l-0.35,2.6l-1.83,2.78l-0.72,2.01l-1.6,-1.21l-1.15,-1.79l-0.53,-3.47l-0.56,-1.36l1.14,-0.77l-0.12,-1.16l-2.88,-1.38l-0.69,-1.95l-2.44,-3.26l-0.78,-0.22l-2.44,0.35l0.05,-1.49l-0.34,-1.19l-1.91,-2.42l-1.03,-0.42l-8.44,7.7l-0.74,2.6l-2.44,3.55l-0.58,2.41l-3.68,3.99l-0.93,0.45l-1.89,0.2l-3.45,-0.1l-1.45,0.62l-1.19,-1.14l-1.48,-0.11l-5.33,1.64l-0.67,1.8l-0.21,-0.03l-0.95,-1.01l-0.89,-3.39l-1.7,-1.05l1.55,-5.49l-0.1,-0.85l-1.32,-2.73l-3.07,-4.61l-0.85,-5.71l-0.6,-1.16l0.94,-0.4l2.23,-0.24l1.11,-0.74l0.08,-1.24l-1.43,-2.43l-0.11,-0.76l3.2,-2.58l2.85,-5.59l0.22,-1.14l-1.07,-2.31l0.11,-1.37l2.59,-1.98l0.51,-1.87l3.08,-1.33l2.04,-2.9l1.09,-0.69l1.42,-3.08l-0.14,-1.07l-0.95,-0.99Z\",\n            name: \"Cantal\"\n          },\n          \"FR-14\": {\n            path: \"M332.14,133.05l0.5,2.91l0.12,6.48l1.43,2.16l2.42,0.54l0.46,0.57l-0.57,0.58l-1.68,0.72l-0.23,1.35l0.62,1.25l2.42,2.18l0.67,1.99l1.53,2.55l-0.8,2.37l0.44,2.09l-1.99,0.1l-0.58,1.01l0.65,1.85l2.18,1.62l0.66,1.06l-0.48,4.27l-1.02,-1.0l-1.2,-0.16l-2.3,1.38l-0.84,0.1l-1.86,-0.85l-0.91,-1.19l-1.02,0.1l-1.91,2.15l-2.8,0.09l-2.06,1.2l-1.53,-1.99l-1.73,0.25l-3.13,3.65l-11.86,5.98l-10.27,-2.39l-1.31,0.46l-0.43,1.35l-0.43,0.43l-1.16,-0.68l-2.68,-2.58l-2.04,-0.34l-3.2,1.7l-7.41,1.57l-4.44,-0.95l-1.37,1.01l-0.13,0.93l0.58,0.88l-0.66,0.7l-4.12,0.97l-1.09,0.66l-1.67,1.7l-1.01,0.33l-3.39,-1.55l-3.63,-0.84l-2.55,0.72l-2.87,-0.11l-2.72,-0.89l-0.41,-1.55l-0.54,-0.63l-2.19,-0.52l0.8,-1.64l1.8,-1.44l2.54,-0.96l1.41,-1.45l0.05,-1.06l-1.6,-1.58l-0.02,-0.85l0.4,-0.78l0.65,-0.34l2.53,0.58l1.24,-0.22l2.04,-1.45l3.38,-3.42l1.9,-0.87l0.2,-0.52l-0.48,-1.11l-0.84,-5.35l-2.31,-4.25l0.77,-3.01l-0.34,-0.92l-0.94,-0.21l-3.67,1.17l-1.36,-0.09l-6.82,-6.1l-0.76,-1.51l1.05,-2.02l0.04,-1.46l0.93,-0.54l-0.09,-0.79l-0.48,-0.6l0.33,-0.79l0.91,-0.85l0.91,-0.36l7.94,0.35l7.3,2.35l10.46,0.54l4.16,0.79l2.31,-1.02l4.08,1.27l4.12,0.0l2.91,1.4l3.03,0.6l5.69,2.93l1.91,-1.18l9.72,-1.95l2.93,-1.18l1.7,-1.25l1.45,-0.37l2.06,-2.35l3.94,-2.42l7.63,-1.46Z\",\n            name: \"Calvados\"\n          },\n          \"FR-13\": {\n            path: \"M574.87,589.37l0.92,-0.18l1.37,-1.04l2.17,-0.54l3.45,-2.45l1.63,-0.49l0.58,-1.36l1.97,-0.33l0.5,-0.38l0.72,-1.53l-0.09,-0.84l-1.94,-0.6l1.3,-2.75l1.5,-1.9l1.28,-0.92l2.03,-0.52l3.72,1.32l1.03,-0.3l0.65,-1.54l-0.04,-1.78l1.98,-4.92l-0.49,-4.74l5.08,-3.33l2.62,-1.09l7.98,2.74l3.77,2.11l7.34,6.02l6.46,2.82l3.93,0.02l4.9,0.69l2.46,2.09l2.3,1.25l7.19,1.94l3.24,0.25l2.63,-1.13l1.36,-1.05l4.1,-0.86l2.52,-1.83l0.87,0.32l1.2,2.08l0.89,0.51l-1.04,1.57l-5.2,1.45l-1.69,2.68l0.17,2.27l2.54,2.31l0.04,0.87l-0.92,2.93l0.18,1.74l3.7,4.62l-0.86,0.23l-2.91,-0.16l-1.58,0.6l-0.22,0.53l1.07,2.83l-0.63,1.29l-0.12,1.51l0.56,1.02l1.68,-0.02l1.52,0.96l0.62,1.17l-0.73,0.94l-1.96,0.9l-1.32,1.08l-0.82,1.73l-0.43,2.15l-2.32,-0.23l-1.22,1.76l-2.05,-0.53l-1.98,-2.66l-0.96,-0.55l-1.48,0.47l-6.6,-0.49l-1.53,0.31l-1.02,-0.43l0.34,-1.68l0.94,-1.98l-0.08,-0.43l-0.62,-0.64l-1.13,-3.95l-2.92,-1.81l-3.73,1.99l-4.48,-0.09l-2.35,0.26l-3.62,-0.16l-1.71,-0.5l-1.11,-1.51l-0.44,-1.53l1.11,-1.82l1.71,-0.86l5.36,0.0l1.8,-0.48l2.62,-2.32l0.89,-2.0l-0.21,-1.77l-0.6,-0.3l-3.34,1.54l-1.34,-0.21l-1.17,-1.2l-0.81,-2.2l-1.53,-0.53l-1.81,-0.01l-1.47,-1.47l-0.5,0.08l-0.49,0.59l-0.81,2.82l0.42,1.59l2.15,1.63l0.63,1.61l-0.57,1.4l-1.25,0.8l-1.63,0.16l-4.46,-1.86l-2.21,1.1l-1.58,0.35l-0.71,0.61l-0.46,1.44l0.98,2.54l0.42,0.33l0.81,-0.05l-1.29,0.81l-1.31,-2.62l-2.66,-1.4l-1.98,-1.65l-0.86,-1.8l-0.02,-5.7l-1.08,-2.53l-0.85,-1.1l-1.19,-0.67l-0.59,0.35l0.0,0.46l2.09,3.43l0.0,5.28l0.86,2.64l4.89,4.15l-0.11,1.02l-9.05,-0.1l-4.41,-0.9l-1.34,-0.7l-0.03,-0.85l1.11,-1.09l0.22,-1.41l-0.65,-1.13l-1.58,-1.03l-2.76,-0.96l-6.31,0.6l-10.72,-0.78l1.08,-2.45Z\",\n            name: \"Bouches-du-Rh\\xf4ne\"\n          },\n          \"FR-12\": {\n            path: \"M496.69,503.56l5.22,5.97l1.03,1.89l-0.19,2.29l0.3,1.4l3.32,4.5l-0.18,2.17l-0.64,1.51l-0.08,1.13l0.32,2.23l1.01,1.78l-1.38,2.78l0.09,1.06l1.58,0.39l3.9,2.06l0.78,0.87l0.34,1.61l0.66,0.45l6.25,-0.23l1.47,0.82l0.29,0.68l-1.87,1.21l-1.04,1.36l-0.22,2.18l-2.12,1.24l-0.14,0.98l1.39,1.0l1.66,-0.16l1.15,1.08l2.11,0.24l2.74,1.92l0.74,1.08l-5.4,4.95l-1.0,2.67l-1.08,0.84l-2.91,0.28l-1.88,1.2l-0.58,0.8l-0.32,1.84l-1.22,1.35l-1.52,0.35l-5.75,-0.72l-2.03,0.54l-0.42,0.6l-0.29,1.6l0.73,1.98l-0.44,1.8l0.13,1.84l-0.64,1.29l-1.29,0.19l-2.18,-0.74l-2.67,0.48l-0.59,-1.83l-1.29,-1.26l-5.47,-1.39l-3.0,1.45l-1.79,0.45l-1.91,-0.45l-2.02,-1.27l-3.54,-3.31l-1.66,-2.27l-1.18,-2.69l-0.93,-3.79l-2.18,-2.52l0.34,-2.35l-2.77,-4.03l-1.28,-1.09l-2.75,-0.57l-0.93,-2.29l-1.02,-1.08l-2.26,-1.19l-2.6,-0.58l-1.68,-1.39l-2.52,-0.18l-1.78,-1.74l-3.12,-1.79l-1.43,-0.3l-1.58,0.16l-5.48,2.79l-1.48,0.37l-1.08,-1.93l-3.23,-0.97l-0.49,-1.35l0.62,-1.43l2.44,-1.04l0.72,-2.26l-0.35,-0.49l-4.72,-0.46l-1.09,-0.58l0.05,-2.42l1.74,-1.34l0.2,-1.22l-2.54,-3.9l-1.55,-5.39l5.46,-2.32l3.69,-2.65l4.47,-2.28l4.69,0.38l2.58,-0.64l1.69,-1.09l0.08,-1.68l0.48,-1.65l0.74,-0.34l4.28,-1.18l1.0,0.08l1.12,1.11l0.62,0.08l1.36,-0.63l3.34,0.11l1.98,-0.21l1.17,-0.54l3.99,-4.3l0.61,-2.45l2.43,-3.52l0.63,-2.44l7.94,-7.42l2.16,2.45l0.35,2.78l0.85,0.31l2.55,-0.29l2.18,2.96l0.8,2.12l1.02,0.73l1.85,0.66l-1.03,0.82l-0.2,0.72l0.58,1.36l0.56,3.56l1.34,2.1l2.09,1.6Z\",\n            name: \"Aveyron\"\n          },\n          \"FR-11\": {\n            path: \"M447.59,651.06l0.02,-0.92l-0.7,-1.19l-3.09,-1.57l-1.3,-1.89l-0.78,-0.52l-1.45,-0.09l-4.97,0.99l-3.19,-1.51l-0.09,-2.0l-0.33,-0.79l-1.13,-1.02l-1.47,-0.6l1.45,-2.0l2.2,-0.09l2.98,-1.12l0.66,-0.91l-0.7,-3.27l-1.98,-1.59l0.22,-0.47l2.52,-0.94l0.35,-0.87l-1.18,-4.24l-1.84,-1.68l1.01,-1.4l-0.13,-1.62l-0.81,-1.39l-1.37,-1.06l-2.78,-0.31l-2.44,-1.23l-5.03,-1.67l-2.51,-2.02l-0.25,-1.95l-0.77,-1.95l0.54,-2.7l1.15,-1.61l0.25,-1.25l2.04,-0.61l1.77,-0.12l1.18,-0.91l0.17,-0.74l-0.43,-1.26l0.08,-0.79l1.5,-1.66l0.46,-1.21l1.39,0.39l0.18,1.21l0.84,0.58l4.13,-1.6l4.75,-0.59l1.8,1.66l1.22,0.49l1.49,0.09l3.87,-0.65l2.63,1.32l1.45,-0.69l0.36,-1.12l-0.32,-1.36l0.34,-0.67l0.77,-0.52l7.02,1.26l5.86,-0.38l6.37,0.52l1.03,0.55l-1.22,1.31l-0.84,1.82l0.3,1.84l1.51,1.68l1.85,1.41l1.87,0.88l1.81,-0.36l1.11,-1.37l1.13,3.01l2.95,1.49l0.41,-0.07l5.14,-4.34l0.88,-2.31l-0.02,-2.2l0.19,-0.52l0.5,-0.11l0.44,0.27l2.43,4.27l0.78,0.62l1.28,0.31l2.93,-0.3l-0.01,1.4l0.71,1.15l3.08,0.45l3.07,1.73l2.64,0.07l2.13,0.47l2.89,1.67l-1.14,1.47l-2.59,2.25l-1.5,2.23l-2.52,2.24l-2.67,5.89l-1.95,6.31l0.17,0.94l0.79,0.58l-0.47,5.83l-8.86,-4.09l-1.6,-1.19l-0.82,-0.21l-4.72,1.87l-2.6,3.06l-0.65,0.56l-1.43,0.42l-20.24,-0.95l-2.07,0.73l-0.85,1.3l1.16,5.96l0.02,0.97l-0.39,0.66l-1.93,0.88l-2.6,-0.26l-3.16,3.14l-1.43,0.99l-0.93,-0.56Z\",\n            name: \"Aude\"\n          },\n          \"FR-10\": {\n            path: \"M542.23,201.62l1.67,2.04l2.4,0.7l3.77,0.44l0.48,-0.31l0.39,-1.88l0.75,-1.38l1.18,-0.59l7.36,-6.27l2.86,-0.72l1.4,-2.14l2.16,0.14l4.84,-1.39l7.15,0.57l0.36,0.37l0.36,1.45l-0.67,4.15l0.66,1.26l12.12,6.47l1.16,-0.11l2.23,-1.24l1.26,-0.24l3.99,1.31l-0.44,2.54l-1.43,2.0l-0.13,0.94l0.39,0.68l2.31,1.4l2.28,2.89l2.18,1.21l1.32,1.98l2.99,1.23l-0.35,2.17l1.65,1.75l0.92,7.61l-1.03,1.78l-0.12,1.84l-0.85,2.37l-0.61,0.38l-3.32,-0.77l-2.22,0.32l-1.04,0.8l-0.98,1.93l1.31,2.94l-1.01,1.36l-2.19,0.96l-2.98,-0.51l-1.76,0.38l-1.47,1.25l-0.22,1.84l-0.81,0.45l-13.17,1.5l-2.39,1.7l-0.5,0.01l-1.12,-0.71l-1.95,-2.64l-0.78,-0.38l-0.55,0.41l-0.26,2.11l-1.42,-0.99l-1.02,-0.13l-0.91,0.39l-1.31,1.25l-1.75,0.05l-1.93,-0.43l-1.85,1.2l-2.25,-0.63l-2.87,0.17l-1.97,-0.36l-0.57,-0.86l0.08,-2.22l-0.52,-0.94l-0.98,-0.2l-1.67,0.35l-1.41,-0.73l1.56,-0.67l0.12,-0.94l-4.65,-7.0l-1.91,-1.9l-1.19,-2.29l-1.36,-0.51l-0.78,0.28l-0.57,1.04l-1.58,0.12l-2.82,-1.93l-2.05,-0.84l1.35,-1.41l0.55,-1.05l-0.39,-3.31l-0.49,-0.96l-5.62,-6.39l-3.0,-1.66l-2.3,-0.01l-0.47,-2.37l-1.12,-0.92l-0.15,-0.51l0.56,-2.27l-0.63,-1.75l1.81,-1.89l-0.93,-1.96l2.55,-0.54l0.75,-0.59l1.02,-2.47l0.98,-1.32l2.57,-1.91l1.37,-0.09l1.99,2.7l1.48,0.1l0.62,2.61l0.57,0.31l1.15,-0.57l2.83,-0.55l0.95,-0.81Z\",\n            name: \"Aube\"\n          },\n          \"FR-2B\": {\n            path: \"M840.29,672.01l0.19,-0.25l0.97,0.12l1.07,-2.21l1.86,-0.26l0.74,-0.59l0.25,-1.79l0.9,-1.48l-0.38,-0.73l-0.69,-0.15l0.49,-1.84l0.66,-0.7l2.07,-0.66l0.26,-0.57l-0.29,-0.57l0.29,-1.57l1.09,-0.31l1.75,0.99l1.22,-0.28l0.96,-0.92l0.83,-2.39l1.69,-0.12l3.84,-1.79l6.8,-1.3l2.03,-0.92l0.4,-1.61l3.75,-3.54l2.7,-0.22l4.3,0.91l1.55,0.91l1.19,2.4l0.37,0.25l0.75,-0.18l2.19,-3.35l0.93,-2.22l-0.53,-1.78l0.44,-1.29l-0.33,-1.53l-1.69,-2.25l1.55,-2.06l-0.41,-1.45l0.2,-1.05l1.75,-1.77l0.11,-1.69l-1.01,-1.98l0.14,-1.93l0.77,-0.45l2.42,-0.01l0.97,-0.35l0.69,0.85l1.59,0.95l-0.62,1.65l0.32,1.04l0.64,0.74l-0.24,1.34l1.15,6.71l-0.1,2.14l-1.97,6.87l-0.02,4.12l-0.45,1.01l0.91,0.83l0.24,0.8l-0.14,1.25l1.14,1.91l2.33,1.17l0.51,-0.65l0.25,0.54l0.31,7.85l0.73,1.54l-0.6,1.91l-0.19,2.68l1.67,5.79l-0.45,9.13l0.43,1.76l-0.38,2.31l-0.37,0.56l-1.68,1.43l-1.61,2.76l-5.49,7.01l-0.44,6.49l-0.8,-0.12l-1.39,0.44l-2.65,1.71l-4.61,-1.41l0.81,-2.11l0.12,-1.38l-1.48,-3.98l0.03,-4.84l-0.41,-0.48l-3.1,0.15l-0.62,-0.31l-0.74,-1.15l-0.82,-3.61l-4.08,-4.46l-1.23,-3.5l-0.78,-0.4l-2.41,-0.33l-6.35,-3.95l-1.27,-4.03l-1.02,-0.49l-2.14,0.51l-6.63,-1.58l-5.01,-2.35l-2.75,-0.26Z\",\n            name: \"Haute-Corse\"\n          },\n          \"FR-2A\": {\n            path: \"M838.53,672.37l1.83,0.51l2.41,0.15l5.06,2.36l6.76,1.61l2.26,-0.49l0.44,0.27l0.67,2.74l0.64,1.31l6.51,4.05l2.96,0.55l1.14,3.37l4.05,4.41l0.77,3.47l0.9,1.47l1.16,0.59l2.69,-0.13l0.06,4.61l1.47,3.89l-0.09,1.14l-0.94,2.44l0.24,0.52l5.33,1.6l2.87,-1.77l1.24,-0.39l0.58,0.13l0.47,5.63l-0.08,5.26l-1.16,0.85l-0.93,1.45l0.36,0.56l0.38,0.0l-0.34,1.47l-1.74,0.45l-0.13,1.0l-2.1,-0.31l-0.71,0.1l-0.34,0.46l0.08,0.47l-0.87,1.33l0.15,0.53l1.18,0.53l2.94,-0.89l0.29,0.34l-0.16,0.77l-1.25,1.25l-1.71,0.61l-1.08,1.44l-0.92,0.16l-0.29,0.57l0.28,0.85l-0.28,0.85l0.82,0.98l-0.71,0.84l0.01,0.67l-2.14,1.17l-0.98,0.12l-0.35,0.4l0.0,0.54l0.75,0.99l-0.59,0.7l-0.15,0.77l0.54,0.37l1.71,-1.1l-1.36,2.96l-0.77,0.37l-0.56,-0.17l-1.56,-1.26l-4.09,-1.13l0.5,-1.41l0.63,-0.25l0.15,-0.7l-3.04,-1.76l0.64,-0.96l0.0,-0.46l-0.51,-0.38l-2.15,1.21l-0.36,-0.76l-1.07,0.38l-0.9,-0.82l-1.69,-0.51l-2.48,-0.05l-1.61,-1.23l-1.4,-0.31l-0.77,-0.93l-1.36,-0.18l0.42,-0.48l-0.28,-0.83l-3.45,-1.04l0.22,-1.42l-0.44,-0.73l-0.5,-0.17l1.06,-2.73l1.05,0.33l3.28,-1.35l0.76,-0.71l0.25,-0.88l2.21,-1.71l-0.28,-0.67l-8.03,-1.29l-0.49,-0.46l0.45,-1.23l-0.37,-0.54l-1.66,0.01l-3.15,0.9l0.15,-0.36l-0.39,-0.56l-1.58,-0.18l1.37,-0.22l1.43,-1.12l0.36,-1.08l-0.11,-0.68l-0.53,-0.48l2.22,-0.4l2.07,-1.1l0.18,-0.51l-0.3,-0.7l-0.72,-0.7l1.32,-0.68l0.04,-0.58l-0.51,-0.92l1.44,-2.22l-1.63,-2.04l-1.3,-0.47l-1.37,0.15l-3.3,1.36l-2.54,0.15l-1.78,0.63l-0.16,-0.36l0.64,-1.35l-0.36,-1.17l-1.16,-1.23l2.2,-0.2l1.3,-0.47l1.04,-1.45l-0.12,-0.56l-0.44,-0.27l0.27,-0.44l1.08,-0.73l3.47,-1.33l0.38,-0.36l0.09,-0.92l-0.43,-0.78l-0.97,-0.68l-1.71,-2.86l-0.82,-0.13l-1.52,0.37l-0.72,-1.14l-1.11,-0.59l-2.23,-0.31l0.1,-0.87l-0.66,-0.46l0.63,-0.4l0.19,-0.89l-0.4,-0.4l-0.84,0.0l0.49,-1.2l-0.24,-0.73l-0.53,-0.37l0.18,-0.95l-1.46,-1.0l2.12,-0.06l1.46,-0.81l2.49,-0.44l2.27,-0.94l0.28,-0.91l-1.26,-1.16l-2.16,-0.95l-0.59,-1.02l-0.54,-0.04l-0.76,0.57l-0.02,-0.4l1.8,-0.96l0.05,-0.67l-1.61,-1.07l-1.41,0.12l-1.48,0.55l-0.55,-1.32l-0.01,-0.82Z\",\n            name: \"Corse-du-Sud\"\n          },\n          \"FR-19\": {\n            path: \"M391.83,442.28l1.35,-1.87l1.52,-1.17l3.83,-0.97l2.33,-1.62l0.94,-1.27l1.29,-2.82l3.51,1.97l4.0,-0.33l8.09,-5.41l3.21,-1.16l2.32,-2.4l0.78,-0.11l1.2,0.95l3.0,-0.08l2.35,-1.05l0.13,-0.63l-0.36,-0.41l4.47,-0.61l1.76,-2.84l1.97,-1.47l1.24,0.07l2.42,1.87l4.27,0.65l7.14,3.9l1.73,-0.03l0.97,-0.41l2.02,-2.4l4.42,0.27l1.5,-0.64l1.68,-1.29l1.28,1.41l0.51,1.09l-0.24,3.82l-0.55,0.67l-1.79,0.8l-1.06,3.12l0.17,0.96l1.69,2.26l0.25,4.1l1.11,1.0l-1.72,5.84l-0.79,0.43l-1.66,-0.23l-3.58,-1.66l-1.74,0.31l-0.64,0.49l-0.08,0.65l0.95,0.93l0.15,0.84l-1.24,2.6l-1.06,0.64l-1.96,2.84l-3.1,1.35l-0.66,2.04l-2.65,2.08l-0.16,1.81l0.96,1.75l-0.04,1.26l-2.76,5.43l-2.8,2.03l-0.55,0.87l0.17,1.26l1.47,2.59l-0.74,0.72l-2.13,0.22l-1.44,0.59l-4.52,0.2l-1.94,0.88l-1.38,-0.66l-0.83,-0.05l-4.06,1.88l-3.12,0.95l-1.23,-0.04l-3.73,-1.98l-1.24,-1.82l-2.13,-1.68l-3.13,-1.75l-1.92,-0.51l-2.06,0.56l-0.77,-1.17l-0.7,-0.11l-3.75,2.17l-0.61,-0.97l-1.41,-1.24l-1.53,-2.72l-0.16,-1.05l0.45,-2.03l-0.39,-0.62l-0.76,-0.29l-3.42,0.15l-1.37,-0.4l-1.11,-0.64l-0.51,-0.73l0.71,-1.38l-0.24,-1.53l-0.65,-0.48l-1.73,0.03l-0.5,-0.28l0.37,-0.93l2.04,-1.69l0.24,-0.77l-0.56,-0.85l-1.85,-1.47l0.6,-2.56l1.28,-0.93l0.89,-1.14l1.62,-0.95l0.73,-1.34l-0.14,-0.73l-0.54,-0.5l-1.94,0.2l-0.72,-0.38l-0.05,-0.67l0.94,-1.5l0.23,-1.06l-0.86,-0.96l-1.17,-0.07Z\",\n            name: \"Corr\\xe8ze\"\n          },\n          \"FR-18\": {\n            path: \"M490.39,283.47l1.8,3.36l1.35,1.6l0.08,0.79l-0.52,2.31l-0.86,1.93l-2.02,2.99l-0.08,0.93l0.92,1.57l1.73,0.94l3.6,3.47l0.78,3.4l1.43,3.27l1.23,3.95l-0.07,3.7l2.22,2.27l0.43,5.38l-1.31,4.71l1.16,3.29l-2.28,4.15l-0.31,1.64l-3.08,-0.17l-2.72,0.77l-4.06,2.3l-1.68,2.09l-2.02,-0.32l-1.56,1.24l-2.13,-0.62l-0.64,-0.74l-0.84,-0.12l-4.12,3.34l-1.44,0.06l-0.57,0.31l-0.14,1.87l-1.92,-0.0l-0.79,0.54l-0.1,0.83l1.0,1.52l-0.51,1.0l0.05,1.2l1.67,2.1l0.24,1.43l-5.01,1.3l-7.99,0.81l-3.73,1.66l-1.58,1.88l-1.55,0.74l-2.19,3.55l-6.26,-0.22l0.78,-1.45l2.17,-2.14l0.28,-1.08l-0.07,-1.22l-0.65,-1.92l-1.5,-1.65l-0.02,-0.65l1.42,-2.43l0.37,-2.53l-0.24,-1.1l-0.78,-1.0l-1.58,-0.98l0.11,-2.26l-0.63,-0.94l-1.04,-0.53l-2.48,-0.4l-0.73,-0.83l0.44,-1.13l1.97,-1.4l0.44,-0.97l-0.37,-1.39l-1.89,-1.35l-0.19,-0.92l0.24,-1.28l1.08,-2.18l1.97,-1.79l0.3,-0.97l-0.68,-1.15l-2.11,-1.19l-0.46,-0.89l0.85,-3.02l0.0,-1.33l-0.55,-1.28l-2.59,-2.57l0.65,-2.75l-0.34,-1.74l-0.76,-0.77l-1.4,-0.58l-3.25,-0.31l-4.86,1.54l-6.14,-1.76l2.79,-2.55l0.88,-1.85l0.0,-1.77l1.71,0.31l1.27,-0.24l0.99,-0.69l0.35,-0.65l0.21,-2.35l1.53,-1.56l3.38,1.02l3.17,0.36l3.19,-0.39l2.5,-1.37l0.55,-0.86l0.1,-1.08l-1.75,-4.11l-0.26,-2.32l0.2,-0.97l1.0,-1.16l0.66,-0.24l3.91,1.21l1.76,0.01l0.37,-0.26l0.85,-2.33l-0.32,-2.41l-0.49,-1.05l-1.46,-1.65l-1.55,-3.15l-1.22,-0.7l-2.39,0.04l-0.52,-0.53l0.22,-1.85l1.64,-1.09l6.44,-1.59l1.33,0.16l3.11,1.74l1.71,0.36l3.28,-1.04l0.88,0.11l2.95,2.37l1.53,0.4l3.18,-0.09l0.94,0.6l2.58,3.54l2.15,2.02l1.37,0.65l1.81,-0.28l1.67,-2.81l0.94,0.08l2.84,2.04l1.46,-0.15l3.11,-1.59Z\",\n            name: \"Cher\"\n          },\n          \"FR-88\": {\n            path: \"M751.57,206.43l-0.94,1.25l-0.59,7.58l-0.82,2.89l0.48,1.0l1.16,0.64l3.71,0.29l1.04,0.99l-0.01,0.68l-7.65,10.83l-0.6,1.6l0.78,1.75l-0.29,1.31l-1.35,1.61l-3.07,5.74l-3.51,4.22l-0.66,3.17l-1.65,3.3l0.55,2.46l-0.81,0.78l-2.2,0.86l-1.5,-0.16l-6.14,-4.25l-3.36,-1.49l-2.89,-3.05l-1.0,-0.52l-0.66,-0.08l-0.72,0.37l-1.82,2.29l-2.17,0.57l-2.22,-0.33l-5.28,-2.92l-2.42,-0.87l-3.37,0.19l-1.11,0.31l-1.36,0.92l-2.15,0.18l-3.33,-1.51l-0.16,-1.78l-1.1,-1.33l-1.36,-0.79l-3.03,-0.56l-1.94,0.42l-2.72,2.89l-3.08,1.95l0.04,-2.28l-0.66,-0.67l-1.05,0.29l-1.69,2.58l-1.46,0.73l-2.76,-2.68l-1.27,0.12l-1.23,0.64l-0.33,-0.86l0.11,-2.75l-0.67,-1.26l-3.49,-1.97l-4.37,-3.63l0.64,-1.84l1.18,-2.01l0.51,-2.47l1.45,-1.47l-0.5,-1.38l-3.56,-2.51l-0.06,-1.62l-0.6,-1.04l-1.48,-0.72l-2.31,0.06l-3.01,-3.86l-1.61,-1.35l-2.24,-0.13l-0.71,0.34l-0.86,1.14l-0.51,0.13l-0.78,-3.46l1.77,-2.56l1.42,0.46l1.57,-0.51l3.0,-1.66l3.71,-0.07l3.32,-2.0l2.83,0.26l1.3,-0.32l1.14,-0.94l0.65,-1.14l0.82,0.57l0.72,-0.1l1.72,-0.97l1.33,-0.16l1.35,0.19l1.94,1.21l-0.3,2.25l-1.49,2.14l0.21,1.01l4.75,2.05l-0.31,1.39l0.26,0.46l1.87,0.64l8.74,-0.33l1.96,-0.8l0.25,-0.39l-0.09,-2.23l1.21,0.45l5.1,-0.33l1.64,-2.43l1.06,1.35l1.64,0.83l1.97,0.22l1.36,-0.21l-0.09,0.7l0.45,0.44l0.93,-0.13l1.95,-1.32l4.3,-0.37l6.3,-4.24l1.45,-0.08l0.65,2.62l1.05,1.0l4.61,0.62l4.63,1.54l3.31,-2.91l1.13,1.02l0.47,0.05l1.7,-1.01l3.3,-3.19l5.2,-3.55l1.87,-0.35l2.98,1.42Z\",\n            name: \"Vosges\"\n          },\n          \"FR-89\": {\n            path: \"M572.78,248.31l2.01,2.7l1.73,0.94l-1.28,3.9l-0.11,1.94l0.52,0.4l2.09,-0.18l0.54,0.22l1.64,4.91l-0.53,0.88l-4.51,2.33l-0.11,3.62l-0.69,2.29l-1.52,1.8l-1.11,2.61l-3.54,5.68l-1.1,0.73l-0.52,1.14l-0.07,3.69l-0.72,0.98l-1.66,0.74l-0.61,0.72l-0.05,1.75l0.85,1.97l1.28,0.9l0.18,1.68l-3.19,0.02l-1.92,2.05l-0.77,0.04l-1.21,-0.94l-0.67,-3.65l-0.98,-1.49l-0.51,-0.13l-3.89,1.9l-0.56,-0.31l-0.04,-0.63l0.52,-1.46l0.01,-1.16l-0.78,-1.25l-0.73,-0.22l-1.49,0.75l-0.85,2.16l-0.57,0.68l-5.63,-1.91l-4.42,-3.53l-1.2,-0.44l-2.2,-0.2l-1.5,-2.6l-1.93,-1.61l-2.41,-3.11l-0.66,0.33l0.14,2.56l-0.3,2.07l-4.03,-1.06l-1.63,0.16l-2.81,2.01l-0.62,-0.05l-2.71,-1.56l-2.22,0.8l-0.72,-0.1l-1.75,-1.81l-1.34,-0.46l-2.7,-0.28l-0.9,-0.76l-0.52,-2.7l-0.85,-0.59l-0.8,-0.12l-6.31,1.19l-1.26,-0.27l-0.52,-1.14l-2.08,-2.61l0.57,-2.21l-1.26,-2.45l-2.54,-2.22l-1.81,-0.58l-0.63,-0.61l0.13,-1.83l0.76,-0.58l4.07,-0.42l4.77,-2.29l0.53,-0.86l-0.08,-2.09l0.82,-1.64l-0.97,-2.16l-0.15,-2.18l1.55,-0.25l1.46,-1.47l2.5,-1.52l2.08,-4.18l-0.63,-2.78l-2.95,-2.35l-0.89,-1.09l-1.46,-4.45l-1.91,-1.27l-3.81,-0.73l0.73,-2.78l3.72,-2.26l1.64,-2.66l0.15,-0.86l-0.86,-1.48l-0.18,-1.43l1.15,-3.5l0.41,-0.36l3.03,0.06l2.27,-0.89l4.61,0.48l6.23,-0.91l2.51,0.47l0.72,-0.38l0.87,-1.43l1.29,-1.21l0.68,0.48l0.65,2.62l0.7,0.31l1.89,-0.13l2.82,1.56l5.42,6.18l0.37,0.67l0.39,2.99l-1.82,2.13l0.14,1.13l2.19,0.89l3.06,2.04l1.02,0.12l1.09,-0.29l0.78,-1.18l1.07,0.24l1.04,2.12l1.93,1.93l4.55,6.82l-1.58,0.69l-0.06,1.02l2.02,1.14l2.25,-0.31l0.24,0.47l-0.05,2.31l0.83,1.24l2.41,0.53l2.82,-0.18l1.96,0.66l0.71,-0.08l1.68,-1.15l1.71,0.44l2.04,-0.07l2.04,-1.61l0.63,0.05l1.22,0.92l0.82,0.12l0.66,-0.82l0.03,-1.6Z\",\n            name: \"Yonne\"\n          },\n          \"FR-80\": {\n            path: \"M411.99,58.04l2.13,1.96l1.56,0.75l1.81,0.01l3.71,-1.21l3.67,-0.22l0.86,0.15l1.05,0.68l1.93,2.02l1.13,0.56l1.08,-0.04l1.34,-1.04l0.83,-0.09l0.45,0.32l-0.93,1.21l0.23,1.04l6.67,3.17l0.5,0.49l0.08,1.01l0.75,1.43l1.91,1.29l8.93,-0.46l3.92,-0.85l1.24,-1.53l1.52,1.73l0.76,0.31l0.74,-0.23l0.76,-0.74l1.3,0.11l2.71,1.26l0.54,0.67l-4.33,2.61l-1.17,1.54l-0.21,1.73l0.37,1.17l1.07,1.26l0.76,0.26l0.97,-0.29l1.56,-2.2l2.16,-0.19l2.38,0.33l1.34,-0.69l1.45,-0.17l0.19,0.32l-0.33,1.26l0.52,0.66l3.45,0.68l2.92,1.4l1.0,0.18l0.86,-0.76l-0.13,-1.95l0.49,-1.31l1.67,1.4l1.14,1.83l0.06,0.74l-1.28,1.91l0.29,0.94l0.77,0.38l0.95,-0.07l3.86,-2.53l0.65,0.79l0.19,2.96l0.68,0.44l0.7,-0.01l2.37,-1.26l3.76,-0.4l0.75,-1.0l-0.04,-1.56l0.65,-0.42l2.34,0.28l3.76,1.96l3.79,2.28l2.03,3.11l-2.34,2.6l-2.16,4.61l-2.01,1.7l-0.28,1.39l0.23,2.55l-1.71,2.13l0.19,1.14l1.13,0.63l1.39,0.25l0.81,4.05l-3.34,-0.53l-0.46,0.4l0.03,1.37l-0.41,0.46l-0.68,-0.0l-1.91,-1.21l-1.0,-0.13l-2.69,0.76l-1.97,-1.18l-1.26,-0.06l-0.99,0.81l-1.79,2.72l-2.52,0.78l-0.48,1.04l-0.11,2.07l-0.51,0.11l-2.55,-0.88l-2.55,0.31l-1.95,1.8l-1.21,1.85l-0.34,-0.2l-0.36,-1.68l-0.68,-0.87l-1.0,-0.11l-1.83,0.88l-0.78,-0.29l-2.35,-1.97l-0.9,-0.16l-1.94,0.33l-2.45,-2.09l-4.82,-0.91l-3.22,-1.99l-4.27,-0.69l-10.45,1.06l-5.9,-2.44l-6.94,1.08l-0.3,-0.21l-0.8,-2.81l-4.85,-1.97l-0.28,-1.33l-2.44,-4.06l-0.9,-3.09l-1.01,-1.33l-10.08,-8.97l-8.3,-4.93l5.17,-5.05l1.41,-4.28l1.94,-2.2l1.85,-0.21l5.97,2.46l0.78,-0.01l0.75,-0.53l0.14,-0.85l-1.42,-0.64l0.57,0.0l0.4,-0.4l0.0,-0.59l-0.39,-0.4l-2.26,-0.33l-0.8,-0.54l-1.15,-2.03l-2.54,-1.04l-0.42,-0.47l0.59,-5.43l1.08,-1.83l1.07,0.18Z\",\n            name: \"Somme\"\n          },\n          \"FR-81\": {\n            path: \"M493.7,574.5l-2.7,2.83l-6.65,2.58l-1.23,-0.04l-2.62,-1.24l-1.35,-0.31l-2.38,0.11l-0.75,0.39l-1.36,2.84l-0.07,2.58l0.55,1.19l1.7,1.63l0.13,0.42l-0.6,2.34l0.7,1.51l-1.8,1.74l-1.39,0.83l-2.18,0.54l-6.45,-0.53l-5.8,0.38l-7.23,-1.26l-0.84,0.38l-0.74,0.89l-0.21,0.68l0.29,1.74l-0.63,0.62l-0.74,-0.06l-2.2,-1.21l-3.19,0.57l-2.01,0.01l-0.91,-0.34l-1.82,-1.67l-0.33,-1.07l0.47,-1.88l1.17,-1.37l-0.68,-1.43l-1.18,-0.81l-1.23,-0.17l-0.75,0.44l-1.07,1.47l-0.88,0.41l-0.68,-0.17l-4.07,-3.0l-2.62,-3.3l-1.16,-0.87l-1.98,-0.58l-5.89,-3.16l0.72,-0.96l1.33,-0.48l0.31,-0.44l-0.16,-1.17l-0.64,-1.01l-2.15,-1.92l-2.26,-5.99l-3.89,-1.82l-0.09,-1.78l-1.81,-3.27l0.4,-2.51l-0.43,-2.33l0.58,-0.65l2.56,0.13l0.84,-0.38l1.54,-1.99l2.42,-1.71l1.08,-1.24l0.1,-2.05l-2.77,-3.24l0.3,-1.07l1.35,-0.48l5.87,1.98l1.56,-1.93l2.93,-1.72l2.7,0.07l1.8,-1.38l2.38,0.13l0.5,-0.33l0.53,1.08l0.46,0.21l1.93,-0.49l5.45,-2.78l2.49,0.16l2.9,1.68l1.85,1.79l2.62,0.22l1.67,1.4l2.66,0.59l2.05,1.09l0.74,0.78l1.13,2.56l1.19,0.49l1.85,0.21l0.87,0.8l2.63,3.82l-0.4,1.19l0.1,1.19l2.17,2.49l0.92,3.73l1.23,2.83l1.81,2.47l3.59,3.36l2.17,1.37l2.19,0.54l2.21,-0.52l2.63,-1.37l5.04,1.24l1.03,0.95l0.59,1.82Z\",\n            name: \"Tarn\"\n          },\n          \"FR-82\": {\n            path: \"M361.5,548.73l-0.38,-1.14l-0.84,-1.04l0.59,-2.03l0.66,-0.78l1.81,-0.88l0.77,-1.7l1.0,-0.23l2.75,0.7l1.35,-0.49l0.37,-0.64l-0.02,-0.8l-0.33,-0.62l-1.03,-0.71l2.05,-1.55l2.5,-4.95l-0.22,-1.41l-2.82,-1.29l-0.59,-1.01l0.8,-1.93l0.07,-1.99l0.39,-0.51l3.33,1.13l5.11,-0.37l1.05,-0.9l2.02,-0.88l0.87,-0.07l0.35,0.4l-0.07,0.83l-0.73,1.97l0.16,1.27l0.79,1.18l1.19,0.98l4.38,2.12l2.05,0.47l1.39,-0.81l0.66,-0.06l0.59,0.63l-1.05,1.88l0.06,0.43l0.6,0.6l3.28,0.95l1.71,0.05l4.46,-2.18l1.37,-1.13l0.86,-1.34l1.47,0.78l1.42,1.93l1.06,0.86l1.56,0.05l1.31,-1.11l-0.08,-1.21l-0.67,-1.6l0.2,-0.67l0.8,-0.28l1.34,0.12l0.85,1.57l1.15,0.47l0.75,-0.41l1.84,-1.99l4.93,-1.93l4.75,-0.19l1.1,-0.33l0.1,3.15l1.58,0.8l4.34,0.42l-0.33,1.34l-2.62,1.23l-0.75,2.01l0.87,1.94l3.26,0.98l-0.27,0.29l-2.35,-0.12l-1.84,1.39l-2.82,-0.03l-3.2,1.9l-1.32,1.74l-5.42,-2.01l-1.96,0.6l-0.61,2.05l2.82,3.32l-0.08,1.27l-0.89,1.04l-2.43,1.71l-1.48,1.95l-0.46,0.24l-2.56,-0.13l-0.9,0.4l-0.41,1.15l0.42,2.0l-1.8,1.09l-0.55,0.17l-1.8,-0.54l-2.59,2.11l-2.28,-0.39l-1.91,0.05l-4.54,2.48l-0.05,0.67l1.26,0.97l1.89,0.83l-6.27,3.21l-1.28,0.04l-3.61,-3.13l-1.84,0.04l-1.95,0.78l-3.2,-0.07l-5.96,1.36l-2.81,-0.07l0.43,-1.79l-0.76,-2.68l-0.26,-2.94l-1.14,-2.26l-4.63,-0.38l-1.59,-0.6l-0.43,-0.55l1.28,-0.83l3.25,-3.79l0.65,-1.48l-0.11,-1.38l-0.86,-0.96l-1.17,-0.19l-3.14,1.38Z\",\n            name: \"Tarn-et-Garonne\"\n          },\n          \"FR-83\": {\n            path: \"M662.32,612.72l0.43,-2.22l0.66,-1.46l1.12,-0.93l2.01,-0.92l1.1,-1.34l0.04,-0.43l-0.93,-1.64l-1.71,-1.08l-1.69,-0.05l-0.08,-0.36l0.1,-1.12l0.67,-1.59l-0.97,-2.72l0.94,-0.38l3.01,0.14l1.51,-0.41l0.21,-0.64l-3.97,-4.91l-0.12,-1.32l0.91,-2.86l-0.03,-1.21l-0.75,-1.05l-1.89,-1.51l-0.06,-1.74l1.46,-2.21l4.97,-1.29l1.61,-2.25l-0.16,-0.58l-1.02,-0.49l-1.21,-2.1l-0.87,-0.42l0.93,-1.28l4.57,2.34l1.88,-0.03l0.85,-0.52l0.84,-1.19l0.9,-0.05l1.69,1.78l1.74,1.27l1.27,2.25l1.33,0.49l0.98,-0.5l0.89,-1.66l1.23,-1.17l4.05,-1.61l4.51,-4.06l1.63,-0.62l1.12,0.55l3.72,3.26l2.04,0.99l2.19,-0.51l1.52,-2.88l0.88,-0.93l2.86,0.06l2.77,-0.66l1.75,0.84l3.87,-1.13l1.01,1.11l0.79,1.82l1.06,0.97l3.03,1.01l2.2,0.16l0.33,0.36l0.78,2.08l-0.15,2.6l0.56,1.08l3.76,3.14l1.08,0.56l2.88,-0.18l0.52,0.59l0.07,0.9l-1.59,2.99l-0.52,1.83l0.87,1.71l2.23,1.3l-0.53,1.99l-1.2,0.73l-0.35,0.74l-0.79,0.06l-0.5,-0.8l-0.56,-0.07l-0.45,0.47l0.04,1.32l-0.33,0.1l-1.7,-0.24l-2.06,0.51l-0.64,-0.66l-0.97,-0.32l-0.96,0.39l-1.15,1.12l0.09,1.77l-0.82,1.01l-0.09,1.11l-2.6,0.48l-0.8,1.76l-2.13,1.86l-1.83,1.09l-0.39,1.12l0.27,0.52l1.27,0.34l3.83,-0.86l1.11,0.38l-0.61,1.02l-1.15,0.87l-0.18,1.36l0.76,1.4l-2.03,1.21l-1.78,0.59l-1.1,-1.03l-3.19,0.39l-1.04,1.7l-1.07,0.59l-1.62,-0.35l-3.45,0.27l-1.36,0.42l-1.49,0.84l-0.91,1.44l0.37,1.87l-1.34,0.0l-1.03,-0.98l-2.86,-1.09l-1.75,-0.16l-2.14,0.34l-2.56,1.04l-1.16,0.98l-0.63,1.67l-0.02,1.77l0.91,0.63l-3.08,0.19l0.74,-0.26l0.95,-0.93l-0.33,-1.65l-1.19,-0.96l-5.05,0.37l-0.84,-1.54l-3.51,-0.25l-1.12,-0.63l0.3,-1.17l-0.36,-0.56l-2.16,0.24l-1.78,0.81l-0.23,0.38l1.15,0.68l1.01,1.7l1.82,0.87l-3.07,-0.08l-0.89,0.28l-1.2,1.7l-1.96,-0.54l-1.85,-1.41l1.88,-1.3l0.07,-0.54l-0.41,-0.57l-1.72,-0.7l-0.74,-1.26l-2.11,-0.09l-2.49,-1.0l-0.47,-1.46l-0.88,-0.93ZM708.84,625.18l0.07,-0.56l1.07,-0.35l0.67,-0.95l0.94,-0.47l-1.31,1.7l-1.44,0.64ZM692.6,626.12l1.76,-0.0l0.97,-0.54l0.94,-0.02l0.43,-0.62l0.24,0.26l0.04,0.66l-2.62,1.0l-1.76,-0.73Z\",\n            name: \"Var\"\n          },\n          \"FR-84\": {\n            path: \"M604.27,544.85l-0.38,-2.49l0.33,-2.07l-0.19,-2.88l-0.5,-0.93l-1.47,-1.11l-0.09,-1.56l-1.29,-1.64l-0.54,-1.66l-0.02,-2.97l3.17,-0.14l2.43,0.62l1.57,1.66l1.7,4.01l1.31,0.65l1.08,-0.2l2.24,-1.34l2.77,-0.41l3.47,-1.46l4.07,-1.05l3.48,0.59l1.1,-0.08l2.31,-1.4l0.14,0.38l-0.71,1.56l-0.03,1.7l0.31,1.17l0.77,0.67l2.96,0.79l2.82,-0.21l4.22,1.37l1.95,0.19l0.66,0.8l0.94,2.37l3.97,2.67l2.43,0.48l-0.2,4.0l0.24,0.39l1.05,-0.21l0.97,0.36l0.28,0.59l-0.31,1.92l-1.83,3.84l0.0,1.28l0.75,0.97l0.93,0.32l1.85,0.01l0.72,0.39l0.66,2.08l-0.21,0.96l-2.3,3.79l-0.22,1.71l0.52,0.42l3.8,-1.25l3.06,1.6l5.26,5.65l-2.2,1.58l-4.01,0.82l-1.48,1.11l-2.3,1.04l-3.02,-0.23l-7.12,-1.92l-2.07,-1.14l-2.7,-2.21l-5.03,-0.71l-3.78,0.01l-6.35,-2.77l-7.2,-5.93l-3.9,-2.2l-7.57,-2.61l2.0,-1.55l0.6,-1.17l-0.07,-1.83l1.4,-0.03l0.4,-1.37l-0.44,-0.88l-4.39,-4.94l-1.65,-0.36l-1.13,0.37ZM619.44,527.85l-4.96,0.01l-0.37,-0.2l-0.33,-0.9l0.44,-1.6l2.99,-4.46l1.31,-0.8l1.47,0.37l2.37,2.16l0.58,1.0l-0.0,0.54l-1.24,1.1l-1.26,2.17l-1.01,0.62Z\",\n            name: \"Vaucluse\"\n          },\n          \"FR-85\": {\n            path: \"M204.85,362.1l-0.62,-0.64l-1.32,-5.47l0.25,-1.25l-0.25,-0.45l-0.84,-0.31l-1.14,-2.75l-2.53,-2.31l-0.74,-2.09l-0.93,-0.62l-1.98,-0.4l-2.24,-3.59l-3.41,-3.09l-4.13,-2.11l-0.62,-2.47l0.07,-2.83l0.33,-0.63l1.48,-0.93l0.17,-0.46l-0.28,-0.85l3.12,-1.98l2.48,-5.26l0.78,-0.51l1.11,0.64l3.64,3.66l2.0,1.43l6.44,2.71l3.21,3.11l1.09,0.43l3.21,0.02l6.4,1.46l2.1,-0.76l1.05,-1.03l0.11,-0.59l-1.05,-1.36l-1.3,-3.38l-0.81,-3.57l0.33,-1.77l2.67,-1.06l0.57,0.06l0.82,1.52l0.0,4.18l0.55,1.33l1.18,0.72l1.41,-0.13l2.92,-1.69l0.67,-0.76l0.52,-1.76l-0.33,-2.96l0.24,-0.7l0.9,-0.55l2.21,0.43l0.42,-0.18l1.98,-2.63l2.07,0.63l5.08,2.9l4.49,1.72l2.8,0.29l2.35,-1.23l1.75,1.21l1.01,0.26l2.14,1.33l2.18,3.03l1.67,0.89l0.69,0.84l0.74,3.47l1.17,1.57l4.88,2.98l0.6,0.88l-0.77,1.55l0.04,1.22l3.83,6.52l0.57,3.11l1.58,2.68l0.65,4.43l-1.22,1.54l-0.25,0.91l0.97,4.27l-0.6,2.86l0.25,1.23l0.83,0.72l1.04,-0.23l1.97,1.38l0.71,1.02l-0.74,0.77l-1.26,-0.1l-1.22,0.34l-2.25,2.0l-2.76,0.16l-3.62,1.68l-4.06,-2.24l-1.7,-0.27l-6.67,1.09l-0.44,-0.27l0.9,-1.15l0.08,-0.99l-0.69,-0.77l-0.69,-0.05l-7.38,1.76l-1.66,1.88l-0.75,-0.72l-2.95,-0.11l-2.27,1.19l-0.16,2.27l-1.02,-0.24l-2.4,-2.73l-1.56,-0.33l-4.08,-2.32l-3.43,0.87l-1.24,-0.06l-0.97,-3.42l-1.1,-1.51l-1.55,-0.91l-6.9,-0.76l0.18,-1.01l-1.0,-0.83l-3.36,-0.58l-1.97,-1.51l-2.47,-0.81l-1.08,-2.24l-0.58,-0.83l-0.45,-0.15l-0.26,1.35l0.41,1.74ZM179.99,325.41l2.68,1.47l0.24,2.88l-0.47,-0.24l-2.28,-3.55l-1.56,-0.93l-1.75,0.59l-0.73,-0.9l-0.93,-2.89l-0.56,-0.68l2.62,-0.12l2.02,0.71l-0.04,2.78l0.75,0.89ZM174.33,345.92l-4.93,-0.12l-0.49,-0.98l0.24,-0.36l1.99,0.02l3.18,1.44Z\",\n            name: \"Vend\\xe9e\"\n          },\n          \"FR-86\": {\n            path: \"M318.26,311.84l1.47,2.34l0.64,0.37l0.98,-0.07l1.14,-0.55l0.13,1.56l0.57,0.55l2.68,-0.26l0.19,0.85l-0.35,1.75l0.25,0.7l0.48,0.33l1.15,0.07l2.51,-0.61l1.03,1.31l1.83,0.26l-0.34,5.65l0.36,1.29l1.37,1.15l1.25,0.23l2.61,-0.25l2.91,0.46l1.93,-1.14l1.04,-0.24l5.49,-0.33l0.79,-0.44l0.19,-0.71l-0.77,-1.6l-0.1,-0.95l5.63,2.78l1.17,1.63l1.3,3.39l7.23,9.31l2.64,1.85l1.67,1.93l0.84,2.19l-0.61,2.63l0.01,1.65l0.57,2.3l0.59,0.87l2.29,1.98l3.29,1.27l0.85,2.04l0.88,0.33l4.33,0.13l1.69,1.4l0.35,0.75l-0.49,1.9l0.16,1.06l0.74,0.86l1.78,1.01l0.54,0.76l-0.93,2.7l-3.26,1.63l-2.54,0.08l-1.43,0.44l-1.28,1.12l-2.44,3.01l-0.64,1.72l-1.05,0.36l-4.1,0.06l-4.24,3.26l-2.35,0.69l-0.42,1.05l0.42,1.23l1.24,1.86l0.56,2.78l-0.2,0.35l-6.81,-0.46l-3.83,3.52l-2.69,0.59l-2.66,-0.56l-2.57,-2.68l-0.81,-0.54l-0.92,-0.09l-1.71,0.84l-1.25,2.22l0.13,0.5l1.39,0.98l-0.61,1.28l-0.66,0.27l-2.39,-0.72l-7.06,0.08l-1.13,-0.29l-2.69,-1.78l-1.37,-0.41l-0.11,-0.51l0.62,-2.25l-0.52,-1.52l-4.27,-1.83l-1.11,-0.91l-0.06,-0.84l0.74,-1.99l2.18,-2.58l0.93,-1.69l0.38,-1.84l-0.32,-1.84l-1.41,-1.28l-1.65,-0.08l-1.22,0.62l-1.77,2.02l-0.69,0.21l-1.1,-0.71l-1.04,-1.26l-0.38,-1.12l-0.02,-2.18l-1.51,-1.42l-0.57,-1.02l0.19,-2.74l-0.21,-1.47l-1.19,-1.45l-0.0,-1.77l1.57,-2.08l1.72,-4.63l-0.41,-1.38l-1.63,-0.57l-0.81,-0.98l0.11,-2.33l1.63,-2.79l0.76,-2.63l-0.45,-1.48l-1.38,-1.45l-0.19,-2.93l0.13,-0.94l1.44,0.09l1.03,-0.72l0.28,-1.38l-0.35,-0.86l-1.32,-1.09l-0.88,-1.27l-1.68,-4.96l0.02,-1.98l-0.89,-1.06l-1.34,-0.4l-0.63,-2.7l-1.27,-2.64l0.8,-0.94l2.51,-0.92l1.0,-2.45l1.89,-2.08l0.9,-0.26l2.97,0.49Z\",\n            name: \"Vienne\"\n          },\n          \"FR-87\": {\n            path: \"M400.84,373.71l1.37,1.0l-0.09,1.47l-3.2,5.72l0.1,2.58l1.3,1.83l2.84,0.95l2.04,1.94l0.38,0.95l-0.44,2.84l0.39,0.99l2.07,1.25l1.49,5.38l1.33,0.42l-0.69,1.04l-1.03,0.82l-1.49,0.68l-0.2,2.25l0.97,0.78l4.05,0.11l0.71,0.32l0.46,0.63l0.05,0.85l-0.46,2.3l0.28,0.99l0.81,0.68l2.21,0.26l4.48,-1.17l1.31,0.05l1.7,2.18l0.88,0.66l4.16,1.91l0.9,1.33l-0.15,2.54l-0.7,2.03l0.14,0.45l1.94,1.69l-1.68,0.77l-2.33,0.13l-1.47,-0.98l-1.27,0.11l-2.55,2.52l-3.15,1.12l-8.04,5.38l-3.36,0.29l-3.78,-2.12l-0.56,0.18l-2.2,4.2l-2.13,1.5l-3.94,1.03l-1.68,1.31l-1.46,2.02l-1.5,-0.89l-1.67,0.31l-3.97,-1.86l0.03,-0.66l1.79,-1.66l-0.12,-1.13l-0.97,-0.71l-3.78,-0.79l-0.97,-0.93l-2.29,-3.4l-0.77,-0.58l-0.71,-0.28l-2.28,0.21l-1.67,-0.27l-3.12,0.5l-1.36,-0.83l-0.67,0.19l-1.04,1.31l-0.53,0.24l-0.92,0.1l-1.95,-0.46l-1.21,-0.71l0.7,-2.38l-0.14,-1.2l-2.33,-2.53l-0.86,-0.39l-4.12,-0.22l-0.84,-0.59l1.24,-2.69l2.24,-1.82l1.25,-1.95l1.82,0.71l1.43,-0.0l1.03,-0.91l0.59,-1.88l0.92,-7.22l3.93,-0.81l2.62,-1.86l0.48,-0.93l-0.03,-0.82l-2.06,-3.42l-0.65,-0.47l-1.46,0.4l-0.62,-0.18l-2.23,-2.92l-0.09,-2.84l-0.51,-2.08l1.19,-0.01l0.56,-1.09l-0.6,-2.96l-1.3,-2.02l-0.18,-1.29l2.22,-0.61l4.13,-3.21l3.91,-0.02l1.37,-0.47l0.49,-0.56l0.37,-1.36l2.95,-3.54l1.62,-0.7l2.72,-0.12l2.77,-1.57l3.18,1.35l1.69,0.1l3.59,-0.55l1.16,-1.42l1.05,-0.24l1.47,1.8l2.71,1.62Z\",\n            name: \"Haute-Vienne\"\n          },\n          \"FR-01\": {\n            path: \"M617.23,362.0l1.76,-0.36l4.28,1.38l1.47,-0.15l3.7,-1.24l1.74,-0.16l1.25,0.39l2.16,1.97l1.64,0.85l4.11,0.99l0.02,2.41l0.61,1.09l1.69,0.58l0.98,0.74l0.72,2.39l1.08,1.11l2.12,0.65l0.91,1.09l1.74,0.37l-0.08,3.17l0.9,0.94l1.79,0.47l2.93,-1.5l1.13,-1.19l1.49,-0.38l0.56,-1.17l2.38,-2.03l2.83,2.21l0.53,0.68l0.4,1.81l0.7,0.56l7.33,0.5l1.48,-0.19l1.31,-0.52l4.16,-3.47l1.29,-1.9l5.29,-5.36l2.71,1.45l0.82,0.77l0.73,1.68l-2.15,4.4l-0.57,4.01l-1.43,0.34l-1.27,-0.13l-5.25,2.42l-0.38,1.48l1.62,2.13l-1.34,2.71l-2.71,0.14l-1.68,2.2l-0.62,0.32l-1.36,-1.23l-0.5,0.04l-1.27,1.21l-0.19,3.73l0.91,6.14l0.09,2.81l-0.51,2.57l-2.91,7.65l-0.73,4.3l-0.93,1.66l-2.6,1.32l-4.3,4.06l-1.02,0.12l-1.0,-0.76l-3.27,-4.86l-4.27,-3.42l-1.62,-2.12l-0.91,-2.52l0.21,-0.6l-0.57,-0.85l-2.84,-2.33l-1.05,-0.51l-0.66,0.02l-2.0,1.0l-3.71,5.19l-0.84,0.68l-0.94,0.26l-1.02,-0.21l-1.71,-1.04l-4.67,-1.87l-4.14,0.52l-3.63,-0.52l-4.19,1.09l-0.75,-3.12l0.3,-1.1l-0.2,-0.46l-3.83,-2.69l-1.54,0.13l-0.34,-0.93l-1.17,-0.79l-0.65,-1.05l-2.11,-0.86l0.45,-2.94l-0.39,-4.61l1.2,-3.66l1.56,-3.33l0.22,-1.64l-0.23,-1.26l1.28,-4.71l3.52,-6.66l0.17,-1.98l1.46,-2.52l0.86,-4.24l1.47,-3.8Z\",\n            name: \"Ain\"\n          },\n          \"FR-02\": {\n            path: \"M567.45,89.94l3.32,1.51l1.54,0.17l0.08,2.76l1.79,2.83l0.07,1.8l-1.86,3.26l-0.49,2.91l0.31,0.92l0.9,0.74l0.32,1.65l-0.7,1.08l-3.14,2.62l-1.8,1.1l-1.44,2.0l-1.21,0.65l-2.01,0.15l-1.16,1.07l0.06,0.89l1.48,3.98l-0.45,1.42l0.37,2.06l-1.37,1.28l-0.45,0.95l0.11,0.84l1.61,2.67l-1.45,0.55l-0.75,1.27l0.2,0.5l0.68,0.33l0.4,0.93l-0.07,1.86l-0.4,1.06l-0.57,0.36l-2.25,-0.85l-1.92,0.68l-2.88,-1.37l-2.38,-0.13l-1.45,0.91l-0.06,1.82l-4.11,0.52l-5.16,1.25l-3.39,1.78l-0.06,0.98l0.85,1.81l0.67,5.15l0.51,0.49l1.41,0.26l2.36,2.15l-0.2,0.54l-0.95,0.74l-1.13,0.21l-3.3,-0.33l-1.41,0.67l-0.54,1.6l0.35,1.68l-0.15,1.05l-0.98,1.37l-1.47,1.05l-0.17,1.35l0.25,0.78l0.6,0.45l3.9,0.07l0.6,0.44l-0.02,0.44l-2.28,1.99l-0.73,1.1l-1.76,1.18l-1.05,2.05l-3.83,3.24l-2.02,3.25l-1.48,0.21l-1.71,-0.42l-2.07,-1.34l-0.43,-0.63l-0.43,-2.64l-0.39,-0.68l-0.73,-0.42l-1.48,0.55l-0.51,-0.14l-9.06,-6.98l-0.18,-0.8l0.61,-1.88l-0.14,-0.89l-0.92,-1.78l-1.36,-1.39l-2.91,-0.8l1.22,-1.17l1.33,-2.47l-0.1,-1.34l-0.76,-1.04l-1.11,-0.7l-2.26,-0.71l-1.32,-0.01l-3.62,0.78l-0.68,-0.81l-0.22,-1.54l2.46,-1.51l0.85,-1.77l-0.61,-1.84l-2.74,-2.56l1.36,-0.9l3.13,-0.24l1.77,-1.04l0.96,-1.77l1.02,-3.74l0.86,-0.6l1.32,0.6l1.02,-0.06l0.79,-0.7l0.27,-0.81l-0.52,-2.08l-1.67,-1.09l-0.65,-1.37l-0.08,-1.74l0.68,-3.72l-0.01,-1.49l-1.53,-3.7l0.85,-5.59l-0.68,-2.03l-0.32,-2.65l-0.76,-1.41l-1.35,-0.18l-0.84,-0.47l0.01,-0.4l1.31,-1.18l0.38,-0.9l-0.06,-3.69l2.03,-1.74l2.17,-4.63l2.43,-2.74l-0.36,-1.23l-1.5,-2.16l3.58,-0.7l1.83,0.05l3.72,0.8l0.96,-0.15l1.87,-0.98l5.14,1.35l1.1,-0.07l3.93,-1.62l1.69,-1.03l0.9,0.04l2.79,0.99l0.93,-0.14l3.23,-1.67l0.73,-0.05l3.32,0.71l6.2,0.65l1.83,1.69l0.78,0.18l3.05,-1.51l1.71,-0.23l0.41,0.51l-0.04,2.45l0.56,0.74l5.66,1.94l1.22,0.15l1.87,-0.46Z\",\n            name: \"Aisne\"\n          },\n          \"FR-03\": {\n            path: \"M499.59,339.93l0.27,1.52l1.25,1.52l3.22,1.84l2.72,0.19l2.74,2.56l0.75,0.33l1.03,0.0l2.4,-1.05l1.66,-0.1l1.61,0.25l2.97,1.11l0.77,-0.19l1.41,-1.51l0.75,-0.34l1.37,0.37l1.29,2.19l0.04,1.49l0.5,0.54l0.6,0.12l1.71,-0.33l4.06,-2.15l0.58,-1.97l1.34,-0.87l0.39,-1.8l1.21,0.2l1.4,2.25l0.6,1.79l2.46,2.19l1.56,2.63l0.94,0.54l0.28,1.5l-0.41,3.04l0.32,0.67l4.03,2.05l1.74,0.08l2.67,2.22l3.67,0.71l2.12,1.04l0.8,2.92l-0.64,3.08l0.52,1.3l-0.02,1.46l0.82,1.68l-1.19,1.0l-5.54,2.72l-4.06,1.13l-3.09,2.23l-0.46,0.67l0.1,0.81l1.06,1.16l0.45,3.18l-0.15,4.03l0.68,2.18l0.34,3.41l0.64,2.1l-0.42,0.97l-1.55,0.78l-3.88,0.68l-2.22,1.06l-1.3,-0.52l-2.73,-2.25l-1.7,-0.84l-4.04,-0.77l-1.99,0.11l-1.42,0.57l0.01,-0.79l-1.21,-3.96l-0.51,-0.26l-6.28,2.04l-1.17,-0.97l-4.88,-1.19l-5.39,0.45l-0.97,-0.29l-2.45,-3.12l-4.46,0.7l-1.86,-0.94l-2.01,-1.92l-1.55,-2.4l-0.54,-2.4l0.09,-2.71l-0.61,-1.08l-1.32,-0.68l-2.45,0.07l-1.33,0.64l-1.02,1.09l-0.17,2.84l-0.65,0.18l-3.18,-1.75l-1.24,-0.04l-0.54,0.83l-0.21,2.58l-2.52,2.99l-1.55,0.94l-1.67,0.26l-1.7,-0.42l-1.35,-0.55l-2.11,-3.65l-1.03,-3.11l-3.21,-4.25l-1.27,-0.36l-1.13,0.66l-1.17,-2.27l-0.72,-0.46l-2.83,-0.61l-0.88,-0.67l-0.94,-2.84l-1.76,-1.56l-1.91,-2.38l2.1,-3.42l1.46,-0.64l1.48,-1.8l3.52,-1.57l7.94,-0.8l5.29,-1.4l0.38,-0.42l-0.0,-1.27l-1.97,-2.78l-0.03,-0.72l0.53,-1.33l-1.01,-1.81l2.56,-0.35l0.41,-0.79l-0.21,-1.13l1.75,-0.2l4.07,-3.3l0.82,0.8l2.07,0.75l0.7,-0.08l1.5,-1.22l2.21,0.26l1.77,-2.17l3.83,-2.18l2.59,-0.73l2.86,0.18Z\",\n            name: \"Allier\"\n          },\n          \"FR-04\": {\n            path: \"M651.92,546.28l0.17,-3.46l1.76,-0.99l3.2,-3.13l1.92,0.05l0.53,0.33l0.75,1.42l1.06,0.44l0.64,-0.19l0.44,-0.58l-0.18,-1.95l0.27,-0.4l1.58,0.11l5.96,-1.63l3.73,1.33l1.73,-0.0l0.66,-0.63l0.07,-0.48l-0.57,-1.04l-2.45,-2.72l-1.44,-1.05l-0.22,-0.74l0.57,-1.37l1.35,0.23l3.02,2.06l0.62,-0.3l0.32,-2.78l-0.85,-1.11l0.13,-1.09l1.7,-1.84l1.73,-3.22l3.99,-2.13l2.54,-2.48l1.12,-0.39l2.15,0.09l1.6,2.63l1.39,0.64l1.99,2.81l1.38,0.49l1.86,-1.26l0.69,-1.82l-0.1,-1.94l-0.44,-1.35l2.08,-0.62l1.7,-1.27l2.27,-2.81l3.81,3.91l2.32,1.58l2.87,0.74l6.29,0.16l1.29,-0.64l0.95,-2.17l1.43,-1.71l0.76,-2.54l1.87,-0.29l4.74,-4.19l4.97,-2.21l1.9,-1.9l0.77,-0.44l0.6,0.11l-0.11,0.7l0.56,1.29l-0.69,0.5l-2.06,3.14l-3.05,2.06l-0.83,1.38l0.25,2.53l1.44,2.18l2.96,2.54l-1.46,0.71l-0.65,0.92l-0.69,3.25l0.55,1.28l-4.5,2.46l-1.8,2.73l-1.72,1.55l-2.54,5.66l-0.47,2.74l1.43,2.4l1.69,1.86l0.53,1.82l0.33,2.99l1.73,1.32l1.97,0.96l2.36,3.75l3.58,2.65l1.13,1.23l-2.14,0.22l-3.05,-1.51l-2.25,0.02l-3.1,2.61l-2.55,0.17l-0.83,0.45l-1.01,2.11l0.66,2.69l-1.81,0.32l-1.82,0.77l-1.31,-1.19l-1.32,0.16l-2.71,0.98l-1.61,-0.83l-2.91,0.66l-3.08,-0.02l-1.25,1.2l-1.45,2.78l-1.63,0.29l-1.54,-0.81l-3.72,-3.26l-1.74,-0.72l-1.99,0.79l-4.39,3.99l-4.18,1.7l-1.33,1.27l-1.22,1.88l-0.77,-0.22l-1.3,-2.26l-3.72,-3.26l-1.68,0.15l-0.86,1.22l-0.65,0.4l-1.45,-0.03l-4.62,-2.41l-0.51,0.12l-1.18,1.63l-5.3,-5.7l-3.38,-1.79l-3.68,1.08l0.09,-0.84l2.29,-3.78l0.29,-1.36l-0.24,-1.42l-0.74,-1.26l-1.1,-0.55l-1.88,-0.01l-0.61,-0.22l-0.41,-0.61l0.02,-0.67l1.83,-3.86l0.35,-2.24l-0.65,-1.22l-1.85,-0.49Z\",\n            name: \"Alpes-de-Haute-Provence\"\n          },\n          \"FR-05\": {\n            path: \"M662.86,537.06l0.07,-5.03l-0.46,-0.67l-1.82,-1.02l-1.39,-1.55l0.47,-1.33l-0.29,-0.71l-1.33,-0.38l-2.81,0.16l-3.98,-1.31l-2.2,-1.6l-0.54,-1.85l-1.31,-1.69l0.85,-0.19l2.33,0.46l0.67,-0.16l0.58,-0.67l-0.17,-1.21l-1.58,-1.26l-0.32,-1.32l0.2,-0.43l2.95,0.15l4.34,1.28l0.95,-0.24l2.8,-1.78l0.61,-0.81l-0.12,-1.02l-0.85,-1.05l-1.56,-0.99l-0.6,-0.98l0.34,-1.04l1.84,-2.49l0.74,-2.54l1.28,-0.26l2.49,0.32l4.9,-1.34l1.9,-1.99l0.0,-1.34l-0.94,-1.02l1.78,-2.52l4.33,-0.43l2.59,-0.77l1.06,-1.17l-0.23,-1.81l1.51,-1.3l1.93,-0.81l1.61,0.45l1.3,-0.18l3.71,-2.08l2.21,0.4l1.91,-0.35l1.7,0.15l3.74,-0.98l2.72,0.76l1.33,-0.13l0.6,-0.99l0.28,-3.45l-0.47,-1.39l-1.68,-1.88l-0.61,-3.45l-1.52,-0.82l-3.62,0.45l-0.92,-0.3l-0.21,-0.57l1.03,-6.05l1.31,-1.51l1.5,0.78l3.9,0.36l1.08,0.74l1.0,1.99l4.33,1.4l1.59,-0.46l0.96,-1.07l0.85,-2.13l2.87,-0.24l2.8,-1.28l-0.62,0.73l-0.02,0.5l2.03,2.18l0.17,1.69l0.79,1.24l0.95,0.66l2.05,0.17l1.38,0.88l0.35,1.96l-0.12,4.19l1.23,1.91l2.07,1.56l4.22,2.16l1.41,0.3l3.93,-0.45l2.94,1.06l1.2,1.26l-0.4,2.57l1.25,4.13l2.03,3.55l-3.87,-0.56l-1.58,0.72l-1.43,1.8l-1.1,-0.11l-1.03,0.61l-1.77,1.8l-5.05,2.27l-4.7,4.15l-1.97,0.35l-0.95,2.83l-1.41,1.68l-0.9,2.07l-0.84,0.33l-6.01,-0.18l-2.67,-0.7l-2.04,-1.41l-4.1,-4.21l-0.6,0.03l-2.45,3.06l-1.6,1.2l-2.28,0.65l-0.27,0.51l0.53,1.6l0.11,1.65l-0.5,1.44l-1.25,0.99l-0.83,-0.24l-1.98,-2.8l-1.32,-0.57l-1.61,-2.68l-0.35,-0.24l-2.63,-0.09l-1.43,0.54l-2.52,2.47l-3.05,1.5l-1.67,1.48l-1.17,2.53l-1.72,1.87l-0.37,1.01l0.16,0.89l0.77,0.79l-0.25,2.0l-2.67,-1.78l-1.75,-0.3l-0.44,0.24l-0.75,1.8l0.29,1.27l1.6,1.25l2.33,2.58l0.4,0.73l-0.31,0.3l-1.05,-0.06l-3.91,-1.37l-6.17,1.64l-1.06,-0.09Z\",\n            name: \"Hautes-Alpes\"\n          },\n          \"FR-06\": {\n            path: \"M739.85,588.82l0.14,0.15l-0.95,1.09l-2.27,-1.32l-0.56,-1.01l0.46,-1.62l1.62,-3.07l-0.17,-1.52l-1.01,-0.96l-2.81,0.22l-0.88,-0.44l-3.9,-3.31l0.04,-2.99l-0.85,-2.3l-0.56,-0.67l-2.49,-0.28l-2.75,-0.88l-0.93,-0.85l-0.56,-1.35l3.81,-1.23l0.21,-1.17l-0.69,-1.94l0.78,-1.63l3.17,-0.47l2.96,-2.56l1.83,-0.02l3.14,1.53l3.1,-0.36l0.22,-0.66l-1.7,-1.85l-3.45,-2.52l-2.38,-3.78l-3.69,-2.28l-0.17,-2.56l-0.58,-2.04l-3.05,-3.97l0.41,-2.46l1.72,-4.25l0.72,-1.21l1.71,-1.53l1.69,-2.6l4.53,-2.48l1.25,1.52l1.14,2.19l2.27,1.81l0.83,2.02l0.81,0.8l1.01,0.31l2.19,-0.38l0.67,0.17l6.04,2.48l6.53,3.55l3.45,0.91l1.49,1.72l3.23,0.17l10.62,-2.7l1.73,-0.12l2.57,-1.44l1.28,0.21l-0.66,2.31l0.83,1.51l1.3,1.15l0.87,1.66l-0.1,1.05l-2.22,2.08l-1.33,3.37l-4.45,3.63l-1.3,1.81l-2.63,2.56l-1.02,1.63l0.26,2.23l1.1,3.29l-1.5,0.69l0.05,1.26l-0.73,0.15l-1.26,1.13l-0.56,-0.67l-1.18,-0.6l-1.65,0.49l-1.0,1.05l-0.43,1.64l-1.32,1.04l-0.71,1.53l-2.86,-0.54l-1.56,0.17l-1.86,1.37l0.04,0.96l-1.09,1.0l-0.54,-0.78l-1.17,-0.24l-1.72,0.39l-1.25,1.27l-0.66,2.71l0.71,3.75l-0.22,0.12l-0.57,-0.92l-0.68,-0.42l-1.15,-0.07l-1.27,0.64l-1.75,1.52l-0.56,-0.6l-3.4,0.07l-2.2,1.77l-0.26,1.1l0.65,0.74Z\",\n            name: \"Alpes-Maritimes\"\n          },\n          \"FR-07\": {\n            path: \"M577.55,476.22l1.11,-1.41l2.95,-0.55l0.74,-0.72l-0.0,-0.72l-1.19,-1.6l2.16,-2.5l-0.86,-2.16l1.27,0.23l1.38,1.13l0.92,-0.02l0.45,-0.42l0.63,-2.87l1.86,-3.84l0.13,-1.54l-0.32,-0.45l7.61,-0.57l0.23,-1.28l-0.35,-2.29l0.79,-1.72l1.18,-0.9l5.42,-2.49l2.64,-0.46l0.25,1.75l0.5,1.07l1.67,1.89l-0.05,1.4l0.31,0.32l-0.26,3.51l0.16,2.41l0.8,2.99l-0.27,3.52l1.29,0.96l-0.12,0.95l1.02,1.63l-0.44,3.35l0.44,1.57l1.71,2.65l0.36,1.15l-1.81,5.39l-1.82,1.73l-0.54,1.53l-2.15,1.83l-1.09,2.24l-0.14,2.08l1.66,4.33l-0.4,2.69l-2.95,3.83l-1.23,2.68l-1.1,7.4l-2.03,4.07l0.16,0.54l-0.95,6.57l0.01,2.92l-3.85,-1.27l-2.16,-2.01l-1.95,-0.76l-3.44,0.06l-0.76,0.36l-0.51,0.78l-0.28,1.65l-1.3,0.63l-1.06,-0.63l0.11,-1.94l-0.77,-0.99l-1.14,-0.12l-1.89,0.45l-5.53,3.89l-1.17,-0.23l-4.88,-2.4l-1.24,-1.11l-4.78,0.52l-0.65,-3.42l0.81,-1.28l-0.09,-1.09l-1.77,-2.77l-1.61,-1.3l-2.22,-6.93l-0.89,-1.48l-1.35,-0.86l-0.56,-0.98l-0.68,-1.98l-0.52,-3.12l-1.27,-3.49l0.05,-2.72l1.27,-0.58l3.25,-4.5l3.93,-1.27l1.08,-2.19l2.26,0.12l4.33,-0.67l1.51,-0.63l2.02,-2.74l1.34,-3.3l0.62,-0.22l1.42,0.25l2.97,-1.28l0.14,-1.25l-0.57,-1.03Z\",\n            name: \"Ard\\xe8che\"\n          },\n          \"FR-08\": {\n            path: \"M573.11,91.52l3.32,-0.4l9.73,2.22l1.91,-0.29l8.49,-3.54l2.64,-0.38l0.81,-0.51l1.03,-2.26l0.49,-2.73l-0.42,-1.4l0.42,-1.14l6.43,-5.47l1.16,-0.45l0.17,0.74l0.95,0.53l1.9,-0.28l0.3,0.34l-0.46,3.48l-0.42,-0.16l-0.65,0.28l-1.15,2.13l-0.07,2.33l-2.32,4.87l-0.3,1.37l0.89,1.44l2.96,1.1l0.83,1.27l-0.04,1.46l-1.51,3.13l0.87,1.86l0.09,3.19l0.8,0.73l1.6,0.19l4.15,-0.98l1.14,-0.05l0.97,0.46l2.32,1.92l3.4,1.12l3.27,3.72l2.07,1.47l1.72,0.4l3.86,-0.67l2.26,2.11l0.31,0.88l-0.71,0.59l-0.19,1.13l0.55,1.39l1.85,0.16l0.97,-1.0l2.53,0.92l0.24,0.19l-0.05,0.81l-6.21,3.82l-0.34,-0.04l-0.49,-0.99l-0.68,-0.39l-3.82,0.0l-2.25,-1.55l-1.05,-0.35l-1.15,0.2l-1.35,1.12l-0.38,0.72l-0.36,3.28l-1.46,1.89l0.74,2.38l1.02,0.78l0.75,2.44l-0.1,1.25l-1.08,2.51l-3.38,4.46l0.01,1.28l0.73,2.15l-3.98,3.18l-2.32,-1.4l-2.13,0.05l-4.27,1.39l-6.83,-1.28l-5.3,1.34l-0.89,-0.62l-1.22,-2.2l-1.55,-1.05l-1.7,-0.2l-6.2,0.85l-1.94,-0.43l-2.29,-2.8l-2.67,-0.15l-0.88,-0.49l-1.45,-1.44l-6.0,-4.02l-2.07,-0.61l-6.54,-0.45l-0.4,-0.92l-0.68,-0.44l0.36,-0.58l1.56,-0.48l0.31,-0.52l-1.78,-3.16l0.25,-1.03l1.13,-0.91l0.39,-0.79l-0.38,-2.04l0.46,-1.54l-1.6,-4.48l0.75,-0.67l1.86,-0.09l1.55,-0.83l1.47,-2.03l1.72,-1.03l3.2,-2.67l0.94,-1.48l0.01,-1.35l-1.51,-2.11l0.44,-2.67l1.83,-3.2l0.19,-1.43l-0.27,-1.06l-1.76,-2.77l-0.03,-2.56Z\",\n            name: \"Ardennes\"\n          },\n          \"FR-09\": {\n            path: \"M418.24,606.75l-0.29,1.54l0.8,2.04l0.24,1.92l0.48,0.75l3.51,2.37l4.07,1.14l2.5,1.26l2.66,0.27l1.08,0.84l0.66,1.11l0.15,1.08l-1.08,1.79l1.93,1.96l1.1,3.87l-0.38,0.48l-2.23,0.75l-0.49,1.18l2.08,1.84l0.62,2.74l-0.3,0.38l-2.78,1.03l-1.69,-0.0l-1.08,0.43l-1.46,2.27l0.23,0.77l1.63,0.67l0.9,0.82l0.09,2.3l0.54,0.69l2.38,1.32l1.14,0.3l6.15,-0.98l1.95,2.33l2.97,1.46l0.54,0.91l-0.2,0.8l-0.35,0.18l-3.39,-0.53l-6.47,0.84l-2.14,2.49l-0.42,2.59l-1.41,1.09l-3.35,-0.73l-6.66,0.81l-0.58,-0.62l-2.03,-0.75l0.42,-1.19l-0.34,-0.53l-6.9,-0.61l-4.12,-2.32l-2.77,0.67l-1.86,-0.09l-0.4,0.28l-0.88,2.73l-0.91,0.33l-0.66,-0.77l-1.07,-2.58l-2.23,-3.15l-1.29,-0.49l0.21,-0.83l-0.29,-0.49l-1.53,-0.36l-7.55,-0.02l-2.58,0.53l-0.9,-0.58l-1.64,-3.14l-1.32,-1.06l-1.36,-0.37l-5.14,-0.31l-1.98,-1.15l-1.93,0.82l-1.92,-1.37l-1.71,-0.61l-1.37,-5.0l0.27,-1.51l1.85,-1.22l0.45,-1.83l0.46,-0.57l1.64,0.0l2.6,-0.62l1.31,-0.73l1.08,-1.1l0.45,-1.8l-0.66,-3.57l0.04,-1.54l0.44,-0.83l2.59,-1.15l1.0,-2.04l0.48,-0.39l1.42,0.0l1.96,-0.78l0.71,0.04l3.3,1.87l1.98,2.72l1.28,0.28l3.23,-2.67l0.04,-0.55l-1.04,-1.27l-2.95,-1.28l-0.15,-0.52l0.76,-0.88l4.09,-0.47l2.73,-0.96l1.52,-0.93l0.72,-1.27l-0.05,-0.44l-0.95,-1.03l-3.22,-1.18l-0.68,-0.75l0.21,-1.57l0.95,-0.54l1.39,0.16l1.24,0.65l2.71,2.5l-0.22,2.41l1.88,1.37l1.81,-0.13l1.54,-1.1l0.92,-2.0l-0.93,-2.11l0.32,-0.65l0.79,-0.2l3.53,2.42l2.17,-0.13l1.54,1.52l1.28,-0.4l1.47,-1.74l1.11,0.38Z\",\n            name: \"Ari\\xe8ge\"\n          },\n          \"FR-RE\": {\n            path: \"M761.79,701.36l1.08,0.18l1.12,-0.39l1.21,0.39l2.77,-0.03l2.17,1.11l3.51,0.8l0.97,0.55l2.4,2.39l0.54,1.06l0.32,2.77l0.52,1.06l1.9,1.97l0.91,3.81l1.85,0.93l1.43,2.47l3.94,1.89l0.84,0.82l0.32,1.39l-1.08,2.72l-1.31,6.18l-0.27,4.98l-0.6,1.25l-1.42,0.53l-4.24,0.16l-2.56,1.32l-1.76,0.26l-1.74,-0.1l-1.22,-0.48l-1.58,0.46l-1.92,0.08l-3.62,-0.55l-3.79,-2.43l-5.72,-1.87l-1.23,-0.75l-1.75,-2.11l-3.42,-0.26l-3.52,-4.42l-0.9,-1.55l-0.63,-4.75l-3.33,-4.36l-1.6,-3.39l0.0,-1.42l0.43,-1.55l0.75,-1.19l2.55,-1.05l1.15,-1.41l0.43,-1.65l-0.32,-1.19l0.55,-0.82l-0.29,-0.86l0.61,-0.27l2.76,-0.09l5.6,-3.4l4.93,-0.0l2.25,0.81Z\",\n            name: \"La R\\xe9union\"\n          },\n          \"FR-75\": {\n            path: \"M465.44,178.43l-0.81,2.42l-0.63,0.32l-6.66,-0.1l-4.66,-1.66l-1.08,0.25l-0.35,-1.01l0.33,-1.1l1.86,-2.31l6.5,-0.01l0.75,0.27l1.32,1.54l1.0,0.67l2.45,0.72Z\",\n            name: \"Paris\"\n          },\n          \"FR-74\": {\n            path: \"M679.63,390.63l1.41,-0.73l2.69,-0.56l2.68,-0.09l2.31,0.77l2.11,-0.97l3.09,-3.14l3.94,-2.28l1.58,-1.45l-0.19,-2.13l-0.68,-0.47l-1.16,0.35l-0.4,-0.18l-0.89,-2.03l4.08,-5.7l3.32,0.16l1.15,1.46l0.93,0.33l0.77,-0.37l0.82,-1.0l4.35,-1.83l1.15,-1.48l11.95,-1.05l5.16,0.78l0.08,0.91l-0.38,1.12l-1.55,1.58l-0.38,1.39l1.23,1.83l2.14,1.97l1.23,1.83l-2.07,3.51l-1.08,2.81l-0.54,2.86l0.83,1.53l4.77,0.91l0.69,0.58l-1.17,1.69l0.25,3.27l1.29,0.49l1.46,-0.85l1.18,0.45l4.32,4.17l1.84,4.74l-1.27,1.06l-1.66,3.08l-1.14,0.85l-2.54,0.9l-1.94,0.05l-0.44,1.16l-1.45,-0.68l-2.69,0.96l-0.98,1.38l-0.34,1.34l0.04,2.12l-4.13,2.65l-0.73,-0.03l0.35,-2.15l-1.24,-1.81l-2.0,-0.99l-2.81,-0.28l-1.03,-0.51l-1.81,-1.57l-0.56,-1.14l1.0,-1.78l0.02,-1.93l-1.76,-1.43l-1.59,-0.03l-3.28,3.19l-0.87,1.3l-1.24,3.11l-0.67,0.83l-2.92,2.02l-1.3,3.76l-1.06,1.36l-1.32,0.92l-1.47,0.48l-1.52,0.03l-0.54,-0.18l-2.86,-3.29l-1.72,-1.36l-1.97,-0.89l-2.29,-0.03l-1.84,1.2l-1.36,0.1l-2.67,-0.73l-1.01,-0.85l-0.99,-3.12l-1.13,-0.8l-3.31,-0.61l-0.71,-0.81l-0.96,-6.52l-0.65,-1.13l-1.01,-0.37l-0.98,-8.24l0.06,-3.25l0.91,-0.87l0.83,0.89l0.88,0.31l1.03,-0.56l1.55,-2.09l1.78,0.11l1.01,-0.3Z\",\n            name: \"Haute-Savoie\"\n          },\n          \"FR-77\": {\n            path: \"M527.01,179.34l-0.11,1.1l-0.51,0.67l-2.55,0.08l-0.94,0.42l-0.16,0.75l1.09,1.07l-1.54,1.52l-0.27,1.55l0.54,0.66l1.24,-0.02l1.67,1.83l0.7,2.85l-0.5,1.9l0.28,1.65l0.9,0.56l2.22,-0.3l1.49,1.83l-2.45,1.85l-1.06,1.42l-0.92,2.34l-0.48,0.4l-2.35,0.42l-0.63,0.51l-0.08,0.73l0.94,1.41l-1.79,1.84l-0.05,0.79l0.65,1.23l-0.56,2.16l0.16,0.69l-1.39,1.3l-0.9,1.45l-0.77,0.1l-1.91,-0.46l-6.17,0.91l-4.68,-0.48l-2.32,0.9l-3.26,0.0l-0.8,0.78l-1.15,3.24l0.03,1.71l0.9,2.26l-1.5,2.46l-3.77,2.32l-0.95,3.37l-6.65,1.88l-0.6,-0.12l0.46,-1.24l-0.4,-0.63l-0.91,-0.28l-1.66,0.13l-1.16,0.39l-1.65,1.59l-1.87,0.81l-8.32,-0.58l-4.04,0.66l-1.59,-0.77l0.02,-0.63l0.53,-0.53l2.04,0.27l0.77,-0.41l0.21,-0.87l-0.51,-1.19l0.65,-0.98l0.18,-1.12l-1.38,-1.72l-3.43,-1.97l-0.96,-3.2l-1.72,-2.25l5.65,-5.46l1.78,-1.03l0.76,-0.92l-0.07,-0.57l-1.16,-0.88l-0.12,-0.46l-0.39,-5.8l1.51,-4.97l0.18,-3.88l0.77,-1.17l2.31,-2.12l-0.19,-2.68l1.31,-1.81l0.38,-1.59l-0.6,-6.14l-1.09,-2.66l0.08,-1.07l1.2,-3.57l0.0,-1.26l-1.33,-2.97l0.48,-1.75l-0.39,-0.89l-0.98,-0.66l0.63,-1.27l0.34,-2.93l0.59,-1.15l2.39,-0.95l1.28,0.25l1.79,1.42l0.99,0.02l1.16,-0.44l1.27,0.83l1.39,0.28l2.4,-1.49l4.01,0.91l5.72,-1.07l1.57,0.83l2.35,-1.11l1.82,-0.03l2.03,-1.04l3.48,0.96l0.98,1.05l0.87,1.67l-0.52,2.79l0.73,1.41l8.88,6.73l0.87,0.26l1.23,-0.5l0.48,0.14l0.61,2.97l0.7,1.03l3.28,1.81l2.3,-0.04Z\",\n            name: \"Seien-et-Marne\"\n          },\n          \"FR-76\": {\n            path: \"M421.48,106.09l-2.06,1.53l-2.09,2.85l-0.45,1.3l0.44,0.98l2.53,-0.43l0.4,0.34l-0.82,1.37l-1.94,1.09l-0.47,0.89l0.74,1.37l0.19,3.89l0.54,1.79l0.44,3.63l0.8,0.82l2.01,-0.46l0.65,0.53l-0.4,1.31l-1.05,0.52l-0.47,0.65l-1.01,2.31l-0.24,1.82l-2.08,0.81l-8.41,-3.23l-9.16,-1.1l-2.76,1.06l-1.7,1.98l-2.65,4.9l-0.59,0.43l-4.31,-0.27l-1.66,0.48l-1.22,0.86l-1.39,1.74l-3.89,0.92l-1.17,0.83l-0.65,1.2l0.29,1.23l-0.88,0.29l-0.99,-0.12l-3.87,-2.8l-2.21,-0.65l-1.68,-0.96l-0.59,-1.63l3.05,0.44l0.46,-0.41l-0.17,-2.06l-0.9,-0.89l-2.36,-1.02l-2.91,-2.45l-0.98,-0.39l-5.97,1.34l-2.55,-0.37l-1.75,-2.77l-0.47,-0.17l-2.35,0.47l-1.02,-0.38l-1.98,-2.28l-2.48,-1.7l-0.84,0.03l-4.29,2.28l-4.93,0.6l-4.99,-0.57l-4.35,-1.26l-3.7,-0.45l-1.09,-0.56l-1.65,-2.15l0.22,-1.23l3.15,-4.92l2.42,-6.93l3.76,-2.82l9.31,-3.67l0.73,-0.8l7.56,-3.82l2.18,-0.58l2.37,-1.37l4.68,-1.45l5.32,0.04l25.22,-6.87l1.56,-1.02l1.59,-0.51l2.41,-2.26l6.63,-4.5l8.53,5.05l10.02,8.92l0.82,1.05l0.92,3.13l1.89,2.97l0.77,2.22Z\",\n            name: \"Seine-Maritime\"\n          },\n          \"FR-71\": {\n            path: \"M562.27,336.18l0.34,-0.39l2.2,-0.79l0.73,-1.26l-0.24,-1.31l-2.75,-2.1l0.02,-3.93l-0.92,-0.98l-1.84,-0.56l-0.18,-0.63l0.21,-0.67l2.84,-0.75l0.95,-1.27l0.11,-1.78l-1.0,-2.98l0.55,-2.03l4.19,-0.67l3.55,-1.98l1.28,-0.32l0.94,0.2l2.52,2.56l3.25,1.17l1.71,2.88l0.9,0.16l1.88,-0.56l1.71,2.13l1.13,0.82l4.1,1.22l2.31,-0.15l2.09,4.11l1.21,1.07l3.27,0.91l0.98,2.32l1.15,0.68l1.06,-0.1l1.91,-1.42l3.31,-0.2l7.33,-2.89l5.05,-0.51l3.5,-0.95l1.75,1.53l5.44,-0.2l4.0,-1.74l0.92,0.33l1.55,2.84l3.44,3.22l2.4,1.27l1.61,0.29l1.67,1.37l1.99,0.63l-1.05,1.51l-4.39,0.61l-1.2,1.17l-0.05,0.66l0.39,0.73l1.85,1.61l-0.8,1.32l-0.1,0.94l1.47,1.38l1.77,6.19l-1.03,3.43l-1.83,1.08l-0.81,1.06l-0.2,2.01l0.61,1.51l2.83,1.66l0.43,0.91l-1.02,0.93l-4.32,0.87l-1.26,0.59l-4.14,-0.98l-1.53,-0.8l-2.16,-1.97l-1.58,-0.52l-2.05,0.18l-3.7,1.25l-1.28,0.13l-4.17,-1.37l-0.92,-0.05l-1.3,0.44l-1.85,4.3l-0.85,4.21l-1.47,2.56l-0.15,1.93l-3.53,6.7l-1.32,4.86l0.08,0.87l-2.89,-0.32l-0.98,-0.75l-0.98,-2.54l0.04,-1.79l-1.73,-1.29l-0.18,-1.86l-0.76,-0.6l-1.87,-0.55l-1.12,0.62l-0.53,1.93l-1.03,0.26l-2.35,-2.01l-0.72,0.04l-1.62,0.92l-1.03,0.08l-2.29,-0.51l-2.25,-0.92l-0.92,0.11l-0.68,0.9l-1.27,4.46l-1.74,2.06l-1.51,1.09l-1.62,0.57l-1.65,0.02l-4.83,-1.24l-3.08,0.65l-4.17,-0.93l-4.25,1.28l-1.42,-0.08l-2.06,-1.47l-2.77,-1.06l0.11,-2.73l-0.6,-1.7l5.26,-2.58l1.52,-1.33l0.08,-0.97l-0.86,-1.29l0.04,-1.38l-0.52,-1.25l0.64,-3.0l-0.8,-3.17l-2.08,-1.35l-4.18,-0.89l-2.7,-2.24l-1.72,-0.07l-3.83,-1.94l0.37,-3.1l-0.38,-1.88l-1.07,-0.72l-1.57,-2.64l-2.41,-2.14l-0.47,-1.58l-1.23,-1.99l6.23,-0.88l1.46,0.86l2.65,2.87l0.44,0.1l1.46,-0.58l1.52,-1.21l3.71,-1.21l4.85,-2.87l3.05,-0.59l0.49,-0.7l0.09,-2.12l-0.8,-1.29Z\",\n            name: \"Sa\\xf4ne-et-Loire\"\n          },\n          \"FR-70\": {\n            path: \"M732.55,259.44l-2.88,3.17l-1.2,2.11l-0.42,2.48l1.68,5.43l0.2,3.95l1.28,2.06l-0.19,0.86l-1.42,1.33l-4.67,-1.11l-2.25,0.63l-1.97,1.28l-2.26,-0.42l-1.03,0.82l-1.64,2.83l-3.01,-1.42l-0.7,0.17l-0.94,0.9l-1.98,-1.56l-1.16,-0.14l-5.54,0.9l-1.91,1.17l-1.98,4.16l-0.8,0.72l-3.35,-0.18l-1.04,0.81l-1.02,1.85l-0.9,0.3l-2.2,-0.03l-2.92,2.94l-4.6,1.44l-4.42,-0.47l-11.89,6.05l-3.92,-0.48l-4.0,0.76l-3.44,-1.66l-0.69,-0.66l-0.63,0.02l-0.84,-1.07l-0.56,-4.91l-2.21,-1.91l-0.59,-3.43l-0.81,-0.72l-1.67,-0.59l0.44,-1.97l0.7,-0.55l1.95,-0.44l2.03,-2.43l0.31,-1.4l-0.34,-1.34l-0.93,-1.42l0.2,-1.34l-0.22,-0.65l-1.0,-1.07l-0.91,-0.31l-0.83,0.13l-1.8,1.57l-1.46,-0.6l2.09,-4.03l1.01,-0.53l3.99,-0.6l3.21,1.65l1.53,0.3l6.58,-1.86l0.7,-0.44l0.69,-0.83l0.2,-0.97l-0.19,-2.21l0.55,-2.48l-0.58,-2.14l0.19,-0.51l0.63,-0.82l6.42,-3.94l2.41,-2.91l2.03,-0.75l0.4,-0.92l-0.24,-0.87l1.66,-0.91l1.8,-2.61l0.31,0.88l-0.17,1.53l0.84,0.59l3.53,-2.14l2.66,-2.84l1.54,-0.3l2.78,0.53l1.12,0.68l0.83,1.02l-0.06,1.28l0.31,0.67l3.72,1.77l2.64,-0.19l2.39,-1.21l3.0,-0.19l2.26,0.8l5.28,2.92l1.38,0.35l2.17,-0.03l1.59,-0.57l1.93,-2.36l0.72,-0.14l3.61,3.45l3.4,1.51l5.45,3.8Z\",\n            name: \"Haute-Sa\\xf4ne\"\n          },\n          \"FR-73\": {\n            path: \"M658.46,427.8l1.73,-0.16l4.42,-4.15l2.23,-1.04l0.99,-1.05l0.84,-2.26l0.46,-3.28l2.91,-7.66l0.55,-2.73l0.4,0.1l0.46,0.75l0.65,5.41l0.44,1.39l1.0,1.06l3.47,0.68l0.76,0.58l0.53,2.21l0.99,1.46l2.07,0.99l1.65,0.28l1.63,-0.15l1.83,-1.19l1.78,0.03l1.77,0.79l1.66,1.31l2.85,3.29l1.02,0.37l1.77,-0.06l1.58,-0.52l1.6,-1.13l1.2,-1.57l1.17,-3.53l2.91,-2.03l0.8,-1.02l1.25,-3.12l0.78,-1.16l2.92,-2.92l0.45,-0.1l1.07,0.4l0.92,1.0l-0.17,1.13l-1.03,1.87l0.69,1.7l2.0,1.78l1.23,0.62l2.94,0.32l1.7,0.87l0.94,1.44l-0.47,2.15l0.38,0.48l1.56,-0.02l3.93,-2.52l0.65,2.99l1.41,1.87l1.65,1.08l2.44,0.57l2.19,1.73l2.63,0.83l0.29,0.87l-0.98,2.48l1.03,2.1l0.33,3.09l0.49,1.22l5.55,3.27l1.58,2.67l3.47,1.57l0.2,0.81l-1.73,3.0l-2.31,2.53l0.24,2.49l0.65,1.55l0.0,0.91l-1.6,1.21l-1.33,1.99l-0.85,-0.84l-0.72,-0.2l-4.4,1.41l-2.78,3.01l-2.44,0.32l-0.53,0.84l0.54,1.12l-1.68,0.71l-4.26,-1.68l-2.26,-0.35l-2.28,1.23l-2.07,0.11l-2.41,1.23l-1.98,0.23l-2.21,1.2l-2.53,0.08l-0.73,0.39l-0.94,2.26l-0.81,0.88l-1.02,0.26l-3.86,-1.22l-0.85,-1.84l-1.43,-1.0l-4.54,-0.57l-0.87,-0.62l-0.8,-1.5l-1.95,-0.61l-3.81,-0.24l-0.27,-2.67l-1.39,-5.1l0.11,-1.29l0.63,-1.24l2.75,-2.38l0.41,-2.05l-0.5,-2.06l-1.14,-1.71l-2.71,-2.72l-0.85,-0.35l-4.2,-0.4l-3.65,-2.95l-2.4,-0.56l-1.35,0.34l-1.1,0.96l-0.35,5.75l-8.79,-3.19l-0.82,-0.79l-7.95,-14.1Z\",\n            name: \"Savoie\"\n          },\n          \"FR-72\": {\n            path: \"M351.4,270.06l0.02,0.93l-2.17,0.43l-3.23,1.43l-2.52,0.52l-1.04,0.58l-0.9,0.99l-1.95,-0.85l-1.07,0.0l-0.78,0.53l-0.36,0.7l0.4,2.57l-5.8,-1.04l-6.07,-1.69l-0.5,0.27l-0.57,1.88l-1.08,0.05l-3.11,-1.35l-2.23,-0.37l-6.66,-3.2l-3.43,-0.45l-0.68,0.27l-0.86,1.05l-1.16,0.43l-1.42,-0.29l-1.32,-0.88l-0.81,-1.26l-0.1,-1.37l1.2,-0.92l0.27,-0.59l-0.87,-1.29l-0.99,-0.13l-2.11,1.18l-9.84,-4.01l1.52,-1.18l0.27,-1.75l-0.32,-0.43l-2.15,-0.41l-0.74,-0.43l-0.62,-0.89l0.02,-0.71l2.8,-1.29l0.77,-0.83l0.19,-1.25l-0.86,-1.98l0.51,-1.45l1.22,-0.73l2.99,-0.23l1.11,-0.49l0.65,-0.82l0.05,-1.28l-0.48,-1.18l-2.27,-2.6l-0.42,-0.77l0.21,-0.82l4.77,-1.14l1.85,-1.48l0.52,-2.07l-0.91,-2.91l0.27,-2.05l4.53,-2.75l1.2,-2.44l-0.88,-8.62l0.85,-1.78l0.67,-0.45l7.89,-1.16l3.37,0.46l0.6,-0.45l0.44,-1.41l2.46,-0.81l2.23,-2.53l2.43,-1.15l5.27,-1.07l1.66,0.18l3.55,1.66l0.35,1.07l-0.32,2.68l0.3,3.32l0.87,2.03l1.63,1.4l1.84,0.94l2.82,-0.07l0.41,2.48l1.13,0.63l5.3,1.27l2.3,0.07l0.97,-0.32l1.62,1.39l1.93,2.55l2.19,1.39l1.53,0.31l1.53,-0.36l2.97,1.92l3.09,0.38l0.63,0.45l-0.41,0.52l-4.24,2.22l-0.26,1.28l1.21,1.18l-2.67,0.5l-0.68,0.75l0.01,0.82l1.12,2.05l1.71,0.46l-0.65,3.22l0.42,1.92l-0.62,1.15l-3.06,2.39l-0.56,1.67l-0.05,3.43l-1.51,4.18l-1.33,1.2l-1.74,0.98l-3.44,1.47l-1.46,1.3l-0.79,1.81l0.48,1.28Z\",\n            name: \"Sarthe\"\n          },\n          \"FR-79\": {\n            path: \"M307.7,318.83l1.01,2.11l0.31,2.12l0.43,0.78l1.59,0.62l0.51,0.63l-0.04,1.91l1.71,5.06l2.48,2.93l-0.11,0.87l-0.46,0.4l-1.76,-0.04l-0.36,0.34l-0.18,1.29l0.21,3.21l1.5,1.72l0.3,0.95l-0.7,2.37l-1.66,2.9l-0.27,1.28l0.15,1.41l0.77,1.23l1.89,0.75l0.18,0.78l-1.63,4.28l-1.29,1.43l-0.35,0.87l0.03,2.17l1.17,1.4l0.04,4.29l0.67,1.2l1.43,1.29l-0.04,2.02l0.5,1.39l1.12,1.37l1.4,0.93l1.33,-0.26l1.92,-2.12l0.98,-0.48l0.98,0.03l1.05,0.86l0.28,1.47l-0.35,1.7l-0.79,1.42l-2.24,2.67l-0.55,1.15l-0.3,1.85l0.85,1.39l4.2,1.72l0.65,0.44l0.28,0.88l-0.61,2.2l0.12,0.72l-0.77,0.42l-2.59,-1.26l-3.0,0.43l-3.33,1.46l-2.96,2.31l-3.1,5.17l-2.17,0.89l-1.1,-0.39l-3.28,-3.64l-5.12,-3.24l-2.81,-0.86l-4.02,-0.1l-3.17,-2.08l-1.48,-0.19l-2.64,0.33l-2.25,-2.14l-1.36,-0.65l-3.99,-0.28l-1.25,-0.8l-5.25,-5.83l-1.47,-0.94l0.45,-0.86l0.02,-1.06l-0.75,-1.98l3.3,-1.6l2.86,-0.19l2.34,-2.04l2.9,-0.42l0.56,-0.59l0.18,-0.79l-0.96,-1.5l-2.15,-1.52l-1.48,-0.05l-0.2,-0.92l0.59,-2.98l-0.97,-4.09l1.47,-2.55l-0.66,-4.53l-1.62,-2.86l-0.6,-3.2l-3.78,-6.41l-0.05,-0.67l0.83,-1.82l-0.25,-0.71l-1.96,-1.84l-3.53,-1.93l-0.97,-1.29l-0.82,-3.62l-0.91,-1.07l-1.53,-0.78l-2.22,-3.06l-2.05,-1.29l0.28,-0.66l0.72,0.13l4.34,1.93l4.31,-0.56l5.13,0.68l3.99,-0.34l1.28,-0.41l1.37,-1.03l2.73,-1.24l0.34,-1.13l-0.81,-1.37l1.0,-0.85l1.73,-0.42l2.13,0.74l5.97,-1.69l6.45,-0.7l3.52,0.09l1.83,-0.35l1.08,0.56l1.0,2.22l1.71,0.55l0.63,-0.49Z\",\n            name: \"Deux-S\\xe8vres\"\n          },\n          \"FR-78\": {\n            path: \"M418.01,161.81l0.47,1.62l1.53,0.32l3.71,-1.8l2.31,-0.25l0.99,0.35l0.64,0.72l0.72,2.92l0.93,1.67l0.47,0.18l3.61,-1.19l1.99,0.28l1.59,2.11l-0.41,1.35l0.52,1.33l1.23,0.51l1.54,-0.92l1.78,-3.26l1.06,-0.33l3.04,0.23l1.68,0.75l-0.28,1.59l-2.23,1.75l-0.89,2.2l0.17,2.13l0.34,0.36l1.31,0.21l0.05,2.93l0.86,2.02l3.06,2.77l-5.57,1.66l-0.64,0.67l-1.39,3.89l-1.84,0.37l-0.95,0.59l-0.89,1.34l-0.26,1.51l0.54,3.15l-0.45,2.53l-0.65,1.03l-0.75,0.35l-2.82,0.14l-0.66,0.79l-1.85,7.72l-2.31,0.34l-4.37,-1.8l-0.92,-0.66l-1.17,-1.71l0.01,-2.65l-0.44,-1.51l-0.7,-0.87l-2.25,-1.46l-0.79,-2.45l-3.87,-2.43l-1.32,-1.5l-0.63,-1.5l-1.41,-0.91l0.0,-0.93l1.6,-2.06l0.18,-1.09l-0.28,-0.53l-1.69,-0.85l-0.41,-0.65l-0.06,-1.41l0.53,-2.41l-0.31,-1.9l-1.49,-1.94l-3.28,-5.55l-0.4,-2.82l-2.11,-0.85l0.25,-2.13l-0.72,-1.71l0.41,-0.57l7.7,-1.56l2.34,-1.08l4.31,0.9Z\",\n            name: \"Yvelines\"\n          },\n          \"FR-YT\": {\n            path: \"M678.38,715.39l-0.52,0.0l-2.02,-6.29l2.65,-2.73l0.87,2.15l0.24,2.21l-0.38,2.26l-0.84,2.4ZM647.49,692.27l-1.04,0.75l-0.14,0.46l1.6,0.36l0.6,0.88l2.18,1.87l2.93,3.52l1.63,1.28l2.49,0.62l4.96,-0.04l2.61,0.78l2.6,1.74l1.05,1.73l0.02,2.1l-0.68,2.82l-3.71,5.46l-1.53,1.19l0.14,2.09l1.04,1.92l2.81,1.86l-0.3,1.89l-3.07,6.4l-2.6,3.07l-1.21,3.45l2.82,4.18l-1.15,1.69l-1.53,1.06l-0.76,-1.37l-0.41,-0.2l-1.1,0.17l-1.53,1.03l-1.83,0.51l-1.63,-0.43l-2.25,-1.33l-1.24,0.41l0.12,-1.88l-0.84,-1.8l-1.74,-0.77l-1.92,0.17l0.0,-0.31l2.91,-1.61l0.29,-2.68l-1.49,-2.81l-2.83,-1.57l0.22,-0.43l1.06,-0.67l1.55,-0.14l0.82,0.5l2.83,3.33l2.81,1.68l1.89,-0.73l0.6,-2.42l-0.76,-2.88l-1.37,-2.17l-1.74,-1.96l-4.21,-3.56l2.58,-0.75l0.36,-0.4l-0.07,-1.34l-0.91,-1.33l-0.68,-2.3l-0.55,-4.71l-0.6,-2.37l-1.57,-1.23l-1.87,-0.61l-1.59,-1.03l-1.74,-2.81l-0.41,-4.1l7.31,-7.87l0.59,1.27l-0.82,0.34Z\",\n            name: \"Mayotte\"\n          },\n          \"FR-66\": {\n            path: \"M419.41,662.94l0.18,-1.54l0.62,-1.4l0.95,-0.83l6.33,-1.23l1.62,-0.04l2.87,0.76l1.42,-0.31l1.24,-1.33l0.24,-2.08l0.4,-0.91l1.5,-1.63l6.16,-0.76l3.36,0.54l0.91,-0.41l1.55,0.66l1.74,-1.21l2.82,-2.93l2.32,0.28l1.26,-0.26l1.25,-0.79l0.69,-1.19l-1.22,-6.76l0.48,-0.85l1.85,-0.65l20.21,0.96l1.72,-0.54l3.27,-3.63l4.2,-1.71l2.09,1.3l9.15,4.22l-0.42,6.18l0.26,1.92l-0.34,3.08l0.88,9.52l1.12,1.26l4.27,1.24l0.37,0.52l-0.12,1.76l1.98,2.59l0.3,1.34l-2.29,0.36l-3.05,-0.09l-1.83,-0.7l-1.61,-2.13l-2.87,-0.28l-1.16,0.57l-2.17,-0.57l-1.94,1.35l-3.1,0.24l-3.76,2.65l-4.83,-0.08l-1.22,0.53l-2.65,1.86l-0.57,0.72l0.5,1.8l0.52,0.57l-2.26,-0.17l-2.79,-0.85l-1.31,0.01l-0.83,0.63l-0.48,1.11l-0.67,0.22l-2.94,-1.07l-1.08,-0.76l-1.67,-2.44l-2.78,-0.4l-6.16,-2.91l-1.99,0.2l-3.71,1.04l-3.02,-0.29l-1.14,0.54l-1.01,1.86l-2.45,1.95l-0.62,0.36l-2.45,0.36l-0.71,-0.1l-1.77,-1.24l-1.32,-3.75l-1.07,-1.5l-3.53,-0.74l-3.45,-2.1l-1.38,-0.5l-3.76,-0.46l-0.8,-0.3l-0.31,-0.6ZM436.08,668.09l0.96,-0.22l0.2,-0.59l-1.32,-2.33l-0.63,-0.79l-0.47,-0.12l-0.9,0.48l-0.67,1.33l0.07,1.16l0.97,0.84l1.79,0.25Z\",\n            name: \"Pyr\\xe9n\\xe9es-Orientales\"\n          },\n          \"FR-67\": {\n            path: \"M749.43,204.53l5.77,-0.36l0.71,-0.43l0.65,-1.16l2.35,-1.16l0.73,-0.71l0.93,-1.77l1.44,-4.66l-0.53,-0.88l-1.5,-0.78l-0.14,-0.62l2.91,-4.3l0.33,-1.37l-0.57,-1.43l-3.83,-3.82l-1.83,-0.81l-0.15,-1.32l-0.77,-0.76l-0.74,0.09l-0.54,0.56l-0.45,1.75l-2.17,0.87l-1.14,1.58l-1.05,0.07l-0.85,-1.8l-0.77,-0.61l0.26,-0.79l0.96,-0.95l-0.06,-1.04l-5.03,-1.96l-1.91,-1.6l-0.2,-0.81l0.44,-1.33l0.89,-1.07l2.61,-2.08l0.31,-1.9l2.13,-2.7l-0.21,-1.76l0.28,-0.4l1.23,0.18l0.29,0.32l0.81,2.78l0.94,1.02l8.51,2.56l1.02,1.76l1.21,0.68l1.4,0.29l2.12,-0.08l7.03,-1.14l3.26,1.63l1.38,-0.12l0.76,-0.45l1.05,-1.41l1.35,-2.8l1.9,-2.92l2.27,-0.55l2.64,0.55l2.77,-0.96l5.0,1.23l4.59,-0.2l9.65,4.37l6.29,1.29l-1.02,1.01l-1.91,3.08l-2.79,6.52l-0.7,1.0l-3.2,1.38l-0.7,0.85l-0.46,1.3l-2.12,0.14l-0.95,0.41l-0.65,2.78l-3.8,3.45l-2.72,1.47l-2.58,3.44l-0.59,2.73l-0.01,2.81l0.72,2.0l-2.23,1.72l-0.47,2.28l-1.12,1.98l-0.77,3.01l-0.07,1.2l0.89,2.96l-0.06,0.91l-0.71,0.98l-2.24,1.43l-0.92,4.51l-4.46,5.68l-0.61,2.23l-1.29,2.14l-2.85,-0.38l-0.93,-1.96l-2.43,-0.53l0.39,-2.66l-0.86,-1.15l-9.78,-4.05l-0.93,-2.72l-1.79,-0.58l-3.01,-0.19l-0.06,-0.79l-1.49,-1.39l-3.3,-0.17l-1.31,-0.59l-0.23,-0.56l0.82,-2.61l0.59,-7.58l1.09,-1.01l0.02,-0.68l-3.11,-1.58Z\",\n            name: \"Bas-Rhin\"\n          },\n          \"FR-64\": {\n            path: \"M204.81,598.27l0.63,0.4l0.52,-0.08l1.38,-0.84l5.64,-0.92l1.36,-1.72l2.57,-1.46l2.17,-3.85l2.64,-3.02l2.34,1.93l1.96,0.84l3.62,-0.6l4.13,-0.08l2.15,-0.46l2.54,-1.24l2.39,-2.3l1.4,0.72l0.29,0.8l-0.18,2.62l1.09,1.13l0.44,0.09l4.3,-2.38l2.57,1.36l1.05,0.16l1.13,-0.26l1.13,-0.65l0.53,-1.09l-0.02,-1.16l3.11,0.76l1.49,-0.99l2.78,0.18l3.59,-1.69l2.16,0.06l2.94,1.44l2.65,-0.72l6.78,1.04l1.02,-0.26l5.11,-3.37l0.44,0.14l-0.23,1.88l1.48,0.88l6.8,-0.81l3.48,-1.38l3.8,-0.5l5.59,1.04l1.06,0.66l0.67,1.47l1.56,1.16l2.16,4.89l-0.31,0.26l-1.15,-0.07l-0.56,0.49l0.03,2.28l0.52,0.69l0.76,0.17l1.43,-1.29l0.75,0.02l-0.11,3.16l1.06,3.23l-0.48,0.48l-1.62,0.52l-0.96,1.06l-0.61,2.64l0.6,2.08l-0.4,0.75l-1.97,1.89l-1.1,3.23l-1.55,0.13l-1.74,2.98l-2.28,1.29l-0.98,1.23l0.15,3.83l-0.4,0.28l-2.98,0.33l-2.69,2.77l-0.17,0.81l0.39,1.61l-0.03,1.69l-1.67,2.29l-0.35,1.23l0.55,3.77l-0.88,-0.07l-0.78,1.18l-0.86,-0.35l-4.31,2.79l-1.69,0.12l-3.22,-1.34l-1.7,-0.07l-0.41,0.38l-0.09,1.49l-1.58,0.74l-0.62,-1.55l-1.55,-0.25l-0.08,-0.92l-2.44,-2.91l-3.24,-2.0l-1.85,-0.11l-0.47,-0.41l-0.25,-0.49l0.25,-1.36l-1.4,-2.86l-1.82,-0.51l-4.68,0.75l-4.79,-0.35l-2.24,-0.65l-2.95,-2.22l-3.08,-0.49l-2.02,-1.09l-2.32,0.15l-4.04,-2.44l-3.6,-0.59l-1.04,-0.56l-0.92,-0.94l-0.21,-0.75l0.38,-0.75l1.21,-0.93l-0.15,-0.71l-1.6,-0.32l-1.53,0.56l-1.05,1.06l-0.53,1.66l-0.16,1.94l-0.41,0.78l-2.38,0.12l-2.68,-0.98l-1.02,-1.03l-0.63,-1.32l3.7,-3.88l0.95,-2.41l0.66,-2.96l-0.35,-3.1l-2.03,-1.72l-2.04,0.3l-2.51,-1.16l-3.21,-0.56l-1.3,0.75l-0.75,1.77l-1.7,0.25l-0.8,-0.46l-0.49,-1.68l0.17,-0.84l-0.85,-0.76l-1.84,-0.58l-3.76,1.0l-0.43,-1.87l-0.91,-1.03l-1.52,-0.66l0.07,-2.41ZM309.11,602.32l1.15,-0.9l0.67,-2.47l-0.61,-1.33l-1.64,-0.44l-1.19,0.8l-0.49,2.49l0.63,1.45l1.49,0.4ZM307.84,608.3l0.94,-0.4l1.08,-1.94l-0.6,-1.74l-1.63,-0.95l-0.46,0.07l-1.45,1.45l-0.2,1.38l0.25,1.08l0.52,0.68l1.55,0.37Z\",\n            name: \"Pyr\\xe9n\\xe9es-Atlantiques\"\n          },\n          \"FR-65\": {\n            path: \"M296.09,638.61l-0.69,-4.39l0.23,-0.9l1.78,-2.58l-0.28,-3.88l2.39,-2.45l2.79,-0.25l0.84,-0.59l0.32,-0.83l-0.41,-1.39l0.02,-1.75l0.72,-0.92l2.37,-1.37l1.67,-2.92l1.05,0.11l0.6,-0.32l1.2,-3.37l1.88,-1.77l0.55,-1.02l0.07,-0.67l-0.62,-1.7l0.51,-2.21l0.68,-0.76l2.02,-0.75l0.42,-0.66l-0.06,-1.09l-0.97,-2.51l0.21,-2.73l-0.21,-0.77l-0.56,-0.5l-0.61,-0.06l-0.78,0.37l-1.02,1.09l-0.38,-0.27l-0.07,-1.71l1.65,-0.19l0.4,-0.55l-0.04,-0.91l-1.88,-4.23l-1.97,-1.72l-0.58,-1.36l-0.95,-0.68l0.87,-0.85l1.51,-0.95l1.62,-0.48l1.39,0.18l0.57,2.55l1.26,2.72l1.24,0.37l3.06,1.7l1.79,0.31l0.52,1.92l1.02,1.53l-0.53,1.94l0.23,1.42l1.31,0.87l1.13,1.6l0.97,0.79l2.03,0.3l4.05,-0.88l0.82,0.14l1.23,1.44l1.4,0.78l0.95,-0.14l1.36,-0.84l1.27,1.95l0.96,0.24l2.74,-0.2l8.19,1.7l0.38,1.06l-2.92,2.88l0.13,2.25l-0.32,0.39l-2.29,0.86l-1.23,1.77l-3.84,3.53l0.07,0.64l7.15,4.1l-1.97,3.94l0.1,1.15l0.5,0.33l0.87,-0.24l1.82,-1.22l1.58,-0.52l2.13,5.0l-3.75,5.0l-1.72,1.29l-3.06,-0.36l-1.37,0.25l-1.04,1.57l-0.46,1.98l-0.12,4.52l0.7,5.23l-2.01,0.47l-2.19,-0.13l-0.39,-1.05l-2.06,-1.35l-1.26,0.44l-2.75,3.06l-0.55,0.07l-2.26,-3.03l-4.46,-1.22l-1.15,0.19l-1.08,0.65l-3.75,0.5l-4.68,1.54l-1.99,0.16l-2.26,-0.8l-1.02,-1.0l-1.36,-0.45l-0.27,-0.97l-1.39,-1.16l-0.66,-0.99l-0.32,-1.14l0.13,-1.21l-0.54,-0.42l-2.76,0.82l-1.36,-0.14l-0.79,-1.35l-3.39,-1.83ZM309.0,601.52l-0.8,-0.16l-0.41,-0.99l0.4,-2.01l0.84,-0.4l0.79,0.28l0.31,0.77l-0.59,2.03l-0.54,0.47ZM307.75,607.5l-0.9,-0.16l-0.53,-1.24l0.07,-0.86l1.14,-1.14l1.03,0.52l0.48,1.4l-0.86,1.31l-0.43,0.15Z\",\n            name: \"Hautes-Pyr\\xe9n\\xe9es\"\n          },\n          \"FR-62\": {\n            path: \"M413.26,57.99l0.02,-1.01l-3.2,-2.12l1.12,-3.04l0.33,-6.83l1.74,-1.1l0.1,-0.58l-1.61,-2.08l-0.3,-1.01l-0.26,-3.74l-0.64,-3.46l0.26,-2.94l2.0,-4.41l0.34,-1.54l-1.52,-6.24l1.26,-0.84l3.05,-0.71l2.82,-2.96l1.8,-1.42l11.58,-4.22l1.24,0.13l2.03,-1.0l5.25,-0.55l2.42,2.31l4.96,8.43l2.25,6.01l1.42,1.12l1.84,0.6l5.52,-0.1l1.0,0.31l0.46,0.59l-2.34,2.65l-0.02,1.1l0.98,1.29l-0.35,2.13l0.77,0.98l3.22,0.58l2.96,2.38l1.15,0.37l15.06,0.55l1.38,-0.82l1.83,-2.04l1.02,-0.52l0.9,0.15l1.0,0.69l1.3,1.43l-2.22,0.94l-0.91,0.89l-0.4,1.05l0.06,1.66l-1.07,1.87l0.19,1.3l1.07,1.24l1.24,0.31l2.29,-0.59l0.86,0.1l2.28,2.2l3.62,-0.22l1.06,0.77l0.59,2.11l0.72,1.19l2.6,0.82l-0.15,0.97l-2.82,1.98l-0.48,1.75l1.16,1.72l1.53,1.4l0.91,1.31l0.1,0.8l-2.5,2.87l-0.01,1.38l0.7,0.76l0.97,0.21l2.38,-1.03l2.06,0.16l1.0,0.46l1.66,1.62l0.28,0.93l-1.83,1.86l-0.79,1.44l-2.26,8.75l-0.05,1.35l-3.49,-1.73l-2.18,-0.15l-1.29,0.85l-0.01,1.73l-0.42,0.53l-3.52,0.3l-2.63,1.27l-0.35,-0.48l-0.01,-2.43l-0.6,-1.0l-0.66,-0.3l-0.96,0.27l-3.34,2.32l-0.75,-0.07l-0.01,-0.57l1.09,-1.47l-0.03,-1.29l-1.31,-2.12l-0.95,-1.02l-1.19,-0.66l-0.76,0.22l-0.47,0.72l-0.22,3.08l-3.59,-1.54l-3.28,-0.62l0.23,-1.55l-0.84,-0.78l-1.17,-0.0l-1.89,0.86l-2.21,-0.34l-2.47,0.23l-0.82,0.62l-1.01,1.74l-0.72,-0.02l-0.81,-0.93l-0.31,-0.93l0.37,-1.76l1.95,-1.64l2.76,-1.45l0.65,-0.83l-0.19,-0.81l-0.67,-0.61l-2.96,-1.39l-1.81,-0.11l-1.13,0.92l-1.61,-1.74l-0.92,-0.29l-0.8,0.45l-0.34,0.97l-1.02,0.36l-6.98,0.99l-4.57,0.1l-1.52,-1.03l-0.6,-1.14l-0.08,-1.04l-0.83,-0.91l-6.58,-3.15l0.97,-1.81l-1.0,-0.9l-1.27,0.07l-1.48,1.08l-0.5,0.02l-0.91,-0.44l-1.88,-1.99l-1.36,-0.85l-2.32,-0.22l-2.56,0.27l-4.46,1.3l-2.04,-0.71l-1.31,-1.35ZM502.82,75.26l-0.41,-1.74l-0.71,-0.15l-1.47,1.47l-1.82,0.28l-0.4,0.37l-0.14,2.13l0.33,0.42l1.15,0.19l3.31,-0.77l0.35,-0.44l-0.19,-1.76Z\",\n            name: \"Pas-de-Calais\"\n          },\n          \"FR-63\": {\n            path: \"M539.28,403.78l-0.1,0.97l0.42,0.81l2.12,1.59l0.81,1.4l-1.18,2.85l-0.09,2.56l-0.9,1.89l0.2,0.76l1.8,2.84l1.04,0.63l0.51,0.79l3.2,6.42l7.55,6.03l2.43,5.41l0.06,0.97l-0.44,1.28l-0.44,0.82l-2.82,2.97l-0.8,1.5l-0.51,2.35l-4.5,-1.88l-1.24,0.65l-0.7,1.6l-1.04,0.46l-1.35,-0.11l-2.73,-1.3l-0.8,-0.09l-3.34,1.65l-0.8,-0.4l-2.4,-2.99l-3.95,-1.79l-1.72,-0.06l-5.17,1.19l-2.96,-1.53l-1.3,-0.04l-1.64,1.33l-4.08,1.3l-2.15,2.12l-1.79,0.43l-4.22,0.04l-4.2,4.06l-2.11,0.79l-2.63,-1.43l-1.86,-3.64l-1.2,-1.24l-4.3,-1.84l-5.21,0.79l-2.48,-0.15l-2.22,-3.5l-1.67,-0.85l-3.09,-0.68l-3.23,-1.92l-1.25,-0.0l-0.9,-0.64l-0.26,-4.14l-1.44,-1.87l-0.36,-0.94l0.86,-2.7l1.65,-0.68l0.84,-1.03l0.29,-4.28l-0.66,-1.43l-1.92,-2.11l-0.96,-0.86l-1.78,-0.64l-0.67,-1.98l-1.61,-2.01l-0.03,-0.75l3.69,-2.85l2.41,-0.16l2.54,-2.66l1.57,-3.25l1.7,-1.93l0.18,-3.82l-2.07,-4.09l-0.15,-0.82l0.28,-3.52l3.05,0.89l1.97,-0.34l1.66,-1.01l2.79,-3.32l0.51,-3.05l3.68,1.89l1.34,-0.26l0.47,-1.3l0.01,-1.99l1.77,-1.21l2.08,-0.06l1.0,0.54l0.34,0.69l-0.12,2.57l0.62,2.65l1.67,2.57l2.09,2.0l2.1,1.08l4.49,-0.67l1.39,2.21l0.96,0.86l1.28,0.36l5.27,-0.46l4.72,1.15l1.48,1.05l6.11,-1.99l1.07,3.51l-0.05,1.21l0.55,0.39l1.81,-0.75l1.87,-0.1l3.84,0.75l1.44,0.71l2.74,2.26l1.24,0.52Z\",\n            name: \"Puy-de-D\\xf4me\"\n          },\n          \"FR-60\": {\n            path: \"M505.12,111.37l0.08,1.16l-0.83,4.81l1.53,3.74l-0.67,5.09l0.09,1.94l0.84,1.77l1.58,0.97l0.42,1.49l-0.66,0.97l-1.93,-0.64l-1.46,0.84l-1.21,4.06l-0.7,1.39l-1.58,0.93l-3.16,0.25l-1.68,1.1l-0.17,0.42l0.21,0.63l2.72,2.49l0.45,1.35l-0.69,1.31l-2.48,1.5l0.11,2.24l0.53,0.91l0.61,0.44l0.8,0.05l3.28,-0.78l1.11,0.02l2.04,0.66l1.38,1.21l0.1,0.94l-1.19,2.18l-3.14,2.31l-2.42,0.25l-2.07,1.06l-1.51,-0.82l-5.87,1.07l-4.04,-0.91l-0.77,0.16l-1.31,1.18l-0.79,0.15l-2.03,-1.11l-1.93,0.48l-1.66,-1.34l-1.69,-0.39l-2.67,0.99l-2.8,-2.54l-1.69,0.38l-11.67,-5.3l-1.4,0.29l-2.01,1.11l-1.55,-0.09l-3.94,-1.5l-2.4,-0.25l-1.47,-0.68l-1.66,-1.28l-0.74,-0.17l-1.89,0.7l-3.44,2.04l-4.01,0.26l-2.09,0.47l-5.65,-1.4l-3.29,-0.27l-0.95,-0.91l-0.49,-1.57l-0.8,-0.65l-0.36,-1.25l1.17,-1.22l0.93,0.15l1.28,1.38l0.8,0.35l1.12,-0.28l0.34,-0.65l-2.06,-4.76l-1.74,-5.57l-0.28,-3.2l1.24,-3.11l1.48,-1.09l0.51,-1.75l-0.83,-1.22l-2.26,0.41l-0.42,-0.32l-0.42,-3.51l-0.53,-1.76l-0.18,-3.85l-0.71,-1.37l2.11,-1.28l1.1,-1.85l-0.66,-1.22l-2.68,0.42l0.29,-1.1l2.51,-3.29l1.48,-0.9l4.6,1.83l0.57,2.49l0.73,0.66l7.29,-1.02l5.86,2.44l10.5,-1.06l4.03,0.67l3.21,1.99l4.78,0.9l2.38,2.06l2.76,-0.21l2.31,1.93l1.09,0.42l2.66,-0.82l0.63,2.13l1.2,0.68l0.73,-0.37l0.96,-1.74l1.68,-1.61l2.18,-0.25l2.67,0.88l1.01,-0.32l0.43,-0.71l-0.08,-1.86l0.32,-0.63l2.36,-0.62l2.47,-3.38l0.78,-0.0l2.24,1.25l2.85,-0.78l0.67,0.11l2.0,1.24l1.28,-0.13l0.73,-0.98l-0.02,-1.04l3.31,0.53Z\",\n            name: \"Oise\"\n          },\n          \"FR-61\": {\n            path: \"M339.45,171.33l-1.19,2.6l0.44,1.49l1.28,1.11l0.76,0.28l2.03,-0.04l4.74,1.12l3.05,-0.82l0.53,0.56l0.61,1.79l2.9,3.45l1.71,1.0l2.29,0.55l0.97,0.6l0.98,1.74l-0.43,1.2l-1.34,1.44l0.1,1.13l1.12,0.58l1.33,1.63l2.71,1.01l0.4,3.39l1.71,2.99l2.69,1.76l3.44,3.47l-0.31,2.12l0.17,1.43l1.87,2.7l-1.12,1.47l-0.63,1.57l-1.95,1.77l-1.26,0.69l-4.1,1.48l-2.34,0.41l-0.89,1.14l-0.23,0.89l0.24,0.83l1.14,1.2l-0.05,2.88l1.83,3.34l-0.46,0.79l-1.04,0.63l-1.56,0.37l-2.49,-1.01l-2.47,-2.98l-1.91,-1.6l-3.5,0.2l-5.14,-1.24l-0.71,-0.36l-0.06,-1.74l-0.56,-0.94l-3.09,-0.02l-2.45,-1.44l-1.01,-1.58l-0.49,-1.75l0.27,-4.85l-0.45,-1.45l-1.38,-1.0l-2.69,-1.04l-1.94,-0.2l-5.54,1.15l-3.07,1.61l-1.67,2.12l-2.54,0.86l-0.55,1.53l-0.8,0.2l-1.9,-0.51l-3.9,0.33l-0.22,-3.58l-0.39,-0.79l-0.77,-0.81l-1.89,-0.44l-3.02,-2.76l-0.65,-1.6l0.49,-1.46l-0.32,-0.81l-0.74,-0.61l-3.82,-1.27l-0.99,0.47l-0.03,1.62l-0.34,0.71l-1.15,0.57l-1.4,-0.02l-1.63,0.51l-1.2,1.45l-0.68,0.11l-4.11,-0.95l-3.98,-0.16l-1.2,0.44l-2.14,1.99l-1.05,0.56l-5.18,1.05l-1.18,-1.31l-0.96,-0.14l-3.52,0.92l-0.5,1.08l-0.81,0.48l-1.68,-1.15l-1.86,0.23l-1.74,-2.89l-0.78,-0.61l1.1,-1.52l3.31,-2.63l1.9,-3.49l0.3,-1.03l-0.88,-3.57l1.71,-1.91l-0.07,-0.62l-5.1,-3.21l-1.17,-0.16l0.06,-1.22l1.15,-0.43l2.61,-2.27l4.22,-1.02l0.97,-0.99l-0.03,-0.75l-0.53,-0.71l0.58,-0.88l4.69,0.87l7.52,-1.59l2.99,-1.66l1.62,0.23l2.59,2.51l1.48,0.83l0.96,-0.29l0.67,-1.71l0.64,-0.21l10.57,2.36l12.06,-6.08l3.02,-3.58l1.06,-0.25l1.1,1.64l0.8,0.44l2.26,-1.25l3.01,-0.19l1.72,-2.05l0.59,-0.06l0.57,0.97l1.0,0.69l1.27,0.35l1.32,-0.17l2.03,-1.3l0.66,0.04l1.0,0.98Z\",\n            name: \"Orne\"\n          },\n          \"FR-68\": {\n            path: \"M752.43,285.23l0.39,-1.2l0.0,-1.45l-1.07,-2.08l-3.5,-3.34l-0.86,-0.37l-1.8,-0.05l-0.57,-0.53l0.01,-0.77l1.5,-2.01l0.6,-1.7l-0.15,-2.99l-0.41,-1.19l-1.75,-1.66l-8.58,-4.29l-0.62,-0.69l-0.05,-0.84l2.13,-0.87l1.13,-1.09l0.16,-1.12l-0.61,-1.66l1.6,-3.12l0.61,-3.06l3.45,-4.12l3.12,-5.81l1.69,-2.31l0.01,-1.28l-0.73,-1.48l0.49,-1.19l7.55,-10.68l3.11,0.2l1.43,0.48l0.9,2.69l9.88,4.09l0.43,0.5l-0.47,1.92l0.32,1.28l1.01,0.53l1.61,0.15l0.88,1.92l3.01,0.47l-0.42,1.72l0.19,3.23l2.65,4.1l0.12,2.21l-2.19,2.41l-0.36,2.63l-1.24,1.91l0.21,3.21l-1.19,0.9l-1.06,3.68l0.75,2.84l-0.03,1.09l-1.25,1.28l-0.34,0.8l0.43,2.7l1.98,1.77l2.51,3.91l-0.3,0.82l-3.51,1.37l-2.73,1.91l0.1,0.7l1.12,0.69l0.01,0.32l-1.72,0.61l-0.07,0.53l0.6,1.0l-0.84,0.74l-2.31,-0.79l-0.93,0.18l-0.3,0.87l0.84,1.21l-0.09,0.79l-1.08,1.21l-1.53,0.53l-4.27,-0.15l-4.24,1.21l-0.96,-0.82l-3.02,-1.12l-0.26,-0.95l1.04,-2.07l-0.39,-0.58l-1.82,0.11Z\",\n            name: \"Haute-Rhin\"\n          },\n          \"FR-69\": {\n            path: \"M607.86,387.47l-0.14,1.11l-1.54,3.29l-1.25,3.86l0.39,4.66l-0.52,2.34l0.25,1.14l2.23,0.97l0.62,1.03l1.0,0.58l0.4,1.1l0.43,0.26l1.44,-0.22l3.49,2.5l-0.24,1.13l0.79,3.5l0.47,0.36l4.54,-1.15l3.58,0.52l2.61,-0.37l-1.69,2.95l0.03,1.65l0.82,1.02l3.8,1.9l0.51,0.57l-0.08,0.59l-1.28,0.04l-1.68,0.77l-2.91,2.33l-1.43,2.94l-1.05,0.63l-11.83,0.9l-1.41,0.84l0.15,0.46l3.9,3.08l-0.81,2.28l-4.09,3.12l-1.38,1.83l-1.36,-1.77l-1.0,-0.6l-2.55,0.09l-0.75,-0.19l-0.42,-0.56l-0.08,-1.27l0.8,-3.52l-0.38,-1.29l-1.35,-0.96l-2.33,-0.3l-3.66,0.5l-2.87,-0.52l-3.66,-2.12l-3.05,-3.02l-1.06,-3.12l1.95,-2.75l-0.06,-1.23l-1.2,-0.62l-2.02,-0.41l-0.0,-0.93l2.32,-2.98l0.65,-2.37l-1.32,-1.76l-1.91,-1.02l-0.38,-0.51l-0.14,-0.62l0.55,-2.07l-0.83,-1.56l-4.23,-2.25l-0.21,-0.67l2.75,-1.04l0.49,-1.41l-0.62,-0.98l-2.67,-1.83l0.26,-0.95l5.82,-5.57l3.12,-0.19l1.74,-0.79l0.43,-1.75l-0.46,-1.69l-0.9,-1.34l-1.87,-1.23l1.47,-4.64l5.06,1.43l1.25,-0.12l1.94,-0.93l1.54,1.64l0.93,0.37l1.05,-0.11l0.65,-0.45l0.73,-2.14l1.87,0.38l0.31,0.19l0.27,1.99l1.62,1.08l0.05,2.15l1.07,2.48l1.36,0.98l3.19,0.35Z\",\n            name: \"Rh\\xf4ne\"\n          },\n          \"FR-53\": {\n            path: \"M310.77,215.54l-4.2,0.74l-1.58,1.61l-0.37,1.34l0.91,8.38l-0.94,2.05l-4.74,3.0l-0.35,2.5l0.91,2.88l-0.43,1.64l-1.48,1.12l-4.22,0.81l-0.96,0.75l-0.24,1.37l2.76,3.47l0.44,1.72l-0.49,0.61l-0.78,0.3l-3.0,0.23l-1.53,0.91l-0.58,0.88l-0.18,1.13l0.88,2.13l-0.14,0.78l-0.47,0.48l-2.09,0.77l-1.07,0.98l0.04,1.28l0.87,1.18l1.01,0.56l1.86,0.35l-0.09,0.98l-0.78,0.72l-2.11,0.84l-4.17,-1.53l-1.62,1.77l-1.25,0.22l-1.78,-0.37l-0.76,0.32l-1.18,1.37l-0.82,0.05l-20.13,-4.54l-0.91,0.5l-0.94,1.8l-2.53,-0.86l-6.81,-0.22l-3.08,-0.79l-2.72,-1.42l0.85,-1.47l2.89,-9.08l0.53,-0.9l1.85,-1.62l4.09,-0.58l1.25,-0.49l0.67,-0.66l-0.07,-4.84l-1.76,-2.27l-0.71,-4.7l0.64,-0.86l0.08,-0.99l-0.82,-4.82l-1.09,-2.36l1.95,-4.01l-0.03,-2.5l-0.74,-5.78l0.2,-5.45l4.76,0.37l3.56,-1.09l2.14,0.78l2.29,-0.33l0.82,0.61l1.89,3.04l0.78,0.28l1.22,-0.43l1.2,1.0l0.96,0.2l0.9,-0.36l0.74,-1.34l3.16,-0.79l0.67,0.27l0.43,0.85l0.82,0.32l5.49,-1.07l1.32,-0.69l2.1,-1.96l0.92,-0.33l3.75,0.17l4.09,0.95l1.06,-0.14l1.34,-1.53l1.33,-0.41l1.5,0.0l1.45,-0.72l0.62,-1.2l-0.17,-1.13l0.3,-0.28l3.98,1.51l0.19,0.36l-0.49,1.44l0.18,1.02l0.67,1.13l3.2,2.92l2.03,0.53l0.36,0.46l0.28,0.51l0.22,3.61Z\",\n            name: \"Mayenne\"\n          },\n          \"FR-52\": {\n            path: \"M620.05,191.66l0.83,3.39l1.78,2.43l2.21,1.63l2.79,1.3l4.32,3.1l5.08,2.47l3.16,0.28l1.23,0.4l0.83,1.56l5.79,4.67l-1.67,2.08l-0.22,0.82l0.6,3.51l0.45,0.64l0.99,0.2l1.86,-1.66l1.62,0.08l1.4,1.19l3.12,3.97l0.92,0.25l1.78,-0.17l1.05,0.53l0.59,2.6l2.43,1.57l1.39,1.38l-1.32,1.49l-0.55,2.56l-1.17,1.96l-0.63,2.55l4.62,3.89l3.34,1.83l0.57,1.4l-0.05,2.95l0.46,0.64l1.01,0.19l0.95,-0.67l0.94,-0.09l2.41,2.53l0.3,0.85l-0.2,0.45l-1.94,0.67l-2.38,2.89l-6.41,3.93l-0.82,1.02l-0.32,0.82l0.58,2.29l-0.54,2.43l0.2,2.14l-0.17,0.81l-0.92,0.79l-6.35,1.81l-1.15,-0.23l-3.43,-1.72l-4.29,0.62l-1.46,0.81l-2.83,5.28l-0.39,0.11l-0.67,-0.88l-0.77,-0.22l-2.89,1.56l-0.53,-0.69l-0.42,-1.51l-3.74,-2.21l-0.5,-0.48l-0.45,-1.41l-0.55,-0.47l-1.19,0.09l-1.76,1.89l-1.49,0.14l-2.23,-1.34l-2.42,-2.98l-1.06,-0.04l-1.33,1.3l-0.7,0.01l-0.9,-1.16l-0.61,-3.64l-1.3,-1.58l0.33,-0.6l2.33,-0.37l0.83,-0.93l-0.18,-1.31l-1.18,-2.31l-4.52,-5.41l-1.18,-0.18l-1.09,1.24l-0.51,-0.21l-0.23,-0.95l0.85,-1.35l0.11,-1.07l-1.02,-0.91l-2.65,-0.91l0.44,-1.3l-0.31,-0.7l-0.84,-0.49l-3.68,-0.69l-1.62,-1.0l0.99,-1.7l-1.33,-2.62l0.84,-1.66l1.62,-0.79l4.26,0.81l1.15,-0.58l0.78,-1.43l0.45,-3.19l1.01,-1.73l0.08,-0.84l-1.0,-7.31l-1.65,-1.75l0.44,-1.44l-0.18,-0.9l-3.13,-1.39l-1.38,-2.02l-2.2,-1.22l-2.15,-2.78l-2.26,-1.34l-0.15,-0.85l1.4,-1.94l0.4,-1.04l0.13,-1.76l5.87,-0.24l0.87,-0.28l0.33,-1.09l-1.07,-2.3l0.32,-1.17l4.51,-1.27l0.38,-0.55l-1.04,-2.5l-0.35,-0.25l-3.14,-0.04l1.22,-1.88l3.77,-1.11l7.44,0.03Z\",\n            name: \"Haute-Marne\"\n          },\n          \"FR-51\": {\n            path: \"M522.82,186.37l0.16,-1.02l1.68,-1.84l-0.22,-0.68l-0.89,-0.72l3.35,-0.37l0.76,-1.01l0.2,-1.75l1.48,-2.59l4.29,-3.81l1.07,-2.07l1.68,-1.1l0.81,-1.18l2.06,-1.61l0.39,-0.63l-0.02,-1.16l-0.99,-0.78l-3.39,0.04l-0.83,-0.47l0.06,-1.11l1.31,-0.86l1.17,-1.67l0.21,-0.79l-0.25,-2.97l1.17,-0.73l3.12,0.34l1.45,-0.25l1.33,-1.0l0.36,-0.86l-0.5,-1.26l-1.41,-0.81l-0.87,-0.98l-1.6,-0.47l-0.56,-4.86l-0.91,-2.12l2.95,-1.52l5.1,-1.23l4.31,-0.57l0.52,-0.78l-0.12,-1.35l0.85,-0.54l2.04,0.1l3.04,1.4l2.06,-0.68l2.32,0.84l1.14,-0.78l0.47,-1.24l0.08,-1.7l6.33,0.44l1.77,0.51l8.42,5.99l2.47,0.04l2.51,2.92l2.29,0.48l6.22,-0.85l1.44,0.18l1.21,0.87l1.1,2.07l1.24,0.92l5.55,-1.3l7.04,1.27l4.31,-1.4l1.84,-0.03l2.07,1.32l0.06,1.73l-1.31,2.24l-0.19,1.39l1.8,5.02l0.13,4.29l0.32,0.97l0.62,0.73l1.6,0.68l0.35,0.84l-0.84,1.15l-0.07,2.87l-0.56,1.42l-1.01,0.68l-2.7,0.71l-1.22,1.6l-0.51,2.57l0.58,2.62l-1.01,1.24l-0.44,1.14l0.49,1.38l4.23,3.15l0.58,1.99l-0.08,1.85l-7.28,-0.03l-4.31,1.35l-1.76,2.71l0.38,0.62l3.61,-0.06l0.71,1.71l-3.66,0.98l-0.9,0.62l-0.42,0.75l-0.05,0.99l1.03,2.63l-6.61,0.41l-4.47,-1.41l-1.54,0.31l-2.8,1.32l-11.93,-6.37l-0.31,-0.68l0.66,-4.11l-0.44,-1.76l-0.57,-0.63l-0.88,-0.35l-6.81,-0.4l-4.94,1.4l-1.13,-0.22l-1.49,0.3l-1.23,2.03l-2.91,0.76l-7.38,6.28l-1.28,0.67l-0.6,0.81l-0.67,2.46l-3.36,-0.35l-2.25,-0.66l-0.93,-1.47l-1.09,-0.78l-1.26,1.02l-3.5,0.89l-0.66,-2.48l-0.41,-0.29l-1.24,0.06l-1.99,-2.71l-1.85,-0.07l-1.65,-2.04l-0.63,-0.31l-2.37,0.21l-0.2,-1.26l0.51,-1.93l-0.76,-3.12l-2.03,-2.25l-1.36,-0.04Z\",\n            name: \"Marne\"\n          },\n          \"FR-50\": {\n            path: \"M199.1,110.63l3.02,0.17l0.93,1.73l6.68,0.92l5.27,1.29l0.19,0.68l0.67,0.4l0.84,-0.17l1.4,-0.93l2.68,0.54l1.2,-0.43l3.43,-3.16l2.74,-0.72l1.03,-0.08l7.56,1.27l2.02,5.19l-1.5,1.01l-0.48,1.56l-1.27,0.04l-1.1,0.67l-0.37,2.34l1.83,2.99l0.97,2.27l4.63,4.95l0.53,1.09l0.2,1.62l-0.75,1.97l0.17,1.08l0.44,0.3l1.7,-0.5l1.73,1.31l0.02,1.02l-1.12,2.23l0.89,2.06l7.07,6.37l1.82,0.2l3.77,-1.18l0.35,0.33l-0.73,2.09l-0.02,1.11l2.33,4.3l1.19,6.19l-1.73,0.82l-3.41,3.44l-1.89,1.33l-0.75,0.13l-2.59,-0.59l-1.17,0.51l-0.67,1.15l-0.02,1.28l1.46,1.49l0.17,0.61l-1.14,1.16l-2.44,0.91l-2.01,1.58l-0.85,1.16l-0.26,1.31l0.31,0.46l2.27,0.49l0.45,1.59l0.59,0.65l2.89,0.95l3.11,0.13l2.44,-0.72l3.49,0.8l3.18,1.45l-0.08,1.6l0.36,0.42l1.28,0.13l4.59,2.89l-1.59,2.0l0.04,1.15l0.84,2.61l-0.18,0.54l-1.78,3.33l-3.29,2.61l-1.34,1.83l-1.98,0.34l-2.37,-0.8l-3.57,1.1l-2.0,0.01l-3.01,-0.43l-2.56,-1.35l-6.25,-1.53l-1.67,-0.15l-1.33,0.23l-2.22,2.41l-1.99,0.71l-2.78,1.91l-1.65,0.53l-1.32,0.02l-0.77,-0.19l-2.96,-2.18l-1.8,-2.76l-0.99,-2.96l-2.54,-5.28l4.98,0.51l6.48,-1.24l2.14,0.69l0.44,-0.14l0.0,-0.47l-1.13,-1.5l-1.5,-0.64l-2.34,-0.18l-0.46,0.44l-0.7,-1.34l-2.87,-0.97l-0.88,-2.35l-2.17,-1.65l-0.47,-1.69l-0.34,-4.2l-0.74,-1.24l-1.4,-0.44l1.45,-1.15l0.44,-1.03l0.49,-3.71l0.92,-0.11l0.34,-0.9l0.0,-1.07l-1.2,-0.91l0.97,-5.38l0.51,-0.24l1.33,0.54l0.55,-0.37l-0.25,-0.86l-1.33,-0.51l-1.38,0.0l-1.32,0.6l-0.59,1.22l-0.56,-1.29l0.43,-3.35l-0.31,-0.52l-0.67,-0.12l-0.18,-0.32l0.72,-2.62l1.48,-1.06l0.02,-0.68l-0.75,-0.5l-0.56,0.09l-0.66,-2.09l-0.35,-2.8l0.3,-0.47l0.85,-0.05l2.15,0.54l0.5,-0.39l0.0,-0.49l-0.3,-0.39l-2.96,-0.99l-1.32,-0.03l-0.67,1.15l-0.44,-0.44l-0.98,-2.84l-0.71,-0.78l0.42,-0.24l0.06,-0.7l-2.38,-1.94l-0.24,-0.63l0.68,0.0l0.4,-0.4l-0.83,-2.29l-0.82,-0.22l-0.71,1.2l-3.02,-2.14l0.32,-0.66l-0.42,-0.61l-2.16,0.52l-0.37,-0.34l-0.17,-5.35l-1.15,-1.92l-0.39,-1.49l-2.39,-2.79l0.28,-0.81l1.64,-1.27l0.51,-0.95l0.27,-4.14l-1.3,-2.8l-0.63,-0.67l-4.47,-1.27l0.43,-3.05l1.34,-0.15l1.62,0.85Z\",\n            name: \"Manche\"\n          },\n          \"FR-57\": {\n            path: \"M697.12,128.57l4.59,2.63l1.98,0.19l2.29,-0.93l0.53,0.08l5.52,2.34l0.95,0.78l0.43,1.78l3.49,3.43l-1.28,0.51l-0.34,1.05l0.39,0.92l5.12,4.46l-0.0,1.31l1.48,0.85l1.03,2.86l0.65,0.17l0.76,-0.38l0.24,0.78l-0.46,1.9l1.04,1.55l0.86,0.29l2.67,0.02l2.33,0.73l0.97,-0.14l1.37,-1.65l-0.67,-2.53l0.24,-0.75l2.79,0.42l1.85,-0.14l4.34,1.88l1.09,0.08l-0.03,2.41l0.73,2.3l1.51,1.11l2.29,-0.99l0.3,-0.66l-0.21,-0.77l0.26,-0.22l2.39,1.43l1.98,0.72l5.31,0.06l2.06,0.7l0.67,-0.41l0.98,-1.46l2.37,-0.6l0.98,-1.9l2.23,-0.77l0.85,0.06l0.55,0.9l3.47,0.42l0.22,0.64l-0.49,0.46l-0.0,0.71l3.02,3.51l1.57,0.84l2.62,0.39l1.24,0.55l1.04,1.49l0.76,0.49l-3.08,5.46l-1.37,1.52l-0.94,0.11l-3.4,-1.65l-9.1,1.22l-2.18,-0.77l-0.57,-1.35l-0.66,-0.54l-8.43,-2.52l-0.63,-0.69l-0.58,-2.32l-0.9,-1.14l-1.12,-0.32l-1.33,0.51l-0.22,0.75l0.3,1.4l-2.13,2.71l-0.26,1.81l-2.5,1.95l-1.01,1.21l-0.49,1.21l0.0,1.18l0.54,1.07l0.95,0.87l5.74,2.33l-0.95,1.04l-0.38,1.39l0.94,0.93l0.85,1.8l0.62,0.41l1.5,-0.31l1.16,-1.59l2.22,-0.91l0.43,-0.63l0.2,-1.32l0.37,-0.29l0.49,1.78l1.97,0.95l3.72,3.7l0.4,0.92l-0.22,0.99l-3.01,4.58l0.29,1.21l1.86,1.19l-1.76,5.33l-0.93,1.1l-2.37,1.17l-1.19,1.51l-5.74,0.33l-0.53,0.33l-7.11,-6.72l-2.93,-1.24l-3.41,0.49l-9.75,-3.72l-2.42,-2.06l-2.68,-0.83l-1.47,-0.83l-1.93,-2.75l-0.67,-0.39l-2.37,0.0l-5.29,-2.7l-3.73,0.68l-4.05,-5.03l-0.21,-0.84l0.25,-1.56l1.24,-1.79l-0.32,-1.43l-0.67,-0.65l-1.55,-0.63l-8.73,-0.26l-0.71,-0.47l-1.27,-1.94l-3.43,-1.16l-0.36,-1.98l-0.72,-1.09l-4.16,-1.75l-0.7,-0.77l-1.12,-2.35l-0.02,-0.87l0.69,-0.55l2.54,-0.84l1.33,-1.27l0.36,-1.9l-1.71,-3.68l1.93,-2.33l0.06,-1.16l-0.97,-3.93l-0.53,-1.05l-1.64,-1.12l-1.0,-2.7l-1.73,-1.76l1.1,-4.12l-0.52,-3.06l0.89,2.24l0.48,0.25l7.2,-0.85l1.6,-1.26l0.33,-1.21l1.94,-0.22l0.21,-0.79l2.88,-0.27l1.66,0.15l1.65,0.58Z\",\n            name: \"Moselle\"\n          },\n          \"FR-56\": {\n            path: \"M109.52,267.85l0.38,-0.4l0.08,-1.06l0.95,0.1l0.65,-0.32l1.28,-2.54l0.88,-0.82l-0.25,-0.95l-0.44,0.09l-2.95,2.66l-1.78,0.9l-1.23,0.25l-0.32,0.34l0.22,0.41l0.92,0.77l-4.61,0.99l-0.63,-0.17l-2.02,-2.33l-2.01,-3.11l-0.6,-0.18l-0.35,0.25l-0.45,-1.04l-0.01,-1.54l0.9,-1.31l0.97,0.03l1.25,0.66l1.03,-0.09l1.08,-0.85l0.86,-1.79l2.18,-0.09l1.0,-0.67l0.57,-1.29l0.33,-2.58l-0.6,-3.09l-0.82,-0.87l-1.32,-0.34l-2.96,0.59l-1.33,-0.42l-3.3,-1.97l-1.52,-0.09l-3.2,0.59l-0.96,-0.72l-2.13,-5.31l-2.99,-2.98l-0.09,-0.73l0.41,-1.27l0.88,-0.78l8.58,-3.25l1.34,0.41l5.97,-0.26l0.36,1.66l1.26,0.9l1.53,-0.21l3.13,-1.15l1.22,1.3l1.94,0.58l8.02,-0.95l1.06,-0.53l0.62,-0.83l0.85,-2.33l1.12,-0.31l3.78,0.24l1.1,0.41l0.64,2.34l0.64,0.68l0.92,0.0l2.55,-0.85l1.49,0.2l4.05,2.12l3.19,0.86l0.96,2.18l1.0,0.73l0.89,-0.2l1.68,-1.5l3.3,-1.04l0.45,0.25l-0.04,6.27l0.27,0.38l1.32,0.46l2.52,-1.2l3.4,-2.96l0.76,-1.28l0.3,-3.56l0.45,-0.92l0.78,-0.28l4.92,-0.19l1.9,0.76l2.15,3.06l1.28,0.01l2.14,-1.17l0.89,-0.02l1.02,0.9l1.37,2.64l0.68,0.66l2.99,0.0l0.39,0.31l0.01,0.41l-0.64,0.66l-4.17,1.19l-0.87,1.19l-0.04,1.67l1.29,1.01l5.3,0.98l2.55,1.59l1.01,1.3l0.35,1.81l-0.59,5.45l0.39,0.48l2.72,0.15l0.42,0.57l-0.04,0.91l-0.87,1.82l-0.68,0.52l-2.12,0.6l-0.62,0.86l0.22,1.11l0.9,0.49l2.15,0.11l0.36,0.63l-0.49,0.45l-2.42,0.13l-0.84,0.83l0.08,2.27l1.03,2.25l0.0,1.69l0.23,0.68l1.13,1.14l-1.56,6.13l-0.54,0.87l-2.04,1.23l-1.46,2.33l-0.6,-0.23l-0.05,-1.13l-0.56,-0.55l-0.75,-0.02l-2.38,0.9l-1.56,-0.86l-0.9,0.05l-0.9,0.52l-1.89,2.82l-1.08,0.35l-2.85,0.22l-1.9,-0.8l-1.35,0.35l-0.47,0.66l-1.07,-0.28l0.4,-1.16l-0.67,-1.08l0.25,-0.19l3.7,-0.17l2.26,-0.53l1.21,0.07l0.42,-0.34l-0.3,-0.45l-0.99,-0.24l-2.8,0.23l-5.66,-1.72l-2.91,0.66l-1.93,0.0l1.05,-1.04l0.47,-1.05l-0.12,-0.48l-0.5,0.01l-0.86,0.73l-2.73,0.25l-0.32,0.4l1.11,0.66l-1.57,-0.11l-0.6,-0.37l-0.61,0.32l-0.09,1.63l-0.48,0.24l-1.89,-0.59l-1.16,0.04l-4.35,1.05l-1.51,-0.37l-2.24,-2.86l-1.34,-0.5l-0.54,-0.67l1.53,-0.13l1.13,1.56l1.15,-0.56l0.69,0.46l0.65,-0.25l0.21,-0.93l0.66,0.6l1.69,0.45l1.67,-0.14l1.46,-0.78l-0.13,-0.88l2.17,-2.6l0.37,-1.63l-1.48,-1.88l-0.44,-0.11l-0.26,0.86l0.64,0.9l-1.1,0.64l0.6,0.74l-0.39,0.02l-1.13,-0.82l0.39,-0.14l-0.02,-0.47l-0.84,-1.0l-0.86,-0.45l-1.89,-0.29l-0.44,0.26l0.31,0.55l-3.56,0.47l-0.85,0.64l-0.55,0.91l-2.13,0.65l0.0,-0.48l-0.46,-0.4l-1.32,0.49l-0.19,-1.21l0.7,-1.13l-1.61,-0.61l-0.47,-1.47l-0.85,-0.33l-0.4,0.46l0.45,2.1l0.01,1.94l0.27,0.88l1.3,1.72l-0.77,0.06l-1.84,-1.77l-0.48,-0.01l0.02,1.33l-0.45,-1.98l-0.51,-0.31l-0.67,0.4l-0.04,1.56l-1.22,-0.46l-1.86,0.87l-0.79,0.06l0.11,-0.88l-1.36,-0.9l-0.9,-0.02l-0.6,0.64l-1.75,-2.35l-1.96,-1.13l0.78,-2.82l4.43,-1.77l0.2,-0.57l-0.36,-1.98l-0.6,-0.34l-0.71,0.3l0.01,-1.53l-0.4,-0.43l-0.73,0.2l-0.33,0.57l-1.35,-0.45l-0.97,0.16l-0.33,0.36l1.51,1.12l0.5,1.38l-0.92,0.03l-0.89,0.76l-0.75,0.18l-0.19,0.67l0.52,0.61l-0.59,0.38l-0.66,1.45l-2.06,-1.94l-1.14,-0.34l-0.21,-0.79l-2.13,-0.87l-1.87,-0.17ZM122.84,278.42l0.11,0.08l-0.08,0.32l-0.03,-0.4ZM122.52,282.02l0.23,1.3l1.65,2.47l-0.96,-0.23l-0.59,0.29l-0.71,-2.5l0.37,-1.33ZM133.84,278.57l0.45,0.38l-0.04,0.12l-0.41,-0.51ZM123.36,297.99l1.01,0.42l1.66,-0.07l0.33,0.33l-0.17,0.99l-1.32,0.33l-4.68,-0.38l-3.08,-0.8l-0.79,-0.48l0.14,-1.16l-1.41,-3.37l0.57,-0.67l4.02,1.8l3.72,3.05Z\",\n            name: \"Morbihan\"\n          },\n          \"FR-55\": {\n            path: \"M625.46,127.51l1.43,-1.72l0.37,-3.32l1.33,-1.31l1.39,0.12l2.52,1.66l3.7,-0.04l0.91,1.24l0.89,0.23l1.45,-0.59l3.12,-2.32l2.22,-1.14l0.23,-0.81l2.9,4.42l0.21,0.61l-0.22,2.41l0.64,0.91l0.95,0.21l-0.76,2.22l1.67,3.94l1.55,0.77l4.36,-0.27l3.79,-1.81l1.09,0.5l2.04,1.97l1.1,1.55l0.63,1.81l-0.13,2.9l0.75,0.94l1.21,0.71l-2.13,3.84l-0.11,3.18l0.87,1.09l1.45,0.54l0.1,0.71l-0.75,2.39l0.04,1.87l0.65,1.66l1.29,0.41l1.97,-0.41l0.46,0.43l1.27,4.3l-1.39,3.28l-0.07,1.12l0.54,1.24l1.09,0.73l0.27,0.53l-0.2,0.91l-1.94,-0.32l-0.92,0.23l-1.77,1.51l-0.73,1.37l1.09,3.21l-0.04,3.79l-0.93,3.38l-2.08,2.91l-0.17,1.07l1.73,2.41l0.27,6.76l-0.43,0.81l-1.63,1.18l-0.42,1.58l0.55,1.31l2.0,1.04l0.35,0.6l0.09,2.67l-0.7,1.3l-0.86,0.74l-1.0,0.27l-2.89,-0.26l-3.49,2.04l-3.64,0.05l-4.52,2.15l-1.28,-0.5l-5.97,-4.81l-0.81,-1.57l-1.66,-0.59l-3.06,-0.26l-4.93,-2.41l-4.26,-3.07l-2.86,-1.34l-2.09,-1.55l-1.19,-1.4l-0.58,-1.33l-0.28,-2.43l-0.47,-0.59l0.07,-2.24l-0.69,-2.27l-4.55,-3.64l0.3,-1.22l0.98,-1.18l0.19,-0.77l-0.65,-2.29l0.44,-2.23l0.86,-1.22l2.6,-0.67l1.38,-0.95l0.61,-1.14l0.15,-3.39l0.86,-1.2l-0.06,-0.86l-0.53,-0.77l-2.02,-1.13l-0.4,-5.12l-1.78,-5.41l1.45,-2.76l-0.02,-2.07l4.21,-3.39l0.13,-1.1l-0.75,-1.69l-0.03,-0.85l3.33,-4.34l1.37,-3.47l-0.92,-3.48l-1.1,-0.9l-0.58,-1.83Z\",\n            name: \"Meuse\"\n          },\n          \"FR-54\": {\n            path: \"M650.32,128.04l3.92,-2.09l2.36,0.84l1.04,-0.1l1.27,-1.8l1.33,-0.57l3.92,0.99l0.96,-0.3l1.37,-1.14l2.44,0.88l3.06,3.02l1.61,0.63l3.65,0.74l0.78,3.77l-1.03,3.1l-0.04,1.34l0.3,0.64l1.52,1.31l1.02,2.74l1.64,1.13l1.35,4.58l-0.0,0.78l-1.41,1.42l-0.59,1.33l1.73,3.75l-0.32,1.43l-0.91,0.84l-2.65,0.9l-1.05,1.04l0.06,1.32l1.18,2.48l0.86,0.98l4.16,1.75l0.5,0.76l0.18,1.53l0.43,0.8l3.48,1.18l1.06,1.73l1.04,0.76l8.98,0.32l1.16,0.47l0.45,0.39l0.23,0.93l-1.15,1.54l-0.3,0.94l0.21,2.07l0.72,1.27l3.6,4.17l1.51,0.17l2.53,-0.72l5.26,2.69l2.31,-0.02l2.42,3.04l1.64,0.91l2.5,0.74l2.53,2.12l9.89,3.78l3.56,-0.46l2.61,1.15l6.62,6.3l-1.46,0.31l-5.3,3.62l-3.26,3.16l-1.41,0.83l-1.19,-1.07l-0.54,0.01l-3.27,2.95l-4.16,-1.53l-4.42,-0.54l-0.72,-0.61l-0.34,-2.13l-0.86,-1.0l-1.99,0.17l-6.31,4.24l-4.11,0.31l-1.99,1.33l-0.32,0.05l0.09,-0.71l-0.46,-0.44l-1.73,0.29l-1.7,-0.17l-1.49,-0.75l-1.17,-1.57l-0.63,-0.01l-1.77,2.56l-4.63,0.3l-1.52,-0.62l-0.55,0.39l0.1,2.57l-1.64,0.67l-8.45,0.29l-1.32,-0.47l0.31,-1.38l-0.25,-0.46l-4.74,-1.96l1.73,-3.24l0.09,-1.26l-0.31,-1.09l-2.18,-1.23l-1.59,-0.25l-1.57,0.18l-2.18,1.04l-0.64,-0.6l0.01,-2.15l-0.37,-1.18l-2.28,-1.39l-0.33,-0.8l0.34,-1.17l1.42,-0.93l0.7,-1.27l-0.27,-7.02l-0.47,-1.04l-1.24,-1.32l0.08,-0.66l2.08,-2.93l1.0,-3.6l0.04,-4.03l-1.08,-2.99l0.55,-0.95l1.58,-1.33l2.72,0.18l0.71,-1.21l-0.21,-1.21l-1.37,-1.07l-0.32,-0.75l0.04,-0.86l1.42,-3.48l-1.35,-4.65l-1.15,-0.91l-2.08,0.43l-0.61,-0.16l-0.48,-1.26l-0.03,-1.69l0.73,-2.24l-0.12,-1.24l-1.83,-0.91l-0.47,-0.58l0.1,-2.78l1.9,-3.0l0.23,-1.3l-0.44,-0.62l-1.51,-0.98l0.13,-2.84l-0.71,-2.05l-1.23,-1.73l-2.12,-2.04l-1.71,-0.68l-3.78,1.82l-4.78,0.08l-0.65,-0.64l-1.24,-3.19l0.78,-2.16Z\",\n            name: \"Meurhe-et-Moselle\"\n          },\n          \"FR-59\": {\n            path: \"M468.73,0.56l0.71,1.42l0.6,3.51l0.63,1.64l3.14,3.26l0.16,1.34l-1.61,1.47l-0.46,0.87l1.16,3.76l-0.52,1.99l1.22,0.87l1.03,1.61l4.25,0.56l0.92,1.61l2.23,1.78l1.46,2.61l1.24,0.91l5.27,2.03l1.32,0.13l0.92,-0.63l1.82,-2.63l2.37,-1.63l7.93,-2.08l1.41,0.36l0.92,0.73l2.64,4.35l0.72,0.59l1.48,0.27l0.38,0.58l0.61,1.69l-0.8,1.48l0.51,2.38l1.6,4.47l0.09,2.5l0.42,1.17l1.9,1.66l3.82,1.44l1.7,-0.16l2.68,-0.82l2.06,-1.38l0.72,-0.05l0.89,0.38l-0.6,1.19l0.12,0.56l0.76,0.47l4.13,0.08l2.56,0.75l1.12,0.9l0.91,1.39l1.05,10.05l2.3,1.94l1.29,-0.74l1.51,-2.44l1.09,-0.6l2.59,-0.16l2.45,0.25l3.52,1.61l1.52,-0.04l3.85,-1.36l1.15,-0.1l1.03,0.41l1.98,1.84l2.53,1.56l1.84,3.13l1.53,0.38l0.59,-0.74l-0.06,-0.72l0.39,-0.14l1.83,1.02l0.14,0.88l-2.69,2.35l-1.79,5.34l-0.17,1.55l1.11,0.78l1.48,-0.45l0.84,0.08l1.74,4.81l-2.7,1.39l-1.71,1.5l-0.59,1.62l0.66,2.17l-2.04,0.47l-1.03,-0.14l-5.08,-1.67l-0.55,-0.62l-0.05,-2.72l-0.69,-0.57l-0.96,-0.16l-2.19,0.7l-1.93,1.12l-2.51,-1.85l-6.24,-0.65l-3.45,-0.71l-0.98,0.1l-3.23,1.68l-0.69,0.09l-2.57,-0.97l-1.25,-0.05l-4.85,2.46l-1.59,0.26l-5.33,-1.36l-2.8,1.13l-3.55,-0.79l-1.98,-0.06l-4.16,0.8l-3.88,-2.32l0.05,-1.61l2.24,-8.66l0.61,-1.13l1.71,-1.56l0.28,-1.47l-0.42,-0.84l-1.75,-1.71l-1.31,-0.62l-2.38,-0.17l-2.28,1.01l-0.95,-0.58l0.47,-1.35l1.77,-1.49l0.37,-1.0l-0.19,-1.17l-0.99,-1.43l-2.5,-2.65l0.23,-1.14l2.9,-2.08l0.2,-1.9l-0.78,-0.64l-1.93,-0.31l-1.19,-3.12l-1.47,-1.14l-1.12,-0.16l-2.71,0.31l-2.16,-2.16l-1.21,-0.11l-2.08,0.58l-0.88,-0.19l-0.79,-0.94l-0.1,-0.8l1.06,-1.81l-0.04,-1.78l0.31,-0.72l1.51,-1.11l1.79,-0.4l0.25,-0.67l-1.93,-2.11l-1.11,-0.77l-1.27,-0.25l-1.45,0.65l-1.96,2.14l-1.32,0.64l-0.95,-0.25l-13.54,-0.34l-0.79,-0.25l-3.08,-2.44l-3.17,-0.57l-0.37,-0.8l0.39,-1.69l-1.03,-1.49l0.06,-0.6l1.78,-1.77l0.6,-0.85l-0.01,-0.48l-0.91,-1.06l-1.18,-0.37l-5.52,0.1l-1.57,-0.49l-1.27,-1.01l-2.13,-5.83l-5.01,-8.51l-2.04,-1.97l3.54,-0.38l11.16,-3.16l4.16,0.3l5.0,-1.09l3.16,-1.35ZM502.03,75.37l0.14,1.34l-2.79,0.71l-0.69,-0.11l0.09,-1.4l1.76,-0.34l1.28,-1.06l0.2,0.85Z\",\n            name: \"Nord\"\n          },\n          \"FR-58\": {\n            path: \"M528.78,280.97l1.59,2.28l2.55,2.41l0.9,1.86l3.66,0.81l4.42,3.53l5.43,1.99l0.7,-0.02l0.78,-0.5l1.06,-2.57l1.16,-0.44l0.49,0.82l-0.57,2.37l0.27,1.26l1.3,0.52l3.77,-1.84l0.67,0.98l0.68,3.72l1.6,1.37l1.61,-0.09l1.72,-1.96l3.18,0.03l0.85,1.0l0.1,5.56l0.32,0.39l1.92,0.37l1.13,-0.2l0.92,0.22l0.85,0.63l0.65,1.09l0.26,1.33l-0.71,1.77l-0.13,1.41l-1.24,0.33l-3.52,1.97l-3.93,0.47l-0.56,0.45l-0.72,2.59l1.01,3.06l-0.05,1.31l-1.08,1.16l-1.74,0.2l-0.94,0.58l-0.29,0.95l0.25,1.13l0.79,0.6l1.47,0.34l0.52,0.64l-0.04,3.9l0.72,0.83l1.99,1.19l0.18,1.0l-0.49,0.71l-1.97,0.63l-0.72,0.74l0.01,0.76l0.72,0.99l-0.2,2.06l-2.99,0.57l-4.86,2.88l-3.65,1.19l-1.65,1.29l-1.04,0.4l-2.51,-2.71l-1.72,-1.04l-7.17,0.93l-1.66,-0.27l-0.44,0.26l-0.43,1.96l-1.36,0.87l-0.44,1.79l-3.8,2.0l-1.31,0.28l-0.45,-0.19l-0.06,-1.53l-1.67,-2.57l-1.59,-0.43l-0.82,0.13l-1.33,1.43l-0.97,0.48l-2.64,-1.07l-1.82,-0.29l-1.87,0.11l-3.04,1.06l-3.34,-2.82l-1.29,-0.36l-1.77,0.04l-2.77,-1.63l-1.05,-1.28l-0.19,-0.83l0.34,-2.43l2.35,-4.46l-1.16,-3.32l1.31,-4.66l-0.44,-5.56l-2.26,-2.43l0.11,-3.58l-1.26,-4.05l-1.41,-3.21l-0.84,-3.54l-3.63,-3.57l-1.85,-1.04l-0.71,-1.21l2.92,-5.34l0.56,-3.19l-0.17,-0.62l-1.7,-2.2l-1.25,-2.57l-1.44,-1.56l0.08,-0.29l2.79,-1.26l2.32,-0.04l1.28,-0.37l1.6,0.31l6.32,-1.19l0.9,0.34l0.47,2.6l1.22,1.11l4.09,0.77l1.89,1.87l1.16,0.11l1.96,-0.77l2.43,1.48l1.01,0.12l1.16,-0.52l1.82,-1.52l1.28,-0.15l4.38,1.15l0.5,-0.33l0.29,-4.18Z\",\n            name: \"Ni\\xe8vre\"\n          },\n          \"FR-48\": {\n            path: \"M521.61,538.83l-0.52,-1.13l-1.33,-0.92l-6.93,0.03l-0.32,-1.55l-1.01,-1.16l-4.04,-2.16l-1.29,-0.2l1.45,-3.24l-0.19,-0.85l-0.85,-1.25l-0.29,-2.01l0.71,-2.49l0.15,-2.55l-3.33,-4.54l-0.25,-1.16l0.15,-2.52l-1.11,-2.03l-5.17,-5.93l0.78,-2.2l1.89,-2.92l0.36,-2.65l1.38,-4.58l0.47,-0.79l1.76,-1.22l0.98,-3.72l0.74,-0.4l1.59,1.82l1.21,-0.05l1.38,-0.79l3.42,-3.06l2.41,-0.28l3.68,-2.03l1.93,-0.24l0.36,0.35l0.79,2.6l3.5,5.9l1.31,1.29l1.23,0.42l1.33,-0.63l3.37,-0.36l1.07,-0.91l0.56,-2.31l0.89,-0.32l1.69,0.16l0.84,0.67l-0.48,1.5l0.3,0.89l4.51,0.95l4.08,3.38l2.89,1.45l1.57,0.41l-0.03,2.85l1.28,3.55l0.51,3.07l0.72,2.11l0.66,1.17l1.36,0.88l0.8,1.32l2.15,6.73l-1.98,3.13l-0.84,0.57l-2.06,0.37l-1.0,0.81l-0.08,0.53l1.91,2.93l0.62,3.31l1.55,3.3l0.16,0.98l-0.44,1.55l-2.23,4.29l-2.6,2.5l-4.89,-0.36l-6.09,-3.28l-1.5,-0.33l-1.99,0.8l-0.31,0.97l-0.05,2.63l-1.0,0.63l-5.86,0.25l-2.2,-0.6l-6.15,-3.38Z\",\n            name: \"Loz\\xe8re\"\n          },\n          \"FR-49\": {\n            path: \"M233.03,298.51l1.68,-1.19l4.85,-0.76l3.64,-1.93l2.11,-0.43l7.86,-0.14l4.72,-0.85l0.24,-0.64l-1.06,-1.36l-0.84,-1.98l-0.51,-2.15l-0.06,-1.85l-0.36,-0.38l-9.92,-1.02l-1.33,-0.83l-1.22,-1.81l-0.2,-1.33l0.7,-0.39l6.35,0.53l1.77,-0.53l1.47,-1.4l-0.04,-0.61l-1.54,-1.13l-7.67,-2.31l-0.6,-0.61l-0.59,-4.56l-1.04,-1.15l-1.13,-0.59l-1.63,-0.18l-0.33,-0.63l-0.18,-3.53l0.36,-1.67l2.85,1.47l3.17,0.81l6.88,0.23l2.53,0.88l1.05,-0.55l0.86,-1.75l20.14,4.52l1.2,-0.13l1.7,-1.61l2.6,0.36l0.88,-0.45l1.24,-1.52l2.86,1.33l1.03,0.2l1.11,-0.23l10.64,4.33l1.01,-0.16l1.58,-1.05l0.32,0.09l0.32,0.56l-0.94,0.75l-0.47,0.91l0.2,1.48l1.05,1.63l1.59,1.02l1.83,0.32l1.37,-0.51l1.29,-1.24l3.12,0.44l6.53,3.17l2.26,0.37l3.15,1.37l1.63,-0.03l0.36,-0.28l0.54,-1.77l2.61,0.81l-1.52,3.88l0.46,3.58l-1.91,3.72l-1.03,3.13l0.2,2.82l-4.39,6.08l-1.47,5.38l-0.85,5.56l-2.84,-0.47l-1.46,0.44l-2.01,2.22l-0.96,2.4l-2.38,0.81l-1.53,2.05l-1.11,-0.31l-0.83,-2.02l-0.97,-0.76l-0.79,-0.2l-1.88,0.35l-3.55,-0.08l-6.53,0.7l-5.83,1.67l-2.05,-0.73l-2.08,0.46l-1.21,0.8l-0.31,0.62l0.12,0.77l0.69,0.97l-0.13,0.38l-4.92,2.46l-3.85,0.33l-5.2,-0.68l-4.23,0.56l-3.49,-1.69l-1.61,-0.38l-0.68,0.31l-0.33,0.87l-0.46,-0.1l-1.99,-1.33l-2.8,1.27l-2.3,-0.29l-3.58,-1.38l1.02,-0.49l0.2,-0.51l-0.78,-1.82l-2.01,-1.72l-3.92,-1.8l0.51,-1.32l3.47,-4.13l-1.27,-3.9l-0.81,-1.39l-0.43,-0.19l-1.65,0.37l-1.37,-0.22l-3.02,-3.81l-2.17,-0.39l0.19,-1.21Z\",\n            name: \"Maine-et-Loire\"\n          },\n          \"FR-44\": {\n            path: \"M159.66,300.12l3.14,1.13l1.62,-0.32l1.05,-1.07l0.07,-0.47l-0.56,-1.04l-2.21,-2.2l-0.46,-0.11l-0.82,0.44l-0.77,-1.59l-2.05,-1.2l4.12,-2.13l1.57,0.33l-0.09,0.55l0.45,0.48l0.58,0.01l2.59,-1.53l0.4,-0.74l-0.31,-0.53l-2.95,-0.38l0.35,-0.69l-0.16,-0.53l-0.77,-0.68l0.87,-0.21l2.37,0.81l3.21,-0.37l0.81,-0.45l0.88,-1.05l1.08,-1.85l0.93,-0.29l1.83,0.9l2.88,-0.91l0.01,0.96l0.41,0.72l0.57,0.29l0.85,-0.14l0.92,-1.04l0.66,-1.38l2.05,-1.24l0.71,-1.09l0.79,-3.53l0.74,-1.69l0.12,-1.43l-0.24,-0.62l0.35,-1.02l2.91,-1.59l2.21,-0.38l2.07,0.05l5.67,-2.08l1.82,0.61l1.85,0.19l7.5,-2.05l2.87,-1.7l1.19,-1.55l1.73,-1.21l6.3,-2.55l1.6,-1.15l3.02,-0.01l1.01,0.42l0.73,1.19l0.96,0.56l6.76,1.15l0.16,3.45l0.67,1.05l1.76,0.23l1.0,0.53l0.75,0.86l0.19,3.41l0.37,1.1l0.83,0.9l7.87,2.42l0.98,0.74l-1.05,1.0l-1.44,0.39l-6.49,-0.5l-1.25,1.0l0.26,1.69l1.38,2.12l1.77,1.1l9.66,0.99l0.59,3.84l0.89,2.13l0.74,0.97l-4.04,0.73l-7.8,0.13l-2.28,0.45l-3.64,1.92l-3.75,0.4l-1.21,0.4l-1.97,1.38l-0.44,2.05l0.34,0.46l2.15,0.27l3.27,3.95l1.6,0.25l1.59,-0.33l0.58,0.98l0.46,1.89l0.78,1.46l-3.34,3.98l-0.73,1.85l0.21,0.51l4.21,1.93l1.79,1.56l0.5,1.23l-1.33,0.64l-4.88,-2.79l-2.44,-0.76l-0.42,0.12l-2.08,2.69l-2.09,-0.41l-1.44,0.76l-0.51,1.31l0.34,2.89l-0.42,1.43l-3.09,2.07l-0.96,0.14l-0.76,-0.4l-0.43,-0.97l-0.0,-4.16l-0.54,-1.5l-0.62,-0.62l-1.05,-0.2l-3.16,1.21l-0.63,2.53l0.85,3.73l1.33,3.46l0.87,1.16l-0.79,0.87l-1.72,0.58l-6.12,-1.46l-3.27,-0.03l-0.79,-0.34l-3.21,-3.11l-6.39,-2.68l-1.88,-1.34l-3.66,-3.68l-1.27,-0.75l-0.14,-1.25l-0.69,-1.37l-1.79,-1.89l-3.8,-1.82l-7.01,-1.07l-1.45,-0.69l1.47,-1.03l1.91,-0.24l0.8,-0.55l0.42,-2.94l-0.66,-1.35l-0.09,-1.84l1.02,-2.31l1.32,-0.5l5.58,-0.5l1.1,-0.5l1.01,0.86l3.14,0.71l1.04,-0.02l0.24,-0.51l0.65,0.2l-0.47,0.4l0.19,0.91l2.51,1.59l2.62,0.48l1.97,1.62l1.54,0.57l3.31,0.09l0.4,-0.29l-0.19,-0.46l-1.24,-0.71l-2.55,-0.47l-5.05,-4.17l-2.19,-1.13l-2.7,-0.49l-1.38,-0.93l-2.33,-0.59l-8.57,0.49l-2.09,1.06l-1.63,2.06l-1.9,0.52l-1.37,1.18l-2.09,0.34l-0.98,-0.34l-2.32,-2.13l-1.22,-0.61l-2.17,0.0l-0.78,0.6l-0.33,0.97l-1.39,-0.03l-4.87,-2.21ZM161.53,297.57l0.02,0.14l-0.01,0.02l-0.01,-0.17Z\",\n            name: \"Loire-Atlantique\"\n          },\n          \"FR-45\": {\n            path: \"M460.91,221.47l0.33,-0.04l0.75,0.86l1.36,3.99l3.56,2.09l1.09,1.21l-0.82,1.86l0.48,1.68l-2.36,-0.11l-1.14,1.09l0.09,1.33l1.07,0.83l2.02,0.26l3.17,-0.65l8.35,0.59l2.29,-0.94l1.66,-1.6l0.83,-0.26l2.03,0.05l-0.41,1.53l0.32,0.38l1.06,0.2l7.05,-1.97l1.76,0.12l2.27,0.58l1.52,1.02l1.38,4.33l1.05,1.28l1.91,1.34l1.11,1.26l0.31,1.76l-1.88,3.81l-2.42,1.45l-1.42,1.43l-1.36,0.14l-0.46,0.42l0.1,2.67l0.95,2.06l-0.78,1.4l0.13,1.67l-0.42,0.96l-4.41,2.06l-4.1,0.43l-1.2,0.99l-0.29,1.64l0.41,1.33l2.48,1.05l2.32,2.0l1.13,2.08l-0.6,1.62l0.07,0.78l2.52,3.57l-3.22,0.29l-3.17,1.42l-0.3,1.25l0.72,0.77l-2.84,1.5l-1.07,0.08l-2.48,-1.92l-1.53,-0.21l-0.83,0.83l-1.2,2.16l-1.24,0.11l-0.91,-0.47l-2.08,-1.96l-2.56,-3.52l-1.22,-0.81l-3.47,0.03l-1.28,-0.35l-3.03,-2.4l-1.26,-0.12l-3.06,1.02l-1.43,-0.29l-3.28,-1.8l-3.15,0.05l-1.1,-3.21l-3.19,-1.1l-12.45,0.99l-1.67,-0.21l-3.13,-1.95l-2.01,-0.61l-0.99,0.36l-0.62,2.28l-1.06,1.75l-1.56,0.16l-1.79,-0.95l-1.35,-1.56l-0.91,-3.7l-0.83,-0.87l-2.54,-0.96l-2.25,-1.44l-0.58,0.18l-0.68,1.58l-0.69,0.36l-2.68,-2.27l1.14,-1.83l-0.03,-0.53l-2.02,-2.07l2.53,-2.72l0.15,-3.26l-0.91,-1.06l-1.61,-0.86l1.52,-1.97l0.29,-1.12l-0.39,-1.13l-0.72,-0.68l-1.86,-0.04l-0.18,-2.02l0.27,-0.71l0.82,-0.73l0.73,-0.12l1.8,0.74l1.17,-0.19l2.1,-2.38l0.86,-0.52l1.54,-0.15l3.3,0.6l3.84,-1.4l1.12,-0.16l1.62,0.35l1.42,-0.39l2.22,-2.35l1.73,-3.94l2.64,-0.88l0.63,-0.75l0.39,-1.43l-0.68,-3.44l1.26,-2.08l8.8,-1.74l2.18,-0.89l1.74,-2.19l1.08,0.42l1.34,1.84l0.89,0.32l1.9,-0.44l1.41,-1.25l0.41,-0.04l2.61,1.32l2.09,-0.21Z\",\n            name: \"Loiret\"\n          },\n          \"FR-46\": {\n            path: \"M440.29,478.66l0.61,1.12l0.9,5.86l3.12,4.71l1.22,2.47l-0.85,4.57l-0.66,1.67l0.43,0.65l1.41,0.75l0.84,3.28l0.5,0.83l1.27,0.7l-0.05,1.13l-3.48,1.2l-4.94,-0.35l-4.66,2.37l-3.63,2.62l-5.71,2.41l-0.24,0.48l1.66,5.79l2.5,3.77l-0.0,0.52l-3.11,1.27l-4.89,0.22l-5.08,1.99l-2.39,2.3l-1.58,-2.03l-1.59,-0.15l-1.24,0.4l-0.55,1.27l0.76,2.73l-0.66,0.49l-1.02,0.03l-2.32,-2.65l-2.03,-1.07l-0.49,0.16l-0.92,1.48l-1.2,1.0l-4.32,2.11l-1.36,-0.08l-3.04,-0.89l-0.16,-0.19l1.05,-1.93l-0.97,-1.37l-1.29,-0.04l-1.21,0.77l-1.83,-0.42l-4.22,-2.04l-1.03,-0.86l-0.62,-0.96l-0.08,-0.89l0.72,-1.87l-0.01,-1.35l-0.93,-0.81l-1.27,0.13l-1.62,0.71l0.11,-2.87l-1.84,-1.84l-0.96,-2.38l-0.09,-1.96l-1.25,-1.9l0.7,-0.81l2.99,-1.33l3.6,-2.94l3.41,-5.27l0.78,-0.63l2.29,-0.5l1.89,-1.35l1.85,-0.79l1.77,-1.9l0.54,-1.79l-0.67,-1.05l0.11,-0.81l0.64,-0.86l2.37,-0.76l1.69,-2.66l2.13,-1.79l0.74,-1.12l-0.14,-1.73l0.68,-1.13l0.08,-1.03l-1.31,-3.89l0.24,-0.96l3.33,-2.09l1.05,-0.26l1.04,-0.9l1.16,1.27l2.28,-0.55l1.67,0.46l2.94,1.66l2.03,1.61l1.3,1.87l1.92,0.91l1.31,1.01l0.92,0.2l1.46,0.02l3.21,-0.98l3.94,-1.84l2.17,0.72l1.98,-0.89l4.23,-0.19Z\",\n            name: \"Lot\"\n          },\n          \"FR-47\": {\n            path: \"M319.78,553.37l-1.2,-3.4l1.04,-0.97l1.37,-3.11l2.04,-2.74l-0.11,-0.58l-1.17,-0.7l-12.14,-2.12l-2.72,0.1l-0.02,-2.51l-0.58,-2.42l4.21,-1.88l2.04,-1.73l0.12,-0.43l-0.81,-2.36l-2.17,-2.67l0.43,-0.38l4.03,-1.09l1.11,0.2l0.47,-0.37l0.04,-1.27l-1.02,-2.11l0.74,-2.96l-0.36,-0.86l-1.26,-1.08l-0.12,-0.67l0.63,-1.59l2.34,-2.93l2.17,-0.04l0.8,-0.56l5.55,-6.3l0.27,-1.37l-0.64,-0.97l-2.55,-0.77l-0.6,-0.65l-0.14,-1.7l0.97,-1.37l0.8,-0.39l1.36,-0.1l1.73,1.8l1.12,0.02l0.79,-0.68l0.54,-2.67l2.3,0.19l1.33,-0.33l1.71,2.3l1.3,2.9l1.55,2.44l2.75,1.08l1.68,-0.35l3.94,-1.97l1.83,0.78l0.82,0.01l0.96,-0.61l1.52,-1.88l0.64,-0.14l2.33,0.07l1.41,1.49l1.49,0.49l3.11,-0.26l3.45,-1.11l0.96,0.12l1.08,0.85l0.53,1.13l-0.18,1.09l-1.19,1.0l-0.06,0.55l1.45,1.89l2.31,0.01l4.15,-2.55l1.83,-0.04l2.6,1.09l2.33,1.66l1.03,1.57l-3.67,1.83l-0.75,0.74l-0.26,0.78l1.31,2.09l0.06,1.85l1.05,2.61l1.8,1.78l-0.18,3.0l-0.59,0.58l-4.81,0.36l-1.13,-0.2l-1.77,-0.98l-0.77,0.08l-0.72,0.57l-0.27,2.47l-0.74,1.55l-0.06,0.88l0.85,1.37l2.45,0.96l0.36,0.51l-2.45,5.11l-2.16,1.72l0.1,0.72l1.14,0.8l-0.03,0.97l-1.25,0.21l-2.22,-0.7l-1.4,0.32l-0.49,0.48l-0.46,1.35l-2.26,1.33l-1.04,2.84l-3.57,1.87l-1.05,0.18l-2.71,-2.15l-1.51,-0.47l-5.15,1.53l-2.7,-0.26l-1.21,0.8l-4.35,1.91l-1.3,0.2l-3.0,1.53l-4.83,-1.62l-0.8,0.09l-1.07,0.84l-1.29,1.99l-1.07,0.78l-0.59,0.02l-0.58,-0.74l-0.76,-0.21l-2.2,0.65Z\",\n            name: \"Lot-et-Garonne\"\n          },\n          \"FR-40\": {\n            path: \"M257.68,586.1l-3.47,-0.76l-0.46,0.4l0.02,1.53l-0.37,0.7l-0.71,0.37l-1.74,0.1l-2.93,-1.39l-4.19,2.35l-0.77,-0.8l0.28,-2.2l-0.4,-1.23l-2.1,-1.2l-0.55,0.19l-0.33,0.71l-1.9,1.61l-2.45,1.2l-1.9,0.4l-4.17,0.09l-3.36,0.61l-1.68,-0.7l-2.34,-1.93l2.16,-2.92l0.41,-2.32l1.48,-4.27l2.51,-12.23l1.46,-4.3l2.15,-9.72l3.95,-21.25l1.83,-12.26l6.25,-1.83l4.03,-2.64l4.42,1.75l0.54,1.31l-1.08,3.38l0.25,0.5l1.12,0.37l1.26,0.04l3.0,-0.66l5.04,1.27l9.78,-2.13l2.02,0.19l0.84,0.91l0.31,1.52l0.82,1.09l4.86,2.61l0.9,2.07l0.99,0.56l3.91,0.98l2.79,2.16l0.27,0.44l-0.71,3.25l0.4,1.51l0.71,0.82l8.88,0.94l1.27,-1.19l0.32,-3.47l0.59,-0.27l3.55,2.64l0.62,2.47l0.02,2.84l0.42,0.4l3.0,-0.12l12.02,2.1l0.6,0.37l-1.85,2.5l-1.36,3.07l-1.19,1.39l1.46,4.12l-0.51,0.98l0.35,1.83l-0.42,1.05l-0.84,0.31l-3.14,-0.52l-0.37,-0.73l0.78,-1.23l-0.06,-1.08l-0.91,-0.88l-1.22,-0.35l-1.33,0.44l-1.59,1.05l-1.8,1.72l-1.77,0.13l-2.38,-0.3l-2.89,1.82l-0.59,0.71l-0.12,1.04l1.56,1.74l0.82,2.14l-1.14,2.17l-0.36,1.38l-0.05,2.41l0.76,1.67l-1.41,2.79l-1.21,0.16l-0.79,0.5l-0.11,0.65l0.54,1.41l-1.35,2.19l0.02,0.65l0.98,0.76l0.55,1.63l-4.66,1.61l-6.63,0.79l-0.71,-0.35l0.26,-1.88l-0.28,-0.39l-1.04,-0.28l-0.87,0.23l-4.57,3.24l-0.72,0.17l-6.65,-1.04l-2.64,0.72l-2.68,-1.37l-1.42,-0.25l-1.34,0.18l-3.55,1.67l-2.71,-0.2l-1.3,0.91Z\",\n            name: \"Landes\"\n          },\n          \"FR-41\": {\n            path: \"M366.23,238.4l1.39,-0.45l3.94,-0.19l2.09,-0.61l1.72,-1.09l1.22,-0.18l0.94,3.47l1.02,0.64l2.8,0.62l6.81,7.85l2.85,-0.52l4.43,1.84l1.58,0.07l1.59,-0.4l5.9,-2.92l2.85,0.84l1.93,-0.34l0.73,1.25l-0.22,0.64l-1.27,1.31l-0.37,1.04l0.15,0.45l2.42,1.6l-0.02,2.63l-2.71,2.99l0.04,0.51l2.01,2.06l-1.16,1.86l0.06,0.55l3.14,2.66l1.32,-0.28l0.95,-1.67l1.97,1.25l2.36,0.86l0.57,0.54l0.99,3.84l1.46,1.69l2.08,1.13l2.41,-0.33l1.21,-1.99l0.29,-1.73l0.66,-0.46l1.55,0.51l3.16,1.97l1.96,0.29l12.33,-1.01l2.92,1.01l0.77,2.69l-4.29,1.25l-1.96,1.28l-0.44,2.51l1.18,1.24l2.44,-0.04l0.8,0.51l1.38,2.93l1.89,2.53l0.29,2.13l-0.7,1.84l-1.42,-0.0l-3.86,-1.21l-1.11,0.31l-0.9,0.73l-0.53,0.94l-0.2,2.46l0.28,1.35l1.7,3.88l-0.46,1.37l-2.19,1.15l-2.93,0.33l-2.99,-0.35l-3.07,-1.09l-0.73,0.1l-1.95,1.93l-0.49,2.89l-1.71,0.63l-1.85,-0.46l-6.98,-5.39l-3.46,1.18l-4.12,-0.91l-0.44,0.3l-0.58,1.73l-1.13,-0.19l-1.56,0.32l-1.05,0.86l-0.43,1.45l-3.05,-0.69l-2.94,0.73l-5.7,2.97l-3.12,-5.16l-2.14,-1.75l-2.74,-0.57l-2.1,0.29l-2.59,-1.62l-0.99,-1.5l1.2,-3.48l0.32,-2.78l-0.28,-2.83l-0.95,-2.44l-1.95,-2.96l-1.21,-0.99l0.13,-0.95l0.82,-1.43l-0.03,-0.86l-1.89,-2.92l-0.86,-0.32l-1.67,0.72l-0.61,-2.06l-0.84,-0.53l-1.01,-0.13l-2.04,0.25l-1.06,0.53l-1.16,1.28l-1.06,0.22l-0.75,-0.8l0.44,-2.41l-0.21,-1.3l-0.61,-0.88l-0.9,-0.49l-6.06,-1.44l-2.11,0.75l-2.89,-1.54l-0.89,-0.16l-1.08,0.26l-1.07,0.76l-0.13,-0.27l0.59,-1.42l1.29,-1.16l5.17,-2.45l1.63,-1.53l1.57,-4.34l0.07,-3.55l0.45,-1.34l2.91,-2.22l0.88,-1.62l-0.43,-1.98l0.6,-3.59l-0.6,-0.63l-1.31,-0.12l-0.89,-1.68l0.21,-0.59l2.27,-0.25l0.71,-0.46l0.07,-1.0l-0.69,-0.59Z\",\n            name: \"Loir-et-Cher\"\n          },\n          \"FR-42\": {\n            path: \"M583.09,383.52l1.72,1.09l0.77,1.17l0.35,1.21l-0.35,1.44l-1.12,0.39l-3.17,0.2l-1.25,0.79l-5.05,5.08l-0.45,1.47l0.12,0.4l2.9,2.04l0.31,0.55l-0.33,0.68l-1.86,0.46l-0.95,0.6l-0.16,0.46l0.36,1.11l4.31,2.35l0.65,1.11l-0.54,1.84l0.24,1.21l0.63,0.77l1.77,0.9l1.13,1.52l-0.55,1.62l-2.44,3.28l0.24,1.69l3.02,0.77l0.08,0.5l-2.0,2.9l1.13,3.68l3.25,3.28l3.98,2.29l3.0,0.54l3.8,-0.5l1.89,0.21l1.14,0.81l0.17,0.81l-0.79,3.31l0.17,1.78l0.8,0.92l0.95,0.24l2.4,-0.12l0.7,0.4l1.54,2.0l-0.27,3.07l0.76,2.48l-2.68,0.48l-5.51,2.54l-1.35,1.01l-0.94,1.46l0.19,3.77l-7.86,0.47l-1.9,-1.64l-1.54,-0.81l-2.83,-0.33l-1.06,-2.26l0.79,-1.98l-0.44,-1.83l-1.29,-2.03l-1.55,-0.99l-2.48,1.54l-4.06,-1.11l-2.36,0.02l-0.64,0.32l-0.28,1.19l-0.59,0.59l-5.7,0.96l-2.47,0.09l-1.61,-1.66l-0.73,-0.21l-2.27,0.68l-1.66,1.06l-0.4,-0.55l0.57,-2.63l0.71,-1.31l2.82,-2.97l0.97,-2.32l-0.07,-1.42l-2.55,-5.63l-7.56,-6.05l-3.13,-6.33l-0.58,-0.9l-1.05,-0.64l-1.81,-3.03l0.87,-1.71l0.1,-2.6l0.88,-1.58l0.32,-1.57l-0.57,-1.38l-2.48,-1.95l-0.33,-0.83l0.19,-0.43l2.19,-1.04l4.84,-1.05l0.92,-0.65l0.52,-0.86l-0.92,-6.28l-0.68,-2.16l0.16,-3.93l-0.45,-3.2l-1.15,-1.48l0.18,-0.5l2.9,-2.1l3.64,-1.01l0.56,1.52l-0.19,2.42l0.26,0.72l1.01,0.63l2.01,0.62l2.09,1.49l0.94,0.18l5.09,-1.32l3.56,0.89l3.56,-0.61l4.78,1.24l1.92,-0.02l1.84,-0.64l1.67,-1.19l1.71,-2.0Z\",\n            name: \"Loire\"\n          },\n          \"FR-43\": {\n            path: \"M552.14,449.48l0.67,0.85l0.84,0.2l1.6,-1.2l1.9,-0.6l2.13,1.82l2.81,-0.06l5.93,-1.02l0.73,-0.54l0.63,-1.51l2.08,-0.01l4.17,1.12l0.77,-0.18l1.64,-1.34l1.05,0.73l1.46,2.67l-0.74,2.73l1.01,2.4l0.55,0.5l2.83,0.32l1.35,0.69l2.79,2.4l0.01,0.38l-0.57,2.1l-1.56,2.88l-0.39,2.24l-0.49,0.1l-1.12,-1.01l-1.15,-0.45l-0.79,0.06l-0.57,0.5l-0.04,0.8l0.87,1.5l-1.86,1.79l-0.32,0.95l1.23,1.99l-1.15,0.49l-2.02,0.27l-0.8,0.49l-0.88,1.68l0.6,1.25l-0.04,0.58l-2.45,0.94l-1.75,-0.24l-0.7,0.42l-1.47,3.48l-2.26,2.8l-5.01,0.84l-2.52,-0.04l-0.63,0.49l-0.58,1.76l-3.92,1.29l-3.33,4.57l-1.1,0.45l-1.34,-0.28l-3.14,-1.55l-4.13,-3.41l-4.32,-0.85l0.51,-1.34l-0.08,-0.66l-1.42,-1.21l-1.93,-0.18l-1.33,0.48l-0.47,0.69l-0.31,1.9l-0.69,0.54l-3.23,0.32l-1.34,0.6l-0.62,-0.3l-1.06,-1.05l-3.45,-5.83l-1.02,-2.98l-1.04,-0.38l-0.16,-1.22l-0.68,-1.37l-3.66,-3.52l-0.3,-0.83l0.23,-1.07l2.14,-2.1l-0.09,-1.37l-0.66,-0.63l-1.9,-0.28l-0.72,-1.02l-0.39,-3.9l-0.44,-1.16l-1.67,-2.2l-0.5,-2.83l-0.66,-0.76l-1.65,-0.75l-1.77,-0.29l-2.82,0.33l0.05,-2.32l-0.44,-2.12l3.43,0.06l2.05,-0.48l2.28,-2.19l0.84,-0.45l2.27,-0.41l1.03,-0.48l1.31,-1.17l0.83,-0.02l3.17,1.58l5.41,-1.2l1.34,0.03l3.7,1.65l2.36,2.96l1.35,0.62l0.97,-0.2l2.41,-1.46l3.22,1.35l1.86,0.13l1.28,-0.57l0.79,-1.69l0.57,-0.41l4.6,1.93Z\",\n            name: \"Haute-Loire\"\n          },\n          \"FR-95\": {\n            path: \"M472.15,160.47l-0.57,1.17l-0.34,2.93l-0.72,1.39l-1.7,0.89l-3.08,2.77l-1.79,0.51l-6.03,-1.25l-1.59,1.06l-1.49,0.13l-2.45,0.94l-2.51,1.9l-1.87,0.64l-1.91,2.31l-1.15,-0.18l-0.15,-1.53l0.8,-1.99l1.85,-1.25l0.69,-1.15l0.06,-1.58l-0.55,-0.62l-1.79,-0.69l-3.19,-0.24l-1.41,0.41l-0.96,1.17l-1.13,2.37l-0.81,0.54l-0.64,-0.2l-0.35,-0.74l0.37,-1.7l-1.09,-1.77l-0.96,-0.82l-2.38,-0.34l-3.48,1.12l-0.7,-1.24l-0.75,-3.02l-1.03,-1.11l-1.25,-0.42l-1.35,0.0l-1.35,0.31l-3.47,1.74l-0.79,-0.03l-0.51,-1.72l-1.59,-0.6l-2.87,-0.41l2.79,-8.08l1.58,-2.72l0.43,0.35l0.8,2.03l0.97,0.67l3.39,0.3l5.65,1.41l6.54,-0.78l5.01,-2.69l3.66,2.09l2.47,0.26l3.97,1.5l1.83,0.1l3.18,-1.39l11.5,5.26l0.91,0.03l0.87,-0.37l2.41,2.32Z\",\n            name: \"Val-d'Oise\"\n          },\n          \"FR-GF\": {\n            path: \"M0.97,715.11l0.03,-0.01l1.04,0.32l0.16,0.02l0.86,-0.15l0.51,-0.46l0.86,-2.17l2.19,-0.54l1.75,-1.7l3.1,-6.63l2.47,-3.35l0.8,-2.07l0.47,-0.34l0.06,-0.66l-0.55,-0.79l0.94,-2.39l-0.02,-0.46l-0.64,-0.76l0.44,-0.66l-0.5,-1.65l0.23,-1.91l-0.45,-0.69l-0.46,-0.14l0.86,-1.73l2.07,-2.81l1.19,-0.89l0.84,-2.29l1.16,-1.21l0.63,-1.48l-0.08,-2.67l0.59,-2.69l-0.24,-0.63l-0.99,-0.8l-0.94,0.14l-0.73,-1.11l-0.67,-2.34l-1.1,-1.52l-2.15,-0.96l-0.85,-1.38l-0.94,-0.69l-0.78,-1.45l-0.91,-0.91l-0.6,-1.53l-1.41,-1.5l0.64,-2.85l-0.13,-0.85l-2.32,-1.44l0.46,-1.46l-0.01,-1.08l-0.33,-1.55l-1.0,-2.09l-0.57,-3.53l0.9,-2.56l0.01,-1.55l-0.48,-1.52l0.02,-2.19l-1.39,-1.38l0.0,-4.12l-0.26,-0.77l1.19,-1.14l-0.22,-1.91l0.25,-0.92l2.73,-3.76l0.74,-0.61l1.11,-2.37l4.66,-4.06l2.22,-1.17l1.58,-1.93l1.87,-4.21l0.52,-3.48l1.46,-2.55l2.53,0.36l1.76,0.65l0.25,-0.36l3.4,2.05l6.81,3.12l3.05,0.38l3.49,0.88l0.86,-0.07l1.81,1.42l0.75,-0.24l0.28,-0.38l-0.11,-0.54l0.6,0.16l3.21,1.77l2.63,0.74l0.44,-0.2l3.1,1.65l2.24,2.12l1.54,0.85l1.06,1.69l7.47,6.54l0.33,0.77l1.43,0.41l2.53,2.16l0.64,1.06l-0.27,1.23l0.6,0.43l2.01,-1.77l1.2,0.54l0.54,0.96l-2.76,4.28l0.03,1.47l0.4,0.37l0.6,-0.32l0.54,-0.93l0.57,-1.94l2.11,-1.78l0.87,0.63l1.21,1.89l2.18,1.25l2.26,2.1l0.89,1.31l1.5,6.51l-0.33,1.34l-1.91,1.37l-0.89,1.13l-0.01,0.47l0.45,0.15l2.11,-0.67l1.15,-0.61l0.64,-0.84l0.53,-2.04l-0.28,-4.87l0.65,-1.95l1.05,-0.2l1.97,1.65l0.0,0.74l1.13,1.9l0.28,1.83l0.66,0.89l-0.25,0.37l0.26,0.94l0.51,0.66l1.03,0.2l-0.69,0.86l-0.09,1.41l1.97,3.43l0.18,0.84l-0.06,2.16l-0.64,2.0l-0.3,0.58l-2.4,1.19l-1.04,0.92l-1.71,3.75l-2.1,2.32l-1.35,0.82l-0.13,1.42l-0.89,0.24l-0.67,0.68l-0.88,2.96l-1.99,3.34l-0.78,0.63l0.04,0.74l-4.48,7.35l-0.56,0.42l-1.13,0.12l-0.77,0.72l-0.64,1.51l-1.27,1.01l-0.24,0.8l0.31,2.33l-2.32,4.42l0.33,0.96l-1.39,1.05l-2.96,7.18l-1.09,0.6l0.67,2.17l-2.13,3.57l-1.21,1.07l-1.71,2.4l-5.24,2.87l-0.69,0.6l-0.84,1.79l-2.17,0.93l-2.57,-0.42l-1.92,-1.13l-5.09,0.79l1.41,-1.11l-0.13,-0.65l-2.09,-1.75l-0.88,-1.21l-0.87,-0.45l-0.43,0.08l-1.13,1.43l-2.74,1.58l-2.14,0.34l-1.52,-0.76l-2.22,-0.27l-2.22,-0.96l-0.87,-0.06l0.23,-1.21l-0.6,-0.69l-0.75,-0.14l-1.33,0.55l-1.05,1.47l-1.27,0.26l-0.98,1.22l-1.24,-0.04l-0.49,1.63l-0.46,0.33l-1.97,0.97l-0.71,-0.32l-1.16,0.23l-0.87,2.01l-0.86,0.39l-1.72,-1.68l-2.66,0.42l-1.6,-0.21l-2.03,-1.41l-3.41,-0.59l-1.86,-1.51l0.34,-0.7l-0.6,-0.59l-1.7,-0.92Z\",\n            name: \"Guyane fran\\xe7aise\"\n          },\n          \"FR-GP\": {\n            path: \"M44.87,452.95l2.26,-1.9l1.31,-0.53l0.63,0.19l-2.39,1.57l-1.81,0.66ZM16.07,454.56l0.99,-3.24l0.45,-0.54l1.25,-0.4l0.33,-0.98l-0.15,-1.3l-1.63,-0.93l-0.61,-3.02l1.65,-2.23l2.47,-1.44l2.87,2.33l0.67,1.2l0.24,4.01l1.84,2.68l1.77,1.09l0.71,-0.33l2.34,0.36l6.21,4.32l1.16,0.34l-0.55,0.18l-3.31,-0.89l-10.9,2.46l-3.09,1.07l-2.38,-0.65l-1.77,-1.2l-0.78,-1.34l0.24,-1.57ZM29.3,476.81l1.29,-2.59l1.05,-1.18l1.16,-0.64l1.27,0.28l1.08,0.91l0.68,1.72l0.94,0.93l0.13,1.34l-1.12,1.36l-1.47,0.73l-1.99,0.48l-1.58,-0.25l-1.44,-3.1ZM6.63,475.24l-0.25,-0.65l0.35,-0.72l-0.44,-0.85l-1.95,-1.6l-0.87,-1.97l-0.57,-0.45l-0.69,-2.06l-0.05,-4.94l-0.89,-2.29l0.25,-1.07l-1.09,-2.09l0.05,-3.66l1.5,-2.21l0.77,-0.65l0.89,-0.23l1.5,1.13l3.84,1.09l2.02,1.06l0.67,0.81l-0.4,0.18l0.01,0.74l0.87,0.07l0.72,0.74l0.65,-0.12l0.7,-0.95l0.47,-0.08l0.26,0.32l-0.35,1.27l0.32,1.1l-1.34,0.42l-0.48,0.89l0.13,2.94l0.8,2.29l0.41,3.37l-0.49,3.19l-1.83,2.19l-2.76,1.62l-2.74,1.16ZM13.68,480.6l0.09,-0.17l0.15,-0.01l-0.11,0.1l-0.13,0.09ZM10.63,481.22l0.17,0.27l-0.27,0.31l-0.19,-0.11l0.3,-0.46Z\",\n            name: \"Guadeloupe\"\n          },\n          \"FR-39\": {\n            path: \"M636.54,324.96l3.3,-1.96l0.29,-0.73l-0.62,-2.26l0.27,-0.68l5.24,-2.45l5.77,-8.09l0.56,-1.07l0.24,-2.05l1.4,-4.44l3.31,2.04l1.05,0.28l1.17,0.03l3.94,-0.81l0.76,0.37l0.46,0.74l1.09,2.82l3.51,2.25l1.95,3.33l-0.51,1.91l-1.77,1.97l-0.1,2.5l-1.72,1.99l0.3,1.45l1.37,0.56l2.08,-1.29l2.03,1.7l4.71,0.92l2.03,0.9l1.96,2.56l0.58,4.16l1.96,2.96l0.83,0.55l2.78,0.44l7.29,5.91l-0.57,0.75l-6.3,4.25l-0.52,0.66l0.0,1.44l0.82,1.57l-1.76,1.41l-0.84,1.22l0.33,1.61l1.72,1.74l3.37,1.86l-1.94,2.13l-3.09,4.33l0.33,2.88l-3.79,4.35l-2.1,1.94l-1.03,1.64l-4.26,3.58l-2.33,0.56l-7.03,-0.44l-0.45,-0.65l-0.22,-1.3l-0.66,-0.88l-3.08,-2.47l-0.52,-0.06l-2.8,2.33l-0.57,1.15l-1.28,0.24l-1.18,1.22l-1.45,0.59l-0.82,0.73l-1.63,-0.33l-0.55,-0.58l0.29,-2.41l-0.42,-1.04l-1.87,-0.45l-0.9,-1.08l-2.11,-0.64l-0.82,-0.85l-0.79,-2.49l-1.25,-0.94l-1.43,-0.41l-0.41,-0.65l-0.02,-2.36l1.02,-0.49l4.42,-0.91l1.13,-0.73l0.39,-0.89l-0.11,-0.84l-0.52,-0.67l-2.59,-1.42l-0.66,-1.39l0.39,-1.98l1.89,-1.03l0.5,-0.65l1.1,-3.74l-1.49,-5.71l-0.52,-1.09l-1.27,-1.09l0.92,-2.13l-0.29,-0.66l-1.72,-1.29l-0.18,-0.73l1.26,-0.72l3.88,-0.5l1.03,-0.96l0.46,-1.58l-0.25,-0.34l-2.12,-0.68l-1.69,-1.38l-1.75,-0.35l-2.19,-1.16l-3.31,-3.1l-1.32,-2.47Z\",\n            name: \"Jura\"\n          },\n          \"FR-38\": {\n            path: \"M609.43,431.43l0.37,-0.26l11.99,-0.96l1.42,-0.94l1.29,-2.78l2.74,-2.21l1.55,-0.72l1.38,0.0l0.4,-0.35l0.15,-1.12l-0.77,-1.09l-3.91,-1.99l-0.55,-0.73l-0.01,-0.96l1.81,-3.4l1.46,0.25l5.22,2.56l1.5,0.29l1.26,-0.39l0.95,-0.77l3.72,-5.2l1.66,-0.79l1.02,0.37l2.95,2.53l-0.16,0.54l1.05,2.91l1.74,2.31l4.28,3.44l1.11,1.33l2.09,3.44l1.43,3.24l7.19,12.36l0.99,0.97l9.61,3.52l0.53,-0.42l0.24,-5.99l0.77,-0.59l1.92,-0.13l0.96,0.33l3.69,2.98l4.95,0.68l2.57,2.57l1.08,1.62l0.41,1.78l-0.28,1.51l-2.76,2.4l-0.7,1.38l-0.16,1.59l1.41,5.27l0.16,2.5l0.48,0.71l0.6,0.2l3.54,0.13l1.61,0.52l0.42,0.96l-1.56,1.89l-1.05,4.98l0.01,1.51l0.51,1.03l1.24,0.41l3.69,-0.43l0.93,0.46l0.56,3.36l1.97,2.53l-0.32,4.01l-0.85,0.16l-2.83,-0.77l-3.8,0.98l-1.71,-0.15l-1.86,0.35l-2.28,-0.4l-3.91,2.12l-3.38,-0.2l-3.2,2.03l-0.33,0.77l0.25,1.63l-0.69,0.66l-2.32,0.66l-4.54,0.49l-2.12,2.84l-2.13,0.21l-7.15,-1.11l-5.25,-4.64l-1.23,-0.57l-0.56,0.37l0.02,1.16l-3.85,-1.07l-0.77,-0.79l-0.02,-1.18l1.34,-7.85l0.0,-2.77l0.7,-2.77l-1.35,-4.55l0.89,-1.79l-0.37,-0.58l-1.95,0.13l-4.0,2.45l-2.19,-0.04l-0.76,-1.11l-1.94,0.36l-1.68,-0.41l-1.95,-0.01l-1.01,-1.74l-2.6,-0.1l-0.59,0.26l-0.24,-0.8l1.17,-3.91l-0.89,-4.16l-0.15,-2.44l-0.84,-1.66l-0.5,-0.19l-1.67,0.65l0.4,-2.19l-0.39,-0.47l-2.66,-0.05l-0.71,-0.53l-1.36,-2.01l-1.81,-0.09l-1.11,-1.65l-1.05,-0.26l-1.5,0.3l-5.43,2.97l-3.6,0.31l-2.13,-2.79l-0.16,-1.49l-1.08,-3.38l0.27,-3.03l1.51,-2.04l4.14,-3.16l1.07,-2.82l-0.1,-0.43l-1.88,-1.77l-1.7,-1.15Z\",\n            name: \"Is\\xe8re\"\n          },\n          \"FR-31\": {\n            path: \"M438.35,594.54l-4.57,0.58l-3.86,1.57l-0.35,-1.32l-0.56,-0.57l-1.18,-0.36l-0.78,0.18l-0.7,1.44l-1.61,1.87l-0.18,0.68l0.42,1.98l-0.7,0.55l-1.69,0.11l-2.37,0.73l-1.83,3.99l-1.62,-0.34l-1.69,1.92l-0.67,0.15l-0.53,-0.93l-0.7,-0.5l-2.26,0.09l-3.43,-2.4l-1.51,0.22l-0.75,1.47l0.93,2.1l-0.77,1.46l-1.23,0.84l-1.35,0.05l-1.19,-0.81l0.4,-1.59l-0.23,-0.93l-3.02,-2.84l-1.49,-0.75l-1.59,-0.19l-1.48,0.75l-0.37,2.57l1.03,1.07l3.21,1.18l0.54,0.63l-0.4,0.78l-1.31,0.81l-2.63,0.93l-4.2,0.5l-1.19,1.26l0.41,1.54l2.88,1.2l0.73,0.9l-2.48,2.2l-0.7,-0.1l-2.02,-2.74l-3.53,-1.98l-1.05,-0.07l-2.07,0.8l-1.63,0.09l-0.77,0.7l-0.87,1.86l-2.5,1.07l-0.7,1.18l-0.08,1.93l0.65,3.53l-0.3,1.26l-1.98,1.54l-2.5,0.59l-1.87,0.07l-0.84,0.99l-0.34,1.64l-1.88,1.25l-0.41,2.1l1.2,4.4l-1.96,-1.01l-2.28,-0.07l-3.17,-0.95l-2.82,0.01l-1.52,0.52l-0.54,1.34l0.11,1.63l-0.82,1.99l0.47,0.91l-0.83,1.28l0.24,0.56l0.76,0.24l0.61,0.69l0.36,0.97l-0.05,1.0l-0.39,0.58l-10.29,0.14l-0.66,-0.25l-0.7,-5.3l0.12,-4.44l0.39,-1.7l0.65,-1.16l1.0,-0.2l3.45,0.3l1.97,-1.5l3.97,-5.65l-2.4,-5.55l-0.48,-0.2l-1.96,0.65l-2.16,1.31l0.36,-1.37l1.29,-2.08l0.35,-1.15l-0.18,-0.46l-6.96,-3.98l3.47,-3.2l1.19,-1.73l2.09,-0.72l0.7,-0.75l-0.1,-2.33l2.19,-1.81l0.75,-1.08l-0.3,-1.32l1.57,-0.13l1.53,-0.85l3.15,-3.7l2.01,-0.99l2.09,-1.87l7.67,0.4l1.23,0.7l2.77,2.43l1.75,0.36l1.71,-1.59l0.5,-2.5l0.11,-4.81l1.16,-3.23l0.85,-1.05l3.79,-0.02l2.88,-2.08l0.92,-2.77l-0.11,-0.42l-2.97,-2.72l-4.72,-2.63l-1.01,-2.3l-2.09,-1.29l-2.6,-2.61l-0.98,-1.95l5.54,-1.27l3.13,0.08l2.12,-0.81l1.48,-0.01l3.38,3.05l1.92,-0.01l6.87,-3.51l0.09,-0.65l-0.7,-0.63l-2.44,-1.22l3.91,-2.14l4.12,0.36l0.93,-0.42l1.66,-1.68l1.72,0.56l2.12,-1.15l-0.25,2.12l1.83,3.3l0.04,1.74l2.14,1.35l1.79,0.59l2.29,5.99l2.73,2.76l0.1,0.71l-1.25,0.52l-0.73,0.77l-0.45,0.83l0.16,0.54l6.28,3.37l1.9,0.54l0.98,0.72l2.66,3.34l4.34,3.17l1.17,0.2l1.26,-0.64l1.07,-1.48l1.14,-0.06l1.3,1.29l-1.5,2.12l-0.12,1.34l0.26,0.94Z\",\n            name: \"Haute-Garonne\"\n          },\n          \"FR-30\": {\n            path: \"M566.02,584.87l-0.06,-1.85l3.33,-1.3l1.57,-2.94l-0.27,-4.12l-2.13,-3.56l-0.92,-0.7l-2.81,-1.24l-3.53,-2.48l-3.2,-0.45l-0.09,-3.29l-0.36,-1.11l-0.69,-0.87l-1.07,-0.59l-2.18,-0.12l-4.39,0.66l-1.56,-1.15l1.35,-3.1l-0.1,-0.46l-2.7,-2.28l-3.77,-0.42l-2.69,1.99l-0.9,2.3l-2.1,-0.17l-1.35,0.34l-1.85,2.64l-0.86,0.74l-0.97,-0.02l-1.81,-1.45l-1.55,-0.47l-1.27,0.54l-0.57,1.76l-0.36,0.59l-0.4,0.09l-1.06,-0.9l-1.22,-2.44l-1.2,-0.57l-2.57,0.04l0.68,-1.95l5.28,-4.67l0.31,-0.63l-0.08,-0.85l-0.93,-1.06l-2.91,-2.03l-1.78,-0.14l-1.54,-1.21l-1.67,0.17l-0.93,-0.62l2.15,-1.34l0.28,-2.27l0.84,-1.14l1.88,-1.21l6.14,3.38l2.51,0.67l6.22,-0.32l1.43,-1.05l0.3,-3.47l1.43,-0.44l1.03,0.26l6.27,3.34l4.61,0.45l0.9,-0.21l2.81,-2.74l2.28,-4.39l0.51,-1.75l-0.2,-1.4l-1.55,-3.3l-0.62,-3.31l-1.79,-2.77l0.63,-0.51l2.02,-0.35l0.99,-0.67l1.96,-3.09l1.34,1.08l1.64,2.61l-0.83,2.07l0.49,3.26l0.66,0.8l4.86,-0.5l1.08,1.04l4.93,2.42l1.51,0.3l0.78,-0.21l1.6,-1.52l3.36,-2.18l2.44,-0.38l0.36,0.44l-0.26,1.47l0.24,0.69l0.83,0.79l0.97,0.26l0.84,-0.14l1.05,-0.78l0.64,-2.28l2.19,-0.38l1.44,0.09l1.68,0.67l2.19,2.02l1.73,0.78l2.57,0.61l0.57,1.69l1.23,1.54l0.1,1.58l1.9,1.83l0.18,2.73l-0.33,2.14l0.45,2.79l0.62,0.47l1.22,-0.4l1.2,0.21l4.51,5.33l-0.09,0.53l-1.09,-0.09l-0.55,0.26l-0.07,2.45l-1.05,1.25l-1.67,1.19l-2.8,1.16l-5.36,3.57l-0.17,0.92l0.54,4.15l-1.95,4.79l-0.24,2.71l-0.49,0.37l-1.49,-0.73l-2.67,-0.6l-2.03,0.57l-1.49,1.04l-1.68,2.12l-1.37,2.92l0.45,1.06l1.58,0.26l-0.69,1.49l-2.15,0.42l-0.61,1.38l-1.54,0.44l-3.46,2.46l-2.02,0.48l-1.44,1.06l-1.17,0.31l-1.37,3.01l-2.27,-0.34l-2.81,-1.63l-0.8,-1.47l0.87,-1.81l-1.93,-1.64Z\",\n            name: \"Gard\"\n          },\n          \"FR-33\": {\n            path: \"M238.0,500.65l3.34,-33.36l2.55,-12.04l1.09,-15.98l2.41,-4.69l0.79,-1.06l0.72,-0.24l0.41,0.27l-0.33,2.59l1.44,2.01l4.22,2.89l3.51,1.53l7.32,7.13l1.65,2.15l1.65,6.53l1.42,7.99l2.13,4.49l2.13,2.43l2.35,2.0l2.44,1.49l0.52,1.41l-0.17,1.23l0.35,3.2l0.54,1.31l0.97,0.73l0.45,-0.0l0.16,-0.42l-0.81,-4.06l0.53,-2.18l-0.8,-1.78l-1.38,-1.23l1.66,0.3l2.68,1.57l0.51,-0.03l0.06,-0.51l-1.72,-2.53l-5.08,-1.82l-2.05,-1.4l-1.05,-1.86l-0.76,-2.33l-2.25,-14.04l4.57,0.18l1.0,-0.64l1.05,-1.41l0.92,0.83l0.37,1.95l0.61,0.79l2.13,0.71l2.33,0.11l3.23,2.19l0.41,0.91l-0.17,2.14l0.36,1.62l1.1,1.8l0.99,0.81l3.02,-0.17l1.87,1.12l1.79,0.6l2.4,1.97l4.08,1.26l1.94,-0.24l3.34,-1.09l1.62,0.54l1.87,-0.63l3.77,-0.0l0.86,0.7l0.85,1.9l0.12,1.21l-1.66,3.4l0.03,1.68l-1.47,1.64l-0.45,1.0l-0.12,1.41l1.53,1.97l-0.01,0.4l-2.58,3.64l0.39,0.63l0.61,-0.09l1.97,1.69l8.78,1.03l1.48,-0.51l2.82,-2.66l-0.03,-0.86l3.63,0.92l0.66,0.53l-1.25,1.32l-1.81,0.49l-0.36,0.49l0.68,2.82l1.1,1.81l-2.83,-0.11l-0.79,0.27l-0.38,0.53l-0.22,2.0l-0.4,0.64l-0.52,0.05l-1.67,-1.76l-0.96,-0.21l-2.05,0.69l-0.81,0.75l-0.67,2.2l0.31,1.13l1.02,1.08l2.35,0.65l0.34,0.39l-0.21,1.07l-5.31,5.95l-0.48,0.38l-1.65,-0.17l-0.88,0.43l-2.92,3.93l-0.27,1.03l0.15,1.03l1.6,1.84l-0.76,2.83l1.04,2.29l-0.04,0.56l-0.94,-0.13l-4.21,1.14l-0.89,0.74l-0.09,0.48l0.63,1.22l1.67,1.71l0.69,2.02l-1.69,1.46l-4.28,1.92l-4.05,-2.75l-1.25,0.81l-0.23,3.33l-0.71,0.8l-8.28,-0.78l-0.44,-0.46l-0.35,-1.31l0.73,-3.12l-0.54,-1.05l-3.06,-2.33l-3.93,-0.99l-0.75,-0.44l-0.94,-2.1l-4.74,-2.51l-0.63,-0.78l-0.41,-1.73l-1.27,-1.23l-2.36,-0.21l-9.74,2.12l-4.86,-1.26l-4.17,0.64l-0.69,-0.23l1.0,-3.14l-0.68,-1.87l-5.07,-2.13l-4.33,2.73l-5.9,1.73l0.19,-2.24l-0.62,-3.67l1.83,-2.53l1.26,-4.35l1.04,-1.14l1.32,-0.04l3.7,0.81l2.29,-0.28l1.4,-0.83l0.21,-1.48l-1.01,-1.12l0.28,-0.48l-0.7,-1.19l-4.63,-3.83l-1.79,-0.89l-0.92,0.36l-3.56,5.22l-0.53,2.34Z\",\n            name: \"Gironde\"\n          },\n          \"FR-32\": {\n            path: \"M359.79,547.18l0.65,0.81l0.4,1.58l0.66,0.23l3.14,-1.63l0.89,0.14l0.43,0.57l0.03,0.93l-0.49,1.07l-3.18,3.71l-1.5,0.87l-0.15,0.61l0.99,1.17l1.74,0.65l4.32,0.23l0.53,0.72l1.39,6.68l-0.62,1.87l0.36,0.56l3.17,0.08l1.18,2.38l2.68,2.69l2.04,1.25l0.51,1.61l0.55,0.73l4.81,2.7l2.66,2.45l-0.8,2.4l-2.51,1.73l-3.62,-0.05l-1.33,1.4l-1.3,3.59l-0.11,4.84l-0.46,2.27l-1.31,1.13l-0.93,-0.27l-2.74,-2.4l-1.42,-0.82l-7.83,-0.52l-1.11,0.52l-1.55,1.52l-2.15,1.1l-3.04,3.62l-1.39,0.77l-1.79,0.11l-8.42,-1.75l-3.48,0.02l-1.29,-2.02l-0.57,-0.05l-0.64,0.61l-1.27,0.43l-0.98,-0.57l-0.81,-1.16l-0.76,-0.46l-1.13,-0.17l-4.88,0.9l-0.78,-0.25l-1.87,-2.23l-1.19,-0.73l-0.11,-0.88l0.54,-2.12l-1.07,-1.75l-0.7,-2.22l-0.78,-0.41l-1.24,-0.05l-3.06,-1.7l-0.93,-0.16l-1.15,-2.48l-0.59,-2.7l-0.34,-0.31l-1.92,-0.22l-1.76,0.52l-2.87,2.2l-5.51,-1.02l-1.94,0.13l-0.8,-1.93l-0.88,-0.6l1.33,-2.32l-0.5,-1.87l1.85,-0.49l1.64,-3.16l0.08,-0.71l-0.81,-1.29l0.05,-2.22l1.48,-3.42l-0.0,-0.64l-0.91,-2.1l-1.51,-1.7l0.46,-0.78l2.03,-1.39l0.59,-0.28l2.14,0.33l2.0,-0.16l2.08,-1.86l2.5,-1.32l1.3,0.7l0.06,0.52l-0.83,1.47l0.38,1.15l1.26,0.69l2.78,0.25l1.22,-0.46l0.56,-0.85l0.17,-0.92l-0.33,-1.74l0.68,-1.02l1.79,-0.56l0.96,0.87l1.31,-0.01l1.3,-0.95l2.0,-2.61l5.5,1.55l3.19,-1.57l1.3,-0.2l4.46,-1.96l1.1,-0.75l2.5,0.3l5.09,-1.52l1.7,0.75l2.48,1.88l1.39,-0.26l3.55,-1.86Z\",\n            name: \"Gers\"\n          },\n          \"FR-35\": {\n            path: \"M193.66,200.25l0.91,0.63l0.48,-0.04l0.09,-0.48l-0.55,-1.04l-0.7,-0.57l-1.7,-0.54l-1.61,-3.1l0.51,-1.02l1.66,-0.82l0.37,-1.34l0.28,-0.13l2.22,0.0l0.28,-0.7l4.99,-0.86l0.54,1.16l-1.35,1.87l-0.06,2.08l1.7,1.73l2.67,0.63l4.54,0.04l4.83,-0.64l3.02,-1.39l2.6,5.45l1.04,3.06l1.91,2.9l3.27,2.38l2.44,0.21l1.93,-0.61l2.78,-1.91l2.08,-0.77l2.22,-2.4l2.39,0.03l6.14,1.5l2.32,1.25l-0.2,5.67l0.77,8.15l-1.95,4.1l0.21,1.05l0.9,1.52l0.8,4.72l-0.73,1.74l0.74,4.88l0.57,1.17l1.18,1.08l0.09,4.44l-1.36,0.63l-4.18,0.61l-2.21,1.9l-0.63,1.08l-2.9,9.1l-1.14,1.77l-0.41,1.91l-6.47,-1.09l-0.75,-0.44l-0.77,-1.22l-1.29,-0.55l-3.34,-0.0l-1.83,1.23l-6.34,2.57l-1.86,1.31l-1.2,1.55l-2.58,1.54l-7.31,2.01l-3.72,-0.8l-4.42,1.41l-1.22,0.67l-4.0,0.25l-3.59,1.82l-0.51,1.1l-0.32,-0.19l-0.17,-2.18l-1.02,-2.2l-0.09,-1.86l0.33,-0.32l2.98,-0.32l0.46,-1.25l-0.89,-1.18l-2.27,-0.12l-0.44,-0.27l-0.01,-0.41l0.68,-0.49l1.58,-0.35l0.94,-0.71l1.05,-2.15l0.07,-1.24l-0.88,-1.2l-2.57,-0.21l0.4,-6.26l-0.33,-1.06l-1.18,-1.53l-2.87,-1.77l-5.29,-0.98l-0.72,-0.47l-0.03,-1.08l0.71,-0.97l4.1,-1.14l0.83,-0.85l0.1,-1.05l-1.0,-0.9l-2.74,0.1l-1.37,-2.46l-1.39,-1.47l3.16,-2.19l0.88,-2.86l0.34,-0.59l1.51,-1.03l0.97,-2.6l0.45,-0.27l2.77,-0.1l1.73,-1.78l1.25,-0.81l4.97,1.15l1.64,-1.71l0.01,-3.24l1.33,-0.34l0.57,-1.09l-1.23,-5.68l2.64,-4.77l-1.01,-4.44l-0.63,-0.64l-0.55,0.02l-0.71,0.73l-0.55,-0.33l0.13,-0.69l-0.92,-1.66Z\",\n            name: \"Ille-et-Vilaine\"\n          },\n          \"FR-34\": {\n            path: \"M472.95,595.08l2.8,-1.36l1.66,-1.38l0.42,-0.75l-0.67,-1.83l0.6,-2.13l-0.19,-0.87l-1.8,-1.81l-0.4,-0.78l0.06,-2.31l1.08,-2.4l2.53,-0.35l4.36,1.68l1.08,-0.09l6.9,-2.67l1.13,-0.84l0.89,-1.44l0.94,-0.73l2.76,-0.52l2.05,0.72l1.31,-0.01l1.13,-0.87l0.42,-1.21l-0.12,-1.91l0.44,-1.97l-0.73,-1.88l0.22,-1.3l0.63,-0.54l1.14,-0.13l5.68,0.72l1.26,-0.14l1.39,-0.84l0.82,-1.13l0.22,-1.48l0.5,-0.93l1.64,-1.06l2.89,-0.27l1.28,-0.95l2.91,-0.05l0.8,0.42l1.07,2.27l1.44,1.2l1.25,-0.29l0.99,-2.42l0.74,-0.23l0.99,0.34l1.86,1.49l1.5,0.12l1.36,-1.05l1.56,-2.39l3.67,-0.32l0.92,-2.34l2.17,-1.72l3.48,0.38l2.17,1.9l-1.36,3.12l0.13,0.48l1.96,1.44l4.72,-0.6l2.04,0.12l0.73,0.44l0.75,1.51l-0.04,2.62l0.4,1.15l3.35,0.52l3.47,2.44l2.8,1.24l0.71,0.51l2.04,3.41l0.25,3.51l-1.45,2.7l-3.23,1.15l-0.27,0.38l0.03,2.02l-2.89,-0.25l-3.46,0.39l-2.5,0.88l-13.02,9.46l-7.26,2.86l-2.05,1.55l-4.61,5.42l-1.04,0.41l-2.52,-1.04l-4.18,0.38l-4.24,1.6l-4.26,3.08l-3.27,-1.88l-2.29,-0.5l-2.5,-0.06l-3.01,-1.69l-2.94,-0.4l-0.36,-0.71l0.07,-1.71l-0.55,-0.39l-3.21,0.47l-0.86,-0.2l-0.54,-0.39l-2.44,-4.28l-1.1,-0.6l-1.16,0.45l-0.31,0.94l0.04,2.06l-0.7,1.96l-4.87,4.11l-2.35,-1.1l-1.39,-3.47l-0.66,-0.06l-1.39,1.71l-1.27,0.17l-3.16,-2.04l-1.4,-1.56l-0.17,-1.38l0.72,-1.43l1.48,-1.55l-0.1,-0.63l-0.49,-0.26Z\",\n            name: \"H\\xe9rault\"\n          },\n          \"FR-37\": {\n            path: \"M352.22,269.97l1.75,-1.0l3.68,1.68l0.83,-0.03l1.3,-0.71l5.87,1.39l1.05,0.87l0.18,0.97l-0.4,2.78l0.41,0.75l0.8,0.52l0.91,0.07l0.85,-0.34l1.29,-1.38l0.8,-0.37l1.8,-0.2l1.2,0.39l0.34,1.65l0.49,0.6l0.66,0.12l1.09,-0.66l0.59,-0.01l1.67,2.46l-0.09,0.96l-0.83,1.38l0.08,1.15l1.3,1.12l1.88,2.86l0.85,2.17l0.27,2.64l-0.31,2.69l-1.21,3.49l0.39,1.26l3.11,2.54l0.91,0.24l1.99,-0.29l2.4,0.46l1.91,1.54l5.1,8.02l0.3,1.55l-0.35,1.42l-2.1,0.31l-0.75,2.28l-0.93,0.25l-1.44,2.34l-1.86,1.74l-3.39,-1.22l-1.61,-0.11l-3.27,0.8l-1.71,0.81l-1.23,1.46l-0.2,1.11l0.21,2.5l-1.27,0.79l-0.13,2.05l-1.79,8.58l-1.51,3.53l-1.97,0.76l-1.3,-1.56l-0.5,-0.09l-1.92,1.07l-2.81,-2.03l-7.16,-9.22l-1.26,-3.31l-1.44,-1.93l-6.17,-2.97l-0.71,0.68l0.16,1.39l0.73,1.37l-0.4,0.35l-5.41,0.31l-1.21,0.29l-1.78,1.09l-2.67,-0.46l-2.71,0.24l-1.01,-0.19l-0.92,-0.81l-0.25,-0.98l0.04,-2.48l0.47,-2.57l-0.35,-1.03l-2.01,-0.4l-0.72,-1.12l-0.61,-0.29l-3.43,0.61l-0.29,-0.38l0.35,-1.68l-0.32,-1.32l-0.99,-0.39l-1.98,0.41l-0.5,-1.99l-0.74,-0.2l-1.7,0.66l-1.69,-2.39l0.88,-5.76l1.43,-5.26l4.43,-6.2l-0.2,-2.84l0.98,-2.98l1.96,-3.88l-0.45,-3.6l1.51,-3.81l7.61,1.68l0.98,-0.08l0.62,-0.83l-0.48,-2.31l0.7,-0.71l2.9,0.89l2.04,-1.63l2.39,-0.48l3.32,-1.45l2.28,-0.47l0.53,-0.73l-0.11,-1.0Z\",\n            name: \"Indre-et-Loire\"\n          },\n          \"FR-36\": {\n            path: \"M393.95,318.07l0.9,-0.09l0.61,-2.25l1.58,-0.11l0.8,-0.54l0.42,-1.84l-0.33,-1.69l-1.6,-2.47l5.44,-2.85l2.8,-0.69l3.15,0.76l0.48,-0.3l0.36,-1.49l0.86,-0.71l1.2,-0.21l1.29,0.24l0.46,-0.3l0.59,-1.74l3.84,0.88l3.17,-1.22l6.69,5.17l0.04,1.92l-0.81,1.69l-3.06,2.75l0.08,0.65l1.25,0.67l5.66,1.45l5.07,-1.54l3.01,0.3l1.15,0.49l0.43,0.43l0.26,1.29l-0.65,2.27l0.08,0.95l2.03,1.92l1.02,1.64l0.02,1.03l-0.75,2.0l-0.09,1.49l0.73,1.27l2.01,1.1l0.45,0.6l-0.11,0.46l-1.99,1.83l-1.21,2.47l-0.26,1.4l0.24,1.28l2.04,1.59l0.18,0.69l-0.21,0.55l-2.03,1.48l-0.56,0.91l-0.03,0.97l0.45,0.84l0.67,0.46l3.34,0.78l0.4,0.52l-0.05,2.41l0.47,0.67l1.3,0.58l0.57,0.68l0.21,0.95l-0.34,2.17l-1.41,2.37l-0.02,1.11l1.58,1.86l0.63,2.64l-0.65,1.45l-2.3,2.34l-0.36,1.17l-1.91,0.36l-2.11,-0.72l-3.44,0.0l-2.44,-0.84l-5.56,-0.15l-1.36,0.29l-1.79,1.06l-1.02,-0.37l-1.84,-1.89l-0.73,-0.15l-0.91,0.28l-0.52,0.62l-0.16,2.28l-0.72,0.98l-3.85,-0.24l-2.6,1.5l-1.18,-0.45l-0.12,-1.0l-0.46,-0.52l-0.8,-0.24l-1.55,0.21l-2.31,-0.53l-1.04,0.29l-3.98,3.58l-1.69,0.94l-2.46,-1.47l-0.93,-1.4l-0.84,-0.54l-0.84,-0.04l-0.83,0.37l-1.03,1.35l-3.36,0.5l-1.43,-0.08l-2.37,-1.16l0.93,-3.22l-0.72,-1.01l-1.32,-0.68l-1.11,-1.06l0.45,-2.58l-0.89,-1.68l-1.75,-1.2l-5.0,-0.37l-0.32,-1.41l-0.46,-0.57l-3.41,-1.35l-2.52,-2.46l-0.51,-2.09l-0.01,-1.46l0.61,-2.86l-0.92,-2.42l-1.03,-1.33l1.45,-0.81l1.27,1.52l0.45,0.12l2.62,-1.14l1.61,-3.8l1.81,-8.66l0.09,-1.84l1.3,-0.85l-0.12,-3.47l0.97,-1.2l1.52,-0.73l3.17,-0.77l1.22,0.08l2.76,1.19l1.01,0.08l2.31,-2.0l1.48,-2.38Z\",\n            name: \"Indre\"\n          }\n        },\n        height: 749.2159980728637,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"indonesia\", {\n        insets: [{\n          top: 0,\n          left: 0,\n          width: 793,\n          height: 335.58228316462225,\n          bbox: [{\n            y: -678131.2320454835,\n            x: 10577634.333586475\n          }, {\n            y: -220216.79943139793,\n            x: 10946840.788638955\n          }]\n        }],\n        paths: {\n          ID_ac: {\n            name: \"Aceh\",\n            path: \"m36.71 92.06l-0.17 0.10l-0.71 -1.09l-1.25 -1.34l-0.98 -0.46l-0.59 -0.10l-0.24 -0.15l0.11 -0.15l0.99 -0.20l2.06 0.13l0.69 1.08l0.34 0.98l-0.01 0.86l-0.24 0.34zm-27.55 -61.11l2.59 1.42l0.08 0.66l0.28 0.46l1.01 1.00l1.79 1.40l0.85 0.35l3.94 0.98l4.04 0.27l1.91 -0.35l2.23 -0.88l0.36 0.00l0.90 0.48l1.52 -0.36l1.12 0.12l1.41 0.53l0.38 0.33l0.32 0.86l0.62 0.21l0.98 -0.20l3.93 -1.52l0.47 0.02l0.88 0.89l1.09 1.51l2.15 2.26l1.56 1.32l1.21 0.28l0.89 1.77l0.15 1.52l0.41 0.97l0.44 0.59l-0.09 0.93l0.82 -0.10l0.97 0.36l0.64 0.31l2.06 1.58l0.14 1.33l-0.36 0.86l0.00 0.00l-0.40 0.14l-0.80 -0.15l-0.77 0.21l-0.06 0.32l-0.27 0.12l-0.56 0.12l-0.38 -0.09l-0.09 0.21l0.30 0.53l-0.03 0.38l-0.41 0.24l0.15 0.47l-0.47 0.68l0.03 0.97l-0.21 0.29l-0.24 1.33l-1.21 0.65l0.06 0.38l-0.15 0.27l-0.56 -0.38l-0.18 0.03l-0.09 0.32l0.41 0.74l-0.12 0.35l-1.48 1.18l-0.44 0.62l0.33 0.82l0.47 0.50l0.00 0.32l0.27 0.18l-0.03 0.74l0.74 0.35l0.21 0.88l0.56 0.41l-0.33 0.53l0.27 0.56l0.03 0.44l0.65 0.44l0.27 -0.12l0.38 0.71l-0.24 0.79l-2.37 0.65l0.09 0.18l0.59 0.12l0.50 0.50l0.06 0.74l0.62 0.65l-0.09 0.97l-0.62 -0.06l-0.18 0.12l0.21 0.26l-0.03 0.53l0.27 0.88l0.00 1.06l0.92 0.24l0.59 1.06l0.95 0.12l-0.03 0.26l0.24 0.29l-0.33 0.50l-0.06 0.38l0.15 0.65l0.50 0.50l0.03 0.26l-0.62 0.21l-0.24 1.41l0.18 1.00l0.41 0.56l-0.06 0.71l0.83 0.35l0.53 1.62l-0.61 2.79l0.00 0.00l-3.51 -1.98l-0.40 0.00l-0.93 0.46l-2.10 -0.53l-1.65 -2.30l-0.10 -4.00l-0.32 -2.17l-0.58 -1.78l-0.20 -0.21l-0.80 -0.01l-1.57 -0.62l-0.47 -0.22l-0.66 -0.63l-1.24 -1.73l-0.46 -1.96l-0.47 -0.77l-1.53 -0.52l-1.58 -2.52l-1.23 -2.32l-1.40 -0.78l-0.47 -0.52l-0.30 -1.13l-1.60 -1.12l-2.64 -0.15l-1.33 0.22l-0.68 -0.14l-0.52 -0.30l-1.68 -1.64l-1.86 -2.77l-1.70 -1.81l-0.76 -0.24l-1.31 -1.01l-0.98 -0.44l-1.17 -1.04l-1.96 -2.36l-2.84 -2.64l-2.30 -1.88l-1.87 -2.83l-2.41 -4.69l0.34 -0.67l-0.06 -0.30l-1.17 -1.87l0.40 -2.12l-0.56 -1.28l0.17 -1.57l0.86 0.01l2.17 -1.40l0.40 -0.07l2.87 0.44l2.43 0.76l0.00 -0.00z\"\n          },\n          ID_ba: {\n            name: \"Bali\",\n            path: \"m352.57 279.00l-0.52 -0.07l-1.06 -0.59l-0.83 -0.67l0.13 -0.37l0.63 -0.57l0.28 -0.08l0.99 0.00l0.28 0.16l0.62 1.15l-0.01 0.28l-0.51 0.76zm-19.22 -12.44l0.39 0.18l0.33 0.57l0.33 0.10l0.67 -0.37l3.28 0.94l1.91 0.33l1.74 -0.17l0.67 -0.23l1.67 -1.47l0.92 -0.42l0.34 0.08l4.56 1.70l1.87 1.17l1.27 1.64l1.30 0.70l0.14 0.36l-0.07 0.34l-0.30 0.41l-1.34 1.14l-1.95 0.99l-0.97 0.33l-0.94 0.08l-1.20 0.57l-1.00 0.94l0.04 0.75l-1.34 0.79l0.53 0.67l0.12 -0.38l0.22 0.71l-0.36 0.51l-1.07 0.30l-0.96 -0.12l-0.19 -0.34l0.80 -0.64l0.61 -0.26l-0.24 -0.45l0.28 -0.63l-0.35 -0.50l-1.40 -1.47l-2.57 -2.24l-0.72 -0.41l-1.60 -0.62l-1.42 -0.27l-2.13 0.12l-2.43 -3.08l-0.27 -1.87l0.13 -0.43l0.70 -0.05z\"\n          },\n          ID_bb: {\n            name: \"Bangka Belitung\",\n            path: \"m202.10 179.06l-0.64 0.18l-0.57 -0.17l-1.69 -0.97l0.32 -0.77l1.15 -0.51l1.70 0.73l0.13 0.29l-0.40 1.22zm16.28 -8.41l4.36 1.21l3.09 2.51l0.52 1.76l-1.52 2.63l-0.13 1.93l-1.62 0.74l-0.46 1.13l-1.60 0.37l-0.18 -0.29l-0.10 -1.15l-1.72 -1.95l-0.37 0.14l-0.46 0.47l0.34 0.42l-0.07 0.76l-0.39 0.26l-2.95 0.95l-0.56 -0.24l-0.57 -3.51l0.56 -1.65l0.06 -2.30l0.36 -0.43l-0.03 -0.95l0.27 -1.94l0.28 -0.37l0.74 -0.11l1.05 0.07l1.10 -0.46zm-30.13 -13.12l0.82 1.33l0.49 1.40l-0.01 1.81l0.37 1.93l0.92 2.81l0.51 1.08l0.78 0.99l0.73 0.69l0.50 0.21l3.98 0.73l2.86 1.12l-0.68 0.39l-1.05 1.20l-1.27 3.27l-0.12 0.83l0.13 0.44l0.78 0.46l0.31 -0.07l1.19 0.55l0.00 1.23l-0.41 0.43l-3.43 0.07l-1.30 -2.08l-2.82 -1.27l-2.34 -0.67l-0.91 -0.45l-1.67 -0.17l-0.41 -0.30l-0.93 -1.55l-0.31 -1.34l0.00 -0.59l0.65 -1.50l-0.08 -0.89l-0.61 -0.52l-0.74 -0.21l-0.59 -0.74l-0.36 -3.52l-0.15 -0.33l-0.78 -0.56l-4.62 -0.52l-1.11 0.33l-1.27 0.11l-3.55 -0.88l-0.26 -0.85l0.35 -1.31l0.61 -0.45l1.88 -0.68l1.71 -1.18l0.23 -0.36l0.05 -0.46l-0.24 -0.47l-0.90 -0.55l0.16 -0.91l0.83 -0.85l1.07 -0.68l2.10 -0.66l0.49 0.12l0.74 1.75l0.15 1.67l0.92 0.74l1.24 0.29l0.49 -0.04l-1.74 -4.21l0.61 -0.32l2.47 -0.67l0.41 0.09l2.01 1.36l0.29 0.42l-0.27 0.83l0.14 0.57l0.96 1.56z\"\n          },\n          ID_be: {\n            name: \"Bengkulu\",\n            path: \"m118.55 174.61l0.21 0.59l0.85 0.54l0.14 0.71l0.88 0.53l0.13 0.28l0.44 0.15l0.30 1.19l0.40 0.64l0.62 0.14l0.47 0.44l1.15 -0.40l0.97 0.22l0.63 0.58l0.29 0.74l-0.11 1.22l0.23 0.15l-0.20 0.50l1.67 1.52l0.63 0.10l0.25 0.25l0.79 -0.56l0.86 -0.03l0.90 -0.56l0.25 0.11l0.03 0.34l0.29 0.47l0.27 -0.12l0.56 0.26l0.56 -0.25l-0.16 0.11l0.07 0.56l0.21 0.20l0.82 -0.32l0.79 0.09l0.21 0.45l-0.18 0.35l0.04 0.83l-0.15 0.93l-0.03 0.14l-0.33 0.09l-0.32 0.72l-0.72 0.74l-0.17 -0.05l-0.36 -0.64l-0.53 -0.56l-0.53 -0.30l-0.16 0.04l-0.07 1.45l-0.49 0.31l-0.63 0.76l-0.12 1.14l-1.33 0.47l-0.23 0.36l-0.47 0.18l0.67 0.20l0.40 0.40l0.17 0.40l0.89 0.51l0.85 1.08l0.68 0.39l0.76 0.20l0.61 -0.29l0.40 0.16l0.26 0.51l0.21 0.12l1.26 0.06l0.94 -0.14l0.29 0.24l0.40 0.05l0.50 1.37l0.46 0.67l0.01 1.63l1.91 0.31l0.49 0.56l0.73 0.44l0.73 0.01l0.57 0.21l0.40 -0.09l0.34 0.61l0.55 0.30l0.98 -0.36l0.56 0.18l0.31 0.65l0.01 0.57l-0.57 0.54l-0.26 0.52l1.09 1.04l-0.71 0.62l0.78 0.04l0.64 0.50l0.30 0.42l0.18 0.88l-0.39 0.49l0.36 -0.09l0.62 0.29l0.40 0.02l0.36 0.60l-0.08 0.33l0.00 0.00l-0.08 0.05l0.00 0.00l-0.11 0.11l-0.81 -0.05l-0.13 0.51l-0.51 0.40l-0.43 0.08l-0.57 0.53l-0.32 0.06l-0.18 0.53l0.00 0.00l-0.80 -0.10l-0.53 -0.57l-0.47 -0.23l-0.85 -0.20l-0.30 0.20l-0.31 -0.13l-0.07 -0.24l0.22 -0.16l-0.26 -0.39l-0.51 -0.38l-0.32 0.02l-0.28 0.25l-0.40 -0.31l-0.05 -0.18l0.24 -0.34l-1.59 -1.74l-3.14 -2.08l-2.64 -0.97l0.06 -0.25l-0.60 -0.82l-0.99 -0.72l-0.14 -0.34l-3.57 -2.69l-0.77 -0.73l-4.55 -3.28l-0.18 -0.22l0.03 -1.06l0.42 -0.11l0.04 -0.27l-0.87 -1.73l-0.26 -1.61l-2.22 -1.80l-2.02 -1.22l-1.24 -0.49l0.06 -0.32l-5.58 -4.03l-1.47 -1.88l0.09 -0.24l-0.22 -0.51l-0.37 -0.26l-0.19 -0.73l-0.33 -0.22l-1.20 -1.78l-1.20 -2.90l-3.21 -1.80l-1.13 -1.59l-0.85 -0.80l0.00 0.00l1.61 -1.11l0.42 -0.44l1.09 -0.44l0.74 -0.56l0.80 -0.97l0.00 0.00l0.01 -0.02l0.00 0.00l4.71 2.96l-0.33 1.97l0.17 0.12l0.28 -0.48l0.44 -0.08l0.29 0.20l0.56 -0.16l0.12 -0.29l0.37 0.04l0.44 0.69l1.46 1.57l0.40 0.16l0.20 0.36l0.33 0.08l0.48 0.48l0.69 0.20l1.34 -0.16l0.84 0.52l0.47 0.12l0.00 0.00l0.05 0.02z\"\n          },\n          ID_bt: {\n            name: \"Banten\",\n            path: \"m199.17 231.93l-0.60 0.25l-0.04 1.12l0.61 0.33l-0.02 0.67l0.39 0.08l0.16 0.73l0.44 0.76l0.00 0.00l-0.04 0.15l0.00 0.00l-0.18 0.61l-2.91 0.02l-0.30 -0.36l-1.02 -0.27l-0.10 0.06l0.30 0.16l0.01 0.25l-0.54 0.04l-0.21 -0.65l-0.33 -0.10l-0.67 0.64l0.44 1.40l-0.25 0.33l-0.62 0.09l-0.11 0.96l0.56 1.24l-0.09 1.73l0.11 0.34l0.16 0.00l0.44 0.48l0.21 -0.03l0.55 0.66l-0.37 0.25l-0.03 0.27l-0.94 0.44l-0.08 0.71l-0.65 0.69l0.10 0.44l-0.18 0.18l0.16 0.76l0.00 0.00l-0.49 0.19l-1.01 0.05l-0.09 -0.28l-0.66 -0.03l-0.06 -0.23l-0.37 -0.10l0.03 -0.43l-0.91 -0.43l-0.55 -0.02l-0.54 -0.39l-0.46 -0.10l-0.70 -0.81l-0.54 -0.23l-1.44 -0.12l-2.94 0.61l-1.50 -0.19l-2.12 0.33l-0.40 0.29l-0.70 -0.19l-0.34 0.12l-0.61 -0.55l-0.31 -0.05l-0.15 0.31l-0.19 0.01l0.07 -0.26l-0.57 -0.38l-1.15 -0.24l-0.32 0.07l-0.20 0.43l-0.33 0.28l-0.41 -0.10l-0.15 -1.00l-0.21 -0.28l-0.16 0.00l-0.07 -0.26l0.98 0.07l0.33 -0.45l0.80 -0.58l-0.12 -0.43l0.83 -0.40l0.57 1.27l-0.18 0.05l-0.07 0.23l0.50 0.33l0.32 0.53l0.05 0.44l0.31 0.25l0.21 -0.04l0.52 -0.63l0.14 -0.99l1.05 -0.86l0.07 -0.40l0.36 -0.14l0.32 -0.42l0.22 -0.71l-0.09 -0.80l0.54 -0.94l0.40 -0.31l0.13 0.48l-0.18 0.24l0.41 0.32l0.34 0.06l1.02 -0.21l0.70 -0.96l0.17 -0.58l0.08 -3.08l0.61 -2.25l0.39 -0.24l-0.03 -0.61l0.75 -0.47l0.27 -0.40l0.78 -0.64l0.18 -0.87l-0.27 0.05l0.87 -0.84l0.74 -0.11l0.56 0.65l-0.02 1.29l1.02 0.55l0.26 0.03l0.76 -0.35l0.26 -0.29l0.12 -0.49l0.23 -0.17l0.87 0.29l0.12 0.20l0.29 0.09l0.40 -0.41l0.27 0.26l0.32 0.03l-0.09 0.15l0.23 0.52l0.49 0.26l0.38 -0.07l0.73 0.23l0.73 -0.53l0.49 0.31l0.93 -0.17l0.21 -0.16l0.43 0.25l0.49 -0.15l0.47 0.46l-0.09 0.12l0.31 0.69z\"\n          },\n          ID_go: {\n            name: \"Gorontalo\",\n            path: \"m466.82 109.58l0.59 0.20l2.41 -0.05l1.67 0.18l3.41 0.99l0.24 0.35l2.96 1.83l1.11 -0.69l0.85 -1.22l2.55 -0.37l0.00 0.00l0.21 0.82l0.54 0.39l0.86 0.23l0.70 0.69l-0.04 0.47l0.27 0.85l0.62 0.54l1.21 0.89l2.03 0.35l0.54 0.58l0.31 0.85l-0.15 1.08l0.07 1.01l-0.81 1.43l-0.28 0.98l0.00 0.00l-2.14 0.03l-1.50 -0.40l-1.28 -1.18l-0.81 -1.20l-1.03 -0.89l-0.51 0.38l-1.38 0.14l-8.43 -0.31l-1.82 0.00l-3.06 0.31l-2.37 -0.05l-0.51 0.13l-0.60 0.52l-1.63 0.32l-1.75 0.06l-1.48 -1.67l-2.93 -0.32l-0.24 0.12l-0.20 0.68l-0.29 0.25l-2.77 0.32l0.00 0.00l0.28 -0.50l-0.17 -1.47l-0.69 -0.03l-1.07 -0.34l-0.50 -0.78l-0.57 -0.31l-0.26 -0.43l0.31 -0.17l0.06 -1.07l0.34 -0.34l1.06 -0.38l0.97 0.38l0.52 -0.10l0.02 -0.96l0.35 -0.41l0.89 0.51l1.33 0.05l0.48 -0.41l1.45 -0.01l2.07 -0.95l1.11 -0.30l0.79 -0.61l0.85 -0.14l0.49 0.80l0.49 0.52l0.42 0.17l0.30 -0.27l0.13 -0.65l0.37 0.00l0.52 -0.60l0.26 0.03l2.26 -0.85z\"\n          },\n          ID_ja: {\n            name: \"Jambi\",\n            path: \"m160.61 155.65l-1.28 -0.52l-0.54 0.11l-0.32 0.16l-0.16 0.27l0.10 0.75l-0.32 0.43l-1.02 0.27l-0.97 -0.11l-0.92 0.43l-1.35 0.32l-1.08 -0.27l-0.75 0.00l-0.50 0.18l-1.01 -0.52l-0.45 -0.08l-0.72 0.36l-0.29 0.52l-1.66 0.08l-2.18 0.81l-1.09 0.96l0.00 0.81l-0.20 0.76l0.08 0.32l-0.20 0.40l0.00 1.33l0.56 0.48l-0.69 0.48l-1.09 0.28l-0.08 0.41l0.20 1.56l-0.20 0.21l0.12 0.76l-0.16 0.04l-0.20 -0.36l-0.53 -0.12l-0.36 -0.65l-0.81 -0.44l-0.16 -0.44l-0.65 -0.56l-0.08 -0.77l-0.32 -0.36l-0.49 -0.08l-0.28 0.24l-0.16 0.44l-0.33 0.12l-0.20 0.29l-0.24 0.60l0.69 0.68l0.16 0.73l-1.54 0.60l-1.13 -0.36l-0.08 -0.24l-0.20 -0.04l-0.29 0.52l-1.90 -0.32l-0.72 -0.28l-0.57 0.84l0.61 1.00l-0.49 0.37l-1.05 1.77l-0.45 0.36l-0.28 0.04l-0.28 -0.16l-0.93 0.76l-0.77 0.32l-0.20 0.20l0.00 0.32l-0.61 0.65l-0.48 -0.20l-0.41 0.08l-0.60 0.44l-0.09 -0.16l-0.76 0.00l-0.69 -0.16l-0.57 -0.56l-0.52 -0.29l-0.20 0.20l-0.29 0.00l-0.85 -0.52l-0.56 0.24l-0.08 0.73l-0.41 0.44l-0.81 0.12l-0.20 0.20l-0.61 0.16l-0.40 0.73l0.00 0.00l-0.57 -0.17l0.00 0.00l-0.47 -0.12l-0.84 -0.52l-1.34 0.16l-0.69 -0.20l-0.48 -0.48l-0.33 -0.08l-0.20 -0.36l-0.40 -0.16l-1.46 -1.57l-0.44 -0.69l-0.37 -0.04l-0.12 0.29l-0.56 0.16l-0.29 -0.20l-0.44 0.08l-0.28 0.48l-0.17 -0.12l0.33 -1.97l-4.71 -2.96l0.00 0.00l0.23 -0.51l0.00 0.00l-0.18 -1.65l-0.56 -1.67l-0.39 -0.74l-0.71 -0.32l-0.35 -0.41l-0.15 -0.50l-0.47 -0.50l-0.15 -0.41l-0.21 -3.65l0.18 -0.03l0.50 0.36l0.18 -0.36l0.15 -0.03l0.68 0.71l0.56 -0.35l1.06 0.03l0.54 -0.27l0.56 0.03l0.62 -0.18l0.38 0.36l1.01 -0.27l1.18 -1.79l2.01 -1.23l0.62 -1.12l0.00 -0.23l-0.41 -0.35l0.00 -0.21l0.41 -0.47l-0.41 -1.62l0.62 -0.61l0.62 0.03l0.33 -0.24l0.62 -0.15l0.82 -1.02l0.30 -0.86l-0.12 -0.08l-0.35 0.26l-0.53 -0.44l0.11 -0.76l-0.14 -0.12l-0.03 -1.00l0.00 0.00l-0.03 -0.02l0.00 0.00l0.60 0.10l0.04 -0.31l0.80 -0.18l0.18 -0.62l0.59 -0.29l0.24 0.21l0.11 -0.35l0.47 -0.27l0.40 0.06l0.45 0.33l0.41 -0.16l0.93 0.45l0.37 -0.33l0.39 0.04l0.41 0.35l0.00 0.31l0.20 0.14l0.39 -0.04l0.86 -0.49l0.57 -0.04l0.30 0.76l1.00 0.51l-0.04 0.64l1.22 0.12l0.47 0.76l0.77 0.02l0.80 0.33l0.67 -0.09l0.61 0.42l0.29 -0.05l0.51 -0.61l0.69 -0.08l0.53 -0.86l0.47 -0.44l0.10 -0.36l2.10 -1.50l0.85 -0.97l0.86 -1.35l1.18 0.08l0.85 -0.22l3.61 0.63l0.39 0.31l0.85 -0.47l1.18 -0.11l0.00 0.00l0.42 0.43l0.79 0.36l0.89 1.10l0.90 0.73l1.00 0.42l0.63 0.52l1.10 0.26l0.53 0.37l0.84 -0.37l-0.03 0.11l1.22 -0.26l2.65 0.75l1.91 0.74l2.21 -0.75l0.40 0.07l0.75 1.74l-0.31 1.44l0.25 0.82l0.71 1.17l0.12 1.06l-0.30 1.95l0.44 1.86l0.48 0.85z\"\n          },\n          ID_jb: {\n            name: \"Jawa Barat\",\n            path: \"m205.67 229.27l0.77 0.80l0.42 0.08l2.20 -0.50l0.91 0.26l0.88 0.94l1.22 2.06l1.61 0.62l1.06 0.13l0.86 0.94l0.42 -0.34l0.22 0.14l0.49 -0.03l1.31 -0.79l0.62 0.02l0.12 0.42l0.61 -0.33l0.15 0.27l-0.28 -0.01l0.08 0.50l1.08 0.38l1.42 0.81l1.61 0.49l1.00 -0.62l0.42 -0.47l-0.07 -0.38l-0.35 -0.34l0.37 0.06l0.27 0.28l1.34 -0.03l0.63 0.45l0.08 -0.49l0.14 -0.07l0.29 0.40l0.16 0.54l-0.12 0.17l0.28 0.83l1.34 1.50l1.36 0.81l0.15 1.20l-0.09 0.57l0.37 1.85l0.65 1.15l0.59 0.15l0.28 -0.34l0.48 0.26l0.08 0.57l1.17 0.28l0.93 -0.46l0.05 -0.37l-0.31 -0.11l0.23 -0.27l0.47 -0.03l0.00 0.00l-0.07 1.47l-0.56 0.85l-0.25 0.11l-0.43 0.58l0.16 0.50l-0.05 0.65l0.65 0.37l-0.04 0.36l-0.27 0.23l0.10 0.31l-0.17 0.37l0.05 0.37l-0.28 0.26l-0.66 0.05l-0.48 0.58l-0.58 0.06l-0.34 -0.31l-0.34 0.01l-0.98 0.48l-0.02 0.57l0.28 0.27l0.00 0.51l-0.47 0.81l0.09 0.82l0.18 -0.02l0.21 0.24l1.17 -0.09l0.51 0.48l0.11 0.48l0.55 0.59l-0.13 0.46l0.10 0.44l0.30 0.37l0.34 0.94l-0.08 0.52l-0.29 0.44l0.69 0.73l0.49 0.25l0.00 0.00l-0.68 0.43l-0.52 -0.30l-0.74 -0.06l-0.47 0.31l-0.04 0.14l0.33 0.35l-0.14 0.13l-0.36 -0.22l-0.13 -0.51l-1.05 -0.04l-0.92 0.21l-0.40 0.39l-0.08 1.12l-0.45 0.32l-0.62 0.24l-1.69 0.00l-4.47 -0.77l-1.54 -0.52l-1.46 -0.18l-1.04 0.07l-0.18 -0.10l-0.10 -0.47l-0.45 -0.28l-0.49 -0.21l-1.50 -0.16l-0.33 -0.73l-1.22 -0.87l-2.18 -0.79l-0.36 -0.31l-1.31 -0.25l-2.57 -0.19l-2.01 -0.53l-9.47 -0.66l-0.87 -0.25l-0.49 -0.47l-0.86 -0.28l-0.55 0.19l-0.02 -0.35l-0.47 -1.06l0.01 -0.80l0.57 -0.91l0.88 -0.19l-0.24 -0.52l0.10 -0.37l0.49 -0.42l0.45 -0.17l0.63 -0.85l-0.07 -0.91l-0.51 -0.51l-1.23 -0.15l-0.47 0.17l-0.31 0.32l0.00 0.00l-0.16 -0.76l0.18 -0.18l-0.10 -0.44l0.65 -0.69l0.08 -0.71l0.94 -0.44l0.03 -0.27l0.37 -0.25l-0.55 -0.66l-0.21 0.03l-0.44 -0.48l-0.16 0.00l-0.11 -0.34l0.09 -1.73l-0.56 -1.24l0.11 -0.96l0.62 -0.09l0.25 -0.33l-0.44 -1.40l0.67 -0.64l0.33 0.10l0.21 0.65l0.54 -0.04l-0.01 -0.25l-0.30 -0.16l0.10 -0.06l1.02 0.27l0.30 0.36l2.91 -0.02l0.18 -0.61l0.00 0.00l0.04 -0.15l0.00 0.00l0.52 -0.05l-0.24 0.68l0.12 0.15l0.90 -0.25l0.85 0.49l0.18 -0.05l0.21 -0.95l-0.21 -0.37l-0.05 -0.56l0.63 -0.17l0.41 -0.86l0.06 -1.99l0.00 0.00l0.37 -0.06l0.18 -0.25l-0.25 -0.41l0.42 -0.28l-0.16 -0.22l-0.17 0.09l-0.05 -0.34l0.31 -0.26l0.11 -0.66l-0.17 -0.23l-0.29 0.07l0.00 -0.09l0.60 -0.41l1.28 0.38z\"\n          },\n          ID_jl: {\n            name: \"Jawa Timur\",\n            path: \"m313.04 272.79l0.65 0.13l0.86 -0.05l0.48 0.30l-0.17 0.37l-1.01 0.24l-0.98 0.05l-0.45 -0.19l0.03 -0.52l0.35 -0.14l0.08 -0.27l0.16 0.08zm42.62 -23.22l0.54 0.18l-0.07 0.26l0.23 0.20l0.52 0.06l0.10 0.21l0.26 0.00l0.17 -0.14l0.00 -0.37l0.41 -0.18l-0.01 -0.23l0.27 -0.13l-0.27 1.55l-0.30 0.23l-0.79 0.06l-1.30 -0.64l-0.17 -0.33l0.28 -0.44l-0.16 -0.45l0.14 -0.24l0.15 0.40zm-23.80 1.19l-0.28 0.06l-0.70 -0.19l-0.79 -0.55l-0.32 -0.62l0.23 -0.57l0.85 -0.26l0.49 0.34l0.74 1.51l-0.22 0.28zm21.69 -3.62l0.57 0.33l0.16 0.37l-0.55 -0.20l-0.58 0.14l-0.48 -0.18l-0.06 -0.34l-0.28 -0.03l-0.11 -0.27l0.26 -0.33l1.07 0.51zm-28.43 -1.48l1.76 0.91l0.32 0.77l-0.57 -0.02l-0.36 0.32l-0.53 0.19l-1.23 0.08l-0.34 0.28l-0.45 -0.21l-0.21 0.13l0.60 0.28l0.42 0.47l1.44 0.08l0.23 0.66l-1.60 -0.19l-0.64 -0.47l0.09 -0.32l-0.43 -0.19l-0.57 0.45l-0.13 0.28l-0.04 0.17l0.25 0.11l0.11 0.32l-0.11 0.23l-3.59 -0.43l-0.60 0.38l-0.21 -0.09l-0.58 0.11l-0.42 0.47l-0.42 1.21l-0.68 0.45l-0.21 -0.17l0.13 -0.09l-0.08 -0.17l-0.76 -0.15l-3.13 -0.11l-0.30 0.17l-1.27 0.04l-0.30 -0.49l-0.34 0.06l-0.02 -0.23l0.21 -0.26l-0.34 -0.30l-0.38 0.45l0.17 0.38l0.38 0.34l-0.93 0.09l-3.55 -0.87l-0.49 -0.28l-1.49 -0.09l-0.40 0.25l-0.66 0.02l-0.45 -0.36l0.23 -0.94l-0.28 0.00l-0.26 -0.68l0.21 -0.47l0.60 0.15l1.23 -1.02l0.60 -0.89l-0.04 -0.34l1.06 -0.38l1.59 -0.02l0.68 -0.15l1.64 0.21l5.59 -0.06l1.19 0.17l3.46 -0.25l1.15 0.06l2.57 -0.38l1.48 0.33zm22.26 -0.93l2.21 0.16l0.96 0.33l1.49 0.84l0.24 0.44l-0.44 0.60l-0.43 -0.26l-0.45 0.03l-0.43 -0.43l-1.02 0.16l-0.33 -0.38l-0.41 0.06l-0.10 0.14l-0.50 -0.06l0.07 0.23l0.71 0.33l0.38 0.55l-1.16 0.13l-0.27 -0.38l-0.18 0.01l-0.23 0.13l0.03 0.38l-0.26 0.08l-0.67 -0.64l0.47 -0.54l-0.31 0.10l-0.84 -0.08l-0.14 -0.31l0.18 -0.62l0.50 -0.09l0.24 -0.33l0.01 -0.18l-0.43 -0.23l0.09 -0.10l0.33 -0.16l0.69 0.09zm-61.39 -1.01l0.50 0.05l0.83 0.41l0.63 0.02l0.93 -0.23l0.70 -0.40l0.44 0.05l1.15 1.90l0.39 0.29l0.91 0.12l0.89 -0.05l1.03 -0.43l0.47 0.12l1.30 -0.25l1.25 0.17l0.25 -0.14l0.53 0.15l0.59 0.45l0.66 0.13l0.37 -0.46l-0.23 -0.29l0.28 -0.18l-0.05 -0.34l0.40 0.34l0.12 -0.07l0.02 0.31l0.28 0.39l0.29 -0.01l0.21 0.28l-0.13 0.27l-0.22 -0.09l-0.02 0.27l0.32 1.01l0.61 0.45l0.09 0.55l-0.38 0.44l-0.15 0.79l0.78 0.71l0.04 0.38l-0.29 0.18l0.00 0.29l0.27 0.18l0.63 0.04l0.17 -0.39l0.81 -0.09l0.36 0.27l0.39 0.71l0.70 0.56l-0.02 0.50l-0.22 0.26l0.20 0.10l-0.16 1.17l0.06 1.27l-0.37 0.06l0.34 0.60l0.47 0.15l0.14 0.22l-0.14 0.86l0.20 0.05l0.25 0.49l0.79 0.28l0.24 -0.18l0.37 0.41l0.48 0.23l0.40 -0.17l0.45 0.11l0.74 0.84l1.43 0.73l0.71 -0.14l0.67 0.11l0.59 0.70l0.39 -0.22l0.26 0.07l0.51 -0.20l0.38 -0.39l0.59 -0.06l1.65 -0.66l0.83 0.23l0.50 -0.06l1.55 0.44l0.75 -0.42l0.66 0.47l0.23 -0.02l0.50 -0.15l0.43 -0.52l0.58 -0.27l1.26 0.31l1.07 -1.09l0.86 -0.43l0.56 0.39l0.59 1.23l0.16 0.07l1.60 0.12l0.65 -0.31l0.85 0.80l1.55 0.26l0.99 0.60l0.45 0.63l0.00 0.92l-0.78 0.69l0.20 1.30l-0.01 1.12l-0.42 0.79l-0.09 0.77l-0.31 0.66l0.10 0.74l-0.37 0.79l-0.42 2.22l-0.05 0.58l0.42 0.84l-0.22 0.66l0.23 0.21l0.17 -0.09l0.18 -0.86l-0.09 -0.55l0.12 -0.07l0.20 0.22l-0.02 0.50l0.20 0.52l-0.12 0.57l0.37 0.95l0.48 0.58l0.48 -0.38l0.62 0.60l0.98 0.16l0.59 0.90l-0.25 0.78l-0.34 0.27l-0.70 0.16l-1.63 -0.55l-1.07 0.03l-0.48 -0.12l-0.06 -0.23l0.45 -0.22l0.12 -0.33l-0.16 -0.57l-0.61 -0.62l-1.22 -0.55l-0.54 0.05l-0.15 0.18l0.04 0.47l-0.16 0.10l-1.94 -0.51l-1.06 0.30l-0.26 -0.18l0.00 -0.46l-0.29 -0.12l-0.27 0.16l-0.03 0.21l-0.61 0.05l-0.23 -0.25l0.37 -0.10l0.02 -0.26l-0.28 -0.33l-0.29 0.00l-0.32 0.34l-0.58 -0.33l-0.84 -0.14l0.02 -0.41l-0.30 0.34l-0.16 -0.03l0.02 -0.85l-0.20 -0.11l-0.66 0.23l-0.16 0.27l-0.23 0.09l-0.22 -0.11l-0.14 0.13l-0.09 -0.06l0.17 -0.43l-0.13 -0.25l-0.37 0.28l-0.20 -0.17l-0.17 0.12l-0.79 -0.92l-0.43 -0.16l-0.40 0.06l0.06 -0.12l-0.17 -0.12l-0.27 0.15l-0.52 -0.07l-0.78 -0.37l-0.02 -0.41l-0.37 -0.16l-0.60 0.06l-0.60 0.36l-0.65 -1.07l-0.29 -0.25l-0.80 -0.53l-0.93 -0.23l-0.87 -0.06l-2.68 0.45l-1.02 0.60l-0.34 0.61l-0.52 0.42l-3.65 0.50l0.08 0.50l-0.39 0.13l-1.21 -0.63l-1.07 -0.33l-2.01 -0.17l-0.46 -0.28l-0.46 0.00l-0.83 -0.61l-0.76 -0.22l-0.59 0.31l-0.61 -0.09l-0.57 -0.31l-2.53 -0.09l-0.46 -0.09l-0.28 -0.31l-0.47 -0.20l-0.63 -0.10l-0.10 0.12l0.11 0.22l-0.78 0.00l-0.71 -0.59l-0.22 -0.02l-0.12 0.25l-0.65 -0.17l-0.05 -0.16l-0.41 0.10l0.09 1.06l-0.31 0.18l-0.33 -0.04l0.11 -0.33l-0.22 -0.39l-0.34 0.01l-0.08 0.16l0.20 0.35l-0.38 0.01l-0.10 0.21l0.39 0.33l0.07 0.24l-0.50 0.13l-0.31 -0.02l-0.16 -0.28l-0.75 -0.08l0.14 -0.20l-0.07 -0.33l-0.22 0.00l-0.04 0.13l-0.33 -0.09l-0.15 0.18l-0.28 -0.07l-0.02 -0.37l-0.31 -0.07l-0.24 0.46l-1.29 -0.31l-0.17 -0.78l-0.33 -0.20l-0.66 0.37l-2.50 -0.53l-0.52 0.35l-1.24 0.11l-0.83 -0.58l-0.04 -0.34l-0.28 -0.02l-0.08 0.45l-1.00 0.11l-1.96 -0.65l0.00 0.00l-0.12 -0.82l0.25 -0.91l0.70 -0.92l1.26 0.33l0.84 -0.61l0.55 0.31l0.44 -0.70l-0.07 -1.06l0.28 -0.19l-0.04 -0.30l0.18 -0.18l0.64 -0.16l0.07 0.28l0.42 -0.06l0.27 0.33l0.30 -0.09l0.62 -0.68l0.18 -0.70l0.31 -0.24l-0.58 -1.31l0.10 -0.56l-0.96 0.04l-0.83 -0.68l0.10 -0.38l-0.07 -0.77l0.18 -0.62l-0.64 -0.42l-0.19 -0.80l0.03 -0.64l-0.27 -0.33l-0.30 -1.02l0.46 -0.97l-0.06 -0.49l0.15 -0.42l-0.18 -0.12l0.19 -0.71l0.09 -0.13l0.33 0.10l0.40 -0.13l0.09 -0.18l0.21 0.03l0.46 0.56l1.16 0.42l0.74 0.50l1.14 0.27l0.25 0.30l0.40 0.13l0.09 -0.27l-0.30 -0.15l0.16 -0.55l-0.46 0.00l0.36 -0.89l0.21 -0.21l0.15 0.10l0.22 -0.18l0.10 0.09l0.95 -0.50l0.68 -0.70l0.65 -1.28l-0.06 -0.50l0.21 -0.33l-0.21 -0.90l0.19 -0.45l-0.98 -0.67l0.30 -0.52l0.40 -0.16l0.24 -1.35l0.67 -0.09l0.15 -0.21l-0.04 -0.61l0.16 -0.18l0.18 0.15l0.20 -0.34l0.00 0.00l0.39 0.27l0.38 0.03zm16.67 -17.98l0.39 0.10l-0.01 0.30l0.27 0.53l-0.18 0.82l-0.76 0.39l-0.63 -0.05l-0.17 -0.14l-0.36 0.17l-0.47 0.00l-0.29 -0.52l0.27 -0.89l0.32 -0.05l0.07 -0.37l0.35 -0.22l0.29 -0.12l0.39 0.09l0.22 -0.34l0.30 0.30z\"\n          },\n          ID_jk: {\n            name: \"DKI Jakarta\",\n            path: \"m173.99 239.52l-0.26 0.49l0.16 0.73l-0.30 0.61l-0.64 0.23l-0.42 0.57l-0.21 -0.28l0.38 -0.45l0.03 -0.40l-0.33 -0.26l0.02 -0.42l-0.28 0.04l-0.54 0.49l-0.05 0.31l-0.26 -0.16l0.28 -0.59l0.99 -0.75l0.52 0.12l0.00 -0.26l0.49 0.02l0.26 -0.16l0.16 0.12zm25.57 -7.41l1.80 0.34l0.73 -0.41l1.40 -0.09l0.00 0.00l-0.06 1.98l-0.41 0.86l-0.64 0.17l0.06 0.56l0.21 0.37l-0.21 0.95l-0.18 0.06l-0.85 -0.49l-0.90 0.25l-0.11 -0.16l0.24 -0.68l-0.53 0.06l0.00 0.00l0.00 0.00l0.00 0.00l-0.44 -0.76l-0.16 -0.73l-0.39 -0.08l0.02 -0.66l-0.61 -0.33l0.03 -1.12l0.60 -0.26l0.00 0.00l0.40 0.17z\"\n          },\n          ID_jt: {\n            name: \"Jawa Tengah\",\n            path: \"m285.21 243.42l-0.20 0.34l-0.18 -0.15l-0.16 0.18l0.04 0.61l-0.15 0.21l-0.66 0.09l-0.24 1.35l-0.40 0.16l-0.30 0.52l0.98 0.67l-0.19 0.44l0.21 0.91l-0.21 0.32l0.06 0.51l-0.65 1.27l-0.69 0.71l-0.95 0.50l-0.10 -0.09l-0.22 0.18l-0.15 -0.10l-0.21 0.20l-0.35 0.89l0.46 0.00l-0.17 0.55l0.30 0.15l-0.09 0.27l-0.40 -0.13l-0.25 -0.30l-1.14 -0.27l-0.74 -0.50l-1.16 -0.42l-0.46 -0.56l-0.21 -0.03l-0.09 0.18l-0.40 0.13l-0.32 -0.10l-0.09 0.13l-0.19 0.71l0.17 0.12l-0.15 0.42l0.06 0.49l-0.46 0.96l0.30 1.03l0.27 0.32l-0.03 0.64l0.19 0.80l0.64 0.42l-0.18 0.62l0.07 0.78l-0.10 0.37l0.83 0.69l0.96 -0.05l-0.10 0.57l0.58 1.30l-0.31 0.24l-0.18 0.70l-0.62 0.69l-0.30 0.08l-0.27 -0.32l-0.41 0.06l-0.08 -0.29l-0.63 0.17l-0.18 0.18l0.04 0.29l-0.28 0.20l0.08 1.05l-0.45 0.70l-0.55 -0.31l-0.84 0.61l-1.27 -0.33l-0.69 0.92l-0.25 0.91l0.12 0.82l0.00 0.00l-1.19 -0.29l0.00 0.00l0.04 -0.50l-0.12 -0.05l-0.18 0.18l-0.08 -0.11l0.24 -0.61l-0.22 -0.01l-0.32 0.38l-0.23 -0.18l0.05 -0.75l-0.57 -1.61l0.23 -0.55l-0.02 -1.10l0.29 -0.84l0.05 -0.89l-0.29 -0.17l-0.24 0.27l-0.37 -0.46l-0.32 -0.13l-0.17 0.22l-0.41 0.05l-0.19 -0.33l-0.24 0.23l-0.14 -0.14l-1.10 0.23l-0.21 -0.34l-0.23 -0.09l-0.36 0.23l-0.43 -0.40l-0.32 -0.06l-0.81 -3.89l-2.39 1.88l-0.57 0.77l-0.26 -0.14l0.03 -0.59l-0.20 -0.17l-0.29 0.12l-1.26 -0.13l-0.61 0.16l-0.18 0.43l0.32 0.28l-0.12 0.88l-0.34 0.51l-0.26 0.10l-0.20 0.42l-0.40 0.24l-0.31 1.28l-0.58 -0.03l0.00 0.00l-1.69 -0.62l-3.62 -0.99l-3.34 -0.53l-0.46 -0.18l-1.19 0.26l-0.46 -0.34l0.17 -0.50l-1.87 -0.42l-3.08 -0.23l-0.77 0.12l-0.59 0.35l-0.16 0.30l-0.09 0.38l0.19 0.24l0.28 -0.09l0.12 0.16l-0.19 0.24l-3.71 -0.80l-0.50 0.09l-0.17 -0.30l0.18 -0.27l-0.25 -0.08l0.30 -0.31l0.46 -0.07l0.18 -0.24l0.40 0.00l0.00 -0.15l-0.22 -0.09l-0.83 0.30l0.00 0.00l-0.49 -0.25l-0.69 -0.73l0.29 -0.44l0.08 -0.52l-0.34 -0.94l-0.30 -0.37l-0.10 -0.44l0.13 -0.46l-0.55 -0.59l-0.11 -0.48l-0.51 -0.48l-1.17 0.09l-0.21 -0.24l-0.18 0.02l-0.09 -0.82l0.47 -0.81l0.00 -0.51l-0.28 -0.27l0.02 -0.57l0.98 -0.48l0.34 -0.01l0.34 0.31l0.58 -0.06l0.48 -0.58l0.66 -0.05l0.28 -0.26l-0.05 -0.37l0.17 -0.37l-0.10 -0.31l0.27 -0.23l0.04 -0.36l-0.65 -0.37l0.05 -0.65l-0.16 -0.50l0.43 -0.58l0.25 -0.11l0.56 -0.85l0.07 -1.47l0.00 0.00l0.10 0.24l-0.10 0.26l0.29 0.05l0.25 0.45l1.63 0.47l0.24 -0.40l0.35 -0.02l0.69 -0.47l0.30 0.07l0.34 -0.39l0.14 0.89l0.66 0.62l0.87 0.00l0.46 0.28l1.22 0.18l0.76 -0.01l0.62 -0.20l0.42 0.08l0.99 -0.26l1.03 -0.57l0.69 -0.65l0.96 1.02l1.48 0.17l3.75 1.21l0.88 -0.09l0.64 0.17l0.76 -0.06l2.33 -0.77l0.39 -0.27l0.09 -0.25l0.76 0.24l0.50 0.82l0.87 0.32l0.33 0.27l1.01 0.31l1.13 -0.25l0.12 0.23l0.61 -0.23l-0.01 -0.43l0.47 -0.68l0.23 -0.74l0.59 -0.48l0.38 -0.77l-0.55 -0.04l-0.15 -0.23l0.40 0.07l-0.25 -0.46l0.36 -0.08l0.26 0.16l0.41 -0.30l0.63 -0.84l-0.07 -0.82l0.24 -0.08l0.09 -0.78l-0.11 -0.17l0.55 -0.62l-0.29 -0.32l0.28 -0.11l0.70 -0.85l1.07 -0.37l0.49 0.00l0.35 -0.28l1.24 -0.13l0.86 0.21l0.47 -0.16l1.09 0.35l1.03 3.09l0.65 0.86l1.03 0.23l0.70 0.37l2.31 0.23l1.40 -0.61l0.18 -0.49l0.49 -0.27l0.29 0.21l0.38 -0.09l0.70 0.29l2.12 1.87z\"\n          },\n          ID_kb: {\n            name: \"Kalimantan Barat\",\n            path: \"m236.01 155.78l-0.39 -0.07l-0.58 -1.45l0.15 -0.30l1.59 -0.47l0.62 0.14l0.55 0.61l0.02 0.26l-0.32 0.63l-1.64 0.65zm11.81 -11.54l0.54 0.06l0.42 -0.33l0.63 0.04l0.46 0.47l0.40 0.12l0.34 -0.14l0.33 -0.40l0.47 0.24l0.31 0.53l0.19 0.86l-0.07 0.53l0.23 0.25l0.00 0.25l-5.01 2.89l-1.31 -0.43l-0.44 -0.45l0.56 -0.61l0.18 -0.51l0.42 -2.20l-0.04 -0.43l0.75 -1.05l0.64 0.31zm1.94 -52.76l-0.50 1.38l-0.38 0.22l-0.30 0.75l-0.60 0.07l-0.05 0.48l0.17 0.65l0.45 0.32l0.40 0.62l1.20 0.30l0.15 0.35l-0.42 2.14l0.30 0.65l1.82 1.81l0.35 0.15l0.83 1.29l1.27 0.05l0.50 0.20l0.25 0.30l0.17 1.39l1.49 0.74l0.35 0.87l0.43 0.35l0.60 -0.07l0.73 0.15l0.45 0.67l0.15 0.52l0.48 0.40l0.42 0.72l0.32 0.97l0.98 0.00l0.97 0.25l0.90 1.37l0.35 0.27l1.20 0.42l0.73 0.07l0.55 -0.12l0.40 -0.67l0.45 0.45l0.45 -0.02l0.38 -0.32l0.77 -0.25l0.95 -0.55l0.72 -0.12l0.63 -0.55l0.27 -0.60l3.85 -0.50l1.95 -0.57l0.32 0.30l1.75 0.57l0.50 0.32l0.50 -0.02l0.70 -0.30l0.77 0.12l0.70 1.17l0.23 -0.02l0.10 -0.52l0.52 -0.07l1.13 -0.82l0.27 -0.02l1.00 0.52l0.58 -0.17l1.70 0.35l0.32 -0.77l1.35 -1.39l3.22 -0.22l-0.03 -0.65l0.25 -0.60l0.15 -1.49l0.85 -0.84l0.05 -0.65l-0.42 -0.65l0.50 -0.55l0.42 0.00l1.27 -0.79l1.57 -0.35l0.55 -0.27l0.08 -0.30l1.02 -0.37l2.90 0.37l1.65 -0.12l0.55 0.40l0.35 0.02l0.57 -0.30l0.35 -0.47l0.20 -0.05l0.82 0.22l0.92 -0.07l0.63 0.12l0.52 0.30l0.13 0.40l-0.17 0.05l-0.50 0.99l-0.50 0.17l-0.30 0.30l-0.15 0.45l0.75 0.07l1.35 -0.45l0.37 0.05l0.38 0.67l0.75 0.22l1.60 -0.15l0.77 0.20l0.72 0.50l0.17 0.35l0.60 0.37l0.30 0.37l0.40 0.02l0.33 -0.30l0.57 -0.22l0.82 -0.05l0.67 0.30l0.75 1.34l0.32 0.10l0.30 0.00l0.35 -0.22l0.38 -0.45l1.90 -0.77l0.28 -0.84l-0.13 -0.20l0.07 -0.17l1.92 -0.79l0.40 -0.45l3.05 -0.32l0.97 0.65l0.20 0.28l0.00 0.00l-0.03 0.01l0.00 0.00l-0.82 0.42l-0.12 1.72l0.21 0.18l-0.33 0.42l0.00 0.69l-0.21 0.69l-0.30 0.30l-0.52 -0.09l-0.55 0.36l-0.30 -0.15l-0.70 0.06l-0.52 0.42l-0.09 0.66l-0.30 0.24l-0.67 0.15l-0.09 0.36l0.33 0.30l0.12 0.42l-0.18 0.51l-0.52 0.51l-0.09 0.27l0.27 0.69l0.58 0.48l0.00 0.30l-0.52 0.63l0.06 0.81l-0.18 0.36l-0.67 0.27l-0.18 0.54l0.12 0.24l0.00 0.00l-0.51 0.29l-0.23 0.71l-0.36 0.24l-0.19 0.44l-0.37 0.16l-0.19 0.42l-0.40 0.00l-0.68 0.42l-0.27 1.09l-1.31 0.76l-0.16 0.31l-0.96 0.82l-0.05 0.23l-0.53 0.41l-0.92 0.56l-1.38 -0.26l-0.74 0.20l-0.63 0.38l-0.03 0.19l1.03 1.01l1.55 0.82l-0.15 1.34l0.19 0.35l0.36 0.25l-0.26 0.38l-0.18 0.76l0.37 0.05l0.07 0.22l-0.36 0.79l-0.44 0.26l0.34 0.20l-0.08 0.33l-0.36 0.07l-0.27 0.57l-0.56 0.52l-0.85 0.18l-0.42 0.60l-0.53 0.37l-0.19 0.60l-0.29 0.22l0.78 0.71l0.19 0.78l-0.66 0.80l-0.16 0.49l-0.12 0.08l-0.15 -0.14l-0.29 -0.50l-0.49 -0.01l-0.14 -0.35l-0.38 0.12l-0.27 0.52l-0.37 0.00l-0.33 0.23l-1.33 -0.14l-0.33 0.31l-1.44 0.42l-0.67 0.63l-0.70 0.12l-0.58 -0.18l-0.58 0.15l-0.08 0.86l-0.74 0.03l-0.25 0.42l-0.89 0.03l-0.60 0.35l0.00 0.20l-0.92 0.08l-0.10 0.19l-0.85 -0.16l-0.08 0.46l-0.23 0.23l-0.37 -0.26l-0.01 -0.61l-0.37 -0.14l-0.49 0.44l-0.85 0.31l-0.41 -0.18l-0.36 0.44l-0.41 -0.48l-0.64 -1.21l-0.34 -0.29l-0.55 -0.03l-0.82 1.14l0.23 0.72l-0.10 0.07l-0.38 0.00l-0.77 -0.31l-1.08 -0.11l-0.19 0.18l0.31 1.12l-0.07 0.31l-1.21 0.34l-0.37 -0.15l-0.49 -0.53l-0.14 0.86l0.29 0.76l-0.67 -0.15l-0.15 0.07l-0.16 0.57l-0.46 0.26l-1.01 -0.07l-0.77 0.27l-0.22 0.30l-0.93 0.56l-0.59 0.04l-0.30 0.37l0.18 0.69l-0.47 0.48l-0.48 0.15l-0.27 0.54l0.31 0.64l-0.26 0.48l0.33 0.29l-0.12 0.30l-1.19 0.20l-0.31 0.26l-1.11 0.01l-0.22 0.18l-0.12 0.54l-0.30 0.00l-0.36 0.75l-0.63 0.33l-0.16 0.60l-0.42 0.48l-0.21 0.04l0.04 0.29l-1.11 -0.22l-0.12 0.53l-0.38 -0.14l0.14 0.79l-0.08 0.65l-0.31 -0.14l-0.04 -0.49l-0.27 -0.16l-0.82 0.49l0.26 0.39l0.07 0.45l-0.81 0.22l-0.37 -0.42l-0.48 0.15l-0.30 0.30l-0.49 -0.39l-0.44 0.54l-0.88 0.22l-0.29 0.42l-0.55 0.38l0.04 0.78l0.44 0.11l0.18 0.44l0.26 0.19l0.42 -0.10l0.18 -0.14l0.11 -0.45l0.42 -0.18l0.29 0.16l0.22 0.52l0.12 1.20l-0.15 0.38l-0.37 0.34l-0.11 0.44l-0.03 0.64l0.33 0.41l-0.04 0.37l-0.34 0.42l0.15 0.42l0.34 0.23l0.52 -0.14l0.89 0.12l0.04 0.15l-0.15 0.40l0.07 0.42l-0.70 0.59l0.68 1.29l-0.04 0.23l-0.19 0.23l0.03 0.29l-0.62 0.72l0.69 1.13l0.52 1.82l0.08 1.31l0.53 2.06l-0.33 0.82l0.45 0.27l0.34 -0.01l0.15 0.45l-0.52 0.91l-0.90 0.45l-1.45 0.37l-0.15 0.57l-0.62 0.52l-1.18 0.20l-0.78 0.48l-1.21 0.41l-0.38 0.29l-0.34 0.94l0.00 0.00l-1.33 0.83l-0.34 -0.14l0.08 -0.30l-0.19 -0.69l0.08 -0.84l-0.37 -0.87l-0.47 -0.57l-0.64 -0.07l-1.08 0.33l-1.31 0.63l-1.95 1.60l-0.20 -0.27l-0.47 -0.10l-0.17 -0.94l-0.34 -0.57l0.54 -1.07l0.10 -0.60l-0.34 -0.47l-0.41 -0.19l-0.18 -1.66l-1.26 -0.37l0.67 -0.80l0.25 -1.26l-1.04 -3.80l-0.73 -0.87l0.04 -1.11l0.49 -1.46l0.01 -0.68l-0.70 -1.80l-0.69 -0.50l-1.67 -0.71l-0.78 -0.75l0.19 -0.92l1.34 -0.79l0.69 -1.20l0.65 -3.33l0.01 -1.52l-0.22 -0.74l-0.21 -0.38l-0.66 -0.52l-0.80 -0.18l-0.87 -1.10l0.52 -1.40l-1.92 -0.63l-1.17 -1.61l-0.67 -0.41l-0.73 0.49l-1.13 -0.75l-0.41 -0.76l-0.30 -0.27l-1.98 -0.55l-0.29 -0.27l-0.48 0.12l0.20 0.84l-0.26 0.41l-0.26 0.08l-1.72 -0.57l-0.56 -0.57l-0.46 -0.89l0.20 -2.60l0.46 0.12l0.36 0.37l1.15 0.34l0.79 0.04l1.05 0.63l0.02 -0.51l-0.97 -0.73l-0.87 -0.03l-0.23 -0.46l0.27 -0.46l0.04 -0.66l-1.42 0.03l-0.40 0.13l-1.68 -0.60l-0.72 -0.81l-0.43 -1.93l-0.99 -2.58l0.34 -0.59l0.64 -0.13l-0.17 -0.81l1.13 -1.79l0.38 -1.61l-0.20 -1.18l-0.84 -1.89l-1.10 -1.16l-0.82 -0.24l-1.23 -0.05l-0.28 -0.26l0.03 -0.63l0.45 -0.94l0.00 -0.52l-0.71 -0.84l0.47 -2.12l-0.27 -0.92l-0.73 -0.79l0.25 -0.87l-0.75 -0.89l0.15 -0.43l0.69 -0.55l0.52 -0.05l0.67 -0.69l0.39 -1.14l-0.43 -1.42l-0.49 -0.42l-0.47 -1.36l0.13 -0.20l0.73 0.17l0.00 -0.76l0.60 -1.12l0.73 -0.73l0.23 -0.79l-0.20 -1.26l0.13 -0.89l0.37 -0.69l0.74 -0.69l2.22 -1.34l0.54 -0.59l0.00 -0.45l0.50 -1.09l0.70 -0.96l0.06 -1.05l-0.26 -0.61l0.07 -0.26l0.47 -0.17l1.38 -0.03l0.31 -0.44l0.47 -0.20l1.69 -0.03l1.21 -1.40zm-13.97 -13.37l-0.17 0.06l-0.97 -0.74l0.92 -0.77l0.31 -1.05l0.48 -0.17l0.27 0.08l0.18 0.35l-0.18 1.49l-0.84 0.75zm-53.61 0.22l-0.38 0.02l-0.26 -0.27l-0.33 -2.69l0.12 -0.88l0.18 -0.04l2.55 1.42l-0.61 1.34l-0.87 0.88l-0.40 0.22zm44.48 -14.45l-2.29 0.48l-1.46 -0.81l0.60 -0.84l1.25 -0.91l-0.63 -0.37l-1.79 -0.59l-0.98 -1.85l-0.23 -1.12l0.59 -0.71l0.74 -0.21l1.96 -2.05l1.21 0.28l0.11 0.84l0.22 0.49l2.20 2.17l0.16 1.79l-0.22 0.78l-1.44 2.63z\"\n          },\n          ID_ki: {\n            name: \"Kalimantan Timur\",\n            path: \"m393.77 84.72l1.44 1.57l0.74 1.23l-0.02 0.43l-0.61 0.92l-2.71 2.45l-1.00 -0.42l-0.30 0.01l0.47 0.44l0.21 0.71l-0.09 2.17l0.15 0.60l0.80 0.91l2.30 1.59l1.45 1.46l4.93 2.90l0.53 1.35l1.32 0.61l0.59 -0.09l0.60 0.18l3.10 2.66l0.35 0.92l0.76 0.89l1.17 0.47l0.27 -0.03l1.25 0.41l0.18 0.16l0.07 0.95l-0.56 0.80l-0.73 0.69l-2.42 1.67l-2.04 -0.77l-2.97 0.28l-2.79 -0.25l-3.08 -0.58l-1.63 -0.74l-0.70 -0.72l-0.67 -1.80l-0.67 -0.57l-0.81 -0.40l-0.24 0.09l-0.03 0.44l2.40 4.10l0.09 0.74l-0.23 0.37l-0.38 0.07l-0.34 -0.10l-0.75 -0.70l-0.58 -0.10l-1.59 0.51l-1.20 1.17l-0.36 0.77l-0.01 0.91l-1.71 3.53l-0.91 0.66l-0.81 1.73l-0.71 2.10l-0.24 1.23l0.44 1.23l0.47 0.42l0.15 0.69l-0.19 0.43l-0.63 0.67l-0.79 2.47l0.01 0.47l0.60 1.28l-0.45 3.12l2.57 -1.67l0.45 -0.14l0.21 0.09l0.07 0.27l-1.06 3.59l0.82 1.77l0.03 0.44l-0.14 0.22l-2.79 1.24l-2.14 -0.12l-0.70 -0.83l-0.42 0.26l-0.14 0.80l-1.95 2.35l-2.05 3.34l-0.38 0.33l-1.40 0.62l-1.84 0.33l-1.32 -2.97l0.31 -1.12l-0.08 -0.20l-0.24 0.06l-0.48 1.29l0.01 0.54l0.70 0.70l0.59 1.31l-0.55 2.00l-2.25 0.78l-1.50 1.05l-0.13 0.16l0.09 0.76l0.49 0.79l-0.11 0.48l-0.33 0.40l-2.37 0.94l-1.66 0.81l-1.43 0.90l0.12 0.31l0.53 0.27l0.70 -0.15l0.59 -0.47l0.82 -0.18l0.72 0.08l0.35 0.21l0.26 2.24l-0.04 2.27l-0.39 0.49l-1.09 0.38l-0.25 0.28l1.32 0.28l0.81 0.00l0.41 -0.40l0.34 0.74l-0.05 0.34l1.42 0.38l-0.11 1.39l-0.70 2.47l0.00 0.00l-1.33 -0.61l-1.10 -0.29l-2.70 -0.03l-1.28 -0.42l-2.73 -0.15l-0.39 -0.07l-0.53 -0.49l-0.54 0.49l-0.78 0.29l-0.10 0.31l-0.39 0.36l-0.54 0.17l-0.28 -0.53l0.03 -1.02l-0.71 -1.73l0.18 -1.52l0.36 -0.56l-0.15 -0.25l-0.60 -0.25l-0.50 0.14l-0.35 -0.28l-0.18 0.04l0.21 -0.60l-0.28 -0.32l0.00 -0.42l0.32 -0.71l0.07 -0.71l-0.14 -1.87l-0.36 -0.74l-0.49 -0.56l-0.11 -0.50l0.14 -0.31l-0.71 -0.57l-0.14 -0.32l0.14 -0.70l-0.28 -0.39l-0.61 -0.11l-0.60 0.25l-0.18 -0.35l0.07 -0.35l0.64 -0.57l0.43 -0.67l0.82 -0.70l0.32 0.07l-0.15 0.77l0.25 0.07l1.07 -1.27l0.25 -0.99l0.00 0.00l-0.01 0.01l0.00 0.00l0.23 -1.30l0.45 -0.53l0.91 -0.66l0.03 -0.26l-0.76 -0.66l-0.32 0.07l-0.34 0.33l-0.23 -0.14l-0.19 -0.69l-0.34 -0.14l-0.40 -0.44l-0.42 0.05l-0.21 -0.95l-0.23 -0.29l-1.32 -0.84l-0.60 -0.98l-0.79 -0.69l-1.68 -0.30l-0.41 -1.01l0.03 -1.19l-0.28 -1.90l-0.50 -0.43l-0.39 -1.03l-0.72 -0.74l-0.23 -0.06l0.21 -1.09l-0.37 -0.10l-0.19 -1.46l0.42 -0.08l0.04 -0.48l-0.29 -0.45l0.55 -0.95l0.00 -0.67l0.44 -0.26l0.42 -0.58l-0.36 -1.12l-2.42 1.17l-0.29 0.66l-0.47 0.01l-0.47 0.23l-0.76 0.66l-0.90 -0.24l-1.02 0.19l0.00 -0.53l-0.21 -0.47l0.08 -0.64l-0.45 -0.85l-0.10 -1.44l-0.24 -0.31l-0.37 0.02l-0.32 -0.35l-0.59 0.11l-0.29 -0.50l0.37 -0.88l-0.08 -0.42l0.43 -0.48l0.02 -0.35l0.39 -0.07l0.19 -0.20l0.53 -1.13l0.67 -0.43l0.27 0.06l0.11 0.21l0.31 -0.16l0.73 -0.05l0.17 0.02l0.34 0.48l0.15 -0.32l1.19 -0.83l0.20 -0.39l0.05 -0.71l-0.65 -0.57l-0.32 -0.65l-0.73 -0.86l-0.56 -1.16l-0.29 -1.61l-0.39 -0.70l-0.45 -0.37l-0.51 -0.14l-0.80 0.75l-0.04 0.23l0.30 0.48l-0.47 -0.12l-0.20 -0.42l-0.53 -0.33l-0.39 0.24l-0.50 -0.07l-0.82 0.60l-0.32 -0.14l-0.55 0.10l-0.49 0.65l-0.89 0.64l-0.79 0.03l0.00 0.63l-0.21 0.39l-1.00 0.03l-0.67 0.45l0.06 0.67l-0.21 0.06l-0.70 -0.12l-0.51 -0.43l-0.73 -0.18l-1.55 0.18l-0.42 -0.18l-0.10 -0.42l-0.63 -0.33l0.00 -0.21l0.33 -0.33l-0.33 -0.97l-0.73 -0.45l-0.30 0.12l-0.36 -0.09l-1.28 0.66l-0.54 -0.09l-0.70 0.24l-0.24 -0.06l-0.25 0.18l-0.42 -0.33l-0.49 0.00l0.00 0.00l-0.12 -0.24l0.18 -0.54l0.67 -0.27l0.18 -0.36l-0.06 -0.82l0.52 -0.63l0.00 -0.30l-0.58 -0.48l-0.27 -0.70l0.09 -0.27l0.52 -0.51l0.18 -0.51l-0.12 -0.43l-0.34 -0.30l0.09 -0.36l0.67 -0.15l0.30 -0.24l0.10 -0.66l0.51 -0.43l0.70 -0.06l0.30 0.15l0.55 -0.36l0.51 0.09l0.31 -0.30l0.21 -0.69l0.00 -0.69l0.33 -0.43l-0.21 -0.18l0.12 -1.72l0.82 -0.42l0.00 0.00l0.37 -0.15l0.00 0.00l0.24 -0.45l0.70 -0.09l1.58 -0.67l0.57 -0.54l2.58 1.51l0.40 -0.12l0.21 -0.43l0.00 0.00l0.79 0.42l0.25 0.46l0.62 0.51l1.59 0.46l0.78 0.87l0.20 1.02l0.21 0.26l0.82 -0.46l0.72 0.10l0.52 0.21l0.31 0.40l0.15 0.62l0.41 0.46l0.46 0.20l0.67 0.05l0.88 -0.97l1.34 0.00l0.56 0.26l0.77 0.10l0.83 -0.92l1.03 0.20l0.77 -0.92l0.51 -0.25l0.26 -1.59l0.41 -0.41l1.96 0.06l2.31 -0.87l2.32 -0.05l1.03 -0.87l0.56 -1.18l0.88 -0.77l1.59 -2.14l1.29 -2.46l-0.31 -1.17l0.10 -0.67l0.47 -0.56l1.08 -0.56l0.25 -0.67l0.67 -0.41l0.16 -0.82l0.05 -2.20l0.20 -0.71l0.83 -1.38l0.36 -0.26l0.31 -1.33l0.25 -0.31l0.52 -0.05l0.56 0.57l0.78 0.30l0.30 0.31l0.00 0.41l0.62 0.31l0.72 -0.06l1.03 -0.30l1.75 -1.13l2.26 -0.77l2.01 -1.17l1.29 -0.05l1.44 0.30l1.59 -0.41l0.88 0.00l0.51 1.13l0.62 0.46l1.29 0.61l0.51 0.11l1.08 -0.26l0.46 0.31l1.14 1.38l1.38 0.51l0.37 0.05l1.28 -0.77l1.29 -0.15\"\n          },\n          ID_kr: {\n            name: \"Kepulauan Riau\",\n            path: \"m160.45 132.94l0.12 0.27l0.76 0.22l0.12 0.44l0.59 0.93l0.42 0.32l-0.07 0.24l-1.03 0.83l-0.39 0.81l-0.15 1.08l-0.12 0.10l-0.42 -0.10l-0.66 -0.88l-0.20 0.00l-0.49 0.20l-0.15 1.27l-0.49 0.20l-0.22 -0.29l-0.12 -1.00l-0.37 -1.22l-0.64 -0.29l-0.54 -0.61l0.22 -0.86l0.25 -0.32l-0.02 -0.34l0.62 -0.07l0.12 -0.15l0.07 -0.78l0.22 0.76l-0.44 0.42l0.42 0.64l0.17 -0.15l-0.02 -0.71l0.12 -0.05l0.25 0.27l0.62 0.05l0.49 -0.32l0.00 -0.59l0.17 -0.20l0.62 -0.20l0.17 0.08zm5.26 -2.37l0.15 0.10l0.37 -0.10l-0.02 -0.90l0.25 -0.20l1.18 1.59l0.94 0.76l0.76 0.07l0.07 0.44l-0.30 0.05l-1.16 -0.49l-0.29 0.27l0.44 0.51l-0.12 0.24l-0.91 -0.46l-0.39 0.12l-0.91 -0.66l0.05 -0.22l-0.15 -0.12l-0.37 0.05l-0.30 -0.54l-0.81 -0.44l-0.89 0.15l-0.89 0.61l-0.54 -0.10l-0.66 0.51l-0.37 -0.15l-0.15 -0.44l-0.71 0.15l-0.49 -0.24l-0.05 -0.22l0.02 -0.64l0.69 -0.51l0.10 -0.22l0.59 -0.22l-0.17 -2.27l0.81 -0.37l1.03 0.51l0.64 0.56l0.54 0.81l0.25 0.02l0.25 0.49l0.62 0.49l0.02 0.42l0.20 0.29l0.68 0.30zm-6.92 -6.01l0.17 0.22l0.07 -0.44l0.25 0.12l0.27 -0.07l1.92 2.05l-0.44 0.15l-0.15 -0.10l-0.39 0.37l-0.49 -0.29l-1.28 -1.42l-0.91 -1.56l0.22 0.05l0.76 0.92zm2.41 -1.54l1.75 2.15l0.76 0.78l0.57 0.32l0.10 0.27l-0.17 0.29l-0.66 -0.32l-0.62 -0.61l-0.94 -0.61l-0.89 -1.22l-0.74 -0.61l-0.02 -0.51l0.62 0.15l0.05 -0.20l0.19 0.12zm-2.01 -1.59l0.57 0.39l-0.05 0.10l-0.44 -0.07l-0.07 0.15l0.25 0.07l0.10 0.27l-0.25 0.07l-0.62 -0.42l0.07 0.27l-0.20 0.07l-0.25 0.39l-0.30 -0.07l-0.47 -0.83l-0.22 0.07l-0.07 -0.64l0.07 -0.17l0.47 0.42l0.17 -0.05l0.07 -0.44l-0.44 -0.22l-0.22 -0.32l0.32 0.05l1.51 0.91zm-2.39 -7.91l-0.20 0.39l0.02 0.44l0.70 0.53l-0.33 0.06l-0.47 0.28l0.93 0.18l0.07 -0.32l0.39 0.29l-0.20 0.29l-0.64 -0.15l0.00 0.93l-0.12 0.10l-0.57 -0.46l-1.30 -2.20l0.02 -0.17l0.49 -0.12l0.29 -0.03l0.64 -0.20l0.28 0.16zm-6.01 0.42l-0.10 0.17l-0.47 -0.64l-1.06 -0.90l-0.22 -0.37l-0.07 -0.56l0.98 0.39l0.66 0.61l0.12 0.42l0.42 0.51l-0.10 0.29l-0.16 0.08zm-1.50 -0.25l-0.22 0.49l-0.17 -0.42l-0.37 -0.05l-0.84 -0.56l-0.47 -0.78l0.00 -0.42l0.27 -0.02l0.32 -0.42l1.13 1.27l0.35 0.91zm-6.18 -1.89l0.11 0.64l1.14 1.32l-0.20 0.35l-0.98 -0.75l0.41 0.72l-0.17 0.79l0.31 0.37l-0.39 0.97l-0.17 0.17l-0.35 0.04l-0.24 -0.37l-0.15 0.13l-0.57 -0.18l-0.31 -0.64l-0.61 -0.70l-0.18 -1.80l0.33 -0.48l0.04 -0.73l0.54 0.13l0.22 0.31l-0.11 -0.55l0.13 -0.44l-0.11 -0.13l0.55 -0.42l0.50 0.07l0.17 0.27l0.09 0.91zm11.06 -1.01l0.32 0.10l0.15 -0.44l0.42 -0.05l0.32 0.39l-0.15 0.51l-0.30 0.07l0.10 0.51l0.42 0.15l0.37 -0.07l0.79 0.34l0.00 0.20l-0.32 0.37l-0.96 0.65l-0.35 0.03l-0.37 -1.20l-0.66 -0.32l-0.25 0.10l-0.02 -0.95l-0.20 -0.17l-0.34 0.32l-0.27 -0.24l0.17 -0.66l0.49 -0.10l0.59 0.27l0.05 0.19zm-5.47 -0.30l-0.20 0.00l-0.71 -0.78l0.00 -0.32l0.42 -0.34l0.49 0.49l0.00 0.95zm1.18 -1.93l-0.05 0.27l0.32 0.37l0.25 0.22l0.27 0.27l1.23 0.66l0.05 0.49l-0.30 -0.07l-0.12 0.17l-0.12 0.20l0.10 0.39l-0.15 0.15l-0.22 0.00l-0.49 -0.61l-0.74 -0.24l-0.66 -0.51l0.00 -0.56l0.20 -0.22l-0.64 -0.61l0.12 -0.29l0.34 0.17l0.37 -0.24l0.00 -0.49l0.17 0.10l0.07 0.38zm-8.03 -1.12l0.06 0.17l-0.13 0.07l-0.35 -0.11l-0.06 0.75l0.26 0.60l0.35 0.06l0.50 1.12l-0.87 -0.04l-0.09 -0.22l-0.59 -0.07l-0.72 -0.53l-0.02 -0.77l0.18 -0.13l0.13 -0.48l0.70 -0.20l0.33 -0.57l0.32 0.35zm12.78 -0.03l0.05 0.49l-0.22 0.22l0.00 1.20l-0.74 0.05l-0.17 0.44l0.20 0.44l-0.84 -0.22l-0.25 0.22l-0.49 -0.15l-0.15 -0.24l-0.76 -0.08l-0.71 -0.46l-0.32 -1.03l0.05 -0.27l0.40 -0.06l-0.08 0.55l0.37 -0.02l-0.07 -0.71l-0.17 -0.07l-0.02 -0.27l1.21 0.12l0.17 -0.81l0.37 -0.07l0.57 0.71l0.34 0.10l0.17 -0.24l-0.25 -0.17l0.00 -0.34l0.57 -0.24l0.44 0.37l0.33 0.54zm7.46 -0.54l0.15 0.66l0.74 0.44l0.47 1.20l-0.25 1.22l0.07 0.39l0.20 0.20l0.00 0.42l-0.27 0.07l0.00 0.24l0.25 0.12l0.62 -0.07l-0.12 0.51l-0.76 1.03l-0.57 -0.24l-0.96 0.02l-0.57 -0.20l-0.76 -0.66l-0.25 0.10l-0.69 -0.17l0.02 -0.17l0.69 -0.17l-0.47 -0.42l0.10 -0.27l-0.12 -0.17l-0.44 -0.37l0.22 -0.34l0.57 0.05l-0.20 -0.44l0.42 -0.51l-0.44 -0.42l-0.79 0.42l0.02 0.56l-0.17 0.15l-0.30 0.00l0.05 -0.37l-0.47 -0.17l-0.17 0.37l-0.22 0.12l-1.18 -0.07l-0.37 -0.32l-0.27 -0.61l-0.12 -0.44l0.52 -0.76l1.50 -0.24l-0.27 -0.76l0.39 -0.17l0.71 0.15l0.10 -0.20l0.39 -0.15l1.13 0.46l0.62 0.02l0.59 -0.37l0.20 -0.51l0.42 -0.12l0.15 0.10l-0.11 0.86z\"\n          },\n          ID_ks: {\n            name: \"Kalimantan Selatan\",\n            path: \"m366.42 189.54l-0.17 0.20l-1.10 -1.78l0.65 -1.65l0.86 -1.09l0.23 -0.06l0.20 0.45l0.00 0.59l-0.67 3.34zm-4.71 6.95l-0.56 0.16l-0.53 -0.05l-0.07 -0.21l0.06 -0.77l0.39 -1.28l-0.06 -1.79l-0.90 -1.25l-0.25 -0.81l0.02 -0.66l1.90 -5.56l2.45 -1.75l0.23 0.06l0.06 0.35l-0.36 2.29l0.27 2.65l0.82 3.98l-0.24 2.43l-2.51 1.88l-0.72 0.33zm-6.34 -46.88l-0.25 0.99l-1.06 1.27l-0.25 -0.07l0.14 -0.78l-0.32 -0.07l-0.82 0.71l-0.43 0.67l-0.64 0.56l-0.07 0.35l0.18 0.35l0.60 -0.25l0.60 0.11l0.28 0.39l-0.14 0.71l0.14 0.32l0.71 0.56l-0.14 0.32l0.11 0.49l0.50 0.56l0.35 0.74l0.14 1.87l-0.07 0.71l-0.32 0.71l0.00 0.42l0.28 0.32l-0.21 0.60l0.18 -0.04l0.35 0.28l0.50 -0.14l0.60 0.25l0.14 0.25l-0.35 0.56l-0.18 1.52l0.71 1.73l-0.04 1.02l0.28 0.53l0.53 -0.18l0.39 -0.35l0.11 -0.32l0.78 -0.28l0.53 -0.49l0.53 0.49l0.39 0.07l2.73 0.14l1.28 0.42l2.70 0.04l1.10 0.28l1.33 0.62l0.00 0.00l-0.39 1.87l-0.52 0.66l-0.40 0.02l-0.16 -0.16l-0.12 -0.61l-0.76 -0.40l-1.98 0.40l-0.05 1.62l1.01 0.91l0.20 3.11l-0.33 0.85l-1.39 1.80l-0.51 0.26l-0.23 -0.05l-0.24 -0.35l-0.21 -1.20l-0.95 -1.65l-0.20 -0.19l-0.13 0.14l-0.38 1.72l0.19 0.89l0.98 1.40l0.57 0.50l0.10 0.98l-0.77 0.39l-1.25 1.71l-1.52 2.87l-0.38 2.45l-0.24 0.47l-0.38 0.22l-1.98 0.29l-1.15 1.10l-0.65 0.42l-3.24 1.38l-4.53 1.63l-6.20 2.59l-3.79 2.28l-1.24 0.16l-0.36 -0.39l-0.13 -0.57l-0.01 -7.32l-0.11 -0.84l-0.35 -0.70l-1.02 -1.34l-0.71 -0.66l-0.73 0.08l-1.54 -0.88l0.00 0.00l0.00 -0.91l0.78 -2.37l1.46 -2.29l0.39 -2.26l1.53 -3.00l0.99 -0.28l0.35 -0.28l0.18 -0.21l-0.14 -0.25l0.21 -0.39l0.36 0.11l0.85 -0.32l0.46 -0.60l0.32 -1.80l0.70 -0.55l0.50 -0.78l-0.04 -0.64l0.21 -0.32l0.57 0.04l5.90 -4.27l0.39 0.28l0.32 -0.04l0.21 -1.31l0.39 -0.81l-0.71 -1.55l0.00 -0.39l0.96 -0.74l0.25 -0.81l-0.67 -0.92l-0.11 -0.78l0.71 -2.22l0.89 -3.88l0.14 -0.18l1.85 -0.14l1.81 -0.67l0.39 -0.32l0.50 0.11l0.99 -0.78l0.00 0.00l0.39 -0.30z\"\n          },\n          ID_kt: {\n            name: \"Kalimantan Tengah\",\n            path: \"m268.62 178.55l0.35 -0.93l0.38 -0.29l1.20 -0.41l0.78 -0.47l1.18 -0.21l0.62 -0.52l0.15 -0.57l1.45 -0.37l0.91 -0.45l0.52 -0.91l-0.16 -0.45l-0.34 0.02l-0.45 -0.28l0.33 -0.81l-0.53 -2.07l-0.09 -1.30l-0.52 -1.83l-0.68 -1.13l0.61 -0.72l-0.02 -0.29l0.19 -0.23l0.04 -0.23l-0.69 -1.29l0.70 -0.59l-0.07 -0.42l0.16 -0.39l-0.05 -0.15l-0.89 -0.13l-0.52 0.14l-0.34 -0.23l-0.15 -0.42l0.34 -0.43l0.04 -0.36l-0.32 -0.41l0.02 -0.64l0.11 -0.44l0.37 -0.34l0.15 -0.38l-0.12 -1.20l-0.22 -0.52l-0.29 -0.16l-0.42 0.18l-0.11 0.45l-0.18 0.13l-0.42 0.10l-0.26 -0.19l-0.18 -0.44l-0.44 -0.11l-0.04 -0.77l0.55 -0.38l0.28 -0.43l0.88 -0.21l0.44 -0.55l0.49 0.40l0.30 -0.30l0.48 -0.15l0.37 0.42l0.81 -0.22l-0.07 -0.45l-0.26 -0.39l0.82 -0.49l0.28 0.16l0.04 0.49l0.31 0.14l0.09 -0.66l-0.14 -0.79l0.38 0.14l0.13 -0.53l1.11 0.22l-0.05 -0.29l0.21 -0.04l0.42 -0.48l0.17 -0.59l0.63 -0.33l0.36 -0.75l0.30 0.00l0.12 -0.54l0.22 -0.18l1.11 -0.01l0.31 -0.26l1.20 -0.21l0.12 -0.30l-0.33 -0.28l0.26 -0.48l-0.32 -0.64l0.28 -0.54l0.48 -0.15l0.46 -0.48l-0.17 -0.69l0.30 -0.37l0.59 -0.04l0.93 -0.56l0.22 -0.29l0.76 -0.28l1.02 0.07l0.46 -0.26l0.16 -0.57l0.15 -0.07l0.68 0.15l-0.29 -0.76l0.14 -0.86l0.49 0.53l0.37 0.15l1.20 -0.34l0.07 -0.31l-0.31 -1.11l0.19 -0.18l1.08 0.11l0.77 0.31l0.38 0.00l0.10 -0.07l-0.24 -0.72l0.83 -1.14l0.54 0.03l0.35 0.28l0.64 1.21l0.41 0.48l0.36 -0.44l0.41 0.18l0.85 -0.31l0.49 -0.44l0.37 0.14l0.01 0.61l0.37 0.26l0.24 -0.23l0.08 -0.47l0.85 0.17l0.09 -0.19l0.92 -0.08l0.00 -0.21l0.60 -0.35l0.89 -0.03l0.25 -0.42l0.74 -0.03l0.08 -0.85l0.58 -0.15l0.57 0.17l0.70 -0.12l0.67 -0.63l1.44 -0.42l0.33 -0.31l1.33 0.14l0.33 -0.24l0.37 0.00l0.27 -0.51l0.39 -0.12l0.13 0.35l0.50 0.01l0.28 0.51l0.15 0.13l0.13 -0.08l0.16 -0.49l0.66 -0.80l-0.19 -0.78l-0.78 -0.71l0.28 -0.21l0.20 -0.60l0.53 -0.37l0.42 -0.60l0.86 -0.18l0.56 -0.51l0.27 -0.57l0.36 -0.07l0.08 -0.33l-0.34 -0.20l0.44 -0.26l0.35 -0.79l-0.07 -0.22l-0.37 -0.05l0.18 -0.77l0.26 -0.38l-0.35 -0.24l-0.20 -0.35l0.16 -1.35l-1.55 -0.81l-1.03 -1.01l0.03 -0.19l0.63 -0.38l0.74 -0.20l1.38 0.25l0.92 -0.55l0.53 -0.41l0.06 -0.23l0.96 -0.82l0.16 -0.31l1.32 -0.76l0.27 -1.09l0.68 -0.42l0.40 0.00l0.19 -0.42l0.37 -0.17l0.19 -0.43l0.36 -0.25l0.23 -0.71l0.51 -0.29l0.00 0.00l0.49 0.00l0.42 0.33l0.25 -0.18l0.24 0.06l0.70 -0.24l0.54 0.09l1.28 -0.66l0.36 0.09l0.30 -0.12l0.73 0.45l0.33 0.97l-0.33 0.33l0.00 0.21l0.63 0.33l0.10 0.42l0.42 0.18l1.55 -0.18l0.73 0.18l0.51 0.43l0.70 0.12l0.21 -0.06l-0.06 -0.67l0.67 -0.45l1.00 -0.03l0.21 -0.39l0.00 -0.63l0.79 -0.03l0.89 -0.64l0.49 -0.65l0.55 -0.10l0.32 0.14l0.82 -0.60l0.50 0.07l0.39 -0.24l0.53 0.33l0.20 0.42l0.47 0.12l-0.30 -0.48l0.04 -0.23l0.80 -0.75l0.51 0.14l0.45 0.37l0.39 0.70l0.29 1.61l0.56 1.16l0.73 0.86l0.32 0.65l0.65 0.57l-0.05 0.71l-0.20 0.39l-1.19 0.83l-0.15 0.32l-0.34 -0.48l-0.17 -0.02l-0.73 0.05l-0.31 0.16l-0.11 -0.21l-0.27 -0.06l-0.67 0.43l-0.53 1.13l-0.19 0.20l-0.39 0.07l-0.02 0.35l-0.43 0.48l0.08 0.42l-0.37 0.88l0.29 0.50l0.59 -0.11l0.32 0.35l0.37 -0.02l0.24 0.31l0.10 1.44l0.45 0.85l-0.08 0.64l0.21 0.47l0.00 0.53l1.02 -0.19l0.90 0.24l0.76 -0.66l0.47 -0.23l0.47 -0.01l0.29 -0.66l2.42 -1.17l0.36 1.12l-0.42 0.58l-0.44 0.26l0.00 0.67l-0.55 0.95l0.29 0.45l-0.04 0.48l-0.42 0.08l0.19 1.46l0.37 0.10l-0.21 1.09l0.23 0.06l0.72 0.74l0.39 1.03l0.50 0.43l0.28 1.90l-0.03 1.19l0.41 1.01l1.68 0.30l0.79 0.69l0.60 0.98l1.32 0.84l0.23 0.29l0.21 0.95l0.42 -0.05l0.40 0.44l0.34 0.14l0.19 0.69l0.23 0.14l0.34 -0.33l0.32 -0.07l0.76 0.66l-0.03 0.26l-0.91 0.66l-0.45 0.53l-0.23 1.30l0.00 0.00l-0.35 0.31l0.00 0.00l-0.99 0.78l-0.50 -0.11l-0.39 0.32l-1.81 0.67l-1.85 0.14l-0.14 0.18l-0.89 3.88l-0.71 2.22l0.11 0.78l0.67 0.92l-0.25 0.81l-0.96 0.74l0.00 0.39l0.71 1.55l-0.39 0.81l-0.21 1.31l-0.32 0.03l-0.39 -0.28l-5.89 4.27l-0.57 -0.03l-0.22 0.32l0.04 0.63l-0.50 0.78l-0.70 0.55l-0.32 1.80l-0.46 0.60l-0.85 0.31l-0.36 -0.10l-0.21 0.39l0.14 0.24l-0.18 0.22l-0.35 0.28l-1.00 0.28l-1.52 3.00l-0.39 2.26l-1.46 2.30l-0.78 2.36l0.00 0.91l0.00 0.00l-2.42 -1.15l-1.86 -0.50l-1.22 0.09l-3.59 1.72l-1.85 0.28l-0.80 -0.03l-1.07 -0.65l0.49 -1.56l0.07 -1.58l-0.26 -0.91l-0.36 -0.53l-2.26 0.14l-0.45 0.49l-0.17 0.60l-1.27 0.29l-2.09 -1.33l-3.12 -3.26l-0.52 -0.07l-1.47 1.60l-0.11 0.57l0.44 0.57l-0.30 1.00l-3.31 2.03l-1.18 0.83l-0.70 0.72l-1.75 0.54l-0.32 -0.03l-1.98 -1.57l-1.93 -0.67l-1.04 -0.02l-1.45 0.56l-3.69 3.52l-0.61 0.34l-0.41 0.06l-1.45 -0.60l0.65 -2.28l-0.47 -3.66l0.00 -0.82l0.28 -1.08l-0.03 -0.72l-1.36 -2.43l-0.40 -1.60l-0.48 -0.07l0.07 0.80l-0.57 0.84l0.43 0.35l-0.10 0.45l-0.94 0.17l-0.30 0.33l-1.24 0.77l-0.17 -0.47l-0.91 -0.80l-0.74 -0.57l-0.43 -0.07l-1.48 0.00l-3.05 1.75l-1.22 0.53l-0.97 0.30l-1.48 0.20l-2.18 -1.54l-1.40 0.24z\"\n          },\n          ID_ku: {\n            name: \"Kalimantan Utara\",\n            path: \"m388.45 70.62l-0.56 0.43l-1.29 -1.02l-0.47 -1.24l0.03 -0.41l0.16 -0.22l1.46 -0.12l0.82 0.25l0.15 0.32l-0.30 2.01zm-4.73 -4.79l2.20 1.30l-0.01 0.20l-0.54 0.47l-1.69 -0.74l-1.93 -0.10l-0.64 -0.31l-0.40 -0.54l0.08 -0.43l0.91 -0.38l2.02 0.53zm5.69 -7.40l-0.78 0.29l-1.19 -0.87l-0.18 -0.89l0.07 -0.22l0.78 -0.85l0.49 0.05l1.25 1.01l0.10 0.47l-0.54 1.01zm2.78 -3.31l0.43 0.19l0.42 2.01l-0.56 0.44l-0.51 0.08l-0.61 -0.31l-3.52 -2.82l0.06 -0.26l0.90 -0.74l0.51 -0.03l1.00 0.35l0.19 0.38l0.58 0.42l1.11 0.29zm-37.96 1.44l0.04 -0.93l0.33 -0.67l0.37 0.03l0.79 -0.91l0.40 0.06l0.14 0.33l0.41 -0.11l0.13 -0.57l0.72 -0.60l-0.14 -0.42l0.12 -1.04l0.53 -0.19l0.33 0.57l1.51 0.30l0.27 0.20l0.11 0.49l0.65 0.50l0.20 -0.13l0.39 -0.76l0.85 -0.33l0.13 -0.64l0.15 -0.11l1.41 0.21l0.30 0.18l1.52 -0.35l1.17 0.97l0.20 0.64l0.59 -0.14l0.23 -0.54l0.37 0.16l0.47 -0.08l-0.05 -0.62l0.54 -0.67l0.41 0.45l0.38 0.12l0.25 0.61l0.77 -0.24l0.53 0.16l0.31 -0.10l0.28 -0.16l0.26 -0.50l0.41 0.25l0.38 0.48l0.26 -0.11l0.49 0.28l0.69 -0.20l0.53 -0.41l0.73 0.18l0.29 0.23l0.65 0.06l0.28 0.30l0.34 -0.39l1.11 0.15l0.65 -0.17l0.59 0.11l0.64 -0.16l0.09 -0.19l0.53 -0.21l3.02 2.15l0.40 0.86l0.24 0.15l1.21 0.34l0.89 -0.26l0.24 0.17l0.00 0.00l-0.81 0.50l-0.91 0.28l-1.56 -0.45l-0.17 0.19l0.00 0.56l0.39 0.32l0.96 0.23l2.64 2.22l-1.75 0.26l1.66 0.95l1.56 0.17l1.27 1.34l0.04 0.26l-0.25 0.64l1.06 0.32l-0.08 0.25l-1.20 1.12l-1.07 0.21l-3.17 0.23l-2.67 -0.38l-1.80 0.30l-0.48 0.29l-0.44 0.65l0.03 0.41l0.56 0.87l1.48 0.93l1.26 -0.15l0.80 0.21l0.02 0.84l-0.28 0.52l1.76 0.92l-0.17 0.28l-1.26 0.17l-0.86 0.34l-0.29 0.46l-0.97 0.17l-0.17 0.34l0.54 0.32l2.01 0.35l2.71 1.18l1.22 2.08l-0.28 1.61l-0.01 1.26l1.02 0.18l0.80 0.49l0.21 0.33l0.14 1.34l0.23 0.72l2.78 2.74l0.00 0.00l-0.69 0.59l-1.29 0.15l-1.29 0.77l-0.36 -0.05l-1.39 -0.51l-1.13 -1.38l-0.46 -0.31l-1.08 0.26l-0.51 -0.10l-1.29 -0.61l-0.62 -0.46l-0.51 -1.13l-0.87 0.00l-1.60 0.41l-1.44 -0.31l-1.29 0.05l-2.01 1.18l-2.26 0.77l-1.75 1.13l-1.03 0.31l-0.72 0.05l-0.62 -0.31l0.00 -0.41l-0.29 -0.31l-0.77 -0.31l-0.57 -0.56l-0.51 0.05l-0.26 0.31l-0.31 1.33l-0.36 0.26l-0.82 1.38l-0.21 0.72l-0.05 2.20l-0.15 0.82l-0.67 0.41l-0.26 0.66l-1.08 0.56l-0.46 0.56l-0.10 0.67l0.31 1.18l-1.29 2.45l-1.60 2.15l-0.87 0.77l-0.57 1.18l-1.03 0.87l-2.32 0.05l-2.31 0.87l-1.96 -0.05l-0.41 0.41l-0.26 1.58l-0.51 0.26l-0.77 0.92l-1.03 -0.20l-0.82 0.92l-0.77 -0.10l-0.57 -0.26l-1.34 0.00l-0.87 0.97l-0.67 -0.05l-0.46 -0.20l-0.41 -0.46l-0.15 -0.61l-0.31 -0.41l-0.51 -0.20l-0.72 -0.10l-0.82 0.46l-0.21 -0.26l-0.21 -1.02l-0.77 -0.87l-1.59 -0.46l-0.62 -0.51l-0.26 -0.46l-0.79 -0.42l0.00 0.00l0.49 -0.81l-0.18 -0.30l0.12 -0.75l0.80 -0.47l0.52 -0.92l0.38 -0.31l0.13 -0.99l-0.11 -1.19l-0.13 -0.13l0.49 -0.66l-0.07 -0.27l0.56 -0.16l0.54 0.25l0.45 -0.64l0.67 -0.11l0.36 -0.34l-0.40 -0.81l0.05 -0.23l0.69 -0.52l-0.02 -0.22l-0.51 -0.25l-0.76 0.34l-0.20 -0.45l0.16 -0.96l-0.35 -0.19l-0.16 -0.29l-0.02 -0.82l0.34 -1.31l1.84 -0.20l0.78 -0.49l0.04 -0.23l-0.33 -0.43l0.31 -0.63l0.67 0.11l0.43 -0.23l0.51 -0.59l0.67 0.00l0.20 -0.59l0.45 -0.41l0.58 -0.18l0.78 0.02l0.60 -0.50l0.07 -0.31l-0.47 -0.34l-0.11 -0.34l-0.67 -0.79l-0.99 0.31l-0.31 -0.47l0.31 -0.38l0.09 -0.41l0.00 -0.49l-0.23 -0.14l0.00 -0.38l0.60 -0.52l0.00 -0.43l0.18 -0.34l-0.18 -0.27l-0.51 -0.13l-0.04 -0.18l0.96 -0.77l0.25 -1.06l1.59 -1.06l0.34 -0.83l0.61 0.65l0.04 0.41l1.23 -0.09l0.81 -0.77l1.03 -0.14l0.18 -0.34l0.00 -0.84l0.13 -0.25l0.81 -0.67l0.00 -0.20l-0.71 -0.52l-0.05 -0.18l0.42 -2.81l0.63 -1.26l0.34 0.02l0.40 0.63l0.40 -0.58l-0.58 -1.01l-0.13 -1.10l-0.38 -0.47l-0.16 -0.86l0.05 -1.55l0.14 -0.71l0.52 -1.04l0.04 -0.56l-0.05 -0.18l-0.78 -0.56l-0.13 -0.31l0.85 -0.23l0.45 -0.41l0.67 -2.08l0.00 0.00l0.01 -0.19l0.00 -0.00z\"\n          },\n          ID_la: {\n            name: \"Lampung\",\n            path: \"m148.28 209.53l0.65 -0.05l0.05 0.51l0.43 0.03l0.38 0.48l0.00 0.54l-0.43 0.40l0.00 0.21l0.35 0.03l0.75 0.70l0.30 -0.35l0.16 -0.89l0.51 0.38l1.40 -0.16l0.24 -0.21l0.19 0.05l0.08 0.24l0.91 0.27l1.00 -0.54l0.13 -0.38l0.38 -0.08l0.46 0.27l0.40 0.00l0.30 -0.19l0.40 0.38l0.35 -0.11l0.73 -0.94l0.03 -0.35l-0.11 -0.35l-0.67 -0.62l-0.05 -0.83l-0.54 -0.32l0.27 -0.78l0.65 -0.64l-0.30 -2.71l0.27 -0.83l0.27 -0.08l0.08 -0.38l0.80 -0.56l0.51 -0.59l0.62 0.05l0.62 -0.51l1.21 -0.48l0.67 -0.56l0.40 0.51l0.22 0.05l2.21 0.11l1.48 -0.24l0.08 -0.35l1.13 -0.56l0.62 -0.24l0.62 0.03l0.38 -0.51l0.62 -0.43l0.32 -0.96l0.30 -0.32l0.38 -0.05l-0.30 -0.35l0.43 -0.43l0.27 -1.07l0.22 0.13l0.16 -0.08l0.11 -0.51l0.54 -0.27l0.67 0.24l0.70 -0.64l0.22 -0.48l-0.27 -0.62l0.40 -0.32l0.11 -0.56l0.35 -0.46l0.22 0.13l0.30 1.07l0.32 -0.24l0.54 -0.11l0.32 0.08l0.11 0.72l0.78 -0.05l0.19 0.27l0.59 0.00l-0.13 0.80l0.13 0.16l0.40 -0.16l0.35 0.27l-0.05 0.46l0.24 0.19l0.32 -0.19l0.11 0.08l0.11 0.32l-0.38 0.00l0.46 0.38l0.00 0.24l0.30 0.32l-0.40 0.54l-0.05 0.29l0.24 0.05l0.00 -0.27l0.24 0.13l0.46 -0.05l0.08 0.05l-0.30 0.29l0.00 0.24l0.65 0.00l0.03 0.24l0.27 0.11l-0.11 0.46l0.19 0.13l0.75 0.08l0.30 -0.13l0.05 -0.27l0.22 -0.05l0.51 0.27l0.29 0.55l0.00 0.00l-0.19 2.70l1.46 2.41l0.05 0.33l0.00 1.25l-0.34 0.83l0.02 0.35l0.49 0.48l-0.60 1.22l-0.36 1.87l0.18 0.86l0.49 0.62l0.11 0.38l-0.04 0.22l-0.49 0.26l-0.27 1.24l0.15 3.61l-0.15 0.53l-0.49 0.33l-0.13 0.53l0.09 2.17l-0.17 1.61l0.21 0.73l-0.58 2.13l0.07 1.18l-0.36 1.05l-0.79 1.12l-0.27 0.11l-0.16 -0.97l-1.66 -0.22l-0.35 -0.27l-0.20 -0.51l0.02 -0.51l0.18 -0.34l-0.09 -0.23l-0.58 -0.55l-0.53 0.00l-0.20 -0.24l-1.38 -0.77l-0.83 -0.78l-0.27 -0.71l-1.16 -1.73l-0.33 -0.07l-0.35 0.15l-0.16 0.31l0.00 1.77l-0.13 0.27l-0.73 -0.25l-0.60 0.41l0.39 0.49l0.01 0.32l0.32 -0.01l-0.48 0.34l0.20 0.22l0.01 0.35l0.43 0.31l-0.09 0.12l-0.63 0.01l-0.37 0.40l0.26 0.46l0.75 -0.08l-0.51 0.53l-0.57 0.10l-1.68 -0.92l-1.68 -0.70l-3.02 -1.91l-0.74 -0.58l-0.79 -0.96l-0.56 0.02l-1.04 -0.31l-0.86 0.40l-0.46 0.40l0.41 0.26l0.13 0.58l1.01 1.21l0.37 0.25l0.29 0.53l-0.02 0.35l-0.16 0.11l1.18 1.77l-0.11 0.29l0.44 1.17l-0.09 0.20l-2.48 0.13l-0.37 -0.21l-0.08 -0.23l0.31 -0.16l-0.18 -0.73l-2.12 -1.93l-0.41 -0.72l-0.84 -0.62l-1.18 -0.55l0.33 -0.46l-0.94 -1.15l-2.96 -2.09l-1.48 -1.71l-0.12 -1.03l-0.32 -0.30l-1.31 -0.29l-0.04 -0.42l0.53 -0.55l-0.16 -0.49l-0.40 -0.47l-0.24 -0.23l-0.36 0.02l-0.47 -0.62l-1.00 -0.75l-0.31 0.00l-0.02 0.20l-0.18 0.04l-0.18 -0.11l0.07 -0.71l-0.78 -0.66l-0.71 0.04l-0.64 -0.55l-0.53 -0.13l0.00 0.00l0.18 -0.53l0.32 -0.05l0.57 -0.54l0.43 -0.08l0.51 -0.40l0.13 -0.51l0.81 0.05l0.11 -0.11l0.00 0.00l0.12 -0.06z\"\n          },\n          ID_ma: {\n            name: \"Maluku\",\n            path: \"m584.82 269.63l-1.56 -0.07l-1.47 -0.72l-0.16 -0.33l1.05 -0.38l1.36 0.07l1.03 0.51l0.06 0.52l-0.31 0.40zm-20.27 -2.88l1.84 0.65l1.74 0.15l0.87 -0.15l0.44 0.27l0.03 0.25l-1.58 1.67l-0.19 0.05l-3.38 -1.12l-0.48 -0.30l-0.68 -1.31l1.39 -0.16zm51.21 4.36l-0.67 0.05l-0.01 -0.23l1.59 -1.72l1.23 -0.67l0.59 -0.99l0.90 -0.99l0.33 -0.09l2.52 0.81l-0.63 0.62l-3.16 1.22l-1.08 0.77l-0.15 0.44l-1.15 0.74l-0.31 0.04zm-17.94 -5.06l-1.26 -0.30l-1.91 -2.34l-0.14 -0.39l0.15 -0.73l0.10 -0.38l0.28 -0.31l1.63 -0.22l2.05 0.55l0.39 0.32l0.34 1.44l-1.63 2.36zm-52.72 -6.75l0.81 0.01l0.43 1.34l-1.41 0.06l-1.68 0.51l-0.90 0.64l-0.97 1.19l-1.47 0.78l-2.43 -0.28l-2.73 -0.54l-1.00 0.02l-2.30 0.48l-2.23 1.79l-0.30 0.06l-0.18 -0.25l0.70 -2.67l2.76 -3.36l3.69 1.09l2.65 -0.46l1.24 -1.07l1.29 -0.60l2.30 -0.58l0.21 0.15l0.08 0.67l1.44 1.02zm11.67 -0.35l-0.26 0.13l-0.34 -0.07l-0.24 -0.41l0.37 -2.00l0.36 -0.23l1.69 0.55l0.06 0.26l-0.13 0.70l-1.51 1.07zm63.64 -2.43l-1.34 -0.42l-0.23 -0.53l0.31 -0.48l0.52 -0.19l2.33 -0.24l0.21 0.14l-0.74 0.90l-1.06 0.82zm11.54 -5.24l-0.73 0.31l-0.38 -0.07l-0.61 0.50l0.67 3.27l0.00 0.71l-0.85 2.56l-1.00 1.30l-2.96 2.18l-0.99 1.60l-0.06 1.26l-0.20 0.34l-0.46 0.24l-2.88 -0.28l-0.48 -0.24l-0.42 -2.30l1.82 -3.14l-0.23 -0.51l1.05 -2.85l1.20 -1.00l0.47 -0.18l0.91 -0.86l1.23 -1.49l1.36 -2.40l0.76 -0.41l1.30 -0.14l0.98 0.49l0.50 1.11zm3.24 -1.76l0.90 1.34l0.15 0.64l-0.27 0.52l-0.18 0.05l-0.84 -0.58l-0.41 -0.89l-0.99 -0.18l-1.17 0.26l-0.51 -0.10l-0.14 -0.22l0.10 -0.48l0.29 -0.20l3.07 -0.16zm-56.61 1.75l-0.49 0.17l-1.51 -0.94l-0.23 -0.41l0.06 -0.21l0.32 -0.36l1.22 -0.74l1.39 0.76l0.08 0.20l-0.40 0.99l-0.44 0.54zm108.06 -14.83l-0.30 0.33l-0.63 1.45l-0.10 0.66l-0.63 1.22l-0.26 -0.23l-0.46 0.07l-0.07 0.40l0.17 0.46l0.30 0.17l0.00 0.40l-0.33 0.00l-0.33 0.20l-0.13 0.69l-0.66 1.02l-0.53 0.50l-0.30 0.00l-0.56 -0.43l0.07 -0.46l0.50 -0.46l0.33 -0.79l0.07 -0.83l0.40 -0.59l-0.30 0.03l-0.23 -0.30l-0.33 -0.89l0.10 -0.50l0.66 -0.46l0.73 -0.26l-0.03 -0.73l0.17 -0.23l0.69 -0.33l0.30 -0.53l0.99 -0.79l0.53 0.03l0.30 0.30l-0.13 0.88zm-36.79 -7.18l-0.61 0.25l-0.82 -0.26l-0.44 -0.44l0.05 -1.24l-0.23 -2.15l-0.48 -1.37l0.11 -0.32l1.12 -0.32l1.81 3.45l0.00 1.13l-0.51 1.27zm33.85 -4.39l0.10 1.02l0.40 1.09l-0.63 0.13l0.00 0.30l1.32 0.66l-0.03 0.33l-0.17 0.26l-0.40 0.10l-0.76 -0.33l-0.03 0.50l0.40 0.26l0.07 0.23l-0.07 0.43l-0.26 0.13l-0.36 -0.07l-0.63 -0.50l-0.17 0.13l0.00 0.30l0.93 0.66l0.20 0.36l0.56 0.33l0.36 0.59l-0.36 2.31l-0.30 0.92l-0.66 1.12l-1.26 0.66l-0.50 -0.10l-0.23 0.20l0.36 0.99l0.53 0.33l-0.07 0.50l-1.09 0.99l-0.89 -0.26l-0.33 0.17l-0.23 0.56l0.10 0.33l0.50 -0.17l-0.03 0.50l-0.63 1.02l-0.69 0.46l-1.32 1.52l-0.03 0.66l-0.50 0.63l-2.05 0.89l-0.30 0.33l-0.46 -0.05l-0.36 -0.89l-0.33 -0.30l-0.69 0.00l-0.76 -1.32l0.00 -0.36l0.23 -0.20l0.36 -1.52l0.23 -3.11l0.30 -0.76l-0.03 -0.43l0.30 -0.99l-0.13 -1.75l-0.43 -1.52l0.66 -0.07l-0.43 -1.19l0.23 -0.56l0.00 -0.50l0.43 -0.36l0.17 0.17l0.00 0.33l0.26 0.03l0.50 -0.30l0.50 0.00l0.10 0.66l0.20 0.17l0.33 -0.10l0.46 -0.46l0.53 -1.32l0.00 -0.20l-0.50 -0.30l0.03 -0.30l0.17 -0.30l0.53 -0.40l0.07 -0.33l0.40 -0.33l0.26 -0.63l-0.07 -0.23l-0.30 -0.13l-0.50 0.30l-0.73 -0.59l-0.83 -0.10l-0.50 -0.53l0.07 -0.33l0.63 -0.69l0.99 0.63l0.36 0.03l1.29 -0.99l0.63 -1.65l0.76 -0.50l0.07 -0.63l-0.20 -0.86l0.17 -0.46l0.89 -1.22l0.63 -0.17l0.36 0.20l0.96 1.65l0.50 0.43l0.03 0.33l0.43 0.66l0.03 1.12l0.83 1.06l-0.07 0.50l-0.41 0.19zm-30.73 3.18l-1.83 2.38l-0.17 -0.05l-0.01 -0.31l1.61 -5.00l0.34 -0.60l0.59 -0.56l2.22 -5.58l0.41 -0.17l0.57 0.08l0.33 0.70l-1.35 4.39l-0.53 0.65l-0.85 0.50l-1.17 1.60l-0.28 1.01l0.12 0.96zm-76.67 -38.78l-2.08 0.41l-0.13 -0.13l0.26 -0.58l-0.01 -0.98l0.53 -0.39l1.21 0.12l0.92 0.91l-0.02 0.20l-0.68 0.44zm1.74 -1.65l0.82 0.29l0.36 -0.65l0.26 0.03l0.29 0.78l0.00 1.19l-1.44 0.22l-0.22 -0.09l-1.20 -1.68l-0.03 -0.31l0.22 -0.21l0.26 -0.02l0.68 0.45zm-4.99 1.80l-0.64 1.16l-1.00 0.84l-2.11 0.61l-0.38 -0.04l1.81 -1.71l0.22 -0.45l-0.28 -0.12l-3.66 2.28l-0.75 -0.05l-0.42 -0.53l-0.03 -0.84l0.90 -0.99l1.08 -0.69l2.71 -0.52l0.77 -0.95l0.71 -0.29l0.55 0.13l0.57 0.33l0.15 0.24l-0.20 1.59zm-12.15 -4.48l-1.94 -0.56l-0.69 -0.68l0.75 -0.60l0.78 0.10l0.94 0.88l0.46 0.66l-0.30 0.20zm2.43 -1.91l-1.74 -0.01l-0.60 -0.50l1.21 -1.10l0.83 -0.13l0.58 0.46l-0.04 1.13l-0.24 0.15zm-13.48 -1.88l1.87 1.18l0.21 0.97l-1.03 -0.05l-0.22 0.36l0.20 0.74l0.75 0.68l0.53 -0.20l0.31 -0.33l2.00 0.66l-0.41 4.13l-0.34 0.63l-0.54 0.16l-0.66 -0.18l-0.72 0.18l-1.55 0.64l-2.58 1.38l-3.00 0.93l-3.20 -1.14l-2.18 -1.01l-2.42 -1.63l-3.43 -3.25l-0.47 -1.30l-0.14 -2.87l0.27 -0.56l1.23 -0.84l0.41 0.09l0.43 0.60l0.57 0.47l0.61 0.03l0.55 -0.75l0.68 -0.38l2.29 -0.60l5.55 -0.22l1.55 0.26l2.88 1.22zm48.47 -4.08l3.87 1.54l1.22 0.06l4.28 -0.38l0.66 0.17l3.68 2.61l0.71 1.81l0.00 1.37l0.27 0.91l0.45 0.52l1.21 -0.04l0.83 0.20l0.64 0.64l0.82 2.39l-0.07 0.62l-0.60 0.85l-0.25 2.54l0.15 0.81l-3.70 -1.45l-1.01 -1.06l-2.76 -1.61l-4.57 -1.54l-2.47 -1.26l-0.56 -0.74l-0.03 -0.85l-0.79 -0.63l-0.40 -0.13l-4.09 -0.31l-2.35 -0.33l-0.29 0.32l0.12 0.54l0.73 0.86l0.19 0.56l-0.25 0.57l-0.47 0.12l-3.66 -0.91l-1.05 -0.08l-1.63 -0.62l-0.75 -0.46l-2.88 0.12l-0.32 -0.26l0.16 -0.39l0.69 -0.62l0.04 -0.67l-0.69 -0.49l-0.88 -0.13l-1.92 1.21l-1.47 1.37l-0.25 0.47l-1.02 0.86l-2.00 0.44l-0.47 -0.02l-0.65 -0.27l-0.49 -0.42l-1.76 -2.61l-1.47 -0.99l-0.62 -2.36l-0.69 0.02l-0.78 0.79l-0.62 1.51l-0.33 2.23l-0.46 0.64l-0.43 0.11l-0.93 1.67l-0.33 1.39l-0.16 -0.25l-0.25 -1.04l0.52 -1.15l0.12 -1.25l-0.87 -1.35l-0.45 -1.37l2.21 -1.72l3.26 -3.96l3.97 0.10l2.83 -0.13l4.95 0.18l2.13 -0.48l0.88 -0.71l0.36 0.03l0.32 0.19l0.13 0.35l-0.03 1.35l0.53 0.61l0.55 0.32l1.38 -0.29l2.31 -1.47l0.33 -0.27l0.18 -0.70l0.48 -0.21l2.13 -0.15l1.78 0.54l2.45 1.02l0.45 0.60z\"\n          },\n          ID_mu: {\n            name: \"Maluku Utara\",\n            path: \"m533.86 169.62l-0.51 0.08l-0.53 -0.30l-0.47 -0.59l-0.35 -0.72l-0.25 -1.65l-0.89 -1.29l-0.62 -2.48l0.44 -1.09l0.25 -0.40l0.36 -0.23l0.59 0.08l0.79 0.69l0.02 0.43l-0.53 1.47l-0.03 0.61l2.04 4.47l-0.31 0.92zm-10.97 -11.50l3.77 0.32l1.31 -0.17l0.54 -0.32l3.94 -0.12l6.23 0.53l-0.25 0.38l-1.41 0.60l-4.70 0.53l-8.89 0.55l-2.06 -0.97l-0.13 -0.22l-0.01 -0.83l0.63 -0.73l0.59 -0.09l0.18 0.38l0.26 0.16zm-8.31 -1.81l0.97 0.34l1.85 -0.50l2.98 0.71l0.48 0.98l0.03 1.67l-0.38 -0.13l-2.39 -0.08l-1.80 0.27l-0.45 0.23l-0.14 0.58l-0.38 0.12l-2.51 -0.82l-1.18 0.27l-1.64 0.97l-2.04 0.57l-0.87 0.18l-2.05 0.06l-1.33 -2.30l-0.02 -1.07l0.70 -2.15l0.48 -0.55l2.34 -0.46l1.81 -0.01l5.54 1.12zm50.59 -4.71l3.99 2.32l0.53 0.45l0.29 0.51l0.03 0.43l-0.36 0.76l-0.84 0.46l-0.53 0.06l-6.10 -0.48l-1.14 0.66l-1.66 0.25l-1.94 -0.89l-0.65 -0.53l-0.27 -0.44l0.28 -1.04l-0.07 -0.50l0.22 -1.05l0.37 -0.73l0.30 -0.34l0.32 0.25l2.91 -1.80l1.61 0.31l2.71 1.34zm-4.58 -2.91l-2.06 0.19l-0.67 -0.45l0.00 -0.18l0.86 -0.79l0.70 -0.24l1.80 0.72l-0.63 0.75zm-5.13 -7.96l-0.70 0.24l-2.02 -0.46l-0.13 -0.19l0.02 -0.49l0.58 -1.84l0.24 -0.24l0.42 -0.10l0.45 0.10l0.65 1.22l0.49 1.76zm4.38 -8.13l1.94 2.51l-0.31 0.95l-0.70 0.67l-0.38 0.81l0.06 0.48l0.73 1.14l0.54 0.31l0.63 -0.38l1.23 -0.18l1.10 0.49l0.77 1.02l-0.06 0.51l-1.34 1.10l-1.06 0.29l-1.36 -0.58l-1.21 -1.47l-2.12 0.90l-0.44 -0.15l-0.34 -0.60l-0.61 -2.67l-1.72 -1.82l-0.23 -1.01l0.53 -1.97l0.87 -0.22l0.72 0.64l1.19 -0.26l0.88 -0.71l0.69 0.20zm-6.72 3.57l-1.15 -0.07l-0.16 -0.44l-0.02 -3.52l0.65 -0.47l1.60 -0.17l0.40 0.46l0.38 1.67l-0.46 2.00l-1.24 0.54zm11.90 -40.14l0.47 0.17l0.33 -0.09l0.42 0.12l0.96 0.87l0.27 0.50l0.43 3.34l-0.82 2.98l-1.41 2.47l-1.27 1.05l-3.16 2.16l-0.39 0.59l0.05 1.02l0.42 0.71l1.68 1.19l0.69 0.29l0.86 -0.13l1.26 -0.95l0.20 -2.27l0.79 -1.33l1.11 -0.85l0.88 -0.11l0.78 0.14l0.57 -0.29l0.49 -1.03l-0.15 -0.47l-0.33 -0.27l-0.43 -0.05l-0.21 -0.82l1.00 -1.59l3.22 -2.23l1.17 -0.49l1.84 -0.51l1.36 -0.20l1.02 0.03l0.39 0.08l0.26 0.24l-0.47 7.82l-0.58 0.67l-3.78 2.21l-2.54 0.74l-1.49 1.48l-0.01 0.44l0.42 0.85l1.08 0.93l0.87 0.50l4.13 1.49l0.75 -0.03l0.75 0.16l0.32 2.48l-0.17 0.88l0.66 0.48l1.87 0.50l0.78 0.64l0.53 1.02l-0.89 -0.66l-0.67 -0.25l-4.69 -1.10l-1.57 -1.32l-1.61 -0.01l-1.38 0.20l-1.14 -0.30l-0.59 -0.34l-0.34 -0.49l-1.50 -0.26l-2.01 -0.18l-0.63 0.38l-0.26 0.33l-0.47 2.33l0.48 0.38l0.30 2.37l-0.69 1.13l0.04 1.35l2.61 6.84l0.99 1.85l0.76 1.01l1.31 2.23l3.26 3.24l-2.07 -0.11l-0.51 -0.17l-0.38 -0.36l0.13 -0.35l-1.73 -1.32l-1.49 -0.61l-0.54 -0.44l-1.36 -3.00l-1.44 -2.40l-2.42 -1.36l-0.95 -1.46l0.64 -4.83l-0.22 -2.24l-0.55 -2.46l-0.65 -0.36l-0.83 -0.88l-0.76 -2.32l-0.07 -0.95l0.39 -1.96l0.73 -0.76l0.54 -1.08l-0.08 -0.52l-1.85 -0.55l-0.20 -0.30l0.26 -0.98l-0.47 -1.64l-1.40 0.26l-0.13 -0.39l0.11 -2.59l2.16 -3.91l0.13 -1.00l-0.15 -0.38l0.75 -3.76l2.14 -3.19l3.77 -4.02l0.66 -0.56l1.85 -0.01l-0.24 1.12l-1.61 2.44l-0.42 0.50l-0.47 0.15l-0.69 0.55l-0.09 1.56l0.33 0.38l0.00 0.00zm10.85 -4.18l-1.92 0.09l-1.91 0.47l-0.54 -1.42l-0.32 -2.51l0.10 -1.04l1.03 -1.92l0.95 -1.18l1.50 -1.46l2.22 -1.05l0.25 0.05l1.88 2.57l0.15 0.79l-1.28 3.75l-0.89 1.60l-0.98 1.12l-0.24 0.14z\"\n          },\n          ID_nb: {\n            name: \"Nusa Tenggara Barat\",\n            path: \"m416.34 271.96l0.12 0.32l0.67 -0.30l-0.04 0.16l0.29 0.34l-0.27 0.41l-0.33 -0.23l-0.14 0.32l-0.19 0.07l-0.15 -0.16l-0.15 -0.95l0.19 -0.11l0.00 0.13zm-44.16 -0.61l0.05 0.40l-0.18 0.30l-0.07 0.70l-0.57 0.51l-0.42 1.71l-1.60 2.38l-0.22 0.58l-0.77 0.98l-0.10 0.58l0.65 0.02l0.50 0.35l0.37 0.08l-0.47 0.63l-0.62 0.20l-0.10 -0.18l-0.23 0.03l-0.45 0.30l-0.62 -0.02l0.47 -1.48l-0.85 0.18l-0.40 0.38l0.10 0.53l-0.10 1.03l-0.40 -0.03l-0.17 -0.35l-1.17 -0.40l-0.37 0.13l-1.12 -0.18l-0.27 0.23l-0.40 -0.10l-0.15 -0.75l-0.30 -0.05l-0.87 0.18l-0.25 0.23l-0.40 -0.08l-0.27 -0.23l-0.22 0.05l-0.13 0.38l-0.30 0.08l-0.60 -0.43l-0.55 -0.65l-0.38 0.08l-0.45 -0.20l-0.62 0.00l-0.35 -0.40l-0.20 -0.63l0.40 -0.75l0.35 -0.08l0.07 0.38l0.77 0.43l0.30 0.00l0.57 -0.58l0.42 -0.05l0.45 0.25l0.27 -0.20l0.00 -0.18l0.32 0.02l0.25 -0.25l0.15 -1.61l-0.05 -1.58l-0.55 -0.54l-0.17 -0.78l0.45 -0.65l0.82 -0.48l0.10 -0.50l0.30 0.10l0.05 -0.15l0.97 -0.43l0.50 -0.78l0.90 -0.70l1.65 -0.60l1.12 0.10l0.80 0.25l0.45 0.30l2.40 0.55l1.40 1.13l0.11 0.31zm15.05 -3.68l1.15 -0.07l0.44 0.25l0.09 0.21l-1.26 0.92l-0.84 1.84l-0.70 0.95l-1.00 -0.63l0.61 -1.24l-0.19 -0.38l-0.24 -0.01l0.10 -0.57l-0.09 -0.66l0.58 -0.47l0.74 -0.32l0.61 0.18zm25.53 1.79l-0.69 0.00l-0.49 -0.40l-0.04 -0.90l0.32 -0.55l0.51 -0.37l0.79 0.08l0.39 0.40l0.15 0.53l-0.26 0.70l-0.41 0.46l-0.27 0.05zm-19.25 -2.66l1.12 -0.13l0.40 0.20l0.45 -0.08l1.30 0.50l0.05 0.85l0.32 1.03l0.52 0.55l0.22 0.05l0.38 0.95l1.20 0.63l0.32 0.02l0.38 -0.35l0.67 -0.20l0.30 -0.65l1.07 -0.88l0.70 0.00l0.28 0.28l0.87 0.03l1.55 0.48l0.52 0.85l0.08 0.53l-0.13 1.56l-0.40 0.60l0.08 0.43l0.62 -0.20l0.22 -0.40l0.13 -0.80l-0.27 -0.40l0.05 -0.43l0.45 -0.85l0.33 -0.40l1.02 -0.73l0.42 0.00l0.17 0.23l1.02 -0.08l1.60 0.40l-0.17 0.68l0.08 0.45l0.95 1.43l0.05 0.95l-0.54 0.25l0.06 0.37l-0.16 0.21l0.39 0.62l-0.03 0.79l0.28 0.18l0.41 0.00l0.40 -0.28l0.54 -0.10l-0.36 -0.56l0.39 0.05l0.25 -0.15l0.08 -0.35l0.32 -0.20l0.33 0.50l-0.13 0.68l-0.33 0.45l0.15 1.13l-0.65 0.53l-0.35 -0.10l-0.33 0.13l-0.90 -0.30l-1.20 0.23l-0.52 -0.65l-0.60 -0.40l-0.47 0.20l-0.15 0.35l-0.25 0.05l-0.80 -0.25l-0.62 0.05l-0.17 -0.18l-0.38 0.20l-0.20 0.38l-0.53 0.25l0.10 0.13l0.52 0.23l2.75 -0.02l0.80 0.45l0.17 0.45l-0.40 0.33l-1.37 0.18l-0.47 -0.13l-0.77 -0.50l-0.85 -0.20l-1.22 0.23l-2.22 1.03l-1.07 0.25l-1.25 -0.48l-0.33 -0.73l0.11 -0.64l0.65 -0.80l0.08 -0.35l-0.15 -0.28l0.25 -0.43l-0.17 -0.48l-0.28 -0.40l-0.15 0.00l-0.10 0.18l0.07 0.55l0.15 0.10l-0.13 0.28l-0.30 0.20l-0.42 -0.13l-0.38 0.58l-0.65 0.30l-0.13 0.53l-0.47 0.11l-1.37 1.38l-0.92 0.38l-0.82 -0.60l-0.30 0.00l-0.27 0.23l-0.73 0.05l-0.32 0.60l-0.50 0.25l-0.35 0.00l-1.07 0.63l-0.62 -0.23l-0.18 -0.20l0.00 -0.30l-0.65 0.20l-0.15 0.28l-0.52 0.03l-0.30 -0.25l-0.30 0.00l-0.47 0.13l-2.40 1.36l-2.37 0.80l-1.30 0.08l-1.65 -0.55l-1.00 0.05l-0.97 1.01l-1.67 0.40l-1.00 -0.35l-0.32 -0.40l-0.65 -0.13l-0.37 0.25l-1.92 -0.73l-0.79 -0.48l-0.30 -0.50l0.23 -0.30l0.05 -0.38l-0.13 -0.23l0.17 -0.85l0.33 -0.05l0.22 -0.23l-0.08 -0.40l0.77 -0.15l-0.15 -0.55l-0.65 -0.98l0.27 -0.23l-0.42 -1.00l0.67 -1.41l0.47 -0.13l0.10 -0.20l-0.22 -0.83l0.47 0.33l1.58 -0.25l2.32 -1.58l0.67 -0.88l0.50 -0.15l0.30 0.00l0.97 0.60l0.23 -0.05l2.95 1.20l0.20 -0.48l0.45 -0.40l0.62 -0.23l0.45 0.15l1.17 -0.13l0.25 0.28l0.40 0.02l0.47 0.48l0.62 -0.05l0.32 0.95l-0.15 0.25l-0.62 0.18l-0.08 0.18l0.18 0.25l0.47 0.23l0.90 -0.08l-0.32 -1.30l0.40 -0.13l0.37 0.95l0.55 0.02l0.05 0.45l-0.80 0.08l0.32 0.38l-0.10 0.60l0.32 1.21l0.30 0.45l1.50 -0.30l1.30 0.55l0.35 0.00l1.47 -1.21l1.37 -0.30l0.67 0.08l0.37 0.35l1.57 -0.63l-0.20 -0.75l-0.38 -0.10l-0.13 -0.35l-0.57 -0.15l-0.15 0.25l-0.35 -0.58l-0.62 -0.38l-0.30 -0.50l-0.37 0.10l-0.50 -0.73l-1.67 0.20l-2.92 -1.86l-0.80 -1.03l-0.92 -0.83l-0.17 -0.35l0.32 -1.00l1.15 -0.83l0.70 0.05l1.70 -0.80l0.55 0.38z\"\n          },\n          ID_nt: {\n            name: \"Nusa Tenggara Timur\",\n            path: \"m487.55 308.46l0.71 -0.08l0.12 0.16l-1.19 1.40l-0.37 0.13l0.13 0.18l1.00 0.14l0.21 0.82l-0.48 0.59l-0.94 -0.03l-0.59 0.29l-0.29 0.36l-0.77 0.29l-0.18 0.34l0.07 0.36l-0.37 0.86l-0.26 -0.09l-0.37 0.24l-0.48 -0.33l-0.39 -0.05l-0.50 0.28l-0.35 0.49l-1.76 0.09l-0.57 0.41l0.34 0.34l-0.29 0.53l-0.38 0.01l-0.12 -0.30l-0.46 0.04l-0.08 -0.16l-0.60 0.15l-0.12 0.37l-0.50 -0.30l-0.09 -0.49l0.14 -0.80l-0.46 -0.88l0.13 -0.37l0.85 -0.37l0.65 -0.04l0.63 -0.33l0.73 0.11l0.37 -0.22l0.78 -0.09l1.41 -1.37l0.51 0.04l0.48 -0.32l0.22 -0.65l0.44 0.03l-0.07 -0.40l0.83 -0.88l1.73 -0.78l0.20 -0.83l0.61 0.63l-0.33 0.24l0.07 0.24zm-24.85 -1.04l0.71 0.12l0.16 0.18l-0.19 1.32l-0.30 0.35l-0.58 0.18l-0.57 0.60l-0.74 0.46l-0.61 0.10l-0.51 -0.25l-0.99 0.09l-1.10 -0.67l2.61 -1.46l0.22 -0.83l0.41 -0.25l0.67 -0.22l0.81 0.28zm26.17 -4.80l0.53 -0.11l0.09 0.45l-0.78 0.26l-0.12 0.38l-0.40 0.22l-0.17 -0.01l-0.01 -0.33l-0.44 -0.04l0.01 0.41l0.28 0.14l0.14 0.34l-0.09 0.29l0.13 0.34l-0.43 -0.06l0.11 0.28l0.20 0.07l-0.11 0.42l-0.40 -0.01l-0.14 -0.47l-0.19 -0.05l-0.38 0.07l-0.25 0.48l-0.15 0.02l-0.25 -0.44l0.07 -0.53l-0.15 -0.26l0.43 -0.58l0.52 -0.27l0.52 -0.87l0.15 -0.58l0.99 -0.39l0.22 0.33l0.07 0.50zm-59.68 -13.46l0.37 0.25l0.47 0.87l0.42 0.37l0.49 0.15l1.01 -0.22l0.27 0.12l0.39 0.60l0.12 0.47l0.07 1.21l0.39 0.50l0.69 0.05l0.37 0.45l0.20 0.00l0.71 -0.40l1.72 -0.42l0.47 0.55l0.07 0.42l1.70 0.87l0.30 0.87l1.18 2.21l1.01 0.35l1.06 0.62l0.49 0.70l0.34 1.07l-0.22 0.80l-0.69 0.60l-0.47 0.07l-0.62 0.94l-0.86 0.57l-0.62 0.02l-0.42 0.35l-1.03 -0.20l-0.49 0.12l-0.91 0.47l-0.07 0.35l-0.25 0.27l-0.32 0.02l-0.79 -0.45l-0.57 -0.55l-1.45 0.05l-0.71 -0.12l-0.42 0.10l-1.11 -0.50l-0.74 -0.72l-0.37 -0.12l-0.74 -0.90l-0.44 -0.10l-0.15 -0.15l0.17 -0.35l-0.25 -0.62l-1.04 -1.19l-0.67 -0.20l-0.07 -0.32l-0.47 0.00l-0.05 -0.47l-1.28 -0.20l-0.27 0.07l-0.30 -0.45l-1.22 -0.81l-0.25 -0.30l-0.25 -0.75l-0.32 0.00l-0.31 0.23l-0.22 -0.37l-0.49 -0.20l-1.21 -0.17l-0.84 -0.30l-0.94 0.40l-0.27 0.50l-1.01 -0.52l-0.37 0.10l-0.22 -0.35l-1.55 -0.12l-0.57 0.10l-0.12 -0.15l-2.00 -0.67l-0.42 -0.30l-1.01 -1.37l-0.67 -0.50l-0.32 -0.55l0.64 -1.09l0.57 -0.55l0.67 -0.40l1.45 -0.35l1.13 -0.67l0.29 0.07l0.25 0.27l1.01 -0.50l0.49 -0.07l0.76 0.32l1.06 0.00l0.91 -0.30l1.26 0.32l0.79 -0.52l1.03 -0.02l0.74 0.52l1.00 0.22l0.34 -0.07l0.59 0.25l0.59 -0.55l1.18 -0.72l0.57 -0.84l0.20 -0.05l0.54 1.02l0.90 0.96zm85.11 -7.52l0.20 0.08l-0.30 0.63l-0.01 0.52l0.23 0.36l0.51 0.25l0.45 -0.01l0.67 -0.52l0.61 -0.17l0.32 -0.34l0.28 -0.63l0.41 0.45l0.26 0.05l0.61 0.51l0.02 0.85l-0.26 0.89l0.15 0.75l-0.69 0.08l-0.64 0.38l-0.03 0.14l-0.72 -0.56l-1.04 0.02l-0.28 0.57l-0.05 0.39l0.26 1.08l0.97 0.67l0.04 0.58l0.48 0.56l0.16 1.19l0.00 0.00l-0.91 0.65l-0.77 0.86l-0.17 1.64l-0.53 0.56l-1.11 0.46l-0.51 0.45l-1.46 1.86l-0.61 1.02l-0.67 0.25l-0.80 0.79l-1.89 1.10l-0.65 1.39l-1.42 1.07l-0.57 0.26l-0.48 0.01l-3.42 -0.29l-0.48 0.09l-0.46 0.19l-0.51 0.51l-0.16 0.44l-0.78 0.47l-0.28 0.37l-1.01 0.13l-1.19 0.54l-0.25 0.31l-1.29 0.40l-0.77 0.00l-0.90 0.22l-0.54 -0.26l-0.30 0.01l-0.71 0.35l-0.27 -0.35l-0.97 -0.38l-1.36 0.51l0.04 -0.53l0.23 -0.19l0.38 -0.82l-0.13 -0.69l0.58 -0.22l0.07 -0.66l1.49 -0.63l0.61 -0.04l0.55 -0.38l1.00 -0.38l0.49 -0.86l-0.20 -0.28l-1.01 -0.35l-0.30 0.12l-0.59 -0.10l-0.42 0.18l-0.23 0.35l-0.30 -0.09l-0.12 -0.19l-0.01 -1.81l0.36 -0.47l0.28 -0.10l0.33 0.09l0.40 -0.48l0.11 -1.07l-0.45 -0.66l0.49 -0.20l0.19 -0.35l0.04 -0.64l-0.23 -1.16l1.20 -1.24l0.77 -0.31l0.15 -0.60l0.30 -0.26l0.19 0.02l0.48 -0.39l0.62 -0.20l0.33 -0.60l0.54 -0.18l0.09 -0.34l0.39 -0.28l0.19 -0.43l0.33 -0.27l0.87 -0.06l0.00 0.00l0.88 1.19l0.46 -0.02l0.26 0.32l0.41 -0.11l0.20 -0.48l0.70 -0.42l0.21 0.04l0.83 0.81l0.25 0.61l-0.14 0.86l1.21 -0.28l0.23 -0.50l-0.22 -0.45l0.55 -0.68l-0.12 -0.25l0.11 -0.30l0.17 0.02l0.31 -0.40l0.49 -0.07l0.14 -0.43l0.30 -0.15l-0.12 -0.56l0.20 -0.43l0.04 -0.59l0.19 -0.24l-0.03 -0.31l0.00 0.00l0.45 0.12l0.85 -0.09l0.88 -0.31l1.51 -1.21l0.08 -0.56l0.79 -0.09l0.96 -0.70l1.07 -0.24l0.52 -0.45l0.87 -0.30zm-88.95 -2.35l-0.42 -0.02l-0.01 -0.27l0.26 -0.27l0.25 0.14l-0.08 0.42zm-2.21 -0.28l-0.05 0.15l-0.60 -0.24l0.44 -0.22l0.21 0.31zm-1.10 -2.63l-0.24 0.15l-0.15 -0.13l-0.31 0.05l-0.15 0.28l0.27 0.28l-0.20 0.01l-0.41 -0.41l1.06 -0.68l0.15 0.07l-0.02 0.38zm0.70 -0.78l0.29 0.01l-0.01 0.61l0.19 0.69l0.10 -0.21l0.47 -0.04l0.02 -0.24l-0.33 -0.35l0.40 0.15l0.17 -0.46l0.37 0.12l0.35 -0.19l0.51 -0.01l0.23 0.18l-0.12 0.58l-0.70 0.13l-0.12 0.38l-0.22 0.17l-0.19 0.00l-0.04 -0.23l-0.20 0.01l-0.23 0.37l-0.08 0.37l0.48 0.18l0.15 0.30l-0.05 0.28l-0.60 0.67l-0.27 -0.01l-0.04 -0.34l-0.26 -0.26l-0.74 0.31l-0.21 -0.67l0.27 -0.86l0.24 -0.12l0.41 0.11l-0.15 -0.50l-0.23 0.21l-0.15 -0.08l0.18 -0.11l0.04 -0.36l-0.43 -0.80l0.32 -0.13l0.18 0.14zm47.22 -3.16l0.58 0.33l0.11 -0.20l0.11 0.18l-0.14 0.53l-0.43 0.36l-0.57 -0.16l-0.36 -0.44l0.05 -0.52l0.65 -0.08zm-50.22 0.41l-0.01 0.47l0.18 0.11l1.15 0.21l0.38 -0.19l-0.04 0.65l0.15 0.26l-0.14 0.02l-0.22 -0.30l-0.09 0.19l0.17 0.26l0.00 0.69l0.22 0.10l-0.91 0.13l0.00 -0.48l-0.37 -0.08l-0.05 0.29l-0.34 0.33l-0.37 0.03l0.18 0.35l0.25 -0.03l0.20 -0.23l0.05 0.13l-0.16 0.25l-0.04 0.15l-0.13 0.21l-0.39 -0.06l-0.33 0.46l0.38 0.45l-0.14 0.37l0.41 0.23l-0.52 0.25l-0.61 -0.48l-0.52 0.22l0.09 -0.50l0.39 -0.33l0.09 -0.61l-0.04 -0.21l-0.36 -0.28l-0.20 0.09l0.24 -0.50l-0.25 -0.25l0.28 -0.48l0.20 0.05l0.38 -0.20l0.00 -0.39l0.19 -0.04l-0.02 -0.23l-0.32 -0.13l0.42 -0.30l-0.03 -0.20l-0.20 -0.10l-0.05 -0.47l0.50 0.12l0.06 -0.44l0.29 0.44zm63.80 -0.41l0.08 0.32l-0.33 0.28l-1.33 0.50l-0.46 -0.02l-0.36 -0.21l-0.72 0.61l-0.78 1.45l-0.46 0.27l-0.41 -0.04l-0.28 -0.47l0.25 -1.02l1.08 -0.58l0.06 -0.50l0.43 -0.44l0.39 -0.03l0.39 0.23l0.32 -0.23l1.37 0.00l0.39 -0.21l0.37 0.09zm-24.91 -2.28l0.20 0.03l0.22 0.49l-0.10 0.34l-0.26 0.15l-0.77 -0.25l-0.17 0.13l-0.08 -0.10l0.19 -0.14l0.22 -0.60l0.31 -0.14l0.24 0.09zm25.80 -1.04l0.13 0.09l0.21 -0.26l0.22 -0.04l0.36 0.31l0.62 0.05l0.59 0.32l-0.29 0.47l-0.23 0.08l0.06 1.02l-0.28 0.60l-0.96 0.12l-1.05 -0.18l-1.87 0.44l-0.41 -0.16l-0.77 0.15l-0.05 -0.72l0.61 -1.06l1.20 -0.69l0.68 -0.59l0.66 0.09l0.43 -0.26l0.14 0.04l0.00 0.18zm18.17 1.97l-0.84 1.05l-0.15 1.07l-1.34 1.24l-1.03 0.15l-0.23 -0.16l0.20 -0.81l-0.55 -1.30l-0.80 -0.04l-0.68 0.50l-0.01 0.17l-0.56 -0.16l-0.01 -0.21l0.48 -0.54l0.33 -0.98l1.63 -0.93l0.51 0.30l0.04 0.67l0.17 0.15l0.39 -0.11l0.64 -0.67l0.19 -0.46l0.66 -0.38l0.72 -1.22l0.42 -0.35l0.64 -0.01l0.23 0.19l0.09 0.39l-0.44 0.82l0.08 0.98l-0.19 0.35l-0.59 0.30zm-7.27 -2.47l1.00 0.12l0.44 0.63l-1.47 0.55l-0.63 -0.16l-0.72 0.28l-0.38 0.48l-0.07 0.47l-0.59 0.60l-0.07 0.32l-0.40 0.48l-0.36 -0.04l0.03 -0.25l-0.15 -0.08l-0.43 0.01l-0.54 0.58l-0.47 0.24l-0.15 0.38l0.38 0.48l0.11 0.50l-0.53 0.62l-0.58 -0.04l-0.28 -0.70l-0.21 -0.09l-0.72 0.32l-0.47 0.73l-0.39 0.11l-0.78 -0.31l-0.20 -0.40l-0.52 -0.28l-0.41 0.35l-0.88 -0.13l-0.19 0.24l-0.35 -0.30l0.03 -0.42l0.38 -0.01l1.28 -1.07l0.43 -0.85l0.82 -0.27l0.21 -0.23l0.78 -0.13l0.59 -0.42l-0.74 -0.75l-0.42 -0.07l-0.98 0.17l0.60 -0.73l0.45 -0.20l0.28 0.24l0.64 0.08l0.48 -0.48l0.58 -0.11l0.63 0.09l0.12 0.09l-0.24 0.25l-0.12 0.47l-0.75 0.86l-0.04 0.27l0.94 0.32l0.71 -0.56l-0.01 -0.32l-0.31 -0.15l-0.01 -0.43l0.50 0.00l-0.07 0.35l0.08 0.16l0.58 -0.50l-0.17 -0.70l-0.38 -0.13l0.00 -0.32l0.70 -0.09l0.23 0.12l-0.04 0.40l0.71 0.15l0.13 -0.15l-0.12 -0.46l1.52 -0.93l0.98 0.75zm11.71 -1.52l1.44 0.10l-0.18 0.33l-0.02 0.69l0.25 0.16l0.83 -0.50l1.68 -0.32l1.33 0.26l1.46 0.03l0.77 -0.36l0.84 0.18l0.64 -0.15l0.93 0.05l0.70 1.39l-0.08 1.14l0.12 0.51l-0.38 0.33l-0.92 0.25l-3.00 0.12l-1.57 0.61l-1.08 0.07l-1.36 -0.16l-1.07 0.69l-0.88 0.20l-0.26 -0.31l-0.56 -0.13l-1.21 0.71l-0.16 -0.03l-0.07 -0.31l-0.88 0.10l-0.39 -0.38l0.03 -0.35l0.10 -0.31l0.95 -1.14l0.05 -0.38l0.41 -0.13l0.79 -0.64l0.64 -0.08l0.54 -0.33l-0.16 -0.13l-0.66 0.12l-1.59 0.79l0.08 -0.48l-0.17 -0.38l0.96 -1.29l0.35 -0.37l0.76 -0.17zm-27.53 -0.26l0.78 0.51l0.03 0.44l-0.20 0.56l0.28 0.33l0.05 0.60l0.68 0.69l0.02 0.41l-0.71 0.68l-0.29 0.05l-0.67 -0.38l-0.21 0.07l-0.58 0.85l0.23 0.57l-0.12 0.60l-0.46 0.07l-0.52 -0.36l-0.62 -0.17l-0.16 0.15l0.11 0.87l0.88 0.93l0.05 0.60l-0.21 0.37l-0.88 0.34l-0.84 -0.01l-0.11 0.41l-0.21 -0.16l-0.83 0.00l-0.84 0.52l-0.27 -0.08l-0.24 0.20l-0.48 0.07l-0.58 0.74l-1.97 0.65l-0.76 0.08l-0.53 -0.20l-1.08 0.26l-0.71 -0.23l-0.69 0.12l-0.35 -0.32l-1.05 0.04l-0.44 0.13l-0.30 0.43l-0.22 0.04l-0.50 0.50l-1.89 0.67l-0.96 0.02l-0.22 0.30l-1.19 0.48l-0.87 -0.07l-0.52 -0.41l-0.52 -0.07l-0.19 0.14l0.06 0.45l-0.15 0.35l-0.25 0.07l-0.31 -0.14l0.32 -1.03l-0.60 -0.24l-0.49 -0.40l-0.74 0.15l-2.52 -0.32l-0.24 0.04l-0.17 0.60l0.06 0.85l-0.43 0.42l-0.57 0.17l-0.71 -0.39l-1.36 0.14l-0.29 -0.15l-1.58 0.60l-0.92 0.61l-0.43 -0.02l-1.47 -0.49l-0.92 -0.75l-0.28 -0.80l-0.24 -0.09l-0.81 0.18l-0.34 0.75l-0.46 0.12l-0.95 -0.39l-0.81 -0.06l-0.89 -0.90l-2.60 0.02l-0.78 0.14l-0.24 -0.13l-1.23 0.63l-0.30 -0.18l-0.29 0.16l-1.15 -0.30l-0.81 -0.84l-0.33 -0.05l-2.23 0.61l-0.87 0.12l-0.42 -0.09l-0.36 0.38l0.00 0.32l-0.21 0.07l-0.42 -0.13l0.13 -0.27l-0.16 -0.09l0.01 -0.46l-0.80 -0.07l-0.15 -0.31l-0.52 -0.44l-0.06 -0.37l0.01 -0.25l0.09 -0.35l-0.10 -0.23l0.23 -0.46l0.01 -1.12l-0.22 -0.10l0.09 -0.33l0.48 -0.52l-0.05 -0.15l0.50 -0.17l0.32 -0.37l0.08 -0.55l-0.34 -0.44l-0.07 -0.39l0.42 -0.04l0.04 0.58l0.30 0.06l0.11 0.17l0.48 -0.32l0.24 0.01l0.40 -0.42l0.50 0.47l0.24 -0.36l-0.25 -0.14l0.02 -0.24l0.35 -0.56l0.51 0.04l0.24 -0.17l0.21 0.01l0.14 0.43l0.22 0.18l-0.18 0.36l0.38 0.04l0.21 -0.39l0.01 -1.00l0.63 0.29l0.25 -0.43l0.15 0.00l0.33 -0.74l0.24 0.04l0.49 -0.15l0.24 -0.25l0.49 -0.04l0.71 -0.03l0.78 0.20l0.71 -0.25l0.07 -0.47l0.19 -0.17l0.46 0.38l-0.01 0.33l0.40 0.24l0.85 -0.33l0.51 0.29l0.72 0.01l0.17 -0.22l-0.24 -0.27l0.11 -0.20l0.75 0.35l0.73 0.89l0.49 -0.04l0.43 0.38l1.17 -0.15l0.90 0.29l1.15 -0.01l0.53 -0.18l0.50 0.07l-0.03 0.35l0.13 0.13l0.50 -0.03l0.00 0.36l0.21 0.39l0.71 -0.10l0.65 0.28l0.63 0.04l0.38 0.26l0.43 -0.08l0.75 0.46l0.78 0.10l0.49 0.21l0.75 1.21l1.22 0.56l0.85 -0.45l0.25 0.31l0.33 0.13l0.21 0.53l0.51 -0.60l0.61 -0.20l-0.25 -0.22l-0.01 -0.35l0.17 -0.06l0.65 0.42l-0.22 -0.43l0.10 -0.82l0.21 -0.22l0.44 0.11l-0.03 0.36l0.40 -0.11l0.24 0.32l0.86 -0.31l0.89 0.09l0.28 0.19l0.51 -0.20l0.29 -0.31l0.28 0.22l0.89 0.04l0.28 -0.17l0.54 -0.74l-0.06 0.50l0.51 -0.44l0.49 -0.12l0.23 0.06l-0.27 0.81l0.09 0.67l0.92 -0.11l0.29 0.36l0.31 -0.25l0.96 0.45l1.21 1.21l1.15 0.28l0.60 -0.38l0.53 -0.10l1.50 -0.16l0.42 0.10l0.76 -1.05l-0.04 -0.39l-0.61 -0.54l0.22 -0.34l1.12 -0.32l0.30 -0.47l0.32 -0.09l0.14 -0.55l0.27 0.07l0.29 -0.27l0.53 0.15l1.20 -0.54l0.55 0.10l0.76 -1.11l1.11 -0.12l0.36 -0.23l0.36 -1.12l0.43 -0.26l-0.61 -0.34l-0.63 -0.01l-0.94 0.31l-0.41 0.68l-0.98 -0.19l-0.03 -0.13l0.47 -0.40l0.42 -0.74l0.00 -0.77l0.82 -0.21l0.62 -0.53l1.08 0.67z\"\n          },\n          ID_pa: {\n            name: \"Papua\",\n            path: \"m755.56 272.16l-2.51 -0.14l-2.81 -0.49l-0.36 -0.18l-0.21 -0.57l0.08 -0.21l2.73 -2.39l1.71 -0.48l0.23 0.05l0.27 0.88l1.28 2.71l0.02 0.34l-0.43 0.48zm-4.89 -2.73l-2.60 2.13l-1.27 0.57l-1.38 0.28l-0.47 -0.05l-0.39 -0.32l-0.65 -0.18l-5.96 -0.40l-2.85 0.69l-0.51 0.35l-0.50 0.06l-0.24 -0.42l0.06 -0.52l1.62 -4.23l3.07 -5.93l1.96 -2.96l0.53 -0.57l2.98 -2.10l2.44 -0.96l4.78 -0.89l2.12 0.11l0.79 0.22l0.37 0.33l1.08 1.81l0.59 0.62l1.32 0.25l0.62 0.98l-0.96 2.70l-1.18 1.89l-0.54 2.73l-0.57 0.73l-1.15 1.06l-1.99 0.44l-1.12 1.58zm0.44 -26.51l0.61 0.50l1.30 0.24l0.82 1.21l-0.99 0.62l-0.75 -0.28l-1.16 -1.53l-0.13 -0.51l0.30 -0.25zm-40.39 -86.82l2.86 0.57l5.96 0.44l1.59 0.67l0.09 0.16l-0.43 0.46l-3.22 0.55l-2.54 0.83l-5.61 -0.50l-4.02 -0.96l-0.89 -0.65l-1.03 -0.45l-2.55 -0.77l-1.02 -0.20l-1.13 0.08l-2.09 -0.34l-1.08 -1.28l0.93 -0.28l1.17 0.38l11.08 0.79l1.93 0.50zm44.47 4.67l1.20 0.01l1.96 0.66l6.25 2.86l6.46 3.36l1.79 0.26l2.55 -0.31l1.28 -0.61l0.99 0.06l0.17 0.54l0.69 0.85l1.91 0.88l0.92 -0.17l0.10 -0.27l1.66 0.03l2.67 0.39l1.57 0.56l0.34 0.26l0.12 0.41l-0.25 0.63l-0.47 0.49l-0.11 0.35l0.46 0.38l1.67 -0.47l2.48 -0.10l0.61 0.05l0.06 0.12l0.00 64.11l-0.68 0.07l-0.67 1.97l0.40 0.51l-0.07 0.34l-0.92 1.75l-0.53 0.53l-0.07 0.81l0.21 1.87l0.55 1.20l0.81 0.83l0.55 0.05l0.43 -0.23l0.02 38.79l-1.09 -0.68l-1.17 -0.32l-0.60 -0.42l-1.46 -1.85l-2.57 -2.39l-1.82 -2.97l-4.75 -4.06l-3.07 -2.25l-1.15 -1.31l-0.18 -0.29l0.12 -0.68l1.38 -1.15l1.25 -2.29l0.24 -0.93l-1.63 0.71l-0.28 1.17l0.05 1.05l-1.29 0.74l-0.86 0.31l-3.52 -0.01l-1.59 0.19l-1.58 0.91l-1.92 0.46l-0.90 0.05l-0.70 -0.08l-0.87 -0.55l-1.00 -1.40l-2.32 0.88l-1.91 1.40l-0.60 1.29l-0.50 0.06l-1.07 -2.05l-0.20 -0.87l1.17 -1.61l0.12 -2.16l0.20 -0.22l1.20 -0.57l0.24 -0.82l-0.04 -1.04l0.89 -2.23l0.66 -0.70l0.02 -0.51l-0.44 -0.44l-1.08 -0.40l-1.25 -0.87l-0.63 -1.45l-0.61 -0.75l-1.71 -1.13l-1.61 -0.82l-0.15 -0.40l0.21 -0.14l4.50 0.17l1.04 0.63l0.96 0.22l2.17 -0.22l0.81 -1.32l-0.81 0.36l-0.25 0.34l-2.06 0.19l-3.37 -1.03l-1.71 -0.78l-2.89 -2.55l-0.31 -0.40l-0.02 -0.55l0.61 -0.49l0.80 -0.02l0.95 0.33l0.73 0.02l1.10 -0.71l1.80 -0.22l1.28 0.44l1.12 1.12l1.02 0.64l0.51 0.14l0.86 -0.19l-1.00 -0.23l-0.70 -0.37l-1.24 -1.12l-0.53 -0.30l-0.85 -0.33l-0.95 -0.12l-3.47 -1.82l-0.26 -1.09l0.66 -0.19l-0.49 -0.66l-3.38 -3.24l-0.76 -1.01l-0.51 -1.14l-0.32 -1.10l0.05 -0.85l-0.48 -1.44l-1.20 -2.22l0.02 -2.02l-1.48 -0.41l-0.76 -0.66l0.41 -0.60l2.77 -1.35l-0.18 -0.15l-0.47 -0.01l-1.61 0.25l-0.99 0.57l-1.35 0.38l-0.25 -0.15l-0.32 -1.80l0.36 -3.26l-0.14 -0.50l-0.50 0.88l-1.52 -0.57l-2.95 -1.94l-0.49 -0.59l-1.51 -0.98l-0.94 -0.25l-0.58 -0.36l-0.08 -0.20l0.40 -0.36l-1.30 -0.01l-1.89 -0.85l-1.81 -1.31l-0.62 -0.74l-1.00 0.44l-3.58 -1.01l-3.13 -0.41l-0.41 -0.42l-2.90 -1.34l-4.70 -2.50l-1.76 0.02l-3.86 -1.56l-0.47 -0.42l-0.62 -0.92l-0.76 -0.31l-2.20 -0.11l-1.33 0.16l-5.17 -1.12l-1.66 0.14l-1.68 0.38l-0.96 -0.34l-3.70 -2.11l-1.63 -0.69l0.00 0.00l1.64 -2.37l1.06 -0.81l0.65 -1.38l1.06 -1.63l2.29 -2.84l-0.90 -0.41l-0.49 0.00l-1.22 -0.57l-2.86 -0.89l-3.02 -1.22l-6.45 -1.87l-1.96 -0.97l-1.39 -0.41l1.14 -2.52l0.98 -1.22l1.63 -0.97l0.24 -0.81l0.00 -1.14l1.55 -0.81l2.48 -2.27l0.00 0.00l0.61 2.49l0.47 0.36l0.71 -0.15l0.67 -0.48l0.09 -0.50l0.31 -0.37l0.45 0.04l0.12 0.65l-0.18 1.21l-0.49 0.45l-0.17 1.43l1.11 2.15l2.05 1.51l2.13 0.55l3.73 0.43l2.22 -0.42l0.95 -0.47l0.67 -0.64l0.26 -0.60l-0.03 -0.40l0.64 -0.78l0.49 -0.34l1.37 -0.40l0.92 -0.73l-0.03 -0.26l-0.42 -0.32l0.40 -0.51l2.48 -1.07l0.51 -0.79l0.32 -2.73l1.23 -1.46l0.40 -0.05l2.31 -1.08l1.25 -1.01l0.43 -0.75l1.09 -2.85l0.05 -0.66l-0.19 -0.79l0.39 -0.49l0.91 -0.63l1.27 -0.10l0.87 0.05l0.06 0.29l0.18 0.12l0.96 0.24l1.14 0.10l1.49 -0.13l1.46 -0.83l2.65 -1.17l1.31 -0.41l0.80 0.11l1.30 -0.22l0.78 -0.52l0.04 -0.29l-0.64 -1.80l-0.63 -0.29l-0.91 -1.04l0.19 -1.23l1.22 -0.64l1.25 -0.31l1.40 -0.61l2.50 -1.32l0.44 -0.53l1.55 -0.75l4.17 -1.47l0.52 -0.02l0.96 0.28l0.81 0.92l1.43 1.10l6.10 2.16l4.19 1.00l1.53 0.96l0.76 1.02l0.96 0.82l0.38 0.07zm-68.19 -14.13l-0.97 -0.01l-1.13 -1.66l0.19 -1.00l0.50 -0.67l0.81 -0.05l0.73 0.35l1.08 1.11l-0.08 1.04l-0.49 0.69l-0.64 0.20zm9.63 -8.01l1.79 0.04l1.52 0.24l1.62 1.07l0.97 -0.75l0.54 -0.07l0.66 0.38l3.03 2.55l2.23 3.23l1.25 -0.22l1.72 0.77l0.36 0.36l-0.81 0.72l-1.29 0.72l-1.85 0.40l-1.04 -0.02l-0.87 -0.65l-0.48 -0.15l-1.00 0.05l-0.75 0.27l-0.59 -0.12l-0.88 -0.87l-0.78 -3.16l0.03 -0.92l-0.57 -1.23l-0.50 -0.05l-1.81 0.86l-1.79 -1.52l-0.66 -0.15l0.08 0.54l-0.42 -0.16l-1.00 -0.95l-0.62 -1.33l0.26 -0.49l1.65 0.61z\"\n          },\n          ID_pb: {\n            name: \"Papua Barat\",\n            path: \"m663.64 200.15l0.76 0.90l-5.00 -2.24l-0.16 -1.15l0.51 0.19l1.24 0.95l2.65 1.35zm-58.47 -37.60l-1.23 0.04l-3.61 -1.07l-3.03 -1.57l-0.33 -0.42l0.58 -0.54l3.53 -1.26l1.42 -0.72l5.41 -1.05l0.08 0.52l1.33 1.97l0.06 2.57l-0.94 0.62l-3.27 0.91zm-4.51 -14.67l-1.71 0.55l-1.58 -0.54l0.06 -0.33l0.37 -0.34l1.80 -0.50l1.55 0.52l-0.49 0.64zm16.75 -5.48l0.59 0.77l1.09 -0.15l0.66 -0.26l0.69 1.04l-0.05 1.91l-0.58 2.67l-0.72 1.64l-0.21 0.26l-0.40 0.12l-1.50 -0.28l-2.04 -1.69l-0.35 -1.00l-0.75 -1.06l0.35 -0.54l-0.27 -0.73l-0.38 -0.64l-0.56 -0.21l-0.07 -0.22l0.07 -0.25l0.36 -0.20l3.39 -1.11l0.68 -0.07zm0.31 -1.73l-0.45 0.77l-1.64 0.70l-2.22 0.47l-1.46 0.15l-1.84 -0.10l-0.59 0.10l-0.55 0.28l-0.24 -0.08l0.88 -1.01l0.66 -0.52l4.17 -0.12l1.33 -0.30l0.63 -0.70l0.79 0.00l0.53 0.36zm-5.38 -4.29l-2.44 -0.27l-0.16 -0.97l0.42 -0.31l2.32 -0.69l0.80 0.28l0.57 0.45l0.02 0.26l-0.45 0.75l-1.08 0.50zm51.35 3.65l3.04 0.05l0.08 -0.56l3.91 0.10l2.24 1.81l-1.41 2.26l1.69 3.19l1.35 1.19l1.31 2.39l-0.79 0.87l-0.24 2.51l-2.30 2.07l0.59 3.54l0.39 0.86l-0.21 2.02l0.46 4.60l1.09 1.87l0.53 0.18l1.15 1.14l2.47 6.13l0.55 0.02l0.54 -0.46l-0.90 -3.57l-0.05 -1.18l0.25 -0.58l0.94 -0.96l0.53 0.11l1.23 0.78l0.26 0.91l0.10 4.32l0.00 0.00l-2.48 2.27l-1.55 0.81l0.00 1.14l-0.24 0.81l-1.63 0.97l-0.98 1.22l-1.14 2.52l1.39 0.41l1.96 0.97l6.45 1.87l3.02 1.22l2.86 0.89l1.22 0.57l0.49 0.00l0.90 0.41l-2.29 2.84l-1.06 1.63l-0.65 1.38l-1.06 0.81l-1.64 2.37l0.00 0.00l-1.16 -0.49l-2.68 -2.25l-0.08 -0.22l0.73 -2.82l0.43 -0.22l2.50 0.31l1.04 0.45l0.32 -0.03l0.65 -0.48l-0.03 -0.17l-1.16 -0.20l-3.94 -0.25l-0.96 0.74l-0.34 0.90l-1.31 0.28l-0.94 -1.35l-0.60 -0.59l-1.16 -0.28l-0.45 1.63l-0.64 0.33l-1.57 -0.88l-0.51 -0.44l-0.35 -0.72l0.06 -0.53l0.41 -0.30l0.05 -0.28l-0.29 -0.62l-0.59 -0.59l-0.25 -0.11l-1.74 0.91l-1.75 -0.94l-1.60 -2.78l-0.56 0.28l-0.07 0.16l0.14 0.98l-0.44 0.10l-1.23 -0.78l-1.10 -2.17l-0.14 -0.56l0.08 -0.22l0.91 -0.58l0.11 -0.24l0.05 -1.06l-0.25 -1.28l0.44 -1.45l1.21 -1.03l1.34 -0.86l0.03 -1.29l-0.58 -0.79l-1.69 1.53l-1.25 1.48l-0.32 2.64l0.04 2.08l-0.65 0.13l-1.06 0.72l0.39 0.37l0.41 0.91l-0.07 0.58l-1.68 1.30l-1.54 1.53l-0.07 0.30l0.20 0.90l0.60 0.52l0.17 0.64l-2.39 2.51l-1.30 1.06l-0.65 0.06l-2.62 -0.30l-0.34 0.19l-0.65 0.76l-1.36 -0.34l-1.12 -1.51l-0.55 -1.27l0.20 -0.16l-0.16 -0.61l-1.16 -2.99l0.56 -1.47l1.83 -0.66l0.53 -0.41l0.12 -0.27l-0.77 -1.44l-0.27 -0.08l-0.29 0.15l-0.47 -0.38l-0.37 -1.40l0.35 -0.85l-0.05 -0.29l-0.39 -0.50l-0.52 -0.13l-0.60 0.24l-0.02 0.90l-0.15 0.15l-0.23 0.06l-0.79 -0.37l-1.16 -1.56l-0.08 -0.85l-0.62 -1.18l-1.58 -1.24l-2.59 -1.61l-0.74 -0.21l-1.44 0.00l-1.90 0.49l-2.14 -3.10l0.18 -0.21l2.96 -1.40l1.20 -0.25l1.91 0.06l3.34 0.31l1.06 0.29l1.20 0.75l0.41 0.53l0.98 0.45l2.07 -1.49l3.05 -4.02l1.51 -0.87l0.90 -0.28l1.52 -0.21l1.10 0.53l1.32 1.27l2.08 0.76l0.71 -0.04l0.99 -0.43l0.76 0.09l0.51 0.73l-0.10 0.91l0.11 1.36l0.25 -0.34l0.32 -2.52l-0.10 -0.61l0.24 -0.05l0.36 0.17l1.08 2.21l0.22 0.13l0.07 -2.02l-0.29 -0.80l-0.39 -0.24l1.02 -0.97l1.28 -0.61l0.71 -1.04l0.05 -1.62l-0.20 -0.42l-0.40 1.05l-1.47 0.49l-0.31 -0.03l-0.56 -0.72l0.12 -0.21l2.03 -0.79l0.58 -0.48l-0.20 -1.15l-1.01 0.17l-3.98 2.12l-1.78 0.15l-1.81 -0.12l-0.66 -0.35l-1.78 -0.31l-1.67 0.22l-4.11 1.28l-1.09 -0.07l-1.44 -0.62l-0.60 0.17l-1.61 0.87l-0.88 -0.43l-0.19 -0.22l-0.21 -0.79l-0.41 -0.53l-0.30 -0.07l-2.05 0.52l-1.09 0.68l-0.96 0.22l-0.67 -0.08l-2.47 -2.01l-0.84 -0.32l-1.14 -0.82l-1.20 -2.03l-0.70 -1.58l-0.07 -1.12l0.76 -0.83l-0.25 -0.93l-1.28 -1.13l-2.76 -1.04l-0.33 -0.38l0.02 -0.27l-1.98 -0.92l-5.48 -1.83l0.17 0.40l0.82 0.54l0.04 0.38l-0.78 0.65l-1.38 0.50l-0.52 -0.85l-1.15 -0.45l-1.07 0.06l-1.48 -0.90l0.83 -1.17l0.41 -1.03l0.42 -0.54l2.06 -0.42l1.21 -2.10l0.64 -3.07l-0.53 -1.64l4.46 -1.52l0.37 0.05l0.06 0.21l0.68 0.22l3.41 -0.63l1.70 -0.55l0.78 -1.22l3.25 -2.69l1.23 -0.77l1.60 -0.65l2.84 -0.68l4.83 0.39l1.84 0.94l5.11 1.98l1.01 0.09l3.48 3.04l0.96 0.29l2.54 0.31zm-46.66 -12.62l2.85 0.81l1.68 0.16l2.77 1.58l0.23 0.60l0.15 1.22l-0.44 0.95l-0.71 1.01l-1.49 -0.83l-1.10 -0.10l-1.23 0.47l-0.99 0.05l-0.53 -0.32l-1.24 -1.61l-1.46 -0.58l-1.40 -2.07l-0.37 -0.29l-1.29 0.15l0.22 0.83l1.75 1.85l1.69 0.78l1.01 0.16l0.59 0.36l0.44 0.74l-0.47 0.76l-1.17 0.55l-1.54 0.21l-0.57 -0.20l-0.30 -0.40l-0.50 -1.96l-1.58 0.35l-0.80 0.73l-0.53 -1.92l-1.45 0.36l-1.19 -0.14l-2.01 -0.68l-0.42 -0.28l0.35 -0.22l0.42 0.21l2.11 0.18l0.75 -0.41l-0.48 -0.82l-1.07 0.03l0.11 0.62l-0.85 -0.19l-0.35 -0.64l0.13 -0.56l1.32 -0.32l1.46 0.00l3.65 -0.59l0.75 -0.29l0.36 0.26l0.84 -0.07l-0.29 -0.27l0.56 -0.34l0.71 -0.07l0.92 0.19zm-22.88 3.34l-0.32 0.15l-0.86 -1.04l-3.37 -3.33l-0.03 -0.20l0.25 -0.03l0.58 0.38l3.54 2.85l0.39 0.68l0.04 0.31l-0.22 0.23z\"\n          },\n          ID_ri: {\n            name: \"Riau\",\n            path: \"m137.98 118.33l-0.59 -0.17l-0.31 -0.80l0.47 -1.73l0.52 -0.54l0.51 -0.12l0.81 0.67l0.38 0.56l0.13 1.39l-0.40 0.36l-1.52 0.38zm-9.70 -8.36l0.39 0.06l1.17 -0.40l0.79 0.06l2.84 1.65l1.82 1.37l0.21 0.32l0.18 0.77l-0.25 1.05l-0.55 0.30l-1.23 -1.23l-1.06 -0.49l-3.49 -0.10l-1.69 0.45l-0.53 -0.03l-1.10 -0.55l-1.28 -1.23l0.53 -0.80l0.86 -0.12l0.19 -0.16l0.00 -0.74l-0.52 -1.13l0.05 -0.99l0.29 -0.42l0.61 -0.11l0.57 0.26l1.04 1.34l-0.17 0.47l0.33 0.40zm7.14 -0.75l2.22 2.51l0.06 0.52l-0.35 0.39l-0.62 0.15l-0.49 -0.10l-2.44 -1.71l-3.16 -1.62l-0.59 -0.09l-0.60 0.19l-0.60 -0.53l0.95 -1.65l0.51 -0.20l0.71 0.00l1.46 0.43l1.54 0.72l1.40 0.99zm-11.06 1.94l-0.42 0.00l-1.53 -1.44l-0.36 -0.35l-0.43 -0.81l-0.65 -3.48l0.04 -1.92l0.11 -0.22l0.83 -0.18l0.52 0.13l2.96 2.65l0.28 0.46l0.02 0.33l-0.56 1.71l0.06 1.07l0.35 1.12l-0.06 0.28l-1.16 0.65zm1.69 -8.98l0.17 2.88l-0.24 0.35l-0.52 -0.24l-2.64 -2.52l-0.81 -0.26l-1.98 -0.16l-0.82 -0.36l-0.96 -0.93l-0.88 -1.49l0.27 -0.22l0.81 -0.04l1.85 0.75l2.93 0.40l1.78 0.47l0.75 0.43l0.29 0.94zm-15.46 -4.50l-0.79 -0.03l-1.10 -0.31l-0.38 -0.21l-0.39 -0.50l-0.93 -2.49l0.08 -1.32l0.19 -0.69l0.55 -0.52l3.47 -0.99l0.65 0.18l0.34 0.31l1.26 1.70l0.05 0.89l-0.76 0.97l0.01 1.35l-0.24 0.47l-1.28 0.99l-0.73 0.20l0.00 -0.00zm-16.92 -7.07l0.82 -0.13l0.95 0.59l0.75 0.15l0.51 -0.39l-1.14 -0.71l-0.32 -0.63l-0.08 -0.78l0.20 -0.39l0.95 -0.55l2.40 -0.27l2.46 0.31l-0.12 0.51l0.35 0.77l3.45 2.31l0.74 0.79l0.26 0.81l0.02 1.34l0.72 2.11l0.68 1.09l2.34 1.09l0.75 0.06l1.72 -0.42l1.21 0.33l4.51 3.78l2.02 1.07l1.09 3.06l-0.19 1.73l0.40 1.37l0.43 0.63l3.29 3.10l0.69 0.50l1.38 0.63l0.52 0.07l2.40 -0.22l2.61 0.16l0.69 0.26l0.48 0.37l2.56 3.08l0.18 0.53l-0.15 0.67l-8.84 4.63l-0.71 -0.37l-0.73 -0.82l-1.00 0.01l1.90 1.34l0.82 0.24l1.24 -1.12l4.24 -0.78l4.47 -2.52l0.27 -0.20l0.72 -1.14l2.26 -0.84l0.56 0.06l1.16 0.56l5.00 3.76l0.26 0.56l0.98 4.33l-0.63 0.23l-2.97 0.18l-0.28 0.39l-0.11 0.91l-2.66 1.83l0.17 0.28l0.32 -0.05l0.68 -0.57l0.68 -0.16l0.58 0.05l0.05 0.16l-0.37 0.47l1.63 0.21l0.05 0.21l1.63 0.52l0.89 1.31l-0.63 -0.10l-0.89 0.16l-1.68 0.73l-0.21 0.21l0.16 0.26l-0.30 0.66l-2.63 1.75l-0.38 2.14l0.10 0.42l1.00 0.98l0.00 0.00l-1.18 0.12l-0.84 0.47l-0.39 -0.31l-3.61 -0.62l-0.84 0.21l-1.18 -0.08l-0.86 1.35l-0.84 0.98l-2.10 1.50l-0.10 0.35l-0.47 0.45l-0.53 0.86l-0.69 0.08l-0.51 0.60l-0.29 0.06l-0.61 -0.43l-0.67 0.10l-0.81 -0.33l-0.77 -0.02l-0.47 -0.76l-1.22 -0.12l0.04 -0.64l-1.00 -0.51l-0.29 -0.76l-0.57 0.04l-0.86 0.49l-0.39 0.04l-0.20 -0.14l0.00 -0.31l-0.41 -0.35l-0.39 -0.04l-0.37 0.33l-0.92 -0.45l-0.41 0.16l-0.45 -0.33l-0.39 -0.06l-0.47 0.27l-0.12 0.35l-0.24 -0.21l-0.59 0.29l-0.18 0.62l-0.81 0.18l-0.04 0.31l-0.60 -0.10l0.00 0.00l-0.21 -0.13l0.00 0.00l-0.89 0.00l-0.50 -0.32l-1.27 -0.35l0.03 -0.29l-0.35 -0.18l-0.65 -0.88l-1.12 -0.68l-0.44 -0.03l-0.24 -0.35l-1.45 -0.88l-0.09 -0.56l-0.53 -0.12l-0.38 -0.29l0.18 -0.32l-0.09 -0.09l-1.71 -0.61l-0.44 -0.56l-0.65 -0.26l-0.12 -0.41l-1.12 -0.47l-0.35 -0.41l-0.24 0.06l-0.30 -0.15l-0.71 -1.53l0.18 -0.38l0.03 -0.68l-0.80 -0.59l-0.43 -0.07l-0.86 0.26l-0.09 0.15l0.15 0.09l-0.27 0.50l-0.56 -0.44l-0.47 -0.03l-0.21 -0.32l-0.06 -0.62l-0.53 -0.29l-0.33 -0.50l0.00 0.00l-0.12 -0.35l0.12 -0.44l0.00 0.00l-0.53 -0.91l-0.03 -0.24l0.18 -0.18l-0.27 -0.88l0.03 -0.35l0.47 -0.38l0.21 -0.03l0.33 0.47l0.59 -1.03l0.09 -0.85l-0.38 -0.94l0.00 -0.48l0.27 -0.85l-0.38 -1.00l-0.18 -0.24l-0.35 -0.09l-0.65 0.23l-1.09 0.94l-0.24 0.38l-1.09 -0.03l-2.84 -0.79l-0.77 -1.73l-0.38 -0.26l-0.38 -0.15l-0.92 0.47l-0.27 0.00l-0.15 -0.44l0.00 -1.15l-1.27 -2.64l0.09 -0.94l0.83 -1.29l-0.47 -0.73l-1.06 -0.43l0.00 0.00l-0.87 -1.02l0.28 -0.20l-0.12 -0.23l0.12 -0.90l-0.43 0.04l-0.43 -0.47l0.00 -0.23l0.75 -0.04l0.24 -0.27l0.16 -0.63l-0.35 -1.02l-0.39 -0.16l0.04 -0.43l0.55 -0.31l0.63 -0.08l-0.08 -0.31l-0.59 -0.43l-0.28 -0.51l-0.20 -1.59l-0.51 -0.94l-0.24 0.04l-0.24 -0.24l-0.04 -0.39l0.39 -0.27l3.00 -0.16l0.00 -0.35l0.47 -0.12l0.59 0.12l0.28 -0.16l0.04 -0.39l0.79 0.00l0.83 -0.71l0.12 -0.47l-0.24 -0.23l0.08 -0.39l0.43 -0.71l0.08 -0.47l-0.16 -0.31l0.12 -0.39l-0.08 -0.31l-0.59 -0.12l0.04 -0.43l0.27 -0.28l-0.24 -0.78l-1.89 -0.35l-0.28 -0.31l0.00 -0.39l0.47 -1.25l0.24 -2.98l0.51 -1.72l-0.16 -0.94l-0.71 -1.57l-0.16 -1.33l0.04 -0.67l0.35 -1.25l0.82 2.50l0.57 1.20l1.34 1.39l1.53 1.19l0.92 0.49l0.00 -0.00z\"\n          },\n          ID_sa: {\n            name: \"Sulawesi Utara\",\n            path: \"m517.81 102.65l-0.89 1.24l-0.77 2.53l-1.01 1.83l-1.54 2.12l-1.32 0.57l-1.52 1.14l-1.20 1.17l-1.52 2.55l-0.41 1.12l-1.93 2.33l-2.09 1.07l-1.29 0.31l-1.01 0.01l-4.19 0.65l-2.95 0.70l-2.24 0.26l-1.02 -0.31l-2.22 0.02l0.00 0.00l0.27 -0.98l0.82 -1.43l-0.08 -1.01l0.16 -1.08l-0.31 -0.85l-0.54 -0.58l-2.02 -0.35l-1.21 -0.89l-0.62 -0.54l-0.27 -0.85l0.04 -0.46l-0.70 -0.70l-0.86 -0.23l-0.54 -0.39l-0.20 -0.81l0.00 0.00l2.33 -0.11l2.29 0.48l3.00 1.00l0.31 0.04l0.59 -0.34l3.84 0.91l1.58 -0.06l1.24 -0.73l5.33 -2.36l0.42 -0.53l0.83 -2.15l0.99 -0.40l2.68 0.17l0.23 -0.13l0.42 -0.58l-0.01 -0.61l-0.54 -0.32l-0.63 0.03l-0.26 -0.45l-0.03 -0.36l0.46 -0.78l1.13 -0.82l0.98 0.36l0.71 -0.05l2.02 -1.14l0.21 -0.54l-0.54 -1.05l0.05 -0.29l2.62 -2.05l1.07 -0.09l1.71 0.49l0.68 0.55l-0.17 0.54l0.09 0.48l1.44 1.22l-0.32 0.85l-0.60 0.35l-0.65 0.06l-0.32 0.25zm4.74 -20.79l-0.21 0.07l-0.47 -0.20l-0.38 -1.48l0.45 -1.18l0.53 -0.24l0.55 0.33l0.12 0.26l-0.08 0.34l-0.75 0.85l0.03 0.45l0.38 0.56l-0.17 0.24l0.00 0.00zm3.02 -16.98l-0.22 0.56l1.01 1.29l0.17 -0.11l0.42 0.26l0.12 1.26l-0.64 0.96l-0.20 -0.14l-0.17 0.08l-0.09 0.62l-0.16 -0.11l0.02 -0.31l-0.33 -0.56l-0.50 0.02l-0.22 -0.29l-0.41 -0.12l-0.06 -0.29l-0.28 0.05l-0.30 -0.70l-0.03 -0.47l0.47 -1.04l-0.08 -0.16l-0.27 0.00l-0.11 -0.39l0.33 -0.12l-0.08 -0.14l-0.34 0.08l-1.17 -0.73l-0.22 -0.36l0.09 -0.92l0.73 -0.26l1.03 0.19l1.49 1.85l0.00 0.00zm19.42 -3.15l-0.29 0.05l-0.21 -0.30l-1.27 -2.80l-0.13 -1.03l0.27 -0.02l0.41 0.30l1.39 1.87l0.06 0.46l-0.23 1.47zm0.85 -3.22l-1.08 -0.15l-0.16 -1.28l0.72 -0.61l0.98 -1.85l0.00 -0.41l-0.21 -0.19l-1.00 -0.24l-0.17 -0.16l-0.29 -0.96l-0.04 -0.58l0.54 -2.47l0.35 -0.63l1.27 0.23l0.78 0.70l0.96 3.62l-0.78 1.17l-1.28 3.23l-0.59 0.58z\"\n          },\n          ID_sb: {\n            name: \"Sumatera Barat\",\n            path: \"m90.90 179.86l-0.03 0.60l0.27 0.53l-0.07 0.20l-1.00 0.13l-0.47 0.23l1.37 2.66l0.03 0.23l-0.40 0.27l-0.30 -0.17l-0.30 -0.66l-0.20 0.03l-0.43 -0.33l0.20 -0.17l-0.20 -0.33l-0.77 -0.27l0.17 -0.70l-0.20 -0.46l0.07 -0.60l-0.60 -0.80l-0.60 0.07l-0.67 -0.80l-0.67 -1.23l-0.03 -0.23l0.30 -0.60l-0.47 -1.92l0.07 -0.30l1.03 -0.37l1.37 1.73l0.90 0.53l1.20 1.53l0.50 0.37l-0.07 0.83zm-5.50 -4.42l-0.03 0.40l-1.00 0.00l-0.07 0.17l-0.53 -0.46l-0.17 0.50l-0.23 0.13l-0.43 -0.37l0.13 -0.33l-0.37 -0.40l0.30 -0.96l0.00 -0.93l-0.37 -0.80l0.03 -0.56l-0.47 -0.30l0.27 -0.33l-0.10 -0.80l0.23 -0.33l0.50 0.10l0.73 1.03l1.03 0.63l0.30 0.43l0.70 0.30l0.47 1.06l0.37 0.40l-0.17 0.76l-0.63 0.23l-0.49 0.43zm-7.48 -11.39l0.67 1.36l0.50 0.53l0.07 0.37l0.60 0.33l0.43 0.70l0.33 0.73l0.00 0.23l-0.17 0.13l-0.20 -0.07l0.03 -0.36l-0.20 -0.30l-0.23 0.20l-0.37 0.00l-0.23 -0.50l-0.80 0.00l-0.97 -0.83l-0.50 -0.20l-0.87 0.10l-0.27 -0.83l-0.27 -0.13l-0.73 -1.23l0.03 -0.23l0.23 -0.17l0.40 0.23l0.07 -0.13l-0.30 -0.40l-0.13 -0.90l0.17 -0.36l0.53 -0.43l0.60 0.00l1.33 1.13l0.25 1.03zm-13.50 -20.57l0.33 0.99l-0.20 0.07l-0.20 -0.50l-0.13 0.10l0.40 1.29l1.00 0.80l0.10 0.76l0.63 0.76l0.03 0.40l0.43 0.70l-0.13 0.30l0.57 0.66l0.03 0.63l1.03 0.99l0.13 0.33l0.10 0.70l-0.27 -0.23l-0.33 0.03l0.40 0.53l0.73 0.27l0.10 0.27l-0.10 0.43l0.40 0.99l0.67 -0.23l0.47 0.66l0.10 1.46l-0.33 0.50l-0.60 -1.16l-0.13 0.03l0.20 0.99l0.27 0.56l-0.43 0.40l-0.37 -0.30l-0.77 -0.03l-0.43 0.13l-0.07 0.30l-0.57 0.10l-4.10 -2.22l-0.20 -0.56l-0.60 -0.53l0.20 -0.10l0.00 -0.23l-0.63 -1.23l-2.67 -3.94l-0.23 -0.66l-0.40 -0.23l-0.17 -0.30l-0.10 -0.43l0.37 -0.40l0.80 -2.15l-0.03 -1.06l0.63 -0.66l0.40 -0.10l0.43 0.20l1.13 -0.10l0.80 -0.30l0.67 -0.50l0.23 0.03l0.41 0.79zm16.52 -31.94l0.39 0.35l0.67 -0.12l0.32 0.71l1.30 0.47l0.28 0.35l2.13 0.71l-0.20 -0.15l0.00 0.00l1.06 0.43l0.47 0.73l-0.83 1.29l-0.09 0.94l1.27 2.64l0.00 1.15l0.15 0.44l0.27 0.00l0.92 -0.47l0.38 0.15l0.38 0.26l0.77 1.73l2.84 0.79l1.09 0.03l0.24 -0.38l1.09 -0.94l0.65 -0.23l0.35 0.09l0.18 0.24l0.38 1.00l-0.27 0.85l0.00 0.48l0.38 0.94l-0.09 0.85l-0.59 1.03l-0.33 -0.47l-0.21 0.03l-0.47 0.38l-0.03 0.35l0.27 0.88l-0.18 0.18l0.03 0.24l0.53 0.91l0.00 0.00l-0.12 0.29l0.12 0.50l0.00 0.00l0.33 0.50l0.53 0.29l0.06 0.62l0.21 0.32l0.47 0.03l0.56 0.44l0.27 -0.50l-0.15 -0.09l0.09 -0.15l0.86 -0.26l0.38 0.06l0.80 0.59l-0.03 0.68l-0.18 0.38l0.71 1.53l0.30 0.15l0.24 -0.06l0.35 0.41l1.12 0.47l0.12 0.41l0.65 0.26l0.44 0.56l1.71 0.61l0.09 0.09l-0.18 0.32l0.38 0.29l0.53 0.12l0.09 0.56l1.45 0.88l0.24 0.35l0.44 0.03l1.12 0.68l0.65 0.88l0.35 0.18l-0.03 0.29l1.27 0.35l0.50 0.32l0.89 0.00l0.00 0.00l0.24 0.15l0.00 0.00l0.03 1.00l0.15 0.12l-0.12 0.76l0.53 0.44l0.35 -0.26l0.12 0.09l-0.30 0.85l-0.83 1.03l-0.62 0.15l-0.33 0.24l-0.62 -0.03l-0.62 0.62l0.06 0.56l0.35 0.82l0.00 0.23l-0.41 0.47l0.00 0.21l0.41 0.35l0.00 0.23l-0.62 1.11l-2.01 1.23l-1.18 1.79l-1.00 0.26l-0.38 -0.35l-0.62 0.18l-0.56 -0.03l-0.53 0.26l-1.06 -0.03l-0.56 0.35l-0.68 -0.71l-0.15 0.03l-0.18 0.35l-0.50 -0.35l-0.18 0.03l0.21 3.64l0.15 0.41l0.47 0.50l0.15 0.50l0.35 0.41l0.71 0.32l0.38 0.73l0.56 1.68l0.18 1.65l0.00 0.00l-0.24 0.53l0.00 0.00l-0.80 0.97l-0.74 0.56l-1.09 0.44l-0.41 0.44l-1.61 1.11l0.00 0.00l-0.28 -0.54l-2.00 -2.21l-0.40 -1.59l-0.84 -1.17l0.04 -0.46l0.74 -0.67l0.30 -0.59l0.01 -1.18l-0.45 -1.67l-1.99 -2.86l-1.44 -1.76l-0.90 -2.38l-0.76 -0.78l0.36 -0.56l0.05 -0.60l-0.43 -0.98l-0.40 -0.27l-0.75 -0.10l-0.80 -0.75l-0.40 0.29l-0.38 -0.11l0.13 -0.62l0.44 0.07l-0.29 -0.67l-0.38 -0.11l-0.55 -0.84l-0.02 -0.29l0.33 -0.02l-0.33 -0.73l0.30 -0.35l0.00 -0.32l-0.55 -1.55l-0.26 -1.39l-0.28 -0.54l-0.44 -0.62l-2.83 -2.81l-0.72 -1.41l-0.66 -0.87l-2.30 -1.89l0.00 -0.23l-0.49 -0.71l-1.13 -0.68l-0.38 -0.84l0.00 -0.53l-0.69 -1.17l-0.22 -0.14l0.22 -0.66l-0.14 -0.36l0.19 -0.32l-0.58 -0.87l-0.90 -0.61l-0.58 -0.62l-1.35 -0.73l-2.28 -0.95l-0.69 -0.15l-0.42 -0.93l-0.36 -0.35l-0.80 -0.10l-1.11 0.41l-1.18 -0.42l0.93 -1.39l0.75 -0.35l0.79 -0.08l0.63 -0.78l0.87 -1.61l0.47 -0.12l1.22 -0.78l1.06 0.43l1.46 -0.51l0.51 0.67l0.08 0.39l0.63 0.47l0.83 -0.43l0.28 -0.04l0.51 0.12l0.12 0.20l0.63 0.04l0.71 -0.12l0.51 -0.31l0.67 -0.82l0.00 -0.67l-0.67 -0.51l-0.08 -1.17l-0.63 -0.24l-0.63 0.00l-0.28 -0.78l0.00 -0.31l0.28 -0.31l-0.08 -2.08l0.59 -0.35l0.28 0.02z\"\n          },\n          ID_sg: {\n            name: \"Sulawesi Tenggara\",\n            path: \"m446.93 174.58l1.63 0.42l0.58 0.26l0.45 0.54l0.39 0.14l0.70 -0.57l0.72 -0.21l0.40 0.08l0.59 1.35l-0.31 0.58l0.00 0.33l0.17 0.30l1.09 0.55l1.20 0.16l0.44 -0.24l1.11 -1.14l1.51 -0.58l0.00 0.00l2.65 1.08l1.98 0.56l0.64 -0.33l0.74 0.14l1.04 -0.05l0.44 0.23l0.51 0.68l1.08 0.21l0.16 0.33l-0.11 0.88l0.43 0.18l0.44 0.61l0.55 -0.10l0.42 1.04l0.53 -0.03l0.17 0.15l-0.11 0.21l0.13 0.43l0.00 0.00l-0.88 1.22l0.19 0.77l1.32 0.40l0.35 0.36l0.51 0.20l0.71 1.16l-0.15 0.41l-0.36 0.15l-1.82 -1.82l-0.61 -0.36l-0.75 -0.01l0.72 1.29l-0.42 1.26l-1.18 0.47l-0.03 0.39l0.83 1.32l1.66 1.20l2.21 1.22l-0.05 0.23l0.56 0.71l0.10 0.50l0.46 0.30l1.57 -0.14l0.61 0.10l0.10 0.40l-0.50 0.36l-0.16 0.97l0.66 0.34l0.11 0.36l-0.33 0.43l0.57 1.30l0.17 0.13l2.45 -0.18l-0.11 -0.42l-0.84 -0.61l-0.19 -0.42l0.21 -0.11l0.63 0.04l0.69 0.49l0.68 1.57l0.17 1.07l-0.13 2.76l-1.20 0.96l-0.79 -0.49l-1.68 -1.47l-0.30 0.05l-0.16 0.15l0.21 0.41l1.16 1.01l0.36 0.55l0.08 0.43l-0.28 0.34l-0.36 0.15l-0.30 -0.41l-0.56 0.26l-0.66 -1.32l-0.76 -0.50l-1.32 0.76l-0.76 0.25l-0.82 -0.10l-2.74 0.76l-0.75 -0.14l-1.33 0.74l-0.93 0.17l-0.62 1.16l-0.35 1.41l0.33 1.08l0.86 0.79l0.02 0.32l-1.25 1.30l-1.68 0.04l-1.53 -0.70l-2.06 -0.22l-0.56 0.27l-0.41 -0.10l-0.20 -0.41l-0.46 -0.30l-1.57 -0.61l-0.51 -0.50l-0.20 -0.51l-0.56 -0.56l-0.20 -0.45l0.25 -1.82l0.17 -0.14l0.58 -2.14l-0.09 -1.42l0.41 -1.16l0.51 -0.25l0.66 -1.42l-0.06 -1.41l-0.25 -0.56l-1.32 -0.51l-2.39 -0.35l-0.45 -0.35l-1.12 -1.62l-0.46 -0.20l-0.20 -0.36l0.00 -0.50l-0.51 -0.10l-0.61 0.10l-1.02 -1.36l-3.13 -2.72l-0.62 -0.79l-0.43 -0.20l-0.23 -0.68l-0.03 -0.82l0.36 -0.92l1.61 -2.19l0.70 -0.35l0.61 -1.54l-0.05 -2.32l0.15 -0.55l0.35 -0.45l0.02 -1.18l-0.19 -0.08l0.13 -0.38l-0.27 0.15l-0.24 -0.18l-0.12 -0.79l-0.13 0.00l-0.14 0.44l-0.57 -0.13l0.13 0.29l0.21 0.05l-0.04 0.23l-0.31 -0.03l-0.09 -0.71l-0.29 -0.21l-0.02 -0.21l0.47 0.15l0.47 -0.74l0.34 -0.14z\"\n          },\n          ID_sn: {\n            name: \"Sulawesi Selatan\",\n            path: \"m444.97 252.58l1.11 -0.05l1.17 0.37l-0.33 0.47l-0.77 0.12l-3.17 -0.52l-0.43 -0.28l-0.01 -0.24l0.41 -0.27l0.97 0.31l1.05 0.09zm-4.27 -4.15l1.12 0.55l0.46 -0.28l0.15 0.47l-0.25 0.81l-1.67 0.22l-0.61 -0.43l-0.22 -0.64l0.15 -1.19l0.42 0.11l0.45 0.38zm-3.12 -10.68l-0.42 0.95l-0.34 -1.80l0.20 -1.27l-0.46 -2.48l-0.08 -4.31l0.39 -2.09l0.19 -0.34l0.23 -0.03l0.14 0.30l-0.02 0.65l0.46 0.83l0.70 2.68l-0.45 3.92l-0.54 2.99zm-11.04 -76.10l0.40 0.54l0.34 -0.33l0.59 -0.13l0.92 -0.92l0.33 0.17l1.47 -0.13l0.13 0.58l0.84 0.38l1.80 0.00l1.34 0.58l0.80 -2.46l0.00 -0.42l0.29 -0.12l1.27 1.45l0.17 0.46l1.47 2.04l1.13 1.08l1.30 0.67l0.76 0.33l0.84 0.00l0.08 -0.33l0.46 -0.13l1.01 0.15l0.23 0.21l0.77 0.10l4.70 2.00l1.72 0.29l0.96 0.58l0.86 -0.07l0.68 0.12l1.27 0.98l0.62 0.21l0.83 0.06l0.67 1.00l0.45 -0.06l0.64 0.50l1.26 2.55l-0.62 0.17l-0.27 0.27l-0.77 1.49l-0.41 0.23l-0.25 0.76l0.00 0.00l-1.52 0.58l-1.10 1.14l-0.44 0.24l-1.20 -0.15l-1.09 -0.55l-0.17 -0.31l0.00 -0.33l0.31 -0.57l-0.60 -1.35l-0.39 -0.08l-0.72 0.20l-0.70 0.57l-0.39 -0.14l-0.45 -0.53l-0.58 -0.27l-1.64 -0.42l0.00 0.00l0.42 -0.46l-0.77 -1.11l-3.68 -0.97l-0.69 -0.05l-1.64 0.61l-1.83 1.09l-3.43 2.49l-2.96 1.84l1.14 3.00l1.33 0.97l0.58 0.24l0.52 0.88l-0.15 0.85l-0.08 3.50l0.57 1.33l0.32 2.23l-0.13 0.54l-1.16 1.86l-0.34 1.01l-0.18 3.35l0.77 1.06l-0.51 3.74l0.67 1.83l0.46 3.20l-0.54 1.82l-0.90 0.90l-0.52 0.32l-0.01 2.37l-0.73 2.79l2.04 3.47l1.37 4.59l-0.13 0.20l-0.83 -0.28l-1.01 -1.60l-0.36 -0.17l-1.87 0.52l-1.33 0.68l-0.83 0.24l-2.91 -0.58l-1.30 1.09l-0.25 0.75l-0.92 0.61l-1.93 -0.05l-0.31 -0.22l-0.24 -0.53l0.05 -0.28l-0.33 -0.38l-2.76 -0.96l-1.90 -2.82l-0.05 -1.10l0.46 -2.67l0.38 -0.80l1.20 -1.56l0.87 -2.18l0.08 -0.77l-0.38 -0.95l-0.19 -1.40l1.79 -2.95l0.49 -4.11l0.05 -2.35l-0.49 -3.72l-1.06 -1.71l-1.53 -2.99l0.55 -1.42l0.62 -0.86l-0.46 -1.39l0.00 0.00l-0.34 -1.87l-0.50 -1.17l-0.08 -0.92l-0.71 -0.67l0.00 -0.42l0.38 -0.29l0.38 -0.04l0.21 0.29l0.88 -0.25l0.25 -0.21l0.21 -0.58l0.67 -0.25l1.05 0.04l0.04 -0.38l-0.59 -0.67l-0.50 -1.17l0.29 -0.70l-0.10 -0.62l-0.26 -0.33l0.20 -0.88l0.00 -1.02l0.32 -0.75l0.75 0.29l1.05 -0.42l0.50 0.00l0.71 -0.79l0.21 -0.73l1.25 -0.92l0.23 -0.59l-0.10 -0.79l-0.20 -0.36l-0.56 -0.33l-0.92 -0.16l-0.16 -0.20l-0.26 -0.52l0.00 -0.85l-0.30 -0.33l-1.52 -0.73l0.04 -1.30l1.78 -1.28l0.46 -0.43l0.13 -0.36l0.72 -0.10l0.13 -0.33l-0.27 -0.89l1.02 -0.48z\"\n          },\n          ID_sr: {\n            name: \"Sulawesi Barat\",\n            path: \"m421.31 141.44l0.11 0.90l-0.22 0.56l0.01 0.95l0.25 0.89l0.16 1.39l0.09 0.25l0.38 -0.08l0.03 0.51l-0.55 1.21l0.05 0.55l-0.19 0.38l-1.55 0.19l-0.19 0.37l0.55 -0.19l0.11 0.24l-0.57 0.33l-0.65 0.08l0.01 0.26l0.49 0.63l0.32 0.21l0.35 -0.06l0.38 0.56l0.64 -0.07l0.57 -0.46l0.36 0.00l0.76 0.44l0.57 0.55l-0.08 0.27l-0.55 0.56l0.29 0.85l1.04 0.98l-0.08 0.63l0.39 0.13l0.44 0.76l-0.33 0.40l-0.11 0.54l0.40 0.27l0.62 -0.09l0.55 0.24l0.31 -0.12l0.05 2.76l0.14 0.34l-0.36 0.21l0.24 0.89l0.00 0.00l-1.02 0.46l0.26 0.90l-0.13 0.33l-0.72 0.09l-0.13 0.36l-0.47 0.43l-1.77 1.28l-0.04 1.30l1.52 0.73l0.29 0.32l0.00 0.85l0.27 0.53l0.16 0.19l0.92 0.17l0.56 0.33l0.20 0.36l0.10 0.78l-0.23 0.59l-1.25 0.92l-0.21 0.73l-0.72 0.79l-0.50 0.00l-1.05 0.42l-0.75 -0.29l-0.33 0.75l0.00 1.02l-0.20 0.88l0.27 0.33l0.10 0.62l-0.30 0.70l0.50 1.17l0.59 0.66l-0.05 0.38l-1.05 -0.04l-0.67 0.25l-0.21 0.58l-0.25 0.21l-0.88 0.25l-0.21 -0.29l-0.38 0.04l-0.37 0.29l0.00 0.42l0.71 0.67l0.08 0.92l0.51 1.17l0.34 1.87l0.00 0.00l-2.39 -0.92l-1.01 -0.14l-1.26 1.10l-0.50 0.09l-0.98 -0.15l-1.43 0.29l-1.53 0.68l-0.46 0.59l-0.19 -0.09l-1.40 -3.20l-0.13 -0.77l-0.04 -4.60l0.26 -0.25l0.67 -2.89l-0.09 -0.38l-0.30 -0.29l-0.95 -0.17l-0.71 0.33l-0.19 -1.53l0.38 -1.65l0.36 -0.70l0.37 -0.23l0.70 0.56l0.71 0.00l1.74 -1.15l2.39 -2.36l0.00 -1.00l-0.36 -1.06l0.04 -0.81l0.24 -1.24l1.18 -3.31l0.45 -0.61l0.46 -0.25l0.73 -0.24l0.58 0.27l0.32 -0.64l0.27 -1.64l-0.14 -0.30l-0.51 -0.28l-0.12 -0.24l-0.47 -1.72l0.02 -0.51l0.43 -1.07l-0.46 -2.20l-0.10 -1.27l0.03 -0.25l0.66 -0.49l-0.20 -0.95l-0.23 -0.32l0.04 -0.29l0.74 -1.49l1.75 -1.51l0.44 -1.99l0.53 -1.37l0.28 -0.54l0.66 -0.48z\"\n          },\n          ID_ss: {\n            name: \"Sumatera Selatan\",\n            path: \"m148.23 209.56l0.08 -0.33l-0.36 -0.60l-0.40 -0.02l-0.62 -0.29l-0.36 0.09l0.39 -0.49l-0.18 -0.88l-0.30 -0.42l-0.64 -0.50l-0.78 -0.04l0.71 -0.62l-1.09 -1.04l0.26 -0.52l0.57 -0.54l-0.01 -0.57l-0.31 -0.65l-0.56 -0.18l-0.98 0.36l-0.55 -0.30l-0.34 -0.61l-0.40 0.09l-0.57 -0.21l-0.73 -0.01l-0.73 -0.44l-0.49 -0.56l-1.91 -0.31l-0.01 -1.63l-0.46 -0.67l-0.50 -1.37l-0.40 -0.05l-0.29 -0.24l-0.94 0.14l-1.26 -0.06l-0.21 -0.12l-0.26 -0.51l-0.40 -0.16l-0.61 0.29l-0.76 -0.20l-0.68 -0.39l-0.85 -1.08l-0.89 -0.51l-0.17 -0.40l-0.40 -0.40l-0.67 -0.20l0.47 -0.18l0.23 -0.36l1.33 -0.47l0.12 -1.14l0.63 -0.76l0.49 -0.31l0.07 -1.45l0.16 -0.04l0.53 0.30l0.53 0.56l0.36 0.64l0.17 0.05l0.72 -0.74l0.32 -0.72l0.33 -0.09l0.03 -0.14l0.15 -0.93l-0.04 -0.83l0.18 -0.35l-0.21 -0.45l-0.79 -0.09l-0.82 0.32l-0.21 -0.20l-0.07 -0.56l0.16 -0.11l-0.56 0.25l-0.56 -0.26l-0.27 0.12l-0.29 -0.47l-0.03 -0.34l-0.25 -0.11l-0.90 0.56l-0.86 0.03l-0.79 0.56l-0.25 -0.25l-0.63 -0.10l-1.67 -1.52l0.20 -0.50l-0.23 -0.15l0.11 -1.22l-0.29 -0.74l-0.63 -0.58l-0.97 -0.22l-1.15 0.40l-0.47 -0.44l-0.62 -0.14l-0.40 -0.64l-0.30 -1.19l-0.44 -0.15l-0.13 -0.28l-0.88 -0.53l-0.14 -0.71l-0.85 -0.54l-0.21 -0.59l0.00 0.00l0.52 0.15l0.00 0.00l0.40 -0.73l0.61 -0.16l0.20 -0.20l0.81 -0.12l0.41 -0.44l0.08 -0.73l0.56 -0.24l0.85 0.52l0.29 0.00l0.20 -0.20l0.52 0.29l0.57 0.56l0.69 0.16l0.76 0.00l0.09 0.16l0.60 -0.44l0.41 -0.08l0.48 0.20l0.61 -0.65l0.00 -0.32l0.20 -0.20l0.77 -0.32l0.93 -0.76l0.28 0.16l0.28 -0.04l0.45 -0.36l1.05 -1.77l0.49 -0.37l-0.61 -1.00l0.57 -0.84l0.72 0.28l1.90 0.32l0.29 -0.52l0.20 0.04l0.08 0.24l1.13 0.36l1.54 -0.60l-0.16 -0.73l-0.69 -0.68l0.24 -0.60l0.20 -0.29l0.33 -0.12l0.16 -0.44l0.28 -0.24l0.49 0.08l0.32 0.36l0.08 0.77l0.65 0.56l0.16 0.44l0.81 0.44l0.36 0.65l0.53 0.12l0.20 0.36l0.16 -0.04l-0.12 -0.76l0.20 -0.21l-0.20 -1.56l0.08 -0.41l1.09 -0.28l0.69 -0.48l-0.56 -0.48l0.00 -1.33l0.20 -0.40l-0.08 -0.32l0.20 -0.76l0.00 -0.81l1.09 -0.96l2.18 -0.81l1.66 -0.08l0.29 -0.52l0.72 -0.36l0.45 0.08l1.01 0.52l0.50 -0.18l0.75 0.00l1.08 0.27l1.35 -0.32l0.92 -0.43l0.97 0.11l1.02 -0.27l0.32 -0.43l-0.10 -0.75l0.16 -0.27l0.32 -0.16l0.54 -0.11l1.28 0.52l0.00 0.00l0.64 0.99l0.16 0.90l-0.16 0.52l-0.48 0.38l-0.33 0.73l0.00 0.72l0.23 0.42l0.23 -0.09l0.49 -1.19l0.41 0.07l1.27 1.08l2.07 1.27l1.37 0.06l0.74 0.67l0.21 0.47l0.31 1.57l-0.05 0.47l-0.26 0.37l-0.43 0.10l-0.36 0.63l-0.32 -0.06l-0.59 0.48l-1.12 1.79l0.88 0.15l0.27 -0.15l1.03 -1.47l1.05 -0.23l0.44 0.80l1.13 0.06l0.49 0.38l1.53 0.39l1.48 -0.83l2.41 0.84l3.06 0.34l1.63 -0.02l0.28 0.60l-0.46 1.73l0.27 1.43l0.16 0.38l0.73 0.64l0.69 0.20l0.81 -0.03l0.34 0.16l0.21 0.62l-0.19 2.00l0.63 1.29l0.71 0.62l1.02 0.09l0.74 -0.20l0.30 0.06l0.80 0.34l0.44 0.40l0.15 0.97l-0.13 1.25l0.78 1.57l0.00 0.40l-0.31 0.42l-1.70 0.88l-1.11 1.16l-1.18 2.51l-0.34 1.12l-0.15 1.13l0.24 0.90l0.45 0.47l1.30 0.73l0.41 0.97l-0.21 0.85l-0.90 1.40l-0.61 1.28l-0.22 1.65l-0.28 0.36l0.00 0.00l-0.30 -0.55l-0.51 -0.27l-0.21 0.05l-0.06 0.27l-0.29 0.14l-0.76 -0.08l-0.18 -0.14l0.10 -0.45l-0.26 -0.11l-0.03 -0.24l-0.65 0.00l0.00 -0.24l0.30 -0.30l-0.08 -0.05l-0.46 0.05l-0.24 -0.13l0.00 0.27l-0.24 -0.06l0.05 -0.29l0.40 -0.54l-0.29 -0.32l0.00 -0.24l-0.46 -0.38l0.38 0.00l-0.11 -0.32l-0.11 -0.08l-0.32 0.19l-0.24 -0.19l0.05 -0.45l-0.35 -0.27l-0.19 0.16l-0.35 -0.16l0.14 -0.81l-0.60 0.00l-0.18 -0.26l-0.78 0.05l-0.11 -0.72l-0.32 -0.08l-0.54 0.10l-0.33 0.24l-0.29 -1.07l-0.22 -0.13l-0.35 0.45l-0.11 0.57l-0.40 0.32l0.27 0.61l-0.21 0.49l-0.70 0.64l-0.68 -0.24l-0.54 0.27l-0.10 0.51l-0.16 0.08l-0.22 -0.14l-0.27 1.07l-0.43 0.43l0.30 0.35l-0.38 0.05l-0.30 0.33l-0.32 0.96l-0.62 0.43l-0.37 0.51l-0.62 -0.03l-0.62 0.24l-1.13 0.57l-0.08 0.34l-1.48 0.25l-2.21 -0.11l-0.22 -0.05l-0.40 -0.51l-0.67 0.56l-1.21 0.48l-0.62 0.51l-0.62 -0.05l-0.51 0.59l-0.80 0.56l-0.08 0.38l-0.27 0.08l-0.27 0.83l0.30 2.70l-0.65 0.65l-0.27 0.77l0.54 0.33l0.06 0.83l0.67 0.61l0.11 0.35l-0.03 0.35l-0.73 0.94l-0.35 0.11l-0.40 -0.38l-0.30 0.19l-0.40 0.00l-0.46 -0.27l-0.37 0.08l-0.14 0.38l-1.00 0.53l-0.91 -0.26l-0.08 -0.25l-0.19 -0.05l-0.24 0.22l-1.40 0.16l-0.51 -0.38l-0.16 0.89l-0.30 0.35l-0.75 -0.70l-0.35 -0.03l0.00 -0.21l0.43 -0.41l0.00 -0.53l-0.38 -0.49l-0.43 -0.02l-0.05 -0.51l-0.65 0.05l0.00 0.00l-0.05 0.03z\"\n          },\n          ID_st: {\n            name: \"Sulawesi Tengah\",\n            path: \"m491.71 219.55l-1.17 -0.09l-0.65 -1.23l-0.08 -0.80l1.31 0.15l0.49 0.40l0.17 0.36l-0.07 1.21zm-27.91 1.73l-1.00 0.06l-1.68 -2.02l-0.98 -1.56l0.07 -0.81l0.85 -2.25l0.85 -0.57l1.03 0.21l0.20 0.17l1.36 2.60l-0.11 3.33l-0.17 0.61l-0.42 0.23zm12.09 -14.43l0.60 3.99l0.21 0.38l-0.08 1.01l-2.23 1.93l-0.80 1.74l0.07 0.47l0.47 0.37l0.44 1.02l-0.24 1.32l-0.71 1.21l-0.94 0.26l-1.63 -0.58l-2.47 -0.20l-0.47 -0.18l-0.19 -0.93l0.84 -3.01l0.26 -0.61l0.87 -0.52l0.15 -0.34l-0.13 -1.46l-1.01 -2.32l0.74 -1.61l0.38 -0.21l1.03 -0.05l1.14 -0.32l1.43 -1.12l1.63 -0.79l0.64 0.55zm8.55 1.04l0.04 2.14l-0.20 0.85l-0.61 -0.66l0.15 -1.02l-0.73 -1.10l-0.40 0.21l0.16 2.07l-0.36 0.25l-0.61 -0.25l-0.15 -0.25l0.05 -0.41l0.36 -0.51l-0.05 -0.35l-0.14 -0.15l-0.42 0.22l-0.54 1.34l-0.43 1.92l-0.18 2.77l0.73 0.62l0.37 -0.08l2.93 2.31l0.03 0.37l-1.24 1.59l-1.61 0.70l-0.34 -0.09l-0.57 -0.45l-1.67 0.76l-0.45 0.43l-0.23 0.69l0.68 0.05l0.23 0.33l-0.21 0.58l-1.27 2.01l-0.44 0.27l-2.56 -0.12l-0.90 -1.51l-0.61 -1.57l2.87 -4.36l0.80 -2.15l1.25 -5.50l-0.16 -2.80l0.35 -1.30l0.87 -1.75l2.04 -1.44l0.46 -0.13l0.36 0.13l-0.30 0.52l0.24 0.76l1.01 0.56l1.00 1.40l0.40 2.10zm-2.30 -11.67l0.36 0.06l1.48 -0.35l0.72 0.69l0.35 0.72l-0.09 0.72l-1.57 2.06l-0.25 0.13l-1.36 -0.08l-0.88 -0.89l-0.88 -1.20l-0.18 -0.47l-0.02 -0.73l0.94 -1.04l0.66 -0.14l0.72 0.52zm2.16 -48.96l0.48 0.99l-0.70 1.14l0.85 1.58l0.44 -0.07l0.41 -0.99l0.48 -0.37l0.18 -0.48l0.59 -0.66l0.81 -0.37l2.51 1.18l-0.44 2.76l-0.67 0.40l-0.59 0.85l-0.52 0.04l-1.18 -0.55l-0.26 -0.59l-0.67 -0.66l-0.52 0.22l-0.26 0.48l-0.18 0.59l-0.11 1.69l-0.18 0.29l-0.33 0.00l-0.48 0.33l-0.52 -0.26l-0.44 0.00l-0.33 -0.15l-0.07 -0.40l0.18 -0.26l0.37 -0.04l0.81 -0.92l-0.30 -1.07l-0.26 -2.17l-0.19 -0.33l-0.41 0.26l-1.18 1.32l-0.26 1.07l-0.74 0.92l-0.04 0.29l-1.18 1.07l-0.41 0.18l-0.55 -0.11l-0.70 -1.62l-0.55 -0.22l-0.18 -0.33l0.00 -0.85l0.48 -1.84l1.00 -1.21l0.26 -0.51l0.33 -0.40l0.44 -0.04l0.74 0.44l0.37 -0.26l1.96 -0.59l0.63 0.70l0.44 -0.88l0.30 0.00l0.34 0.41zm-33.95 -41.37l0.42 0.06l2.03 -0.31l0.94 -0.82l0.30 0.00l0.32 0.22l0.00 0.42l-0.20 0.29l-0.59 0.02l-0.24 0.15l0.21 0.11l0.17 0.70l0.59 0.84l0.92 0.96l0.57 0.26l0.66 0.17l5.74 -0.78l0.19 0.11l0.58 1.19l0.32 0.13l0.35 -0.08l0.87 -0.72l0.48 0.02l1.83 0.74l0.00 0.00l-2.26 0.85l-0.26 -0.03l-0.52 0.60l-0.38 0.00l-0.13 0.65l-0.30 0.27l-0.42 -0.17l-0.49 -0.52l-0.48 -0.80l-0.85 0.14l-0.79 0.61l-1.11 0.29l-2.07 0.96l-1.45 0.00l-0.48 0.42l-1.33 -0.05l-0.89 -0.51l-0.35 0.41l-0.02 0.96l-0.52 0.10l-0.97 -0.38l-1.06 0.38l-0.35 0.34l-0.06 1.06l-0.32 0.17l0.26 0.43l0.58 0.32l0.49 0.78l1.07 0.34l0.69 0.03l0.17 1.46l-0.29 0.50l0.00 0.00l-1.37 -0.41l-1.73 0.44l-0.62 0.82l-2.00 -0.24l-1.53 0.35l-0.59 -0.19l-0.42 -0.45l-1.92 -0.58l-0.81 -0.52l-3.39 -0.19l-1.14 0.65l-1.68 0.58l-1.70 1.71l-2.12 3.10l0.35 0.33l-0.54 0.83l-0.20 2.11l-0.59 0.63l-0.49 -0.07l0.07 1.34l-0.46 1.00l-0.05 1.36l0.37 0.56l0.05 0.85l0.61 1.46l-0.27 0.85l-0.13 2.21l0.29 0.72l1.21 1.80l2.38 2.64l0.19 0.46l0.48 0.28l0.36 -0.03l0.76 -0.52l0.33 -0.07l0.58 0.43l0.23 0.56l1.10 0.11l1.44 2.34l-0.45 1.51l0.07 0.59l0.28 0.46l0.52 0.22l1.03 2.16l0.51 0.06l0.82 -0.43l0.25 -0.56l0.51 -0.22l0.68 0.01l0.00 0.72l0.20 0.34l0.51 0.18l1.18 -0.16l2.43 0.30l0.43 -0.29l0.95 -1.24l1.08 -2.17l2.22 -2.78l0.39 -0.12l0.29 -0.47l0.86 -0.67l0.66 -1.19l0.62 -0.35l1.15 -0.29l0.21 -0.93l0.50 -0.15l0.34 -0.02l0.33 0.29l-0.33 1.48l0.25 0.37l0.25 0.00l1.13 0.65l2.18 0.25l0.91 0.39l1.32 -0.88l0.75 -0.14l0.69 0.28l0.49 0.02l0.51 -0.51l0.39 -1.97l1.50 -0.58l0.97 0.43l2.68 -1.00l3.73 0.53l1.70 -0.01l2.61 -0.26l0.70 -0.36l-0.07 -0.26l-1.44 -0.51l-1.99 -0.20l-0.47 -0.30l0.03 -0.27l1.48 -0.63l1.52 -0.21l1.82 0.03l0.50 -0.15l0.35 -0.65l0.23 -0.01l2.66 0.11l1.54 0.59l1.69 0.91l0.75 1.92l-0.14 1.24l-0.79 0.92l-0.34 1.94l-0.50 0.68l-0.32 0.21l-1.15 -0.18l-0.39 -0.20l-1.26 -1.46l-0.33 -0.90l-1.46 -0.34l-4.31 0.63l-0.40 0.54l-0.11 0.72l-0.49 0.92l-1.30 1.42l-1.00 1.73l-1.18 0.94l-2.07 2.22l-1.12 1.42l-3.72 2.08l-2.62 0.34l-1.01 0.66l-2.00 0.39l-0.66 0.50l-0.97 2.39l-0.85 0.86l-0.48 0.26l-1.08 0.19l-1.11 -0.06l-0.33 -0.60l-1.27 -1.30l-1.95 -0.84l-0.51 0.26l-0.17 1.00l0.87 2.52l0.38 -0.30l1.08 -0.06l0.91 1.00l1.53 2.23l0.85 0.34l0.91 -0.16l0.78 0.23l2.11 2.17l2.27 3.87l0.78 2.54l2.03 1.65l3.05 2.14l0.02 0.68l-0.72 1.11l-0.02 0.37l1.91 1.71l0.25 0.15l0.55 -0.25l0.93 0.68l-1.09 1.29l-0.98 -0.27l-0.33 0.32l0.00 0.00l-0.12 -0.43l0.11 -0.20l-0.17 -0.15l-0.53 0.02l-0.42 -1.04l-0.55 0.10l-0.43 -0.61l-0.43 -0.18l0.11 -0.88l-0.16 -0.32l-1.08 -0.21l-0.51 -0.69l-0.43 -0.22l-1.05 0.05l-0.74 -0.14l-0.65 0.33l-1.98 -0.55l-2.65 -1.08l0.00 0.00l0.25 -0.76l0.41 -0.23l0.77 -1.49l0.27 -0.27l0.62 -0.17l-1.26 -2.55l-0.64 -0.50l-0.45 0.06l-0.67 -1.00l-0.83 -0.06l-0.62 -0.21l-1.27 -0.98l-0.68 -0.12l-0.86 0.07l-0.96 -0.58l-1.72 -0.29l-4.70 -2.00l-0.77 -0.10l-0.23 -0.21l-1.01 -0.15l-0.46 0.13l-0.08 0.33l-0.84 0.00l-0.76 -0.33l-1.30 -0.67l-1.13 -1.08l-1.47 -2.04l-0.17 -0.46l-1.27 -1.45l-0.29 0.12l0.00 0.42l-0.80 2.46l-1.34 -0.58l-1.80 0.00l-0.84 -0.38l-0.13 -0.58l-1.47 0.13l-0.33 -0.17l-0.92 0.92l-0.59 0.13l-0.34 0.33l-0.40 -0.54l0.00 0.00l-0.24 -0.89l0.36 -0.21l-0.15 -0.34l-0.05 -2.75l-0.31 0.11l-0.56 -0.24l-0.62 0.09l-0.40 -0.27l0.11 -0.54l0.33 -0.40l-0.44 -0.77l-0.39 -0.12l0.08 -0.63l-1.04 -0.98l-0.28 -0.85l0.55 -0.56l0.08 -0.27l-0.57 -0.55l-0.76 -0.44l-0.36 0.00l-0.57 0.46l-0.63 0.08l-0.38 -0.57l-0.35 0.06l-0.32 -0.21l-0.49 -0.63l0.00 -0.26l0.65 -0.08l0.57 -0.33l-0.11 -0.25l-0.55 0.20l0.19 -0.38l1.55 -0.19l0.19 -0.38l-0.05 -0.55l0.55 -1.21l-0.03 -0.50l-0.38 0.08l-0.09 -0.25l-0.15 -1.39l-0.26 -0.90l0.00 -0.94l0.22 -0.56l-0.11 -0.90l0.00 0.00l1.92 -1.56l0.15 -0.99l0.61 -0.58l0.31 -0.02l0.90 1.93l0.21 0.97l0.57 0.90l0.21 0.03l0.29 -0.53l0.07 -0.52l-0.30 -1.82l-0.82 -1.07l-0.84 -2.81l0.14 -2.57l0.16 0.00l0.15 -0.75l0.64 -1.65l-0.33 -1.19l-1.36 0.42l-0.32 -0.15l-0.71 -0.49l-0.98 -1.82l1.10 0.19l-0.08 -0.58l0.86 0.44l0.51 0.41l-0.05 0.41l0.51 0.34l0.20 0.53l0.71 0.17l0.68 -0.78l0.39 -1.00l-0.04 -1.63l-0.33 -0.61l-1.34 -1.38l-0.12 -0.37l0.42 -0.27l0.82 0.29l0.91 0.03l0.07 -0.26l-0.29 -0.97l-0.59 -0.71l-0.03 -0.23l0.52 -0.81l0.04 -0.65l0.44 -0.68l0.65 -0.42l0.95 -0.11l0.55 -0.40l0.14 -0.78l-0.36 -1.65l0.02 -0.51l0.19 -0.35l0.74 -0.62l0.75 0.00l1.75 -0.97l0.28 -0.50l0.04 -1.51l0.23 -0.72l0.62 -0.45l0.60 -0.01l0.32 0.21l0.08 0.50l-0.22 1.14l0.13 0.40l1.39 0.93l2.68 0.49l0.47 -1.17l0.13 -0.77l0.63 -1.02l0.70 -0.73l1.12 -0.39l0.82 -0.87l0.50 -2.27l-0.18 -1.40l0.20 -0.77l2.11 -0.32l2.48 0.31l0.84 0.34l1.74 1.10z\"\n          },\n          ID_su: {\n            name: \"Sumatera Utara\",\n            path: \"m55.60 131.31l0.42 0.04l0.71 0.82l0.52 0.91l0.04 0.51l-0.33 0.36l0.19 0.23l-0.15 0.80l0.11 0.46l-0.21 0.32l-0.25 0.09l0.36 0.76l-0.06 0.21l-0.21 0.11l-0.38 0.06l0.23 -0.63l-0.10 -0.13l-0.29 0.25l-0.33 -0.15l-0.23 0.08l-0.19 0.42l0.21 0.30l-0.10 0.25l-0.29 -0.40l-0.61 -0.42l-1.40 -0.48l0.59 -0.25l0.04 0.23l0.34 -0.02l0.21 -0.84l0.33 -0.23l-0.06 -1.16l0.21 -0.84l0.42 -0.36l0.44 -0.19l0.17 -0.42l-0.52 -0.72l0.17 0.03zm-0.54 -4.25l0.10 0.23l0.32 -0.23l0.00 0.49l1.11 1.29l0.11 0.57l-0.13 0.36l0.27 0.53l-0.04 0.32l0.98 0.72l0.42 0.55l-0.08 0.91l-0.38 0.02l-0.06 0.23l0.27 0.61l-0.11 0.19l-0.50 -1.18l-0.29 -0.23l-0.99 -1.58l-0.25 -0.11l0.00 -0.40l-1.11 -1.37l0.00 -0.15l-0.32 -0.95l-0.96 -0.47l0.99 -0.46l0.65 0.11zm3.91 -3.00l1.02 0.10l0.51 -0.13l0.29 0.32l1.26 -0.25l1.04 0.99l-0.13 0.43l0.09 0.13l-0.41 0.08l-0.20 -0.21l-0.62 -0.10l-0.53 0.42l-0.38 0.05l-0.42 -0.18l-0.87 0.13l-0.90 -0.34l-0.89 -0.01l-0.32 -0.21l-0.11 -0.67l0.79 -0.54l0.66 -0.11l0.12 0.10zm-18.92 -21.46l0.33 0.76l2.46 3.35l1.77 0.62l2.11 1.87l0.46 1.18l-0.70 1.61l-0.16 4.02l-0.28 0.50l-1.03 1.10l-1.93 -0.49l-0.34 -0.41l0.16 -0.31l-1.33 -3.39l-2.06 -2.14l-0.95 -0.05l-0.47 -0.21l-0.33 -0.97l-0.81 -1.55l-1.64 -2.70l-2.35 -2.29l0.75 -0.31l1.14 0.06l0.49 -0.13l1.39 -1.24l1.11 -0.23l1.49 0.54l0.72 0.81zm16.86 -4.05l0.68 0.12l0.30 -0.51l0.43 0.25l0.39 0.69l-0.69 0.12l-1.27 -0.09l-0.71 -0.26l-0.19 -0.49l0.48 -0.63l0.59 0.25l0.00 0.55l-0.01 0.00zm-35.75 -11.74l-1.73 -0.16l-0.31 -0.19l-0.30 -1.00l-4.10 -2.69l-3.14 -1.12l-1.02 -0.19l-2.02 -1.93l-0.18 -0.60l0.09 -0.29l1.62 -2.03l1.61 0.31l1.96 2.43l0.57 0.26l1.24 0.18l1.95 2.10l2.31 1.59l1.46 0.60l0.48 0.71l0.01 0.46l0.43 1.11l-0.93 0.45zm29.74 3.28l0.61 -2.79l-0.53 -1.62l-0.83 -0.35l0.06 -0.71l-0.41 -0.56l-0.18 -1.00l0.24 -1.41l0.62 -0.21l-0.03 -0.26l-0.50 -0.50l-0.15 -0.65l0.06 -0.38l0.33 -0.50l-0.24 -0.29l0.03 -0.26l-0.95 -0.12l-0.59 -1.06l-0.92 -0.24l0.00 -1.06l-0.27 -0.88l0.03 -0.53l-0.21 -0.26l0.18 -0.12l0.62 0.06l0.09 -0.97l-0.62 -0.65l-0.06 -0.74l-0.50 -0.50l-0.59 -0.12l-0.09 -0.18l2.37 -0.65l0.24 -0.79l-0.38 -0.71l-0.27 0.12l-0.65 -0.44l-0.03 -0.44l-0.27 -0.56l0.33 -0.53l-0.56 -0.41l-0.21 -0.88l-0.74 -0.35l0.03 -0.74l-0.27 -0.18l0.00 -0.32l-0.47 -0.50l-0.33 -0.82l0.44 -0.62l1.48 -1.18l0.12 -0.35l-0.41 -0.74l0.09 -0.32l0.18 -0.03l0.56 0.38l0.15 -0.27l-0.06 -0.38l1.21 -0.65l0.24 -1.33l0.21 -0.29l-0.03 -0.97l0.47 -0.68l-0.15 -0.47l0.41 -0.24l0.03 -0.38l-0.30 -0.53l0.09 -0.21l0.38 0.09l0.56 -0.12l0.27 -0.12l0.06 -0.32l0.77 -0.21l0.80 0.15l0.40 -0.14l0.00 0.00l0.10 2.71l0.77 1.04l1.19 -0.04l1.49 0.64l1.11 0.66l0.82 1.30l1.74 0.44l0.35 0.59l-0.10 0.53l0.23 0.83l2.14 1.41l2.23 0.73l1.77 0.98l3.96 2.50l1.18 1.06l1.21 0.47l0.92 0.65l0.72 1.28l0.36 0.35l0.52 0.31l1.36 0.41l1.86 1.05l2.36 2.36l1.38 1.10l0.13 0.33l0.10 2.19l-0.14 0.60l-0.58 0.79l0.04 0.44l1.14 1.28l-0.27 0.26l0.51 -0.15l-0.31 -0.75l0.24 -0.46l-0.53 -0.40l-0.38 0.04l-0.03 -0.14l0.94 -0.63l0.40 0.07l0.71 0.77l-0.07 1.39l0.73 1.70l0.13 -0.02l-0.40 -1.63l0.00 -0.73l0.30 -0.53l0.59 -0.35l0.62 0.02l0.72 0.90l0.65 1.27l0.54 0.52l0.22 0.56l-0.40 1.27l0.12 2.00l0.71 1.57l0.16 0.94l-0.51 1.72l-0.24 2.98l-0.47 1.25l0.00 0.39l0.28 0.31l1.89 0.35l0.24 0.78l-0.32 0.27l-0.04 0.43l0.59 0.12l0.08 0.31l-0.12 0.39l0.16 0.31l-0.08 0.47l-0.43 0.71l-0.08 0.39l0.24 0.24l-0.12 0.47l-0.83 0.71l-0.79 0.00l-0.04 0.39l-0.28 0.16l-0.59 -0.12l-0.47 0.12l0.00 0.35l-3.00 0.16l-0.39 0.27l0.04 0.39l0.24 0.24l0.24 -0.04l0.51 0.94l0.20 1.59l0.28 0.51l0.59 0.43l0.08 0.31l-0.63 0.08l-0.55 0.31l-0.04 0.43l0.39 0.16l0.35 1.02l-0.16 0.63l-0.24 0.27l-0.75 0.04l0.00 0.23l0.43 0.47l0.43 -0.04l-0.12 0.43l0.12 0.71l-0.28 0.20l0.51 0.74l0.55 0.43l-2.13 -0.71l-0.28 -0.35l-1.30 -0.47l-0.32 -0.71l-0.67 0.12l-0.39 -0.35l-0.28 -0.04l-0.59 0.35l0.08 2.08l-0.28 0.31l0.00 0.31l0.28 0.78l0.63 0.00l0.63 0.24l0.08 1.17l0.67 0.51l0.00 0.67l-0.67 0.82l-0.51 0.31l-0.71 0.12l-0.63 -0.04l-0.12 -0.20l-0.51 -0.12l-0.28 0.04l-0.83 0.43l-0.63 -0.47l-0.08 -0.39l-0.51 -0.67l-1.46 0.51l-1.06 -0.43l-1.22 0.78l-0.47 0.12l-0.87 1.61l-0.63 0.78l-0.79 0.08l-0.75 0.35l-0.93 1.39l-0.20 -0.06l-0.26 -0.21l0.32 -0.15l0.00 -0.87l-0.79 -0.48l0.42 -1.16l-0.58 -2.95l-1.17 -3.28l-1.23 -2.78l-2.17 -6.42l-1.33 -3.04l-0.83 -1.06l0.01 -0.33l0.19 0.01l0.45 0.48l0.19 0.08l0.19 -0.16l0.85 -1.33l0.02 -0.83l-0.92 -1.36l-0.76 -0.62l-0.26 0.04l-0.23 0.27l0.50 0.15l0.21 0.68l-0.41 0.03l-0.74 -0.47l-2.04 -2.76l-0.56 -0.51l-1.45 -0.92l-3.43 -1.71l-1.55 -1.11z\"\n          },\n          ID_yo: {\n            name: \"Yogyakarta\",\n            path: \"m270.33 268.51l-2.04 -0.09l-5.85 -2.13l-0.41 -0.33l-0.25 -0.48l-1.97 -0.62l-2.48 -1.28l-1.29 -0.48l0.00 0.00l0.58 0.03l0.31 -1.28l0.40 -0.24l0.20 -0.42l0.26 -0.10l0.34 -0.51l0.12 -0.88l-0.32 -0.28l0.18 -0.43l0.61 -0.16l1.26 0.13l0.29 -0.12l0.20 0.17l-0.03 0.59l0.26 0.14l0.57 -0.77l2.39 -1.88l0.81 3.89l0.32 0.06l0.43 0.40l0.36 -0.23l0.23 0.09l0.21 0.34l1.10 -0.23l0.14 0.14l0.24 -0.23l0.19 0.33l0.41 -0.05l0.17 -0.22l0.32 0.13l0.37 0.46l0.24 -0.27l0.29 0.17l-0.05 0.89l-0.29 0.84l0.02 1.10l-0.23 0.55l0.57 1.61l-0.05 0.75l0.23 0.18l0.32 -0.38l0.22 0.01l-0.24 0.61l0.08 0.11l0.18 -0.18l0.12 0.05l-0.04 0.50z\"\n          },\n          tl: {\n            name: \"Timor Leste\",\n            path: \"m506.32 285.46l0.03 0.31l-0.19 0.24l-0.04 0.59l-0.20 0.43l0.12 0.56l-0.30 0.15l-0.14 0.43l-0.49 0.07l-0.31 0.40l-0.17 -0.02l-0.11 0.30l0.12 0.25l-0.55 0.68l0.22 0.45l-0.23 0.50l-1.21 0.28l0.14 -0.86l-0.25 -0.61l-0.83 -0.81l-0.21 -0.04l-0.70 0.42l-0.20 0.48l-0.41 0.11l-0.26 -0.32l-0.46 0.02l-0.88 -1.19l0.00 0.00l1.84 -0.67l0.56 -0.70l1.86 -0.70l3.25 -0.75zm48.01 -12.17l-2.76 2.21l-1.31 1.34l-3.94 1.30l-2.31 0.34l-1.29 0.62l-0.72 0.70l-0.34 0.84l-0.80 0.89l-2.60 0.43l-2.96 0.26l-3.63 2.38l-1.70 0.07l-1.08 0.28l-6.72 2.18l-1.12 0.66l-2.05 1.97l-1.42 0.21l-0.69 0.46l0.00 0.00l-0.16 -1.19l-0.48 -0.56l-0.04 -0.58l-0.97 -0.67l-0.26 -1.08l0.05 -0.39l0.28 -0.57l1.04 -0.02l0.72 0.56l0.03 -0.14l0.64 -0.38l0.69 -0.08l-0.15 -0.75l0.26 -0.89l-0.02 -0.85l-0.61 -0.51l-0.26 -0.05l-0.41 -0.45l-0.28 0.63l-0.32 0.34l-0.61 0.17l-0.67 0.52l-0.45 0.01l-0.51 -0.25l-0.23 -0.36l0.01 -0.52l0.30 -0.63l-0.20 -0.08l0.00 0.00l0.55 -0.40l2.12 -3.05l0.28 -1.37l0.62 -0.80l1.46 -0.43l3.37 -0.66l4.92 -0.72l2.35 -0.85l1.62 0.11l0.84 0.22l0.61 0.34l0.95 0.07l2.69 -0.44l0.93 -0.38l1.23 -0.85l0.93 -0.06l1.61 0.48l0.64 0.54l0.39 0.04l3.60 -1.08l2.20 -1.11l1.84 -0.62l3.35 0.15l1.81 1.11l0.02 0.64l-0.88 0.75z\"\n          },\n          my_sb: {\n            name: \"Sabah Malaysia\",\n            path: \"m384.46 12.92l-0.36 0.04l-1.07 -0.26l-0.27 -0.31l0.13 -0.24l0.97 -0.08l0.68 -0.27l0.12 -0.23l-0.10 -0.21l-0.61 -0.08l-0.06 -0.24l0.18 -0.18l0.99 -0.25l0.42 0.30l0.40 0.67l-0.04 0.47l-0.21 0.26l-1.17 0.61l0.00 0.00zm-11.24 0.77l0.28 0.13l0.42 -0.06l0.66 -0.28l3.21 -3.97l0.11 -0.31l-0.43 -1.17l0.02 -0.42l0.65 -0.77l0.36 -0.24l0.96 -0.15l0.57 0.19l1.23 0.78l0.06 0.98l-0.13 0.46l0.14 1.62l0.60 2.21l3.09 1.74l1.59 0.03l1.55 0.40l0.49 0.40l0.83 1.18l0.26 0.63l-0.29 2.25l-0.22 0.13l-0.66 -0.10l-0.51 0.20l-0.51 0.40l-0.21 0.48l0.03 0.25l1.05 1.54l0.21 1.84l-0.78 0.73l-2.20 0.76l4.83 -0.33l1.81 -0.65l1.73 -1.79l0.35 -0.09l0.72 0.72l1.32 2.69l-0.77 0.93l-0.69 0.12l-1.89 -0.18l-0.40 0.28l0.17 0.74l0.65 1.21l2.94 -0.08l0.53 -1.68l0.35 -0.29l1.42 -0.41l1.99 0.35l1.75 0.85l1.80 1.20l1.21 0.88l0.75 0.80l4.20 2.79l2.34 0.44l0.56 -0.15l0.50 -0.39l1.01 -0.13l0.85 0.69l0.64 1.01l-0.06 2.09l-0.84 1.29l-0.91 0.63l-1.75 0.73l-2.71 0.73l-3.66 1.46l-2.63 -0.27l-1.78 -0.70l-0.58 -0.54l-1.02 -0.09l-2.54 1.28l-1.16 1.27l-0.14 0.60l2.59 2.98l2.33 1.51l0.22 -0.31l0.18 -0.03l0.77 0.35l0.03 0.48l-0.34 0.46l0.73 0.65l0.60 -0.43l0.88 0.07l0.87 1.44l-0.26 0.39l-1.39 1.11l-2.49 0.05l-3.82 0.71l-1.01 0.30l-2.23 1.14l-1.56 -0.38l-0.74 -0.71l-2.94 -1.51l-1.10 0.36l0.39 1.49l-0.88 1.16l-0.15 0.50l0.00 0.00l-0.24 -0.17l-0.89 0.26l-1.21 -0.34l-0.24 -0.15l-0.40 -0.86l-3.02 -2.15l-0.53 0.21l-0.09 0.19l-0.64 0.16l-0.59 -0.11l-0.65 0.17l-1.11 -0.15l-0.34 0.39l-0.28 -0.30l-0.65 -0.06l-0.29 -0.23l-0.73 -0.18l-0.53 0.41l-0.69 0.20l-0.49 -0.28l-0.26 0.11l-0.38 -0.48l-0.41 -0.25l-0.26 0.50l-0.28 0.16l-0.31 0.10l-0.53 -0.16l-0.77 0.24l-0.25 -0.61l-0.38 -0.12l-0.41 -0.45l-0.54 0.67l0.05 0.62l-0.47 0.08l-0.37 -0.16l-0.23 0.54l-0.55 0.14l-0.19 -0.63l-1.17 -0.97l-1.52 0.35l-0.30 -0.18l-1.41 -0.21l-0.15 0.11l-0.13 0.64l-0.85 0.33l-0.39 0.76l-0.20 0.13l-0.65 -0.50l-0.11 -0.49l-0.27 -0.20l-1.51 -0.30l-0.33 -0.57l-0.53 0.19l-0.12 1.04l0.14 0.42l-0.72 0.60l-0.13 0.57l-0.41 0.11l-0.14 -0.33l-0.40 -0.06l-0.79 0.91l-0.37 -0.03l-0.33 0.67l-0.04 0.93l0.00 0.00l0.00 0.03l0.00 0.00l-0.34 -0.07l-0.55 -0.43l-0.31 -0.74l0.43 -1.10l0.00 -5.70l-0.62 -3.49l-0.49 -4.11l-1.71 -0.26l0.00 0.00l0.88 -0.36l0.50 -0.46l0.28 -1.91l-0.26 -0.40l-0.51 0.04l-0.77 -0.35l-2.17 -1.53l0.36 -1.58l2.56 -2.01l4.05 -0.05l0.95 -0.24l0.54 -0.52l0.80 -1.40l0.41 -1.77l2.29 -1.61l0.04 -1.03l0.64 -1.34l0.34 -2.59l3.78 -4.07l2.98 -2.25l0.11 -0.88l2.36 -2.71l-0.01 -1.25l0.24 -1.27l1.02 -2.10l0.66 -0.87l0.21 -0.09l1.14 1.00l0.12 0.28l0.34 2.52l-0.14 0.80l-0.72 0.93l-0.50 1.03l-0.07 0.73l0.12 0.30zm8.64 -12.73l-0.11 1.40l-0.45 1.03l-1.75 0.18l-0.89 0.54l-0.33 0.56l-0.22 0.00l-0.25 -1.14l0.18 -1.75l0.14 -0.21l1.29 -0.87l1.34 -0.32l0.80 0.15l0.25 0.43zm-7.06 1.69l-0.31 0.66l-0.08 -0.08l0.46 -1.49l2.11 -1.36l0.29 0.77l0.01 0.72l-1.04 0.43l-1.44 0.35z\"\n          },\n          my_sr: {\n            name: \"Serawak Malaysia\",\n            path: \"m280.29 86.23l-0.75 0.29l-0.30 -0.21l-0.81 -1.34l0.14 -0.81l-0.32 -4.06l0.18 -0.59l0.44 -0.22l0.44 0.35l0.47 1.06l-0.08 3.49l0.59 2.04zm70.35 -45.54l1.71 0.26l0.49 4.11l0.62 3.49l0.00 5.70l-0.43 1.10l0.31 0.74l0.55 0.43l0.34 0.07l0.00 0.00l-0.01 0.13l0.00 0.00l-0.67 2.08l-0.45 0.41l-0.85 0.23l0.13 0.31l0.78 0.56l0.05 0.18l-0.04 0.56l-0.52 1.04l-0.14 0.71l-0.05 1.55l0.16 0.86l0.38 0.47l0.13 1.10l0.58 1.01l-0.40 0.58l-0.40 -0.63l-0.34 -0.02l-0.63 1.26l-0.42 2.81l0.05 0.18l0.71 0.52l0.00 0.20l-0.81 0.67l-0.13 0.25l0.00 0.84l-0.18 0.34l-1.03 0.14l-0.81 0.77l-1.23 0.09l-0.04 -0.41l-0.61 -0.65l-0.34 0.83l-1.59 1.06l-0.25 1.06l-0.96 0.77l0.04 0.18l0.51 0.13l0.18 0.27l-0.18 0.34l0.00 0.43l-0.60 0.52l0.00 0.38l0.23 0.14l0.00 0.49l-0.09 0.41l-0.31 0.38l0.31 0.47l0.99 -0.31l0.67 0.79l0.11 0.34l0.47 0.34l-0.07 0.31l-0.60 0.50l-0.78 -0.02l-0.58 0.18l-0.45 0.41l-0.20 0.59l-0.67 0.00l-0.51 0.59l-0.43 0.23l-0.67 -0.11l-0.31 0.63l0.33 0.43l-0.04 0.23l-0.78 0.49l-1.84 0.20l-0.34 1.31l0.02 0.82l0.16 0.29l0.35 0.19l-0.16 0.96l0.20 0.45l0.76 -0.34l0.51 0.25l0.02 0.22l-0.69 0.52l-0.05 0.23l0.40 0.81l-0.36 0.34l-0.67 0.11l-0.45 0.64l-0.54 -0.25l-0.56 0.16l0.07 0.27l-0.49 0.66l0.13 0.13l0.11 1.19l-0.13 0.99l-0.38 0.31l-0.52 0.92l-0.80 0.47l-0.12 0.75l0.18 0.30l-0.49 0.81l0.00 0.00l-0.21 0.42l-0.39 0.12l-2.58 -1.51l-0.58 0.54l-1.58 0.66l-0.70 0.09l-0.24 0.45l0.00 0.00l-0.34 0.14l0.00 0.00l-0.20 -0.28l-0.97 -0.65l-3.05 0.32l-0.40 0.45l-1.92 0.79l-0.07 0.17l0.13 0.20l-0.28 0.84l-1.90 0.77l-0.38 0.45l-0.35 0.22l-0.30 0.00l-0.32 -0.10l-0.75 -1.34l-0.67 -0.30l-0.82 0.05l-0.57 0.22l-0.33 0.30l-0.40 -0.02l-0.30 -0.37l-0.60 -0.37l-0.17 -0.35l-0.72 -0.50l-0.77 -0.20l-1.60 0.15l-0.75 -0.22l-0.38 -0.67l-0.37 -0.05l-1.35 0.45l-0.75 -0.07l0.15 -0.45l0.30 -0.30l0.50 -0.17l0.50 -0.99l0.17 -0.05l-0.13 -0.40l-0.52 -0.30l-0.63 -0.12l-0.92 0.07l-0.82 -0.22l-0.20 0.05l-0.35 0.47l-0.57 0.30l-0.35 -0.02l-0.55 -0.40l-1.65 0.12l-2.90 -0.37l-1.02 0.37l-0.08 0.30l-0.55 0.27l-1.57 0.35l-1.27 0.79l-0.42 0.00l-0.50 0.55l0.42 0.65l-0.05 0.65l-0.85 0.84l-0.15 1.49l-0.25 0.60l0.03 0.65l-3.22 0.22l-1.35 1.39l-0.32 0.77l-1.70 -0.35l-0.58 0.17l-1.00 -0.52l-0.27 0.02l-1.13 0.82l-0.52 0.07l-0.10 0.52l-0.23 0.02l-0.70 -1.17l-0.77 -0.12l-0.70 0.30l-0.50 0.02l-0.50 -0.32l-1.75 -0.57l-0.32 -0.30l-1.95 0.57l-3.85 0.50l-0.27 0.60l-0.63 0.55l-0.72 0.12l-0.95 0.55l-0.77 0.25l-0.38 0.32l-0.45 0.02l-0.45 -0.45l-0.40 0.67l-0.55 0.12l-0.73 -0.07l-1.20 -0.42l-0.35 -0.27l-0.90 -1.37l-0.97 -0.25l-0.98 0.00l-0.32 -0.97l-0.42 -0.72l-0.48 -0.40l-0.15 -0.52l-0.45 -0.67l-0.73 -0.15l-0.60 0.07l-0.43 -0.35l-0.35 -0.87l-1.49 -0.74l-0.17 -1.39l-0.25 -0.30l-0.50 -0.20l-1.27 -0.05l-0.83 -1.29l-0.35 -0.15l-1.82 -1.81l-0.30 -0.65l0.42 -2.14l-0.15 -0.35l-1.20 -0.30l-0.40 -0.62l-0.45 -0.32l-0.25 -0.59l0.05 -0.47l0.60 -0.07l0.30 -0.75l0.38 -0.22l0.50 -1.38l0.00 0.00l0.15 1.18l-0.07 1.14l0.34 0.66l0.67 0.80l3.27 2.23l0.49 0.54l0.93 0.14l4.69 -0.40l1.11 -1.52l0.23 -0.13l0.20 0.07l2.34 2.65l0.05 0.33l3.85 1.16l0.53 0.29l0.12 0.32l-0.10 0.33l-1.02 0.89l0.20 0.10l0.81 -0.14l0.49 -0.46l0.21 -1.43l0.82 -0.09l2.67 1.23l1.50 1.57l1.60 0.71l2.84 0.53l1.02 -0.22l-1.58 -1.15l-0.78 -0.05l-0.93 0.34l-0.49 -0.06l-1.76 -1.07l-0.78 -1.23l-0.22 -0.67l0.50 -1.62l0.61 -0.28l1.88 -4.57l0.56 -2.04l0.59 -0.83l0.27 -0.15l1.21 0.31l0.42 -0.23l0.37 -0.47l0.03 -0.20l-0.29 -0.08l-2.82 0.38l-0.33 -0.08l0.18 -2.00l0.49 -2.35l0.25 -0.41l0.33 -0.12l1.23 0.72l0.91 0.83l0.45 -0.29l0.97 -0.21l-0.82 -1.93l0.58 -3.30l0.20 -0.38l3.81 -2.63l2.68 -0.44l2.19 -0.12l2.47 -0.43l13.35 -3.37l1.53 -0.48l0.99 -0.54l0.55 -0.52l0.70 -1.07l3.33 -4.02l2.42 -3.54l1.78 -2.00l2.63 -2.14l1.14 -1.11l3.30 -4.26l0.66 -1.33l0.52 -2.04l-0.05 -0.78l-0.50 -1.46l0.07 -0.22l0.53 -0.29l2.04 0.12l0.00 0.00l1.91 0.72l1.54 2.08l0.25 1.72l1.11 1.23l2.52 2.14l1.23 1.41l0.06 0.37l0.25 0.25l0.55 -0.06l1.29 -0.73l1.23 -1.35l0.98 -3.49l-0.06 -1.16l-0.31 -0.31l-0.98 -4.84l0.06 -0.43l1.11 -1.10l1.60 -0.18l0.49 -0.18l0.37 -0.31l0.45 -0.85l0.00 0.00l0.22 1.31l0.00 0.00l-0.24 0.71l0.18 2.15l0.43 1.23l0.74 3.31l2.03 0.73l2.15 0.49l0.31 -0.12l-0.12 -0.92l-1.05 -0.80l-0.25 -0.37l-0.12 -0.74l0.00 -1.41l0.18 -0.49l-0.06 -0.74l-0.98 -3.06l-1.21 -1.58l0.00 0.00l1.25 -0.91l1.14 0.56l0.72 0.55l0.50 -0.10l0.62 -0.45l1.48 -1.70l0.00 -0.00z\"\n          },\n          bn: {\n            name: \"Brunei Darussalam\",\n            path: \"m404.57 47.29l-0.48 0.67l-0.67 -0.01l-3.11 -1.24l2.23 -0.30l2.03 0.88zm-59.64 -4.60l1.21 1.58l0.98 3.06l0.06 0.74l-0.18 0.49l0.12 2.15l0.25 0.37l1.05 0.80l0.12 0.92l-0.31 0.12l-2.15 -0.49l-2.03 -0.73l-0.74 -3.31l-0.43 -1.23l-0.18 -2.15l0.24 -0.71l0.00 0.00l0.29 0.24l0.20 -0.08l1.09 -0.80l0.41 -0.97zm-2.74 0.01l-0.13 0.26l0.63 -0.10l0.03 0.14l0.00 0.00l-0.45 0.85l-0.37 0.31l-0.49 0.18l-1.60 0.18l-1.11 1.10l-0.06 0.43l0.98 4.84l0.31 0.31l0.06 1.16l-0.98 3.49l-1.23 1.35l-1.29 0.73l-0.55 0.06l-0.25 -0.25l-0.06 -0.36l-1.23 -1.41l-2.52 -2.14l-1.11 -1.23l-0.25 -1.72l-1.54 -2.08l-1.91 -0.72l0.00 0.00l1.10 -0.01l0.40 0.19l1.69 -0.24l3.80 -1.65l0.43 -0.28l2.10 -2.16l1.22 -0.92l3.06 -1.91l2.19 -0.88l0.50 -0.10l0.50 0.10l0.10 0.15l-1.97 2.33z\"\n          }\n        },\n        height: 335.58228316462225,\n        projection: {\n          type: \"merc\",\n          centralMeridian: 0\n        },\n        width: 793\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"north_america_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 543.9752077221104,\n          bbox: [{\n            y: -12658749.920443352,\n            x: -19602744.043810368\n          }, {\n            y: -805507.5274078546,\n            x: 8293.375346519799\n          }],\n          left: 0\n        }],\n        paths: {\n          PR: {\n            path: \"M615.15,486.14l0.49,-0.54l4.41,0.24l0.53,0.27l0.25,-0.21l1.74,0.55l-1.52,1.25l-4.61,0.12l-1.07,-0.1l0.09,-0.95l-0.31,-0.64Z\",\n            name: \"Puerto Rico\"\n          },\n          DO: {\n            path: \"M591.08,485.11l1.01,-0.94l0.06,-0.79l-0.32,-0.52l0.75,-0.93l-0.5,-0.96l0.16,-2.32l0.47,-0.33l1.59,0.25l1.43,-0.34l1.49,0.7l1.0,0.03l1.26,0.7l1.15,-0.16l0.52,1.4l1.08,0.56l-0.11,0.58l0.36,0.4l3.61,0.67l1.01,0.41l1.54,1.28l-1.42,1.56l-0.98,-0.9l-2.01,-0.22l-2.55,-0.02l-1.32,0.39l-0.84,0.63l-1.29,0.15l-0.9,-0.61l-2.07,0.34l-0.5,0.35l-0.18,0.93l-1.27,1.96l-0.79,-0.55l-0.56,-1.27l0.01,-1.51l-0.9,-0.91Z\",\n            name: \"Dominican Rep.\"\n          },\n          DM: {\n            path: \"M644.58,500.93l0.23,0.18l0.09,0.55l-0.06,-0.22l-0.26,-0.5Z\",\n            name: \"Dominica\"\n          },\n          LC: {\n            path: \"M646.75,509.74l-0.11,-0.11l0.12,-0.26l-0.02,0.37Z\",\n            name: \"Saint Lucia\"\n          },\n          NI: {\n            path: \"M510.73,514.44l0.06,-0.06l0.48,0.45l-0.55,-0.39ZM511.29,514.84l2.51,-0.37l0.5,-0.47l0.25,-0.88l0.89,-0.25l-0.14,-2.33l1.96,-0.04l1.21,-1.35l1.24,0.92l0.61,-0.04l0.37,-0.69l2.63,-1.95l0.14,-1.0l0.59,-0.38l0.22,-0.7l0.41,-0.19l0.96,0.74l1.13,0.1l3.04,-0.79l2.07,-1.05l-0.18,0.72l0.59,0.49l0.48,1.81l-1.11,1.68l-0.43,1.39l-0.38,2.18l0.2,2.87l-1.09,1.22l0.44,1.35l-0.1,0.78l-0.47,0.37l-0.28,0.9l0.84,1.13l-1.07,1.87l0.22,1.13l0.74,1.26l-0.8,0.2l-1.1,-0.22l-0.86,-0.95l-1.68,-0.44l-1.48,0.48l-3.23,-1.18l-0.9,0.36l-3.52,-3.12l-1.96,-2.65l-3.47,-2.91Z\",\n            name: \"Nicaragua\"\n          },\n          PA: {\n            path: \"M534.6,538.28l0.75,-0.82l-0.31,-1.31l0.78,-0.58l0.11,-0.46l-1.07,-0.96l0.0,-1.44l0.4,-0.43l0.54,0.28l0.65,-0.15l0.56,0.42l0.14,1.01l0.51,0.34l0.2,0.83l0.77,0.44l1.65,0.03l0.34,-0.32l0.89,0.92l1.09,0.25l2.75,-0.57l1.51,-1.01l2.12,-0.65l2.77,-1.97l2.26,0.3l0.98,0.56l2.07,0.1l3.27,1.65l2.03,1.89l-0.23,1.03l1.29,2.33l-0.63,0.53l-0.17,0.77l-0.68,0.51l-0.58,-0.69l-0.66,0.08l-0.06,1.09l-0.55,0.84l-1.99,-3.13l0.67,-0.54l-0.02,-0.64l0.32,-0.26l1.8,1.09l0.45,-0.2l-0.09,-0.48l-1.26,-0.97l-0.37,-0.76l-1.96,-0.04l-0.28,-0.79l-0.59,-0.47l-2.4,-1.47l-0.94,-0.16l-1.58,0.3l-1.08,0.76l-0.56,1.42l-3.31,1.77l-0.0,1.28l2.11,2.54l-1.18,0.19l-0.73,0.74l-1.04,0.23l-0.76,-0.04l-0.82,-3.08l-1.01,-0.08l-0.44,1.11l-0.93,-0.37l-1.33,-2.2l-2.25,-0.36l-0.53,-0.53l-2.23,-0.06l-1.12,0.36Z\",\n            name: \"Panama\"\n          },\n          CA: {\n            path: \"M656.78,311.04l0.24,-0.16l0.13,0.16l-0.06,0.01l-0.31,0.0ZM658.78,310.96l1.32,-2.86l1.52,0.67l0.57,-0.05l-0.0,-0.7l-0.32,-0.25l0.55,-0.85l-0.37,-0.55l-0.78,-0.11l-0.01,-0.43l0.68,-0.71l0.52,0.35l0.69,-0.05l0.26,-0.5l-0.68,-1.17l2.47,-5.27l0.34,-0.49l1.01,-0.41l-0.52,-0.58l1.07,-0.85l0.3,-1.08l0.98,-0.87l0.58,-1.21l3.2,-1.5l1.41,0.61l-1.62,0.22l-0.31,0.33l0.09,1.0l0.56,0.37l0.56,-0.09l-0.02,0.65l-0.32,0.74l-1.15,0.94l-0.25,0.86l-1.47,1.64l-1.55,2.62l-0.63,1.68l0.3,1.48l0.79,-0.27l2.58,-2.87l-0.18,0.68l0.61,0.29l1.02,-0.45l1.08,0.35l-1.88,0.97l-0.63,0.66l-0.05,0.46l0.42,0.2l0.82,-0.39l-0.88,0.8l-0.11,0.47l0.42,0.23l1.26,-0.37l0.85,0.48l1.18,-0.25l0.13,0.51l0.46,0.11l-0.52,1.07l0.29,0.91l0.78,-0.34l0.4,-0.82l0.44,-0.27l0.43,0.17l2.09,-1.46l0.24,0.94l0.61,-0.04l0.38,-0.45l1.78,-0.12l1.47,0.69l0.15,0.68l-3.03,2.63l0.37,0.32l0.62,-0.03l0.27,0.54l0.87,0.13l-0.19,0.41l-1.53,0.81l0.06,0.7l2.53,-0.72l0.75,0.1l2.07,-0.91l-0.6,0.93l-0.76,0.12l-1.38,0.96l0.04,0.81l-1.32,0.41l-0.3,0.4l0.91,0.43l-0.87,0.95l-1.5,-0.7l-1.22,2.12l-1.09,0.78l-1.18,0.26l-2.01,2.83l-2.45,0.37l-0.43,-0.19l2.21,-0.99l1.54,-1.84l1.6,-0.78l0.59,-0.81l-0.53,-0.5l-0.67,0.25l-2.11,-0.25l-0.43,0.23l-0.29,0.96l-1.25,-0.11l-0.27,-0.14l0.07,-1.7l-0.58,-0.22l-1.36,0.21l-0.6,0.79l-2.63,0.59l-7.46,-0.68l-0.64,-0.33l-1.29,0.62l-2.78,0.2l-0.5,-1.6l3.64,-2.99l1.54,-0.89l-0.39,-0.58l-1.45,-0.08ZM683.12,317.23l0.46,0.3l1.12,-0.2l1.62,-2.14l0.85,-0.39l-0.85,1.7l0.07,1.94l0.68,0.3l0.34,-0.18l1.28,-1.47l0.07,1.34l-1.15,2.05l0.08,0.93l-0.93,1.78l-0.88,-0.43l-1.1,0.47l0.18,-2.74l-0.24,-0.4l-0.74,0.07l-1.14,1.28l-0.93,0.54l1.64,-3.37l-0.42,-1.38ZM673.85,292.06l0.2,-0.08l-0.12,0.07l-0.08,0.01ZM674.16,291.85l0.09,-0.48l0.22,-0.03l-0.24,0.43l-0.06,0.08ZM256.05,238.13l-0.69,-2.13l-5.23,-4.12l-0.56,-1.06l-2.14,-1.13l0.48,-1.39l0.0,-0.49l-0.42,-0.4l-3.05,0.12l-1.57,1.06l-2.25,-0.82l-0.7,0.54l-1.85,-0.48l0.0,-77.04l2.6,0.35l2.21,-0.17l3.93,0.93l2.45,1.75l4.29,2.06l5.91,1.83l3.08,0.07l4.41,1.76l0.43,-0.14l0.11,-0.58l-1.11,-1.39l-2.21,-0.71l1.21,-0.07l0.39,-0.4l-0.33,-0.56l-1.23,-0.44l0.75,-1.21l2.32,-0.3l0.47,-1.23l3.54,-0.11l0.18,-1.79l0.56,0.08l0.76,0.92l0.78,0.27l-1.35,1.86l0.49,0.7l2.46,-1.04l2.68,-0.58l1.62,-1.94l2.06,-0.0l0.47,-0.6l-0.18,-0.29l1.17,0.37l3.66,-1.92l1.51,0.1l1.25,-1.39l1.23,-0.64l3.52,0.35l1.28,-0.92l0.43,0.52l-0.42,0.53l-5.94,3.1l-5.64,1.06l-2.08,2.08l-1.86,0.46l-3.86,3.86l0.39,1.1l1.17,0.42l0.3,-0.06l0.08,-0.79l2.01,0.19l0.99,-0.42l0.31,-0.66l-1.07,-0.46l0.04,-0.94l3.95,-1.82l0.83,-0.85l0.03,-0.48l1.67,0.02l0.4,0.71l1.09,-0.84l0.27,1.88l0.34,0.34l2.66,-3.37l1.91,-1.28l4.38,-1.24l0.14,0.8l0.56,0.59l1.44,-0.45l2.44,-1.95l0.62,-1.38l2.98,-1.38l-0.18,-0.7l-1.35,-0.27l-0.12,-0.64l-0.69,-0.34l0.5,-0.82l3.64,2.43l1.47,2.07l1.28,2.66l2.25,2.14l1.83,1.2l2.05,0.64l1.02,-0.03l1.1,-0.71l0.15,-1.01l-0.88,-1.25l0.55,-0.55l0.12,-0.66l0.6,-0.11l1.52,-1.44l-0.12,-0.81l0.98,-0.67l0.39,3.18l1.31,0.85l-1.65,1.97l0.15,0.73l0.82,0.39l4.5,-0.29l1.65,-1.42l0.86,-2.34l4.68,-0.02l2.67,0.36l2.84,1.02l4.28,2.56l6.5,1.11l3.89,1.9l4.54,1.19l5.97,0.68l0.44,-0.47l-0.48,-0.7l1.35,-0.17l4.04,1.2l2.85,1.63l2.05,2.24l-0.32,0.55l-0.78,0.14l-2.46,-0.19l-0.74,0.73l-1.42,0.6l-0.41,0.59l0.05,0.56l-1.1,0.63l-0.23,0.45l0.26,0.46l1.6,0.75l6.39,0.99l7.16,0.22l1.38,-0.43l3.43,-0.24l1.7,-0.54l1.33,0.23l3.11,-1.4l1.32,-0.29l2.18,2.18l2.91,0.28l0.39,1.57l0.66,0.85l0.65,-0.14l0.62,-1.35l1.27,1.61l1.81,1.27l0.28,0.53l-0.22,0.24l-0.99,0.32l-1.34,-0.35l-0.34,0.65l5.23,5.2l1.33,0.89l0.44,-0.55l-2.32,-2.96l-0.13,-1.58l2.37,0.95l0.58,-0.6l-0.85,-1.22l0.17,-0.74l-1.4,-1.4l-0.46,-2.13l-1.51,-1.59l0.01,-0.65l0.99,-0.81l0.07,-0.92l4.4,-0.79l0.8,-0.75l1.29,0.12l0.33,-1.19l0.52,-0.43l1.15,-0.22l1.11,-0.72l0.47,-0.61l0.09,-0.93l-1.14,-0.54l-0.69,0.11l-2.28,0.98l-0.76,1.31l-1.19,-0.18l-2.15,0.78l-1.63,-0.3l-0.88,0.46l-0.02,0.94l-2.44,0.19l-1.81,-0.99l1.71,-2.3l4.42,-0.69l6.43,-2.05l1.7,0.45l0.83,0.62l1.24,3.34l1.45,1.05l2.14,0.56l0.26,0.98l1.54,0.77l2.48,0.01l2.08,-0.6l3.85,2.58l2.05,0.7l2.17,-0.09l1.68,0.45l5.8,-1.27l3.33,0.21l3.16,0.79l1.37,-0.02l2.63,-0.72l0.25,-0.43l-1.57,-1.85l3.48,3.12l2.53,0.84l1.91,-1.1l-0.03,-1.34l-2.23,-1.35l-1.14,-0.15l-2.0,0.53l-1.11,-1.1l0.26,-0.61l-1.12,-1.54l1.75,0.48l2.12,-0.6l0.18,-0.68l-0.54,-0.57l1.0,0.43l1.15,-0.12l2.05,2.05l2.0,0.12l-0.88,1.3l0.47,0.56l1.08,-0.24l0.56,-0.81l1.47,-0.6l-0.87,3.95l-0.83,1.32l-0.06,0.62l0.95,1.28l0.32,1.05l0.94,0.13l1.01,-0.29l-0.19,0.76l0.5,0.26l0.96,-0.24l0.41,0.33l-0.02,0.83l-1.39,0.18l-1.23,-0.44l-0.92,0.18l-0.94,-0.62l-0.58,0.27l-0.1,0.44l2.85,2.78l0.8,1.19l0.36,-0.26l0.21,-0.94l-1.43,-1.65l1.71,0.28l1.42,-0.42l0.8,-2.84l-0.69,-2.51l-1.27,-1.73l0.9,-2.3l1.37,-0.33l1.28,0.34l0.82,-0.28l4.22,-3.58l2.53,-1.36l-0.26,-0.68l-0.7,-0.04l-0.12,-2.04l-0.93,-1.24l-0.82,0.14l-0.79,1.74l-2.13,0.17l0.15,-0.74l2.48,-2.05l-0.38,-0.56l-0.54,-0.0l-0.03,-0.91l1.89,-0.48l-0.37,0.6l0.15,0.48l0.81,0.23l1.56,-1.19l0.19,-0.28l-0.67,-1.5l-0.9,-0.39l-1.4,0.56l-1.55,0.02l-1.86,-1.76l-0.66,0.01l-0.49,0.58l-3.72,-1.55l-1.9,-0.42l-2.51,-2.79l-0.26,-0.67l0.03,-0.82l1.19,-1.59l2.19,-0.44l-0.46,-0.75l0.38,-0.53l-0.2,-0.62l-1.88,0.48l-1.23,-1.3l0.55,-3.8l1.6,-1.31l1.58,0.79l1.07,-0.11l0.96,-1.59l-0.11,-0.57l-2.13,-0.39l3.16,-2.83l2.78,-0.75l0.45,1.21l0.87,0.79l2.71,0.1l0.12,1.13l2.55,1.65l1.11,1.14l0.66,2.24l-0.42,2.27l3.22,2.05l1.49,2.17l0.08,0.87l0.73,0.28l0.7,-0.47l0.71,0.99l-1.48,0.02l-1.34,-0.79l-0.76,0.11l-0.98,1.21l0.13,0.57l2.33,0.31l-4.26,2.97l-0.03,0.67l0.7,0.22l2.37,-0.2l0.47,0.61l1.73,0.68l1.12,-0.19l1.37,-0.78l-0.48,0.42l0.42,0.6l3.63,0.13l-0.89,1.34l-0.8,-0.38l-0.89,0.14l-0.43,0.33l0.12,0.56l2.43,1.56l1.21,1.84l-0.26,0.42l-0.12,3.3l2.08,2.08l0.54,-0.16l1.51,-2.05l0.11,-1.28l1.08,-3.4l1.81,-2.01l0.82,-0.07l2.04,1.79l2.1,1.27l1.2,1.65l0.76,3.06l-0.13,0.49l-0.37,0.07l-0.46,-0.06l-0.68,-0.78l-0.93,0.52l-0.21,0.66l0.25,2.77l0.67,1.73l3.55,3.57l0.8,1.62l0.95,-0.07l3.66,-2.63l0.88,-2.84l2.31,-2.45l1.14,-3.32l-0.01,-1.62l0.33,-0.44l0.63,-0.57l1.05,0.29l2.08,-0.29l0.35,-0.39l-0.25,-0.53l-0.93,-0.36l0.9,-0.63l0.22,-1.42l-2.63,-1.37l-0.12,-2.73l-0.41,-0.85l0.2,-1.35l1.84,0.36l1.94,-0.41l1.6,0.05l3.26,1.29l5.39,0.09l0.83,0.3l-0.33,0.38l-1.25,0.33l-0.07,0.73l2.21,0.76l0.25,1.19l0.43,0.32l1.43,-0.24l2.63,0.7l-1.12,1.01l-1.68,0.81l-0.27,0.54l0.38,0.46l2.78,0.26l0.44,0.61l-0.08,0.49l-1.13,0.81l-1.87,0.8l-1.52,-0.4l-1.76,0.34l-0.29,0.53l1.76,2.93l0.7,0.23l-0.15,0.92l0.28,0.77l3.89,3.71l-0.82,3.23l-0.71,0.5l-1.49,0.23l-1.75,2.04l-1.9,1.27l-1.67,0.38l-2.16,1.45l-0.54,-0.03l-2.12,-2.9l-1.55,-0.39l0.14,-0.56l-1.48,-1.23l-1.69,-0.52l-1.72,1.18l-0.09,0.44l0.74,0.5l1.04,-0.56l0.77,0.23l2.11,1.88l1.96,3.3l-2.07,-0.67l-0.75,0.35l-0.32,0.53l-0.49,-0.15l-2.31,-0.96l-1.67,-1.72l-1.01,-0.39l-2.48,0.39l-3.36,-0.02l-0.3,0.17l-0.2,1.0l0.36,0.83l3.64,1.76l-0.32,0.62l-5.29,4.88l-1.66,0.74l-2.5,-0.08l-3.43,-2.12l-0.51,-0.63l-1.7,-0.48l-3.46,-1.69l-1.19,0.02l-0.13,0.43l-5.19,-0.71l-2.41,0.2l0.02,0.69l2.02,1.02l0.5,-0.71l5.21,1.13l4.96,3.65l3.97,0.57l4.12,0.16l1.55,0.38l-0.0,0.68l-1.25,1.92l-3.07,3.48l-1.06,1.72l-3.4,1.48l-1.03,-0.28l-0.67,-0.6l-0.65,0.15l0.12,0.68l-0.61,-0.29l-1.07,0.08l-0.57,-0.39l-0.32,-0.75l-1.57,0.22l-0.28,0.14l0.02,0.71l0.71,0.65l-1.07,-0.19l-0.26,0.62l0.7,1.09l-0.59,0.76l-0.8,0.4l-1.21,-0.29l-1.09,0.65l-3.61,-1.16l-1.71,-0.23l-0.52,-0.55l-1.85,0.27l-5.48,-1.93l-1.31,-0.93l-0.5,0.03l-0.08,0.5l0.44,0.75l-0.23,0.99l0.72,0.74l1.61,0.22l0.34,-0.54l4.56,1.46l-1.17,0.81l0.4,0.59l1.07,-0.12l2.07,-1.02l2.44,1.47l1.85,0.53l1.11,0.86l0.1,1.45l-0.31,0.8l-1.57,0.34l-1.62,0.92l-2.98,-0.47l-1.69,0.35l-0.39,0.27l-0.04,0.59l0.94,0.99l-1.63,0.36l-1.31,1.88l-1.87,-0.48l-0.25,0.69l1.26,0.76l-0.68,0.6l0.09,0.44l-1.47,0.33l-0.01,0.6l-0.82,-0.08l-0.39,0.58l1.08,1.25l-1.64,0.94l-1.13,1.07l0.05,1.11l-0.84,0.17l-0.03,1.45l-2.23,4.08l-1.17,0.68l0.04,0.68l0.37,0.34l-0.7,3.5l-0.01,5.16l-0.3,1.07l-0.57,0.49l1.02,0.63l0.53,1.11l0.62,0.13l1.29,1.07l-0.25,2.83l0.31,0.39l0.76,-0.81l0.7,-2.56l4.24,0.09l0.33,1.62l3.37,8.51l-0.53,1.32l-1.14,1.18l-0.15,0.57l0.82,0.14l1.49,-0.76l0.08,0.44l0.41,0.02l6.25,-1.94l2.47,0.12l4.07,1.77l4.85,1.18l3.83,2.51l3.13,3.27l9.15,2.98l2.17,1.67l-0.75,1.54l0.23,0.54l1.78,-1.44l2.7,0.19l3.05,-0.4l3.54,0.71l1.2,-0.11l0.61,0.5l1.37,0.06l0.83,0.51l0.74,1.46l-1.04,4.04l0.98,1.59l0.46,1.45l-0.25,1.45l0.17,2.22l-0.69,1.78l0.29,0.77l3.29,3.54l-0.0,0.28l-1.05,0.64l0.01,0.64l1.82,0.13l2.56,1.59l1.5,1.37l1.01,2.14l-1.96,1.65l-0.07,0.46l0.86,0.1l1.98,-1.26l1.2,0.29l1.23,0.67l2.44,2.71l0.51,0.12l0.19,-0.49l-0.21,-0.57l-1.74,-2.01l0.2,-1.08l0.87,-1.35l0.49,-0.24l1.27,0.9l0.64,1.69l0.44,0.24l1.21,-2.46l-1.2,-1.65l0.61,-1.19l1.76,-1.94l0.1,-0.73l-0.45,-1.48l-0.89,-1.02l0.11,-1.38l-0.9,-1.3l-1.03,-4.24l0.24,-0.73l0.57,-0.34l-0.59,-0.76l0.3,-0.66l-0.8,-0.63l0.03,-0.54l-1.48,-1.22l-1.03,-2.08l6.63,-2.52l2.75,-1.62l2.33,-1.91l3.53,-4.05l0.69,-3.04l-0.23,-5.08l-1.67,-4.35l-1.46,-2.05l-2.07,-1.67l-2.34,-1.18l-2.38,-1.8l0.34,-1.38l3.43,-3.62l-0.34,-0.91l0.52,-0.69l-0.0,-0.5l1.1,0.73l0.62,0.0l0.12,-0.71l-0.48,-0.53l0.73,-0.78l-0.2,-0.92l0.37,-0.63l-0.14,-0.59l-0.79,-0.22l0.09,-0.54l-1.07,-1.89l0.66,-0.61l0.11,-0.65l-1.31,-0.5l0.71,-0.88l0.13,-0.69l-2.51,-0.14l1.87,-2.46l-0.03,-1.74l1.04,-0.86l-0.06,-0.65l-2.44,-2.01l-0.55,-2.03l0.01,-1.22l1.01,-0.91l2.5,-1.09l2.42,0.36l5.34,1.64l0.02,0.98l0.49,0.08l2.07,-0.99l1.55,0.36l1.89,1.12l0.46,-0.02l0.05,-0.79l4.4,-1.95l4.02,2.66l1.01,0.05l-0.03,0.81l-0.51,0.86l0.32,0.6l1.38,-0.62l1.18,0.61l0.73,0.85l-0.72,0.26l0.06,0.82l1.3,-0.12l0.69,-0.56l0.74,0.36l-1.03,1.04l0.6,0.65l0.07,0.56l1.7,1.44l3.75,0.87l2.24,-0.1l0.33,0.16l0.37,1.14l0.86,0.33l1.48,-0.45l0.66,-1.1l0.15,0.15l0.31,0.95l-1.13,1.09l-0.66,1.77l0.06,1.31l0.56,0.95l-0.11,0.65l-1.22,0.34l-3.47,-0.06l-0.39,0.59l0.48,0.52l4.32,0.42l0.64,1.5l-0.57,1.4l0.08,1.31l1.62,0.28l-0.46,0.71l0.13,0.78l-0.48,1.39l-0.17,0.13l-0.55,-0.84l-0.42,-0.04l-0.52,0.8l-1.31,0.42l-0.31,0.44l0.35,0.56l2.09,0.51l2.62,-1.45l2.77,-0.13l1.28,0.95l0.27,1.05l0.46,0.5l-0.39,2.0l-0.65,0.93l-2.88,1.11l-0.2,0.44l0.55,0.43l3.32,-1.18l1.62,-3.09l0.4,0.88l-0.81,1.02l-0.02,0.48l0.74,0.05l1.06,-1.18l0.08,2.11l0.79,0.03l0.47,-1.5l2.7,-1.56l1.58,-0.47l1.75,-2.18l1.1,1.16l0.11,1.17l0.41,0.37l0.42,-0.23l0.44,-1.26l-0.61,-1.55l0.95,-0.31l-0.12,-0.77l2.09,-0.44l0.43,-0.42l-0.22,-0.52l-1.22,-0.49l0.57,-0.79l0.75,-0.19l-0.26,-0.9l1.38,0.68l0.55,-0.04l-0.01,-0.81l-1.73,-0.99l-0.27,-0.46l0.18,-0.84l1.88,0.24l0.04,-0.77l-0.54,-0.57l1.18,-2.54l0.73,-0.46l0.9,0.45l0.21,0.29l-0.36,0.38l-1.22,0.63l0.02,0.67l0.54,0.14l1.95,-0.48l0.33,0.44l-0.04,1.96l0.96,-0.46l1.12,1.85l-0.73,0.43l-0.04,0.78l0.86,0.35l0.36,0.62l0.96,-0.45l0.39,0.65l-0.8,0.51l-1.66,0.19l-0.21,0.63l0.47,0.35l0.75,0.0l2.14,-0.4l0.42,1.6l1.14,-0.04l0.52,0.98l-2.36,1.42l-0.92,1.42l0.7,0.24l1.4,-1.0l0.38,0.4l2.2,-0.61l-0.85,1.46l-2.32,1.41l0.11,0.66l0.57,0.08l1.19,-0.66l2.15,-0.43l1.05,1.35l1.62,0.38l-0.28,0.54l0.17,1.08l-2.74,1.0l0.08,0.46l0.74,0.41l2.29,0.17l-0.36,1.21l0.76,0.45l1.11,0.09l1.27,1.06l-0.18,1.92l-3.04,-0.21l-1.02,-0.32l0.12,-0.37l-0.75,-0.31l-0.88,0.31l-0.07,0.62l0.68,0.62l2.26,1.04l-0.38,0.25l0.01,0.67l1.7,0.46l-0.37,0.79l0.32,0.42l1.53,0.09l0.12,0.57l-0.61,0.46l0.28,0.58l1.31,0.29l0.63,0.66l0.73,-0.04l0.69,-0.53l0.91,1.27l0.7,0.15l0.32,-0.31l-0.12,0.91l0.84,0.96l-0.69,0.62l-1.3,2.52l0.73,0.16l1.8,-1.21l2.09,-0.48l0.33,0.75l0.56,0.16l-1.39,1.57l0.03,0.96l0.49,-0.09l2.8,-2.58l0.86,0.21l1.34,2.32l2.01,0.47l1.95,-0.75l0.26,0.68l0.55,0.41l1.85,0.64l-1.09,0.97l-2.28,0.26l-1.71,1.02l-0.88,1.11l-1.35,0.1l-2.96,1.39l-1.64,0.0l-1.4,0.81l-0.33,0.82l-1.41,-0.26l0.04,0.76l1.13,0.68l-0.73,0.54l-0.18,1.19l0.47,0.2l1.05,-0.34l1.55,-1.32l2.63,-0.99l3.39,-2.32l3.51,-0.77l0.4,-0.32l-0.25,-0.51l2.26,0.29l1.26,2.19l-1.96,1.23l1.01,1.23l0.6,0.16l2.4,-1.83l1.49,-0.17l0.72,0.96l1.2,0.27l0.6,0.66l0.78,1.63l-0.44,1.24l0.27,2.43l-1.96,0.29l-0.47,0.35l0.26,0.65l1.4,0.05l1.33,0.34l-0.97,-0.15l-0.5,0.47l1.71,1.31l-1.59,1.48l-4.84,3.17l-2.37,-0.11l-1.65,0.32l-1.29,0.7l-2.55,0.22l-3.41,3.52l-2.25,1.91l-0.97,0.46l-0.48,0.73l-0.8,0.33l-3.77,0.05l-4.42,0.89l-1.11,-0.81l-4.08,-0.46l-2.14,0.05l-0.64,0.34l-3.0,-0.47l-1.69,0.29l-5.65,-0.32l-2.45,0.39l-0.91,-0.22l-1.05,0.58l-1.88,-0.04l-2.55,1.65l-2.07,4.12l-4.56,0.99l-0.13,0.55l-1.32,0.44l-0.71,0.8l-1.32,0.75l-2.3,2.93l-1.33,1.09l-3.44,-1.1l-3.24,-0.58l-0.45,0.28l0.22,0.48l1.04,0.61l1.7,0.09l3.09,1.13l0.23,0.25l-0.56,1.43l-2.75,2.62l-1.27,1.77l-2.82,2.17l-3.13,0.72l-1.57,0.78l-0.43,0.56l-2.01,1.18l-1.57,0.52l-2.55,2.99l-1.26,0.24l-1.49,1.23l-1.29,-0.17l-0.42,0.25l0.49,0.71l1.03,0.33l-3.3,2.06l-2.49,0.72l-4.4,3.31l-3.91,1.27l-0.96,-0.27l-1.58,0.17l-2.14,1.04l-6.38,0.99l-2.53,1.38l-1.68,2.1l0.01,0.6l0.45,0.44l1.11,0.28l1.08,0.06l0.91,-0.36l0.04,0.88l0.42,0.72l-3.34,0.06l-2.12,0.38l-1.07,0.45l-0.95,0.9l-2.64,-0.5l-1.98,0.21l-1.83,1.2l-0.6,0.82l-2.32,0.91l-1.0,0.92l-0.54,-0.22l-1.37,0.2l-0.61,-0.26l0.18,-0.8l2.53,-0.09l0.68,-0.39l0.13,-1.1l-0.79,-0.44l0.78,-2.45l1.55,-0.69l1.92,-1.75l0.1,-4.34l0.78,-1.67l1.41,-1.59l0.12,-1.23l0.36,0.43l0.8,-0.25l0.02,1.05l0.6,0.02l0.81,-0.51l1.0,0.84l2.05,0.6l0.55,-0.25l0.31,-0.62l0.03,-0.68l-0.45,-0.69l0.92,0.49l0.89,-0.02l0.21,-1.13l-1.71,-1.38l-0.3,-2.04l-1.42,-0.13l-0.26,-1.25l-0.29,-0.24l-0.28,0.2l-1.61,-2.21l-1.6,-0.04l-0.32,-0.43l-1.74,0.11l-0.13,-0.57l-0.61,-0.22l-0.47,0.28l-3.25,-0.75l-3.4,0.07l-2.15,-0.35l-3.0,-0.71l0.1,-0.66l-0.59,-0.67l-1.78,0.27l0.89,-2.17l-0.58,-0.52l-1.42,-0.24l0.86,-1.76l-0.23,-0.63l-1.85,-1.48l0.76,-2.22l-0.95,-0.36l-3.27,0.13l-1.34,-0.5l-0.87,-1.06l-0.89,-2.49l-0.68,-1.02l-1.66,-0.59l-2.78,0.19l-4.12,-1.47l-1.46,0.2l-0.04,1.04l-1.15,-0.12l-0.86,1.84l-0.5,-0.21l-2.39,1.05l-0.65,2.02l-1.0,0.71l-1.56,0.04l-1.03,-0.79l-3.19,0.08l-0.92,-0.67l-3.05,0.98l-2.47,-1.58l-1.0,-0.25l-0.98,0.29l-0.49,-0.89l-2.57,-1.17l-2.14,-0.05l-1.59,0.59l-1.69,-0.85l-2.84,-0.54l-0.73,-1.49l-0.37,-2.15l-1.76,-0.53l-0.45,0.39l-0.03,2.1l-140.63,-0.01l-0.67,-0.48l-0.6,-0.01l-0.59,-0.64l1.16,-0.19l0.43,-0.84l-0.17,-0.47l-0.9,0.44l-0.84,-0.16l0.25,-2.07l-0.58,-0.02l-0.81,0.86l-0.02,0.58l-0.68,0.29l-1.29,-0.43l1.19,-0.58l0.22,-0.64l-1.15,-0.05l-0.34,-0.33l-0.1,-1.34l0.61,-0.84l-0.65,-0.85l-0.73,-0.1l-0.15,0.61l0.3,0.38l-0.51,1.13l-0.66,0.48l-1.08,0.07l-1.61,-1.39l-1.33,-2.45l0.92,-1.44l-0.19,-2.02l-0.86,0.5l-0.14,1.13l-0.46,0.8l-1.75,0.06l-0.06,-0.67l-0.7,-0.23l-0.41,1.1l-0.46,-0.29l-1.61,0.07l-0.5,-0.12l1.52,-0.34l0.29,-0.63l-0.74,-0.35l-2.24,0.29l0.53,-0.54l-0.2,-0.57l-0.39,-0.11l-0.09,-1.1l-0.37,-0.3l-0.78,0.97l-1.94,0.31l-1.4,-0.48l-1.6,-1.25l0.33,-1.43l1.02,-1.15l3.36,-0.5l0.5,-0.51l-0.38,-0.35l-3.35,-0.03l-0.82,0.33l-0.86,1.11l-0.53,-0.9l-0.06,-0.81l0.63,-1.05l-0.55,-0.62l0.21,-0.7l1.66,-1.02l0.64,-0.17l0.45,0.48l0.74,0.14l1.48,1.57l0.56,-0.56l-1.16,-1.72l-1.26,-0.93l1.22,-1.51l-0.29,-1.21l-0.41,-0.21l-0.39,0.44l-0.11,0.97l-2.27,1.99l-1.47,0.56l-1.2,2.62l-0.8,-1.38l1.28,-0.86l0.08,-1.11l0.46,-0.49l0.08,-0.49l-0.48,-0.23l-1.0,0.62l0.86,-2.47l-0.35,-0.64l-1.64,0.41l-0.44,-1.87l-0.76,-0.8l-2.1,-0.85l-0.32,-0.81l0.75,-0.84l-0.19,0.51l0.3,0.54l1.84,0.96l1.12,-0.26l0.82,0.23l1.03,0.96l0.48,0.03l0.05,-0.83l-1.03,-1.04l-0.64,-0.31l-1.46,0.06l-0.64,-0.41l-0.38,-1.0l1.0,-0.53l0.02,-0.67l-1.11,-0.5l-1.6,0.67l-1.29,1.41l-0.32,1.64l-1.24,0.75l-1.65,-1.89l-1.61,-0.63l-0.17,-0.22l1.09,-1.44l0.21,-1.03l1.2,-0.23l0.84,-0.45l0.2,-0.44l-1.23,-0.35l-1.45,0.35l-1.39,-1.23l0.33,-1.48l0.66,-0.51l1.68,-3.09l1.64,-2.07l0.04,-0.46l-0.93,-0.05l-0.59,-0.84l-0.47,0.43l-0.13,1.4l-0.55,-1.98l0.36,-2.76l-0.45,-0.87l-1.65,-0.2l-0.52,-0.83l-0.76,-0.21l-0.59,-0.59l-1.71,-0.46l-2.46,-1.38l-1.1,-0.01l-0.44,-1.43l-0.87,-0.33l0.27,-0.88l-0.29,-0.5l-1.03,-0.25l0.25,-0.83l-5.99,-8.32l-0.05,-0.73l-2.12,-2.18l-2.41,-1.43l-0.86,-1.5l-2.47,-1.46l-0.53,-0.94l-0.07,-1.29l-2.58,-1.69l-2.31,0.98l-1.94,0.43l-0.24,0.62l0.24,0.43l-0.63,0.05l-0.42,0.4l-0.0,1.25l-0.4,0.68l-1.15,0.06l-2.87,1.59ZM487.59,210.08l0.47,0.08l0.0,0.0l-0.21,0.06l-0.27,-0.14ZM564.27,340.47l-1.87,-0.22l-0.02,-0.17l0.48,-0.17l0.59,0.26l0.41,-0.33l0.41,0.64ZM507.25,309.52l0.4,0.45l-0.55,0.63l0.24,-0.47l-0.09,-0.61ZM325.09,304.42l-0.29,-0.32l-0.04,-0.19l0.27,0.37l0.06,0.14ZM543.35,335.39l-0.36,-0.67l-0.03,-0.4l0.7,0.69l-0.31,0.37ZM542.65,333.85l-0.26,-0.09l-0.68,-0.9l0.67,0.03l0.27,0.96ZM645.85,327.78l0.37,0.89l-0.43,0.9l0.52,0.4l-1.01,0.11l-0.61,-0.67l-0.15,-1.92l3.02,-4.56l1.57,-1.23l0.49,1.27l-0.86,3.02l-2.9,1.79ZM646.83,329.86l1.35,-0.19l1.4,-1.28l0.15,-0.27l-0.66,-0.51l0.08,-0.49l0.84,-0.82l0.61,0.61l1.45,0.12l-0.28,0.33l0.09,0.64l-2.28,1.6l-1.36,0.38l-1.4,-0.1ZM578.3,333.68l3.21,-1.7l1.2,-0.29l0.55,-1.42l1.51,-2.31l2.14,-1.07l3.12,-2.31l4.24,-1.28l3.95,-1.86l2.29,-2.22l3.11,-3.86l3.21,-2.52l2.97,-1.72l8.34,-3.28l2.08,-0.56l3.3,-0.35l3.38,0.48l2.6,1.56l-0.83,-0.03l-0.4,0.31l1.35,1.26l-0.38,1.24l-1.45,0.45l-0.88,1.01l-2.17,1.12l-3.51,-1.04l-0.71,0.49l-1.93,-0.05l-1.31,0.63l-0.22,0.41l0.69,0.42l1.33,-0.33l2.57,0.96l1.21,1.55l0.9,-0.07l2.03,-0.95l0.15,0.27l1.09,0.15l-0.78,2.0l-1.95,1.61l0.01,0.65l0.74,0.38l1.49,-0.17l-0.14,1.41l0.34,0.8l0.48,0.31l0.54,2.07l0.72,0.8l2.8,0.42l-0.46,0.22l0.02,0.73l1.73,1.0l1.12,-0.04l1.26,0.79l2.45,-0.03l0.32,0.69l1.55,0.11l2.33,-1.33l0.83,1.1l1.74,0.01l0.56,0.78l-0.84,0.82l1.18,0.35l-10.3,3.71l-1.72,-0.13l0.09,1.16l-0.72,-0.13l-0.89,-0.83l-0.79,0.48l-1.03,0.07l-0.5,0.89l0.21,0.69l-2.83,2.82l-0.95,0.73l-0.87,0.09l-1.07,1.15l-0.84,-0.05l-0.86,-1.44l-0.69,-0.28l-0.49,0.19l-0.31,-1.51l0.43,-1.55l1.12,-1.2l-0.1,-0.27l1.32,-0.37l0.62,-0.48l0.04,-0.54l3.68,-2.1l1.43,-0.44l0.36,0.72l1.41,0.69l0.23,-1.23l1.62,-0.55l1.6,-0.12l0.66,-0.7l-0.33,-0.32l-3.78,-0.29l-2.54,0.0l-1.02,0.43l2.79,-2.54l-0.4,-0.59l-0.65,0.11l-0.63,-0.7l-0.68,0.19l0.13,0.86l-0.69,0.82l-5.53,2.61l-0.5,-0.27l0.14,-0.85l-0.48,-0.07l-0.8,0.52l0.01,0.77l-1.08,0.62l-0.55,-0.2l-1.52,0.43l-0.32,-0.46l-1.68,-0.35l-0.49,0.18l-0.33,-0.33l0.18,-0.5l-0.25,-0.66l0.32,-0.53l-0.35,-0.98l-0.89,0.02l-0.65,-0.52l-0.24,-8.63l-2.39,-1.79l-3.51,0.89l-0.33,-0.21l-0.29,-1.19l-0.99,-0.24l-0.41,0.15l-3.9,4.86l-0.37,1.79l-0.94,1.31l-0.23,2.12l-0.64,1.04l-1.36,1.13l-0.1,0.78l-0.68,0.6l-2.43,0.29l-0.93,1.64l-14.28,0.02ZM496.0,27.1l3.35,-1.66l0.31,-0.49l-0.37,-0.56l-4.18,-0.25l-3.36,1.02l-1.46,-0.71l3.39,-1.64l2.27,-0.6l5.68,-0.49l4.18,-1.79l2.5,-0.43l3.17,0.48l1.97,1.18l1.27,-0.9l0.94,-0.19l2.24,0.3l2.65,0.9l3.16,-0.35l0.35,-0.65l-0.85,-0.63l-6.44,-1.82l3.18,-0.74l2.72,-1.44l1.82,-0.52l2.56,0.92l3.91,0.58l2.93,2.27l2.03,0.85l1.5,0.16l0.55,-0.56l-0.19,-0.52l-1.84,-1.01l0.55,-0.15l4.81,1.56l7.31,1.77l3.91,1.53l0.19,-0.69l-1.15,-1.03l-2.61,-1.21l-6.82,-2.03l-2.67,-1.05l-2.04,-1.28l3.74,-1.06l-0.11,-0.68l-1.68,-0.72l1.97,-0.08l3.97,0.83l0.32,-0.81l-1.67,-1.59l0.42,-0.15l1.68,0.12l3.01,0.8l5.37,0.4l1.46,-0.06l0.36,-0.27l-0.51,-0.7l-4.3,-1.14l-1.87,-1.04l0.54,-0.14l3.53,0.07l3.32,0.53l2.91,-0.19l2.37,0.28l5.32,2.65l1.29,1.42l1.15,0.33l2.32,-0.94l0.12,-0.62l-7.44,-4.47l6.23,-0.44l6.73,0.43l1.02,0.28l2.48,1.72l2.24,1.04l3.22,0.66l0.45,-0.23l-0.13,-0.48l-2.97,-1.57l-0.86,-0.63l0.11,-0.46l2.8,-1.2l3.69,-0.31l5.68,2.59l0.48,-0.26l-0.15,-0.59l-1.92,-0.97l2.09,-0.67l4.54,-0.23l2.46,1.27l5.48,0.15l2.51,0.62l7.0,0.21l-1.54,0.77l-7.83,1.81l-0.78,0.73l0.37,0.32l5.55,-0.19l8.49,-2.2l2.16,0.53l1.18,-1.17l0.77,-0.12l2.14,1.56l2.67,-0.64l1.92,0.29l-0.53,0.59l0.08,0.48l2.72,1.77l-0.84,1.08l0.51,0.56l3.88,-0.86l3.89,0.38l1.02,0.24l1.1,1.25l-0.2,0.46l-4.48,2.84l-7.16,2.42l-4.93,1.36l-3.46,-0.09l-2.36,1.18l-4.67,0.35l-1.61,1.63l-9.01,2.31l-0.43,0.62l0.3,0.55l1.04,0.16l14.35,-2.99l4.25,-0.03l-3.19,1.81l-4.21,1.66l-2.15,1.28l-9.73,4.33l-4.68,3.48l-0.81,0.17l-1.92,-0.33l-2.54,-1.54l-0.82,-0.03l0.18,0.86l2.15,2.64l-5.97,1.0l-2.29,0.07l-1.02,0.52l0.21,0.65l2.39,0.43l3.84,-0.6l1.0,0.18l-0.61,0.51l-2.99,0.99l-0.27,0.42l1.14,0.6l-1.05,0.73l-2.88,0.69l-2.27,0.08l-5.2,-1.54l-3.52,-0.6l-1.39,0.06l-1.46,0.47l-0.27,0.37l0.94,0.63l5.35,0.66l1.06,1.12l-0.04,0.66l-0.83,0.46l-2.08,-0.07l-1.67,0.42l-6.62,0.57l-2.83,-0.67l-4.28,-0.45l-0.34,0.65l0.49,0.42l2.68,0.8l1.07,1.06l2.53,0.96l2.69,0.44l2.76,-0.31l-0.17,1.34l-3.18,0.09l-3.57,-0.93l-7.56,0.68l-6.05,-0.2l-0.34,0.58l0.43,0.45l3.38,1.26l7.04,-0.91l2.17,0.42l1.56,1.1l3.46,0.34l2.97,1.2l-0.4,0.83l-1.44,0.72l-7.92,0.41l-0.22,0.42l0.33,0.33l5.66,1.6l-1.51,1.01l-1.54,2.23l-0.36,0.13l-1.87,0.02l-3.17,0.7l-2.47,-0.22l-3.19,0.21l-0.42,1.31l0.06,3.42l-0.89,0.96l-0.99,0.44l-7.1,0.73l-3.31,-0.16l-5.54,-2.28l-0.47,0.72l1.48,1.45l-3.14,0.31l-0.43,0.41l0.13,0.44l1.2,0.78l1.8,0.05l2.11,-0.59l2.11,0.25l2.39,1.07l1.64,-0.5l2.02,-0.02l0.58,0.29l0.15,1.92l0.64,0.56l2.29,0.59l2.47,-1.02l1.24,1.14l0.06,0.77l-1.34,1.71l-6.19,2.73l-5.96,1.39l-1.06,-0.05l0.8,-1.99l-0.92,-1.01l-1.24,-0.51l-2.63,0.2l-1.61,-1.42l-1.35,-0.25l-1.14,-0.73l-0.48,0.09l-0.03,0.49l1.53,2.13l-7.97,0.13l-1.55,-2.18l-0.43,-0.17l-0.3,0.36l-0.24,3.06l-4.06,0.5l-2.63,-0.45l-2.16,-0.88l-1.79,-1.62l-0.99,0.87l-0.53,1.25l-2.93,-0.64l-0.61,-1.28l-0.45,-0.22l-0.32,0.38l-0.03,1.69l-3.89,-0.18l-0.42,-3.51l-0.32,-0.38l-0.44,0.22l-0.6,1.3l0.28,2.07l-4.37,-0.54l0.1,-1.41l0.2,-1.56l5.37,-2.86l5.22,-0.34l2.97,-0.57l-0.01,-0.7l-1.38,-1.26l-1.84,-0.54l-1.6,-1.42l-1.46,-2.24l0.22,-0.39l1.18,-0.5l3.6,-0.59l3.11,0.88l1.0,0.63l3.01,3.13l4.6,1.16l3.97,-0.33l1.98,-0.6l3.69,-3.23l1.32,-1.87l0.37,-1.18l-0.15,-0.42l-0.44,-0.02l-4.29,4.09l-1.7,0.92l-1.79,0.09l-1.82,-0.41l-1.82,0.65l-1.75,-0.49l-0.01,-1.99l-1.13,-1.69l4.32,-2.68l1.82,0.22l0.45,-0.29l-0.24,-0.48l-1.61,-0.81l-1.55,0.04l0.55,-2.69l-0.26,-0.46l-0.49,0.19l-1.2,2.35l-1.9,1.78l-0.74,0.32l-2.32,0.23l1.08,-2.27l-0.13,-0.48l-4.31,2.07l-3.09,0.19l-0.7,-0.32l0.24,-2.29l2.65,-2.66l0.7,-1.15l8.93,-1.51l8.82,1.59l1.6,-0.83l4.3,-0.24l1.99,-1.01l0.31,-0.44l-0.36,-0.59l-3.55,0.81l-8.63,-0.63l-1.2,-0.36l-0.52,-0.52l1.06,-0.17l2.23,0.72l1.66,-0.19l-0.53,-0.86l-2.77,-1.56l-5.5,-5.05l-4.02,-0.72l-1.73,-1.25l-0.35,-1.87l-0.57,-1.18l0.49,-1.3l0.76,-0.56l5.71,0.54l5.62,0.11l1.62,0.37l5.29,2.74l5.07,3.57l3.47,0.87l3.03,0.07l1.86,-0.76l0.21,-0.42l-1.17,-0.44l-3.62,-0.15l-4.24,-3.0l-2.43,-1.29l-3.08,-2.41l1.89,-0.48l7.98,-0.83l4.75,-0.99l2.3,-1.45l6.21,-1.59l7.78,-0.96l0.37,-0.4l-0.31,-0.54l-9.12,-0.71l0.29,-0.64l1.63,-1.39l3.78,-1.83l2.67,-0.83l0.74,-0.54l0.13,-0.49l-0.45,-0.23l-5.56,1.21l-3.99,2.21l-2.4,0.42l-1.15,1.07l-0.74,1.53l-0.97,0.69l-1.86,0.91l-4.42,1.28l-6.9,1.1l-1.79,-0.07l2.84,-1.74l0.1,-0.46l-0.4,-0.24l-6.14,0.72l-4.12,2.07l-4.64,0.19l-2.86,-0.69l-2.72,0.17l-1.51,-0.55l1.64,-1.37l5.04,-2.33l2.85,-0.64l6.78,-0.73l0.61,-0.74l-0.38,-0.6l-12.82,1.37l-2.39,1.05l-5.53,3.31l-1.82,0.15l-6.07,-1.76l-1.32,-0.81l3.82,-0.73l5.23,0.13l4.71,-0.57l7.2,-2.57l0.96,-0.95l-0.36,-0.3l-2.47,0.02l-2.47,0.55l-3.78,1.42l-3.27,0.49l-8.21,0.27l-2.62,0.4l-1.03,-0.08l-1.47,-0.87l1.76,-0.68l1.63,-0.19l0.5,-0.53l-0.29,-0.35l-1.77,-0.51l4.73,-1.76l5.06,-0.09l0.48,-0.42l-0.3,-0.57l-4.61,-0.48l-2.61,0.29l-6.71,1.69l-0.8,-0.14ZM501.93,137.7l3.09,0.16l4.35,0.94l3.48,-0.41l0.44,-0.35l-0.17,-0.65l-3.69,-1.82l-6.24,-0.77l-3.05,-1.24l-0.6,-0.47l-0.86,-3.8l0.37,-1.05l1.44,-1.22l-0.29,-0.64l-0.71,-0.42l-0.02,-1.35l2.55,-3.74l0.65,-2.9l1.17,-1.3l1.05,-0.56l0.38,-0.95l2.67,-1.85l2.22,-1.22l4.78,-1.08l4.09,-0.16l4.19,0.41l0.43,0.27l0.07,0.2l-3.53,2.24l-1.71,1.54l-3.23,4.34l-0.27,1.35l0.41,1.1l1.34,1.84l-0.09,3.18l0.71,2.35l2.45,2.51l3.44,2.33l-1.55,0.89l-2.75,0.6l-2.76,1.15l-0.59,0.3l-0.11,0.64l0.58,0.31l1.17,-0.26l3.43,-1.26l2.62,0.0l0.12,0.78l0.99,0.59l0.7,-0.34l0.27,-0.77l0.64,-4.92l-0.43,-0.63l-0.72,-0.26l-2.46,-0.32l-1.25,-1.54l-1.23,-0.95l1.4,-0.68l1.0,-1.19l1.39,0.13l3.42,1.58l0.35,0.08l0.49,-0.5l-0.44,-0.64l-2.25,-1.66l0.81,-0.36l-0.16,-0.8l-1.26,-0.3l-1.49,0.22l-0.99,-0.47l-1.09,-1.48l-0.09,-1.36l0.82,-1.22l0.71,-0.19l5.04,1.5l0.51,-0.47l-0.34,-0.67l-5.67,-2.19l1.93,-1.95l1.95,-0.5l1.04,-0.65l1.5,-0.03l1.52,0.4l0.52,-0.41l-0.56,-0.88l2.15,-0.83l3.77,-0.96l3.56,-0.0l1.65,0.32l1.14,0.81l1.03,2.85l0.65,0.68l2.07,1.12l0.1,1.93l1.46,1.5l-4.78,4.17l0.12,0.73l0.44,-0.01l2.48,-1.63l-1.43,1.64l-0.09,0.52l0.57,0.55l-0.63,0.78l0.25,1.67l1.07,-0.18l2.16,-2.12l0.94,-0.52l1.43,0.32l0.26,-0.66l-1.02,-1.19l1.01,-0.71l1.08,1.21l1.07,-0.19l0.5,-0.41l1.16,0.83l0.11,2.32l1.26,1.12l1.16,0.53l0.35,-0.73l-1.35,-1.84l0.19,-1.34l0.38,-0.51l1.21,0.61l1.54,0.0l2.07,0.96l1.07,0.02l0.4,-0.5l-0.4,-0.68l-3.73,-1.32l-0.8,-0.79l0.49,-0.83l2.92,-1.16l4.25,0.04l3.59,1.43l2.46,0.01l1.98,0.83l0.75,0.84l0.32,1.07l-1.6,1.63l-0.85,0.41l-1.93,2.71l0.21,0.68l0.86,-0.35l1.18,-1.67l2.16,-1.28l1.15,-0.33l1.84,0.13l1.02,0.29l0.23,0.42l-0.39,0.87l-2.78,1.05l-1.56,0.15l-0.33,0.55l0.36,0.4l1.87,0.2l-0.53,1.05l0.13,0.93l-0.93,1.54l0.33,0.69l0.47,-0.05l1.21,-1.13l0.88,-2.39l0.48,-0.5l1.57,-0.24l1.43,-0.84l0.25,0.05l-2.3,2.75l-0.04,0.48l1.14,-0.04l1.63,-1.32l0.91,0.71l0.52,1.05l1.52,0.88l0.16,-1.02l-0.51,-1.46l1.66,-1.15l1.4,0.58l3.67,0.46l2.01,0.87l0.96,0.88l0.17,0.67l-1.27,1.13l-2.28,0.12l-3.44,2.34l-0.27,0.61l0.37,0.25l1.88,-0.1l1.5,-1.64l1.14,-0.26l1.79,0.63l1.09,-0.0l1.67,-1.16l0.62,0.32l0.1,1.09l-0.52,0.81l-1.25,1.03l-2.92,1.03l-1.49,1.2l-0.02,0.7l1.05,0.39l1.45,-1.41l0.44,0.19l-0.77,3.17l0.41,0.51l0.44,-0.19l2.15,-4.12l0.58,-0.51l1.42,-0.84l2.96,-0.95l1.24,0.54l2.57,0.17l3.44,1.42l0.46,0.69l-1.99,1.23l-2.51,0.41l-2.13,0.84l-1.85,1.09l-0.18,0.63l0.33,0.37l1.51,-0.05l1.6,-1.04l3.34,-0.39l-1.32,1.39l0.14,0.64l1.7,0.32l1.26,-1.09l1.5,-0.59l-0.04,-0.73l-0.31,-0.17l0.85,-0.81l0.9,0.28l2.4,2.17l0.78,1.46l-0.03,0.73l-2.63,-0.5l-1.29,0.07l-1.77,1.13l-1.52,0.02l-2.41,0.66l-0.85,0.79l0.4,0.54l3.69,-0.58l3.08,1.05l3.4,-0.01l2.27,1.06l0.29,0.84l-4.27,-0.1l-1.89,-0.66l-1.22,0.38l-1.14,-0.24l-1.09,0.24l-2.23,1.0l-0.06,0.69l0.58,0.22l2.88,-0.81l1.33,0.33l1.63,0.7l-0.47,1.62l-2.02,-0.5l-2.05,0.3l-3.11,-0.58l-0.35,0.15l0.11,0.71l2.42,0.95l3.33,0.49l0.22,0.7l1.19,0.9l1.56,-0.19l1.03,0.46l2.34,0.29l-0.5,0.68l0.99,1.27l-0.44,1.06l0.3,0.51l0.86,-0.33l0.03,0.31l0.66,0.28l0.51,-0.87l-0.06,-0.86l1.2,-0.32l-0.21,1.5l-1.3,1.79l0.69,0.52l0.89,-0.22l1.29,-1.46l0.17,0.58l0.57,0.3l1.61,-0.48l-0.16,1.58l0.81,0.98l0.52,0.07l0.23,-0.52l-0.18,-1.38l1.97,-1.21l-0.93,1.33l0.32,0.71l1.28,0.18l1.01,-0.45l2.19,1.76l0.87,-0.12l0.25,0.23l-0.85,0.8l0.21,0.76l-3.03,-0.01l-0.36,0.31l0.2,0.44l1.53,0.44l0.42,0.42l2.65,-0.07l1.29,-0.93l2.11,0.83l-0.79,1.56l-2.15,1.63l-0.15,0.44l0.37,0.28l3.8,-1.08l2.91,0.36l1.48,-1.16l3.67,3.06l-0.64,0.26l-2.04,-1.0l-1.26,0.34l-0.09,0.67l2.37,1.19l0.27,0.54l-1.13,0.39l-1.26,-0.19l-1.15,-0.63l-1.19,0.04l-0.14,0.65l0.48,0.49l-0.44,0.58l0.19,0.55l2.13,1.06l-2.16,-0.19l-0.53,0.24l0.07,0.65l0.99,0.95l-1.02,0.89l-0.25,0.61l-2.12,-0.14l-1.37,-1.54l-0.7,0.18l0.23,0.97l-0.92,0.22l-0.3,0.4l0.29,0.48l1.23,0.31l-0.05,2.88l-0.91,2.0l-1.18,-1.28l-1.07,-0.17l-0.5,0.33l-0.54,-0.49l0.34,-1.64l-0.4,-0.52l-0.66,0.47l-0.95,1.65l-2.3,-2.46l-1.41,-2.39l0.9,-1.07l1.78,-0.73l0.94,-1.52l1.04,-0.94l-0.12,-0.73l-1.43,0.35l-1.73,1.73l-1.96,0.66l-1.89,-0.02l1.0,-1.08l-0.12,-0.65l-2.08,0.59l-1.99,-1.15l-1.6,-2.36l-1.4,-0.7l-0.26,0.8l-1.08,-0.28l-0.58,0.3l0.59,1.89l-2.91,-1.53l-0.6,0.42l1.03,2.14l2.39,1.76l-0.47,0.43l-2.13,-0.3l-3.17,-2.37l-1.83,0.38l-0.26,0.37l0.26,0.38l1.42,0.23l1.08,0.68l-0.25,0.95l0.42,0.77l1.48,0.81l-0.39,1.36l0.23,0.45l0.64,0.1l1.48,-0.62l0.65,0.36l0.88,1.06l-0.63,0.45l0.26,0.61l1.15,0.72l0.44,1.24l0.76,0.22l0.64,2.03l0.42,0.23l0.45,-0.38l0.04,-1.04l1.41,0.85l-0.29,0.67l0.55,0.58l0.69,-0.04l1.04,-1.19l0.6,0.18l1.3,1.2l0.53,-0.04l0.32,0.31l-1.08,0.88l0.44,0.57l1.82,0.1l-0.47,0.73l-1.8,-0.03l-0.24,0.71l1.3,0.66l0.83,0.92l0.06,0.72l1.01,0.25l1.27,-0.18l-0.33,0.21l0.02,0.69l1.02,0.09l0.54,1.06l-0.55,0.45l0.32,1.79l-0.13,1.31l-1.67,-3.08l-1.07,-1.02l-0.48,-0.05l-0.18,0.44l0.81,2.6l0.12,0.78l-0.29,0.73l1.74,2.49l-1.53,-0.51l-0.61,0.24l0.48,2.23l-2.05,-1.77l-0.89,-0.52l-0.62,0.05l-1.83,-1.44l-0.33,-0.08l-0.27,0.86l-0.35,-0.14l-1.16,-1.82l-0.43,-0.14l-0.29,0.85l-1.18,-1.16l-1.01,-0.04l-3.54,-3.39l-0.48,0.04l-0.1,0.47l0.65,1.65l-3.16,-2.1l-2.39,-0.09l-0.26,0.85l0.62,0.88l3.36,3.46l2.03,0.71l0.18,0.69l1.8,0.72l2.0,1.72l1.65,0.74l1.85,2.36l1.35,0.62l-0.7,0.77l0.38,1.15l-0.89,0.2l-5.64,-2.19l-5.62,-0.84l-2.88,-1.26l-2.49,-2.77l-1.26,-0.24l-2.09,0.22l-3.89,-1.71l0.53,-0.93l-0.38,-0.23l-1.57,0.59l-1.02,-0.56l-1.72,-1.75l1.13,-0.15l1.36,-1.37l-2.05,-1.47l-2.51,-0.05l0.55,-0.9l-0.22,-0.54l-1.66,0.53l-0.82,-1.46l-3.72,-3.06l0.74,-1.05l-0.4,-0.66l-3.33,0.05l-0.47,1.13l-0.39,-1.36l-1.65,-0.29l-0.76,-1.36l-0.66,-0.22l-1.51,0.68l1.27,2.12l-1.63,0.27l-2.21,-0.69l-1.16,0.14l-0.55,1.14l-1.55,0.08l-3.64,1.12l-4.63,-1.01l-1.79,-1.88l-0.06,-0.8l0.63,-1.8l0.77,-0.63l2.67,-1.06l0.16,-0.56l-0.47,-0.93l0.45,-0.62l4.02,0.71l3.25,1.16l1.42,1.27l-0.39,1.07l0.9,0.85l0.6,-0.17l0.44,-1.74l-0.53,-0.86l-1.32,-1.06l2.51,0.21l1.0,-0.82l2.45,0.08l1.46,-0.98l1.09,-0.23l2.21,0.27l0.39,-0.44l-0.05,-0.48l-0.99,-2.03l-1.58,-1.06l-1.84,-1.95l4.12,-2.74l1.54,-1.43l1.36,-0.55l1.21,-2.54l2.06,-0.83l0.89,-1.17l-0.01,-0.6l-0.65,-0.61l-1.9,-4.07l-1.79,-2.67l-1.25,-1.3l0.09,-0.94l-0.53,-0.15l-1.49,0.61l-0.65,-0.44l-0.21,-0.51l0.47,-1.62l-0.67,-1.02l-1.63,0.04l-0.13,0.58l0.55,0.77l-1.54,-0.25l-1.08,-1.06l-0.25,-0.86l-0.46,-0.14l0.29,-0.49l-0.51,-0.62l0.52,-0.35l-0.12,-0.68l-1.08,-0.13l-1.61,1.28l-1.66,-0.33l-0.66,0.63l-3.05,1.4l-1.4,0.24l0.21,-2.1l0.63,-0.26l2.34,0.13l1.56,-1.22l0.21,-0.68l-0.94,-1.4l-3.33,-1.26l-0.18,-0.65l1.18,-0.37l0.29,-0.46l-0.32,-0.39l-1.54,-0.21l-1.18,0.96l-1.08,-0.33l0.86,-0.72l-0.08,-0.65l-1.0,-0.64l-2.72,-0.05l-0.84,-3.39l-0.63,-0.31l-2.15,0.2l-1.7,-1.14l-2.32,-2.32l-1.41,0.72l-0.89,1.47l0.59,0.7l1.94,0.63l0.53,0.9l0.03,1.14l-1.23,0.66l-2.01,0.32l-5.81,-1.49l-4.62,-0.55l-0.63,0.17l-0.1,0.71l2.32,1.02l1.57,1.46l-3.02,-1.77l-3.89,0.91l-4.36,-1.56l-3.67,0.42l-8.0,-1.35l-1.86,0.66l-2.49,-0.88l-0.77,-1.54l0.43,-1.34l-0.5,-0.11l-1.44,0.65l-2.24,-0.16l-0.46,0.63l0.13,0.26l-2.08,-0.06l-1.24,0.63l-2.52,-1.72l-2.21,-0.69l-1.79,-2.13l-0.83,-2.2ZM642.14,249.05l0.51,0.1l0.23,0.22l-0.22,-0.01l-0.52,-0.3ZM629.46,302.55l1.09,-0.1l5.26,1.11l5.31,2.54l1.43,1.16l-2.13,0.12l-4.1,-0.94l-2.56,-1.1l-0.55,-0.87l-1.11,-0.85l-2.62,-1.06ZM629.68,323.28l1.26,-1.52l-0.45,0.81l0.07,0.5l0.91,0.84l0.15,0.83l-0.5,-0.02l-0.05,-0.79l-0.34,-0.4l-1.05,-0.26ZM632.84,325.02l0.28,-0.41l3.0,0.84l-1.39,0.87l-1.41,-0.37l-0.44,-0.4l-0.03,-0.52ZM636.6,325.42l1.51,-0.21l2.49,-0.17l-2.13,1.22l-0.14,1.26l-0.98,-0.07l-0.74,-2.04ZM627.42,226.93l0.4,-0.02l0.8,0.7l-0.91,-0.39l-0.29,-0.29ZM627.36,210.92l1.2,0.03l0.12,0.12l-0.74,0.41l-0.77,-0.15l0.2,-0.41ZM624.41,217.96l2.61,-0.02l0.37,0.33l-0.08,0.66l-0.49,0.5l-2.42,-1.47ZM625.39,215.77l0.41,0.44l0.34,0.21l-0.55,-0.23l-0.2,-0.42ZM610.36,150.7l0.61,-0.25l0.5,0.01l-0.41,0.46l-0.69,-0.21ZM609.36,228.23l1.11,-1.87l0.81,0.55l-0.29,0.6l-1.62,0.71ZM596.07,208.6l2.01,0.81l0.63,0.78l-1.77,-0.33l-0.86,-1.26ZM582.09,330.79l-0.0,0.03l-0.03,0.01l0.03,-0.03ZM576.77,164.83l1.43,-0.2l4.02,0.68l0.45,0.16l0.16,1.01l-5.0,-0.11l-0.8,-0.72l-0.26,-0.83ZM575.49,161.59l-2.1,-1.37l0.39,-0.89l1.05,0.26l0.79,1.27l-0.13,0.72ZM571.51,162.6l2.53,0.74l0.23,0.33l-0.27,1.64l0.19,2.88l-0.49,1.32l-0.88,0.7l-1.86,0.69l-4.58,0.4l-1.32,-0.19l-0.67,-1.07l-0.72,-2.37l0.36,-1.14l1.4,-2.03l1.61,-1.53l1.08,-0.32l3.4,-0.05ZM545.75,114.47l0.28,-0.67l-0.52,-0.86l0.04,-1.09l0.8,-0.19l6.33,1.24l6.63,-0.07l4.23,1.41l0.99,1.37l1.3,0.5l0.97,1.47l1.23,0.59l-0.0,0.89l0.87,0.84l-1.04,0.25l-7.34,-0.74l-2.5,0.15l-4.2,1.07l-1.71,0.14l-2.03,-0.94l-1.4,-3.6l-2.22,-0.46l-0.62,-0.47l-0.11,-0.84ZM566.12,203.45l-0.75,-0.12l-1.69,-1.08l0.5,-0.32l1.63,0.76l0.38,0.37l-0.06,0.39ZM563.44,152.77l0.74,-0.14l1.9,0.36l-1.12,1.34l-0.77,0.25l-0.67,-0.36l-0.09,-1.46ZM557.5,203.63l2.67,-0.08l0.89,0.36l0.66,1.02l-1.65,0.71l-2.57,-2.0ZM556.46,151.27l0.48,-0.47l1.58,-0.39l0.29,-0.5l0.61,0.36l-2.24,1.01l-0.71,-0.01ZM552.97,156.94l0.69,-0.92l1.53,-0.62l0.73,-1.08l0.76,-0.31l-0.03,-0.68l1.33,-0.17l-0.02,0.37l-1.26,1.06l-1.54,1.99l-1.95,0.64l-0.25,-0.26ZM555.85,258.16l0.06,-0.43l0.03,-0.1l0.01,0.14l-0.1,0.38ZM550.22,260.33l0.64,-0.78l0.31,-0.3l-0.84,0.99l-0.11,0.09ZM552.29,259.02l0.63,-0.68l0.7,-1.76l0.83,0.74l0.12,0.7l-0.35,0.61l-0.25,-0.31l-0.61,0.02l-1.6,2.29l0.71,-1.15l-0.17,-0.45ZM554.51,162.98l-0.4,-0.19l0.05,-0.34l0.56,-0.09l0.25,0.23l-0.46,0.39ZM553.88,89.25l0.02,0.22l-1.19,0.39l-1.16,-0.11l3.25,-2.3l-0.89,1.18l-0.03,0.62ZM552.35,288.12l0.2,-0.08l-0.07,0.07l-0.13,0.01ZM551.71,212.06l1.1,1.37l-0.24,1.16l-2.01,3.11l-2.04,-1.54l0.04,-2.0l1.51,-1.99l1.65,-0.11ZM547.12,149.9l0.49,-0.51l0.69,-0.03l0.65,0.55l2.62,-0.65l0.67,0.46l-0.59,0.38l-1.51,0.18l-0.77,-0.21l-0.46,0.58l0.24,0.44l-2.02,-1.19ZM464.85,80.8l0.83,-0.21l0.24,-0.83l-1.88,-0.98l0.13,-0.29l5.34,-0.89l6.87,1.62l2.42,-0.02l2.64,1.35l0.21,0.7l-1.44,1.87l-0.19,0.94l1.04,-0.2l2.11,-1.5l3.49,0.03l3.81,-0.73l2.04,0.23l2.59,1.28l-3.88,-0.44l-0.6,0.64l0.43,0.72l2.91,0.21l7.84,1.4l-0.51,0.43l-4.51,0.32l-4.91,-0.75l-0.75,0.1l-0.22,0.68l0.87,0.74l2.92,0.88l2.26,0.23l2.18,1.24l0.63,0.83l1.03,0.02l1.02,0.55l0.19,0.18l-0.62,0.72l-1.57,0.98l0.37,0.59l1.69,-0.02l1.99,1.17l0.8,-0.34l0.2,-0.65l-0.27,-0.95l0.4,-0.19l2.33,1.44l2.58,-0.55l0.86,0.86l0.5,-0.1l1.12,-1.17l2.19,1.25l2.92,0.87l1.54,0.13l0.63,-0.71l-0.44,-0.73l1.77,-0.47l1.17,0.04l1.92,-0.73l2.03,-0.12l3.42,-1.67l3.43,0.7l5.47,-0.84l4.45,0.77l0.25,0.73l0.49,0.29l4.06,0.3l0.62,0.37l-0.53,0.34l-0.04,0.64l0.33,0.2l2.86,0.25l0.64,1.45l-4.39,2.26l0.14,0.58l0.72,0.36l3.05,-0.18l0.87,0.56l-2.17,0.53l-2.18,-0.68l-0.27,0.6l0.83,0.81l-0.36,1.85l-4.7,0.15l-3.54,0.94l-4.89,-0.89l-0.74,-1.01l0.05,-1.28l-2.42,-1.14l-0.48,0.17l-0.11,0.45l0.99,1.16l-0.8,1.48l-4.32,0.71l-1.86,-0.31l-1.35,-0.68l-0.44,0.33l-0.09,0.57l-1.47,-0.84l-0.68,0.7l-1.24,0.33l-1.52,-0.41l-1.16,0.25l-1.96,-0.42l-0.27,0.79l-8.31,-0.15l-0.36,-0.24l0.07,-0.38l1.0,-1.77l-0.22,-0.53l-1.1,-0.5l-0.95,0.33l-0.57,0.85l-0.62,-0.75l-1.54,0.56l-0.12,1.18l-1.53,0.64l-1.38,0.06l-3.51,-0.65l-1.71,-0.94l0.31,-0.78l-0.62,-0.3l-1.28,0.83l-0.33,0.76l-1.38,0.04l-1.99,-1.26l-0.99,-2.38l0.34,-0.19l0.1,-0.71l-1.68,-1.74l-0.04,-0.87l1.77,-2.67l-0.61,-2.22l-4.68,-5.41l-1.48,-0.22l-1.99,0.92l-4.51,-0.26l-3.31,0.35l-0.97,-1.04l-2.55,-0.9l1.38,-0.5l0.38,-0.75l-1.9,-0.05l-3.1,-1.29ZM513.14,201.88l1.19,-1.91l2.54,-1.17l0.97,-0.79l-0.53,-3.73l0.94,-3.63l0.58,-4.35l1.23,-2.33l1.03,-0.58l1.6,1.24l0.28,0.77l-0.66,1.04l1.02,0.84l0.81,1.55l0.9,-0.04l1.32,-1.56l1.08,0.69l1.05,1.31l3.01,0.71l1.42,1.39l2.8,1.52l3.03,1.05l1.25,1.67l0.54,1.66l-1.01,1.08l-0.01,0.66l1.23,0.14l1.92,-0.43l1.68,0.35l0.75,-0.5l0.92,0.78l-0.33,0.36l0.29,0.41l1.56,0.55l-3.34,2.23l-4.6,-1.62l-2.03,-0.34l-0.49,-1.77l-2.7,-0.72l-0.0,-0.83l-0.55,-0.39l-1.29,0.13l-1.59,0.77l-0.8,2.04l-1.44,1.19l-1.52,0.66l-1.6,2.17l-1.6,0.86l-2.04,0.58l-0.52,-0.92l-0.75,-3.11l-0.56,-0.64l-4.22,0.29l-1.52,0.72l-1.23,-0.06ZM539.59,280.92l0.58,-0.54l3.34,-0.15l1.73,1.79l0.23,0.65l-5.87,-1.75ZM534.48,328.45l0.17,-0.1l0.15,0.24l-0.13,-0.01l-0.19,-0.13ZM536.92,329.16l0.04,-0.58l0.39,-0.25l1.17,0.66l0.88,-0.68l0.46,1.16l-0.8,0.6l-2.13,-0.91ZM530.86,213.12l-0.96,-1.73l2.58,-3.32l1.87,0.3l1.38,-0.56l2.4,-0.27l0.97,0.19l-0.7,1.72l-4.49,3.43l-1.65,-0.25l-1.4,0.48ZM527.23,181.66l2.67,1.22l0.3,0.27l-0.26,0.56l-1.12,0.19l-0.25,-1.22l-1.35,-1.02ZM532.16,184.95l0.17,0.02l-0.06,0.03l-0.11,-0.04ZM529.08,326.21l0.37,0.1l0.17,0.1l-0.27,0.23l-0.26,-0.42ZM525.38,185.5l-1.58,-1.37l-0.33,-1.63l0.57,0.05l0.81,1.14l0.72,1.54l-0.19,0.27ZM466.13,40.6l1.5,-0.38l2.39,0.19l0.28,-0.68l-0.33,-0.35l-2.62,-1.77l0.07,-1.15l0.74,-0.25l3.41,0.41l0.86,0.39l0.95,0.97l4.92,0.14l0.38,-0.29l-0.69,-0.77l-2.89,-0.67l-1.08,-1.33l-3.31,-0.95l0.98,-1.32l1.28,-0.51l2.38,0.21l3.5,-0.88l2.63,0.18l0.75,-0.86l-0.46,-0.95l-0.81,-0.41l-3.5,-0.18l-0.33,-0.61l4.19,-0.28l1.45,0.21l3.13,0.81l1.99,1.05l3.69,4.01l3.0,1.95l0.35,1.19l4.01,1.14l1.85,-0.46l1.23,0.26l0.33,0.39l-0.31,0.61l0.25,0.43l-0.22,1.29l1.96,1.38l3.38,0.65l0.54,-0.33l-1.03,-1.64l-1.18,-0.41l-0.1,-0.96l0.41,-0.25l1.85,-0.11l2.06,0.6l0.17,1.58l-1.22,0.67l-0.27,0.42l0.19,0.59l3.61,0.65l0.92,1.39l-0.77,2.43l-0.75,0.94l0.19,0.59l2.13,-0.11l1.4,-0.62l1.44,0.12l0.59,0.23l0.81,1.34l0.46,0.21l1.57,-1.47l2.82,3.16l-0.97,0.65l-4.09,1.23l-3.13,1.38l-1.3,0.04l-0.75,1.3l-2.55,2.0l-1.11,-0.55l-0.18,-1.44l0.68,-1.45l-0.08,-0.51l-0.46,-0.17l-1.16,0.6l-0.82,0.97l-0.02,2.17l-0.38,1.06l1.3,0.68l0.04,0.48l-0.47,0.39l-0.5,-0.16l-1.74,-1.22l-1.04,0.29l-0.13,0.44l0.66,1.98l-0.82,1.94l-1.06,-0.2l-4.91,-4.48l-0.51,0.26l-0.15,0.98l2.59,3.35l-2.4,-1.3l-1.79,-0.23l-1.29,0.37l0.11,0.65l1.34,0.86l-4.97,-0.29l-4.72,-1.36l-2.07,-1.13l4.43,-0.67l0.35,-0.31l-0.53,-0.64l-6.89,-0.57l-1.38,-1.1l1.91,-0.01l0.29,-0.36l-0.25,-0.39l-3.79,-1.09l-1.09,-0.74l4.15,-1.52l2.37,-0.21l0.99,-0.49l0.6,-0.94l5.99,-0.88l0.53,-0.64l-0.4,-0.28l-4.71,-0.0l-1.27,-0.75l-1.79,-0.13l-5.73,1.82l-0.24,-0.02l0.47,-0.32l0.08,-0.61l-1.17,-0.31l-1.61,0.14l-3.36,1.12l-1.1,-0.71l-1.65,-0.39l0.12,-0.93l5.62,-1.5l0.83,-0.97l-0.39,-0.61l-4.55,0.96l-2.69,-0.22l-2.96,-1.93l-0.54,-0.67l-0.6,-1.87l4.31,0.69l5.83,0.21l0.57,-0.38l0.02,-0.77l1.4,-0.48l0.36,-0.59l-0.36,-0.28l-1.67,-0.08l-4.03,0.78l-1.12,-1.02l-2.12,0.01l-1.53,-0.73ZM514.35,164.16l1.01,-1.37l0.82,0.5l0.29,2.36l-0.8,1.31l-1.04,-0.66l0.24,-1.2l-0.52,-0.94ZM512.66,146.44l0.56,-0.22l2.28,0.31l0.23,0.29l-0.66,0.13l-2.4,-0.5ZM495.93,80.57l1.8,-0.54l0.8,0.01l0.78,0.51l0.24,0.27l-0.65,1.02l0.18,1.0l-1.3,-0.2l-1.84,-2.07ZM499.04,74.64l-1.76,0.55l-3.79,-1.23l-0.73,-0.77l0.09,-1.68l1.23,-0.33l3.25,0.62l2.11,1.5l0.05,1.02l-0.45,0.31ZM496.34,152.96l0.42,-0.22l0.29,0.15l-0.33,0.55l-0.38,-0.47ZM482.1,107.73l2.92,0.77l1.84,1.09l3.2,-0.52l2.7,0.18l2.28,0.56l1.07,0.6l-0.92,1.4l-1.88,1.57l-1.59,2.17l-1.42,0.58l-0.04,0.74l0.3,0.34l-1.63,2.17l-1.6,1.49l-1.17,0.28l-4.87,-0.81l-4.5,0.44l-0.34,0.3l0.16,0.42l2.24,0.86l0.92,0.96l0.08,0.86l-1.56,1.57l-1.16,2.27l-1.77,-0.39l-3.12,0.21l-0.34,-4.29l-1.79,-3.69l-0.19,-7.7l0.86,-0.39l3.57,0.9l0.39,-0.32l-0.26,-0.55l-0.9,-0.37l-1.09,-1.47l-0.04,-0.52l0.38,-0.42l2.67,-0.83l3.66,-0.08l1.77,-0.57l1.15,0.17ZM494.98,153.24l0.12,-0.01l0.22,0.31l-0.07,-0.09l-0.27,-0.21ZM470.31,69.69l1.39,0.41l8.36,-0.18l1.67,0.6l-0.76,0.35l-0.86,1.57l-1.37,0.15l-10.84,-0.34l-1.16,-1.0l0.41,-0.74l3.16,-0.81ZM465.05,98.52l0.92,-1.47l1.18,-0.48l0.34,-1.24l2.08,-1.55l3.08,-0.94l1.91,-0.01l1.85,0.76l2.48,1.93l1.17,1.94l-0.23,0.95l0.44,1.88l-0.43,1.6l-5.4,0.21l-2.89,-1.49l-2.98,-0.4l-1.19,-1.03l-0.97,-0.05l-0.72,-0.66l-0.64,0.07ZM473.82,89.36l1.34,-0.39l0.77,1.62l-1.59,-0.03l-0.51,-1.2ZM456.17,58.61l1.09,-0.2l3.31,0.24l4.51,1.28l0.95,0.7l0.54,0.84l1.33,0.3l2.01,-0.12l2.56,0.91l0.48,0.39l-1.65,0.76l-0.48,0.55l0.16,0.61l1.78,1.15l-1.03,0.93l-1.29,0.07l-2.84,0.83l-2.35,0.17l-2.45,0.71l-0.05,-1.03l-2.77,-1.34l2.62,-0.3l0.65,-0.56l-0.3,-0.57l-4.23,-0.84l-1.11,-0.93l-0.22,-0.75l-1.13,-0.82l1.06,-0.42l0.21,-0.58l-1.35,-1.98ZM449.92,155.81l0.31,-0.43l2.78,-0.35l2.15,-1.3l0.43,-0.67l-0.39,-0.8l0.38,-0.28l-0.13,-0.41l1.09,0.76l1.1,-0.09l-1.3,-2.22l0.34,-0.7l1.82,-0.52l1.54,0.91l-0.17,0.69l0.41,0.43l0.96,-0.33l1.77,1.43l2.9,1.47l1.73,2.82l1.12,1.22l0.85,0.56l1.34,-0.3l-1.87,0.53l-2.94,2.0l-1.44,0.36l-2.02,-0.66l-2.36,-0.05l-3.83,-1.71l-0.39,-0.87l-2.4,0.18l-0.84,-1.07l-1.72,0.62l-0.75,-0.39l-0.48,-0.8ZM469.24,103.1l0.86,-0.16l0.76,0.56l-0.22,-0.03l-1.4,-0.37ZM468.22,152.22l-0.06,-0.28l0.14,-0.43l0.05,0.18l-0.12,0.52ZM469.52,151.1l0.96,0.7l-0.2,0.73l-0.46,0.24l-0.29,-1.66ZM465.94,92.56l1.34,0.58l-0.53,0.4l-1.48,-0.18l-1.4,1.18l-0.77,-0.16l-0.11,-0.49l2.22,-0.71l0.73,-0.63ZM439.92,114.01l0.73,-0.44l1.56,-0.25l2.2,1.43l0.57,-0.2l-0.46,-1.59l-1.56,-0.91l-0.29,-0.75l2.12,-0.39l2.51,0.47l0.74,-0.67l-0.06,-0.43l3.71,1.72l5.09,-0.85l1.65,-0.61l1.17,-0.08l1.68,0.4l0.92,1.24l-0.57,0.53l-2.0,0.52l-0.59,0.57l0.35,0.8l1.55,0.18l-2.66,1.01l-3.2,2.6l-0.18,0.94l0.63,0.59l1.78,-0.85l1.93,-0.07l1.3,0.71l-0.25,0.39l0.25,0.48l1.27,0.81l-0.39,0.85l0.27,0.56l2.96,-0.68l0.41,1.18l-0.11,0.9l-1.69,1.37l1.04,1.05l-0.86,1.59l0.72,0.79l0.04,0.8l-1.53,0.39l-1.34,1.08l-1.66,0.38l-2.94,-0.3l-0.28,-0.28l-0.08,-1.13l-0.3,-0.36l-0.43,0.04l-0.83,1.2l1.34,2.78l-2.02,1.12l-1.51,-0.6l-0.95,-0.0l-2.7,-3.53l-4.51,-3.87l-2.02,-0.59l-1.23,-1.03l-1.58,0.34l-0.93,-0.29l-1.31,-1.65l-2.14,-1.02l-1.41,-1.45l0.74,-1.7l1.47,-0.8l1.23,0.16l0.73,0.99l1.13,0.65l0.91,1.23l0.71,0.43l1.03,0.08l3.12,-0.58l0.49,-0.55l0.18,-1.08l0.61,0.47l0.82,-0.35l0.2,-0.78l-0.78,-1.47l-1.49,-0.62l0.63,-0.41l1.83,0.61l0.86,-0.12l0.33,-0.37l-0.29,-0.41l-2.74,-1.42l-2.71,0.8l-2.9,-1.7ZM447.4,110.0l-0.39,0.1l-0.35,-0.0l0.55,-0.19l0.19,0.09ZM463.64,119.03l-0.62,0.07l-0.5,-0.45l0.22,-1.04l0.52,-0.2l0.98,0.81l-0.26,0.69l-0.35,0.12ZM438.14,87.59l1.51,-1.04l0.12,-0.58l-0.47,-0.36l-1.76,0.02l-0.72,-0.31l1.14,-1.09l0.69,-0.08l1.58,0.39l0.92,0.62l0.53,1.12l4.86,3.0l2.02,0.36l0.61,-0.39l-0.14,-0.68l-1.78,-1.12l2.4,-0.08l0.36,-0.39l-0.34,-0.4l-3.46,-0.62l1.25,-0.22l0.3,-0.43l-0.19,-0.42l-1.07,-0.53l-2.45,-0.4l-0.88,-0.47l0.12,-0.2l2.07,-0.87l2.82,-0.19l0.63,0.07l2.43,1.72l1.73,-0.03l0.32,-0.59l-0.56,-1.24l1.16,-0.57l2.27,1.22l2.41,0.74l-0.11,1.6l0.87,1.21l0.17,0.84l-0.61,1.42l0.23,1.28l-1.23,0.73l-0.18,0.57l0.38,0.41l2.02,0.52l0.12,1.54l-1.23,-0.37l-1.15,0.95l-0.01,1.95l0.88,1.0l-1.64,-0.8l-0.44,0.75l0.59,0.87l-3.31,0.35l-2.31,-0.1l-0.95,-0.34l-1.58,0.66l-2.89,-0.23l-0.93,-1.41l1.26,-0.14l0.37,-0.39l-0.23,-0.49l-2.64,-0.97l2.03,-0.55l2.76,-1.79l2.51,-0.3l0.44,-0.61l-0.41,-0.49l-3.68,0.18l-6.59,0.94l-1.36,-0.17l-5.49,0.97l-0.52,-0.23l-0.15,-0.34l1.63,-0.79l0.81,-0.68l0.47,-0.94l0.81,-0.07l3.41,1.29l1.77,-0.44l0.22,-0.41l-0.31,-0.34l-1.49,0.13l-0.55,-0.51l-0.37,-0.58l0.3,-0.43l-0.27,-0.64l-1.37,-0.16l-0.49,-0.43ZM459.54,103.72l0.63,-0.49l0.46,-0.03l-0.1,0.13l-1.0,0.4ZM451.16,109.99l2.23,-0.87l5.4,-0.9l-2.77,1.63l-2.01,0.11l-1.45,0.43l-1.4,-0.42ZM453.05,44.6l0.11,1.44l-0.45,1.08l-1.49,-0.53l-0.33,-0.75l-0.93,-0.55l-2.56,-0.01l-0.36,-0.99l0.21,-0.72l1.41,-0.52l3.51,0.36l0.49,0.27l0.4,0.93ZM422.32,57.55l1.07,-1.41l0.01,-0.7l-1.22,-0.61l-2.97,0.21l-0.02,-1.02l0.7,-1.49l2.64,0.13l5.74,-0.47l2.55,0.63l1.3,0.67l1.24,1.43l-0.33,0.94l0.7,1.43l0.58,0.21l0.42,-0.24l0.69,-1.28l1.9,-0.7l1.14,0.01l3.13,1.37l-0.54,0.97l0.39,0.8l1.22,0.21l2.34,-0.4l1.97,0.95l1.86,1.54l-1.08,1.14l0.46,1.95l1.13,0.43l2.1,1.71l0.54,0.92l-0.64,1.31l-3.81,0.65l-3.01,-1.01l-0.75,-0.82l-0.33,-1.17l-1.61,-1.4l-4.99,-0.95l-2.86,0.33l-0.49,-0.41l0.18,-0.34l-0.39,-0.6l-4.83,0.57l-1.41,0.65l-2.67,-0.35l-1.2,-0.59l-1.0,-1.36l0.95,-0.44l4.88,0.66l1.12,-0.24l0.68,-0.76l-0.11,-0.58l-0.64,-0.36l1.18,-0.54l0.09,-0.65l-1.03,-0.47l-2.7,0.0l1.12,-0.78l0.15,-0.45l-1.7,-1.25l-1.45,0.39l-1.85,1.52l-0.52,0.11ZM446.42,155.7l0.23,-0.19l0.22,0.6l-0.3,-0.13l-0.15,-0.28ZM444.47,157.69l0.11,-1.39l0.44,0.02l0.91,0.82l-0.21,0.74l-0.41,0.29l-0.36,-0.46l-0.47,-0.01ZM440.82,81.98l0.4,-0.09l-0.29,0.09l-0.11,0.0ZM441.49,81.81l1.02,-0.71l1.67,-0.16l-0.86,0.32l-1.83,0.55ZM444.23,141.37l1.03,0.39l-0.04,0.35l-0.88,-0.33l-0.11,-0.41ZM353.8,138.14l2.52,-1.34l9.81,-2.1l0.21,-0.65l-0.22,-0.22l2.1,0.09l1.11,-0.38l-0.2,-0.73l-1.6,-0.43l-10.9,1.46l-2.02,-0.34l1.59,-0.62l0.7,-0.93l-0.31,-0.64l-4.24,0.1l-1.32,-0.32l-0.42,-0.5l0.14,-1.73l1.71,-1.64l1.15,-0.39l0.96,-0.83l-0.06,-0.54l-1.27,-1.15l0.4,-0.69l5.58,-3.6l13.25,-4.44l1.91,0.62l0.67,1.98l-0.25,1.81l-2.0,2.32l0.11,0.84l1.12,0.04l3.16,-0.77l0.77,0.17l0.7,-0.7l0.2,-1.5l0.74,-0.77l0.89,-0.35l1.53,0.08l3.56,0.94l3.75,1.58l-0.41,0.86l-1.22,1.23l-1.45,0.77l0.12,0.71l0.99,0.47l0.48,0.01l1.36,-1.16l0.42,0.62l0.86,-0.03l1.93,-1.67l2.79,-1.17l0.31,-0.42l-0.11,-1.23l-1.82,-1.0l-0.49,-0.67l2.9,0.18l4.44,2.46l0.53,0.44l0.14,0.82l1.12,0.36l2.83,7.8l1.63,1.04l0.89,0.08l0.68,-0.9l1.81,-1.08l0.15,-1.2l-1.92,-2.33l-0.62,-2.67l-0.54,-0.77l-1.57,-5.69l0.06,-0.39l1.25,-0.28l0.04,-0.71l-0.49,-0.52l1.3,0.16l3.02,1.31l0.47,-0.02l0.63,-0.74l0.42,0.07l5.08,2.45l0.89,0.75l0.96,1.21l0.95,3.63l2.17,4.91l2.14,3.05l0.15,1.63l-1.09,2.64l0.36,0.66l1.81,1.32l1.19,1.6l1.93,1.24l2.55,1.14l0.77,-0.19l0.18,-0.53l4.66,2.77l1.57,0.06l0.44,1.2l2.5,0.08l0.43,0.76l0.33,1.83l-0.23,0.88l-0.84,-0.05l-0.7,-0.45l-0.48,-0.98l-0.6,0.02l-0.66,1.21l-2.92,-1.29l-2.08,1.24l0.02,1.4l-1.29,-0.11l-2.22,-1.08l-0.84,0.3l-0.14,0.7l0.24,0.3l1.85,1.28l-0.42,2.09l0.56,0.42l1.78,-1.57l1.65,-0.86l1.3,-0.09l0.48,0.25l-0.38,0.67l0.14,0.91l1.28,0.63l-0.27,1.03l-5.03,1.68l-2.87,0.13l-2.98,-0.5l-1.41,-0.54l-1.35,0.46l-2.44,-0.39l0.65,-0.84l-0.38,-0.63l-5.65,-0.71l-0.79,-0.42l-0.06,-1.26l-0.41,-0.49l-1.52,-0.35l-1.28,0.96l-0.9,1.47l-1.94,1.52l-4.71,0.6l-2.99,1.57l-2.62,0.72l-6.93,0.86l-1.47,-0.08l-1.01,0.42l-8.59,0.53l-0.87,-0.39l-1.57,-1.97l-0.23,-2.24l-0.72,-1.76l-3.27,-0.68l-6.63,-0.13l-4.44,-1.24l-2.86,-3.29l-0.4,-2.0l2.94,-0.79l9.97,-1.26l9.99,0.8l2.36,-0.46l1.98,0.02l0.98,-0.38l0.06,-0.65l-0.48,-0.4l-2.13,-0.95l-8.49,-2.27l-11.43,0.97l-1.68,-0.34l-3.45,0.18l-2.9,-0.23l-3.71,-2.81ZM435.02,68.68l3.8,-0.1l2.6,0.95l-4.73,0.45l-1.36,-0.35l-0.31,-0.94ZM441.45,151.89l-0.06,-0.26l0.16,0.18l-0.1,0.08ZM436.25,158.94l0.9,-0.75l0.91,0.47l-0.44,0.76l-1.37,-0.48ZM431.04,90.56l0.96,-0.93l-0.1,-0.64l-1.09,-0.45l-2.78,0.66l-0.45,-0.18l0.57,-0.66l-0.26,-0.66l-2.16,-0.11l-0.5,-0.38l0.11,-0.3l6.14,-1.3l2.26,0.22l0.42,1.75l2.04,1.41l-1.49,0.52l-0.78,0.9l-2.88,0.16ZM431.02,65.13l0.56,-0.51l0.9,-0.15l-0.76,0.55l-0.71,0.11ZM424.16,82.36l2.23,-0.5l0.22,0.87l1.51,-0.17l0.7,0.63l2.33,0.78l-1.68,0.66l-4.25,-0.02l-1.05,-2.25ZM422.82,97.28l0.97,-1.75l1.3,-0.71l1.26,0.05l0.97,0.47l0.92,1.69l-0.64,0.63l-2.33,0.46l-1.55,-0.29l-0.9,-0.55ZM422.07,160.33l1.5,0.12l0.58,0.52l-0.77,0.01l-1.31,-0.65ZM416.93,70.17l1.65,0.11l1.4,0.95l1.31,1.32l0.31,1.01l1.15,0.25l1.01,0.71l0.34,0.74l-0.14,0.62l-0.76,0.25l-2.4,-0.59l-1.6,-1.71l-2.27,-3.67ZM412.25,113.78l1.36,-1.43l6.44,-0.69l3.2,1.42l0.35,1.14l-0.14,1.01l-0.98,1.68l-1.41,1.63l-1.03,0.68l-3.46,-2.58l-0.69,-1.15l-1.83,-1.11l-1.81,-0.6ZM360.07,92.18l0.64,-0.68l0.77,-0.24l6.75,-0.72l2.54,-0.59l0.27,-0.44l-0.4,-0.34l-7.32,0.07l-0.68,-0.25l0.37,-0.47l-0.2,-0.8l2.36,-0.95l6.58,0.3l0.36,-0.33l-0.75,-0.67l-4.6,-0.6l-0.0,-0.32l1.03,-0.9l2.86,-0.61l2.26,-0.04l1.55,0.46l0.6,1.49l1.37,1.13l3.49,-0.5l2.25,0.55l3.87,2.52l-0.83,0.57l0.13,0.67l2.75,0.24l1.22,2.03l1.31,0.8l10.7,0.37l0.78,-1.07l-0.21,-1.42l-4.52,-2.02l1.9,-0.92l0.26,-0.7l-0.15,-0.69l-1.53,-1.18l-2.51,-0.82l-0.38,-0.56l2.11,-1.23l2.7,-2.53l1.08,-0.49l1.21,-0.09l1.5,0.67l-0.77,1.0l-0.0,0.48l0.65,1.72l1.63,1.17l0.25,0.71l-1.24,1.17l-0.01,0.84l0.82,0.32l2.14,-0.02l0.39,0.39l-1.45,1.63l0.23,0.62l0.76,0.02l1.87,-1.02l1.49,0.1l0.61,0.32l1.0,1.9l0.44,-0.33l0.06,-0.83l1.07,-0.59l-0.84,-1.28l0.72,-0.62l1.21,-0.33l2.41,0.51l1.26,0.6l0.63,1.83l-1.9,5.46l-1.0,0.89l-5.22,1.62l-3.49,-0.74l-3.24,0.54l-0.6,-0.13l0.02,-0.52l-0.34,-0.28l-1.17,-0.21l-3.34,1.81l-4.55,0.72l-2.83,1.78l-3.99,1.37l-3.98,0.85l-2.48,0.15l-3.22,-0.49l-2.51,-1.19l-0.73,-0.65l0.91,-0.59l4.12,-1.11l2.46,-1.01l5.99,-0.46l3.11,-1.85l0.27,-0.93l-1.0,-0.46l-2.35,0.95l-2.98,0.36l-2.05,-0.8l-1.78,1.06l-3.77,0.39l-0.38,-0.28l-0.02,-1.1l1.72,-1.31l0.25,-0.64l-1.01,-0.18l-1.38,0.34l-0.68,-0.56l-0.66,0.41l-0.47,1.54l-1.3,-0.42l-0.44,0.16l-0.12,0.62l0.74,0.93l-0.32,0.37l-2.66,1.06l-1.05,-1.15l-1.09,-0.23l-0.76,0.42l-0.71,1.05l-1.94,-0.69l-1.65,-1.29l-2.9,0.08l-2.4,-0.46l-0.28,-0.44l1.47,-1.45l6.03,-0.35l4.27,-1.53l0.7,-0.54l0.17,-0.6l-0.48,-0.31l-6.59,1.24l-3.23,-0.23ZM406.58,174.16l0.29,-0.0l-0.11,0.21l-0.19,-0.21ZM406.05,169.16l0.47,0.8l-0.03,0.24l-0.49,-0.34l0.05,-0.7ZM379.81,63.23l2.96,-1.41l4.78,-0.84l3.27,-1.5l2.22,-0.53l0.95,0.01l4.5,1.91l0.66,1.56l-0.16,0.52l-1.34,0.27l-5.27,-0.07l-2.08,-0.83l-1.94,1.22l-1.08,-0.08l-2.05,-0.93l-4.46,0.82l-0.94,-0.12ZM380.01,68.35l9.99,-1.93l3.8,-0.17l3.78,0.24l-0.48,0.6l-5.55,1.35l-0.18,0.64l0.9,0.67l2.76,0.1l0.1,1.22l-0.3,0.81l-2.3,0.78l-2.78,0.19l-3.66,0.9l-1.95,-0.19l-1.33,-0.83l-2.59,-0.93l0.3,-0.97l-0.75,-1.56l0.2,-0.94ZM372.18,80.09l1.45,-0.48l2.61,-0.2l1.65,0.7l-0.76,0.46l-4.94,-0.48ZM373.77,66.63l0.46,0.72l2.52,1.09l0.43,0.48l-2.05,0.75l-0.81,-0.01l-1.51,-0.48l-1.77,-1.5l2.74,-1.04ZM315.79,128.42l0.18,-1.02l0.7,-0.33l-0.04,-0.76l1.18,-1.63l1.99,-1.57l0.16,-2.54l2.1,-1.04l-0.13,-0.98l-0.94,-0.36l-0.16,-0.4l1.05,-1.14l0.85,-1.68l1.5,-1.01l0.55,-1.27l1.24,-1.45l-0.49,-0.85l-1.62,-0.74l-2.25,-3.88l15.66,-1.9l4.76,1.92l4.33,1.14l-0.39,0.55l0.11,0.66l0.52,0.05l1.22,-0.86l1.07,0.02l0.18,1.52l0.54,0.31l2.57,-2.19l2.03,-0.31l2.43,0.14l3.73,1.46l5.05,3.5l1.68,0.83l0.99,1.02l-0.01,0.45l-0.38,0.28l-4.9,1.61l-13.33,6.01l-2.22,3.25l-1.17,0.51l-1.68,0.16l-0.73,0.5l-1.34,5.47l-0.73,0.94l-4.09,1.04l-0.79,-0.54l-0.78,0.04l-2.18,1.72l-1.94,0.66l-1.48,0.89l-1.08,0.02l-0.94,-0.6l-1.82,-2.98l-1.85,-1.89l-6.58,-2.81l-2.33,0.07ZM331.11,86.43l1.94,-1.77l4.18,-0.58l2.4,-2.24l3.08,-1.37l0.96,-1.22l6.17,-4.28l5.38,-0.8l2.99,0.69l0.93,-0.01l0.58,-0.41l1.56,0.16l0.84,-0.5l-0.03,-0.66l-1.41,-0.51l0.64,-0.38l1.55,-0.19l1.36,0.31l3.43,1.78l-3.41,1.14l-0.71,0.51l-0.11,0.52l0.34,0.51l2.04,1.34l-1.44,-0.03l-0.58,0.64l1.46,1.88l-1.08,0.72l-3.89,0.82l-0.32,0.3l-0.21,1.61l-0.71,0.74l-1.14,0.08l-2.29,-1.24l0.18,-1.43l0.95,-2.26l-0.28,-0.58l-0.61,-0.14l-2.34,0.77l-0.73,0.97l-0.25,1.09l-1.7,0.48l-0.05,0.87l0.85,0.85l-1.03,0.88l-0.7,1.15l-0.77,-0.12l-1.37,-1.87l-0.92,0.17l-0.42,0.71l0.06,1.11l-0.49,0.76l1.06,0.86l-1.7,1.31l-2.17,0.33l-0.66,-1.68l-1.56,-2.01l-0.76,0.24l-0.67,1.51l-0.79,0.3l-3.54,-0.53l-2.47,0.93l-0.73,-0.32l0.43,-0.73l-0.25,-0.93l-0.41,-0.33l-0.65,0.07ZM348.7,92.43l3.57,-2.6l2.53,-0.94l1.85,-1.17l0.69,0.04l-1.82,2.53l-2.11,2.24l-1.34,0.61l-3.36,-0.71ZM304.86,299.15l1.07,-0.29l1.02,0.45l0.21,-0.39l-0.18,-1.54l-1.55,-0.18l-0.41,0.63l-1.09,0.1l-1.17,-1.05l0.33,-0.4l1.43,-0.18l6.14,2.3l5.93,1.15l2.89,3.93l0.54,1.34l1.13,0.82l3.21,1.31l0.8,0.81l1.63,3.26l0.75,0.03l0.21,0.5l-0.6,0.03l-0.45,0.51l-1.58,-0.33l-5.53,-2.1l-0.37,-0.22l1.39,-1.34l0.22,-1.44l-0.66,-0.25l-0.51,1.23l-2.02,0.09l-0.73,0.36l-0.78,-0.59l0.33,-0.33l-0.02,-0.57l-1.48,-0.65l0.11,-0.46l-0.58,-0.39l-2.6,-0.28l-0.03,-0.3l1.98,-0.46l-0.22,-0.8l-1.0,0.07l-0.87,-0.39l-0.7,-0.99l-1.15,-0.46l-1.1,0.41l-0.47,-1.57l-0.6,-0.11l-0.28,0.36l-0.63,-0.58l-1.48,0.18l-0.12,-0.94l-0.42,-0.25ZM318.16,299.33l0.52,0.81l-0.22,0.34l-0.39,-0.94l0.09,-0.21ZM310.07,303.42l0.08,-0.47l0.61,0.92l-0.33,-0.16l-0.36,-0.29ZM303.82,290.72l0.36,0.38l0.0,0.31l-0.15,-0.13l-0.21,-0.56ZM302.31,283.9l-0.01,-0.41l0.12,-0.19l-0.12,0.6ZM299.11,279.79l1.47,0.95l0.36,1.05l0.21,2.68l-0.35,0.56l-0.06,-2.08l-0.63,-0.36l-0.43,0.52l-1.17,-1.77l0.6,-1.55ZM298.52,283.66l0.24,0.22l0.04,0.06l-0.23,-0.2l-0.05,-0.08ZM297.76,280.11l-0.0,-0.01l0.01,-0.02l0.0,0.03l-0.01,-0.0ZM291.81,277.37l2.12,1.18l0.77,1.05l-0.22,0.1l-2.66,-2.33ZM291.2,274.44l0.56,-0.34l0.49,0.5l-0.31,0.35l-0.74,-0.51ZM282.34,280.67l1.98,-0.59l0.39,0.17l0.49,1.27l-1.3,0.07l-0.28,0.2l0.13,0.71l1.99,0.98l-0.32,0.6l0.26,0.58l-2.53,-2.18l-0.31,-0.48l0.53,-0.71l-1.03,-0.62ZM286.48,285.6l0.38,0.11l-0.07,0.33l-0.24,-0.3l-0.07,-0.14ZM287.53,286.56l0.18,0.0l-0.07,0.06l-0.11,-0.06ZM278.62,273.61l1.57,0.19l0.72,0.41l1.03,-0.24l0.31,0.34l0.22,0.84l-2.06,1.23l0.02,0.44l0.54,0.32l2.12,-0.45l0.42,-1.38l-0.08,-0.87l1.48,-0.4l-1.02,2.12l-0.47,2.92l-1.55,0.48l-1.38,-0.43l1.02,0.21l0.39,-0.53l-2.4,-1.57l-0.93,-1.88l0.04,-1.75ZM247.18,150.81l0.14,-0.08l0.06,0.0l-0.14,0.11l-0.06,-0.03Z\",\n            name: \"Canada\"\n          },\n          SV: {\n            path: \"M498.24,510.01l2.69,-2.02l0.04,-0.83l0.4,-0.08l1.42,0.34l1.29,1.21l1.56,0.72l0.45,0.73l1.73,-0.66l0.63,0.49l1.16,0.09l-0.53,2.53l-0.3,0.29l-1.07,0.07l-2.13,-0.61l-1.27,0.01l-2.07,-1.0l-2.7,-0.44l-1.31,-0.83Z\",\n            name: \"El Salvador\"\n          },\n          HT: {\n            path: \"M580.72,487.14l-0.81,-0.67l-1.65,-0.68l0.21,-0.8l7.95,1.07l0.97,-0.61l1.22,-0.15l0.35,-0.43l-0.14,-0.81l-2.01,-1.72l0.36,-1.85l-0.18,-0.49l-1.81,-0.91l-1.63,-0.4l2.36,-0.52l3.23,0.95l2.16,0.25l-0.0,1.87l0.48,0.56l-0.78,1.07l0.39,0.84l-0.45,0.62l-0.82,0.19l-0.05,0.51l1.21,1.38l-0.07,0.46l-1.12,-0.52l-4.14,0.4l-2.65,-0.52l-1.45,0.14l-1.12,0.76Z\",\n            name: \"Haiti\"\n          },\n          TT: {\n            path: \"M643.52,528.92l0.93,-0.6l0.17,-1.53l-0.28,-0.7l1.93,-0.33l-0.23,0.49l0.15,2.42l-2.67,0.25Z\",\n            name: \"Trinidad and Tobago\"\n          },\n          JM: {\n            path: \"M563.41,485.93l1.71,0.33l1.05,0.69l1.72,0.54l0.44,0.7l-1.0,0.07l-1.76,-0.57l-0.62,0.65l-0.64,-0.23l-0.7,0.66l-1.05,-0.44l-1.41,-0.09l-1.43,-1.54l-1.29,-0.34l0.31,-0.37l1.7,-0.38l2.99,0.33Z\",\n            name: \"Jamaica\"\n          },\n          GT: {\n            path: \"M487.5,505.99l0.25,-2.03l0.38,-0.47l-0.62,-1.16l2.22,-3.83l6.37,-0.01l0.39,-0.45l0.03,-1.91l-0.98,-0.53l-0.55,-1.15l-1.38,-0.86l-1.27,-1.3l0.96,0.01l0.4,-0.4l0.02,-2.57l8.53,0.01l-0.29,9.94l1.99,0.17l1.41,0.63l0.77,-0.52l0.62,0.38l-4.44,3.3l-0.33,1.31l0.26,0.98l-0.81,0.76l-1.08,0.27l-0.12,0.92l-1.83,1.18l-0.93,1.04l-2.11,-0.78l-2.79,0.01l-1.09,-0.31l-3.99,-2.61Z\",\n            name: \"Guatemala\"\n          },\n          HN: {\n            path: \"M502.26,506.51l0.75,-0.7l-0.22,-1.4l0.22,-0.76l0.93,-0.43l3.59,-2.89l0.67,0.01l1.18,-0.86l0.79,-0.15l0.82,0.55l1.25,-0.15l2.04,0.36l2.93,-0.16l2.22,-1.15l2.06,0.59l2.56,-0.46l2.09,0.97l1.4,-0.13l1.06,0.86l-0.51,0.53l0.45,0.84l0.71,0.01l1.02,0.94l0.74,-0.23l0.64,0.22l0.13,-0.28l0.44,0.62l-0.9,0.17l-1.73,0.96l-1.9,0.25l-1.12,0.53l-0.66,-0.08l-1.15,-0.79l-0.91,0.32l-1.1,1.41l-0.19,0.93l-2.71,2.24l-1.32,-0.93l-0.76,0.41l-0.87,1.1l-2.16,0.14l-0.23,0.62l0.25,1.74l-0.89,0.4l-0.51,1.1l-0.93,0.04l-1.08,-1.91l-0.97,-0.13l-0.21,-0.55l0.26,-1.52l-0.56,-0.53l-1.13,-0.04l-1.02,-0.52l-1.26,0.55l-0.33,-0.51l-0.89,-0.23l-2.12,-1.76l-0.83,-0.15Z\",\n            name: \"Honduras\"\n          },\n          BZ: {\n            path: \"M502.69,498.61l0.37,-10.07l1.09,0.23l0.57,-0.32l1.77,-2.64l0.22,0.62l0.94,0.05l0.11,0.31l-0.92,3.07l0.26,0.66l-0.37,1.02l-0.11,3.45l-1.14,1.6l-0.74,0.32l-1.16,1.71l-0.88,-0.02Z\",\n            name: \"Belize\"\n          },\n          BS: {\n            path: \"M582.19,471.96l0.6,-0.57l1.63,0.08l-0.22,0.3l-2.01,0.18ZM564.14,442.52l0.07,0.5l-0.12,0.1l-0.02,-0.38l0.08,-0.22ZM560.35,454.98l0.39,-0.1l0.0,0.48l0.37,0.24l0.5,-0.1l0.02,1.4l-0.36,-0.03l-0.92,-1.9ZM558.49,452.88l0.34,-0.69l-0.2,-0.32l0.53,-0.85l0.04,-1.03l1.41,2.26l0.04,0.9l-1.0,0.58l-0.29,-0.54l-0.87,-0.31ZM556.78,441.65l0.13,-0.32l0.39,0.16l-0.34,0.1l-0.18,0.07Z\",\n            name: \"Bahamas\"\n          },\n          CR: {\n            path: \"M520.07,525.02l0.84,-1.08l3.35,1.21l1.27,-0.52l1.6,0.38l1.02,1.02l1.33,0.23l1.32,-0.39l1.24,2.39l2.84,3.21l-0.83,1.04l-0.0,2.02l0.93,0.65l-0.76,0.8l0.32,1.39l-0.64,0.41l-0.37,-1.17l-1.44,-0.72l-0.4,0.06l-0.3,0.59l0.63,0.83l-0.72,-0.17l-0.38,-0.4l0.46,-0.81l-0.0,-1.05l-0.7,-1.14l-2.53,-1.66l-1.86,-0.57l-0.68,-1.7l-2.7,-1.79l-0.72,0.35l0.14,0.77l0.47,0.65l1.25,0.66l-0.38,0.41l-0.37,0.3l-0.87,-0.94l-1.49,-0.44l-0.95,-1.69l0.89,-1.55l0.03,-0.73l-0.85,-0.82Z\",\n            name: \"Costa Rica\"\n          },\n          US: {\n            path: \"M321.51,312.91l3.17,1.24l3.48,0.32l0.75,-0.21l0.58,0.45l1.06,-0.08l0.45,0.94l-0.72,0.39l-1.17,1.57l-0.52,1.54l0.45,0.4l0.64,-0.1l-0.43,0.79l0.26,0.67l1.68,0.18l0.71,-0.37l0.44,-0.83l1.04,-0.86l-0.23,-2.77l0.76,-1.59l-1.0,-1.26l0.19,-0.48l-0.73,-0.93l0.28,-0.43l-0.26,-1.75l-0.77,-0.33l-0.29,-0.68l140.63,0.01l0.4,-0.39l0.03,-2.05l0.58,0.07l1.0,3.41l0.67,0.6l2.89,0.55l1.75,0.87l0.97,-0.07l1.0,-0.52l1.68,0.04l2.33,1.07l0.74,1.14l0.81,-0.36l1.09,0.16l2.69,1.63l0.8,-0.02l2.28,-0.96l0.91,0.68l3.16,-0.07l1.02,0.77l-3.65,1.26l-1.88,1.09l-5.91,4.78l-0.02,0.76l0.69,0.46l2.78,-0.39l3.13,-1.26l-0.7,1.57l0.14,0.63l1.36,-0.29l1.13,0.51l0.83,-0.11l2.57,-1.26l2.59,-0.58l2.09,-1.04l1.08,-0.99l0.82,1.06l0.15,1.4l0.54,0.07l1.08,-0.9l1.98,0.39l0.58,0.32l1.68,2.04l1.72,-0.09l0.47,0.34l1.54,0.21l2.57,-1.47l3.57,-0.16l1.77,-0.47l-0.21,1.21l0.42,0.55l2.58,0.45l0.83,-0.41l0.48,1.05l-0.12,0.72l0.94,0.3l0.18,0.5l-2.01,-0.13l-0.7,-0.37l-0.64,0.33l-0.26,0.71l-1.43,-0.98l-2.06,-0.41l-1.26,0.77l-2.63,0.21l-1.2,1.11l-0.53,-0.65l-1.14,0.22l-0.57,0.76l0.03,-0.97l-0.68,-0.11l-0.66,1.39l-2.54,3.44l-0.15,0.83l-1.04,0.6l-0.86,1.58l-0.15,1.01l0.74,0.45l1.13,-0.74l0.82,-1.12l0.5,-0.14l0.26,0.25l-0.93,2.31l0.0,1.2l-0.88,1.36l-0.01,1.59l-1.04,3.06l0.08,1.53l0.52,1.33l-0.03,3.71l1.28,2.82l1.31,0.91l1.6,-0.18l2.06,-1.18l1.85,-2.94l0.65,-2.21l0.06,-1.63l-1.62,-4.6l0.51,-1.02l-0.37,-1.57l1.05,-1.53l0.25,-2.31l0.6,-0.28l0.29,-0.9l1.01,-0.36l0.59,-0.61l0.01,1.5l1.03,0.24l0.87,-1.74l0.03,-1.45l2.16,-0.77l0.11,-0.55l-0.79,-0.68l0.66,-0.98l0.67,-0.11l2.45,0.87l0.87,0.85l3.02,1.07l0.59,0.99l-0.47,0.25l-0.18,0.57l0.78,1.4l-0.16,2.39l-0.89,0.6l-0.43,1.17l-1.46,0.8l-0.33,1.56l0.64,0.78l1.29,0.3l1.2,-0.84l0.93,-1.39l1.36,-0.51l0.89,0.62l1.44,5.57l-0.32,1.53l-0.1,0.24l-0.61,-0.26l-0.79,0.4l-0.58,1.63l-1.04,0.7l-0.46,1.52l-0.85,0.97l-0.47,1.25l2.1,1.0l0.32,0.94l2.04,-0.01l0.77,0.36l2.0,-0.57l2.15,-0.15l2.51,-1.58l4.58,-1.66l4.22,-2.16l2.03,-1.39l1.41,-1.42l-0.18,-1.92l-0.77,-0.34l0.02,-0.49l4.11,-0.6l3.26,0.79l3.09,0.0l1.33,-0.54l1.21,-0.98l1.17,-0.25l0.47,-0.54l-0.21,-1.52l0.78,-0.89l-0.82,-1.14l2.0,-1.3l0.39,-0.78l1.78,-1.55l1.97,-1.19l17.64,-0.21l1.11,-1.73l0.86,0.11l0.68,-0.41l0.8,0.35l0.43,-0.86l0.64,-0.25l0.03,-0.88l1.31,-1.05l0.69,-1.13l0.3,-2.3l0.95,-1.3l0.29,-1.62l3.69,-4.59l0.38,0.09l0.16,0.96l0.77,0.52l0.79,0.03l2.53,-0.94l2.15,1.54l0.17,7.28l-0.35,1.42l1.9,1.06l0.04,1.81l0.98,0.94l0.74,-0.17l0.1,1.55l0.37,0.37l-0.54,0.49l-1.79,0.22l-0.49,0.51l-0.99,-0.07l-0.9,0.94l-0.85,-0.56l-1.66,0.31l-0.39,0.98l-0.32,-0.11l-0.12,-1.11l-0.63,-0.34l-0.98,0.84l-0.74,2.29l-0.51,0.44l-1.21,0.3l-1.16,-0.2l-0.88,1.04l-0.53,-0.28l-1.31,0.69l-0.46,0.59l0.1,0.56l-1.35,1.42l-1.19,1.91l-0.48,1.49l0.56,1.36l-1.58,1.56l0.05,0.59l1.52,0.6l1.05,2.4l0.85,0.62l-0.79,0.4l-0.05,-0.56l-0.51,-0.39l-2.2,1.14l0.22,-0.77l-0.39,-0.56l-0.51,0.21l-0.57,-0.49l-0.52,0.47l-0.5,2.09l-7.21,0.62l-3.28,1.55l-1.05,0.89l0.01,-1.67l-0.51,-0.54l-0.49,-0.02l0.07,2.24l-1.71,2.32l0.42,0.98l1.07,0.15l-0.34,1.93l-1.07,2.38l-0.83,0.71l-0.12,0.72l-0.79,0.46l-0.88,1.57l-0.11,-0.76l-1.29,-0.44l-1.72,-1.43l0.41,-1.38l1.16,-0.37l0.49,-0.53l0.05,-0.87l-2.07,0.88l-1.07,1.23l0.02,1.47l0.78,1.11l0.14,1.17l1.52,1.94l-0.49,1.01l0.74,0.44l-1.58,2.35l-1.26,2.95l-0.97,0.67l1.4,-2.64l-0.26,-0.53l-0.5,-0.13l-0.39,-0.9l0.13,-0.87l-0.47,-0.52l-0.93,0.36l-0.78,-0.8l0.09,-0.29l0.99,0.09l0.34,-0.6l-1.07,-0.91l0.45,-1.98l-0.51,-0.35l0.55,-0.74l0.92,-0.05l0.35,-0.34l-0.41,-1.27l-0.56,-0.42l-0.73,0.32l-0.2,0.75l-1.12,0.13l-0.44,0.81l-0.87,0.18l0.42,0.9l-0.32,0.59l0.25,0.51l-0.08,1.95l-0.53,-0.33l-0.29,0.43l0.19,1.0l0.91,0.92l-0.93,-0.24l-0.42,-0.62l-0.58,0.01l-0.46,-0.52l-0.79,0.22l1.1,-1.65l-0.03,-0.86l-0.39,-0.36l-0.6,1.12l-0.96,0.89l-0.2,1.56l0.61,0.47l0.84,-0.12l0.33,0.44l-0.8,0.22l0.12,0.44l4.21,3.97l-0.74,0.48l-1.12,-1.13l-0.45,-0.09l-0.19,0.7l0.75,0.95l-1.53,-0.55l-1.37,-0.09l-0.39,0.24l0.09,0.45l2.92,0.99l1.22,1.66l1.32,-0.3l0.96,0.18l0.27,0.87l-0.37,1.44l0.56,1.01l-0.77,-0.33l-2.22,1.47l-0.99,-1.23l-0.38,0.38l0.04,1.57l0.34,0.43l0.59,0.08l2.45,-0.21l-0.1,1.26l0.41,0.43l0.66,-0.27l0.52,-1.24l0.04,1.15l-1.73,1.51l-1.34,-0.29l-0.24,-0.53l-0.47,-0.2l-0.8,0.57l-1.36,-0.51l-0.49,0.12l0.34,0.9l2.11,0.88l-0.35,0.83l-0.53,0.33l-1.16,-0.84l-0.52,0.01l-0.07,0.52l0.49,0.75l1.43,0.66l1.34,-0.09l-1.45,0.66l-2.06,0.08l-0.56,0.49l-0.26,-0.54l-0.45,-0.16l-0.28,0.38l0.04,1.03l-2.19,1.99l-0.25,-0.18l-0.37,0.36l-0.16,1.11l-1.75,-0.03l-1.1,0.32l-1.41,0.9l-1.53,1.82l-0.52,0.1l-0.28,0.51l0.1,0.93l-1.44,0.68l-1.06,1.17l-0.5,-0.1l-0.4,0.91l-1.91,0.82l-1.5,-0.02l-0.25,0.37l0.24,0.34l-0.83,-0.36l-0.24,0.88l0.43,0.81l-0.63,0.37l-0.33,0.87l-0.88,0.33l-0.08,0.71l-0.46,0.37l-0.37,1.03l0.17,0.38l-0.82,0.89l0.35,0.47l-0.66,0.25l-0.1,0.41l-0.29,1.98l1.37,5.68l2.47,5.28l-0.38,0.46l0.46,2.11l3.22,7.28l0.34,1.36l-0.37,4.82l-0.85,1.44l-0.34,1.55l-0.41,0.38l-1.84,0.31l-0.23,-0.6l-0.69,-0.34l-1.2,-2.31l-1.88,-1.04l-0.41,-0.75l-0.27,-1.52l-0.34,-0.36l0.45,-1.21l-0.47,-0.11l-0.65,0.47l0.2,-1.38l-0.32,-0.63l-0.99,0.16l-0.22,0.38l-0.63,-0.87l-1.06,-2.1l1.14,-1.46l0.15,-0.73l-0.3,-0.42l-1.44,-0.52l-0.37,0.66l0.29,0.7l-0.38,-0.3l0.45,-2.01l0.46,-1.47l-0.02,-2.46l-0.68,-1.0l-2.63,-2.2l-2.16,-2.72l-2.05,-1.04l-1.55,0.31l-0.46,0.77l-1.88,0.76l-2.12,0.41l-0.27,-0.77l-1.32,-1.1l0.02,-0.78l-0.37,-0.62l-0.98,0.5l-1.5,-0.63l0.24,-0.27l-0.18,-0.37l-0.92,-0.39l-3.24,0.63l-0.14,-0.83l-0.55,-0.2l-0.71,0.14l-0.84,1.18l-0.74,-0.33l-1.24,0.74l-0.63,-0.84l-0.22,-1.09l-0.85,-0.45l-0.7,1.78l-2.49,0.05l-1.18,-0.33l-2.09,0.39l-1.41,0.98l-3.19,-1.17l-0.94,0.78l-0.41,0.77l0.14,0.53l0.74,0.46l0.77,0.22l1.47,-0.52l0.36,0.94l0.78,0.28l0.43,-0.07l0.44,-0.71l0.22,0.59l-1.41,0.71l-0.38,0.86l1.28,1.3l1.63,0.5l0.47,0.51l-0.24,0.22l-0.63,0.04l-0.48,-0.71l-1.66,-0.76l-0.56,-0.7l-1.57,-0.51l-0.52,0.36l0.54,0.81l-0.29,1.12l-0.39,-0.7l-0.57,-0.27l-1.21,0.16l-0.71,0.74l-1.16,-0.31l-0.62,-0.23l0.04,-0.51l-0.82,-1.35l-1.12,0.09l-0.69,-0.93l-1.58,-0.65l-1.06,0.47l-0.36,0.42l0.03,0.56l-0.38,0.09l-1.99,-0.21l-2.62,-1.02l-2.87,0.08l0.09,-0.92l-0.64,-0.28l-0.9,1.12l0.09,0.55l-2.58,0.9l-0.77,-0.22l-0.06,-0.74l-0.38,-0.33l-1.55,0.28l-0.29,0.45l0.59,1.7l-1.05,0.91l-0.69,1.13l-3.33,1.9l-2.03,-0.28l-0.36,0.27l-0.59,-0.59l-0.6,0.07l-0.18,0.53l0.69,1.3l-0.41,0.13l-0.34,-0.3l-0.66,0.22l-0.19,1.02l-1.47,0.21l-0.3,0.4l0.41,0.73l-0.32,0.38l-1.36,0.28l-0.05,0.55l0.59,0.75l-0.58,1.47l-1.66,-0.69l-0.13,0.47l0.39,0.94l1.07,0.44l-0.37,1.32l0.58,2.54l1.3,2.5l-0.7,0.35l-1.96,-0.86l-2.36,-0.36l-4.13,-1.76l-0.57,-1.63l-1.11,-1.55l-0.36,-2.86l-1.3,-1.03l-2.68,-3.2l-0.18,-0.96l-2.19,-3.83l-3.3,-3.22l-1.04,-0.43l-2.25,0.07l-1.89,-0.39l-1.64,0.74l-0.61,0.61l-0.81,2.36l-1.49,1.11l-3.68,-1.77l-2.02,-1.36l-1.01,-1.41l-0.3,-1.55l-1.27,-2.62l-6.36,-4.95l-1.58,-1.82l-9.2,-0.1l-0.4,0.4l-0.01,2.15l-13.99,0.03l-18.83,-6.51l0.31,-0.83l-0.42,-0.54l-11.88,1.0l-0.14,-0.52l-0.49,-0.26l-0.33,-2.13l-0.81,-1.22l-3.32,-2.59l-1.39,-0.06l-0.02,-0.56l-0.83,-1.09l-1.7,-0.05l-1.47,-0.47l-0.59,-0.81l-1.77,-0.95l-4.19,-0.28l-0.84,-0.52l-0.16,-3.08l-1.06,-0.64l-0.18,-1.14l-2.0,-1.55l-2.99,-3.75l-0.16,-1.06l0.6,-0.89l-0.05,-0.97l-0.68,-0.82l-1.32,-0.28l-1.0,-1.08l-0.52,-1.9l-0.0,-0.28l1.75,1.15l0.39,-0.59l-1.42,-2.56l3.89,-0.26l0.36,-0.35l-0.79,-0.59l-2.16,-0.25l-0.74,0.33l-1.08,-0.45l-0.93,0.58l-0.05,1.01l-1.32,-0.83l-0.02,-0.82l-1.1,-1.53l-2.94,-2.75l-0.58,-2.59l0.17,-1.5l-0.3,-1.11l-2.51,-2.91l-0.2,-1.18l0.86,-1.55l0.66,-4.41l-0.83,-2.11l0.12,-1.1l-0.77,-1.03l-0.25,-2.78l-0.63,-1.33l0.91,-2.99l0.68,-0.45l-0.16,-0.7l0.55,-1.26l1.12,-11.92l-0.09,-3.42l1.79,-0.24l1.06,0.48l0.86,-0.38l-0.2,-0.43l-1.45,-0.8l-2.57,-0.17l0.0,-0.28l0.5,-0.08l0.3,-1.51l-1.06,-1.14l1.07,-0.5l0.23,-0.41l-1.68,-0.81l-1.09,-3.83l-1.44,-1.99l-0.08,-1.99ZM600.53,354.34l0.0,-0.0l0.0,0.0l-0.0,0.0ZM565.54,376.21l1.34,0.45l1.32,1.05l-0.23,0.72l-0.34,-0.01l-2.09,-2.21ZM567.19,381.69l0.47,0.2l0.38,0.46l-0.19,-0.03l-0.65,-0.63ZM546.58,409.31l0.07,0.07l-0.02,0.1l-0.05,-0.17ZM330.49,318.83l-0.57,-0.55l1.23,-1.11l0.38,1.87l-1.04,-0.21ZM609.34,337.99l0.0,-0.0l0.0,0.0l-0.0,-0.0ZM580.89,360.6l2.41,-0.95l3.91,-0.3l0.1,0.27l-3.11,0.99l-2.68,0.36l-0.62,-0.36ZM530.89,327.73l0.08,-0.11l0.08,0.12l-0.17,-0.0ZM512.06,334.57l0.33,-0.38l-0.28,0.55l-0.04,-0.17ZM512.71,333.56l0.11,-0.21l0.12,-0.04l0.02,0.06l-0.24,0.19ZM505.9,320.05l0.92,-0.89l1.35,-0.49l0.06,0.31l-1.31,1.22l-0.1,-0.29l-0.92,0.14ZM99.81,185.08l0.47,0.25l1.71,-0.65l0.93,-0.84l1.72,-0.19l1.69,-1.48l1.69,-0.75l3.92,0.11l0.54,-0.43l-0.14,-0.62l-1.01,-0.61l1.53,-0.71l2.02,-0.26l2.97,-1.25l2.51,-0.2l0.47,0.44l-0.54,0.96l-0.02,0.78l-0.59,0.53l0.07,0.62l1.94,1.18l4.1,-0.12l1.54,0.4l4.04,-0.03l1.78,-1.88l2.33,0.69l0.21,-0.44l-0.51,-1.4l-1.87,-0.62l1.31,-0.11l2.59,1.04l2.27,-0.4l0.33,-0.38l0.0,-0.89l-0.84,-1.09l-1.59,-0.01l-1.28,-0.55l-2.69,0.98l-1.95,-1.09l-0.07,-0.52l1.16,-1.31l-0.03,-0.63l-0.65,-0.42l-1.38,-0.25l-1.83,0.22l0.01,-0.28l-0.66,-0.32l-0.75,0.62l-1.99,-0.05l-2.56,-0.61l-0.84,-0.7l-1.07,-2.33l-1.1,-1.32l-6.44,-3.84l-2.95,-0.99l-1.36,-1.04l-1.1,-0.35l0.99,-1.81l0.48,-2.5l5.5,0.0l4.72,-0.74l3.2,-1.91l1.87,-1.93l0.55,-2.25l0.66,-1.22l3.87,-3.74l0.79,0.16l5.1,-1.28l4.49,-2.62l-0.32,0.43l0.3,0.69l-0.3,0.69l0.36,0.56l0.7,0.01l0.53,0.48l0.34,-0.34l0.12,-1.58l2.04,-0.35l0.29,-0.43l-0.38,-0.35l-1.69,-0.05l-0.88,-0.77l1.26,-0.86l1.3,-0.59l0.1,0.79l0.7,0.2l1.33,-0.48l1.79,0.02l0.91,-0.39l2.84,-0.19l3.11,-1.74l3.35,-2.92l0.66,0.62l4.09,1.02l-0.02,0.48l-2.7,1.5l1.23,1.21l0.67,0.06l1.59,-0.59l1.99,-1.85l0.95,0.13l1.0,0.62l-0.36,0.47l0.12,0.64l3.05,0.88l1.67,-0.7l3.39,-0.49l2.19,0.5l1.51,-0.04l0.73,0.24l-0.76,0.65l-0.04,1.13l1.27,0.87l1.75,0.1l-0.33,0.28l0.23,0.7l3.68,0.31l2.9,-0.82l2.05,0.68l2.09,-0.69l1.53,-0.03l4.26,0.88l1.21,0.92l1.61,-0.35l1.3,0.46l1.01,0.81l3.28,0.43l1.7,-0.19l4.6,0.29l3.26,1.38l2.96,0.24l1.18,-0.53l3.37,-0.57l2.71,-0.1l2.39,0.69l2.15,1.51l3.01,0.89l1.58,1.09l1.74,-0.04l0.0,77.5l0.3,0.39l2.44,0.63l0.65,-0.52l2.14,0.78l1.79,-1.09l2.51,-0.1l-0.42,1.87l0.85,0.77l1.57,0.64l0.43,0.94l5.21,4.11l0.63,2.49l0.75,0.02l1.65,-1.05l-0.13,1.32l1.03,-0.02l1.22,0.49l0.72,0.66l0.18,0.83l1.07,0.06l0.68,1.12l-1.71,0.19l-0.72,0.59l-0.28,-0.1l-4.18,-2.27l-2.54,-2.74l-2.4,-1.35l-0.26,-0.41l-1.8,-0.51l-4.02,-1.92l1.05,-1.13l-0.23,-1.64l0.44,0.5l0.15,1.81l0.71,0.17l0.34,-1.56l0.94,0.01l0.33,-0.36l-2.46,-1.73l-0.88,-0.02l-1.98,1.58l-2.41,0.68l-2.05,-0.27l-2.34,-0.89l0.32,-0.8l-0.29,-0.75l-0.54,-0.36l-0.5,0.16l-0.09,0.63l-0.9,0.3l-4.41,-0.87l-2.08,-0.09l-5.47,0.66l-0.73,-1.04l-2.26,-0.55l-1.12,-0.6l0.97,-2.69l-0.72,-0.06l-2.25,1.91l-0.78,0.14l-1.79,-0.61l0.57,-0.89l-0.37,-0.53l-2.13,-0.06l-0.36,-0.56l-0.97,-0.05l-0.1,-0.54l-0.97,-0.43l0.1,-0.73l1.42,-0.41l0.29,-0.37l-0.27,-0.39l-1.68,-0.14l-1.98,1.13l-1.16,-0.11l-0.8,0.59l-1.34,-0.47l-0.39,0.6l-0.82,0.12l-0.23,-0.41l1.1,-1.52l-0.36,-0.63l-1.6,1.06l-1.08,0.01l-0.79,0.42l-0.22,0.32l0.19,0.56l0.4,0.04l-0.22,0.56l-0.82,0.07l-0.34,0.38l0.17,0.53l1.32,0.72l-0.11,0.34l-0.85,0.05l-0.66,0.45l-0.22,0.26l0.2,0.64l2.85,-0.62l0.28,0.24l-1.03,0.56l-0.16,1.68l-0.51,0.28l-0.51,0.95l-1.78,0.26l-1.63,-0.61l-0.54,0.2l-0.39,-0.59l-0.49,-0.15l-0.97,1.8l-0.8,-0.26l-0.54,1.05l-0.94,-0.04l0.06,0.82l-0.87,0.69l-0.62,-0.1l-0.79,0.34l-0.58,-0.2l-0.62,1.15l-1.26,1.17l-0.93,-0.32l-0.47,0.19l-0.02,0.32l-0.63,-0.1l-1.3,0.43l-1.19,-0.5l1.03,-0.8l1.61,-0.47l1.89,-2.03l0.0,-0.46l-0.42,-0.28l-2.04,1.04l-1.57,-0.61l0.52,-1.35l1.77,-2.29l0.44,-1.6l-0.22,-1.78l4.36,-2.11l1.6,0.7l2.38,-0.15l2.88,0.59l0.41,-0.29l-0.67,-0.96l-2.2,-0.42l-1.81,-0.93l1.15,-1.25l2.01,-1.01l0.23,-0.44l-0.37,-0.32l-1.58,0.09l-1.19,0.63l-0.71,0.99l-2.22,0.13l-0.95,-0.31l-3.49,2.03l-1.69,0.54l-1.07,1.06l0.01,0.75l-2.43,1.7l-0.32,0.76l0.14,0.44l-1.11,0.76l-0.74,0.18l-1.02,-0.43l-0.87,0.16l0.12,0.62l1.37,0.82l0.48,0.64l-0.5,0.66l-2.34,0.63l0.15,0.69l0.52,0.28l-0.79,0.27l-0.29,-0.46l-0.87,0.08l-1.09,0.74l0.07,0.42l-0.51,0.53l-1.62,1.04l-0.64,1.79l0.33,0.66l2.56,0.71l1.42,0.82l-1.29,1.35l-1.23,0.49l-0.87,0.75l-0.34,0.93l-0.93,0.41l-0.2,0.53l0.21,0.6l-1.39,0.23l-0.36,0.5l-1.82,0.25l-0.91,1.08l-2.22,1.07l-1.03,1.24l-1.1,0.17l-0.38,0.57l-0.72,0.07l-1.12,0.71l-0.39,0.64l0.4,0.72l-1.01,1.11l-0.62,0.07l-1.92,1.33l-1.56,0.28l-0.72,1.12l-1.44,-0.08l-0.94,0.48l-0.18,0.51l-1.65,0.52l-0.92,1.1l0.2,0.53l1.01,0.25l-0.39,0.46l-0.63,-0.54l-1.25,1.47l-3.18,1.01l-0.73,0.51l-0.6,-0.51l-0.61,0.07l-3.02,1.5l-0.53,0.61l-0.61,-0.1l-0.67,0.44l-0.79,-0.14l-1.34,0.85l-1.05,0.09l0.28,-0.5l0.66,0.09l0.42,-0.59l-0.19,-0.25l-0.86,-0.43l-1.07,-0.02l-0.88,0.55l-0.44,1.22l-1.17,1.32l-1.58,0.92l-0.72,-1.22l-0.68,-0.15l2.61,-2.67l2.26,-1.29l1.98,-0.66l0.41,0.35l0.58,-0.02l1.27,1.41l0.7,-0.12l0.14,-0.68l2.0,0.47l0.41,-0.39l-0.04,-0.46l-1.27,-0.97l1.09,-1.96l2.54,-1.72l2.52,-0.91l1.46,-1.2l1.62,0.43l0.34,-0.55l0.0,-1.45l1.62,-1.75l2.32,-1.63l1.37,0.35l0.61,-0.2l0.17,-0.59l-1.12,-1.08l0.43,-2.63l0.19,-0.45l1.59,-0.31l0.35,-0.35l-0.25,-0.42l-1.32,-0.39l-0.11,-0.83l1.34,-1.41l1.26,-0.69l-0.06,-0.7l1.08,-2.48l-0.16,-0.51l-0.53,0.11l-1.59,1.82l-5.12,1.91l-1.2,-1.43l0.09,-0.44l0.41,-0.27l1.22,0.23l0.4,-0.28l-0.17,-0.46l-1.82,-0.88l-0.72,0.12l-0.82,1.01l-0.82,-0.2l-0.42,2.15l0.44,1.6l-0.44,0.39l-3.5,-3.66l-0.75,0.06l-0.73,0.51l-2.47,-1.68l-2.3,1.32l-2.09,0.54l-0.87,1.03l-2.03,0.33l0.75,-0.62l-0.19,-1.8l0.71,-1.03l-1.72,-0.31l-0.15,-0.75l0.72,-1.08l0.21,-1.49l-2.11,-4.47l-0.79,-0.77l1.23,-2.15l0.89,-0.49l0.01,-0.71l-1.5,0.1l-2.66,3.1l0.02,0.73l0.58,0.29l-0.09,1.06l-0.82,0.06l-2.35,1.06l-3.31,0.29l-0.91,-0.52l-0.12,-0.84l-1.69,-1.15l-0.94,-1.14l-1.91,-0.77l-0.1,-0.86l-0.93,-0.22l1.68,-1.95l2.42,0.74l-0.3,1.35l0.45,0.12l1.89,-1.29l0.95,1.18l0.51,0.1l1.15,-0.68l0.55,-0.72l-0.09,-0.57l-0.88,-0.47l0.04,-0.65l-0.88,-0.55l-1.56,0.77l-5.11,-0.44l0.91,-0.52l0.24,-0.48l-0.37,-0.47l-0.98,0.1l0.03,-0.29l-0.76,-0.3l-0.26,-0.76l-0.75,0.22l-0.31,1.14l-0.32,-0.0l-0.5,-1.28l-0.96,-0.49l0.35,-0.64l-0.23,-0.83l-0.84,-0.28l-0.68,0.24l1.67,-0.7l-0.14,-0.66l-0.83,-0.32l1.78,-0.28l0.19,-0.68l-0.47,-0.54l0.07,-0.81l2.52,-2.85l0.74,-0.36l0.94,0.36l0.59,-0.22l-0.19,-0.67l0.56,-0.24l0.58,-0.97l-0.57,-0.43l-0.62,0.34l0.11,-1.53l0.42,-0.57l1.71,-0.37l-0.1,-0.6l-0.47,-0.36l0.24,-0.25l2.09,-0.24l1.3,0.7l-0.5,0.39l0.01,0.55l0.59,0.14l0.98,-0.6l1.18,0.43l1.82,-0.58l1.67,-1.22l1.8,-2.13l1.35,0.66l3.67,-0.36l1.05,-0.59l1.42,-1.41l0.33,-1.13l-1.16,-3.68l-1.93,-1.54l1.41,-0.11l0.73,-0.42l0.64,-1.0l-0.1,-0.97l-1.13,-1.33l-0.94,-0.3l-1.55,1.07l-1.66,-0.05l-0.49,0.53l-1.54,0.54l-2.74,2.39l-0.42,-1.06l-1.67,-1.12l-0.97,0.39l0.07,0.74l-1.82,-0.66l-3.13,0.02l-1.91,0.59l-0.61,-0.1l-0.93,0.59l-5.84,-1.05l-1.43,-0.96l0.37,-0.68l-0.31,-1.19l-1.56,-0.99l0.91,-0.13l0.62,-0.82l1.77,-0.27l-0.28,-0.71l-6.51,-1.21l-2.87,-1.18l-0.17,-0.49ZM131.96,178.57l-0.62,0.13l-0.11,-0.08l0.08,-0.39l0.65,0.34ZM129.77,176.2l-1.57,-0.58l-0.42,-0.77l1.02,-0.09l1.03,1.14l-0.05,0.31ZM126.91,265.27l-0.23,1.67l-0.56,0.25l-0.57,-0.56l-0.83,-0.24l-0.47,0.31l0.07,0.71l-0.19,0.28l-0.01,-1.02l0.71,-0.43l1.02,-0.0l1.07,-0.98ZM258.69,237.55l1.95,-0.47l0.57,-0.96l0.06,-1.14l0.94,-0.43l0.07,-0.83l3.61,-1.24l1.88,1.41l-0.11,1.0l0.77,1.29l2.52,1.51l0.74,1.4l2.46,1.48l1.96,2.02l0.03,0.67l5.91,8.15l-0.41,0.66l0.24,0.6l1.16,0.29l-0.25,0.84l0.24,0.49l0.88,0.34l0.3,1.26l0.42,0.37l1.16,-0.06l2.42,1.35l1.71,0.46l1.29,0.78l0.51,0.83l1.56,0.18l0.15,0.98l-0.63,1.85l0.56,2.42l-0.92,1.9l-1.5,1.44l-1.05,-0.13l-0.86,-2.16l1.22,-0.56l0.29,-0.5l-0.57,-0.48l-0.34,-2.73l-1.04,-1.57l0.41,-1.02l-0.46,-0.11l-3.87,1.54l-0.91,2.35l-0.45,-0.22l-0.26,-0.66l1.76,-2.77l1.38,-0.36l0.27,-0.42l-0.35,-0.35l-1.53,-0.19l-0.6,-0.9l-0.87,-0.36l-0.83,-1.4l-0.56,-0.22l-0.33,-0.97l-1.39,-0.79l-0.08,-1.11l-3.2,-0.96l0.09,-1.05l-0.84,-2.02l1.77,0.89l0.53,-0.09l0.02,-0.66l-1.94,-1.57l1.5,-0.03l-0.1,-0.76l-1.96,-0.36l-0.67,0.6l-1.39,-1.53l-0.03,-1.27l0.84,-1.67l-0.42,-0.55l-0.61,0.3l-1.1,1.75l-2.52,-1.43l-1.05,-2.29l-0.72,-0.55l-1.28,-4.45l-0.65,0.14l-0.67,2.01l0.55,0.8l1.62,5.81l-0.62,-0.11l-1.42,-1.16l-1.42,0.07l0.15,-1.09l-0.85,-1.46l0.84,-0.44l0.21,-0.43l-0.36,-0.32l-0.87,0.06l-0.57,-1.11l-0.64,0.29l0.06,1.73l-1.69,-1.29l-1.76,-0.53ZM285.0,265.19l-0.1,-0.78l1.01,-1.3l0.1,-1.53l1.43,-0.7l1.16,1.68l-0.52,2.55l-0.36,0.23l-0.75,-0.38l-0.07,-0.78l-0.72,-0.03l-1.18,1.04ZM286.27,266.56l0.09,-0.38l-0.06,-0.26l0.39,0.85l-0.41,-0.22ZM286.98,267.33l0.17,0.3l-0.22,-0.01l0.05,-0.29ZM275.68,261.7l0.04,-0.0l0.35,0.19l-0.18,0.01l-0.22,-0.2ZM276.58,261.93l0.6,-0.38l0.57,-0.95l-0.52,-1.01l-1.4,0.11l0.43,-0.76l-0.32,-0.84l1.45,0.1l0.56,1.63l1.67,0.66l1.03,0.99l0.59,1.2l-0.35,-0.01l-0.67,0.92l0.14,0.69l1.1,-0.03l1.02,0.83l-0.19,0.77l1.11,0.22l-0.11,2.84l-1.09,-1.3l-1.09,-0.39l-0.45,-1.29l-0.56,-0.04l-0.31,0.43l-1.08,-1.32l0.47,-0.38l-0.58,-1.05l0.03,-0.85l-1.31,-0.12l-0.73,-0.65ZM280.54,258.81l1.39,-1.79l1.0,1.39l-0.27,1.62l-0.68,0.12l-0.09,-0.57l-1.27,-0.38l-0.08,-0.39ZM276.74,265.42l0.24,-0.06l0.29,0.23l-0.23,-0.04l-0.31,-0.12ZM277.71,265.94l0.52,0.7l0.14,0.61l-0.46,-0.77l-0.2,-0.55ZM278.46,267.38l0.07,0.09l0.3,0.55l-0.25,-0.35l-0.13,-0.28ZM279.22,268.42l0.87,-0.18l-0.08,0.6l-0.23,0.13l-0.56,-0.54ZM278.87,257.49l0.32,-0.26l0.85,0.03l-0.07,0.49l-0.35,0.18l-0.74,-0.44ZM279.27,256.0l0.38,-0.91l0.64,0.64l-0.67,0.28l-0.35,-0.01ZM274.16,252.77l3.87,0.62l0.4,0.45l-0.02,1.22l-1.3,-1.33l-0.59,0.26l0.9,2.33l-1.72,0.04l-0.26,-2.27l-1.29,-1.32ZM275.48,263.85l0.19,0.04l0.47,0.03l-0.41,0.53l-0.26,-0.6ZM272.76,258.99l0.09,-1.62l0.4,-0.22l0.12,-0.6l-0.91,-0.82l-0.56,-1.06l0.06,-0.47l0.73,-0.44l0.85,0.95l0.62,0.16l0.23,0.49l-0.55,0.46l-0.45,3.0l-0.62,0.17ZM269.79,244.57l1.99,0.27l-0.26,0.42l0.22,1.2l1.68,2.24l0.04,1.38l-0.81,0.33l-0.78,1.07l-0.96,0.62l-0.18,-0.56l0.67,-2.22l-0.91,-1.32l-0.7,-3.43ZM264.84,252.18l-0.27,-1.27l0.91,-0.4l0.71,-1.18l2.01,1.19l1.65,4.18l-0.02,3.29l-0.97,-1.71l0.47,-1.25l-0.94,-0.11l-0.41,-0.29l-0.1,-0.68l-0.86,-0.09l0.68,-1.38l-0.73,-0.48l-0.23,-0.8l-0.41,-0.45l-0.6,-0.08l-0.9,1.52ZM261.72,244.6l0.54,0.46l0.66,-0.3l0.05,-0.34l1.32,-0.49l0.66,0.62l-0.48,0.84l0.58,0.51l1.53,-0.93l1.54,0.47l0.06,1.07l-1.21,-0.0l-0.55,0.35l0.01,0.68l1.83,0.37l0.2,0.92l-2.95,-1.28l-0.66,0.45l-0.19,1.33l-0.73,-0.13l-0.84,-1.63l-2.31,-1.95l0.18,-0.54l0.74,-0.49ZM208.99,227.43l0.32,-0.25l0.78,0.33l-0.85,0.37l-0.26,-0.45ZM203.17,231.47l1.01,-1.0l0.66,-0.42l-0.7,0.99l-0.96,0.43ZM205.79,229.04l0.61,-0.95l0.34,0.18l-0.95,0.77ZM202.92,228.29l0.13,-0.2l0.12,-0.48l0.06,0.13l-0.25,0.63l-0.06,-0.08ZM201.4,229.75l0.03,-0.01l-0.02,0.01l-0.02,-0.0ZM175.19,244.72l1.4,-1.03l0.98,0.13l0.36,-0.39l-0.12,-0.81l0.25,-0.08l1.16,0.65l0.72,-0.26l1.17,0.65l-0.23,0.26l-0.76,-0.62l-0.64,0.44l-0.11,0.49l-1.08,-0.25l-0.58,0.81l-1.04,0.42l-1.49,-0.41ZM168.94,251.96l-0.92,-1.76l0.72,-1.11l1.22,-0.55l0.86,0.01l1.15,1.97l0.71,0.46l0.48,-0.12l-0.58,-2.33l0.63,-0.59l-1.03,-0.91l0.19,-0.23l1.49,1.08l0.69,-0.53l1.05,-0.17l0.28,-0.98l0.61,0.15l0.02,0.9l0.49,0.35l1.84,-0.56l-0.15,0.92l1.11,0.69l-0.48,0.48l-2.71,-0.34l-0.49,0.32l0.12,0.7l1.22,0.29l-2.7,0.75l-2.55,1.63l-0.78,-0.33l-0.48,-0.66l-1.46,0.02l-0.58,0.47ZM168.99,252.11l0.34,0.43l0.53,0.07l-0.11,0.45l-0.68,-0.68l-0.08,-0.26ZM172.59,252.88l0.13,0.05l-0.15,0.19l0.01,-0.24ZM172.34,253.43l-0.11,0.14l-0.15,0.08l0.26,-0.23ZM174.9,252.33l0.03,-0.27l0.32,-0.15l-0.35,0.42ZM162.0,476.41l2.89,1.32l0.52,1.03l1.24,1.17l-0.94,0.68l-1.37,0.36l-1.15,0.8l-0.4,0.68l-0.86,-0.52l0.05,-1.42l-0.72,-1.78l1.03,-1.21l-0.28,-1.11ZM157.93,472.28l0.09,0.07l0.31,0.38l-0.45,-0.35l0.05,-0.1ZM158.79,472.87l0.75,-0.17l1.0,0.67l-1.39,0.38l-0.37,-0.88ZM156.39,472.94l0.0,0.0l-0.0,0.0l-0.0,-0.01ZM149.99,469.25l0.86,-0.5l0.49,0.96l0.64,0.47l-1.17,-0.55l-0.3,0.32l-0.52,-0.7ZM142.16,466.42l0.69,-0.53l0.91,0.11l-0.44,0.89l-1.16,-0.47ZM140.51,266.38l0.09,-0.12l0.02,-0.0l-0.09,0.11l-0.03,0.01ZM136.74,264.95l0.58,0.44l0.16,0.32l-0.75,-0.07l0.01,-0.69ZM135.34,240.76l0.42,-0.41l0.25,-0.09l-0.38,0.6l-0.29,-0.1ZM122.47,267.59l0.61,1.3l-0.73,0.57l-2.68,0.09l-2.03,1.38l-1.56,-0.05l-0.13,-0.58l0.85,-0.57l1.05,-1.44l1.1,0.01l2.23,-1.0l0.91,-0.01l0.38,0.3ZM103.3,229.09l2.32,0.09l0.71,-0.79l2.59,-0.58l0.74,0.47l1.36,0.05l-0.03,1.53l0.56,0.91l-1.51,0.13l-1.13,0.7l-4.64,-1.6l-0.98,-0.92ZM109.88,273.55l0.27,-0.32l0.5,0.19l-0.23,0.11l-0.54,0.01ZM101.42,279.05l0.19,-0.06l0.45,-0.04l-0.56,0.13l-0.08,-0.03ZM104.34,277.95l0.65,-1.12l0.97,0.33l0.38,-0.49l0.04,-0.66l-1.68,-0.5l-0.03,-0.27l1.68,-0.54l0.32,0.88l0.38,0.09l-0.33,0.71l0.34,0.32l-1.32,0.95l-1.4,0.31ZM95.96,281.16l0.47,-1.15l1.1,-0.14l-0.62,0.74l-0.96,0.54ZM98.16,279.26l-0.1,-0.69l0.39,-0.43l0.93,-0.34l0.8,0.21l-2.02,1.25ZM81.67,202.06l0.43,0.35l2.12,0.24l3.04,-0.91l1.29,0.53l0.72,1.13l1.92,0.48l0.43,0.47l3.9,0.43l-0.31,0.41l-2.74,0.09l-1.06,0.96l-0.18,0.59l-0.64,-1.17l-1.93,-0.65l-1.21,-1.2l-2.21,-0.79l-1.25,-0.03l-1.8,0.87l-0.91,-0.07l-0.63,-0.45l-0.02,-0.94l0.35,-0.83l0.67,0.5ZM74.39,226.48l-0.16,-0.06l0.01,-0.05l0.08,-0.04l0.06,0.15ZM66.52,287.35l1.04,-0.28l0.21,-0.15l0.01,0.11l-1.27,0.32ZM67.96,286.34l-0.26,-0.44l0.8,0.03l-0.05,0.21l-0.49,0.2ZM54.59,290.07l0.81,-0.77l0.42,0.4l-0.89,0.5l-0.34,-0.13ZM55.41,288.96l-0.0,-0.03l0.02,-0.05l-0.02,0.08ZM55.43,288.86l0.07,-0.19l0.04,0.0l-0.11,0.19ZM48.47,289.12l0.89,0.46l-0.35,0.6l0.03,-0.51l-0.57,-0.54ZM36.26,288.51l0.19,-0.11l0.18,0.1l-0.13,0.05l-0.24,-0.05ZM5.93,285.16l0.05,-0.02l-0.01,0.05l-0.04,-0.02ZM1.03,281.63l2.02,0.1l0.77,0.4l-1.6,0.43l-1.19,-0.92Z\",\n            name: \"United States\"\n          },\n          GL: {\n            path: \"M598.7,69.97l1.63,-0.74l0.09,-0.71l-1.9,-0.19l-1.15,0.49l-1.8,0.08l-5.77,-1.76l-3.11,-2.09l1.12,-1.04l-0.56,-1.19l1.29,-1.04l3.77,-1.32l3.78,-0.16l4.75,-1.56l5.05,-0.91l0.6,-0.42l-0.3,-0.74l2.82,-0.87l5.16,-0.96l6.51,0.06l1.49,-0.7l2.14,-1.96l0.73,-1.18l2.47,-6.42l2.94,-1.06l0.21,-0.66l-1.67,-0.63l-2.76,0.69l-2.12,0.06l-2.11,0.62l-3.18,-0.65l-2.01,0.04l-0.89,-0.44l-0.59,-0.94l0.69,-1.6l3.31,-2.23l3.77,-1.23l5.68,-3.71l3.89,-0.67l1.26,0.46l1.93,1.51l0.52,0.02l0.23,-0.58l-0.99,-2.17l0.07,-0.44l0.93,-0.64l3.31,0.18l3.37,0.94l1.28,-0.24l1.56,-1.92l0.38,-1.53l-0.56,-4.14l1.67,-1.2l2.01,-0.77l1.62,-0.2l4.06,0.65l4.29,2.36l4.71,1.83l3.29,1.91l1.42,0.28l0.37,-0.6l-1.4,-1.33l-5.09,-2.47l-4.9,-3.16l-1.73,-0.58l2.14,-0.82l5.07,-0.93l5.72,-0.73l5.34,-0.23l1.11,-0.68l3.92,-0.63l2.72,0.84l1.47,1.31l0.4,1.12l-0.04,4.69l0.24,0.49l0.56,0.12l2.13,-1.82l0.66,-1.07l0.6,-2.09l-0.89,-1.25l-0.04,-1.4l0.29,-0.57l0.91,0.0l5.13,2.98l2.08,0.67l2.29,1.58l5.5,0.1l1.81,-0.34l0.09,-0.67l-0.78,-0.67l-3.61,-1.87l-1.55,-1.38l-1.22,-2.22l4.34,-0.06l5.94,0.83l7.64,2.88l3.79,0.96l6.74,3.3l3.0,0.64l0.89,-0.47l0.57,-0.76l-0.53,-3.14l0.41,-1.71l1.08,-0.67l0.53,-1.07l-0.6,-1.5l-1.34,-0.93l-4.4,-2.03l1.74,-0.26l12.31,0.55l4.03,0.77l2.65,-0.31l0.35,-0.44l-0.17,-0.8l-0.6,-0.49l-17.03,-1.33l-6.91,0.32l-1.23,-0.83l1.08,-0.98l3.89,0.54l1.46,-0.76l2.3,-0.63l2.38,-0.24l5.1,-1.38l4.61,0.3l2.21,1.07l2.67,0.61l3.44,-2.28l1.54,-0.67l2.25,0.4l2.85,1.2l1.98,0.38l3.27,2.21l0.85,0.07l0.93,-0.77l0.49,-1.98l-0.46,-0.42l-2.74,-0.92l-0.85,-0.75l0.3,-0.37l2.85,-0.11l1.76,-1.1l4.75,0.4l0.59,-0.18l0.41,-0.72l5.83,-0.02l3.96,-0.42l2.67,0.54l1.61,-0.01l4.38,-0.91l11.61,0.08l3.8,0.37l4.86,0.77l2.56,0.89l7.47,0.77l5.3,1.07l-20.87,0.96l-9.71,0.92l-0.39,0.34l-0.2,1.3l0.37,0.46l1.07,0.07l9.55,-1.69l9.21,0.6l5.95,-0.04l9.4,-1.15l3.23,3.47l2.88,-0.0l1.23,0.83l1.6,-0.11l4.43,0.51l4.11,1.3l0.61,0.73l-2.1,1.33l-2.39,0.96l-3.25,0.74l-3.77,0.47l-29.21,1.57l-1.11,0.4l-0.79,1.11l0.35,1.56l1.69,0.47l8.79,-1.34l13.62,0.59l2.69,1.38l1.85,2.32l3.36,-0.5l0.85,-0.43l1.99,-2.93l2.63,-0.48l6.03,-0.2l0.71,0.86l0.21,1.23l-0.14,2.04l-0.39,1.05l-2.41,2.95l-6.98,5.17l-0.63,0.95l-0.1,0.89l0.72,0.54l1.12,-0.74l0.71,-0.91l3.71,-1.27l3.28,-1.91l2.9,-1.21l4.47,-3.5l1.85,-0.86l1.66,-0.0l0.29,1.25l0.35,0.31l3.57,0.18l5.27,1.2l1.28,-0.45l4.85,-3.92l3.97,-0.98l8.88,0.58l6.46,1.3l4.69,2.28l-3.7,1.5l-1.25,0.96l-4.94,2.29l-5.1,0.54l-0.43,0.38l0.07,0.57l1.16,1.03l-1.09,0.77l-3.48,0.49l-1.82,0.85l-4.02,0.03l-2.26,0.91l-0.11,0.68l0.88,0.74l3.04,0.95l-2.44,1.43l-2.5,0.69l-5.4,0.22l-5.75,-1.04l-1.23,0.04l-2.48,1.42l-1.51,1.63l-0.23,2.05l0.7,1.23l1.39,0.42l2.23,-0.0l0.26,0.43l-0.57,2.09l-0.08,1.72l0.32,0.33l1.17,0.2l0.71,1.1l-3.65,1.23l-0.91,1.82l-0.66,0.63l-2.82,0.42l-2.76,1.68l-0.22,0.44l0.2,0.44l0.75,0.5l-1.21,1.96l-1.01,3.34l-1.79,3.12l0.05,1.12l0.92,0.9l0.43,0.05l1.16,-0.62l1.21,-1.57l1.18,-0.61l2.59,0.52l4.13,1.53l0.77,0.82l-0.59,0.07l-3.48,-1.3l-2.71,0.79l-0.2,0.58l1.11,1.87l1.46,1.05l2.13,0.38l2.56,1.18l2.26,-0.6l2.06,0.18l0.57,1.06l-0.21,2.11l-1.04,1.41l-6.33,-1.61l-3.29,-0.07l-2.33,0.36l-0.38,0.6l-3.08,1.52l-2.67,-1.1l-0.92,-0.03l-1.33,0.75l-0.47,0.63l0.18,0.55l0.91,0.64l2.74,0.51l0.62,1.76l1.49,1.45l1.76,0.09l1.45,-0.35l1.66,0.65l2.24,0.2l0.93,0.78l-0.33,1.41l2.24,2.42l0.71,3.71l-0.04,0.81l-0.6,0.95l-0.98,0.19l-2.02,-1.51l-1.66,-0.13l-2.32,1.63l-1.67,0.24l-2.01,1.11l-2.79,-0.94l-0.5,0.16l0.1,0.52l2.48,1.6l1.08,-0.0l2.41,-1.0l0.65,0.05l0.63,1.44l-0.04,0.68l-1.25,1.67l0.32,0.39l0.9,0.18l1.6,-1.01l1.06,-2.53l0.74,-0.32l0.91,0.35l2.19,3.44l1.31,0.85l0.16,1.15l-0.45,0.88l-1.23,0.22l-3.12,-0.25l-0.4,0.47l0.07,0.44l-1.79,0.56l-2.33,0.25l-3.68,-1.13l0.81,-2.1l-0.12,-0.41l-1.36,-0.96l-0.42,0.49l0.14,1.41l-1.86,1.02l0.6,1.12l-0.69,1.38l1.22,1.12l5.8,0.53l3.14,0.87l-0.79,2.9l-5.04,0.49l-3.27,1.58l-0.68,0.01l-4.41,-1.23l-2.62,-1.39l-1.98,-2.14l-0.57,-0.01l-1.42,1.28l-0.91,0.21l-4.2,-2.44l-0.54,0.25l0.08,0.52l3.35,2.7l-2.16,0.71l-1.83,1.36l-1.83,0.33l-6.03,-1.77l-0.47,0.14l0.02,0.49l0.52,0.61l2.9,1.0l-0.46,0.34l-2.63,-0.06l-1.67,0.41l-0.18,0.57l0.22,0.35l1.22,0.54l0.96,-0.64l2.2,0.1l6.9,-1.51l0.81,-0.89l0.92,-0.29l2.33,-0.25l3.35,0.23l3.3,1.97l1.26,0.24l0.78,0.85l3.95,1.49l0.14,2.5l-0.31,2.02l-0.86,0.43l-0.22,0.43l0.06,1.57l-8.56,-3.46l-1.38,-1.7l-1.7,-3.6l-2.02,0.26l-0.91,0.32l-0.53,0.57l-4.75,1.23l-2.31,0.77l-0.27,0.37l0.25,0.38l1.59,0.44l7.81,-2.18l0.59,2.64l-0.16,0.47l-2.47,1.05l-0.07,0.62l0.44,0.44l2.87,-0.63l0.85,0.71l4.2,1.98l5.47,2.12l0.83,1.44l1.5,0.21l-2.37,1.69l0.04,1.46l0.32,1.27l0.38,0.3l0.39,-0.28l0.53,-1.55l1.46,-0.58l0.69,0.18l0.35,2.24l-0.01,3.23l0.7,3.0l-1.62,0.44l-1.9,-0.19l-0.27,-3.28l-0.69,-0.26l-0.56,0.73l-0.62,3.04l-2.98,-0.1l-2.25,-0.91l-0.83,-0.78l-1.24,-2.4l-0.24,-1.25l-0.67,-1.05l-1.0,-0.76l-6.82,-3.3l-4.19,-0.13l-1.73,-0.44l-0.94,0.32l-0.16,0.5l0.59,0.89l6.35,0.48l0.52,0.79l0.13,0.79l-0.27,0.55l-1.98,1.16l-2.75,0.9l-3.05,-0.02l-2.87,-0.46l-2.72,0.1l-0.13,0.71l1.95,0.87l-0.37,1.32l-1.61,1.03l-3.11,1.01l-0.44,0.68l0.39,0.26l2.65,-0.3l2.75,0.69l6.49,-0.68l0.62,0.23l-3.16,1.04l-1.87,1.23l-0.49,1.06l0.27,0.53l1.25,0.33l0.91,-0.49l1.22,-1.45l1.24,-0.33l1.65,0.18l1.44,-0.23l3.13,-0.98l3.91,0.52l5.57,1.44l6.94,0.13l-0.77,0.51l-3.1,0.8l-0.28,0.16l-0.02,0.77l-3.84,0.52l-0.13,0.72l0.58,0.69l-0.74,0.19l-1.88,-0.24l-0.14,1.37l-2.8,1.28l-1.69,0.31l-0.16,0.64l0.36,0.4l-2.19,1.0l-0.71,1.32l-3.85,1.84l-9.64,2.05l-4.52,1.3l-3.17,-0.11l-1.74,0.99l-2.42,-0.46l-0.49,0.46l0.52,0.82l-1.45,0.37l-2.1,-0.55l-4.63,-2.72l-0.57,0.42l0.67,1.38l-0.82,0.34l0.99,1.99l-0.83,0.75l-3.9,2.06l-1.23,1.87l-0.88,0.72l-0.11,1.0l-2.89,4.51l-0.58,0.64l-1.04,0.15l-1.02,1.61l-2.61,1.46l-1.03,-0.08l-2.18,-1.45l-0.63,0.37l0.03,0.3l1.09,2.07l-0.68,0.51l-2.33,1.58l-0.17,-0.75l-0.71,-0.41l-0.6,0.38l-0.49,1.37l-0.66,0.18l-1.44,-0.74l-1.44,0.95l-0.34,0.85l-1.57,0.42l-0.74,-0.45l0.92,-1.12l0.06,-1.04l2.62,-3.11l-0.38,-0.42l-2.63,-0.52l-1.93,-0.01l-0.31,0.32l0.18,0.41l1.52,0.83l-0.73,0.77l-0.65,1.62l-1.65,-0.75l-0.44,0.11l-0.05,0.45l0.54,0.9l1.03,0.63l0.0,0.51l-1.89,0.63l-7.78,0.57l-0.38,0.28l0.12,0.77l2.69,1.26l-1.87,1.53l-0.99,0.38l-2.0,-0.47l-2.16,0.06l-0.46,0.38l-0.02,0.54l0.65,1.52l0.42,0.28l1.43,-0.32l0.88,1.67l1.2,1.34l-1.19,0.85l-1.04,0.11l-0.5,0.87l-1.88,-0.47l-2.06,-0.14l-0.41,0.3l0.21,0.46l2.77,1.43l1.89,-0.12l-0.12,1.49l0.46,1.34l-0.92,0.66l-0.18,0.78l-0.98,0.06l-0.43,0.38l-0.52,1.46l0.14,0.44l-1.08,1.33l-2.06,-0.03l-1.7,-1.09l-0.52,0.51l0.58,0.95l2.07,1.04l-1.12,1.27l-0.67,0.32l-3.97,-0.25l-0.81,0.34l0.7,0.84l3.2,0.81l-0.72,2.84l0.87,1.41l0.14,0.93l-0.41,0.39l-1.35,0.14l-0.5,0.42l0.21,0.67l0.92,0.24l-1.53,4.34l-0.36,2.25l-1.49,1.67l-1.27,0.02l-2.35,-0.58l-1.04,0.25l0.07,0.7l0.55,0.35l3.06,0.93l0.35,2.12l-0.75,0.76l-1.22,-0.05l-1.72,-0.66l-0.51,0.52l0.96,0.9l-0.39,0.15l-0.51,-0.06l-0.3,-0.76l-1.38,0.18l-0.12,-0.39l1.33,-1.63l-0.32,-0.72l-0.52,-0.01l-1.73,1.86l-3.48,-1.27l0.04,-0.68l1.24,-0.35l1.24,-0.94l0.64,-1.04l-0.14,-0.56l-0.52,-0.04l-1.63,1.18l-1.22,0.41l-3.2,-1.21l-0.36,-0.92l1.45,-3.05l-0.12,-0.52l-0.48,-0.25l-0.59,0.25l-0.27,0.75l-2.89,1.04l-1.43,1.06l-1.68,0.25l-1.74,-0.48l-1.12,0.14l-0.41,0.47l0.08,0.34l-1.46,-0.32l2.11,-1.05l-0.08,-0.73l-2.85,-0.1l-0.37,-1.3l-1.07,-0.56l-1.42,-0.2l-0.57,-1.72l-0.97,-0.4l0.25,-0.57l-0.9,-1.63l2.5,-1.22l0.29,-0.39l-0.3,-0.38l-1.68,-0.26l-1.22,0.81l-1.1,0.07l-0.01,-0.61l0.51,-0.56l-0.12,-0.63l-2.0,-0.73l-1.57,-1.0l0.07,-1.79l2.35,-2.28l0.1,-0.51l-0.48,-0.18l-1.53,0.54l-1.2,1.09l-0.55,-0.8l-1.44,-1.08l-3.63,-5.13l0.39,-1.05l-0.26,-0.72l3.83,-1.03l1.75,-0.16l0.66,-0.46l0.1,-0.47l-0.99,-0.16l0.11,-0.38l-0.5,-0.49l-1.49,0.75l-4.06,0.99l-0.36,-0.37l1.4,-1.96l0.74,-0.68l1.77,0.03l0.46,-0.49l-0.08,-0.32l1.44,-0.29l0.49,0.06l0.87,1.41l0.95,0.52l0.57,-0.39l-0.72,-2.4l-0.98,-0.67l-1.14,0.04l-1.88,-3.34l-0.47,-0.25l-0.46,0.5l1.02,3.39l-1.31,0.68l0.16,-0.62l-0.53,-0.47l-0.59,0.23l-0.67,0.53l-2.35,3.81l-0.59,-0.71l-0.12,-2.7l-0.87,-3.91l-1.01,-0.64l-0.32,-0.63l1.57,-0.73l2.79,-2.22l2.57,-0.3l0.37,-0.62l-0.7,-0.47l-3.04,0.54l-3.19,2.19l-0.77,-0.0l-1.31,-1.08l-1.79,0.14l-0.14,-1.21l0.62,-1.65l-0.37,-0.54l-0.79,-0.21l6.36,-3.55l0.92,-1.04l1.86,-0.89l1.62,-1.43l-0.25,-0.56l-0.58,-0.05l-8.95,5.88l-2.44,0.46l-0.05,-1.84l1.02,-1.79l1.41,-0.81l0.45,-0.61l2.97,-0.28l0.37,-0.26l-0.03,-0.65l-1.04,-0.3l-4.55,-0.15l-1.01,-0.43l-0.84,-1.07l0.39,-2.11l4.03,-2.23l2.16,-0.6l3.03,0.85l3.64,0.22l2.39,1.09l0.77,-0.15l0.22,-0.56l-0.33,-0.46l-2.03,-0.88l0.78,-0.35l0.01,-0.72l-0.42,-0.2l-4.21,0.56l-3.06,-0.86l-3.3,0.71l-2.31,1.62l-0.85,0.27l0.58,-1.99l1.15,-1.19l0.97,-1.92l5.25,1.2l2.4,0.18l1.02,-0.67l1.55,-2.51l-0.61,-0.84l-1.47,0.31l-0.86,1.02l-2.72,0.43l-2.37,-0.34l-0.58,-0.45l-2.31,0.1l1.3,-2.09l1.96,-0.75l1.39,0.06l2.59,1.32l0.93,0.16l2.66,-0.57l1.12,-0.84l0.79,-1.02l0.04,-0.54l-0.57,-0.3l-1.56,0.63l0.55,-2.64l3.34,-0.1l0.85,-0.72l-0.32,-0.5l-1.37,-0.57l-2.22,0.35l0.87,-1.37l0.45,-2.19l2.33,-1.31l-0.64,-1.3l0.79,-0.43l-0.01,-0.64l-0.9,-0.3l-1.89,0.32l-1.65,-0.48l-1.91,0.64l-3.81,-0.64l-3.93,-2.23l-5.01,-1.09l-2.31,-2.03l0.65,-0.64l0.78,-0.25l6.85,0.64l1.93,0.56l4.61,2.32l3.01,0.7l1.46,-0.32l0.34,-0.39l-0.16,-0.53l-1.45,-0.37l-1.74,-1.08l0.35,-2.16l-0.17,-0.4l-1.34,-0.69l2.38,0.16l0.32,-0.37l-0.19,-0.51l-1.98,-1.14l-3.48,-0.03l-2.4,-0.73l-2.21,0.22l-0.4,-0.89l1.01,-1.06l4.52,-1.24l1.14,-0.75l0.14,-0.49l-0.49,-0.34l-2.05,0.49l-2.46,-0.38l-2.6,1.27l-1.02,-0.3l1.54,-1.28l0.07,-0.61l-0.47,-0.36l-0.62,0.11l-0.35,-1.69l-1.42,-1.59l-0.49,-1.05l0.65,-0.42l0.06,-0.46l-0.41,-0.21l-1.27,0.2l-0.41,0.4l0.02,0.45l0.64,1.67l1.45,1.56l0.17,0.8l-1.19,0.88l-0.33,0.7l-0.86,0.06l-0.38,0.59l0.48,1.04l-0.15,0.36l-1.59,0.59l-1.8,0.15l-3.16,-0.54l-1.14,-1.05l-0.31,-0.98l0.6,-0.71l1.13,-3.12l2.23,-2.04l0.27,-0.79l-0.51,-0.5l-0.44,0.05l-2.08,1.79l-1.02,0.15l-0.06,-0.5l0.93,0.06l0.73,-0.53l-0.01,-0.58l-0.9,-0.74l1.78,-0.07l1.71,-1.39l0.37,-0.81l-0.02,-1.87l-0.74,-1.05l-1.18,-0.55l-1.19,0.75l-1.66,-0.54l-0.08,-0.57l1.08,-0.41l0.89,-1.1l-0.15,-1.64l-0.67,-0.77l-0.49,-0.08l-1.01,0.57l-0.71,-0.94l-1.06,-0.52l0.56,-1.25l0.51,-0.08l0.29,-0.48l-0.49,-1.43l-1.98,-2.8l-0.74,-0.28l-1.24,0.18l0.36,-0.85l-0.27,-1.35l1.6,-0.37l0.48,-0.37l-0.02,-0.65l-3.09,-1.67l-1.64,-2.02l-3.24,-1.54l-2.2,-2.41l-1.41,-0.69l1.2,-0.65l0.33,-0.55l-0.7,-1.47l-0.89,-0.96l-2.86,-0.78l-1.87,-0.98l-8.98,-3.16l-4.7,-0.9l-3.31,-0.11l-1.28,-0.69l-1.62,-0.35l-0.91,0.2l-1.97,1.23l-0.38,0.05l-1.31,-0.96l-0.68,-0.14l-3.09,1.52l-2.33,0.42l-0.79,-0.12l-1.65,-1.01l-1.45,0.21l-1.63,0.82l-1.88,-0.78l-0.94,0.04l-0.44,0.19l-0.1,0.92l1.27,1.37l-6.39,-0.97l-3.06,-1.23l-3.36,-1.79l2.81,-1.44l3.68,-0.8l0.29,-0.24l-0.09,-0.65l-0.76,-0.33l-5.18,-0.09l-2.09,-0.51l-0.81,-0.7l0.85,-1.27l-0.01,-0.67l-0.46,-0.06l-3.68,1.89l-0.72,-0.13l-0.62,-0.29l0.04,-0.84l-1.88,-1.04l1.19,-0.85l1.25,-0.19l4.79,-0.38l3.43,0.36l2.14,-1.61l2.24,-0.39l6.02,0.16l2.72,0.89l0.6,-0.39l-0.37,-1.08l0.89,-1.26l-0.18,-0.88l-2.14,-1.48l-0.84,-0.11l-4.51,1.78l-2.17,-0.07l-2.46,-0.77l-2.07,1.22l-1.68,0.24l-3.11,-0.85l-0.49,-0.26l-0.22,-0.69l-1.47,-0.66ZM868.11,46.03l-2.0,1.23l-3.02,-0.1l-1.69,-0.55l-0.33,-0.57l0.5,-0.71l2.15,-0.77l2.79,-0.5l2.31,0.27l0.2,0.58l-0.9,1.11ZM866.15,95.15l0.55,1.88l0.94,0.75l1.08,-0.07l0.26,0.56l-0.54,0.24l-5.36,-0.09l-0.83,-0.53l0.15,-2.09l0.75,-0.48l1.1,0.53l1.91,-0.7ZM866.52,70.52l-0.75,-0.01l1.35,-1.66l0.58,0.02l-0.21,1.06l-0.96,0.59ZM862.98,87.68l-1.73,-3.8l0.1,-2.36l0.41,-0.04l0.52,0.45l0.7,5.76ZM862.47,22.09l-1.21,-0.05l-1.63,-1.05l-1.0,-0.79l-0.05,-0.69l0.98,-0.33l2.36,1.99l0.54,0.91ZM860.98,67.01l-0.81,-2.13l-0.08,-1.53l1.1,-0.81l-0.06,2.1l0.34,1.07l-0.49,1.29ZM815.5,142.48l0.34,-0.68l0.76,-0.35l0.47,-0.66l0.17,-1.68l1.92,0.41l3.19,-0.08l4.15,-1.56l1.5,0.87l0.18,0.5l-0.22,1.0l0.35,0.51l-2.53,0.72l-1.49,1.05l-0.43,-0.49l-1.5,-0.4l-6.88,0.84ZM768.9,185.81l-0.3,0.0l-0.09,-0.66l0.57,0.07l-0.18,0.58ZM728.75,18.92l-0.63,0.13l-2.09,-1.26l-6.4,-2.19l-2.68,-2.19l-0.15,-0.55l0.22,-0.39l4.2,-0.42l4.93,1.41l2.42,1.17l0.7,0.81l-0.51,3.48ZM720.41,224.31l0.99,-0.49l0.23,-0.06l-0.48,1.13l-0.74,-0.57ZM696.91,151.06l-0.52,-1.51l0.01,-0.96l0.83,-0.37l1.45,0.44l-0.9,0.55l-0.34,1.59l-0.54,0.26ZM692.3,138.73l0.41,-0.21l0.83,0.34l-1.25,-0.13ZM682.11,152.65l2.11,-0.27l0.15,-0.72l-1.13,-0.75l-4.46,-0.62l-0.66,-0.63l0.5,-1.73l1.82,0.27l0.55,-0.24l-0.11,-0.69l-1.65,-0.62l-0.69,-0.8l0.44,-0.73l1.55,-0.51l5.28,0.98l2.9,2.39l3.43,1.24l0.1,0.97l0.42,0.43l-0.83,0.78l-7.33,2.05l-0.91,-0.05l-1.48,-0.77ZM684.63,137.12l-0.3,0.04l-1.3,-0.54l1.33,-1.07l0.5,0.74l-0.23,0.83ZM671.71,121.68l0.62,-0.36l2.38,0.02l1.89,-0.49l-2.17,1.77l-1.42,-0.89l-1.29,-0.05ZM592.02,73.97l-1.72,0.09l-2.03,-0.62l1.64,-0.21l2.49,0.62l-0.39,0.12Z\",\n            name: \"Greenland\"\n          },\n          MX: {\n            path: \"M362.47,413.39l0.23,-0.35l-0.15,-0.86l-1.05,-0.75l-1.25,-2.44l11.15,-0.93l-0.28,0.47l0.19,0.62l19.52,6.73l14.45,-0.03l0.4,-0.4l0.01,-2.14l8.47,0.05l1.4,1.69l6.24,4.83l1.14,2.37l0.33,1.63l1.21,1.69l2.2,1.48l3.77,1.81l0.83,-0.01l1.55,-1.36l0.32,-1.33l0.93,-1.49l1.51,-0.63l1.42,0.41l2.78,0.12l3.32,3.19l2.01,3.53l0.31,1.19l2.78,3.32l1.2,0.93l0.27,2.72l0.8,0.97l1.13,2.52l4.35,1.88l2.45,0.39l2.13,0.92l0.85,-0.4l-0.33,1.42l-1.45,3.13l-0.83,3.43l-0.51,5.92l0.1,1.96l-0.56,1.64l0.08,0.81l1.05,4.87l0.67,0.83l1.68,4.01l3.71,4.48l0.82,2.69l1.64,1.74l0.42,1.29l1.6,0.73l2.25,-0.04l0.9,0.68l0.96,0.26l1.22,1.69l0.72,0.2l1.56,-0.17l3.2,-1.22l3.41,-0.21l1.09,-0.8l1.16,-0.28l2.2,-0.2l0.25,0.93l0.71,0.35l1.48,0.07l1.66,-1.3l-0.33,-1.4l1.84,-1.09l1.22,-1.3l0.23,-1.91l1.04,-1.24l0.04,-3.26l0.61,-2.19l2.48,-1.28l4.82,-0.75l2.05,-0.82l2.23,-0.19l3.89,0.84l0.71,-0.35l0.11,-0.51l1.02,0.85l0.23,1.26l-0.68,1.65l-2.53,2.96l-0.31,0.92l0.16,1.07l-1.21,1.17l0.27,0.96l0.81,-0.0l-1.01,0.79l0.01,0.5l0.55,0.4l-1.21,4.05l-0.57,-0.63l0.1,-1.68l-0.65,-0.3l-0.83,0.69l-0.49,1.19l-1.3,0.43l-1.51,2.51l-0.95,-0.38l-0.66,0.38l-0.18,0.57l-8.94,-0.01l-0.4,0.4l-0.02,2.57l-1.73,-0.01l-0.31,0.66l3.58,2.89l0.45,1.08l0.94,0.48l-0.2,1.11l-6.48,0.2l-2.42,4.23l0.53,1.19l-0.3,0.44l-0.12,1.68l-2.56,-2.75l-5.66,-4.79l-2.58,-1.32l-0.84,0.49l-0.13,-0.69l-0.88,0.03l-0.89,-0.52l-0.86,0.68l-0.09,0.54l-2.07,1.14l-3.76,1.45l-1.43,0.2l-3.39,-1.33l-2.82,-0.29l-1.88,-1.2l-1.96,-0.54l-1.41,-1.25l-4.63,-0.95l-1.73,-1.06l-4.17,-1.46l-3.77,-2.35l-1.67,-1.63l-4.08,-0.58l-3.66,-1.34l-2.42,-2.65l-5.2,-2.53l-1.74,-2.06l-0.95,-1.36l-0.82,-1.99l1.21,-0.31l0.78,-0.6l-0.04,-0.84l-0.87,-0.65l1.04,-1.46l0.14,-1.94l-0.19,-0.43l-1.03,-0.62l-1.02,-1.82l-0.02,-1.86l-0.75,-1.62l-3.18,-3.15l-2.76,-3.73l-2.83,-2.2l0.1,-0.57l-0.33,-0.59l-2.13,-0.62l-0.89,-1.5l0.54,-0.65l-0.22,-0.33l-3.45,-1.85l-0.15,-0.5l-0.73,-0.29l0.24,-0.68l-0.67,-0.27l-1.29,0.65l-0.6,-0.48l-0.18,-1.41l0.68,-0.98l0.43,0.08l0.41,-0.58l-0.79,-1.49l-1.16,-1.13l-1.48,-0.05l-1.04,-2.07l-2.06,-0.76l-0.97,-1.51l0.27,-1.45l-0.24,-0.61l-2.9,-0.53l-1.67,-2.18l-1.13,-0.58l-2.37,-2.92l-0.28,-1.27l-0.83,-0.66l-0.15,-0.87l-1.65,-2.52l-0.45,-1.76l-1.21,-2.02l-0.22,-0.66l0.34,-1.63l-0.16,-0.81l-2.82,-0.91l-0.5,-1.02l-1.38,-0.67l-1.11,0.65l-2.24,-1.39l-1.66,-0.78l-0.49,0.08l0.6,1.67l-0.44,2.77l1.26,3.75l0.07,2.09l1.48,1.99l3.04,2.49l0.99,1.37l0.25,0.97l0.79,0.19l0.14,0.48l0.63,0.2l0.66,1.62l0.99,0.44l0.7,3.15l2.1,1.8l0.7,1.79l0.88,0.58l0.87,2.3l0.89,0.73l0.47,-0.15l0.09,-0.55l-0.36,-0.52l0.32,0.27l1.18,3.07l0.27,1.95l0.73,1.19l0.57,0.32l0.7,1.95l1.04,1.47l-0.25,1.37l0.48,1.63l1.56,1.37l0.75,-0.23l0.22,-0.77l1.77,1.77l0.88,1.66l1.07,0.75l-0.28,1.3l-1.95,1.36l-1.88,-3.72l-1.43,-0.79l-2.04,-1.95l-3.29,-2.43l-0.63,-0.13l-1.34,-1.41l-0.21,-0.83l0.29,-2.97l-0.55,-1.92l-1.08,-1.73l-1.58,-0.71l-1.75,-1.38l-0.91,-2.11l-0.84,0.84l-1.45,0.33l-0.98,-1.14l-3.09,-1.42l-0.46,-1.12l-2.11,-1.59l1.67,0.27l0.99,-0.26l1.21,0.88l0.7,-0.3l-0.69,-1.7l0.78,-2.75l-0.6,-1.12l-3.99,-4.09l-1.3,-0.54l-2.44,-1.72l-0.58,-1.13l-0.15,-1.91l-0.9,-0.68l-0.3,-2.0l-1.21,-1.06l-0.24,-1.32l-1.61,-1.95l-0.03,-0.59ZM384.21,429.35l-0.58,-0.3l0.26,-1.28l0.34,-0.13l0.24,0.83l-0.26,0.88ZM378.19,425.87l0.19,0.17l0.13,0.37l-0.28,-0.39l-0.04,-0.15ZM379.15,427.07l0.28,0.07l0.03,0.24l-0.31,-0.31Z\",\n            name: \"Mexico\"\n          },\n          CU: {\n            path: \"M526.78,466.91l0.86,-0.32l-0.06,-1.77l1.1,-1.14l4.28,-1.81l3.02,-0.41l2.78,-0.77l2.61,0.39l1.41,-0.12l0.81,0.45l2.49,-0.25l1.42,0.83l1.49,0.02l1.02,0.39l3.0,2.45l3.16,0.29l5.23,2.99l0.75,0.14l0.33,-0.24l0.44,0.38l-0.33,0.18l0.11,0.47l0.79,0.78l0.89,-0.4l1.25,1.2l0.48,-0.14l0.46,0.4l1.89,0.29l1.05,0.52l1.73,0.12l0.28,0.17l-0.18,0.61l-0.57,0.69l0.33,0.57l4.07,0.3l2.21,1.51l1.66,0.49l-0.35,0.37l-1.87,0.12l-2.05,0.73l-0.14,-0.26l-0.71,0.01l-0.44,0.39l-4.36,-0.51l-7.17,0.69l2.68,-2.28l0.03,-0.82l-0.67,-0.9l-4.65,-0.75l-1.75,-1.39l-0.46,-1.95l-1.01,-1.15l-2.83,0.15l-3.2,-0.95l-1.56,-0.66l-1.23,-1.29l-2.67,0.26l-0.42,-0.16l-0.45,-0.82l-0.72,0.15l-0.33,0.55l-0.57,-0.41l-1.92,-0.11l-0.6,-0.4l1.1,-0.27l0.53,-0.82l-0.42,-0.69l-0.72,-0.33l-4.86,-0.02l-3.27,2.49l-2.67,0.3l-0.65,1.17l-1.77,0.65l-0.14,-0.35ZM534.15,467.72l0.23,-0.31l0.93,0.15l0.65,1.21l-1.53,0.5l0.22,-0.59l-0.5,-0.96Z\",\n            name: \"Cuba\"\n          }\n        },\n        height: 543.9752077221104,\n        projection: {\n          type: \"mill\",\n          centralMeridian: -11.5\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"oceania_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 606.4292604642054,\n          bbox: [{\n            y: -2119119.6569834785,\n            x: -7472412.761398178\n          }, {\n            y: 6796504.590523286,\n            x: 5759240.699079444\n          }],\n          left: 0\n        }],\n        paths: {\n          GU: {\n            path: \"M240.87,42.61l-0.01,-0.59l0.19,-0.14l-0.18,0.73Z\",\n            name: \"Guam\"\n          },\n          PW: {\n            path: \"M164.06,87.32l0.02,-0.17l0.14,-0.24l-0.03,0.17l-0.13,0.24Z\",\n            name: \"Palau\"\n          },\n          KI: {\n            path: \"M679.59,130.26l0.02,-0.03l0.02,0.04l-0.04,-0.01Z\",\n            name: \"Kiribati\"\n          },\n          NC: {\n            path: \"M416.93,308.88l0.36,0.45l0.68,0.17l-0.06,0.61l-0.58,0.13l-0.49,-0.35l-0.29,-0.93l0.39,-0.08ZM411.15,303.46l0.49,0.13l-0.03,1.1l1.04,1.41l-0.11,0.35l-1.92,-1.24l0.92,-0.97l-0.39,-0.79ZM387.8,299.51l0.1,0.08l-0.08,-0.04l-0.02,-0.04ZM388.42,299.97l0.82,0.48l1.04,-0.13l3.92,3.03l1.69,0.74l1.34,1.25l0.46,1.08l1.66,1.52l4.92,2.99l2.91,2.49l1.84,1.04l0.25,1.28l-1.16,0.29l-2.23,-0.94l-2.05,-1.21l-0.77,-1.13l-1.95,-0.76l-0.68,-0.65l-3.72,-1.95l-2.37,-1.87l-3.56,-3.62l-2.07,-2.66l-0.28,-1.29Z\",\n            name: \"New Caledonia\"\n          },\n          NU: {\n            path: \"M585.07,289.99l0.09,0.19l-0.28,0.16l0.14,-0.33l0.05,-0.02Z\",\n            name: \"Niue\"\n          },\n          NZ: {\n            path: \"M534.0,498.67l0.36,-0.21l0.11,0.44l-0.47,-0.23ZM534.78,500.22l0.77,0.62l-1.2,0.49l-0.15,-0.45l0.58,-0.66ZM456.17,419.08l-1.68,-1.97l-0.75,-0.96l1.06,-0.1l-0.2,0.67l1.56,2.36ZM456.68,419.85l0.23,0.29l0.07,0.25l-0.31,-0.53ZM457.03,420.47l0.58,0.21l0.67,-0.58l2.79,1.38l0.58,-0.3l1.64,0.84l0.08,0.94l0.47,0.51l0.77,-0.01l0.46,-0.36l1.44,2.46l-0.19,0.87l0.24,0.45l-0.71,-0.11l-0.42,0.67l3.03,4.43l-0.3,1.67l0.39,0.8l-0.65,2.1l0.33,0.36l0.55,0.1l0.25,0.12l0.26,0.27l0.74,-0.29l2.34,1.04l0.32,1.34l0.57,0.62l1.33,-0.05l0.51,-0.81l-0.73,-4.4l0.88,1.11l0.65,0.11l0.53,0.95l1.09,4.81l0.62,0.67l-0.26,0.77l0.68,0.6l1.46,0.35l3.68,1.86l3.95,0.93l1.46,-0.34l0.89,-0.57l1.35,-1.73l1.94,-1.2l1.76,0.09l1.67,0.89l-1.01,2.1l-0.91,5.05l-2.25,1.62l-0.51,2.71l0.29,1.27l-0.75,-0.82l-2.11,-0.34l-1.82,0.4l-1.83,1.05l-0.96,1.34l-0.2,1.33l0.27,1.17l0.92,0.6l-1.84,3.95l-3.46,4.58l-3.0,4.84l-4.81,3.42l-0.34,-0.17l-0.64,-1.52l-0.85,-0.24l-1.06,0.28l0.13,-1.04l-0.38,-0.71l-0.59,0.01l-0.34,0.74l-0.57,0.11l2.75,-3.69l1.16,-2.15l0.7,-3.0l-0.78,-1.83l-1.27,-1.61l-1.48,-0.82l-1.86,-0.43l-1.67,-1.52l-3.13,-1.19l-0.8,-0.64l-0.28,-0.74l0.44,-1.22l1.64,-0.91l2.56,-0.65l1.64,-1.73l0.9,-4.94l0.95,-1.82l-0.24,-1.18l0.67,-0.5l0.2,-0.58l-1.32,-2.57l0.14,-1.16l-0.75,-0.92l0.51,-0.24l0.33,-0.63l0.78,-0.17l0.26,-0.67l-1.11,-1.23l-1.67,0.22l-0.64,-0.25l-1.09,-2.38l0.54,-0.07l0.47,-1.07l-0.13,-0.71l-0.63,-0.64l0.32,-0.68l-0.15,-0.57l-0.85,-0.69l-0.81,0.36l-1.0,-0.67l-0.86,-1.73l-0.43,-0.24l-0.34,0.35l-0.0,0.82l-2.91,-3.94l1.5,-1.78l-0.31,-0.53l-0.58,-0.02l-1.4,1.37l-0.4,-0.98l-1.02,-0.98l0.42,-0.68l-0.04,-1.11ZM463.41,431.7l0.14,0.17l0.06,0.19l-0.06,-0.05l-0.14,-0.3ZM473.83,433.91l-0.09,-0.09l0.01,-0.04l0.05,0.08l0.02,0.05ZM473.39,430.83l0.04,-0.47l0.56,0.82l-0.04,-0.04l-0.56,-0.32ZM406.28,517.99l3.24,-0.57l0.56,-0.45l-0.24,-0.69l-1.17,-0.17l1.23,-0.78l0.19,-0.49l-0.45,-0.26l-1.43,0.13l0.15,-0.49l0.83,-0.01l0.28,-0.63l1.38,0.63l0.44,-0.13l-0.23,-0.9l0.87,-0.42l-0.21,-0.42l-1.32,-0.54l-0.02,-0.48l0.38,-0.34l1.08,0.15l0.16,-0.71l-0.45,-0.48l1.16,-0.93l0.64,0.96l0.37,-0.31l0.02,-1.52l2.05,-1.51l1.08,0.55l0.21,-0.42l-0.38,-1.33l3.71,-3.73l1.92,-0.91l1.22,0.16l1.86,-1.13l0.75,0.38l0.51,-0.52l-0.16,-0.82l2.48,-1.34l2.28,-0.78l0.34,-0.7l0.51,-0.26l-0.06,-0.35l2.54,-2.19l1.15,0.17l0.15,-0.47l-0.3,-0.58l0.42,-0.18l0.95,0.42l0.52,-0.13l-0.43,-0.81l0.36,-0.15l0.84,0.54l0.24,-1.09l1.31,-1.43l0.21,1.19l0.65,-0.3l0.05,-1.7l1.1,-1.61l0.68,-0.24l0.32,-0.57l-0.35,-0.49l1.65,-5.17l1.76,-0.59l1.7,-1.7l1.18,-3.2l0.35,-2.27l0.93,-1.57l1.42,-1.17l1.31,-0.91l0.05,1.65l0.47,0.66l1.58,0.66l0.53,2.86l0.7,1.09l1.15,-0.05l4.31,-2.8l0.11,0.54l-0.71,1.61l0.02,0.47l0.46,0.12l0.95,-0.46l0.96,-1.91l0.78,-0.14l0.31,0.23l-1.71,1.71l1.15,0.38l-0.89,1.09l0.03,0.71l0.52,0.71l-0.43,0.72l0.42,0.6l0.69,-0.01l0.28,0.32l-0.18,0.4l-2.57,2.75l-0.44,1.35l-2.23,2.26l-2.43,4.17l-2.39,1.27l-1.31,1.23l-0.61,0.11l-0.31,0.68l0.71,0.52l-1.35,0.68l-0.08,0.46l0.42,0.22l1.19,-0.12l0.75,1.55l1.92,0.5l0.03,0.99l-0.93,0.23l-1.38,-0.72l-0.98,0.11l0.01,-0.4l-0.89,-0.49l-0.81,0.3l-0.62,0.96l-1.84,-1.44l-0.47,0.01l-0.01,0.81l0.81,1.17l-3.5,1.79l-1.66,0.19l-0.67,1.11l-1.15,0.41l0.49,0.53l-0.81,4.15l-0.3,1.02l-0.81,-0.01l-0.32,0.64l0.82,0.76l-1.29,1.64l-0.42,1.57l-1.45,3.04l0.68,1.41l-2.5,0.63l-0.79,0.55l-1.17,1.63l-2.05,1.67l-1.65,1.96l-2.48,0.62l-1.76,0.09l-2.45,-0.6l-1.6,0.39l-1.29,-0.07l-0.22,-1.23l-1.12,-0.97l-2.65,-0.03l-1.13,-1.52l-1.23,-0.52l-0.58,0.04l-0.93,0.82l-1.95,0.07l-2.47,-0.39l1.36,-1.7l0.03,-0.51l-0.5,-0.12l-0.89,0.52l-0.06,-0.93l-0.63,-0.19l-1.14,0.59l0.02,-0.63ZM464.16,475.77l0.52,-0.33l-0.28,0.26l-0.25,0.06ZM461.7,471.81l0.05,-0.2l0.28,-0.24l-0.17,0.35l-0.16,0.08ZM425.9,583.44l0.01,-0.0l0.04,0.01l-0.02,0.01l-0.03,-0.02ZM414.34,530.94l1.81,-2.66l-0.07,-1.86l0.78,-0.03l0.94,1.05l-0.52,0.4l0.02,0.43l1.57,1.04l-1.43,0.31l-0.89,0.58l-0.91,-0.01l-1.28,0.74ZM407.01,516.29l0.33,-0.1l0.09,0.24l-0.23,-0.03l-0.19,-0.11ZM402.53,565.46l0.62,-0.57l0.23,-1.11l0.23,-0.02l-0.42,1.57l0.35,0.71l-1.02,-0.58Z\",\n            name: \"New Zealand\"\n          },\n          AU: {\n            path: \"M3.12,347.94l0.52,-0.43l1.06,2.65l-1.15,-1.41l-0.44,-0.81ZM4.9,350.4l1.59,0.34l0.85,-0.84l0.22,-1.59l-1.05,-1.13l0.68,-0.45l0.33,1.19l1.2,1.17l1.13,-0.44l0.47,-0.75l-0.08,-3.75l-4.08,-7.01l-0.76,-2.25l-1.13,-2.04l0.03,-2.27l0.5,-2.04l2.04,-3.72l0.29,-4.05l-0.82,-2.23l2.0,-5.31l0.64,-0.5l-0.35,2.13l0.52,1.26l-0.15,1.15l0.56,0.42l1.19,-0.44l0.74,-0.79l2.47,-4.07l5.57,-2.58l4.25,-3.68l5.17,-2.92l3.08,-0.08l1.06,0.52l1.15,0.09l2.17,-0.64l3.84,-2.09l4.16,-0.89l2.71,-2.08l3.47,0.33l1.53,-0.64l3.25,-0.39l6.19,-2.46l2.67,-2.33l1.21,-1.73l2.47,-4.79l1.32,-0.68l2.69,-2.42l-0.03,-0.98l-0.83,-0.51l-0.64,-3.04l0.08,-1.65l0.7,-1.28l3.49,-2.73l1.31,-2.45l1.18,2.99l1.88,3.44l1.4,1.82l0.67,-0.22l0.33,-2.33l-0.14,-1.24l0.99,0.77l0.53,0.0l0.63,-2.09l-2.7,-2.97l0.82,-0.71l-0.08,-1.51l1.13,1.36l0.46,0.16l1.29,-0.88l1.94,0.95l3.47,0.1l0.44,-0.57l-0.32,-0.42l-2.45,-0.43l0.07,-0.85l0.88,0.03l0.38,-0.37l0.54,-1.93l-0.0,-0.5l-0.56,-0.37l-0.84,0.81l-0.61,-0.92l0.34,-1.61l0.89,-0.02l1.08,-1.51l1.76,1.22l0.87,-0.06l0.29,-1.43l-0.48,-0.36l-0.91,0.03l-0.23,-0.66l1.2,-0.7l2.06,0.67l0.44,-0.18l0.27,-0.97l-1.07,-0.85l-0.47,-1.05l0.73,-1.22l1.06,-0.18l1.09,-0.66l0.65,0.5l0.52,-0.54l0.45,1.05l0.84,0.0l1.04,-1.16l-0.03,-0.89l0.71,-1.98l-0.35,-0.79l0.73,1.32l0.57,0.13l0.83,-0.97l1.02,0.91l0.5,0.04l1.7,-1.68l0.01,-1.23l0.61,-0.21l3.96,2.12l1.59,1.24l1.65,2.26l2.14,1.69l-0.83,2.64l-0.08,1.87l0.55,0.39l0.68,-0.63l0.28,0.3l0.69,-0.24l-0.61,-1.85l1.75,-1.57l0.9,-0.26l3.45,0.81l0.63,0.62l0.06,0.84l0.41,0.58l0.69,-0.16l0.15,-1.89l1.06,0.36l1.32,1.58l0.63,-0.2l0.12,-0.41l-0.19,-1.55l1.38,-0.16l0.16,-0.71l-1.53,-1.02l0.55,-0.78l-2.34,-1.36l0.47,-1.07l1.95,-1.97l0.89,-2.93l2.11,-0.87l1.1,-1.25l-0.01,-0.48l-0.84,-1.08l0.18,-1.06l1.15,-0.69l0.57,-1.37l1.48,-0.23l0.24,-1.76l1.27,1.03l0.53,-0.06l0.33,-0.61l-0.14,-0.81l1.1,-0.46l0.01,-0.83l1.1,-0.08l0.44,-0.35l0.23,0.52l0.96,0.59l2.18,0.01l1.21,-0.33l1.28,0.34l1.54,-0.67l0.84,0.62l0.72,-0.13l0.54,-0.97l1.43,-0.06l0.22,-0.66l-0.51,-0.55l0.17,-3.13l-1.71,-1.29l-2.87,-0.07l-1.51,-1.18l0.5,-0.31l1.47,0.96l0.63,-0.29l0.23,-0.48l0.26,0.07l1.6,1.04l0.92,1.02l0.5,0.08l1.22,-0.8l0.53,0.08l1.8,2.31l1.25,0.17l1.46,0.68l2.69,0.11l2.4,1.28l1.57,0.42l1.09,0.03l1.23,-0.5l2.28,1.54l1.71,0.15l4.14,-2.33l0.11,0.19l-1.09,0.98l0.04,1.05l0.67,0.32l1.31,-0.64l1.09,2.04l1.76,-0.13l0.54,-1.3l-0.44,-1.04l1.38,-1.13l0.55,1.27l0.83,0.71l1.31,0.14l0.2,0.43l-3.01,3.27l-0.1,0.75l0.48,1.02l-0.82,1.38l-1.19,-0.65l-2.8,1.29l-0.21,0.36l0.01,2.45l0.44,1.46l-0.74,2.43l-3.6,4.67l0.41,1.78l5.69,3.73l0.76,1.36l2.24,1.07l0.65,-0.14l-0.01,0.86l0.81,0.69l1.78,-0.03l2.18,1.4l2.99,1.27l1.56,1.85l2.58,1.93l2.07,0.6l0.95,-0.07l2.76,0.9l1.92,3.37l1.39,0.39l4.48,2.5l1.62,0.05l2.39,-0.67l2.45,-1.66l1.16,-3.27l1.88,-2.82l0.59,-1.5l0.92,-3.07l-0.11,-1.4l0.43,-2.24l1.33,-4.39l-0.76,-4.49l0.5,-2.62l-0.84,-1.71l-0.05,-0.84l1.29,-4.06l-0.2,-2.4l1.04,-1.03l0.66,0.14l0.59,-0.29l0.07,-0.49l-0.66,-1.54l-1.22,-0.66l0.06,-0.76l1.06,-2.33l0.38,0.28l0.64,-0.29l-0.06,-1.22l1.39,-4.7l0.21,-2.33l1.11,-0.48l0.94,-1.23l0.3,0.0l-0.07,1.19l1.23,0.99l0.79,2.11l0.26,3.9l1.04,1.03l1.21,0.23l-0.49,1.33l0.04,1.13l1.16,0.94l1.04,1.72l1.4,6.11l-0.26,2.37l1.57,4.67l0.72,0.67l1.4,0.47l1.89,-1.23l1.68,-0.45l1.22,1.88l4.65,3.33l-0.24,1.11l0.3,1.69l-0.14,1.29l1.39,4.45l-0.2,2.82l2.53,3.74l1.09,0.41l-0.02,1.01l1.65,4.27l-0.7,5.0l1.53,2.06l0.7,0.34l-0.22,1.98l0.71,1.31l1.68,1.41l1.9,0.79l1.28,0.17l1.14,1.09l2.1,-0.06l1.07,1.76l1.18,1.16l0.89,0.27l0.6,0.62l1.22,0.23l2.05,1.42l1.78,0.47l1.14,1.08l0.61,0.89l-0.91,0.1l-0.31,1.25l0.86,1.3l3.06,2.98l0.92,2.69l0.94,0.9l0.54,3.46l0.54,1.86l0.85,1.52l0.44,0.21l0.75,-0.25l0.94,1.02l0.56,-0.0l0.34,-0.63l-0.45,-1.59l0.39,-0.73l1.1,1.49l2.4,1.56l0.55,0.04l0.36,-0.48l-0.09,-0.86l0.7,1.22l0.15,4.76l0.58,2.47l2.43,2.67l2.57,1.8l1.56,0.28l0.93,0.59l2.19,3.73l2.47,1.67l0.33,1.24l1.17,1.95l1.08,0.67l0.82,1.11l0.09,2.11l0.86,1.54l0.92,0.63l-0.57,2.68l0.58,5.46l-0.32,1.88l2.04,4.7l0.55,2.35l0.86,1.48l-0.05,2.29l0.36,1.21l-0.08,1.31l-1.92,3.57l-0.59,5.03l-1.84,5.67l0.13,2.88l-0.77,4.3l-1.16,2.85l-1.68,2.13l-0.7,3.33l-2.59,2.21l0.13,0.44l-2.52,1.26l-2.53,3.86l-0.36,1.31l-0.93,0.47l-0.27,3.16l-1.04,0.48l0.32,0.72l-1.61,1.81l-0.74,1.82l-0.71,3.43l0.14,0.76l-0.75,0.47l0.03,0.92l-1.01,0.55l-2.85,5.41l-1.0,6.19l-0.78,2.59l0.18,3.67l-0.31,2.02l-0.87,0.21l-2.38,1.89l-9.12,0.5l-3.09,0.96l-3.7,2.54l-4.01,3.85l-4.82,0.58l-0.25,0.85l1.0,1.25l0.59,0.04l0.35,-0.33l0.09,1.47l-0.28,0.35l-1.63,-2.39l-0.67,-0.28l-0.99,0.43l-0.94,-1.74l-1.61,-0.29l-1.22,-0.83l0.99,-1.18l-0.82,-1.62l-1.54,-0.05l-0.99,1.39l-1.44,0.85l-0.72,-0.5l0.61,-0.12l0.82,-0.75l0.86,-1.62l-0.61,-1.13l-1.27,-1.04l-4.17,2.07l0.09,0.73l1.49,0.24l-3.81,1.9l-2.24,2.12l-1.83,0.97l-2.19,-0.64l-1.01,-0.79l-1.91,-0.63l-3.03,-1.75l-2.03,0.09l-1.87,-0.95l-1.67,-0.15l-1.18,1.01l-0.92,-0.15l-1.52,-1.61l-1.64,-0.91l-2.95,-0.46l-1.64,-1.06l-1.36,-2.23l-3.17,-3.37l-0.3,-1.39l0.9,-3.46l-1.02,-2.77l-2.03,-3.18l-3.34,-2.93l0.68,-0.54l0.92,0.67l0.5,-0.38l0.23,-1.42l-0.36,-0.85l-1.18,-0.37l-2.44,1.6l-1.03,0.14l-1.54,0.77l-1.87,-0.16l1.43,-2.04l0.84,-2.59l-0.14,-2.39l-3.1,-5.26l-0.69,0.02l-1.27,2.41l-0.4,2.44l-1.27,3.28l-1.59,-0.1l-2.37,0.89l-1.35,0.13l0.73,-2.06l2.6,-0.05l0.35,-0.26l0.79,-2.76l-0.25,-1.93l0.25,-1.77l1.14,-2.47l2.18,-2.64l-0.57,-2.93l1.03,-1.21l-0.63,-2.82l-1.03,-1.7l-0.44,-0.14l-0.28,0.38l0.05,1.97l-2.54,2.99l-1.56,3.69l-4.43,2.18l-1.7,1.27l-4.02,5.31l-0.05,0.91l0.65,1.55l-0.82,-0.72l-1.29,0.41l-1.9,-1.96l0.45,-0.11l0.26,-0.59l-1.75,-5.29l-2.51,-2.9l-0.81,-2.61l-1.47,-1.24l-2.3,-0.26l-0.83,-1.36l-0.43,-1.51l0.85,-0.32l0.18,-0.76l-0.33,-1.24l-2.24,-1.12l-1.04,-1.15l-1.12,-0.64l-3.42,-0.21l-3.53,-1.91l-3.99,0.44l-3.71,-2.58l-2.56,-1.27l-1.92,-0.45l-2.85,0.9l-4.94,-0.2l-9.01,1.04l-6.7,3.07l-5.64,1.65l-3.99,0.38l-4.84,-0.45l-1.78,0.34l-2.78,1.81l-2.28,0.91l-3.8,2.24l-3.92,1.13l-1.08,1.16l-1.92,3.89l-1.59,1.96l-0.92,0.57l-1.18,-0.03l-0.97,0.57l-0.85,-0.6l-1.1,-0.22l-5.89,0.88l-0.8,-0.95l-5.07,-0.41l-4.52,0.38l-2.98,0.76l-1.58,-0.22l-2.69,0.33l-1.84,1.15l-1.45,2.3l-1.35,0.66l-2.82,0.28l-5.68,4.28l-4.04,0.92l-7.93,-0.92l-3.9,-1.61l-1.9,-2.22l-1.3,-0.92l-2.23,-1.07l-1.27,0.2l-0.55,-0.45l-0.26,-1.61l0.11,-3.76l1.07,0.75l1.58,-0.11l1.3,-1.06l1.29,-2.9l-0.45,-4.53l0.66,-0.86l0.22,-5.83l-0.35,-1.75l-3.94,-7.4l-0.72,-1.99l-0.81,-4.24l-0.07,-5.04l-0.79,-2.48l-1.75,-2.31l-0.72,-2.74l-2.79,-3.76l-0.47,-4.23l-0.59,-1.78l-2.41,-4.07l-1.52,-1.87ZM5.49,346.12l-1.4,-2.96l0.13,-0.37l1.47,1.56l-0.2,1.77ZM307.15,358.08l0.01,-0.18l0.17,-0.41l-0.17,0.59ZM304.06,342.63l-0.11,-0.67l0.63,-1.96l-0.13,-0.79l1.06,-0.95l0.38,-0.95l0.09,0.6l-1.92,4.72ZM305.51,336.0l-0.11,-0.12l0.09,-0.06l0.01,0.18ZM289.28,325.66l0.66,0.31l0.41,1.19l-0.1,-0.07l-0.97,-1.43ZM266.67,467.87l1.59,-0.39l0.64,0.6l-0.17,0.16l-0.57,-0.46l-1.49,0.09ZM243.31,471.7l1.77,-0.15l4.12,2.28l3.94,1.28l1.95,-0.19l1.08,-0.5l1.13,0.69l0.22,-1.1l0.75,-0.44l2.34,-0.32l1.38,0.29l1.11,-1.28l1.78,0.23l0.91,-0.83l1.42,0.59l0.45,0.64l0.17,8.76l-1.01,0.49l-0.84,1.56l-0.47,2.5l-0.64,1.27l-0.07,2.29l0.48,2.95l-0.95,0.22l-0.68,-1.2l0.97,-0.2l-0.08,-1.09l-1.83,-0.81l-0.68,0.4l-0.09,1.11l-0.29,-0.96l-0.83,-0.94l-0.45,-0.1l-0.25,0.4l0.34,1.49l-0.6,0.9l-0.12,1.26l-1.28,-0.65l-0.61,0.22l-0.09,0.72l0.52,0.57l-1.23,2.68l-0.91,-0.12l-1.34,-0.88l-3.5,0.25l-0.25,-0.76l1.35,-0.11l0.38,-0.54l-0.14,-0.36l-0.42,-0.34l-2.38,-0.16l-1.79,-2.52l-0.91,-0.65l-1.62,-3.41l-0.37,-1.83l1.49,1.9l0.83,-1.19l-0.06,-0.58l-1.24,-1.29l-0.16,-0.56l-0.55,-0.23l-0.23,-1.11l-2.41,-3.36l-1.08,-2.17l-0.9,-3.6l0.5,-2.13l1.97,0.74ZM264.9,463.05l0.55,-0.7l1.44,1.63l0.8,0.35l-0.22,0.56l0.25,0.75l-1.02,0.51l-1.23,-1.81l-0.17,-1.04l-0.38,-0.24ZM259.93,495.5l0.38,-0.53l0.12,-0.34l-0.07,0.94l-0.43,-0.07ZM252.24,284.34l0.26,-0.08l0.33,0.97l-0.33,-0.6l-0.26,-0.29ZM245.66,449.75l0.13,-0.01l-0.11,0.06l-0.02,-0.05ZM235.03,464.86l-0.28,-1.49l0.15,-1.37l0.61,-1.0l0.36,0.27l0.32,2.59l-1.15,1.0ZM221.75,225.27l0.17,0.16l-0.1,0.07l-0.03,-0.02l-0.04,-0.22ZM199.24,271.61l0.83,-1.24l1.97,-0.48l0.13,0.16l-2.07,1.39l-0.86,0.17ZM186.63,426.84l0.35,0.43l1.81,0.2l0.78,-0.28l0.92,0.61l-1.74,-0.21l-1.25,0.26l-0.85,1.2l-0.66,0.25l-1.8,-0.72l-0.71,0.45l-2.69,-0.01l-1.3,-0.93l0.49,-0.77l5.11,-1.31l1.66,0.19l-0.12,0.63ZM178.36,252.29l0.17,-2.22l1.29,-1.17l0.24,0.75l0.61,0.43l-0.47,1.73l1.01,0.85l-2.87,-0.38ZM176.38,249.17l0.08,-0.08l0.09,-0.12l0.03,0.15l-0.2,0.04ZM148.87,228.94l0.1,0.2l-0.04,0.14l-0.12,-0.23l0.05,-0.11ZM132.92,230.01l0.94,0.93l1.29,0.21l1.25,-0.54l0.89,0.15l1.79,-0.92l1.49,1.32l-1.58,1.79l-2.31,1.48l-3.0,-2.14l-0.61,-1.2l-0.15,-1.09ZM130.25,233.73l0.95,-0.55l-0.08,-1.67l0.68,-0.72l0.78,2.33l1.01,0.62l-1.81,-0.41l-1.52,0.39ZM0.69,343.22l0.25,0.69l-0.14,-0.24l-0.11,-0.45Z\",\n            name: \"Australia\"\n          },\n          PG: {\n            path: \"M317.31,186.15l1.37,0.38l0.59,0.49l0.78,1.57l1.32,1.12l0.8,1.37l1.32,0.59l1.29,1.13l0.73,1.28l0.13,1.04l-1.43,0.68l-0.6,-0.04l-1.86,-0.92l-0.88,-1.24l0.16,-0.94l-0.24,-0.79l-1.55,-0.91l-1.82,-2.0l-0.34,-1.24l0.24,-1.57ZM316.23,184.69l-0.36,-1.75l0.21,-0.24l0.31,1.07l-0.16,0.92ZM306.38,231.17l1.21,0.64l1.04,0.34l-1.74,-0.38l-0.52,-0.59ZM287.63,164.8l0.1,-0.36l0.53,0.36l-0.63,-0.0ZM291.46,166.57l1.34,0.67l1.75,1.32l1.64,0.57l0.93,1.02l-1.67,-0.58l-3.99,-3.0ZM299.57,172.25l3.99,3.29l0.72,0.98l-0.75,2.84l-0.56,0.78l-1.26,-1.99l-0.13,-2.87l-2.0,-3.03ZM301.3,212.7l0.78,-0.03l1.13,0.78l-0.49,0.34l-0.8,-0.34l-0.63,-0.75ZM281.23,184.76l0.26,0.8l0.85,0.87l0.88,0.09l1.63,-0.56l0.93,0.45l0.82,-0.08l1.38,-0.51l0.57,-0.32l1.36,-2.3l1.34,-1.08l1.86,-0.18l0.95,-0.74l-0.05,-1.94l-0.86,-2.27l0.13,-0.59l1.32,0.1l1.16,0.75l1.25,-0.66l1.72,0.78l-0.21,0.9l0.27,1.65l-0.31,0.59l-0.64,0.92l-1.6,0.28l-0.57,0.78l0.14,0.98l0.96,1.31l-0.32,0.49l-1.36,0.69l-2.91,0.05l-0.71,1.48l-1.38,1.24l-3.11,1.11l-2.56,1.46l-5.93,0.18l-2.0,-1.59l-2.1,0.31l-2.9,-1.9l-2.34,-0.76l-0.34,-0.51l0.04,-0.64l0.37,-0.31l0.91,0.23l3.25,-0.17l2.72,0.75l2.15,-0.5l1.47,0.05l1.2,-0.63l0.31,-1.04ZM281.64,182.69l0.03,-0.1l0.06,-0.03l0.02,0.02l-0.1,0.11ZM288.07,219.52l0.46,0.33l-0.02,0.09l-0.11,-0.17l-0.33,-0.26ZM288.62,220.3l0.88,0.4l0.83,-0.66l-0.26,0.96l-1.44,-0.45l-0.02,-0.25ZM284.67,215.58l1.19,0.54l0.89,-0.08l0.52,0.55l0.06,0.55l-2.19,-0.22l0.04,-0.55l-0.5,-0.79ZM213.01,164.32l1.09,0.12l4.9,2.29l5.42,2.07l2.74,0.89l4.48,0.81l4.24,2.84l3.1,0.15l1.01,1.19l1.68,0.86l1.83,1.86l1.97,0.37l3.1,3.14l-0.03,4.53l0.96,0.58l4.09,1.08l4.82,2.31l2.65,0.26l1.23,0.7l1.73,1.94l0.26,2.21l-3.31,0.37l-1.76,-0.16l-1.51,0.92l-0.11,1.15l1.81,3.58l4.09,3.84l3.0,1.71l0.85,3.28l1.58,1.19l1.19,2.87l1.75,0.32l2.88,-0.48l0.28,0.73l-0.45,1.73l0.52,0.96l1.82,0.85l3.58,0.5l-1.41,0.41l-0.27,0.39l0.11,0.73l0.81,1.06l3.91,1.51l1.36,0.14l0.3,0.12l-1.18,-0.04l-0.3,0.81l1.51,1.15l-0.81,0.48l-1.06,0.11l-2.05,-0.52l-0.55,-0.72l-1.65,-1.07l-6.19,-0.75l-2.14,-0.75l-1.75,0.25l-1.16,-0.48l-3.73,-0.44l-1.44,-1.08l-1.16,-1.86l-2.93,-2.16l-0.59,-0.91l0.13,-1.64l-0.97,0.13l-1.46,-0.88l-3.39,-5.37l-1.22,-1.38l-2.44,-1.02l-2.0,-0.18l-3.71,-0.96l-1.01,-1.32l-2.54,-0.48l-0.73,0.27l-0.27,0.55l-1.79,0.62l-1.71,-0.58l-1.87,-1.63l-0.51,0.11l0.03,0.52l0.62,0.64l1.2,2.37l-0.43,0.64l-2.31,-0.17l-0.13,0.62l0.5,0.98l-3.46,0.73l-2.94,-0.29l-1.39,0.37l-1.32,-1.17l-1.15,0.23l-0.27,0.44l0.39,0.34l0.69,0.01l1.12,1.24l2.58,-0.12l2.26,0.94l1.87,2.04l-0.04,1.05l-5.2,2.66l-3.01,-1.17l-4.64,0.31l-1.74,-0.46l-1.9,0.52l-0.9,-0.59l-0.01,-16.66l-0.85,-1.35l0.84,-2.91l-0.01,-27.96ZM281.58,162.9l1.08,-0.28l1.29,0.55l0.03,0.76l-1.54,-0.0l-0.85,-1.03ZM283.27,215.97l-1.0,-0.85l0.34,-0.57l0.5,0.26l0.16,1.16ZM278.62,155.65l-0.66,-0.55l0.06,-0.28l0.55,0.39l0.04,0.43ZM264.59,186.19l1.37,0.79l-0.08,0.81l-0.73,-0.38l-0.56,-0.73l0.01,-0.49ZM255.56,160.21l0.22,-0.71l1.45,-0.19l3.04,0.38l-0.56,0.54l-4.15,-0.02ZM259.41,184.95l-0.68,-0.65l0.49,-0.31l0.23,0.19l-0.04,0.78ZM250.53,179.67l-0.3,-0.16l0.37,-0.5l0.09,0.28l-0.15,0.38Z\",\n            name: \"Papua New Guinea\"\n          },\n          SB: {\n            path: \"M401.2,226.2l0.44,-0.5l0.72,-0.08l0.27,0.05l-0.74,0.06l-0.7,0.48ZM366.91,222.26l0.24,-0.14l0.84,0.36l-0.52,-0.17l-0.56,-0.04ZM368.23,222.63l2.3,1.29l2.05,0.15l1.1,1.91l-2.39,-0.37l-2.49,-1.35l-0.58,-1.62ZM367.84,217.48l0.01,-0.37l0.01,-0.13l0.24,0.52l-0.26,-0.02ZM361.82,207.84l0.44,-0.16l1.63,1.97l-0.3,0.51l0.01,1.05l1.59,1.22l0.69,1.68l0.08,1.03l-2.27,-1.71l-1.47,-3.77l0.27,-0.91l-0.67,-0.9ZM354.72,214.98l1.57,1.16l3.02,-0.01l1.88,1.18l1.3,1.62l-0.83,0.27l-2.47,-0.81l-3.42,-0.21l-1.5,-1.73l-0.09,-1.16l0.54,-0.3ZM360.03,233.55l0.05,0.04l-0.05,-0.03l-0.01,-0.01ZM346.24,202.07l0.73,0.16l2.81,2.24l2.45,0.96l2.8,2.04l-0.16,0.49l-0.67,-0.62l-5.23,-2.49l-2.51,-2.06l-0.22,-0.72ZM350.09,212.96l0.09,-0.06l0.14,0.09l-0.14,-0.03l-0.09,-0.01ZM341.2,209.54l0.67,-0.31l0.12,0.68l-0.63,0.23l-0.17,-0.61ZM339.58,207.08l0.82,1.76l-1.56,-0.79l-0.5,-1.51l-1.69,0.03l-0.56,0.29l1.65,-1.83l0.45,0.17l0.45,1.56l0.94,0.31ZM330.29,194.75l3.73,2.02l0.42,0.38l0.41,1.25l1.22,1.1l-1.12,-0.16l-1.38,-1.01l-1.54,-2.01l-1.74,-1.59ZM337.16,200.01l0.15,0.02l-0.03,0.02l-0.13,-0.04ZM336.24,209.27l-0.13,-0.17l0.54,-0.43l-0.06,0.17l-0.36,0.43ZM335.04,205.4l-0.51,-0.03l-0.43,-0.53l0.3,-0.6l0.65,0.34l-0.01,0.82ZM331.51,203.67l-0.81,-1.21l0.1,-0.34l1.25,0.9l-0.54,0.65ZM324.56,197.56l0.23,0.13l-0.29,0.05l0.06,-0.18Z\",\n            name: \"Solomon Is.\"\n          },\n          PF: {\n            path: \"M818.2,218.52l0.51,-0.27l0.21,0.07l-0.66,0.22l-0.06,-0.02ZM809.81,211.26l0.74,0.09l-0.0,0.04l-0.63,0.19l-0.11,-0.33ZM740.27,279.5l-1.27,0.03l-0.3,-0.86l1.3,-0.09l0.27,0.91ZM741.11,280.1l0.34,0.11l0.08,0.22l-0.31,-0.13l-0.11,-0.2Z\",\n            name: \"Fr. Polynesia\"\n          },\n          FJ: {\n            path: \"M508.66,272.92l-0.0,-0.25l0.48,-0.39l-0.19,0.44l-0.29,0.21ZM497.43,272.16l0.3,-0.39l1.49,-0.09l1.33,-1.19l2.96,-0.78l1.51,-1.03l1.76,-0.2l-0.73,1.08l-1.04,0.74l-0.42,0.85l-0.01,1.03l-0.66,0.07l-0.66,-0.67l-1.06,-0.06l-1.33,0.86l-0.38,0.62l-0.94,-0.03l-0.92,0.55l-0.61,-1.13l-0.59,-0.21ZM506.04,271.76l0.18,-0.16l0.91,-0.62l-0.06,0.73l-1.03,0.05ZM494.84,277.19l0.18,0.54l2.2,1.7l-0.12,0.68l0.59,2.25l-2.1,0.26l-1.39,0.9l-1.42,0.11l-4.48,-1.33l-0.39,-1.1l1.18,-1.05l-0.08,-0.9l0.62,-0.57l2.18,-1.09l0.98,0.03l1.79,-0.6l0.27,0.17Z\",\n            name: \"Fiji\"\n          },\n          FM: {\n            path: \"M343.07,91.63l0.52,0.12l-0.04,0.44l-0.24,-0.01l-0.23,-0.55Z\",\n            name: \"Micronesia\"\n          },\n          WS: {\n            path: \"M569.03,249.95l0.88,-0.15l1.69,0.49l0.54,0.55l-2.46,-0.35l-0.65,-0.54ZM563.84,247.6l2.37,-0.43l0.64,0.55l0.25,0.72l-0.18,0.45l-1.9,0.02l-1.19,-1.3Z\",\n            name: \"Samoa\"\n          },\n          VU: {\n            path: \"M427.15,292.8l0.11,0.66l0.88,0.72l-0.11,0.23l-1.03,-0.95l0.15,-0.66ZM426.24,288.06l-0.02,0.44l0.75,0.77l-1.67,-0.73l0.05,-1.24l0.36,-0.08l0.52,0.83ZM419.3,279.22l0.36,-0.42l0.88,-0.01l0.69,0.96l-0.13,0.23l-1.13,-0.03l-0.17,-0.53l-0.5,-0.21ZM418.76,271.53l0.32,0.34l0.39,0.28l-0.55,0.09l-0.16,-0.71ZM417.42,268.27l1.12,-0.64l0.52,1.0l-1.39,-0.19l-0.26,-0.18ZM415.67,261.93l0.56,-0.52l0.37,-0.06l-0.54,0.6l-0.39,-0.01ZM411.57,267.12l-0.21,-0.24l0.28,-1.05l0.37,0.19l0.41,0.98l-0.85,0.12ZM412.83,267.52l2.5,1.78l0.24,0.51l-1.11,0.03l-0.96,0.5l-0.67,-2.83ZM413.26,252.79l0.07,-0.27l0.53,0.01l-0.14,0.32l-0.47,-0.07ZM413.39,249.66l-0.21,-0.43l0.16,-0.09l0.23,0.34l-0.18,0.19ZM406.71,256.46l0.77,1.0l0.47,2.45l0.4,0.33l0.73,-0.04l0.82,-0.96l0.52,0.72l0.47,2.25l-0.56,0.51l-1.03,-0.02l-0.95,0.43l-0.96,-1.46l0.1,-1.54l-0.89,-2.74l0.12,-0.93Z\",\n            name: \"Vanuatu\"\n          }\n        },\n        height: 606.4292604642054,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 180\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"se_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 1452.0211302823068,\n          bbox: [{\n            y: -9262763.575792028,\n            x: 1223668.3208382255\n          }, {\n            y: -6888448.113700481,\n            x: 2695330.0420880616\n          }],\n          left: 0\n        }],\n        paths: {\n          \"SE-O\": {\n            path: \"M30.44,1096.25l0.92,2.76l-0.08,6.39l0.24,0.37l2.22,0.95l4.39,0.22l4.65,-0.92l3.73,-2.88l2.0,-5.35l1.04,-4.84l2.48,-7.09l0.23,-4.85l1.83,-6.22l2.29,-4.33l5.69,1.46l1.9,-0.2l1.65,-1.07l0.8,0.08l7.15,4.43l0.98,0.15l0.89,-0.2l1.17,-0.93l0.16,-3.08l1.06,-0.69l3.83,-0.61l1.79,0.26l1.16,0.69l1.65,3.03l1.12,0.68l5.49,1.98l1.1,0.12l5.83,-1.35l1.0,0.11l0.33,0.22l-0.42,0.24l-3.27,0.56l-0.59,0.97l0.73,1.31l2.93,1.37l1.47,1.14l1.33,0.14l1.61,-0.68l1.31,-0.14l1.45,1.83l1.29,0.75l0.94,-0.3l1.0,-1.04l1.4,-2.24l2.16,-1.58l1.24,-0.1l3.68,2.8l0.79,0.9l0.47,1.37l0.96,6.18l5.55,7.34l4.96,17.51l24.53,7.29l6.04,0.02l2.09,-0.43l2.2,-0.84l0.91,-0.94l-0.22,-1.16l-3.96,-5.63l-0.29,-1.45l2.81,-7.77l2.38,-4.53l2.37,-3.17l1.59,-1.77l2.62,-2.1l2.13,-1.18l1.72,-0.31l41.61,1.01l1.61,0.52l3.98,2.19l2.69,6.26l3.08,5.78l0.13,3.53l0.75,1.56l3.8,4.77l0.92,1.65l0.5,3.39l0.64,1.17l1.95,0.86l2.64,0.31l0.54,0.23l0.67,1.19l0.84,0.16l2.71,-1.37l0.69,-0.66l0.62,-1.26l0.6,-0.22l1.12,0.22l1.22,0.7l1.12,1.98l0.88,2.52l1.5,1.67l4.16,2.51l-25.87,41.52l-13.05,22.06l0.84,4.96l-0.25,1.08l-0.77,1.13l-3.41,2.21l-9.04,3.69l-0.72,1.02l-0.52,2.22l-0.72,0.53l-0.93,-0.16l-3.24,-1.96l-1.6,-0.49l-7.15,0.63l-1.59,-0.33l-3.7,-0.08l-0.4,0.5l1.14,4.34l-0.06,2.56l-1.69,2.51l-1.18,3.46l0.36,4.35l-0.24,0.96l-2.14,3.5l-0.3,5.1l-0.49,1.23l-3.0,2.92l-2.88,3.7l-4.54,7.19l-3.69,2.55l-4.16,4.12l-2.73,1.94l-3.98,1.82l-1.2,1.32l-1.49,3.13l-1.52,0.36l-1.44,1.0l-1.72,1.85l-3.73,5.61l-2.23,2.18l-3.86,-0.99l-2.49,-2.44l-4.5,-0.66l-0.92,-0.76l-0.51,-1.15l0.1,-0.82l1.5,-2.85l0.11,-1.26l-0.46,-0.63l-5.98,-0.8l-1.14,-0.37l-1.95,-1.42l-3.31,0.59l-1.35,-0.56l-3.11,-3.23l-2.04,-1.13l-5.61,-0.39l-3.21,2.29l-2.4,2.91l-1.88,0.68l-2.28,-0.38l-0.74,-0.95l-2.65,-6.17l-0.1,-1.16l1.52,-3.42l-0.01,-1.84l-1.76,-2.17l-3.66,-3.37l-0.36,-1.35l0.26,-4.45l-0.18,-3.16l-2.1,-3.37l-0.46,-0.16l-10.62,3.51l-5.09,0.77l-7.64,-1.35l-2.66,0.29l0.14,-3.61l-1.49,-0.68l-0.48,0.29l-0.33,1.26l-0.59,0.48l-0.44,-0.06l-0.56,-2.31l-1.5,-2.7l0.53,-1.68l4.46,-0.54l0.96,-1.57l-0.04,-0.47l-3.69,0.8l-1.88,-0.0l-1.59,-0.25l-3.41,-1.57l-1.68,-0.17l-0.43,0.46l0.22,1.38l-1.64,0.13l-0.69,-0.34l0.06,-1.85l6.36,-5.04l0.74,-1.12l-0.49,-0.95l-1.26,-0.22l-2.52,0.46l-4.26,-5.02l-1.43,-0.22l0.82,-0.76l1.58,-0.6l0.3,-0.52l-0.63,-1.81l0.69,-0.75l3.44,-1.02l0.29,-0.38l0.0,-0.61l-0.86,-0.4l0.83,-0.49l0.45,-0.96l-0.19,-0.53l-1.71,-0.83l0.37,-1.29l2.93,-4.09l0.95,-2.61l0.17,-1.59l-1.32,-3.11l0.17,-0.69l0.89,-0.69l-0.25,-1.35l1.55,-0.47l0.7,-1.79l0.81,-7.01l2.34,-0.58l1.03,-1.88l-0.43,-0.53l-1.68,-0.1l-0.47,-0.64l-0.48,-2.56l-2.11,-2.55l-0.29,-2.1l0.99,-1.21l3.78,-1.58l0.18,-0.59l-1.25,-1.41l-1.54,0.31l-2.79,1.54l-3.64,-0.3l-1.8,0.27l-0.34,0.38l-0.06,1.18l-0.69,0.38l-2.35,0.09l-4.12,2.92l-2.47,2.63l-1.73,0.04l-1.68,-0.7l-0.48,0.08l0.56,1.72l-1.34,-0.34l-0.51,-1.21l0.45,-2.01l1.03,-2.46l1.52,-2.73l1.7,-2.08l3.7,-3.26l-0.04,-0.63l-0.61,-0.42l0.63,-0.72l0.96,-0.69l2.2,-0.84l0.17,-0.62l-1.18,-1.51l-0.46,-0.13l-1.75,0.69l-2.4,2.57l-2.09,-5.56l-0.81,-0.29l-0.4,0.46l0.43,2.87l-0.11,3.37l-0.67,3.34l-1.27,2.76l-1.82,2.3l-1.92,1.77l-3.66,2.25l0.82,-1.3l1.94,-1.77l0.0,-0.73l-0.44,-0.4l-1.16,0.15l-1.82,0.81l-0.33,-0.13l-0.28,-0.94l0.31,-0.87l0.66,-0.64l3.06,-0.44l0.3,-0.62l-1.68,-2.11l0.08,-2.26l-0.43,-0.41l-1.46,0.24l-1.67,3.3l-1.66,0.79l4.6,-7.79l0.59,-1.41l-0.19,-0.51l-0.52,0.16l-0.58,1.03l-2.85,3.11l-1.64,1.18l-0.98,2.02l-1.6,0.64l-1.75,-0.56l-1.87,0.01l-1.59,2.38l-0.32,-0.64l0.34,-1.9l-1.37,-3.0l0.26,-1.45l0.71,-0.43l2.29,0.25l0.43,-0.5l-0.47,-1.83l0.51,-0.76l1.19,-0.71l1.03,-1.09l-0.11,-0.63l-2.37,-1.16l-1.15,-2.23l0.91,-1.06l0.2,-3.53l1.59,-1.33l0.51,-1.11l-0.37,-0.55l-0.9,0.0l0.09,-1.07l-1.11,-1.32l0.46,-2.65l-0.66,-1.6l-2.62,-2.99l0.47,-2.63l-0.17,-0.45l-0.6,-0.3l-1.54,0.01l-0.43,-0.56l0.07,-1.56l0.66,-1.42l1.25,-0.39l0.27,-0.46l-0.23,-1.23l1.67,-2.86l0.0,-4.47l-0.65,-0.9l-1.39,-0.51l-0.27,-0.7l-0.0,-2.35l-0.47,-1.96l0.46,-1.36l-0.29,-0.48l-3.42,-0.86l-1.69,-0.89l-0.63,-1.01l0.51,-1.22l4.36,-2.16l0.23,-0.46l-0.41,-0.31l-2.78,0.18l-1.04,-0.36l-0.42,-1.13l0.26,-1.08l4.94,-5.8l1.68,-0.94l6.7,-0.92l2.02,0.7l1.4,4.79l1.23,2.33l1.46,1.94l1.06,0.97l0.55,0.11ZM32.09,1185.22l-0.46,-1.26l-2.63,-2.55l0.12,-1.16l1.26,-1.39l6.64,-5.07l2.3,-0.65l2.64,-1.74l2.99,0.32l1.22,-0.33l0.27,-0.49l-0.21,-1.83l1.18,-1.56l-0.36,-1.06l0.69,-0.38l1.01,-0.0l2.15,0.54l0.83,2.19l2.66,1.62l1.09,1.45l0.53,3.91l-0.1,4.36l-0.54,1.61l-3.16,0.7l-3.16,1.9l-3.48,-0.92l-1.7,0.66l-1.19,-1.71l-2.04,-0.44l-1.96,0.52l-1.66,1.15l-1.17,1.98l-1.0,-0.32l-2.13,-1.65l-0.65,0.32l0.0,1.29ZM50.9,1229.48l0.84,0.01l0.93,-0.64l0.22,0.28l0.86,-0.19l0.3,0.56l-0.19,0.78l-1.29,-0.67l-1.34,0.33l-0.32,-0.46ZM50.81,1188.98l-0.01,1.51l0.44,1.02l-0.81,2.94l-0.87,0.38l0.18,-1.35l-0.26,-0.48l-1.49,-0.3l-1.17,1.0l-0.83,1.67l-0.54,2.59l-0.49,0.64l-0.56,0.29l-1.63,-0.14l-1.49,1.71l-0.66,-0.02l-1.31,-1.24l-2.07,-0.38l-1.01,-3.6l0.14,-0.54l0.51,-0.29l1.89,0.27l1.19,-0.5l-0.24,-0.41l-1.39,-0.6l-2.68,-0.27l-0.41,-1.16l0.45,-1.46l1.0,-0.36l2.88,0.51l6.27,0.0l1.61,-0.49l2.28,-1.36l1.1,0.43ZM45.24,1223.62l-0.17,0.33l0.25,0.49l0.53,0.19l0.45,1.22l-1.44,-0.15l-0.95,-0.99l-1.01,-0.35l1.46,0.01l0.49,-0.39l-0.74,-1.31l0.05,-0.85l1.24,1.11l0.2,0.37l-0.36,0.32ZM39.79,1205.7l0.82,-0.69l1.09,-0.17l1.4,0.32l1.03,1.37l-2.79,2.35l0.03,-0.63l-0.46,-0.46l-0.6,0.29l-0.87,-0.36l0.17,-0.35l0.59,0.07l1.63,-0.72l0.22,-0.69l-0.97,-0.46l-0.96,0.34l-0.33,-0.19ZM0.64,1105.91l0.71,-0.72l-0.92,-1.0l1.41,-0.44l0.39,0.43l-0.11,1.06l0.3,0.43l1.34,-0.37l0.8,0.36l-0.56,0.84l0.37,0.64l0.71,0.23l-0.05,0.36l-0.53,0.56l-0.87,-0.25l-2.3,-1.8l-0.66,0.21l-0.04,-0.54Z\",\n            name: \"V\\xe4stra G\\xf6taland\"\n          },\n          \"SE-N\": {\n            path: \"M63.5,1235.91l2.51,-0.29l7.78,1.35l5.26,-0.8l10.36,-3.42l1.83,2.86l0.16,2.95l-0.26,4.5l0.45,1.69l5.34,5.38l0.01,1.41l-1.52,3.42l0.09,1.48l2.73,6.43l0.87,1.13l1.07,0.52l3.01,-0.17l1.94,-1.33l1.67,-2.22l2.87,-2.09l0.6,-0.1l5.41,0.76l4.0,3.93l1.64,0.71l1.24,0.01l2.18,-0.58l1.7,1.33l1.3,0.44l5.82,0.75l-0.25,1.55l-1.31,2.29l-0.1,1.22l0.59,1.34l1.34,1.11l4.45,0.64l2.37,2.37l3.6,0.96l-0.69,0.7l-0.69,2.19l0.23,2.91l0.57,1.36l2.92,4.45l0.98,0.16l1.53,-0.8l1.65,-2.08l2.29,-1.53l0.93,-1.74l10.06,-1.87l2.06,0.22l4.63,1.17l1.5,1.16l2.52,0.87l2.39,1.58l0.55,1.3l0.03,2.15l0.48,1.12l2.33,2.05l3.48,1.62l0.25,1.53l-1.33,2.73l-1.28,1.26l-2.29,1.28l-5.63,1.27l-2.67,1.23l-5.46,0.19l-4.69,1.16l-0.89,0.85l-0.88,1.58l-0.74,2.72l-0.13,9.84l-0.51,1.61l3.05,3.12l5.81,8.8l0.69,1.85l0.47,2.92l-0.29,3.44l0.32,1.86l1.08,2.6l1.39,1.62l-2.42,-0.29l-4.28,0.92l-4.9,2.42l-1.68,1.1l-4.36,3.84l-1.4,0.42l-0.88,-0.05l-2.62,-1.75l-9.41,-1.34l-2.29,-0.84l-0.15,-1.1l0.83,-2.49l-0.26,-1.54l-0.78,-1.04l-3.07,-1.67l-1.04,-1.0l1.39,-2.89l0.39,-2.22l-0.32,-2.02l-2.07,-4.42l-1.27,-4.39l-1.2,-1.33l-2.02,-0.43l-1.83,0.14l-2.68,0.79l-2.89,-0.24l-3.41,-3.04l-0.58,-1.09l-0.51,-2.3l-2.24,-1.92l-1.0,-1.46l-1.37,-3.53l0.37,-2.14l-0.34,-1.38l-4.33,-2.43l-0.36,-1.18l-1.98,-0.8l-1.26,-1.83l-0.79,-0.64l-2.31,-0.47l-1.77,-0.92l-2.41,-0.6l-1.13,-1.02l-0.7,-1.57l-0.2,-1.96l0.84,-1.49l-0.02,-0.8l-0.95,-2.91l-0.74,-0.85l-2.11,-0.8l-2.0,-1.28l-1.49,-1.6l-0.13,-1.65l-1.65,-1.35l1.12,-1.54l-0.36,-1.47l-1.93,-2.52l-0.43,-3.44l-0.36,-0.38l-2.56,0.0l2.4,-2.04l-0.12,-0.62l-0.88,-0.4l-2.77,-0.32l-1.53,-0.88l1.79,-0.2l1.01,-0.44l0.02,-0.72l-2.09,-0.74l-1.87,-0.03l1.51,-1.69l1.67,-0.6l0.37,-1.4l-0.29,-0.66l0.03,-1.27l-0.48,-0.92l-1.55,-1.34l-0.65,-1.14l-0.89,-0.36l-1.86,0.65l-0.8,-0.75l3.79,-3.94l-0.31,-0.65l-1.63,0.0l0.82,-1.03l-0.08,-1.43l-2.14,-3.66l-0.78,-0.57l-0.91,0.19l-2.56,2.75l-1.0,6.79l-0.45,0.9l-0.19,-0.7l-0.47,-0.29l-2.01,0.31l0.62,-2.11l-0.42,-0.51l-1.4,0.02l-0.8,-0.35l0.61,-0.85l-0.8,-4.43l0.23,-1.46l0.56,-0.95l1.83,-1.26l0.02,-0.68l-1.59,-0.99l0.65,-0.41l0.02,-0.66l-1.56,-1.1l0.81,-1.4l-0.3,-3.87Z\",\n            name: \"Halland\"\n          },\n          \"SE-M\": {\n            path: \"M131.13,1344.16l1.04,0.98l3.05,1.66l0.52,0.74l0.17,1.12l-0.86,3.25l0.79,1.3l2.34,0.72l9.36,1.33l2.48,1.7l1.23,0.12l1.81,-0.55l4.42,-3.89l1.6,-1.04l4.81,-2.37l4.01,-0.85l3.36,0.42l5.2,-0.0l28.38,-5.36l3.4,-1.33l1.58,-3.26l1.96,-1.4l1.62,0.22l1.52,1.19l1.25,0.32l7.92,-0.05l1.98,0.34l3.5,1.27l11.72,2.72l-5.27,6.29l-3.01,5.95l-0.24,1.08l0.2,0.91l1.81,3.37l0.68,2.8l0.82,1.03l3.39,1.38l2.31,0.33l0.85,0.79l1.26,2.69l0.51,2.13l0.18,2.12l-0.25,1.53l-1.84,3.96l-0.2,3.96l-1.13,0.66l-2.51,0.55l-1.26,0.84l-2.34,2.84l-2.54,2.43l-4.13,2.24l-1.72,3.73l-0.69,0.7l-2.84,1.3l-2.47,3.05l-1.84,4.06l-0.72,4.09l-0.15,5.38l0.77,1.76l1.2,1.18l2.56,1.55l0.75,1.05l0.14,2.99l0.62,1.3l2.26,2.07l2.76,3.61l0.58,1.59l-0.27,1.87l-0.88,1.13l-3.63,3.29l-2.05,1.38l-4.44,5.93l-1.16,0.72l-1.44,0.32l-4.3,-0.02l-1.98,-0.31l-1.9,-0.59l-5.43,-2.84l-1.87,-0.58l-2.23,-0.2l-3.84,1.3l-4.19,-0.59l-9.06,0.59l-1.45,0.38l-2.24,2.34l-0.86,0.35l-2.82,-0.41l-2.48,0.47l-6.38,3.46l-1.93,0.57l-4.61,0.31l-2.11,-0.25l-11.21,-3.3l-3.73,-0.11l-2.05,-0.48l-2.02,-1.27l-1.52,-0.34l-1.68,0.33l-1.75,1.13l-1.22,0.03l-1.85,-0.54l-2.64,1.05l-0.57,-0.03l-0.2,-1.2l1.89,-3.0l0.47,0.03l0.99,0.94l1.22,0.6l1.9,-0.04l1.7,-0.62l1.03,-1.04l-0.19,-1.72l1.48,0.53l0.16,-0.43l-0.67,-2.59l-3.25,-4.37l-0.7,-2.41l0.75,-2.81l1.86,-1.72l4.66,-2.7l1.64,-2.08l0.87,-2.76l-0.45,-2.03l-2.04,-1.95l-0.97,-1.47l-2.56,0.02l-0.5,-1.62l-0.4,-0.28l-1.61,0.07l-1.04,-0.32l-0.41,-0.74l1.14,-0.69l0.49,-2.12l-0.86,-4.3l-2.51,-2.1l-2.78,-1.18l-1.9,-1.91l-0.67,-1.39l-0.41,-2.61l-2.35,-1.92l-1.24,-4.54l-2.34,-1.66l-0.61,-0.74l-0.27,-1.75l-0.56,-1.26l-6.48,-6.83l-3.27,-5.56l-0.87,-3.88l-1.68,-2.92l-0.8,-2.2l-2.9,-1.87l12.0,4.11l1.32,1.69l2.7,1.67l2.25,-0.63l2.8,0.27l1.57,-0.22l1.31,-0.89l0.93,-1.44l0.42,-1.52l-0.27,-1.43l-3.25,-1.66l-3.59,-6.42l-5.91,-3.46l-1.31,-1.94l2.17,-3.13l3.62,-1.09l8.26,2.36l3.87,-1.23l1.37,-1.59Z\",\n            name: \"Sk\\xe5ne\"\n          },\n          \"SE-K\": {\n            path: \"M243.35,1383.41l0.15,-3.35l1.8,-3.87l0.31,-1.78l-0.75,-4.64l-1.3,-2.77l-0.71,-0.81l-1.16,-0.49l-1.77,-0.19l-3.08,-1.21l-0.62,-0.74l-1.15,-4.03l-1.47,-2.81l3.12,-6.54l5.46,-6.5l3.48,1.16l7.01,5.24l1.78,0.8l9.91,2.23l1.74,0.09l1.69,-0.43l2.29,-1.66l2.38,-2.63l1.25,-2.34l3.54,-0.28l3.22,-0.82l1.08,0.01l4.49,1.79l2.02,0.1l0.73,-0.38l1.56,-2.01l1.28,-0.34l3.31,0.41l1.84,-0.24l3.72,-3.02l2.56,-0.04l1.49,0.63l3.73,0.68l1.24,-0.29l1.42,-1.8l1.69,0.01l1.17,0.65l4.79,4.28l3.85,2.79l5.13,5.13l4.13,2.4l8.37,2.4l3.56,-0.01l1.83,-0.88l-1.75,7.15l-1.21,0.85l-1.06,2.54l-4.88,4.27l-3.97,6.95l-1.36,1.39l-0.83,-0.11l-2.73,-1.57l1.84,-2.94l0.53,-1.86l-0.18,-0.45l-1.71,-0.86l-3.31,1.06l-1.47,-0.04l-1.08,-1.52l-0.52,-0.12l-0.54,0.3l-0.6,-0.7l-1.44,-0.47l-1.55,-1.07l-1.52,0.9l-1.37,1.6l-0.99,0.62l-0.68,-0.84l0.95,-1.51l0.31,-1.19l-0.15,-0.42l-1.01,-0.56l-1.05,0.3l-2.54,1.7l-2.97,1.25l-0.53,0.72l-0.12,1.39l-3.02,-2.47l-1.19,-0.26l-1.11,0.23l-1.95,1.88l-0.65,1.79l-2.81,0.13l-0.95,-0.27l1.05,-0.27l0.35,-0.56l-1.89,-3.39l-0.64,-0.06l-1.41,1.59l-2.54,1.28l-2.68,0.39l-2.78,-1.48l-1.55,0.71l-2.39,0.0l-0.28,-0.18l-0.28,-1.67l-0.8,-0.78l-2.77,0.66l-0.33,0.55l0.64,1.85l-3.28,-1.19l-2.47,-0.38l-3.3,1.12l-3.95,-0.26l-0.38,0.42l0.08,1.29l-0.85,0.3l-2.24,-1.72l-1.44,-0.64l-3.68,0.02l-1.61,0.6l-1.23,1.47l-0.32,3.19l0.58,0.69l1.0,0.35l1.08,2.3l1.9,2.27l1.14,2.43l-1.38,0.81l-1.6,1.59l-0.73,-1.26l-1.36,0.0l-0.99,1.09l-1.39,-0.44l-2.27,-0.03l0.7,-0.64l0.0,-0.59l-1.02,-1.11l-0.25,-1.82l-0.68,-0.29l-1.17,1.11l-0.56,-0.59l-0.0,-0.47l-0.97,0.01ZM326.75,1386.94l0.39,-0.14l0.65,-0.35l-0.77,0.99l-0.27,-0.5ZM324.9,1376.76l0.99,0.15l-0.92,1.54l-0.58,-0.81l-1.85,-1.3l0.88,-0.2l1.49,0.62ZM319.08,1377.97l0.82,0.35l2.14,0.09l-1.33,0.52l-0.0,2.73l-0.65,-0.07l-2.03,-1.3l-0.47,-1.11l0.69,-1.14l0.62,-0.28l0.23,0.2ZM315.88,1378.93l-1.01,0.42l-0.63,-0.73l1.36,-1.69l0.57,-0.25l-0.28,2.26ZM311.19,1378.86l-0.16,0.29l-2.01,-0.2l-0.26,-0.38l0.36,-1.08l0.57,-0.3l1.42,0.32l0.33,0.4l-0.25,0.94ZM305.52,1379.24l-0.58,0.35l-1.16,-0.3l-0.22,-0.49l0.96,-0.74l1.7,-0.53l-0.7,1.7ZM300.53,1374.47l0.0,-0.09l0.03,0.02l-0.03,0.07ZM271.42,1377.85l0.08,-0.01l-0.03,0.06l-0.05,-0.04ZM262.46,1387.76l0.53,0.25l-0.28,0.68l-0.19,-0.24l-0.06,-0.69Z\",\n            name: \"Blekinge\"\n          },\n          \"SE-I\": {\n            path: \"M560.65,1196.09l0.19,1.07l1.18,0.61l2.42,-0.57l2.11,0.02l1.71,0.91l-1.63,0.38l-0.82,1.08l-3.28,-0.78l-1.6,0.67l-1.34,1.05l-3.07,1.0l-1.5,1.75l0.08,0.59l1.27,1.06l-0.03,1.21l-2.04,3.01l-1.61,-0.48l-1.71,-1.4l-2.26,-3.51l0.15,-0.92l1.91,-2.18l1.25,-2.82l0.68,-0.68l0.95,-0.26l2.26,0.06l1.17,-0.8l2.71,0.37l0.87,-0.43ZM565.47,1159.44l-2.58,0.68l-2.2,-1.05l-1.48,-3.3l1.65,0.0l1.82,0.88l3.8,0.69l1.17,0.75l-2.17,1.36ZM502.26,1291.76l-1.1,0.0l-0.4,0.4l0.0,0.67l0.66,0.71l-2.13,1.75l-0.72,2.07l-0.74,0.53l-6.35,2.53l-2.17,0.29l-1.57,-0.72l4.16,-5.86l0.24,-1.09l-0.34,-2.05l0.66,-0.63l2.42,-0.71l1.13,-0.8l1.8,-5.14l-0.08,-0.46l-0.46,-0.07l-1.62,0.81l-2.81,2.27l-1.07,-0.35l1.65,-2.54l0.15,-1.23l-0.75,-0.79l0.75,-1.62l-0.21,-0.58l-2.7,-1.01l-1.85,-8.32l-3.93,-2.72l0.1,-1.55l0.9,-1.69l2.46,-1.55l1.02,-1.94l0.39,-2.11l-0.31,-1.45l0.85,-1.42l-0.18,-0.59l-1.25,-0.99l-0.84,-1.26l-0.05,-1.74l-1.65,-3.79l-0.5,-2.18l-0.1,-2.16l1.06,-3.5l2.2,-2.83l11.17,-9.34l9.38,-12.82l2.39,-2.22l3.28,-1.2l2.93,0.77l1.2,-0.53l2.34,-5.05l2.4,-2.62l1.43,-0.68l1.43,-0.15l1.09,0.43l0.9,1.04l0.77,1.69l-0.46,1.45l0.15,0.79l0.71,0.66l0.67,1.95l1.37,1.45l0.68,-0.2l0.47,-2.4l2.28,-2.28l0.5,-2.05l-0.88,-1.6l4.31,-0.72l-0.99,1.67l0.11,0.53l1.56,1.01l1.66,-0.07l0.38,-0.41l-0.02,-1.06l0.79,-0.42l1.26,-0.35l1.54,0.09l-0.22,0.57l0.87,2.17l0.73,0.93l1.77,0.98l2.05,2.96l-4.4,0.4l-2.09,1.72l-0.25,2.7l-1.11,-0.76l-0.94,0.16l-0.35,1.42l-1.06,1.95l0.0,1.13l0.4,0.82l-4.51,0.49l-2.96,-1.33l-1.14,0.25l-0.38,0.98l0.29,1.8l-0.9,3.25l-2.17,4.77l-0.17,1.04l0.63,0.67l2.48,0.64l-0.91,2.52l-0.34,2.91l-1.92,3.95l0.93,1.24l-0.42,1.3l0.3,1.19l1.08,0.64l0.59,-0.0l-0.53,1.38l0.25,0.52l2.66,0.88l2.79,0.48l0.64,-0.47l0.28,-0.81l1.63,0.83l1.03,1.84l0.24,1.22l-0.19,0.88l-0.85,0.38l-1.94,0.0l-1.71,-0.6l-1.19,1.13l-2.65,0.63l-2.2,1.19l-1.95,1.62l-1.62,1.86l-2.61,1.87l-0.99,1.67l0.47,1.87l0.76,0.49l1.78,-0.02l0.18,2.56l-2.13,0.83l-0.18,0.38l-5.81,1.07l-1.84,0.91l-0.22,1.09l0.39,0.39l-9.23,3.89l-1.82,1.19l-1.41,1.52l0.29,0.67l3.32,0.0l-5.24,2.28l-1.28,1.64l-0.47,5.02l0.79,1.48l1.17,0.81Z\",\n            name: \"Gotland\"\n          },\n          \"SE-H\": {\n            path: \"M397.74,1309.11l-3.21,1.48l-1.09,1.58l-0.84,4.8l-3.95,9.9l-1.06,4.97l-1.15,1.6l-1.53,0.8l-0.46,0.96l-0.38,2.72l0.47,0.73l-0.9,1.92l-0.36,2.74l-2.98,6.71l-0.45,1.9l-0.19,3.82l-0.98,1.43l-0.73,2.43l-3.38,6.33l-1.16,1.11l-1.4,0.76l-1.21,0.05l-0.87,-0.88l0.03,-3.82l-0.91,-2.64l0.55,-2.07l-0.1,-6.42l0.55,-1.68l-1.53,-5.34l0.5,-8.22l1.35,-3.83l1.55,-2.19l0.75,-2.88l11.39,-22.66l1.03,-0.88l5.28,-0.88l1.27,-1.45l1.15,-3.65l3.06,-5.98l3.55,-5.4l2.92,-5.77l1.46,-8.14l2.01,-0.99l0.91,-0.91l0.45,-0.96l0.5,-7.17l1.45,-1.23l2.05,-2.59l1.05,-0.74l1.53,-0.46l0.47,1.19l0.82,0.41l0.92,-0.32l0.37,-0.55l1.25,2.3l-1.65,0.23l-1.46,1.2l-2.36,3.43l1.47,3.18l0.11,1.3l-1.04,2.4l-0.05,1.16l-1.47,0.78l-0.87,3.24l-2.87,4.33l-0.86,3.9l-1.03,0.96l-3.01,1.34l-0.17,0.53l0.42,0.84l1.45,1.14l-1.76,1.62l-1.94,2.69l0.83,3.53l-0.09,1.65l-0.99,0.82l-0.71,1.19l-1.11,5.08l-0.68,1.53ZM389.85,1209.83l0.3,-0.46l0.77,-0.03l1.15,1.38l0.9,0.21l0.35,1.49l-1.23,0.4l-0.73,-1.81l-1.51,-1.18ZM370.3,1313.9l-1.9,0.14l-1.46,0.89l-0.96,0.18l-0.58,0.7l1.39,3.47l0.09,4.69l-0.45,1.22l-1.75,0.82l-0.96,-0.07l-1.54,-1.02l-1.18,0.13l-2.35,1.1l-0.77,0.93l-1.76,3.33l-0.54,5.87l-0.3,0.67l-2.02,0.36l-0.87,2.82l-3.25,5.04l-1.56,3.52l-1.92,7.8l-1.48,0.4l-0.76,0.56l-3.25,-0.01l-8.11,-2.33l-3.96,-2.29l-5.11,-5.11l-3.88,-2.81l-4.81,-4.3l-1.35,-0.77l-2.42,0.04l-1.79,1.95l-3.99,-0.62l-2.79,-0.82l-1.76,0.26l-2.0,1.52l-0.25,-0.46l0.89,-3.58l0.96,-1.36l1.46,-1.13l0.36,-1.3l0.67,-10.51l-0.43,-3.26l-1.38,-4.43l0.1,-0.84l0.34,-0.47l1.63,-0.65l2.22,-1.47l4.25,-0.23l1.84,-0.88l0.68,-0.79l0.31,-1.08l-0.1,-1.39l-1.97,-5.41l-0.04,-0.86l0.34,-0.6l0.71,-0.59l1.72,-0.52l1.13,0.14l4.95,2.03l1.93,-0.6l6.22,-0.04l2.12,-0.53l1.65,-1.37l0.86,-1.84l-0.0,-1.66l-2.81,-6.12l-5.1,-6.08l-2.96,-2.43l-1.13,-2.32l-4.53,-1.81l-0.87,-0.67l-0.56,-3.5l-2.18,-1.83l-0.46,-2.93l-2.72,-3.37l-0.56,-2.29l0.13,-0.77l1.66,-1.76l0.39,-1.64l-0.39,-2.97l0.76,-2.89l-0.35,-3.5l0.27,-1.16l0.52,-0.86l1.11,-0.5l0.8,0.26l1.89,1.89l1.01,0.01l0.68,-0.54l0.63,-1.11l0.77,-2.68l1.38,-1.9l0.22,-1.24l-0.54,-1.92l-2.15,-0.92l-0.78,-0.93l3.63,-4.84l-0.48,-0.89l-1.83,-0.75l-1.49,-2.0l-2.58,-1.31l-2.44,-0.54l-5.14,-3.46l-1.21,-1.36l1.07,-3.54l1.82,-1.06l4.36,-1.55l1.43,-2.16l4.11,-4.51l2.3,-1.03l3.84,-0.46l2.55,0.35l4.3,2.09l4.84,0.85l2.11,0.93l1.66,0.1l1.64,-0.48l1.86,-1.22l2.71,-2.83l0.84,-1.34l0.31,-1.63l-0.92,-4.3l0.13,-0.7l1.28,-1.65l0.8,-1.66l-0.47,-1.67l-2.92,-3.61l-0.12,-0.72l0.64,-2.12l-0.87,-1.76l4.78,0.6l2.22,-0.13l2.04,0.3l1.0,-0.21l1.82,-2.97l1.18,-0.63l5.68,-1.48l4.38,0.41l2.42,-0.54l2.51,0.01l1.45,0.65l2.78,1.99l3.41,-0.2l1.74,0.49l1.02,1.43l0.96,4.6l1.77,3.39l0.86,0.77l2.66,0.34l1.27,2.51l0.53,0.11l1.45,-1.01l0.41,2.46l2.34,2.43l-2.79,-1.3l-0.45,0.06l-0.1,0.45l0.6,1.48l2.0,1.55l0.17,0.77l-0.51,0.75l-0.85,-0.01l-1.07,-0.56l-0.77,-0.69l-1.3,-2.4l-0.75,-0.44l-0.57,0.32l-0.22,1.9l-0.4,0.46l-3.41,-0.26l0.12,-1.38l-0.44,-1.31l1.93,0.73l0.54,-0.09l-0.06,-0.54l-8.81,-7.65l-0.94,-0.04l-0.76,0.63l-0.36,1.05l0.75,1.72l2.06,2.11l3.33,1.22l-1.01,1.42l0.41,0.93l-0.18,1.38l-0.33,0.3l-2.4,-1.64l-3.06,-0.9l-0.44,0.15l0.0,0.46l0.66,1.21l-1.62,-0.55l-0.51,0.39l0.14,1.03l4.04,3.54l-6.34,-4.18l-0.46,0.02l-0.14,0.44l0.55,1.75l0.91,1.33l2.4,1.86l3.81,2.1l2.87,2.87l1.46,2.23l1.69,0.69l2.84,2.54l-0.69,0.91l2.8,0.6l1.2,1.49l-0.83,0.0l-0.4,0.4l0.24,0.92l-3.44,-0.28l-4.13,-1.67l-0.46,0.08l0.41,1.38l1.82,1.8l0.57,1.38l-0.08,0.43l-0.5,0.08l-1.37,-0.47l-0.44,0.12l-0.04,0.45l0.81,1.19l1.52,0.37l0.8,1.41l-4.11,3.12l-0.14,-2.83l-0.66,-0.33l-0.9,0.53l-1.52,-0.52l-0.08,0.5l1.26,1.78l-1.1,1.02l-0.21,1.03l1.48,0.94l-1.46,0.0l-0.4,0.4l0.0,0.61l0.39,0.4l5.22,0.14l2.28,0.71l3.76,7.48l-1.32,-0.29l-0.44,0.58l0.74,1.39l-2.02,0.76l-0.53,1.39l0.52,1.45l1.45,0.92l-1.42,0.39l-0.96,0.8l0.15,1.59l-3.44,-0.56l-2.14,0.73l-0.87,2.18l0.17,0.5l1.98,1.12l-1.31,1.48l0.7,0.95l-4.72,2.16l-1.28,2.04l1.56,3.26l-1.81,1.48l-0.54,2.5l0.5,2.71l1.11,2.26l2.0,2.73l1.59,1.09l0.79,-0.08l0.5,0.6l0.97,1.91l-0.69,0.37l-0.18,0.49l1.68,2.99l-2.32,-0.63l0.07,-0.83l-0.97,-0.57l-0.63,0.2l-0.7,0.81l-0.46,1.38l-3.23,-1.03l-0.86,-0.03l-0.34,0.64l1.09,1.33l1.13,0.76l-1.26,0.14l-0.91,0.92l-0.44,1.78l0.38,2.35l1.84,2.52l-2.13,3.65l0.23,4.26l-2.1,5.7l-0.02,1.11l0.55,1.08l0.86,0.57ZM370.77,1314.0l1.72,-1.11l0.79,-0.1l-0.32,1.66l-0.52,0.18l-1.67,-0.64ZM380.08,1211.78l7.12,6.24l1.77,1.26l-4.02,-2.01l-4.87,-5.49ZM386.36,1235.27l0.37,-0.81l0.83,-0.46l1.26,0.18l0.45,-0.32l0.23,-1.82l1.16,0.29l-0.04,1.09l-1.59,2.36l-0.3,0.11l-1.37,-0.99l-0.99,0.37ZM389.41,1215.68l-1.18,-0.92l-1.56,-1.02l0.53,-0.29l2.36,0.25l0.62,0.64l-0.76,1.33ZM388.68,1242.22l0.23,0.11l0.63,0.53l-0.72,-0.37l-0.14,-0.27ZM381.52,1281.36l1.04,0.59l-1.02,0.17l-0.02,-0.76ZM379.55,1275.73l0.2,1.0l-1.62,0.86l-0.29,-0.24l-0.18,-0.61l0.56,-0.93l1.33,-0.08Z\",\n            name: \"Kalmar\"\n          },\n          \"SE-G\": {\n            path: \"M310.69,1272.3l2.02,1.63l0.1,2.24l0.57,1.42l1.12,0.85l4.34,1.7l0.47,1.47l0.58,0.76l2.97,2.44l5.02,5.96l2.26,4.69l0.44,1.2l-0.02,1.36l-0.64,1.38l-1.51,1.25l-1.82,0.42l-6.17,0.03l-1.8,0.59l-4.71,-1.98l-1.37,-0.19l-2.14,0.61l-1.0,0.84l-0.48,0.98l0.05,1.05l1.65,4.04l0.42,2.52l-0.19,0.77l-0.49,0.59l-1.54,0.73l-4.35,0.26l-2.3,1.51l-1.66,0.66l-0.73,0.97l-0.11,1.17l1.39,4.48l0.41,3.12l-0.67,10.42l-0.23,0.9l-1.33,0.99l-1.15,1.61l-0.98,3.29l0.44,1.63l-1.09,0.96l-1.5,0.18l-3.38,-0.41l-1.54,0.39l-2.14,2.35l-1.67,-0.08l-4.63,-1.81l-8.16,1.12l-0.8,0.65l-0.82,1.95l-2.32,2.57l-2.13,1.54l-1.3,0.32l-1.58,-0.08l-9.77,-2.19l-1.64,-0.73l-7.04,-5.26l-3.88,-1.3l-12.39,-2.88l-3.53,-1.27l-2.12,-0.36l-7.82,0.06l-0.96,-0.21l-1.5,-1.18l-1.26,-0.44l-1.13,0.15l-2.2,1.56l-0.63,0.85l-0.87,2.32l-3.11,1.21l-28.32,5.34l-4.91,-0.0l-1.86,-2.12l-1.02,-2.43l-0.3,-1.64l0.29,-3.55l-0.49,-2.99l-0.77,-2.05l-5.88,-8.9l-2.89,-2.81l0.5,-1.38l0.13,-9.82l0.66,-2.44l1.14,-1.9l3.68,-1.11l6.59,-0.35l2.7,-1.23l5.63,-1.27l1.45,-0.64l2.51,-2.14l1.15,-1.92l0.39,-1.38l-0.27,-1.65l3.69,-4.34l0.65,-0.24l1.06,-0.2l1.81,0.91l2.77,2.08l1.15,0.22l0.77,-0.21l5.35,-3.36l4.02,-0.5l1.57,-0.58l1.95,-0.0l5.08,2.69l1.98,1.47l1.42,2.21l2.71,6.31l0.81,1.03l1.16,0.88l2.15,0.86l2.31,0.26l1.16,-0.59l2.49,-3.27l1.55,-2.94l0.22,-1.89l-0.49,-2.7l-1.77,-1.39l-0.61,-1.62l0.87,-3.64l0.44,-5.18l0.55,-1.67l1.39,-1.21l1.76,-0.65l7.88,-1.31l11.63,-4.23l3.41,-0.75l2.57,-0.0l5.56,2.55l0.64,0.66l0.71,2.11l1.12,1.19l1.69,0.83l2.24,0.24l1.39,-0.18l1.45,-0.73l3.67,-2.79l1.89,-0.97l1.49,-0.28l2.6,0.5l0.66,-0.16l0.33,-1.23l-1.0,-3.12l4.56,0.71l9.3,-0.42l3.05,0.28l9.1,2.36Z\",\n            name: \"Kronoberg\"\n          },\n          \"SE-F\": {\n            path: \"M231.39,1292.76l0.42,3.06l-0.19,0.94l-1.43,2.7l-2.61,3.32l-0.55,0.2l-1.9,-0.23l-2.05,-0.82l-1.61,-1.55l-2.7,-6.29l-1.59,-2.45l-2.12,-1.58l-5.24,-2.77l-2.3,-0.03l-1.68,0.61l-4.03,0.5l-6.0,3.54l-0.64,-0.12l-2.73,-2.04l-2.02,-1.03l-1.48,0.19l-1.01,0.43l-3.68,4.33l-3.34,-1.56l-2.13,-1.89l-0.29,-0.71l-0.05,-2.25l-0.74,-1.63l-1.18,-0.95l-3.97,-1.66l-2.09,-1.38l-6.46,-1.24l-10.36,1.94l-0.51,0.44l-0.65,1.47l-1.68,1.01l-2.22,2.56l-1.19,0.63l-0.57,-0.17l-2.48,-4.07l-0.72,-2.4l0.02,-1.3l0.6,-1.95l3.55,-3.41l3.76,-5.65l1.63,-1.74l1.26,-0.87l1.72,-0.51l1.62,-3.31l1.04,-1.12l3.86,-1.73l2.8,-1.98l4.2,-4.15l3.73,-2.59l4.61,-7.28l2.84,-3.66l3.05,-2.97l0.63,-1.61l0.28,-5.02l2.05,-3.26l0.34,-1.24l-0.37,-4.3l1.11,-3.27l1.76,-2.71l0.07,-2.8l-1.03,-3.96l4.79,0.4l6.98,-0.64l1.35,0.4l3.34,2.01l1.39,0.21l0.7,-0.23l0.56,-0.7l0.97,-2.95l3.78,-1.4l0.78,-0.65l4.35,-1.58l2.17,-1.16l1.57,-1.29l0.84,-1.24l0.33,-1.35l-0.06,-1.36l-0.85,-3.37l12.65,-21.39l3.57,6.37l2.08,2.01l5.85,2.35l16.15,1.68l2.81,-0.23l1.55,-0.53l1.18,-0.98l1.19,-3.14l4.33,-1.0l2.45,4.25l1.47,5.24l2.4,2.81l0.45,1.05l-0.81,0.83l-2.18,0.57l-0.83,0.64l-1.43,3.8l0.49,2.05l-0.48,1.19l-0.01,1.07l0.55,1.28l3.26,4.39l0.49,2.39l1.22,3.37l3.28,5.77l1.49,1.32l1.79,0.52l16.59,1.15l1.35,1.51l5.19,3.49l1.0,0.46l1.62,0.17l1.82,0.87l1.07,0.81l1.39,1.92l1.55,0.48l-3.29,3.95l-0.34,0.91l0.49,1.21l2.3,1.04l0.59,0.75l-0.05,1.74l-1.39,1.94l-0.81,2.78l-0.51,0.87l-0.73,0.26l-2.26,-2.09l-1.51,0.02l-0.99,0.68l-0.96,2.4l0.35,3.53l-0.76,2.94l0.39,2.9l-0.27,1.3l-1.48,1.43l-0.42,1.59l0.69,2.68l2.7,3.34l0.3,2.2l-8.68,-2.25l-3.16,-0.29l-9.26,0.42l-4.66,-0.72l-0.68,0.39l-0.13,0.45l1.05,3.64l-2.69,-0.46l-1.88,0.34l-2.04,1.05l-3.61,2.75l-1.35,0.68l-1.05,0.12l-2.12,-0.22l-1.32,-0.65l-0.93,-0.95l-0.69,-2.06l-0.86,-0.96l-5.83,-2.7l-2.96,-0.02l-3.48,0.76l-11.67,4.25l-7.88,1.31l-1.99,0.77l-1.53,1.33l-0.73,2.09l-0.44,5.19l-0.87,3.82l0.76,2.01l1.7,1.3Z\",\n            name: \"J\\xf6nk\\xf6ping\"\n          },\n          \"SE-E\": {\n            path: \"M410.87,1168.7l0.1,-0.12l0.8,-0.18l-0.26,0.11l-0.63,0.18ZM408.13,1146.13l-1.01,-0.1l-0.27,-0.7l0.35,-0.21l1.61,0.54l-0.68,0.47ZM406.79,1152.69l-0.12,-0.34l0.91,-0.42l-0.31,0.42l-0.48,0.34ZM405.02,1143.8l-1.5,-0.39l-0.84,-0.93l0.59,-0.07l1.75,1.39ZM404.1,1174.75l0.57,0.37l0.42,-0.28l0.38,1.15l-0.36,0.32l-1.33,-0.53l0.0,-0.76l0.32,-0.28ZM335.52,1096.41l11.02,6.41l4.01,3.51l10.95,6.6l2.72,3.85l3.4,3.31l1.28,3.57l2.37,2.11l1.05,0.39l12.01,0.33l3.87,0.87l3.13,1.48l2.44,2.19l-36.35,-3.38l-0.44,0.4l0.0,0.74l1.64,1.23l0.21,0.61l-0.28,0.53l-0.76,0.17l-2.95,-0.49l-1.26,0.29l-0.31,1.01l0.55,0.37l1.5,-0.51l0.41,0.16l0.34,0.88l0.56,0.21l1.21,-0.64l2.91,1.15l1.77,-0.89l1.01,-1.15l0.66,-0.22l2.2,1.7l-0.02,1.39l0.36,1.01l1.17,0.61l1.05,-0.14l0.76,-0.61l1.29,-4.2l0.56,-0.63l5.18,2.31l7.98,-0.22l1.31,0.4l2.21,1.67l2.81,0.35l1.13,0.86l0.47,0.02l0.16,-0.44l-0.29,-1.44l2.15,0.49l-0.49,1.58l0.43,1.59l1.37,1.26l1.14,0.23l-0.44,0.47l0.0,0.56l0.4,0.4l1.46,0.0l-0.6,1.04l0.12,0.58l0.97,0.56l2.53,0.57l3.14,2.27l-0.94,0.44l-3.34,0.04l-1.63,0.58l-0.23,0.53l0.48,1.14l-1.22,0.87l-4.41,1.14l-1.1,1.11l-1.74,-0.73l-8.29,-1.2l-3.98,-1.94l-6.7,-1.77l-2.22,0.87l-0.24,0.43l0.35,0.34l2.37,0.26l14.34,5.95l2.28,0.22l0.71,0.4l0.54,1.07l-0.35,2.41l0.38,1.1l1.1,0.17l2.14,-1.09l0.58,0.61l0.19,1.73l-9.25,-1.34l-0.42,0.22l0.08,0.46l1.12,1.06l3.36,2.25l-0.04,1.67l1.09,0.59l0.95,-0.09l0.58,-0.49l-0.15,-1.51l4.22,-0.43l-0.43,1.16l-1.63,-0.09l-0.35,0.32l-0.35,1.8l-3.02,0.59l-0.35,0.4l0.0,0.68l0.33,0.39l1.5,0.28l4.41,2.08l-0.41,0.29l-0.03,0.68l1.53,1.53l0.66,2.54l-0.11,1.09l-1.57,-0.38l-0.73,0.76l0.3,0.76l0.97,0.92l-1.78,2.5l-3.45,-1.74l-4.08,-3.55l-3.03,-1.74l-0.48,0.06l-0.06,0.48l1.1,1.84l2.64,1.98l0.59,1.03l-1.08,0.02l-0.36,0.64l4.9,5.8l-0.95,0.34l-0.26,0.44l0.17,1.14l-0.23,0.46l-1.42,0.03l-0.44,0.26l0.17,0.48l3.6,1.81l0.78,1.16l-0.64,0.62l-1.38,-0.98l-1.97,1.0l-0.49,0.76l-1.25,-2.61l-1.13,-0.53l-0.44,0.11l-1.0,1.44l0.45,1.42l0.95,1.5l-1.54,-2.28l-1.48,-5.94l-1.24,-1.75l-1.18,-0.59l-4.28,0.14l-2.56,-1.9l-1.73,-0.76l-2.74,-0.02l-2.32,0.53l-4.36,-0.41l-1.81,0.27l-4.16,1.26l-1.36,0.72l-1.08,1.35l-0.65,1.54l-0.59,0.14l-2.09,-0.3l-2.12,0.13l-3.98,-0.7l-1.21,0.12l-0.59,0.88l0.97,1.66l-0.63,1.98l0.14,1.06l3.05,3.88l0.32,1.04l-2.01,3.12l-0.21,0.97l0.92,4.43l-0.23,1.21l-0.73,1.17l-2.65,2.77l-1.7,1.1l-1.27,0.38l-1.52,-0.09l-2.05,-0.92l-4.82,-0.84l-4.35,-2.1l-2.7,-0.36l-4.01,0.48l-2.69,1.24l-4.2,4.61l-1.32,2.04l-5.68,2.14l-0.71,0.75l-1.06,3.53l-16.41,-1.14l-1.42,-0.39l-1.31,-1.15l-1.43,-2.13l-2.54,-5.4l-0.95,-3.87l-3.32,-4.47l-0.44,-1.05l0.52,-2.1l-0.5,-1.84l1.31,-3.5l2.73,-0.95l0.86,-0.66l0.36,-0.88l-0.61,-1.5l-2.33,-2.68l-1.99,-6.45l-2.18,-3.35l-0.85,-0.23l-4.37,1.18l-0.63,0.75l-0.74,2.54l-0.93,0.8l-1.33,0.46l-2.65,0.22l-16.06,-1.67l-5.49,-2.19l-1.91,-1.82l-3.77,-6.72l25.92,-41.6l3.24,-2.35l2.25,-1.11l8.04,-1.85l3.59,-3.1l5.31,-6.08l1.97,-1.66l7.29,-3.71l2.02,-0.4l1.7,0.09l2.53,0.71l1.96,0.01l1.99,-0.43l7.59,-2.87l1.98,-1.2l1.78,-2.24l0.46,-1.79l-0.31,-2.44l0.49,-0.72l1.36,-0.83l6.55,-1.77l3.48,1.47l1.02,-0.13l1.13,-0.66l1.19,-2.35l1.77,-0.89l1.95,0.2l2.36,1.81ZM403.66,1169.3l0.65,-0.91l0.08,0.05l0.0,0.39l-0.73,0.47ZM398.39,1157.56l-0.45,0.14l-0.51,0.89l0.31,0.94l1.05,1.05l1.7,1.24l2.55,-0.25l-0.25,0.34l-1.37,0.79l-1.01,0.04l-2.34,-0.97l-1.72,-2.82l-0.32,-1.42l-0.66,-0.76l0.19,-0.51l1.02,-0.43l1.79,-0.58l1.42,-0.06l-0.61,1.0l-1.66,0.36l0.13,0.48l0.72,0.54ZM400.41,1167.12l-0.92,-0.17l-0.67,-1.34l-0.21,-1.05l0.46,-0.34l1.81,0.86l0.07,1.47l-0.54,0.58ZM396.85,1184.94l0.02,0.05l-0.98,-0.32l-0.66,-0.67l0.21,-0.47l1.29,-0.47l0.25,0.64l-0.66,0.77l0.52,0.47Z\",\n            name: \"\\xd6sterg\\xf6tland\"\n          },\n          \"SE-D\": {\n            path: \"M453.18,1112.79l1.54,0.83l1.98,1.37l-2.27,-0.95l-1.25,-1.25ZM360.53,1050.06l0.61,-0.33l38.13,-5.63l3.14,0.04l4.94,-2.29l7.0,1.07l5.3,-0.58l1.4,0.2l2.01,0.71l2.64,1.51l1.78,2.8l2.16,1.66l4.29,1.69l3.74,2.6l2.52,3.82l-0.36,1.55l-0.95,0.43l-3.68,0.37l-1.1,0.41l-0.77,0.82l-0.89,1.4l-0.31,2.37l0.1,2.71l-0.36,1.86l-3.18,2.68l-0.29,2.03l0.94,3.92l2.66,5.11l1.19,7.84l0.89,2.36l1.44,2.23l0.84,0.45l8.85,0.52l2.12,0.88l1.6,1.33l-0.35,1.05l1.15,1.03l1.07,0.39l-0.58,0.94l0.15,0.62l1.41,0.78l-0.44,1.16l-1.06,0.65l-4.15,-0.78l-0.4,0.59l0.67,1.24l1.0,1.02l2.01,1.25l-1.04,0.0l-0.37,0.25l0.12,0.46l-0.57,-0.02l-5.05,-3.14l-2.31,-0.94l-0.55,0.37l0.0,0.68l1.26,0.95l0.21,0.85l-1.29,5.39l0.18,0.39l2.01,1.2l-1.17,0.49l-8.21,-1.48l-0.42,0.19l0.04,0.46l2.27,2.67l0.28,1.15l-1.02,1.04l-3.4,-0.12l-2.07,0.36l-0.33,0.39l0.0,1.41l-7.29,-0.12l-1.94,-0.52l-2.17,-2.39l-0.95,-0.35l-1.03,0.21l-3.51,1.49l0.23,0.41l0.93,0.41l2.13,0.24l0.48,0.5l-0.35,1.33l-0.93,0.93l0.07,0.67l1.62,0.77l2.82,-0.29l1.01,0.22l-3.33,3.45l-1.34,-0.08l-4.06,-2.0l-2.45,-0.35l-1.79,1.74l0.28,0.67l3.14,0.13l1.05,0.69l0.7,1.16l-0.95,0.01l-5.98,1.58l-9.49,-0.88l-3.09,-2.94l-3.38,-1.6l-4.03,-0.9l-11.98,-0.33l-0.73,-0.28l-2.14,-1.92l-1.3,-3.61l-3.4,-3.3l-2.78,-3.91l-11.06,-6.69l-4.02,-3.51l-10.99,-6.39l-2.4,-1.85l-2.46,-0.32l-1.53,0.63l-1.14,1.07l-0.87,1.88l-1.29,0.46l-3.47,-1.46l-4.24,-3.03l-1.23,-1.87l0.87,-1.57l3.11,-2.76l0.83,-1.19l1.78,-0.95l3.34,-1.01l1.08,-0.77l0.45,-0.84l-0.15,-1.28l-2.2,-4.95l-0.16,-0.68l0.35,-0.68l5.24,-1.53l3.01,-2.12l0.51,-1.26l0.1,-2.57l4.5,-6.35l1.94,-1.46l2.7,-0.86l2.85,-0.06l4.3,0.94l1.68,0.06l2.16,-0.29l4.89,-1.47l2.36,-1.43l0.59,-1.35l-0.43,-0.84l-1.56,-0.79l-0.94,-1.09l-0.3,-1.51l0.28,-0.55ZM439.65,1122.24l0.7,-0.32l0.03,-1.12l-1.34,-0.88l0.74,-0.48l0.61,0.09l1.1,1.09l-1.05,2.09l-0.19,0.15l-0.59,-0.62ZM441.68,1120.54l0.05,-1.25l1.24,0.44l0.03,0.66l-1.32,0.16ZM442.16,1123.89l-0.84,0.39l0.18,-1.31l0.54,0.39l0.12,0.52Z\",\n            name: \"S\\xf6dermanland\"\n          },\n          \"SE-C\": {\n            path: \"M520.41,966.01l-0.26,-0.15l-0.63,0.58l-0.53,-0.3l0.5,-0.74l0.92,0.61ZM516.48,972.87l1.25,-0.3l2.03,1.11l-1.61,0.61l-1.67,-1.43ZM448.54,1029.37l-0.76,1.26l-0.2,3.09l0.45,1.19l1.59,1.89l-0.21,1.34l-3.26,4.48l-0.5,1.18l-0.44,4.56l-0.41,0.7l-2.66,1.74l-2.31,4.65l-1.51,-2.45l-1.62,-1.34l-2.44,-1.51l-4.18,-1.63l-1.99,-1.51l-1.62,-2.7l-3.12,-1.82l-3.65,-0.96l-5.29,0.59l-6.86,-1.05l-1.22,-2.9l-2.06,-7.85l-1.14,-2.88l-7.63,-13.01l0.17,-0.55l3.06,-1.6l1.14,-1.3l0.45,-1.41l-0.09,-3.47l1.23,0.07l4.7,1.35l3.72,0.54l1.97,2.31l1.21,0.35l1.4,-0.26l4.07,-2.66l3.51,-1.76l1.1,-1.42l0.74,-1.93l0.44,-4.36l-0.34,-1.35l-2.48,-1.53l-0.28,-1.07l3.56,-4.98l2.42,0.03l1.08,-0.28l1.24,-0.96l1.31,-1.89l5.36,-12.71l0.59,-2.44l-0.35,-1.76l-1.47,-1.33l-9.63,-5.93l-0.57,-7.43l0.41,-1.86l1.44,-2.4l2.42,-1.86l2.38,-4.1l4.11,-14.02l2.33,-1.39l8.98,-1.14l1.75,0.12l2.24,1.76l2.45,1.18l0.63,0.72l-0.54,0.58l-2.46,1.17l-0.63,0.81l0.24,1.6l2.13,5.55l2.53,1.4l4.83,0.58l0.45,-0.4l0.0,-0.76l-0.93,-2.88l2.21,-2.71l3.55,-2.19l6.87,-1.5l1.89,0.09l1.58,1.04l1.32,3.36l-0.47,2.03l-1.23,1.07l-0.2,1.05l0.37,0.4l1.68,0.12l1.59,0.83l3.1,2.47l2.27,1.31l0.86,2.73l2.3,2.59l2.51,1.54l4.71,1.4l-2.03,1.51l-1.03,1.2l0.13,1.06l1.84,2.03l0.55,0.11l2.9,-2.27l2.23,-0.71l3.07,0.95l4.63,-0.12l0.98,0.55l0.16,2.92l1.72,1.51l-2.33,0.1l-0.76,0.6l0.14,0.7l9.37,2.72l2.08,1.66l-2.03,0.79l-10.89,-3.2l-2.05,-1.9l-3.54,-4.27l-0.49,-0.1l-0.2,0.46l1.05,3.78l7.39,7.0l-0.98,-0.45l-1.65,-1.64l-0.47,-0.07l-0.2,0.43l0.58,2.68l1.48,1.54l3.25,1.73l2.61,2.12l1.49,0.02l1.18,-0.6l0.37,3.67l-3.29,4.24l-2.09,2.12l-0.93,1.67l-0.03,1.23l0.56,0.8l1.63,1.22l-2.68,1.31l-1.79,1.78l-0.41,1.68l0.03,4.22l-0.64,2.05l-1.37,1.79l-3.07,1.68l-4.65,1.69l-4.29,0.87l-2.35,1.12l-1.84,1.79l-2.87,5.03l-1.24,0.86l-5.55,0.14l-9.39,4.32l-4.07,0.92l-1.92,0.76l-4.3,-1.67l-3.09,-0.09l-2.86,2.94l-3.57,1.54l-0.39,1.81ZM507.3,947.7l1.81,1.32l0.22,0.48l-1.98,-1.07l-1.0,-0.18l-0.43,0.56l4.43,7.98l0.97,1.18l1.2,-0.03l0.93,-0.77l0.43,1.83l1.02,1.91l1.15,0.57l-0.08,0.73l-3.04,-1.33l-3.85,-3.4l-3.71,-1.57l-0.8,-1.97l-0.28,-2.67l0.21,-6.26l-0.85,-2.2l0.14,-0.42l1.29,0.2l1.03,1.43l0.25,2.56l0.93,1.11ZM515.02,974.35l-0.52,-0.03l-2.71,-1.71l-0.86,-1.07l1.79,0.2l2.14,1.1l-0.24,0.75l0.41,0.76ZM502.87,940.57l1.94,-0.54l0.53,1.2l-0.49,0.09l-1.98,-0.75Z\",\n            name: \"Uppsala\"\n          },\n          \"SE-Z\": {\n            path: \"M228.1,451.55l25.18,12.48l4.89,4.25l1.83,2.66l5.36,6.48l2.07,1.14l3.51,0.94l2.52,1.07l2.55,2.03l2.19,5.71l1.72,2.33l1.0,0.37l3.92,0.2l2.59,1.03l3.99,2.44l1.47,1.82l2.2,1.97l2.86,1.6l-4.32,1.68l-0.76,0.98l0.06,0.52l3.69,2.8l1.28,1.5l11.38,7.13l1.79,1.49l1.23,1.47l1.46,4.42l0.55,0.59l1.01,0.17l1.7,-0.6l1.1,-3.27l1.32,-2.72l2.34,-0.31l1.89,2.28l0.59,4.23l0.8,2.52l1.61,2.16l13.55,8.08l2.5,2.48l1.7,4.18l1.51,2.45l1.39,0.86l4.82,-1.2l2.46,0.01l4.56,1.95l32.56,25.73l-7.69,17.68l-0.79,6.43l-1.79,5.92l-4.17,2.25l-2.7,0.84l-15.25,1.63l-6.75,-1.08l-4.08,0.71l-6.33,2.36l-5.03,1.09l-1.98,2.77l0.01,0.45l3.73,5.21l1.49,3.15l2.24,10.9l2.08,1.45l2.63,0.72l3.19,2.28l3.04,4.59l53.46,41.05l-0.19,1.01l-16.24,3.88l-4.47,2.15l-14.86,14.57l-3.37,4.38l-2.42,1.39l-2.7,0.68l-29.1,1.52l-18.94,6.08l-29.66,5.32l-12.17,-0.81l-9.03,0.97l-2.13,1.08l-0.7,1.29l0.5,1.21l-0.09,2.45l1.28,2.42l1.48,5.22l-2.23,2.09l1.0,3.66l3.06,2.36l4.07,5.25l3.06,2.71l4.54,3.22l4.22,1.54l4.53,0.96l5.31,-1.42l5.71,0.57l1.38,4.14l3.46,4.31l0.92,1.77l0.67,2.27l-0.58,1.93l-1.87,2.31l-19.85,12.27l1.23,6.39l-0.44,3.31l-0.87,0.72l-0.41,0.92l0.38,4.48l-0.74,1.08l-1.38,-0.04l-2.05,-1.46l-3.51,-0.46l-3.21,0.36l-1.74,2.2l-2.11,0.22l-2.87,-1.61l-1.74,0.65l-0.24,0.49l0.82,2.68l-0.46,1.29l-1.49,-0.98l-4.8,-6.58l-0.37,-0.95l-0.42,-0.25l-1.31,0.16l-2.23,1.15l-5.72,6.02l-2.23,3.99l-1.71,5.57l-1.59,9.46l-2.58,3.95l-6.49,0.95l-5.84,-1.85l-46.89,-6.11l-3.96,-2.72l-1.51,-3.72l-1.95,-3.26l-3.29,-4.27l-2.55,-4.46l-5.48,-7.17l2.11,-7.56l1.55,-2.5l-0.11,-0.54l-6.59,-4.52l-6.88,0.35l-9.24,-3.91l-5.0,-5.2l-12.28,-8.12l-31.05,-7.1l-1.48,0.2l-0.07,-1.19l-1.92,-5.25l-13.25,-26.49l-0.07,-1.97l0.86,-2.85l3.47,-8.14l0.17,-2.57l-4.04,-16.38l-0.24,-2.09l0.68,-1.53l8.01,-8.29l0.07,-0.46l-15.57,-30.56l14.31,-17.62l1.06,-2.19l0.0,-2.7l-3.27,-10.69l8.22,-6.26l12.89,-16.49l13.55,-15.89l4.93,-3.76l15.39,-7.3l17.02,-3.46l47.97,8.84l1.76,0.01l1.56,-1.26l11.27,-16.28l0.94,-2.2l0.06,-2.04l-3.16,-25.9l-1.27,-2.64l-2.64,-1.42l-8.27,-1.63l-19.77,-9.93l35.77,-44.52l9.4,-10.24l1.41,-3.14Z\",\n            name: \"J\\xe4mtland\"\n          },\n          \"SE-Y\": {\n            path: \"M402.7,578.12l56.53,7.68l43.18,-10.13l4.25,-0.01l2.57,1.19l0.67,2.21l-0.57,0.63l-2.61,0.05l-0.36,0.69l0.27,0.94l4.6,6.92l1.68,1.5l4.08,1.95l1.55,0.4l6.17,0.03l3.33,1.4l3.19,0.73l1.26,0.61l1.68,1.43l1.64,0.69l4.0,0.11l1.3,0.42l1.39,1.04l0.68,1.43l0.14,1.61l0.57,0.68l3.5,1.3l3.54,3.2l8.58,10.78l7.06,13.51l-1.05,-0.26l-0.97,0.99l-0.32,1.87l-0.45,10.69l-0.62,1.27l-0.68,0.52l-0.39,-0.17l-0.26,-1.59l-0.7,-0.19l-1.39,1.65l-3.34,0.73l-1.75,1.22l0.01,0.65l1.07,1.16l-0.6,0.58l-2.01,3.65l0.34,0.62l0.71,0.0l-0.59,0.94l-0.95,-0.09l-2.61,-2.34l-0.62,0.11l-1.19,2.31l0.05,0.44l1.32,1.46l3.31,0.72l-0.23,0.55l-1.59,0.06l-0.83,0.58l-1.02,2.44l-0.67,0.06l-4.41,-4.2l-0.47,-0.61l0.17,-1.6l-0.78,-0.74l-1.28,-0.57l-2.14,-1.79l-1.72,-0.59l-0.89,0.36l-0.24,0.47l0.34,1.39l-0.43,0.17l-3.67,-1.1l-2.9,-0.2l-1.34,0.3l-1.21,0.74l-0.04,0.65l1.52,1.18l10.16,3.11l-0.82,0.97l-1.99,0.57l-4.44,0.05l-0.38,0.51l0.38,1.25l-0.78,0.75l-0.63,-0.05l-0.69,-0.75l-0.45,-2.75l1.09,-0.34l3.31,-0.02l0.4,-0.4l0.0,-0.8l-0.32,-0.39l-6.67,-1.32l-1.95,0.67l-0.11,0.7l0.85,0.64l0.88,2.83l1.62,2.97l-9.08,-2.12l-3.3,0.09l-0.39,0.4l0.0,0.73l0.39,0.4l1.38,0.04l1.46,0.54l2.19,1.84l0.88,2.28l-0.12,0.76l-0.68,0.29l-4.04,-1.55l-1.77,0.9l-1.4,3.52l-1.09,1.36l1.32,0.25l-2.91,1.55l-0.48,0.75l-0.69,2.72l-2.63,-2.7l-1.1,-0.67l-1.16,-0.31l-1.24,0.15l-1.24,0.77l0.02,0.68l2.2,1.28l1.44,1.43l-3.49,-0.51l-1.04,-1.67l-0.72,-0.38l-0.53,0.2l-0.35,1.56l-0.82,1.0l-1.54,0.73l-3.91,0.72l-0.32,0.32l0.19,0.41l1.9,1.07l17.5,-0.17l1.66,0.58l1.19,1.23l0.32,1.23l-0.19,0.18l-0.59,-0.33l-1.0,-1.68l-0.88,0.29l-0.52,1.85l-1.27,0.4l-1.77,-0.39l-3.97,-1.71l-1.34,0.48l-0.94,2.32l0.18,0.48l4.29,2.21l3.83,-0.78l0.51,0.51l-0.55,1.72l-2.42,0.23l-4.86,-0.99l-0.41,0.17l0.0,0.45l1.02,1.48l3.37,1.13l0.58,0.88l-0.64,1.29l-2.39,0.74l-1.78,1.3l-1.44,0.48l-3.3,-0.45l-0.47,-1.47l-2.21,-2.19l-1.37,-0.88l-1.35,-0.03l-0.38,0.55l0.31,0.98l-2.77,0.0l-0.4,0.4l0.0,0.66l0.79,0.68l0.09,0.46l-0.82,1.62l0.18,0.59l1.93,0.55l2.04,-1.82l0.8,0.41l-1.43,2.9l-0.93,1.12l-1.31,0.51l-1.74,1.63l-0.45,-0.77l1.11,-1.72l-0.14,-0.65l-0.99,-0.39l-0.46,0.12l-0.64,0.81l-1.2,2.53l-1.11,0.76l-3.63,-0.16l0.34,-0.88l-0.14,-0.5l-1.11,-0.74l-3.29,-0.17l0.89,-0.95l5.76,0.58l2.01,-1.87l-0.16,-0.66l-4.07,-1.54l-0.67,-0.92l0.28,-0.54l-0.43,-0.59l-1.65,0.35l-2.4,1.27l-2.16,1.63l-1.26,1.8l-1.89,-0.86l-0.47,-0.43l-0.12,-0.77l0.11,-3.89l-0.89,-1.7l0.88,-1.63l-0.32,-1.87l-0.39,-0.32l-0.82,-0.0l-1.15,0.52l-0.7,-0.02l-1.55,-4.53l-1.34,-1.68l-1.34,-0.81l1.09,-1.87l-0.39,-0.59l-1.71,0.23l-2.95,1.93l-1.05,-0.38l-2.23,-1.56l-1.52,0.48l-0.06,0.7l8.4,5.45l1.99,2.18l2.8,5.35l0.78,3.09l-1.03,1.67l-0.06,1.0l3.14,1.86l1.54,1.47l0.05,2.13l0.54,1.37l2.25,2.63l0.46,1.83l-0.79,3.02l0.29,1.85l-0.92,0.2l-2.87,-1.44l-4.21,0.0l-0.28,0.68l1.51,1.46l10.07,3.3l0.3,1.88l0.58,0.88l-0.77,0.23l-4.81,3.19l-0.7,-5.16l-0.51,-0.51l-1.2,-0.0l-0.91,1.38l-1.08,5.71l-1.87,0.75l-0.21,0.6l0.81,1.21l-3.1,3.66l-1.09,0.33l-2.41,-2.04l-3.69,-0.04l-2.95,0.87l-1.7,1.03l-0.91,1.41l0.05,1.81l1.31,0.98l1.29,0.48l0.36,0.64l-8.15,-0.28l-0.9,-0.33l-2.32,-2.16l-3.02,-4.31l-2.96,-3.29l-0.86,-0.53l-2.0,0.82l-0.67,2.41l-2.37,0.7l-1.31,0.75l-0.79,1.32l-0.02,1.64l3.08,3.9l0.23,1.06l-0.03,1.36l-0.34,0.32l-2.45,0.44l0.12,0.46l1.47,1.42l0.34,0.94l-0.42,2.41l0.63,1.6l0.86,1.1l0.95,0.57l2.33,-0.31l0.77,0.13l0.97,0.82l1.51,3.01l0.73,0.61l-1.75,0.92l0.08,0.69l5.88,2.53l1.56,-0.46l2.08,0.42l2.95,1.43l-5.0,2.54l-1.3,0.25l1.76,-2.52l-0.15,-0.59l-1.38,-0.59l-1.38,0.3l-1.08,0.75l-0.87,1.26l-0.3,1.55l0.29,4.23l-0.48,1.33l-16.34,-2.27l-3.14,-0.91l-13.48,-0.24l-35.62,-7.43l-18.96,-1.03l-39.68,-9.97l-3.25,-0.31l-3.49,0.95l-11.68,7.06l-5.91,-0.59l-5.24,1.42l-4.41,-0.94l-4.09,-1.5l-4.39,-3.13l-2.98,-2.64l-4.02,-5.21l-3.07,-2.39l-0.83,-2.78l0.49,-0.64l1.34,-0.78l0.45,-0.93l-1.52,-5.51l-1.26,-2.33l0.17,-1.75l-0.54,-1.88l0.46,-0.62l1.7,-0.84l8.92,-0.95l12.22,0.8l29.74,-5.33l18.87,-6.07l29.09,-1.52l2.87,-0.72l2.75,-1.6l3.37,-4.38l14.69,-14.43l4.29,-2.08l16.45,-3.93l0.3,-0.31l0.14,-1.9l-53.61,-41.16l-3.06,-4.6l-3.31,-2.37l-2.75,-0.78l-1.77,-1.26l-2.09,-10.64l-1.56,-3.29l-3.59,-5.02l1.49,-2.24l4.95,-1.08l6.25,-2.33l3.84,-0.69l6.85,1.08l15.35,-1.64l2.92,-0.91l4.55,-2.58l1.85,-6.11l0.77,-6.37l7.58,-17.42l2.34,1.91l8.0,4.06ZM557.57,651.89l-0.15,-0.09l-0.07,-0.1l0.03,-0.01l0.19,0.2ZM538.18,660.79l0.65,-0.07l-0.26,0.24l-0.39,-0.17ZM534.82,665.05l0.76,-0.57l0.05,0.01l-0.64,0.56l-0.18,0.01ZM532.53,666.31l-0.96,0.34l-0.61,-0.54l0.03,-0.04l1.54,0.23ZM523.87,666.7l-1.04,-0.47l0.36,-0.94l0.36,0.33l0.32,1.07ZM521.65,682.57l-1.32,0.68l0.46,-2.43l1.47,-1.06l-0.05,1.44l-0.56,1.38ZM519.76,674.67l-0.24,-1.21l0.4,-0.35l0.17,0.47l-0.33,1.08ZM511.87,678.55l0.38,-0.43l-0.24,-0.99l0.56,-1.43l1.71,-0.79l0.31,0.44l0.92,0.3l-1.02,1.99l-1.53,0.75l-0.58,0.64l-0.51,-0.47ZM491.57,706.9l0.04,-0.62l1.08,-1.31l0.85,-0.31l-1.98,2.24ZM483.74,708.32l0.81,0.39l1.91,-0.64l1.74,0.35l-0.19,1.89l-0.7,1.66l-1.83,0.34l-0.2,0.51l0.79,1.03l-0.15,0.24l-2.88,0.8l-3.27,-0.47l-1.22,-1.91l1.44,-3.98l0.71,-0.82l1.35,-0.3l1.02,0.32l0.67,0.6ZM478.75,717.31l0.53,-0.44l3.2,-0.32l0.33,0.57l1.35,0.51l-0.57,1.31l-4.84,-1.63ZM475.5,704.36l2.52,0.37l0.73,0.46l0.25,0.57l-0.19,0.43l-1.53,0.72l-1.51,-1.73l-0.27,-0.81ZM469.74,692.36l-0.12,-0.44l0.75,-0.26l-0.63,0.71ZM457.79,766.95l-0.58,0.15l-0.43,-0.74l-0.23,-1.28l0.33,-0.98l0.89,-0.63l2.26,0.64l-0.13,0.6l-2.1,2.24Z\",\n            name: \"V\\xe4sternorrland\"\n          },\n          \"SE-X\": {\n            path: \"M446.71,815.89l-0.77,0.76l-0.4,-0.25l0.13,-0.47l1.05,-0.04ZM444.06,791.75l0.09,0.02l1.32,0.11l-0.76,0.27l-0.65,-0.4ZM420.4,859.3l-1.39,-1.02l-1.25,-0.43l-1.53,-0.14l-0.43,0.4l0.26,1.09l1.6,0.59l3.91,3.25l1.29,1.65l0.75,2.19l-0.81,0.71l-1.89,0.75l-1.3,1.65l0.12,0.59l2.13,1.22l-0.29,2.26l-1.42,1.52l-0.04,0.59l1.3,1.32l0.2,1.0l-0.52,0.57l-1.58,0.03l-0.39,0.33l0.24,0.44l0.75,0.31l2.35,0.26l0.33,0.99l-1.23,1.12l-0.88,2.63l-0.12,1.57l1.06,1.23l-1.41,0.98l-0.19,0.47l0.43,0.28l3.55,-0.41l1.45,0.14l0.3,0.38l-3.42,0.68l-1.59,1.38l-0.74,3.07l-0.04,1.8l1.61,1.42l1.54,0.27l-0.13,1.14l1.03,2.4l0.52,0.15l0.95,-0.47l0.53,0.44l2.25,5.41l-1.48,1.02l-0.18,0.76l0.25,1.21l0.35,0.32l1.23,0.07l0.16,3.38l1.09,0.96l2.28,0.28l-1.37,1.82l-2.15,0.9l-1.91,1.71l-2.48,1.38l-1.78,0.61l-0.38,1.21l0.91,0.6l2.97,-0.76l1.16,0.29l1.46,1.52l2.14,0.69l3.08,2.04l-2.17,1.09l-0.22,0.36l0.21,1.06l1.22,0.64l2.0,0.04l-3.94,13.46l-2.3,3.97l-2.36,1.8l-1.62,2.71l-0.44,2.1l0.57,7.36l-4.27,1.17l-1.39,0.97l-1.16,0.34l-5.48,-0.51l-1.16,-0.5l-2.74,-0.28l-2.22,0.45l-1.73,1.69l-0.17,2.33l-0.65,0.85l-7.09,3.52l-3.32,0.44l-2.56,-0.93l-0.63,-1.11l-3.27,-2.73l-4.25,-6.66l-3.71,-3.92l-4.01,-2.67l-2.18,-0.6l-3.62,-3.0l-6.39,-8.54l-2.57,-1.55l-0.96,-1.14l-3.37,-5.19l0.15,-4.23l3.81,-2.4l5.5,-5.95l0.76,-1.82l2.91,-2.81l0.67,-1.84l0.15,-1.51l-0.26,-1.62l-1.27,-2.0l-8.44,-7.81l-0.89,-2.21l-2.58,-4.46l-3.76,-4.7l-2.68,-0.95l-13.7,-2.39l-7.89,-3.36l-2.26,-1.86l-4.29,-4.67l-0.41,-5.62l-1.46,-3.7l-2.71,-3.07l-12.66,-10.35l-14.02,-15.54l-0.69,-1.33l-1.05,-0.85l-2.25,-2.88l-0.61,-0.02l-4.67,4.84l-0.85,0.43l-26.28,0.0l-0.4,-0.33l-0.27,-1.07l-1.3,-1.63l-0.88,-4.02l-0.3,-0.3l-12.06,-2.84l2.48,-3.85l1.6,-9.52l1.65,-5.38l2.13,-3.83l5.53,-5.85l1.97,-1.04l0.93,-0.11l5.19,7.47l2.0,1.3l0.94,-0.53l0.43,-1.53l-0.75,-2.64l1.2,-0.45l2.47,1.54l2.68,-0.2l1.75,-2.2l2.88,-0.33l3.36,0.44l2.11,1.48l2.07,-0.12l1.01,-1.61l-0.41,-4.36l1.27,-1.56l0.38,-1.84l-0.17,-3.73l-1.04,-3.99l19.62,-12.06l2.14,-2.65l0.63,-2.35l-0.72,-2.42l-1.05,-2.01l-3.35,-4.12l-1.34,-4.02l11.37,-6.89l3.36,-0.92l3.01,0.31l39.64,9.97l18.99,1.03l35.63,7.43l13.54,0.25l3.07,0.9l16.0,2.23l-1.35,2.83l-0.11,3.41l-0.29,0.67l-1.28,0.79l0.05,0.71l1.1,0.47l-0.46,0.99l-2.21,2.28l0.07,0.61l2.03,1.98l-4.29,0.91l-0.59,1.32l-0.0,1.92l-1.95,0.66l-0.67,1.09l-0.27,2.62l1.36,3.88l-1.42,1.56l-0.06,1.67l0.74,0.84l-1.09,2.46l0.45,1.01l0.88,0.42l3.11,-0.57l-0.53,0.82l-1.25,0.4l-0.34,0.4l0.24,1.15l0.94,0.42l-0.19,4.22l0.35,1.92l0.66,0.77l5.89,-1.14l1.11,0.81l0.76,1.13l0.36,2.09l-0.96,2.5l-0.6,3.21l-0.77,0.51l-1.17,-0.08l-1.75,-0.91l-3.31,-5.48l-1.47,-1.78l-2.31,-1.05l-0.56,0.4l0.12,1.37l0.96,2.33l-1.67,-0.33l-0.67,-0.61l0.03,-1.76l-2.64,-1.8l-2.97,-0.6l-5.88,0.18l-0.31,0.63l1.02,1.31l1.2,0.44l2.24,-0.09l4.26,1.95l-0.43,1.25l-1.93,1.06l-4.13,0.64l-0.38,0.4l0.0,0.71l1.21,0.7l-0.9,0.29l-3.01,-0.94l-1.83,1.06l-0.16,0.42l0.32,0.31l8.63,1.46l0.97,0.88l-0.81,0.34l-1.02,-0.15l-2.41,-1.14l-1.58,-0.27l-4.66,0.23l-0.38,0.4l0.0,0.71l0.41,0.4l2.35,-0.09l0.88,0.32l0.38,0.59l-2.39,0.87l-3.12,0.29l-0.35,0.3l0.17,0.43l1.93,1.2l6.4,0.97l-5.78,-0.17l-0.97,0.67l-0.01,0.61l0.77,0.62l1.46,0.39l1.36,0.94l2.13,0.49l-2.44,0.1l-0.4,0.4l0.0,0.65l0.26,0.38l3.04,1.33l0.25,0.99l-0.98,1.12l-0.67,1.39l1.23,2.55l0.82,0.54l1.05,0.05l-1.71,1.08l-1.16,-1.47l-0.73,-0.37l-0.56,0.24l-0.57,1.83l-1.35,1.07l-0.26,1.35l2.43,3.25l1.97,1.41l2.12,0.76l0.31,1.22l3.95,1.87l-2.87,-0.16l-4.17,-1.53l-0.43,0.11l-0.07,0.44l0.85,1.79ZM421.85,860.36l0.78,0.39l1.42,0.35l-1.55,-0.27l-0.64,-0.47ZM422.77,846.39l0.99,-1.22l0.44,-0.06l-0.16,0.95l-1.27,0.33ZM442.54,792.44l-0.14,-0.26l0.11,-0.3l0.11,0.08l-0.08,0.48ZM439.39,834.16l1.05,0.76l-0.38,0.25l-3.45,-0.22l-0.47,-1.08l-0.63,0.23l-0.44,1.14l-0.46,-1.06l0.06,-0.44l0.7,-0.24l4.02,0.66ZM433.19,912.7l-2.67,0.39l-0.15,-0.61l0.52,-0.78l0.78,0.06l0.86,0.85l0.67,0.08ZM431.16,875.97l-0.55,-1.0l0.37,-0.87l0.5,-0.14l-0.32,2.0ZM428.78,833.6l-0.9,-0.22l0.33,-1.52l1.34,0.42l-0.14,1.01l-0.62,0.31ZM425.95,888.39l-1.88,-0.48l1.3,-1.64l1.11,0.65l-0.54,0.76l0.01,0.71Z\",\n            name: \"G\\xe4vleborg\"\n          },\n          \"SE-W\": {\n            path: \"M238.02,830.33l12.29,2.9l0.84,3.87l1.38,1.79l0.34,1.16l0.87,0.61l26.52,-0.0l1.33,-0.67l4.36,-4.52l1.99,2.55l0.98,0.76l0.73,1.38l14.08,15.6l12.7,10.39l2.6,2.94l1.32,3.37l0.44,5.76l4.51,4.98l2.42,1.97l7.99,3.4l13.8,2.42l2.32,0.78l3.6,4.51l2.56,4.41l0.97,2.34l8.46,7.83l1.15,1.83l0.18,1.33l-0.74,2.95l-2.82,2.67l-0.75,1.8l-5.41,5.86l-3.85,2.4l-0.49,3.46l0.21,1.7l3.47,5.33l1.09,1.27l2.44,1.43l6.44,8.6l3.81,3.14l2.21,0.6l3.81,2.53l3.64,3.84l4.25,6.66l3.31,2.78l0.55,1.02l0.1,1.09l-1.08,0.46l-9.85,2.06l-2.58,2.19l-3.12,4.54l-1.53,1.08l-1.71,0.83l-3.98,1.05l-2.93,0.29l-6.44,-0.57l-3.03,-1.33l-0.76,-1.29l-0.82,-4.0l-1.63,-1.46l-3.51,-0.92l-1.71,-0.94l-1.63,0.27l-1.32,-0.63l-4.41,-0.52l-5.6,1.49l-3.71,-0.3l-4.52,3.22l-0.3,1.04l0.45,1.2l-1.78,3.64l-1.31,1.33l-0.29,1.06l1.22,2.19l0.05,4.69l-0.9,1.51l-1.69,1.39l-1.19,0.41l-1.05,-0.11l-3.63,-1.45l-2.47,-0.04l-1.69,0.84l-0.94,1.41l-0.91,2.89l-2.42,2.31l-1.14,2.16l-13.05,-12.34l-1.42,-0.81l-15.03,-4.96l-6.16,-1.15l-3.05,-1.31l-1.22,-0.89l-0.33,-0.38l-0.27,-1.51l-0.59,-0.48l-1.15,-0.02l-1.38,0.43l-3.27,2.03l-0.86,2.01l-0.35,2.0l1.21,3.58l-3.15,0.36l-18.03,-1.88l-13.0,-7.09l-1.35,-2.99l-1.74,-2.17l-2.27,-4.88l-1.41,-2.27l-1.15,-1.12l-1.23,-0.57l-5.71,-0.4l-4.4,-1.18l-0.88,0.49l0.31,1.64l2.78,2.86l-2.49,1.25l-1.34,-0.57l-7.2,-5.83l-12.11,-14.94l-2.01,-1.26l-7.6,-2.81l-2.36,-1.8l-2.71,-3.33l-1.17,-2.62l-2.42,-3.95l-9.36,-12.43l-3.89,-2.4l-2.56,-5.76l-1.74,-2.58l-2.98,-3.13l-23.26,-18.98l-0.81,-1.33l-2.1,-4.28l1.43,-7.3l0.88,-2.18l4.94,-5.51l1.45,-2.42l1.03,-2.98l2.28,-9.8l-0.07,-1.35l-0.74,-1.18l-18.04,-18.44l-2.07,-1.47l-2.34,-0.67l-4.72,-0.24l-2.49,-0.44l-1.82,-0.86l-5.31,-5.25l-3.22,-1.94l-7.82,-6.26l-0.82,-1.2l10.58,-53.33l-0.14,-3.72l1.35,-0.21l30.91,7.07l12.05,8.0l5.09,5.26l9.4,3.98l6.77,-0.39l6.16,4.23l-1.42,2.33l-2.11,8.16l5.58,7.31l2.55,4.46l3.26,4.24l1.89,3.15l1.54,3.8l4.29,3.02l47.13,6.18l5.82,1.85l6.87,-0.96Z\",\n            name: \"Dalarna\"\n          },\n          \"SE-BD\": {\n            path: \"M704.1,423.5l-0.55,0.85l-2.95,0.33l-0.91,1.49l0.27,0.6l8.56,1.63l1.97,1.37l4.06,5.27l3.79,3.37l4.85,6.79l0.52,1.98l-0.98,0.75l-3.65,0.17l-0.36,0.28l1.23,1.85l-0.04,1.01l-1.22,3.22l-18.46,-9.35l-78.42,-16.34l-28.19,6.86l-5.24,4.65l-8.3,3.92l-3.79,1.18l-1.66,0.26l-1.21,-0.27l-1.01,-0.7l-0.06,-1.0l-0.47,-0.55l-3.37,-1.97l-2.19,-0.65l-1.94,0.01l-1.13,-0.72l-0.5,-3.21l-0.84,-2.04l-2.09,-1.88l-3.99,-2.14l-7.06,-1.39l-3.75,-3.72l-11.27,-3.63l-3.71,-3.0l-3.22,-4.07l-1.38,-0.43l-9.41,-0.27l-2.27,-0.87l-4.39,-3.37l-7.16,-1.44l-3.7,-1.55l-3.52,-2.44l-3.13,-3.24l-1.67,-2.38l-27.3,-8.48l-20.96,-10.99l-40.22,-28.15l-26.19,-7.9l-43.18,-22.65l-26.24,-8.88l-3.09,-12.09l-0.23,-2.89l16.47,-12.26l25.14,-32.88l5.87,-5.32l12.54,-8.63l3.99,-1.63l2.11,-1.38l1.21,-2.06l1.97,-15.09l-0.41,-2.17l-21.1,-25.67l3.53,-8.24l1.14,-1.22l11.26,-1.53l4.27,-1.45l3.87,-2.87l7.1,-7.9l1.54,-2.61l10.42,-26.74l1.38,-2.24l1.63,-1.52l28.02,-15.11l5.52,-6.82l1.23,-0.73l38.91,15.81l2.19,-0.47l2.06,-2.17l14.7,-19.61l1.55,-4.85l-3.59,-23.33l0.08,-3.55l1.64,-12.09l0.55,-0.53l17.77,-4.43l2.95,1.34l11.21,7.22l3.88,0.67l22.94,-1.18l30.16,9.62l30.6,8.71l3.04,-0.16l2.66,-1.49l16.11,-13.43l-0.11,-0.68l-18.57,-7.25l12.21,-7.35l5.87,-6.26l7.02,-12.71l0.93,-2.45l0.32,-2.34l-0.53,-10.6l-0.67,-2.31l-15.47,-12.71l34.32,-1.64l3.63,2.16l8.07,0.82l4.59,2.93l3.23,0.7l1.39,1.43l-0.02,1.87l-0.99,1.7l-1.91,0.65l-0.27,0.34l-0.21,2.43l1.56,1.76l11.46,3.09l9.73,6.14l3.99,4.81l1.22,1.0l0.98,1.57l5.53,0.25l1.18,0.5l0.96,2.42l3.02,4.96l2.32,1.4l5.15,0.95l6.0,3.97l3.67,1.66l1.62,3.8l12.3,2.31l2.91,2.4l3.33,3.65l1.52,1.1l0.33,2.27l2.3,1.33l15.89,0.16l4.47,0.88l0.0,1.04l0.65,0.68l5.31,0.27l4.34,1.58l3.02,0.24l3.0,1.35l3.59,-0.29l1.77,1.16l1.93,2.09l2.06,1.61l4.23,-0.99l1.5,1.05l2.8,3.92l2.01,1.77l10.15,4.56l0.9,0.84l1.02,2.94l0.96,1.21l3.01,2.46l0.94,1.78l-0.38,2.62l0.63,1.06l0.07,0.78l-0.7,4.68l0.25,1.28l0.93,0.93l1.96,0.11l5.71,-2.63l2.1,-0.07l1.46,1.87l3.0,7.96l0.7,1.17l6.92,4.13l6.03,4.96l4.77,1.23l1.11,1.28l-0.05,1.77l-1.58,2.09l-2.11,1.16l-4.87,1.17l-2.44,1.43l-1.25,2.2l-0.31,2.79l0.54,5.26l-0.0,6.92l1.02,3.32l1.32,6.53l1.63,3.08l0.51,1.75l0.2,2.54l-1.05,0.99l-2.4,1.22l-1.83,1.35l-0.11,0.51l0.66,1.21l-2.73,4.29l-0.84,2.48l0.96,3.02l2.56,2.09l2.53,-0.12l2.75,-0.84l2.63,-0.18l4.55,1.97l4.71,0.58l1.36,0.44l0.66,0.65l-0.12,2.39l-0.81,3.3l0.01,2.69l0.24,0.37l1.96,0.85l-1.34,3.15l-1.77,1.81l-7.61,2.36l-1.59,1.28l-0.57,1.91l-0.21,2.24l0.39,1.01l1.09,0.53l-1.01,2.29l-1.55,1.92l0.4,2.65l5.83,6.45l0.68,4.48l3.05,4.92l1.68,1.89l1.32,0.82l1.98,0.59l1.57,1.45l3.85,5.79l4.08,4.13l1.85,3.03l2.88,6.28l-0.24,0.73l-0.75,0.28l-1.6,-0.06l-1.77,0.5l-0.96,2.02l-2.27,2.72l0.72,5.09l0.01,2.29l-0.28,2.23l-1.15,3.88l0.75,4.23l-0.11,1.85l-0.59,1.58l-1.28,0.93l-3.61,1.73l-0.32,1.42l-1.19,0.96l-2.03,0.72l-1.71,1.03l-0.19,1.85l-3.48,1.44l-1.87,1.98l-0.69,2.75l0.35,1.51l1.28,2.05l0.73,4.63l-0.04,1.47l-0.92,3.91l1.84,6.83l2.44,5.81l1.85,1.99l2.42,1.47l7.08,1.78l1.38,1.29l4.29,8.53l3.07,2.7l2.37,7.04l0.02,4.34l3.22,4.41l1.56,4.52l2.56,3.05l-0.02,1.75l-1.37,1.8l-2.17,0.27l-4.87,-0.88l-0.41,0.61l0.77,1.28l-0.74,0.3l-3.21,-0.52l-1.79,0.67l-0.62,0.94l-0.49,1.77l-0.75,0.47l-2.61,-1.37l-0.43,-0.5l-0.36,-1.65l-0.39,-0.33l-0.68,0.1l-0.64,0.55l-3.14,-0.03l-1.4,-0.35l-1.25,-3.07l-1.9,-1.06l-3.55,-0.05l-1.18,0.66l-1.72,2.46l-0.78,0.65l-0.51,-0.01l-1.25,-1.52l-5.38,-0.03l-2.53,-0.56l0.23,-1.53l-0.82,-0.64l-1.02,0.15l-0.86,0.36l-0.68,1.72l-1.3,0.7l-0.61,0.87l0.12,0.55l0.9,0.88l-0.26,2.5l-1.65,-0.33l-0.97,-0.62l-0.66,-1.54l-0.25,-1.9l0.25,-1.56l-0.44,-0.46l-1.69,0.26l-2.64,2.74l-1.28,0.02l-4.0,-2.98l-1.15,-0.49l-1.35,-0.02l-1.23,1.2l-0.06,2.13l0.67,1.53l2.68,2.05l-4.74,1.73l-0.81,0.58l-1.39,1.34l-0.05,2.2l-1.48,0.95l-1.08,-0.19l0.39,-2.19l-1.95,-3.07l-0.91,-0.78l-3.99,-0.43l-3.02,-1.2l-2.05,-2.35l-1.16,-0.3l-1.52,0.41l-1.0,-0.11l-1.41,-1.17l-2.09,-4.51l-1.57,-1.94l-7.64,-4.65l-1.68,-0.35l-1.27,0.36l-0.21,0.63l2.61,2.65l0.59,1.09l1.17,7.4l-0.71,3.01l-1.53,1.84l-0.4,0.1l0.11,-2.36l-1.89,-1.46l-4.19,-0.61l-3.57,2.27l-0.22,-0.53l0.35,-1.05l1.3,-1.57l0.07,-0.51l-0.93,-1.45l-3.14,-2.26l0.39,-1.26l-0.32,-0.51l-4.99,-0.79l-2.41,0.25l-0.36,0.36l-0.16,1.8l-2.55,0.63l-0.2,0.66l2.7,2.92l-0.13,0.86l-0.52,0.08l-2.1,-0.61l-0.44,0.16l1.76,3.85l0.87,0.99l-1.97,2.41l-2.45,-0.78l-2.94,-1.93l-2.41,-0.11l-0.33,0.65l1.43,1.78l1.51,1.2l1.67,0.6l4.44,0.7l1.36,0.8l0.93,1.65l0.62,2.49l-1.32,0.05l-1.2,0.57l-0.54,-2.13l-1.59,-1.5l-2.26,-0.12l-1.63,0.95l-0.09,0.62l0.6,1.06l-0.65,1.61l1.7,3.73l-1.13,0.49l-4.89,0.16l-0.38,0.35l0.29,0.43l5.01,1.38l2.69,0.04l1.65,-2.75l-0.45,-1.33l-1.59,-1.48l-0.23,-0.77l0.29,-0.5l0.66,0.3l1.43,1.67l-0.34,0.46l0.19,0.62l3.61,1.39l-2.72,1.5l-0.59,1.56l0.84,1.08l1.61,0.78l2.54,0.62l1.36,3.25l-1.09,0.53l-2.26,-2.22l-1.48,-0.78l-3.37,-0.8l-1.71,-1.26l-1.16,-0.11l-0.84,0.72l0.12,1.38l-1.26,-0.22l-6.88,-3.51l-5.1,-1.52l-3.04,-2.7l-2.95,-0.6l-2.4,-1.88l-4.16,-1.01l-1.5,-1.15l-2.35,-3.03l-3.58,-1.97l-0.16,0.47l1.75,4.79l4.18,2.93l8.29,3.28l5.58,3.77l4.54,1.61l1.86,1.48l1.51,1.81l1.05,0.6l-0.39,0.22l-3.71,0.03l-1.98,0.48l-0.89,0.62l-0.83,1.63l-1.28,-1.1l-0.81,0.02l-1.72,0.79l-9.17,-2.13l-1.58,0.16l-0.26,0.65l3.26,3.87l2.26,1.37l1.53,-0.61l0.12,-0.67l-0.98,-0.87l0.35,-0.03l3.78,3.51l1.63,0.98l-1.19,3.46l-0.76,0.52l-0.86,-0.06l-0.89,-0.67l-1.59,-2.14l-0.68,0.06l-0.71,1.6l0.71,2.2l-0.03,0.82l-0.76,0.66l-1.18,0.13l-1.02,-0.44l-0.46,-1.08l-0.58,-0.19l-2.0,1.22l-1.95,0.69l-1.97,0.1l-5.87,-1.59l-1.2,0.24l-0.26,0.6l0.61,1.0l-2.44,0.08l-1.5,-0.28l-1.68,-2.11l-1.59,0.05l-2.96,0.72l-0.3,0.39l0.28,1.07l1.47,0.47l-2.56,-0.27l-2.88,0.54l-1.3,1.75l0.2,0.62l0.68,0.35l-2.18,1.19l-0.2,0.41l0.32,0.33l2.77,0.94l3.64,3.36l1.79,0.28l1.25,-0.57l0.33,-1.61l0.75,0.19l3.34,2.75l2.17,1.29l0.85,1.03l-0.13,1.28l-1.96,1.94l-2.96,1.27l-2.95,0.28l-2.01,-0.93l-2.73,-5.28l-2.05,-2.12l-1.29,-0.73l-1.46,-0.29l-1.7,-1.12l-2.04,-2.39l-2.28,-2.02l-2.57,0.12l-0.36,0.34l0.25,0.43l0.96,0.56ZM894.17,375.41l-0.4,0.23l1.03,-0.72l-0.02,0.14l-0.6,0.35ZM890.64,380.91l-0.32,0.11l-0.03,-0.05l0.34,-0.3l0.01,0.24ZM883.87,386.52l0.88,0.22l1.32,0.05l-0.5,0.59l-0.69,-0.05l-0.65,-0.24l-0.36,-0.56ZM884.9,390.45l0.14,-0.1l-0.07,0.15l-0.06,-0.05ZM883.9,376.42l0.01,0.08l-0.09,-0.03l0.05,-0.06l0.03,0.01ZM874.63,390.59l0.0,-0.02l0.0,0.03l-0.01,-0.01ZM872.63,392.65l-0.8,-0.19l-0.92,-0.43l0.54,-0.67l1.18,1.29ZM867.16,380.59l0.64,0.51l1.72,0.47l1.61,-0.88l0.38,0.45l0.68,-0.04l0.25,-0.52l0.06,0.31l-1.27,2.76l-2.75,2.06l-2.33,-1.07l-1.11,-1.41l0.01,-2.11l0.94,0.96l0.54,-0.06l0.61,-1.45ZM869.2,397.6l-0.06,0.9l1.18,2.64l-2.61,-1.22l0.03,-0.33l1.01,-0.68l0.45,-1.3ZM851.91,381.35l1.0,1.65l0.08,1.14l-1.16,-0.96l0.09,-1.83ZM846.66,380.19l0.09,-0.37l0.14,-0.25l0.17,0.83l-0.39,-0.21ZM833.6,382.29l0.49,0.24l0.57,-0.29l-0.22,-1.1l0.67,-0.37l1.47,0.61l-0.64,-0.2l-0.85,0.54l0.05,0.99l0.64,1.24l-0.29,0.32l-1.87,-1.99ZM837.92,383.27l0.38,0.22l0.06,0.06l-0.14,-0.03l-0.29,-0.25ZM835.25,379.28l1.22,-0.17l-0.02,0.7l-0.35,-0.11l-0.85,-0.42ZM831.44,380.11l2.0,-0.68l0.52,0.43l-1.46,0.7l-0.75,-0.01l-0.31,-0.44ZM834.19,375.83l-0.67,-0.04l-0.34,-0.51l0.89,0.24l0.12,0.31ZM822.39,389.19l0.51,-0.54l1.08,0.5l0.11,0.45l-0.4,0.14l-1.3,-0.55ZM818.29,388.88l0.81,0.0l0.13,0.4l-0.41,0.03l-0.53,-0.44ZM816.25,391.8l0.47,0.33l0.17,0.21l-0.48,-0.32l-0.16,-0.22ZM816.8,385.82l-1.39,0.35l-0.23,0.8l0.45,1.79l-3.94,-3.35l-1.06,-1.96l0.23,-1.56l0.96,-0.47l1.54,0.09l1.56,0.85l0.07,0.26l-0.54,0.05l-0.36,0.49l0.08,0.33l2.18,1.49l0.44,0.85ZM802.77,402.92l-1.18,-0.08l-0.23,-0.38l0.06,-0.07l1.35,0.53ZM803.59,403.3l1.45,0.63l-0.58,0.47l0.01,0.81l-0.88,-1.9ZM804.98,384.2l-0.24,0.59l-2.7,-0.32l-1.72,-1.02l-0.32,-0.93l0.6,-3.9l0.38,-0.22l2.7,2.03l1.3,3.77ZM804.87,402.17l-1.18,-0.04l-0.72,-0.74l1.04,-0.39l0.86,1.18ZM803.55,389.67l0.42,1.07l-0.21,0.06l-0.74,-0.21l-0.3,-0.75l0.84,-0.17ZM800.73,374.37l-0.23,-0.26l0.06,0.01l0.17,0.25ZM798.92,411.07l0.62,-1.07l0.75,-0.28l-0.2,1.38l-1.17,-0.03ZM799.05,405.81l-0.75,0.03l-0.09,-0.39l0.58,-0.24l0.26,0.6ZM798.86,388.92l-0.68,-0.13l-0.6,-0.33l0.96,-0.06l0.32,0.52ZM798.25,408.51l-1.57,-0.54l-0.39,-0.54l0.83,0.22l1.14,0.87ZM796.53,402.56l-1.67,0.73l-0.64,0.07l0.28,-0.88l0.55,-0.43l1.21,0.03l0.27,0.49ZM793.87,392.76l-0.5,0.2l-0.84,-0.22l-0.19,-0.43l1.45,0.02l0.08,0.44ZM791.45,390.29l0.78,-0.73l0.13,-1.13l0.54,-0.6l0.45,0.65l0.03,1.46l-1.93,0.36ZM791.76,377.39l0.24,-0.64l1.23,0.12l-0.2,0.31l-1.27,0.21ZM788.91,401.58l-1.79,-0.84l-0.5,-1.0l0.22,-0.27l2.74,-0.15l3.17,-1.15l0.61,0.28l-0.14,0.53l-1.55,0.94l-0.54,1.55l-0.39,0.26l-1.53,-0.43l-0.3,0.29ZM791.43,413.31l0.66,-0.48l0.44,0.48l-0.28,0.12l-0.82,-0.11ZM791.66,406.51l-1.34,-0.08l-1.27,-0.48l-0.8,-1.18l0.15,-0.34l3.04,1.38l0.21,0.71ZM790.81,396.83l-0.66,0.46l-1.02,-0.09l-0.72,-0.71l0.57,-0.49l1.43,-0.04l0.4,0.88ZM786.91,407.53l2.0,2.39l0.1,0.48l-0.3,0.21l-2.98,-0.17l-0.69,-0.47l-0.32,-0.82l0.28,-0.82l0.62,-0.65l1.29,-0.15ZM784.02,418.37l1.41,0.25l0.32,0.59l-0.9,0.06l-0.82,-0.9ZM782.01,373.8l0.02,0.06l0.14,0.43l-0.18,-0.37l0.02,-0.12ZM781.13,424.26l0.37,-0.31l0.47,0.05l-0.03,0.01l-0.81,0.25ZM782.18,421.57l-0.75,-0.35l-0.07,-0.37l0.6,0.29l0.22,0.43ZM781.63,388.75l0.22,-0.04l0.01,0.14l-0.24,-0.1ZM779.17,394.82l0.02,0.0l0.02,0.02l-0.02,-0.01l-0.02,-0.01ZM777.7,422.04l1.74,0.82l-0.21,0.67l-1.09,-1.14l-0.44,-0.35ZM778.76,385.36l-1.23,-0.38l0.06,-0.44l1.27,-0.36l-0.09,1.17ZM777.72,375.66l-0.61,0.03l-0.17,-0.45l0.11,-0.13l0.67,0.55ZM778.09,413.85l-0.3,0.58l-2.15,1.08l-5.32,0.28l-0.35,-0.2l0.52,-1.82l0.48,-0.17l1.61,1.29l1.71,-0.69l1.25,-1.09l1.13,-0.01l1.41,0.76ZM775.65,396.22l0.17,0.15l-0.03,0.55l-0.21,-0.13l0.07,-0.57ZM775.3,428.75l-0.02,-0.01l0.02,0.0l0.0,0.01ZM775.23,405.84l0.36,0.37l-0.12,0.39l-0.14,-0.04l-0.1,-0.72ZM768.35,407.86l-0.03,1.39l0.6,0.8l-3.6,-2.92l-1.67,-2.04l-0.32,-0.97l1.25,-0.58l0.86,0.11l5.19,2.31l1.12,-0.04l2.4,2.02l-0.02,0.54l-1.13,0.26l-1.73,-1.67l-2.08,-0.76l-0.87,0.44l0.02,1.11ZM765.61,416.66l-4.79,-1.08l-0.56,-1.39l0.31,-2.34l0.4,-0.4l0.95,0.0l2.26,0.87l-0.29,1.67l1.41,1.52l0.32,1.16ZM757.66,416.38l0.22,-0.38l0.15,-0.5l0.32,0.25l-0.5,0.5l0.14,0.44l-0.32,-0.32ZM755.96,406.91l1.8,0.76l-0.59,0.73l-0.97,0.45l-0.23,-1.94ZM754.78,409.27l0.11,-0.03l0.08,0.13l-0.11,-0.04l-0.08,-0.06ZM753.92,419.21l-0.68,-0.15l-0.18,-0.68l0.52,-0.1l0.83,0.44l-0.48,0.49ZM750.09,407.97l0.03,0.0l-0.01,0.01l-0.02,-0.01ZM751.19,407.81l0.25,-0.04l0.33,0.1l-0.06,0.13l-0.51,-0.19ZM751.44,422.22l-1.4,-0.28l-1.19,-0.76l-0.2,-0.44l0.29,-0.48l0.66,-0.13l1.43,0.77l0.42,1.33ZM742.66,425.23l0.26,-0.15l0.57,0.48l-0.35,-0.21l-0.48,-0.12ZM740.29,435.46l0.07,0.99l-0.99,-1.19l-1.8,0.28l-2.36,-0.63l-1.54,-2.56l2.12,0.34l1.76,1.42l2.74,1.34ZM739.53,442.0l-4.83,-3.34l-0.21,-0.56l0.72,-0.3l0.66,0.4l1.13,0.05l1.13,0.8l1.01,0.95l0.39,2.0ZM736.93,420.89l0.37,0.21l-0.24,-0.05l-0.13,-0.16ZM727.4,420.76l1.98,0.75l0.6,-0.37l0.16,-0.62l0.51,-0.14l2.5,0.51l2.46,1.46l2.01,2.48l-1.67,-0.34l-1.91,-0.96l-2.85,-2.74l-0.69,0.3l-0.35,0.83l-1.23,-0.28l-1.53,-0.87ZM736.93,428.44l-2.61,-0.58l-0.66,-0.66l0.52,-0.14l1.85,0.58l0.9,0.8ZM731.24,449.45l0.04,-0.09l0.06,-0.41l0.25,0.2l-0.35,0.29ZM728.86,449.09l-0.75,-0.13l-1.08,-0.89l0.12,-0.52l0.28,-0.14l1.43,1.68ZM721.21,453.92l-0.05,-0.78l0.92,-0.54l0.9,0.55l-0.03,0.54l-1.22,-0.15l-0.52,0.38Z\",\n            name: \"Norrbotten\"\n          },\n          \"SE-T\": {\n            path: \"M303.99,1006.09l1.75,2.63l0.11,0.81l-0.71,1.57l0.18,0.86l4.49,1.99l1.03,1.54l1.24,2.91l0.29,1.89l-1.64,6.62l-0.14,2.49l0.39,1.46l0.9,0.91l4.89,0.39l0.91,1.1l0.6,4.53l0.34,1.34l0.64,0.98l1.14,0.37l1.84,-0.18l1.11,0.58l-0.11,1.49l-1.37,2.09l-0.06,1.09l1.95,2.4l0.41,2.62l-0.6,0.95l-1.21,0.62l-5.37,1.44l-0.98,1.88l-0.17,1.33l0.29,1.21l1.53,2.11l-1.76,3.83l-0.11,1.43l0.55,0.52l2.72,1.1l1.63,1.17l2.53,3.15l1.19,0.4l3.38,-0.01l-1.75,2.4l-0.53,1.24l0.79,2.47l1.64,3.41l-0.11,1.24l-0.87,0.63l-3.27,0.98l-2.02,1.08l-0.86,1.22l-3.18,2.84l-1.06,2.0l1.46,2.5l3.74,2.69l-4.12,0.96l-3.41,1.57l-0.78,1.15l-0.1,0.96l0.39,1.74l-0.34,1.3l-1.69,2.12l-1.78,1.05l-7.46,2.82l-1.86,0.39l-1.77,-0.01l-2.42,-0.69l-1.89,-0.11l-2.33,0.47l-7.45,3.8l-2.07,1.75l-5.29,6.07l-3.42,2.96l-7.96,1.81l-2.38,1.18l-3.12,2.26l-4.14,-2.48l-1.32,-1.43l-0.86,-2.48l-1.22,-2.17l-1.52,-0.93l-1.41,-0.3l-1.02,0.31l-1.44,2.02l-2.27,1.19l-0.45,-0.21l-0.53,-1.01l-0.75,-0.31l-2.75,-0.34l-1.47,-0.59l-0.47,-0.8l-0.56,-3.58l-1.0,-1.78l-3.79,-4.76l-0.65,-1.38l-0.13,-3.51l-3.11,-5.87l-2.67,-6.23l0.99,-3.92l0.33,-4.05l-1.45,-6.6l-0.07,-4.56l1.35,-9.29l1.29,-4.02l4.63,-9.61l3.46,-3.64l0.39,-1.25l-0.31,-1.59l-2.26,-2.18l-0.39,-0.89l-0.02,-1.1l0.93,-2.2l0.46,-0.19l1.16,0.5l0.54,-0.17l0.37,-0.78l0.12,-1.52l-0.52,-4.46l-1.99,-6.11l-0.66,-4.0l0.08,-9.2l-0.61,-9.14l-0.79,-2.11l-1.21,-1.08l-2.85,-1.69l-0.12,-0.88l0.89,-0.69l5.78,-2.75l0.23,-0.4l-0.28,-3.06l17.65,1.84l3.81,-0.46l0.3,-0.53l-1.31,-3.72l0.3,-1.76l0.79,-1.85l2.87,-1.72l2.04,-0.37l0.32,1.49l0.57,0.7l1.37,0.98l3.14,1.34l6.21,1.16l14.96,4.94l1.28,0.74l13.29,12.59Z\",\n            name: \"Orebro\"\n          },\n          \"SE-S\": {\n            path: \"M56.58,1069.67l-0.33,-4.24l-1.56,-6.78l-7.26,-20.05l-0.42,-2.09l0.25,-2.51l1.14,-1.37l9.19,-3.81l1.69,-1.44l3.1,-4.2l0.37,-7.41l-0.96,-1.91l-2.34,-2.28l-0.72,-1.27l0.41,-3.15l2.58,-1.92l3.39,-0.9l10.87,0.81l3.03,-0.51l10.06,-6.17l10.68,-9.45l2.53,-3.14l1.89,-3.75l0.97,-4.56l-0.22,-3.85l-1.76,-6.56l-0.56,-3.38l0.28,-1.53l0.82,-1.26l4.99,-5.15l1.14,-2.09l0.81,-2.54l0.5,-3.8l-0.27,-3.19l-1.02,-3.07l-7.62,-14.63l-7.19,-9.98l-1.81,-3.98l-2.51,-11.19l-1.28,-3.51l-2.6,-4.68l-0.16,-1.8l1.64,-1.21l15.6,-3.48l3.87,-0.15l7.65,1.06l1.66,-0.63l0.4,-0.64l2.75,5.26l23.3,19.01l2.9,3.05l1.62,2.4l2.64,5.9l0.75,0.74l2.17,0.93l1.01,0.78l9.32,12.37l2.38,3.87l1.23,2.71l3.74,4.29l1.65,1.09l7.6,2.81l1.84,1.17l12.0,14.84l7.43,6.01l1.84,0.66l2.59,-1.13l0.49,-0.54l-0.08,-0.94l-2.71,-2.67l-0.3,-0.72l0.31,-0.25l4.14,1.19l5.68,0.4l0.96,0.47l2.29,3.11l2.29,4.92l1.7,2.11l1.56,3.25l13.0,7.09l0.28,3.06l-5.64,2.69l-1.02,0.79l-0.35,0.96l0.52,1.05l4.0,2.71l0.62,1.8l0.58,8.96l-0.07,9.27l0.68,4.09l1.98,6.09l0.5,4.26l-0.21,1.59l-1.36,-0.4l-0.87,0.43l-0.59,0.84l-0.53,1.76l0.01,1.36l0.56,1.3l2.12,1.92l0.27,1.39l-0.97,1.76l-2.76,2.69l-4.67,9.7l-1.34,4.16l-1.37,9.45l0.08,4.66l1.44,6.49l-0.31,3.91l-0.88,3.51l-3.67,-2.02l-1.91,-0.6l-41.7,-1.02l-2.02,0.38l-2.27,1.26l-2.68,2.14l-4.09,5.09l-2.46,4.68l-2.44,6.59l-0.43,1.55l0.32,1.61l0.98,1.8l3.06,4.02l0.1,0.63l-0.51,0.38l-3.9,1.15l-5.83,-0.01l-24.26,-7.21l-4.65,-17.09l-5.58,-7.41l-0.9,-5.97l-0.6,-1.7l-3.73,-3.36l-1.12,-0.64l-1.89,0.14l-2.32,1.69l-1.48,2.31l-1.35,1.04l-2.53,-2.54l-1.7,0.14l-1.89,0.68l-4.7,-2.48l-0.38,-0.42l0.11,-0.56l3.02,-0.47l0.8,-0.4l0.3,-0.74l-0.81,-0.83l-1.47,-0.19l-5.83,1.35l-0.71,-0.08l-6.4,-2.54l-1.47,-2.85l-1.64,-1.02l-2.05,-0.28l-4.13,0.69l-1.45,1.11l-0.26,1.59l0.18,1.37l-1.35,0.76l-0.65,-0.07l-7.35,-4.49l-1.23,-0.06l-1.61,1.06l-1.62,0.17l-5.54,-1.44Z\",\n            name: \"V\\xe4rmland\"\n          },\n          \"SE-U\": {\n            path: \"M406.77,1041.24l-4.52,2.11l-3.04,-0.05l-38.39,5.69l-0.95,0.59l-0.43,0.97l0.07,0.94l0.93,1.88l2.19,1.36l-0.27,0.86l-0.78,0.58l-1.39,0.74l-4.75,1.42l-2.04,0.27l-7.19,-1.08l-1.77,0.16l-2.89,0.93l-2.13,1.62l-4.15,5.68l-0.54,1.02l-0.12,2.67l-0.31,0.81l-2.69,1.92l-4.17,1.22l1.1,-1.58l-0.04,-0.77l-0.32,-0.33l-3.75,0.02l-0.85,-0.32l-2.37,-3.05l-1.8,-1.28l-2.89,-1.3l1.96,-4.9l-1.63,-2.44l-0.2,-0.81l0.54,-2.19l0.35,-0.44l5.16,-1.32l1.35,-0.69l0.88,-1.29l-0.41,-3.24l-1.91,-2.25l0.01,-0.67l1.37,-2.11l0.13,-2.01l-1.11,-0.99l-3.17,-0.11l-0.77,-1.89l-0.18,-2.82l-0.45,-1.83l-1.13,-1.44l-1.63,-0.39l-2.83,0.01l-1.11,-0.62l-0.33,-1.17l0.13,-2.38l1.64,-6.63l-0.3,-2.14l-1.31,-3.09l-1.15,-1.72l-2.27,-1.24l-2.16,-0.69l0.66,-1.83l-0.13,-1.15l-1.76,-2.66l1.18,-2.33l2.48,-2.4l0.93,-2.93l0.7,-1.12l1.31,-0.7l2.31,0.04l3.41,1.39l1.35,0.17l1.64,-0.55l1.88,-1.57l1.07,-1.93l-0.07,-4.9l-0.32,-0.96l-0.7,-0.67l0.02,-1.12l1.25,-1.25l1.9,-3.89l-0.33,-1.89l4.21,-3.02l3.49,0.35l5.54,-1.49l4.17,0.49l1.31,0.64l1.51,-0.3l1.77,0.94l3.42,0.88l1.35,1.24l1.0,4.62l0.78,0.85l1.92,1.01l1.44,0.44l6.52,0.57l3.08,-0.3l4.18,-1.11l3.45,-2.03l3.17,-4.58l2.28,-2.0l9.86,-2.07l1.38,-0.59l0.16,-1.24l2.34,0.82l3.57,-0.47l7.31,-3.61l0.99,-1.3l0.1,-2.15l1.36,-1.35l1.87,-0.39l2.6,0.26l1.22,0.51l5.6,0.52l1.45,-0.4l1.38,-0.97l4.35,-1.2l9.58,5.89l1.2,1.0l0.3,1.35l-0.54,2.26l-5.29,12.57l-1.25,1.8l-1.03,0.78l-2.64,-0.01l-0.93,0.3l-3.83,5.36l-0.09,0.94l0.46,0.87l2.49,1.56l0.1,2.66l-0.34,2.4l-0.63,1.65l-0.87,1.18l-3.45,1.73l-2.85,2.02l-2.28,0.8l-1.3,-0.74l-0.88,-1.35l-0.72,-0.55l-3.8,-0.56l-4.66,-1.34l-1.74,-0.06l-0.56,0.94l0.17,3.28l-0.38,1.09l-0.84,0.96l-3.15,1.64l-0.46,1.1l0.67,1.7l7.03,11.72l1.1,2.78l2.06,7.85l1.19,2.85Z\",\n            name: \"V\\xe4stmanland\"\n          },\n          \"SE-AC\": {\n            path: \"M562.49,440.1l1.57,1.16l2.1,0.03l2.01,0.6l3.23,1.87l0.41,1.45l1.24,0.89l1.64,0.36l1.76,-0.28l3.96,-1.23l8.38,-3.96l5.14,-4.6l27.82,-6.82l78.28,16.31l20.72,10.4l-0.46,0.26l-5.88,-0.01l-0.93,1.21l0.75,1.74l1.44,1.81l-2.1,1.16l-1.85,-0.75l-0.96,0.0l-0.77,1.62l-2.25,1.78l-0.17,1.38l0.71,0.83l-0.65,0.43l-8.18,0.36l-1.02,0.44l-0.36,1.16l0.7,1.5l-0.31,0.99l-1.21,1.57l-1.55,0.79l-0.3,0.48l0.64,2.7l-2.48,1.85l-0.17,0.46l0.5,1.64l-3.04,1.15l-1.06,0.07l-0.82,-0.41l-0.78,-3.16l-1.63,-0.58l-1.23,0.58l-0.79,1.08l-0.38,1.89l0.49,1.65l0.97,0.66l1.71,0.48l-0.2,1.6l1.37,1.13l1.34,0.45l2.66,0.03l4.31,-0.88l4.2,1.33l1.49,0.83l0.31,1.14l-0.51,0.32l-3.48,-0.19l-1.3,0.34l-0.24,0.6l1.16,1.86l1.48,1.54l2.95,1.94l-1.03,0.32l-0.56,0.92l0.3,1.04l0.71,0.63l-1.12,-0.36l-3.17,-2.5l-3.15,-1.4l-1.36,-1.62l-1.78,-1.34l-1.64,0.36l-1.0,1.68l0.1,2.08l0.82,1.93l1.48,1.45l6.08,1.15l0.81,1.21l-0.62,0.07l-0.35,0.41l0.03,1.06l0.96,1.43l1.43,0.72l1.57,0.09l1.11,0.52l0.92,1.91l0.79,0.67l0.88,1.47l0.79,0.49l1.22,-0.53l0.18,-0.8l-0.26,-0.64l0.56,-2.13l1.04,0.41l2.84,3.4l1.33,1.03l0.63,-0.21l0.72,-2.45l0.65,0.31l0.18,2.75l0.84,1.49l1.18,0.95l1.43,0.33l-1.56,0.64l-0.77,-0.31l-1.68,-2.16l-1.06,-0.47l-4.88,2.78l-0.9,-1.64l-1.27,-0.44l-0.84,0.68l-0.01,1.11l1.32,0.47l1.21,1.8l1.01,0.68l1.92,-0.98l3.26,-0.08l0.79,2.67l-0.76,1.56l0.1,1.41l0.98,0.97l1.71,0.28l0.81,-0.52l0.95,-1.65l2.55,0.7l0.52,-0.48l-0.29,-1.06l0.27,0.0l0.61,0.42l0.44,0.88l0.07,1.3l-0.32,0.78l-1.64,0.17l-1.67,1.38l-1.74,0.78l-4.66,5.48l-5.43,4.32l-1.19,-0.86l-1.27,-1.73l-1.02,-0.91l-0.48,-0.04l-0.17,0.45l0.37,1.8l-0.37,1.78l0.78,1.43l-2.61,1.25l-0.98,0.08l-1.6,-0.76l-0.58,0.27l-8.61,9.35l-2.61,-0.61l-0.67,0.66l-1.71,3.23l-5.26,4.55l-1.31,2.21l0.76,2.12l-0.4,1.77l-2.85,4.57l-0.35,2.0l0.45,1.21l-0.66,0.46l-0.2,0.56l-0.3,3.25l-1.14,0.61l-1.03,1.22l-1.56,0.76l-1.13,1.6l-3.22,8.12l-3.09,2.04l-2.93,0.11l-0.93,0.73l-0.38,2.02l0.79,0.86l1.44,0.14l-1.73,2.62l-1.77,-2.59l-1.07,-0.77l-1.2,-0.15l-3.55,2.67l-0.35,1.59l-0.82,0.78l-0.37,-0.3l0.55,-1.1l-0.22,-1.16l-2.59,-2.44l-0.48,0.17l-3.21,5.35l-1.06,0.98l-1.79,-0.5l0.26,1.24l-0.37,2.08l0.5,2.89l-0.99,2.27l-0.69,0.85l-0.55,0.27l-0.96,-0.26l-0.54,-0.71l-0.07,-1.12l0.59,-1.66l-0.08,-1.17l-1.6,-2.75l-1.07,-0.54l-0.54,0.22l-0.63,1.66l0.1,6.55l-0.62,2.39l-0.46,0.12l-0.87,-0.61l-0.7,-1.07l-0.04,-0.96l1.33,-4.27l-0.15,-1.42l-0.69,-0.23l-1.39,1.5l-1.32,2.42l-0.69,2.67l0.35,2.06l-5.61,0.09l-2.18,0.87l-0.5,-0.36l-0.71,-1.47l-0.72,-0.52l-1.4,-0.18l-1.47,0.35l-1.29,0.71l-1.08,1.08l-0.69,1.57l0.13,1.42l0.74,1.45l-4.37,-1.49l-1.37,0.01l-0.95,0.77l-2.52,1.05l-0.6,0.6l-1.0,2.69l-7.49,5.21l-0.32,1.55l1.11,2.83l0.35,2.3l-1.71,0.55l-3.04,2.49l-0.61,0.19l-2.92,-1.31l-0.14,-3.42l-1.52,-0.91l0.3,-1.23l-0.21,-0.47l-0.85,-0.4l-1.97,-1.9l-3.48,-0.98l-2.19,-2.3l-1.61,-1.02l-2.08,0.09l-1.76,1.33l-0.01,0.63l1.61,1.08l1.41,0.41l-0.73,2.74l1.05,0.98l1.76,0.36l1.35,0.84l-2.12,0.93l-1.08,0.11l-0.55,0.61l0.7,1.36l2.72,2.89l0.08,1.66l-3.37,-1.96l-5.56,-5.18l-1.93,-0.77l-0.54,0.34l-0.02,1.11l1.65,3.12l-0.83,0.3l-2.13,-1.67l-7.51,-14.76l-8.62,-10.83l-2.22,-2.27l-1.6,-1.15l-3.62,-1.49l-0.15,-1.63l-0.76,-1.59l-1.64,-1.29l-1.69,-0.54l-3.87,-0.09l-1.44,-0.62l-1.57,-1.36l-1.43,-0.71l-3.22,-0.74l-3.42,-1.43l-6.22,-0.04l-1.38,-0.35l-3.93,-1.87l-0.97,-0.76l-5.01,-7.29l-0.19,-0.67l2.22,0.08l0.8,-0.38l0.5,-1.05l-0.2,-1.22l-0.8,-1.65l-2.79,-1.29l-4.65,-0.02l-43.01,10.12l-56.26,-7.62l-7.9,-4.01l-35.54,-28.16l-2.73,-1.37l-2.16,-0.69l-2.67,0.0l-4.69,1.17l-0.84,-0.63l-1.32,-2.19l-1.72,-4.23l-2.68,-2.7l-13.48,-8.03l-1.46,-1.93l-0.75,-2.36l-0.65,-4.43l-0.84,-1.35l-1.37,-1.3l-3.36,0.46l-1.46,3.0l-0.81,2.87l-1.79,0.45l-1.77,-4.72l-1.4,-1.69l-1.87,-1.56l-11.35,-7.11l-1.23,-1.45l-3.43,-2.55l0.3,-0.44l4.19,-1.56l0.52,-0.44l-0.22,-0.97l-2.93,-1.65l-4.83,-4.66l-2.95,-1.64l-2.85,-1.11l-4.55,-0.41l-1.49,-2.06l-1.34,-4.02l-0.96,-1.84l-1.44,-1.41l-1.38,-0.82l-2.62,-1.11l-3.45,-0.92l-1.86,-1.02l-7.11,-9.05l-5.02,-4.36l-25.32,-12.56l2.13,-10.89l0.94,-2.63l1.3,-1.59l5.51,-3.66l2.37,-3.58l0.27,-5.22l-0.54,-11.11l3.42,-26.35l0.62,-1.67l4.53,-7.2l0.86,-2.62l-0.31,-4.61l-6.98,-31.38l34.61,-3.14l29.19,-13.75l0.9,-1.87l-0.9,-6.93l25.65,8.66l43.19,22.65l26.13,7.86l40.23,28.15l21.07,11.04l27.27,8.49l1.38,2.15l3.25,3.35l3.59,2.49l3.85,1.62l7.18,1.45l4.19,3.27l2.49,0.97l9.56,0.3l1.12,0.36l2.99,3.91l3.84,3.1l11.38,3.69l3.81,3.75l7.12,1.4l3.78,2.05l1.81,1.59l0.76,1.82l0.52,3.34ZM701.97,477.32l-0.76,-0.03l-1.24,-1.28l-0.08,-1.5l1.44,0.86l0.61,1.07l0.04,0.88ZM692.3,498.41l0.65,0.33l0.45,-0.13l0.99,-0.82l1.08,0.91l0.31,0.76l-0.55,0.16l-3.62,-1.34l-0.66,-1.41l-0.13,-1.12l1.12,0.39l-0.06,1.53l0.4,0.73ZM682.61,594.47l-0.06,-0.25l0.23,-0.1l-0.02,0.24l-0.15,0.1ZM675.58,606.11l-0.84,0.48l-0.93,-0.05l-0.72,0.48l1.19,-5.51l0.47,-0.7l2.85,-2.1l0.17,0.9l-0.7,1.3l0.24,2.02l-0.24,1.21l-0.61,1.19l-0.88,0.78ZM672.01,597.74l1.03,-1.86l2.22,0.29l0.82,1.64l-1.87,1.26l-0.66,-1.15l-0.67,-0.3l-0.88,0.13ZM671.18,611.56l-0.56,0.03l0.05,-0.42l2.11,-2.14l-0.34,1.11l-1.26,1.43ZM665.52,616.45l0.82,0.25l0.68,-1.67l-0.25,1.52l-1.01,0.49l-0.37,-0.26l0.12,-0.33ZM653.14,596.97l0.31,-0.58l-0.12,0.5l-0.19,0.08ZM652.57,602.21l-0.01,-0.24l0.22,-0.17l0.19,0.54l-0.4,-0.13ZM632.45,610.65l0.02,0.01l0.01,0.03l-0.03,-0.04ZM606.63,629.21l0.07,0.37l-0.06,0.01l-0.09,-0.33l0.09,-0.05ZM605.73,622.27l-0.0,-0.08l0.02,0.05l-0.01,0.03ZM579.98,632.39l0.57,0.48l-0.36,-0.09l-0.21,-0.4ZM580.71,633.01l0.9,0.46l-0.17,0.33l-0.52,-0.24l-0.22,-0.55Z\",\n            name: \"V\\xe4sterbotten\"\n          },\n          \"SE-AB\": {\n            path: \"M560.47,1050.72l-0.02,-0.04l0.02,-0.0l-0.0,0.04ZM557.18,1016.75l0.82,-0.5l0.99,-0.0l-1.09,1.56l-0.73,-1.06ZM558.26,1028.28l0.02,-0.44l0.56,0.12l-0.35,0.27l-0.24,0.05ZM556.86,1035.44l0.53,-0.3l0.1,0.14l-0.32,0.15l-0.31,0.02ZM555.04,1028.71l0.36,-0.0l0.14,0.26l-0.28,-0.18l-0.22,-0.08ZM555.47,1019.41l0.17,0.24l-0.65,0.26l-1.01,-0.32l-0.43,-0.55l1.92,0.36ZM552.55,1010.95l1.29,-2.29l1.03,-0.44l-0.05,1.0l-0.61,0.27l-1.17,1.42l-0.49,0.05ZM552.09,1016.43l-0.52,-0.12l-0.04,-0.4l0.48,-0.35l0.53,0.09l-0.45,0.77ZM449.5,1097.99l-1.81,-1.49l-2.34,-0.95l-3.12,-0.35l-4.49,0.07l-1.61,-0.44l-1.36,-2.1l-0.79,-2.1l-1.2,-7.88l-2.7,-5.21l-0.9,-4.6l0.65,-1.1l2.81,-2.33l0.39,-2.05l-0.1,-2.81l0.29,-2.17l0.76,-1.12l0.63,-0.67l0.8,-0.26l3.6,-0.34l1.3,-0.56l0.64,-1.38l0.04,-0.96l-0.68,-0.97l1.18,-2.07l0.8,-2.2l0.43,-0.58l2.58,-1.66l0.62,-0.98l0.48,-4.65l0.41,-1.0l3.27,-4.5l0.36,-1.05l-0.16,-1.17l-1.11,-1.18l-0.81,-1.57l0.17,-2.75l0.71,-1.14l0.29,-1.64l3.38,-1.38l2.65,-2.83l2.69,0.09l3.47,1.51l1.19,0.16l1.94,-0.77l4.16,-0.95l9.35,-4.3l5.65,-0.17l1.51,-1.08l2.92,-5.11l1.57,-1.53l2.15,-1.04l4.33,-0.88l4.7,-1.71l3.23,-1.76l1.59,-2.02l0.74,-2.3l-0.01,-4.36l0.37,-1.45l1.47,-1.39l3.03,-1.66l-0.13,-0.79l-2.1,-1.88l0.07,-0.75l0.75,-1.31l2.11,-2.13l3.0,-3.88l1.34,4.12l0.39,0.31l0.81,-0.3l0.45,-3.59l-0.25,-2.02l-0.49,-1.23l2.72,-0.69l1.59,0.24l2.26,1.72l2.41,0.53l0.83,0.96l0.3,1.5l-0.11,3.47l0.48,1.6l3.02,3.37l0.51,1.22l0.52,0.22l0.22,-0.52l-2.32,-5.19l-0.61,-2.52l0.79,-2.66l2.23,-0.94l0.64,0.29l0.06,3.45l0.36,1.41l2.98,7.6l2.39,4.77l1.56,1.52l2.94,0.75l2.6,1.47l0.21,1.52l1.64,1.59l1.02,-0.0l0.36,-0.5l-0.3,-1.49l1.38,0.4l-0.25,5.68l-1.7,-0.1l-0.77,-0.43l-4.87,-6.03l-2.23,-2.2l-2.22,-0.96l-0.45,0.1l-0.06,0.46l0.7,1.3l2.31,3.18l0.28,1.51l-0.69,1.48l-4.18,4.91l-1.12,0.69l-1.42,0.27l-2.94,-0.12l-1.62,0.28l-1.26,0.93l-0.47,1.65l0.39,0.49l1.23,-0.01l2.66,-1.03l17.02,-0.6l2.53,1.11l-0.6,1.87l-1.04,1.25l-1.37,0.71l-4.04,0.93l-1.13,-0.01l-0.9,-0.4l-1.86,-2.78l-0.65,0.1l-0.78,1.66l-1.37,1.24l-1.57,0.81l-5.14,1.21l-1.6,1.06l-0.29,1.41l-2.08,0.08l-0.6,0.31l-0.51,1.72l-1.06,1.14l0.39,0.3l2.53,0.17l-2.07,1.83l-1.63,-1.27l-1.1,-0.14l-0.35,0.63l1.65,2.67l-1.29,0.64l-1.6,1.37l-2.94,1.0l-3.8,2.81l-3.91,1.19l-1.84,1.31l-3.02,3.09l-2.17,1.41l-2.23,0.31l-5.13,-0.44l-0.43,0.4l0.2,1.03l1.79,1.06l-0.31,0.21l-1.84,-0.16l-1.23,0.59l2.27,1.56l-0.19,1.57l1.25,0.93l1.84,0.45l-0.88,0.5l-3.91,-0.09l-3.9,-0.95l-1.41,-1.05l0.88,-0.25l1.86,0.51l0.15,-0.42l-0.56,-3.0l-0.66,-0.81l-0.86,-0.12l-2.49,1.42l-1.2,-1.1l-0.5,-0.17l-0.72,0.27l-2.15,1.93l0.02,1.26l0.73,1.67l-1.79,0.91l-1.27,-0.02l-2.32,-1.13l-0.48,0.2l0.12,0.5l8.59,6.33l-1.43,0.25l-0.97,-0.22l-0.49,0.39l0.01,1.17l0.4,0.4l5.29,0.02l1.67,-0.75l0.36,0.08l0.42,1.1l0.79,0.26l2.6,-4.4l4.08,-1.25l4.74,0.63l3.31,1.31l-0.94,0.94l0.17,0.69l2.05,0.49l1.32,-0.32l0.84,-1.5l-2.12,-4.22l2.7,0.0l0.39,-0.3l-0.2,-0.45l-3.82,-2.3l-0.44,-1.05l3.25,0.18l1.67,0.58l1.61,1.12l0.68,2.18l4.24,1.88l-0.42,0.68l-3.61,-0.57l-0.42,0.3l0.22,0.47l1.54,0.69l4.38,1.4l0.79,1.4l-0.41,1.21l-1.08,0.57l-3.53,0.16l-3.16,0.83l-1.95,-0.94l-2.03,-0.47l-6.57,0.58l-1.37,-0.48l0.36,-1.76l-0.37,-0.51l-1.5,-0.01l-2.43,1.27l-1.05,0.98l0.09,0.64l1.55,1.09l1.03,1.59l-1.9,-0.02l-0.92,0.55l-0.15,0.46l0.43,1.26l4.19,1.96l1.61,0.39l1.75,1.0l1.56,1.46l0.23,0.43l-4.91,-3.11l-1.76,0.13l-0.35,0.39l0.16,1.54l1.21,0.81l2.33,0.47l0.75,1.74l0.64,0.82l0.52,0.1l-0.23,1.08l0.53,0.38l2.1,-0.57l0.03,1.62l-0.41,0.8l-0.35,0.2l-0.72,-0.45l-1.63,-0.24l-2.64,0.63l-2.46,1.05l-1.3,1.15l-0.09,0.48l1.62,0.15l0.53,0.69l-4.8,1.8l0.85,-0.54l0.02,-0.66l-0.51,-0.37l0.67,-0.62l0.0,-0.63l-0.37,-0.4l-2.27,0.11l-2.68,2.03l-2.17,0.19l-1.16,0.49l-2.03,3.05l-0.66,0.37l-3.5,-0.13l-0.4,0.5l0.3,1.35l-1.13,-0.41l-1.05,0.14l-0.75,0.64l-0.07,0.53l0.93,1.36l-2.69,3.46l-1.1,2.32l0.58,2.87l-0.55,1.16l-0.77,0.68l-1.06,0.42l-1.02,0.02l-0.79,-0.52l-0.6,0.22l-0.38,1.31l-0.11,3.48l-0.82,-0.98l-0.24,-0.99l0.41,-1.49l-0.83,-1.86l-0.92,-0.67l-1.32,0.23l-0.97,-0.5l-1.92,-2.51l-1.3,-0.76l-0.05,1.84l0.8,2.17l1.02,1.62l-1.12,2.06l0.55,-2.7l-0.24,-0.51l-2.05,-0.73l-0.14,-1.58l0.35,-2.2l-0.71,-2.03l0.0,-0.56l0.97,-1.57l0.35,-3.13l-0.29,-4.83l0.83,-2.25l0.01,-1.31l-1.26,-0.91l-1.08,0.42l-0.81,0.83l-0.45,1.25l-0.1,3.08l-0.31,1.29l-0.39,0.33l-2.6,-2.44l0.16,-1.19l1.33,-2.19l0.38,-1.64l-0.91,-2.32l-1.57,-1.65l-0.48,-0.04l-0.17,0.45l0.92,3.28l-1.6,2.44l-2.35,1.35l-0.23,0.48l0.61,2.05l-0.4,4.0l1.1,1.49l-1.41,4.51l-0.7,-0.15l-0.52,0.41ZM547.92,1037.33l1.36,-0.32l1.18,0.12l-1.09,0.6l-1.45,-0.4ZM547.62,1030.31l0.64,-0.68l0.57,0.55l-0.35,0.16l-0.86,-0.03ZM544.89,1012.85l-0.03,0.68l0.68,0.32l-0.01,0.36l-0.75,0.8l-1.88,0.22l-1.31,-0.53l-0.93,0.53l-2.02,0.12l-0.18,-0.4l0.71,-1.41l3.89,-5.26l1.0,0.48l1.03,1.65l-0.2,2.46ZM543.98,1031.85l-1.26,0.51l-1.67,-0.41l-0.58,0.22l-1.4,3.76l-1.08,0.38l-1.17,-0.42l-0.23,-0.82l0.54,-0.81l4.63,-4.32l0.74,-0.29l0.59,0.38l1.29,1.68l-0.42,0.13ZM542.79,1052.93l1.05,0.46l-1.45,1.48l-0.46,-1.53l0.86,-0.41ZM541.85,1056.73l-0.33,0.26l-0.85,-0.46l-1.3,-1.3l-0.02,-0.37l0.34,-0.32l0.62,0.03l0.84,0.61l0.61,0.85l0.09,0.7ZM540.63,1067.13l-1.13,-0.67l-0.08,-0.41l0.57,-0.05l0.67,0.76l-0.04,0.36ZM536.98,1062.37l0.56,-2.06l0.32,-0.48l0.54,0.28l-0.02,0.74l0.31,0.31l-0.81,0.92l-0.91,0.28ZM539.0,1059.88l0.3,-0.29l0.71,0.3l-0.51,-0.02l-0.5,0.01ZM539.29,1052.7l-0.88,0.92l-1.05,-0.11l-0.6,-1.21l0.7,-1.22l2.3,-0.67l0.57,0.82l-1.03,1.47ZM530.64,1036.85l1.55,-0.92l4.63,-4.33l3.41,-2.08l-4.38,4.41l-1.89,1.24l-0.29,0.63l-3.02,1.05ZM535.62,1028.01l2.03,-0.92l0.73,0.99l-0.63,0.27l-1.01,-0.52l-1.12,0.17ZM537.22,1063.98l0.08,-0.04l0.57,0.02l-0.05,0.04l-0.6,-0.02ZM536.36,1055.5l-0.38,0.22l-0.22,-0.42l0.24,-0.31l0.36,0.51ZM527.94,1047.68l2.32,-0.59l0.31,0.27l-2.63,0.33ZM531.48,1047.24l0.14,-0.25l1.94,-0.03l-0.01,0.02l-2.08,0.26ZM530.38,1068.64l-0.12,0.67l-0.4,0.03l-1.43,-0.73l-1.09,-0.18l0.09,-0.68l0.84,-1.13l1.2,-0.86l1.09,-0.29l1.65,0.35l0.15,0.48l-1.97,2.34ZM530.83,975.72l-0.08,0.57l0.47,0.22l0.67,-0.23l0.34,1.07l-2.72,0.92l-2.19,-0.47l-0.66,-2.42l0.28,-0.94l0.79,-0.53l0.0,-0.38l-0.97,-1.19l1.98,0.62l0.85,1.33l1.14,0.66l0.11,0.77ZM527.72,1074.8l-4.52,2.25l-0.08,-0.04l1.84,-2.64l0.69,-0.2l2.3,0.42l-0.23,0.21ZM525.14,1057.83l2.73,2.21l0.28,1.56l-0.32,0.99l-0.87,0.7l-2.96,1.16l0.72,-1.05l-0.22,-1.87l-0.53,-1.05l-2.24,-2.38l3.4,-0.27ZM515.32,1044.34l0.79,-1.21l2.18,-2.07l2.53,-1.04l1.37,-0.02l1.23,0.4l1.0,1.23l1.21,-0.11l-1.67,0.61l-1.76,1.49l-0.75,0.28l-0.6,0.53l-0.36,0.92l-1.78,-0.4l-0.91,1.16l0.7,1.92l-0.17,0.78l-0.63,0.05l-0.23,-0.7l-0.45,-0.27l-0.33,0.41l0.14,2.83l-1.02,0.38l-0.4,0.51l-0.82,-2.13l-1.15,-1.75l-0.54,-1.85l0.16,-0.48l1.22,-0.33l0.51,0.18l0.51,0.97l0.7,0.01l0.08,-0.84l1.1,-0.31l0.19,-0.58l-2.05,-0.62ZM521.95,1050.58l1.26,-1.14l2.54,-0.08l0.8,-0.5l0.72,0.12l-1.35,0.42l-0.32,0.4l0.13,0.38l-1.74,-0.21l-0.83,0.48l-1.23,0.13ZM521.28,1077.43l0.49,-0.81l0.2,-0.09l-0.36,0.66l-0.33,0.25ZM518.56,1086.69l-0.0,-0.69l0.42,-0.46l-0.21,1.06l-0.21,0.09ZM519.08,1071.95l0.06,-0.01l-0.0,0.03l-0.05,-0.02ZM513.2,1066.37l4.59,2.32l-3.23,-0.19l-1.49,-1.09l-0.64,0.34l0.25,2.56l1.29,0.79l2.05,-0.18l-0.93,0.97l-1.84,-0.24l-3.47,-2.31l-2.58,-0.65l-1.18,-2.03l-2.58,-1.3l5.62,0.07l4.12,0.95ZM517.31,1082.25l0.24,-0.25l0.14,0.06l-0.39,0.18ZM513.22,1089.7l0.51,0.07l0.07,1.07l-0.58,0.78l-0.34,-0.04l0.34,-1.89ZM502.07,1089.77l1.5,-0.88l0.29,-0.88l-0.35,-0.59l2.64,-1.4l2.43,-1.93l1.45,-0.43l0.49,2.56l-2.06,2.71l-1.49,0.94l-0.57,2.4l-0.83,1.23l-1.27,0.01l-0.92,0.38l-1.21,-0.76l-0.82,-1.39l1.1,-0.32l0.21,-0.51l-0.61,-1.14ZM502.94,1053.26l1.78,0.5l-1.34,0.1l0.23,0.63l2.37,0.58l-1.77,-0.07l-0.77,-0.36l-0.5,-1.38ZM506.24,1073.2l0.05,0.02l0.01,0.06l-0.07,-0.08ZM498.28,1102.06l-4.47,1.14l-1.5,0.85l-1.01,-0.32l0.09,-0.59l0.97,-1.38l3.31,-2.35l2.51,-0.3l3.38,-1.62l-0.13,0.56l-0.88,0.82l-3.23,1.32l-0.19,0.94l1.16,0.93ZM500.56,1052.15l-1.77,0.29l0.08,-1.16l0.47,-0.4l0.63,0.16l1.35,0.86l-0.76,0.25ZM493.71,1057.9l-2.13,-0.1l-0.38,0.25l1.13,1.59l-0.45,0.66l-1.27,0.27l-1.55,-0.21l-2.71,-1.51l-1.04,-2.28l0.76,-0.29l7.63,1.62ZM488.04,1104.06l1.17,-0.7l0.46,-1.81l2.01,-0.34l-3.05,2.72l-0.58,0.14ZM481.53,1098.6l0.51,-1.94l1.47,-1.06l0.17,-1.35l1.15,-1.12l1.5,0.16l3.08,-0.64l2.1,0.2l-1.79,0.62l-0.08,0.81l1.09,-0.05l-0.16,0.74l-0.85,-0.49l-1.01,0.36l-0.67,-0.66l-0.64,0.03l-0.19,0.43l0.28,2.6l-0.26,0.55l-0.66,0.31l-0.69,-0.19l-1.57,-1.18l-2.79,1.87ZM488.73,1089.61l0.59,0.51l-0.71,0.39l-0.68,-0.3l0.79,-0.6ZM484.73,1109.25l-0.31,-0.62l0.8,-1.08l1.73,-1.27l-0.39,1.69l-1.55,0.72l-0.28,0.56ZM478.57,1101.62l-0.36,-0.36l-0.65,-0.04l1.52,-2.39l0.21,1.92l-0.73,0.88ZM479.27,1098.53l0.0,-0.0l0.48,-0.5l-0.17,0.29l-0.31,0.21ZM464.08,1114.84l1.3,-1.01l0.15,-1.03l-0.46,-2.28l0.13,-0.44l0.68,-0.36l-0.24,-2.22l1.83,-2.01l0.22,0.95l-1.04,1.21l-0.66,1.61l0.36,0.61l1.57,0.47l0.4,1.07l0.07,2.32l-0.93,0.64l-0.13,0.67l-0.63,-0.28l-2.62,0.07ZM458.09,1110.34l0.2,0.17l-0.11,0.5l-0.15,-0.37l0.06,-0.31ZM453.97,1102.72l-0.46,-0.9l0.05,-1.77l-1.06,-1.45l0.16,-1.64l1.31,-2.84l-0.13,-5.18l0.59,-0.74l0.33,1.03l1.25,0.95l0.47,1.06l0.81,2.98l0.06,1.39l-0.47,1.65l0.26,2.18l-0.62,2.49l-0.79,0.57l-0.04,1.18l-1.0,-1.19l-0.71,0.25Z\",\n            name: \"Stockholm\"\n          },\n          \"SE-\": {\n            path: \"M117.39,1399.24l-0.38,0.12l-1.79,-2.07l1.54,0.13l1.05,0.7l0.1,0.42l-0.52,0.7Z\",\n            name: \"\"\n          }\n        },\n        height: 1452.0211302823068,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"south_america_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 905.8723093907364,\n          bbox: [{\n            y: -1391900.644539083,\n            x: -12188330.527048683\n          }, {\n            y: 6974170.643481547,\n            x: -3876492.223609794\n          }],\n          left: 0\n        }],\n        paths: {\n          PY: {\n            path: \"M617.96,397.13l0.51,1.91l1.38,1.97l0.3,2.45l1.0,1.01l-0.05,1.74l0.83,1.52l0.04,1.56l-0.79,2.14l0.2,0.71l-0.84,1.85l0.34,2.51l-0.39,1.88l0.17,0.76l-0.61,1.7l0.39,1.02l1.95,0.65l1.21,-0.52l1.83,1.03l2.79,0.41l1.23,-0.23l3.66,0.95l3.93,-0.58l1.27,-1.62l0.68,-0.25l2.31,2.35l4.74,0.56l0.93,1.05l0.07,1.18l0.56,1.17l0.98,0.9l-0.38,2.67l0.61,2.74l0.48,0.79l0.07,1.93l0.43,1.23l-0.23,2.16l0.98,1.51l0.19,2.21l0.44,1.29l0.79,0.59l2.22,0.34l2.64,-0.58l4.14,-2.0l1.99,1.02l1.98,1.6l-0.65,0.98l0.44,2.31l-0.37,2.72l-1.7,6.89l0.19,0.79l-2.08,4.0l-0.26,7.36l-0.54,3.86l-0.91,2.83l-0.75,1.36l-1.31,0.69l-0.41,0.81l-1.98,1.6l-0.15,0.58l-3.31,0.93l-0.92,1.42l-0.93,0.58l-0.44,0.95l0.04,0.94l-1.19,1.34l-0.63,0.01l-2.02,-1.17l-1.4,-0.23l-1.29,0.18l-1.17,0.72l-1.52,2.14l-0.42,0.11l-0.91,-0.8l-1.12,-0.26l-1.47,0.32l-0.9,-0.1l-0.93,-0.59l-1.23,-0.06l-1.71,0.44l-3.26,-0.5l-5.11,-1.49l-4.29,-0.56l-5.03,0.5l-0.32,-1.1l0.2,-0.59l0.84,-0.63l1.26,-2.01l1.43,-0.89l0.0,-0.67l0.66,-0.53l0.44,-1.29l0.59,-0.7l-0.14,-3.19l1.09,-2.51l2.55,-2.09l1.75,-4.11l2.13,-2.02l0.17,-1.15l-1.03,-1.97l-2.17,-2.5l-1.74,-1.19l-2.27,-0.98l-1.4,-0.3l-0.78,0.28l-0.42,-0.16l-0.74,-0.85l-1.17,-0.66l-2.51,-0.75l-5.54,-2.85l-8.55,-6.02l-2.63,-1.08l-1.95,0.03l-2.86,-0.63l-3.98,-1.33l-2.19,-1.23l-0.67,-1.28l-1.49,-1.27l-2.41,-1.31l-1.98,-1.74l-2.72,-1.73l-1.52,-1.52l-1.64,-2.37l-1.82,-3.31l-1.91,-2.2l-2.96,-1.82l-0.24,-0.59l4.43,-14.56l0.02,-6.33l4.27,-6.28l1.89,-5.0l20.85,-4.31l10.9,-0.14l10.79,6.54l0.38,1.99l-0.23,2.03Z\",\n            name: \"Paraguay\"\n          },\n          CO: {\n            path: \"M382.29,58.03l1.56,1.88l0.98,-0.25l2.33,-1.73l0.19,-1.72l1.79,-1.65l-1.04,-2.95l-0.78,-1.05l-0.8,-1.99l-0.67,-0.67l0.8,-1.35l0.99,1.69l1.67,1.23l1.6,1.76l0.66,1.21l0.85,0.55l-0.61,0.55l-0.15,0.73l0.42,0.74l0.73,0.4l1.24,-0.35l0.59,-1.11l-0.36,-3.74l-0.58,-1.95l-1.11,-1.22l2.52,-1.13l4.97,-3.58l1.8,-3.44l1.22,-1.13l1.32,-0.71l1.84,0.16l1.66,-0.66l0.45,-1.32l-0.86,-2.26l0.99,-3.06l-0.02,-1.6l0.61,-0.86l-0.23,-0.83l-0.47,-0.08l0.57,-0.7l0.72,-2.4l0.5,-0.9l1.92,-1.37l0.46,-0.73l3.88,-3.31l0.74,-0.51l4.13,1.29l-0.32,0.28l-0.23,1.24l0.86,1.06l1.13,0.18l0.71,-0.74l1.56,-3.51l0.25,-1.96l0.51,-0.5l0.81,-0.19l3.06,0.77l1.53,0.07l4.63,-0.37l7.08,-5.05l3.26,-1.08l2.13,-1.09l1.48,-2.23l0.37,-1.53l0.73,-0.46l1.16,-0.09l0.7,-0.9l2.26,-1.24l2.45,-0.14l2.61,1.11l1.18,1.92l0.17,1.15l-2.04,2.08l-0.88,0.44l-6.86,2.03l-3.47,5.68l-2.36,1.01l-2.99,3.45l-2.24,4.36l-1.65,8.53l-4.17,6.75l-0.05,0.91l0.7,0.41l1.73,-0.32l1.57,-0.75l1.08,1.47l1.73,0.21l1.53,5.67l3.03,3.09l0.28,1.03l0.37,2.2l-1.05,1.57l-0.28,5.55l0.35,0.84l0.7,0.64l2.22,0.57l1.42,3.15l1.16,0.98l1.59,0.53l3.22,-0.51l5.94,0.56l1.52,-0.12l3.19,-1.13l0.89,0.08l3.23,1.33l3.11,0.24l8.1,9.77l0.58,0.26l0.74,-0.25l1.13,0.56l1.03,-0.25l1.18,-0.78l1.68,-0.15l2.44,0.5l3.24,-0.0l4.0,-0.5l2.46,-0.54l0.98,-0.57l3.23,0.55l0.85,0.61l0.46,1.64l-0.34,0.94l-1.24,1.23l-0.71,1.63l-0.13,1.75l-0.56,1.19l-1.19,1.0l-0.44,1.27l0.23,1.82l-0.61,7.54l0.53,0.81l0.35,2.99l1.52,4.17l0.71,1.15l1.29,1.0l2.13,3.14l-0.36,0.75l-5.79,5.18l-0.45,0.76l0.03,0.74l0.56,0.35l0.98,-0.42l1.57,0.43l0.66,1.25l4.09,3.45l-0.07,1.32l1.17,2.57l-0.12,0.84l1.66,3.72l0.07,0.9l1.15,2.95l0.01,1.28l-1.7,0.4l0.02,-4.85l-0.37,-1.18l-2.84,-4.69l-0.9,-0.57l-0.84,-0.04l-1.3,0.64l-3.15,3.42l-1.23,0.42l-0.83,-0.34l-1.13,-1.95l-0.94,-0.54l-0.78,0.46l-0.53,1.5l0.58,1.21l-13.01,0.01l-2.73,-0.63l-3.63,0.78l-0.43,0.4l-0.04,7.83l0.53,0.38l0.58,-0.2l4.28,0.47l1.36,-0.17l0.52,0.34l1.04,1.68l0.07,2.24l-1.95,-0.23l-1.53,-0.92l-4.05,1.48l-2.91,0.34l-0.36,0.39l-0.16,8.83l0.4,0.81l1.46,1.46l3.45,2.29l0.41,1.31l-0.22,1.57l0.91,2.04l1.07,0.93l-0.03,0.91l0.57,1.24l-6.52,35.85l-2.02,-1.67l-0.8,-1.87l-1.34,-1.01l-2.43,0.56l-1.95,-0.86l7.71,-12.05l0.15,-0.77l-0.67,-0.91l-1.66,-0.57l-2.19,-1.44l-2.71,-1.02l-0.69,-0.74l-3.29,-1.68l-1.92,0.47l-1.09,0.84l-2.1,0.23l-1.96,-1.3l-2.57,-0.87l-0.78,0.26l-2.04,1.82l-0.94,0.05l-1.83,0.85l-2.05,0.32l-2.9,-0.91l-1.1,0.49l-2.39,0.05l-0.67,-0.68l-1.79,-0.66l-0.14,-0.55l0.53,-1.63l-0.9,-3.15l-0.53,-0.68l-1.58,-0.08l-1.53,-0.94l-0.23,-0.43l0.32,-1.31l-0.33,-1.05l-1.79,-2.55l-1.0,-0.53l-1.48,-0.19l-2.25,-1.97l-2.36,-0.75l-0.88,-1.2l-1.1,-3.4l-2.43,-2.59l-1.65,-0.86l-0.51,-1.08l-1.95,-0.35l-2.39,-1.67l-1.12,-0.11l-0.83,0.71l-1.87,-0.71l-1.81,-1.2l-2.0,-0.37l-1.13,-0.68l-2.27,-2.35l-2.6,-1.21l-0.77,-0.07l-1.02,0.6l-0.42,0.57l-0.11,1.15l-0.53,0.2l-2.73,-0.44l-0.54,0.36l-0.64,-0.06l-3.31,-1.25l-2.26,-0.1l-1.1,-0.36l-0.8,-2.85l-2.15,-1.04l-0.63,-1.31l-1.83,-0.07l-2.4,-0.85l-3.25,-1.74l-2.39,-1.83l-2.03,-1.02l-2.09,-2.02l-0.43,-0.89l-1.37,-1.0l0.6,-1.14l1.73,-1.01l2.43,0.84l0.53,-0.31l0.32,-1.81l-0.93,-1.77l0.38,-3.3l0.62,-0.73l1.16,-0.61l0.77,0.24l0.83,-0.56l1.92,0.24l0.84,-0.28l1.77,-1.55l0.54,-1.01l0.53,0.08l0.45,-0.32l1.74,-2.05l-0.35,-1.59l1.65,-0.61l1.61,-3.0l0.86,-0.36l0.37,-1.45l2.97,-5.29l-0.41,-0.58l-1.18,0.59l-0.58,-0.19l0.15,-1.51l-0.55,-0.6l-0.53,0.11l-0.61,0.87l-0.47,-0.79l0.23,-2.17l-0.57,-0.33l1.22,-1.33l0.81,-4.16l-0.63,-1.42l-0.41,-5.85l-0.46,-1.29l-1.22,-1.12l2.21,-1.49l0.95,-1.66l-1.15,-2.6l-1.47,-2.16l-0.02,-0.62l0.88,-0.37l0.46,-2.78l-0.16,-1.13l-0.85,-1.39l-1.15,-0.22l-3.27,-5.22l-1.04,-1.0l0.75,-2.21l0.65,-0.42l0.41,-0.84l-0.26,-1.77ZM377.29,119.74l-0.18,-0.14l-0.03,-0.35l0.19,0.19l0.03,0.3Z\",\n            name: \"Colombia\"\n          },\n          VE: {\n            path: \"M451.67,10.36l0.06,2.29l1.39,2.81l1.8,1.73l-0.62,0.51l0.49,1.94l1.11,1.39l0.04,0.63l-0.8,2.44l-3.51,4.12l-1.87,3.97l1.4,2.05l0.27,1.17l2.47,2.5l-0.19,1.07l0.57,1.54l0.81,0.86l0.95,0.32l1.12,-0.02l2.97,-0.98l0.82,-0.56l1.93,-2.47l0.4,-4.32l-0.36,-1.69l-2.29,-3.98l-1.44,-1.4l-1.54,-4.23l-0.28,-1.64l0.97,-0.9l-0.08,-1.21l2.22,-0.4l5.31,-2.53l3.32,-0.65l3.78,-1.36l2.02,-1.88l2.17,1.0l1.19,-0.57l0.4,-1.09l1.36,1.25l4.73,-0.46l2.15,0.69l2.65,0.35l5.0,3.19l1.34,3.16l-0.53,0.96l0.38,1.55l0.85,1.59l1.36,1.02l3.34,0.25l8.88,-1.19l1.76,-0.49l8.81,-0.26l1.44,0.59l0.26,1.24l2.88,2.62l2.52,0.45l2.03,0.84l4.45,1.1l3.53,-0.39l7.89,-4.33l4.17,0.11l1.46,-0.74l-0.07,-0.7l-1.58,-0.67l-3.12,-0.25l2.84,-0.27l4.51,0.25l3.78,-0.81l2.95,0.02l2.89,-0.51l5.49,0.61l3.11,-0.35l-2.98,0.35l-1.85,1.06l-3.74,-0.19l-2.65,0.38l-0.34,0.36l0.85,0.62l0.19,1.15l0.8,0.28l0.93,1.07l0.25,0.96l-0.89,1.93l0.42,0.22l1.28,-0.28l0.61,-0.56l0.15,-0.95l2.61,4.93l0.92,0.06l0.67,-0.75l0.66,0.39l0.49,-0.5l0.07,-1.45l0.36,0.08l1.86,1.18l0.76,0.95l0.16,0.71l1.52,1.36l0.32,-0.37l0.05,-0.87l-0.36,-0.99l1.26,-0.02l0.61,-0.77l3.03,2.97l3.58,0.95l2.35,2.07l-0.4,0.8l-1.42,0.53l-0.85,0.93l-1.22,3.83l-1.36,2.68l-4.25,0.03l-0.38,0.3l0.19,0.45l3.76,2.25l0.46,0.0l1.23,-0.87l1.95,-0.11l2.67,-1.15l3.78,0.54l1.8,-0.98l1.94,0.13l1.65,0.75l2.11,2.79l-1.52,0.97l-0.82,1.63l-1.68,0.71l-2.36,1.95l-1.73,0.27l-0.6,0.63l-0.63,1.46l-1.23,1.27l-0.07,0.98l1.25,1.92l-0.32,0.81l0.14,0.8l0.82,0.79l2.76,0.04l-0.25,1.24l-0.42,0.56l-3.74,2.04l-1.78,-0.2l-0.95,0.67l-2.64,0.61l-0.76,1.63l0.62,1.69l0.25,2.62l-3.06,3.2l0.19,0.9l7.65,8.53l0.82,0.46l0.73,1.86l-0.23,0.96l-1.25,1.3l-1.96,1.05l-1.21,1.85l-1.0,0.3l-2.38,-0.03l-0.98,0.94l-1.48,0.51l-0.83,1.27l-6.99,2.2l-3.19,-0.67l-2.41,1.37l-1.28,0.33l-0.57,1.26l-0.28,3.07l-0.88,0.76l-1.01,-0.0l-4.47,-4.19l-2.45,0.55l-1.55,-0.55l-4.26,0.14l-1.07,-1.54l-1.06,-0.83l-4.62,-0.17l-1.63,-1.56l-1.35,0.09l-0.33,1.0l1.81,2.68l5.29,4.98l0.04,4.53l2.2,4.98l0.32,1.43l-0.47,1.81l0.15,0.53l1.72,0.71l6.15,0.46l-0.11,1.78l-0.6,0.8l-1.36,0.24l-3.19,1.68l-2.09,0.6l-0.5,0.57l-0.92,3.32l-1.0,0.99l-1.08,0.81l-2.24,0.07l-2.88,2.35l-1.09,-0.01l-3.51,1.83l-1.96,2.15l-1.26,0.87l-1.23,1.95l-0.42,0.02l0.4,-1.64l-0.52,-1.0l-1.81,-0.9l-1.67,0.59l-2.95,1.81l-3.18,0.24l-6.2,-5.36l-0.09,-1.58l-1.14,-2.89l-0.1,-0.97l-1.66,-3.77l0.15,-0.68l-1.18,-2.59l0.18,-0.77l-0.28,-0.89l-4.27,-3.63l-0.63,-1.21l-1.95,-0.59l-0.86,0.26l6.02,-5.53l0.6,-1.29l-2.32,-3.65l-1.29,-1.0l-0.64,-1.04l-1.45,-3.99l-0.37,-3.08l-0.48,-0.67l0.62,-7.4l-0.24,-1.65l0.37,-1.06l1.15,-0.95l0.67,-1.49l0.13,-1.75l0.62,-1.36l1.27,-1.27l0.42,-1.16l-0.66,-2.33l-1.17,-0.81l-1.92,-0.52l-1.68,-0.07l-1.13,0.6l-2.38,0.52l-3.92,0.49l-3.13,-0.0l-2.5,-0.5l-1.84,0.17l-2.0,0.99l-1.1,-0.54l-0.83,0.22l-7.84,-9.65l-0.56,-0.3l-3.16,-0.25l-3.21,-1.33l-1.09,-0.11l-3.46,1.16l-1.32,0.09l-5.9,-0.56l-3.26,0.5l-1.21,-0.45l-0.82,-0.68l-1.44,-3.22l-2.44,-0.76l-0.72,-1.05l0.31,-5.13l1.07,-1.65l-0.4,-2.46l-0.43,-1.36l-2.93,-2.91l-1.55,-5.75l-0.89,-0.58l-1.19,0.02l-0.51,-1.1l-0.81,-0.44l-3.41,1.04l4.24,-6.94l1.67,-8.58l2.13,-4.13l2.81,-3.27l2.52,-1.15l2.87,-4.97ZM545.6,22.4l-0.48,0.2l-0.11,-0.2l0.47,0.01l0.12,-0.01ZM477.95,9.05l-1.38,-0.12l-3.1,0.53l-0.93,-2.76l0.89,-2.29l2.03,-0.82l0.87,0.63l0.89,1.27l0.73,3.57ZM451.82,10.18l0.36,-0.43l0.42,-0.11l-0.29,0.15l-0.5,0.39ZM457.21,8.44l0.52,-0.19l-0.25,0.13l-0.26,0.06ZM583.99,43.13l-0.26,0.09l-0.05,-0.57l1.3,-1.07l0.44,0.72l-1.43,0.84ZM543.68,17.62l0.28,-0.37l1.2,-0.33l1.08,0.82l-2.55,-0.13ZM546.28,17.77l1.28,0.14l0.62,-0.99l1.03,-0.91l0.16,0.14l0.33,1.34l-0.97,1.02l-1.39,0.03l-1.06,-0.78ZM531.54,18.25l0.57,0.0l0.46,0.27l-0.95,-0.22l-0.07,-0.05Z\",\n            name: \"Venezuela\"\n          },\n          CL: {\n            path: \"M517.81,894.4l-0.79,0.6l-0.46,-0.09l0.86,-0.87l0.51,0.17l-0.13,0.19ZM421.18,761.07l-2.03,-0.3l-1.45,-0.97l-2.2,-0.83l-0.44,-1.36l0.76,-1.63l-0.34,-0.57l-0.7,0.08l-1.47,1.3l-3.87,0.91l-1.03,0.73l-0.3,0.45l0.13,0.56l1.37,0.37l0.57,1.35l-0.32,0.68l-0.48,0.05l-1.49,-1.05l-0.77,-1.17l0.02,-0.86l0.53,-1.27l4.9,-3.62l2.05,-2.01l1.78,-1.11l0.08,-0.61l-1.69,-2.18l0.07,-1.51l3.28,-0.69l3.63,0.25l3.78,-1.12l0.91,-0.86l0.27,-0.74l-0.46,-2.78l0.79,-0.87l0.81,-0.17l1.1,0.44l-1.54,5.48l-1.13,1.55l0.35,1.85l-0.57,0.88l-3.56,1.23l-0.28,0.59l0.62,0.64l1.97,-0.11l1.65,-0.32l1.47,-1.03l1.2,-4.69l1.18,-0.37l0.27,0.4l-0.15,3.02l-1.2,4.5l-1.44,1.8l-0.25,0.78l0.06,0.58l0.43,0.36l1.46,-0.22l0.97,-1.09l1.32,-3.1l0.41,-4.74l0.46,-1.41l-0.17,-2.14l-1.88,-1.11l-0.21,-0.82l0.49,-1.81l2.11,-0.03l2.03,-1.48l1.21,-0.49l3.23,1.51l0.71,0.07l0.41,-0.46l-0.63,-1.13l-3.04,-2.07l-2.39,-0.3l0.38,-1.57l0.44,-1.61l3.33,-0.88l4.09,-2.77l0.88,-2.38l0.2,-2.34l-0.28,-0.42l-1.91,-0.59l-5.02,-3.18l0.42,-3.5l1.89,-0.74l0.87,-3.39l-1.23,-2.75l0.26,-1.68l1.55,-1.55l0.75,-2.29l1.19,-0.1l0.36,-0.38l-0.1,-1.98l-0.95,-1.54l-0.03,-1.83l0.76,-2.02l1.31,0.11l0.47,-0.71l-1.0,-1.42l-0.67,-1.77l1.28,-0.63l0.77,0.62l1.39,2.52l0.73,-0.07l0.22,-0.66l-1.03,-6.09l-0.51,-0.33l-1.42,0.4l-1.16,-0.19l-0.76,-0.9l0.79,-1.26l0.88,-0.73l1.98,-0.28l1.69,-1.12l0.67,-2.4l-0.55,-0.46l-0.5,0.21l-0.97,1.97l-1.14,0.53l-1.24,-0.38l-1.71,-1.69l-1.92,-0.46l-1.1,0.6l-1.87,2.85l-0.66,0.4l-3.21,0.22l-1.16,-0.32l-0.99,-0.33l0.39,-0.93l0.87,-0.68l0.01,-0.44l-0.36,-0.41l-0.95,-0.1l-1.04,-0.7l-1.79,-5.56l-0.2,-1.9l0.74,-1.44l1.64,-5.77l0.51,-2.94l0.87,-2.54l0.01,-1.61l2.1,-1.43l1.02,-1.12l1.94,-5.2l0.31,-2.9l-3.54,-10.18l-0.14,-1.9l0.81,-4.57l-0.68,-2.04l-1.7,-2.87l-0.03,-1.31l0.71,-1.78l-0.67,-1.8l0.56,-1.65l2.57,0.44l1.43,-0.32l0.79,-0.74l0.54,-1.66l0.63,-4.83l1.36,-0.77l1.6,-3.54l1.14,-5.58l2.26,-2.95l-0.34,-2.53l1.38,-1.84l1.38,-2.73l2.04,-2.14l0.49,-2.37l1.54,-4.22l0.77,-4.4l-0.12,-1.7l2.02,-4.56l2.04,-2.38l0.34,-1.8l-0.71,-1.4l-0.02,-1.86l-0.51,-2.37l1.7,-1.62l1.73,-4.25l-0.08,-1.75l0.47,-1.97l-1.1,-2.58l-0.16,-5.34l-1.63,-8.46l0.09,-2.38l-0.66,-4.75l0.45,-3.75l3.26,-2.6l1.03,-6.55l-0.14,-2.86l-0.39,-1.37l-1.53,-1.91l-0.38,-3.37l0.24,-0.73l1.31,-1.02l0.93,-1.39l0.53,-2.24l0.99,-1.8l0.38,-4.07l0.81,-3.21l0.38,-1.04l1.57,-1.94l0.33,-5.2l3.01,-11.05l-0.16,-1.5l0.32,-2.95l-0.93,-2.7l0.92,-2.9l1.7,-2.14l0.53,-1.81l0.07,-1.15l-1.54,-6.68l0.8,-6.51l0.0,-3.12l1.39,-4.07l-0.39,-0.78l-1.16,-0.66l-0.8,-1.28l-0.06,-1.27l0.35,-2.24l1.28,-0.35l0.8,-0.92l0.72,-1.61l0.87,-3.71l0.38,-4.64l1.7,-8.88l-0.01,-3.08l-1.31,-6.65l0.6,-6.19l-0.12,-6.61l-1.43,-5.53l-0.71,-5.45l-0.02,-2.92l-0.58,-2.84l2.15,-0.1l1.58,-0.56l1.71,-1.07l1.05,-1.4l0.53,-1.52l-0.57,-3.4l1.84,-0.52l1.55,-1.29l0.18,0.86l1.59,1.82l0.67,2.27l2.42,1.24l-0.54,1.06l0.63,1.71l1.55,8.66l1.39,1.64l4.58,3.84l-2.7,3.49l0.06,0.76l1.37,1.39l0.16,1.07l-0.35,0.72l-1.34,0.27l-0.66,0.6l0.3,1.93l0.44,0.84l-0.64,0.6l-0.13,0.91l0.33,0.72l2.88,1.88l-0.85,1.02l0.06,2.43l0.59,0.58l1.03,0.27l2.73,4.21l0.13,3.93l0.9,1.79l0.43,2.87l1.1,1.08l0.45,3.44l0.8,1.96l0.03,4.19l1.15,0.93l1.31,0.22l1.61,0.03l4.44,-0.85l1.92,1.96l-4.06,12.75l-10.62,4.51l-3.31,3.25l-0.66,1.51l0.01,1.51l0.42,0.79l0.74,0.43l0.43,1.46l0.45,0.51l-1.25,0.6l-0.58,1.04l-0.63,2.41l-0.08,1.02l1.07,3.27l1.13,5.09l-1.87,2.49l-0.24,1.73l1.34,2.79l1.95,2.61l0.0,1.02l-0.22,0.48l-2.13,0.68l-0.74,0.72l-1.3,-0.48l-1.76,0.68l-1.3,3.38l-0.74,0.69l-2.09,6.08l-0.88,0.62l-2.14,2.75l-0.79,0.32l-0.43,1.04l-1.62,1.82l-0.36,1.88l-0.59,1.15l-0.1,1.83l-0.98,4.01l-1.97,1.91l-0.45,1.09l1.17,6.05l-0.38,3.95l1.33,1.24l-1.15,2.19l-1.43,0.32l-0.48,-0.28l-0.54,0.14l-0.17,1.2l-2.21,6.04l0.43,1.59l-0.8,1.11l-1.02,-0.06l-0.7,0.73l-0.79,5.6l1.77,3.99l0.68,0.56l0.88,0.06l0.6,0.64l-0.27,0.6l-0.89,0.43l-0.1,0.69l0.53,2.48l0.78,0.71l0.31,1.47l0.71,0.66l-0.06,2.0l0.73,2.44l1.08,1.06l-0.81,1.74l0.11,2.49l1.11,1.24l0.84,0.08l0.71,-0.31l0.57,0.27l0.21,1.22l-0.99,2.68l-0.16,1.85l0.49,6.59l-1.6,0.48l-0.79,0.6l-0.56,1.68l-2.27,4.09l-1.25,5.6l-1.9,1.34l0.2,1.23l0.82,0.44l0.16,0.41l-0.05,1.17l0.45,0.88l0.42,3.31l-0.41,1.53l0.13,2.36l-0.47,0.73l-1.36,0.31l-1.85,1.82l-0.42,1.55l-1.61,0.26l-1.93,1.48l-0.41,0.99l0.05,0.89l-1.48,2.77l0.86,3.83l-0.95,2.47l0.74,2.23l-0.59,2.43l0.22,1.99l1.68,3.94l0.73,5.66l1.42,1.4l-0.51,1.61l-0.53,0.65l-1.61,0.29l-2.37,1.23l-1.52,1.36l-0.39,1.01l0.07,4.14l-1.39,4.21l-1.17,-0.16l-0.98,0.72l0.5,3.12l0.39,0.76l-0.23,1.72l-0.39,0.77l-0.74,0.1l-0.46,0.43l-0.32,1.12l0.35,1.18l1.1,1.06l-1.27,1.28l-1.51,3.54l-0.16,1.56l0.82,1.61l-0.22,7.08l0.24,2.36l-0.44,1.53l1.9,5.57l-0.09,0.53l-0.99,0.56l-0.76,0.21l-0.43,-0.35l-0.83,0.15l-1.13,1.62l-0.22,1.14l0.52,0.81l0.25,1.4l-1.06,1.69l0.36,2.84l-0.39,3.07l0.57,1.33l0.81,0.74l3.12,0.91l0.26,0.72l-0.11,0.56l-1.74,1.02l0.07,1.58l1.83,2.19l0.13,1.3l-0.59,0.61l-0.05,0.49l1.28,2.37l-1.55,2.63l-0.27,3.3l0.19,0.89l0.35,0.31l7.17,0.83l0.53,0.55l-0.08,0.69l-0.75,1.1l-0.42,1.74l-0.81,0.23l-1.26,-0.5l-5.97,0.61l-1.22,-0.28l-0.48,0.33l-0.09,0.89l0.7,1.53l5.17,1.06l1.78,2.71l1.01,0.89l0.04,1.16l-1.57,1.46l-0.28,1.06l-1.95,0.29l-0.97,1.0l-0.32,2.18l0.27,1.84l0.94,0.81l0.45,0.86l-0.5,1.04l-2.29,1.8l-0.03,0.5l1.31,2.28l0.74,4.81l-0.33,0.68l-2.57,2.1l-0.28,2.9l0.11,1.09l0.61,1.37l-1.46,0.58l-0.87,1.63l-2.88,2.26l-0.08,1.42l-2.1,4.61l0.08,1.66l1.34,0.93l0.86,1.31l0.38,1.65l-0.65,1.84l-1.67,0.79l-1.02,0.9l-0.41,0.82l0.23,2.39l-0.31,1.85l-1.23,1.43l-2.97,1.21l-0.76,0.67l-1.48,2.83l0.09,1.55l-3.52,0.18l-0.37,0.32l-0.25,1.21l-0.87,1.16l-0.27,1.86l1.25,3.35l-0.68,1.9l0.33,3.34l1.44,1.86l0.87,1.99l0.74,3.14l1.17,2.79l1.46,0.59l2.56,-1.67l2.76,-0.05l1.43,-0.63l1.1,0.34l0.52,0.62l0.73,3.43l-0.33,1.73l-0.64,0.52l-0.23,0.77l0.21,1.2l0.68,0.92l-0.01,1.01l-1.19,4.16l1.67,2.41l1.69,0.95l2.02,1.99l-0.0,1.56l0.85,0.47l23.55,0.3l5.63,2.04l3.47,0.02l5.87,1.91l2.84,0.53l0.04,0.2l-6.15,-1.37l-1.64,-0.85l-1.48,-0.07l-2.68,1.21l-1.96,3.01l-1.59,0.61l-1.8,0.15l-5.78,2.37l-2.14,0.23l-2.86,1.58l-0.7,2.2l0.19,1.27l-1.54,4.21l-0.41,2.48l0.43,3.31l-0.54,3.2l-0.87,0.63l-2.4,0.89l-4.63,-1.27l-2.09,-1.29l-3.6,-1.46l-2.34,-2.54l-0.37,-1.67l1.08,-1.33l4.07,-0.27l0.81,0.64l0.25,1.57l-0.81,1.43l0.08,0.8l0.57,0.24l1.21,-0.64l0.79,-4.22l3.92,-1.96l1.43,-1.26l1.42,-2.0l0.33,-1.31l-0.18,-0.39l-0.94,-0.61l-2.3,-0.72l-6.12,3.85l-2.82,1.04l-1.86,1.16l-2.23,2.07l-0.46,0.69l-0.63,2.4l-1.65,-0.51l-3.18,-2.06l-0.43,-0.51l1.56,-1.94l0.29,-3.92l1.77,-1.6l0.58,0.04l0.46,0.9l2.09,-0.05l4.17,-2.68l1.49,-0.06l2.3,0.59l2.63,-0.41l1.06,-0.99l-0.16,-0.63l-3.69,-1.13l-5.05,-0.27l-1.38,0.4l-1.23,1.19l-0.65,-0.93l-1.69,-0.5l-0.98,0.09l-0.99,0.78l-0.37,2.24l-1.58,1.18l-1.07,1.8l-0.07,2.14l-0.9,0.62l-2.33,-0.28l-2.01,-2.42l-1.0,-0.65l4.2,-1.87l2.13,-2.89l-0.0,-0.5l-0.61,-0.76l-1.03,-0.15l-0.4,0.42l0.06,1.06l-0.53,0.67l-1.72,-0.36l-2.31,1.39l-1.52,-0.36l-2.3,0.41l-0.94,-0.62l-0.19,-0.73l0.4,-1.18l-0.45,-1.78l-0.85,-0.67l-0.62,-0.01l-1.49,-3.58l5.13,2.0l1.66,-0.6l0.44,-1.81l1.49,1.11l3.29,0.07l1.62,-0.5l2.34,-1.34l1.61,-1.5l0.79,0.35l0.07,0.98l1.27,1.62l0.16,0.7l-0.11,0.66l-1.55,1.66l0.06,0.48l0.87,0.54l1.41,-0.88l0.68,-1.48l0.0,-1.51l-1.1,-2.27l-0.11,-1.11l1.06,-0.78l0.47,-0.84l0.03,-1.75l-0.72,-1.01l-2.64,-2.13l-4.82,-2.19l-0.99,0.71l0.07,0.59l4.91,2.19l2.28,1.79l-0.1,0.52l-3.84,0.97l-5.31,3.29l-1.32,-0.38l-1.5,-2.81l-1.35,-1.12l-0.91,-0.0l-1.21,-0.65l-0.77,0.35l-2.13,-1.26l1.06,-1.13l1.44,0.54l0.54,-0.34l0.41,-4.59l-0.57,-1.26l-2.37,-1.31l-2.61,-0.04l-5.69,-2.07l-2.77,-4.22l-0.32,-1.11l2.64,-0.04l2.1,-0.45l0.47,-1.08l-1.39,-2.21l1.16,-1.24l2.95,1.81l2.09,4.52l0.63,0.67l3.67,2.08l0.71,0.02l0.38,-0.45l-0.2,-1.52l0.92,-2.01l1.15,-0.58l0.45,-0.71l-0.88,-1.08l0.37,-0.98l-0.32,-0.54l-0.63,0.06l-0.94,0.92l-1.66,3.75l-0.65,0.44l-2.31,-3.05l0.1,-1.37l2.41,0.34l0.43,-0.25l-0.15,-0.48l-5.71,-2.55l-2.08,-2.13l3.1,-3.01l3.56,0.71l1.02,-0.49l0.14,-0.55l-0.63,-1.04l-1.07,0.08l-0.96,-0.53l-1.68,-1.78l0.35,-2.4l1.9,-0.61l2.68,1.03l0.67,-0.22l0.23,-0.56l-0.87,-1.53l-2.17,-1.28l0.83,-2.65l0.12,-2.34l0.92,-0.78l0.04,-0.39l-0.43,-0.43l-1.47,0.36l-0.56,2.48l-0.79,1.02l-0.84,3.42l-1.1,-1.04l-0.2,-9.35l0.47,-2.9l1.67,-1.35l1.39,0.12l0.82,-0.53l-0.1,-0.69l-1.96,-0.74l-2.28,0.95l-1.17,-0.33l-0.32,-1.48l-0.88,-1.27l-0.09,-3.66l3.65,0.67l4.67,-0.04l4.11,2.4l1.73,-0.32l0.32,-0.46l-0.31,-0.78l-1.21,-0.55l-1.24,-1.65l-1.24,-5.08l-0.47,-0.28l-0.68,0.36l-1.14,3.03l-0.99,0.83l-1.62,0.36l-1.62,0.21l-1.22,-0.31l-0.37,-1.75l-0.78,-0.53l-1.98,-0.56l-0.36,-0.55l1.14,-1.62l1.18,0.4l1.13,1.08l0.96,0.19l1.41,-0.88l0.35,-0.73l-0.19,-0.5l-2.26,-0.9l-1.6,-1.29l0.74,-1.21l2.85,-2.14l0.17,-0.49l-0.54,-1.37l0.6,-1.84l-0.75,-1.44l-1.48,-1.6l-2.08,-0.19l-0.46,0.65l0.09,1.01ZM510.37,893.33l-0.97,1.27l-1.7,0.73l-0.49,-0.23l-0.73,-1.45l-0.62,-0.23l-1.31,0.26l-2.05,1.11l-3.5,-0.62l-0.57,-0.61l-0.56,-1.81l-1.09,-1.08l1.69,-0.62l2.71,0.0l7.45,0.79l1.47,1.28l0.27,1.2ZM505.41,902.73l1.67,-1.52l1.07,2.27l-0.22,0.12l-2.52,-0.88ZM502.27,905.06l0.32,-0.07l2.45,0.16l-0.62,0.32l-2.15,-0.4ZM476.34,893.09l0.57,-1.17l0.37,-2.55l11.47,2.16l3.11,-1.0l2.05,0.03l0.42,0.83l-2.07,1.26l-0.27,1.07l0.59,0.5l2.35,0.22l0.85,0.75l-0.38,1.45l2.88,2.49l0.31,0.55l0.12,1.69l-1.5,-0.69l-0.72,-1.27l-0.71,-0.43l-3.28,-0.98l-3.12,-0.05l-0.53,-0.99l0.51,-1.73l-0.35,-0.75l-1.46,0.22l-2.11,-1.36l-1.37,-0.13l-0.4,0.25l-0.78,2.38l1.71,2.55l-1.78,-0.47l-1.18,-1.23l-1.47,-0.72l-0.27,-1.64l-0.55,-0.22l-1.56,0.27l-0.57,-0.89l-0.89,-0.4ZM485.33,852.61l1.5,0.19l3.38,-1.53l1.48,0.98l-0.27,35.73l-1.42,0.0l-0.65,0.41l-2.7,0.52l-4.73,-0.83l-2.72,-2.35l-0.53,-0.04l-3.54,1.65l-1.12,0.05l-1.72,-1.11l-2.71,0.93l-5.05,-1.55l-3.67,-0.34l-2.67,-1.25l-4.61,0.11l-0.59,-0.29l-0.11,-1.18l0.84,-0.28l0.4,-0.61l2.12,1.01l2.96,-1.68l2.26,0.88l1.14,-0.08l1.65,-0.58l0.68,-1.21l1.0,-0.14l0.85,0.26l-0.06,1.91l0.32,0.45l3.43,0.29l1.22,0.42l0.52,-0.29l0.04,-1.1l-2.99,-3.08l-1.27,-0.73l-1.32,-0.31l-1.1,-1.92l-0.04,-3.37l2.41,-0.91l0.23,-0.52l-0.53,-1.36l1.25,-1.16l0.95,3.93l0.59,1.21l-2.45,0.15l-0.35,0.59l1.14,2.16l2.0,0.89l1.44,1.43l0.23,1.34l1.09,0.58l2.22,0.03l1.49,-0.23l1.38,-0.98l1.29,0.86l3.01,1.16l0.56,2.06l0.51,0.28l0.89,-0.36l1.4,-1.56l1.03,-0.51l0.18,-0.67l-0.23,-0.37l-11.3,-4.9l-1.08,-1.49l-0.74,-1.91l0.02,-1.85l0.53,-0.49l8.91,-3.99l0.13,-1.39l-0.52,-0.9l-1.74,-0.7l-2.98,-0.08l-1.57,0.25l-2.52,1.07l-1.31,-0.06l-1.25,-0.53l-0.93,-1.07l-0.49,-1.48l0.18,-1.75l0.53,-0.81l2.31,-0.59l0.93,-1.2l-0.47,-0.86l-1.19,-0.72l-1.09,-1.31l1.56,-0.15l2.22,1.5l1.14,0.02l2.18,-1.55l3.08,-3.78l0.68,-0.06l2.85,2.82ZM458.81,889.3l0.04,-0.8l1.28,0.06l-0.34,0.09l-0.98,0.65ZM460.72,888.6l0.33,0.03l1.27,0.37l1.04,0.02l0.74,1.15l1.65,0.51l4.58,-0.94l1.4,2.27l-0.11,0.49l-1.77,0.89l-0.4,-0.13l-0.16,-0.7l-0.67,-0.66l-1.7,0.31l-2.48,-0.71l-0.56,-1.12l-3.17,-1.79ZM458.58,875.06l2.71,1.34l1.54,0.03l0.2,1.77l-1.23,1.74l-4.09,-2.32l-0.93,0.22l-2.48,-0.25l-0.87,0.82l-1.04,0.27l-0.32,-1.34l-2.67,-2.48l0.58,-1.36l1.6,-0.8l5.07,1.12l1.93,1.24ZM438.65,864.65l1.03,0.56l0.79,2.23l2.68,-0.15l2.32,0.47l2.9,3.18l-0.97,0.77l-0.8,1.95l-2.08,1.35l-1.35,0.09l-2.16,0.77l-0.61,-0.39l0.72,-0.36l1.21,-1.44l0.31,-1.69l-0.31,-0.45l-3.75,-0.34l-0.6,1.48l0.13,1.14l-1.08,-0.26l-0.95,-0.58l0.16,-2.27l-0.37,-1.33l-0.41,-0.2l-1.6,0.2l-1.15,-1.14l-0.69,-1.35l-1.99,-0.49l1.28,-1.3l2.55,-0.24l1.05,0.96l3.21,0.69l0.48,-0.46l-0.18,-0.99l0.25,-0.42ZM439.33,729.48l-2.73,1.11l-1.19,-0.32l-0.46,-0.71l-0.5,-1.71l1.87,-2.12l0.27,-1.98l2.3,0.57l2.16,1.05l0.67,0.63l0.08,0.3l-1.49,2.26l-0.98,0.92ZM419.21,853.86l2.7,1.87l0.72,1.21l3.81,0.62l3.46,1.49l1.44,0.21l1.26,0.9l1.17,0.32l3.01,2.72l-4.07,-0.81l-0.51,-1.2l-2.13,-1.78l-0.98,-0.45l-1.61,-0.37l-3.31,0.05l-3.27,-2.45l-0.7,-1.33l-0.99,-1.0ZM427.21,686.6l3.24,1.04l2.21,0.26l0.85,3.61l0.35,0.46l-0.13,0.83l-1.17,0.84l0.1,1.13l0.46,0.84l-2.58,1.0l-0.9,0.6l-0.13,0.52l1.47,1.82l1.25,0.84l1.43,2.3l-1.07,1.68l-2.38,1.18l-0.25,0.4l0.13,1.82l-0.3,0.56l-1.44,0.31l-2.32,-0.2l-2.93,-1.55l1.12,-2.0l0.98,-3.0l0.64,-4.2l-0.5,-1.69l0.34,-3.03l1.17,-2.29l0.64,-3.09l-0.28,-0.96ZM431.41,730.15l-1.49,-2.32l0.34,-0.97l0.45,-0.15l0.56,0.72l0.14,2.72ZM428.94,737.79l-2.39,-0.13l-0.1,-1.99l-1.2,-0.71l-1.78,-3.35l-2.95,-3.65l1.21,-0.69l0.2,-0.41l-0.21,-1.38l1.98,-0.93l1.14,0.42l0.96,-0.16l0.63,-0.49l0.26,-3.05l0.84,-0.54l0.79,-0.05l0.9,1.31l1.3,0.6l-0.33,1.3l-0.44,0.47l-2.38,0.87l-0.37,0.96l-0.07,0.79l1.53,2.24l0.99,3.12l0.08,1.32l0.72,1.35l-0.26,1.83l-0.65,0.11l-0.38,0.86ZM427.8,716.68l-1.72,-0.45l-0.06,-0.22l1.71,-0.05l1.27,-0.44l0.33,0.61l-0.8,-0.1l-0.73,0.66ZM422.28,837.67l0.49,0.19l2.74,2.06l-0.3,0.24l-1.75,-0.62l-0.88,-0.73l-0.3,-1.14ZM423.33,743.11l-0.65,0.64l-0.93,0.26l-1.03,-0.46l-1.22,0.14l-0.08,-0.6l2.3,-3.45l-0.04,-2.1l0.85,-1.09l0.75,-0.25l0.2,1.05l-0.35,2.73l1.02,2.25l-0.82,0.88ZM421.18,796.33l0.11,2.25l-0.66,5.2l0.08,0.57l0.67,0.5l-0.41,2.43l-0.99,2.09l-1.58,0.1l-0.47,-1.05l-0.16,-1.88l-0.67,-1.3l0.2,-1.1l0.62,-0.66l0.08,-1.29l1.01,-1.22l-0.39,-0.76l-0.5,0.04l-2.74,1.88l-0.41,1.25l-0.04,2.29l-0.6,1.25l-2.57,-0.07l-1.74,-1.16l-1.09,0.16l-0.15,-0.91l0.42,-0.83l1.96,0.09l0.41,-0.33l0.38,-2.1l-1.86,-2.16l1.36,-1.04l1.27,0.38l1.58,-0.35l0.31,-0.42l-0.09,-1.32l-1.31,-0.78l0.16,-0.5l2.77,-1.9l0.18,-1.38l-0.4,-1.13l0.82,-0.97l1.46,-0.33l1.08,0.6l1.11,0.15l0.8,5.73ZM417.08,836.08l0.53,2.87l0.6,0.57l1.09,0.2l1.17,1.4l-1.52,2.77l-0.33,1.71l-1.29,-0.09l-1.89,-3.53l-0.98,-3.74l0.82,-0.73l0.92,0.19l0.48,-0.37l0.05,-1.14l0.34,-0.1ZM420.19,829.96l-0.02,1.13l-0.3,0.28l-1.31,-0.42l-1.6,1.06l-2.12,-0.54l-0.48,0.17l-1.18,1.99l-1.08,1.09l1.53,-4.25l1.28,0.47l1.92,-0.62l1.74,-1.13l1.2,-0.01l0.43,0.77ZM420.06,787.59l-1.35,-0.18l-2.34,0.36l-0.88,-1.15l-0.46,-2.14l-1.95,-3.9l-0.34,-1.58l0.38,-0.52l2.56,-0.76l1.01,-1.22l0.23,0.05l-0.15,2.5l1.55,1.86l0.62,2.36l0.62,0.76l-0.08,1.15l0.58,2.42ZM418.79,712.15l-1.08,0.16l-0.14,-0.16l0.73,-0.31l0.49,0.3ZM414.38,813.99l-2.1,1.13l-0.73,-0.45l-1.15,0.0l1.18,-4.31l4.87,1.37l0.26,0.81l-1.27,0.55l-1.07,0.9ZM413.76,775.65l-0.43,0.1l-0.62,-0.81l1.54,-0.76l1.55,0.37l-2.04,1.1ZM414.42,731.21l-0.29,-0.22l-0.04,-0.55l0.22,0.22l0.1,0.54ZM413.58,791.47l-0.09,1.08l-1.69,2.26l-2.78,2.39l-0.89,-0.2l1.64,-1.82l-0.42,-1.3l-1.33,-0.92l0.13,-0.52l0.69,-0.51l0.61,0.14l2.33,-0.62l0.77,-0.49l0.94,-0.06l0.08,0.58ZM411.23,820.33l-0.25,1.09l-0.47,-0.06l-0.54,-1.41l0.6,-2.3l2.67,0.23l-1.89,1.17l-0.11,1.29ZM408.98,789.92l-0.87,0.01l-0.28,-2.31l1.59,-4.01l0.11,-1.51l-0.74,-2.09l1.62,-0.71l2.58,5.86l-0.03,2.8l-0.61,0.58l-2.43,0.75l-0.93,0.64ZM368.15,572.05l0.38,-0.32l0.5,0.2l-0.87,0.12ZM1.37,485.84l-0.92,0.2l0.24,-0.38l0.68,0.18Z\",\n            name: \"Chile\"\n          },\n          SR: {\n            path: \"M630.17,84.15l0.35,-0.04l1.45,-4.82l0.82,-0.52l5.91,0.65l2.74,0.63l3.38,1.03l0.43,0.99l0.44,0.23l0.32,-0.38l-0.12,-2.19l0.73,-0.62l2.0,-0.27l3.19,0.4l2.87,-0.49l3.73,0.06l5.71,0.94l3.37,1.1l0.06,2.07l-0.39,1.21l-0.86,1.63l-2.1,2.06l-1.49,2.14l-0.32,1.39l0.03,2.07l0.54,1.95l-0.27,1.27l0.61,3.33l0.66,0.91l-0.03,1.12l1.19,1.9l1.7,1.59l1.37,1.96l-0.2,1.55l-2.31,3.72l0.36,1.9l-0.28,1.97l-2.39,4.14l-0.91,0.49l-0.63,0.83l-1.15,0.19l-0.77,-1.36l-1.74,-0.06l-1.53,-1.83l-1.2,0.61l-1.43,0.03l-1.78,0.68l-0.62,0.59l-3.9,0.38l-2.9,-1.35l-0.63,0.39l-0.4,1.35l-1.23,1.03l-0.21,0.69l2.66,2.86l-0.36,1.71l-0.5,0.13l-5.12,-1.07l-1.35,-0.88l-1.53,-0.33l-2.61,-4.14l-2.1,-4.49l-1.17,-1.15l-0.33,-2.82l-0.58,-0.87l-0.35,-2.56l-1.82,-0.18l-1.43,0.27l-0.9,-0.38l-0.08,-1.49l-2.15,-1.87l-0.91,-2.15l-1.48,-1.73l-0.24,-1.06l-0.0,-0.68l1.22,-2.08l1.28,-3.91l-0.81,-1.91l0.64,-0.92l1.59,-0.82l4.71,-0.47l0.36,-1.17l1.19,-1.16l-0.16,-0.71l-0.8,-0.35l-0.28,-0.65l1.21,-2.21Z\",\n            name: \"Suriname\"\n          },\n          BO: {\n            path: \"M481.86,363.93l-0.21,-1.65l-1.26,-1.21l0.02,-0.65l2.3,-1.5l2.8,-3.83l2.14,-1.55l0.02,-0.91l1.11,0.37l0.77,-0.25l0.19,-0.99l-0.51,-0.9l1.73,-0.47l0.58,-0.69l1.21,-0.3l0.26,-0.47l-0.32,-1.04l-2.78,-0.6l-0.49,-0.84l1.01,-1.29l-0.11,-0.53l-0.63,-0.37l-1.83,-0.26l-0.33,-1.39l-3.24,-2.34l-0.58,-1.06l2.22,-3.47l-2.41,-3.34l0.15,-1.72l1.02,-0.74l0.47,-1.71l2.61,-2.67l0.2,-1.48l1.26,-0.63l0.35,-0.61l-2.38,-6.1l1.04,-2.26l0.06,-7.46l1.18,-1.34l1.33,-0.85l0.11,-1.16l0.88,-1.61l-10.45,-18.37l3.51,0.07l4.51,0.67l1.37,1.31l1.63,-0.14l3.87,-1.71l2.83,-3.26l0.83,-0.3l3.51,-0.07l1.61,-2.08l1.92,-1.36l3.68,-1.48l4.62,-3.59l1.77,-0.87l3.72,-0.89l4.04,-0.49l2.49,-0.2l0.99,0.48l0.95,-0.14l0.97,-0.85l0.72,-0.19l0.84,1.57l-0.16,1.89l0.31,1.46l-0.15,1.15l-1.43,2.29l-0.19,0.88l0.1,1.14l1.27,3.72l0.11,1.43l-0.82,1.92l0.03,0.89l0.63,1.05l0.24,1.47l1.7,2.39l-0.1,1.25l0.44,0.48l0.86,-0.25l1.28,2.87l1.94,0.67l2.56,2.08l1.11,0.55l1.33,2.4l5.84,1.11l1.96,-0.72l1.04,0.09l4.11,2.47l1.17,0.34l1.1,-0.52l0.89,-0.03l0.72,1.68l3.03,2.37l1.08,0.03l4.06,1.69l2.55,0.23l0.32,0.99l1.84,2.04l1.92,1.5l3.64,0.25l5.13,-0.61l6.65,3.58l1.09,2.5l-0.82,2.12l0.27,1.16l0.71,0.79l0.67,2.82l0.47,0.65l0.28,5.26l-3.33,0.11l-0.36,0.27l4.1,5.0l0.79,9.64l0.38,0.37l19.75,0.73l1.97,-0.5l-0.1,1.98l-1.37,1.87l-0.16,0.81l0.99,6.73l0.78,0.89l4.27,2.85l1.18,0.31l0.8,-0.18l0.43,1.68l2.34,5.61l0.68,1.01l-0.54,0.67l-2.52,7.93l0.63,0.53l0.1,0.87l-0.91,0.62l-3.99,8.31l0.09,0.47l3.01,2.72l-1.73,0.63l-0.82,1.1l-0.15,-3.41l-0.43,-0.75l-11.19,-6.72l-11.14,0.15l-21.08,4.35l-2.23,5.36l-4.3,6.32l-0.08,6.51l-4.26,14.13l-0.68,-0.53l-1.41,-2.18l-10.12,0.08l-0.61,0.29l-1.77,-0.23l-1.61,1.02l-3.5,6.73l-0.46,2.17l-1.91,-5.07l-1.19,-2.03l-4.8,-1.55l-9.25,-0.11l-3.98,-3.34l-1.59,-0.44l-0.74,0.64l-1.29,3.36l-4.25,1.41l-1.05,2.39l-2.8,1.82l-0.35,1.35l-1.55,1.99l-4.43,0.85l-1.48,-0.03l-0.91,-0.11l-0.84,-0.59l0.02,-3.95l-0.82,-2.06l-0.48,-3.53l-1.09,-1.06l-0.4,-2.73l-0.9,-1.77l-0.19,-4.12l-2.87,-4.43l-1.45,-0.57l-0.05,-1.9l0.83,-0.91l0.04,-0.69l-3.11,-2.12l-0.12,-0.34l0.82,-1.46l-0.77,-2.37l1.56,-0.39l0.8,-1.36l-0.24,-1.54l-1.39,-1.46l2.68,-3.41l0.02,-0.7l-4.8,-4.15l-1.19,-1.38l-1.5,-8.5l-0.6,-1.61l0.58,-1.29l-2.69,-1.51l-0.59,-2.16l-1.57,-1.8l-0.17,-1.28ZM486.75,346.77l0.46,0.22l0.77,0.76l-1.43,-0.14l0.2,-0.84Z\",\n            name: \"Bolivia\"\n          },\n          EC: {\n            path: \"M351.85,191.66l1.45,-0.54l2.45,-2.11l2.84,-7.02l-0.16,-1.37l-0.93,-1.61l-0.24,-3.45l-0.73,-0.13l-0.62,0.94l0.09,3.51l-0.46,1.28l-0.51,0.17l0.25,-2.18l-0.2,-0.4l-0.44,0.04l-0.66,0.57l-0.86,1.59l-1.41,1.18l-0.32,0.73l-1.61,-0.8l-2.8,-2.73l-1.94,-0.65l-1.01,-0.87l-0.22,-0.49l2.26,-1.55l0.12,-1.71l-0.06,-1.52l-0.83,-2.2l0.39,-3.03l-1.17,-3.56l0.56,-0.96l2.49,-0.87l0.95,-0.67l1.14,-2.98l1.0,0.37l0.92,-0.06l0.37,-0.34l-0.26,-0.43l-1.09,-0.39l-1.02,-2.17l1.78,-2.24l2.28,-1.95l1.12,-2.03l0.3,-3.34l-0.73,-4.29l0.4,-0.38l1.61,-0.33l1.92,-1.38l1.59,0.04l1.72,-1.04l6.8,-1.76l1.07,-1.21l-0.1,-1.21l1.36,1.47l2.02,1.0l4.03,2.8l4.28,1.74l1.43,-0.1l0.65,1.28l2.05,0.92l0.52,2.44l0.59,0.67l1.33,0.42l2.12,0.08l3.42,1.27l0.96,0.06l0.59,-0.33l2.57,0.42l1.22,-0.63l0.33,-1.5l1.04,-0.35l2.36,1.09l2.19,2.28l1.32,0.81l1.98,0.36l3.17,1.71l-1.28,0.15l-1.85,-0.4l-0.39,0.33l0.12,0.83l1.57,1.0l0.77,1.85l1.95,1.98l-0.28,1.41l0.37,2.77l-0.61,-0.0l-0.67,-0.46l-0.58,0.22l-1.94,7.25l-6.17,7.17l-7.02,5.12l-14.19,5.04l-1.12,0.92l-2.95,3.66l-0.2,0.76l0.39,0.66l-0.22,0.09l-0.77,-1.05l-1.0,-0.0l-0.87,2.64l-0.28,2.18l-1.56,2.57l-1.54,4.05l-0.1,0.81l0.37,0.91l-0.32,1.01l-2.62,1.84l-0.31,0.83l0.1,0.87l-0.66,0.3l-0.63,1.05l-3.05,-0.51l-1.42,-1.84l-0.86,-2.87l-1.45,-1.0l-2.06,0.17l-4.33,-2.15l-0.89,0.3l-1.11,1.23l-0.93,0.48l-0.72,-0.26l1.5,-2.18l-0.31,-0.63l-1.26,-0.29l-0.07,-1.44l0.36,-0.21l1.55,0.28l1.86,-1.75l-0.53,-1.83l0.08,-1.57l-0.86,-2.63ZM367.75,135.25l-0.11,-0.03l0.13,-0.1l-0.01,0.13ZM353.01,186.43l-0.93,0.17l0.51,-2.41l1.47,-0.87l1.33,0.35l-0.78,0.7l-0.97,0.33l-0.64,1.74ZM239.56,161.54l2.01,-1.78l1.29,-0.3l-1.73,1.91l-1.15,0.4l-0.42,-0.23ZM230.19,159.62l-1.94,-0.96l0.08,-0.76l0.56,-0.58l2.12,-0.35l0.7,0.5l-0.07,1.02l-0.66,0.81l-0.8,0.31ZM229.08,166.48l-0.46,-0.21l0.18,-0.33l0.5,0.31l-0.21,0.23ZM227.12,154.48l-0.32,0.21l-2.0,-0.37l-0.4,-0.39l0.64,-0.84l1.09,0.28l1.08,0.84l-0.1,0.27ZM215.69,150.78l0.98,-0.97l1.2,-0.19l1.54,1.76l0.5,2.31l2.33,2.26l0.2,2.12l1.8,1.75l-1.07,1.91l-2.51,0.88l-2.75,-0.03l-1.06,-0.9l-0.09,-0.51l0.33,-0.54l1.4,-1.05l2.24,-0.99l0.5,-1.0l-0.96,-1.14l-0.73,-1.56l-1.32,-0.95l-0.69,-3.03l-0.75,-0.45l-1.09,0.32ZM214.83,154.5l1.78,-0.28l0.48,0.53l-0.01,0.91l-1.08,0.4l-0.8,-0.32l-0.38,-1.24Z\",\n            name: \"Ecuador\"\n          },\n          AR: {\n            path: \"M473.96,528.95l0.46,0.15l2.01,-0.59l1.39,-2.75l-0.23,-0.72l-1.1,-0.6l0.35,-3.93l-1.18,-5.81l0.31,-0.8l2.07,-2.06l1.02,-4.17l0.11,-1.86l0.57,-1.07l0.35,-1.83l1.49,-1.59l0.45,-1.02l0.64,-0.19l2.22,-2.83l1.05,-0.85l2.06,-6.05l0.72,-0.66l1.12,-3.14l1.2,-0.48l0.86,0.54l0.72,-0.11l0.82,-0.75l2.23,-0.72l0.55,-0.92l-0.04,-1.64l-2.0,-2.68l-1.22,-2.41l0.17,-1.34l1.97,-2.76l-1.17,-5.37l-1.06,-3.23l0.09,-0.73l1.02,-3.03l1.2,-0.52l0.28,-0.62l-0.98,-2.35l-1.14,-1.13l0.0,-0.97l0.57,-1.31l3.05,-3.0l10.9,-4.77l4.19,-13.16l-2.11,-2.45l1.48,-1.86l0.32,-1.31l2.81,-1.83l0.94,-2.25l4.28,-1.44l1.58,-3.75l1.06,0.33l4.14,3.41l9.37,0.13l4.45,1.42l3.34,7.52l0.68,-0.05l0.74,-2.9l3.44,-6.6l0.54,-0.46l0.95,-0.24l1.32,0.27l0.61,-0.3l9.74,-0.09l1.03,1.86l1.02,0.82l0.51,0.95l3.04,1.88l1.84,2.11l3.5,5.73l3.04,2.7l1.89,1.08l0.22,0.5l3.58,2.1l1.4,1.19l0.75,1.36l2.4,1.34l4.03,1.35l2.97,0.65l1.85,-0.05l2.51,1.03l8.51,6.0l5.59,2.87l2.49,0.74l1.88,1.5l2.78,0.24l3.65,1.96l2.73,3.33l0.17,1.32l-2.12,1.99l-1.73,4.07l-2.27,1.67l-1.21,2.2l-0.31,1.14l0.16,3.0l-0.54,0.62l-0.12,0.78l-0.83,0.78l-0.17,0.89l-1.2,0.66l-1.34,2.09l-0.95,0.79l-0.28,1.07l0.45,1.54l0.42,0.29l5.22,-0.53l4.22,0.55l5.05,1.47l3.42,0.53l1.77,-0.44l1.05,0.05l0.9,0.58l1.08,0.12l1.4,-0.32l0.92,0.21l1.19,0.88l1.05,-0.4l0.7,-1.25l1.58,-1.38l2.31,0.06l2.07,1.19l1.14,-0.1l1.1,-0.88l0.76,-2.58l0.82,-0.47l0.87,-1.35l3.35,-0.94l0.3,-0.78l1.92,-1.53l0.38,-0.77l1.34,-0.71l0.88,-1.61l0.95,-2.96l0.56,-3.95l0.18,-5.15l1.57,0.61l3.51,-1.28l0.68,0.52l0.92,0.15l0.59,0.76l0.76,0.34l0.79,3.64l1.78,3.33l0.02,0.61l-0.51,0.9l-0.51,5.12l0.42,1.72l-1.35,2.85l-3.01,1.84l-0.78,-0.14l-1.97,2.14l-2.74,0.4l-1.41,0.97l-1.88,0.28l-0.78,0.84l-0.43,1.4l-1.48,0.69l-0.64,1.2l-1.73,0.44l-1.24,0.74l-1.56,1.73l-3.02,1.52l-0.41,0.87l0.8,1.42l-1.74,-0.39l-0.79,0.44l-0.2,0.99l-0.87,0.46l-0.66,1.28l-2.26,1.99l-1.22,1.59l-0.83,1.85l-0.91,1.14l-1.07,0.56l-0.89,0.94l-0.49,1.19l-3.15,3.95l-1.76,1.55l-1.69,0.93l-0.92,0.98l-0.28,1.19l-0.96,1.13l-1.88,1.37l-1.05,1.21l-0.15,1.03l-2.07,2.5l-0.58,1.4l0.63,1.84l0.09,1.8l-1.04,1.5l0.33,0.94l-0.26,1.96l-1.64,2.86l-0.3,1.17l0.77,1.71l-0.6,1.84l-1.37,1.24l-0.42,0.89l0.32,1.06l-0.05,2.63l0.53,0.9l-1.2,4.04l0.57,5.32l-0.77,1.29l-1.56,0.0l-0.71,0.77l-1.48,7.43l0.2,1.36l1.47,4.18l0.18,1.62l-0.36,0.56l-1.07,0.61l-0.14,0.44l0.75,2.26l2.24,3.13l6.39,2.98l2.56,1.67l2.88,2.27l1.51,2.24l0.12,1.7l-2.34,3.03l-0.26,2.47l0.5,1.89l0.96,1.8l2.38,2.17l1.86,0.81l2.04,-0.08l0.44,0.8l0.35,4.18l-0.04,1.5l-0.62,1.38l-4.32,6.74l-3.74,4.2l-1.34,2.3l-0.5,2.47l-1.07,1.05l-6.36,3.69l-9.93,3.32l-9.89,2.31l-15.4,2.17l-3.23,-0.17l-2.65,0.25l-5.41,-1.08l-1.39,-1.41l-2.0,-0.3l-0.86,0.93l0.78,2.17l-0.37,2.39l0.52,1.31l2.39,1.35l-0.65,0.04l-0.29,0.65l1.14,1.1l-0.61,4.69l-1.86,1.06l-1.43,4.43l-0.29,2.43l0.44,1.56l1.69,2.93l-0.58,1.74l-1.0,0.98l-6.7,3.09l-2.98,0.6l-4.88,0.1l-1.73,-0.13l-7.32,-3.25l-5.0,-1.43l-0.08,-0.95l-0.88,-0.32l-0.82,-0.01l-1.84,1.06l-0.9,1.19l-0.33,3.53l1.65,6.64l0.13,2.48l-0.62,3.2l0.91,2.16l1.29,1.08l3.25,1.4l1.05,-0.01l-0.58,0.82l-0.04,1.13l0.34,0.38l1.82,0.26l3.99,-0.57l0.71,-0.75l0.1,-1.51l-0.36,-0.4l-1.24,-0.12l4.3,-1.27l1.11,0.91l0.61,1.26l0.39,1.71l-0.25,4.05l-0.77,1.36l-3.88,1.04l-0.91,-0.23l-0.94,-1.35l-0.41,-1.69l-0.92,-1.08l-2.33,-0.99l-1.96,0.26l-2.07,1.51l-2.09,0.67l-0.68,1.35l0.19,0.54l4.86,2.21l3.18,0.66l-0.89,0.79l-3.35,1.1l-1.64,0.86l-1.82,1.6l-3.26,4.16l-0.41,0.97l-0.25,2.32l0.77,3.84l-0.81,1.79l0.49,1.69l-1.06,2.66l-3.52,2.87l-0.61,2.0l1.17,1.45l-0.33,1.41l-6.58,-0.59l-1.94,1.05l-2.77,2.17l-3.52,0.65l-0.85,0.5l-3.91,4.88l-4.18,7.24l-0.14,1.85l0.28,1.65l1.05,2.81l1.48,1.71l7.35,6.86l1.76,0.71l7.78,0.73l1.59,0.87l0.93,1.39l0.33,1.21l-0.43,3.28l-0.42,0.96l-2.56,2.08l-2.17,0.65l-0.12,0.7l0.91,0.55l2.79,-0.45l0.6,0.29l0.41,0.85l-0.86,0.38l-1.39,1.74l-4.48,3.93l-7.74,4.44l-5.32,5.15l-2.69,4.75l-0.11,0.89l0.36,0.73l-1.43,7.88l-0.45,0.84l-0.98,0.95l-2.69,1.62l-1.13,0.18l-1.61,-0.88l-0.93,-0.94l-2.16,-3.52l-0.43,-0.17l-0.36,0.99l0.39,1.16l-0.19,0.77l-2.77,0.48l-0.96,0.6l-0.15,0.47l0.41,0.27l2.68,-0.24l1.75,0.32l0.66,0.35l1.1,1.56l-3.63,1.63l-2.35,1.64l-1.41,2.02l-0.57,1.39l-0.78,4.41l-2.45,2.86l0.68,0.51l1.37,-0.7l1.48,4.57l0.36,2.8l-0.19,0.64l-3.33,0.16l-1.39,0.42l-0.09,0.72l0.94,0.47l1.02,-0.13l1.48,0.91l1.89,-0.33l0.64,0.52l3.27,5.36l2.93,3.8l-2.82,-0.52l-5.89,-1.92l-3.46,-0.02l-5.75,-2.06l-23.82,-0.5l0.07,-1.42l-2.24,-2.22l-1.59,-0.86l-1.49,-2.15l1.2,-3.82l0.02,-1.21l-0.72,-1.02l-0.18,-0.99l0.82,-0.95l0.37,-1.96l-0.78,-3.81l-0.86,-1.01l-1.53,-0.46l-1.45,0.63l-2.26,-0.13l-3.28,1.88l-0.47,-0.19l-1.15,-2.68l-0.74,-3.15l-0.9,-2.07l-1.36,-1.66l-0.32,-3.17l0.68,-1.98l-1.25,-3.28l0.23,-1.63l0.78,-0.95l0.29,-1.18l3.63,-0.19l0.38,-0.44l-0.15,-1.65l1.3,-2.52l0.52,-0.49l3.11,-1.3l1.45,-1.7l0.4,-2.2l-0.26,-2.18l1.14,-1.3l1.89,-1.0l0.74,-2.11l-0.47,-2.19l-0.96,-1.45l-1.17,-0.68l-0.08,-1.18l2.08,-4.55l-0.0,-1.23l2.75,-2.14l0.81,-1.58l1.74,-0.87l0.05,-0.87l-0.66,-1.04l-0.09,-0.95l0.25,-2.56l2.39,-1.85l0.54,-1.11l0.05,-1.2l-0.82,-3.96l-1.24,-2.26l2.0,-1.48l0.79,-1.5l-0.59,-1.49l-0.84,-0.64l-0.23,-1.49l0.29,-2.0l0.45,-0.47l2.1,-0.31l0.33,-0.32l0.19,-0.99l1.61,-1.49l0.07,-1.82l-1.18,-1.19l-2.03,-2.93l-5.17,-1.09l-0.24,-1.12l1.0,0.2l5.95,-0.6l1.34,0.5l1.17,-0.33l0.74,-2.18l0.77,-1.17l-0.0,-1.3l-0.96,-0.9l-7.07,-0.84l0.17,-3.57l1.56,-2.91l-1.25,-2.39l0.59,-0.74l-0.17,-1.81l-1.85,-2.23l0.0,-0.95l1.51,-0.72l0.33,-1.32l-0.66,-1.29l-3.17,-0.91l-0.9,-1.35l0.38,-3.09l-0.34,-2.79l1.06,-1.66l-0.3,-1.67l-0.52,-0.87l1.04,-1.82l0.81,0.36l1.09,-0.32l1.2,-0.67l0.33,-1.08l-1.15,-4.16l-0.76,-1.67l0.46,-1.3l-0.25,-2.38l0.23,-7.15l-0.81,-1.6l0.09,-1.19l1.5,-3.54l1.18,-0.92l0.16,-0.66l-0.38,-0.82l-0.91,-0.79l-0.16,-0.74l0.4,-0.78l0.92,-0.21l0.58,-1.19l0.26,-1.88l-0.94,-3.56l0.36,-0.25l1.46,0.09l0.31,-0.32l1.44,-4.49l-0.06,-4.24l0.23,-0.56l1.26,-1.13l2.32,-1.2l1.81,-0.4l0.72,-0.9l0.62,-2.06l-1.48,-1.62l-0.72,-5.62l-1.66,-3.84l-0.21,-1.7l0.61,-2.54l-0.75,-2.08l0.96,-2.64l-0.86,-3.73l1.39,-2.5l0.17,-1.65l1.68,-1.34l1.87,-0.39l0.51,-1.65l1.76,-1.73l1.41,-0.35l0.63,-0.98l-0.06,-2.7l0.41,-1.58l-0.42,-3.32l-0.49,-1.07l-0.2,-1.79l-0.8,-0.42l-0.14,-0.43l1.89,-1.38l1.26,-5.65l2.24,-4.03l0.58,-1.68l1.82,-0.5l0.63,-0.84l-0.5,-6.64l0.14,-1.69l1.02,-2.88l-0.26,-1.54l-1.15,-0.74l-1.45,0.27l-0.63,-0.75l-0.08,-2.03l0.62,-0.91l0.24,-1.06l-1.17,-1.35l-0.68,-2.27l0.09,-2.0l-0.76,-0.8l-0.31,-1.47l-0.79,-0.73l-0.48,-2.22l0.84,-0.54l0.42,-1.35l-1.02,-1.13l-0.87,-0.06l-0.48,-0.39l-1.55,-3.48l0.76,-5.32l1.29,-0.18l1.15,-1.42l0.08,-0.71l-0.42,-1.13l2.2,-6.0l-0.02,-0.61ZM571.67,647.98l1.23,0.43l0.29,0.6l-1.36,-0.77l-0.16,-0.25ZM541.48,886.55l1.2,0.32l3.93,-0.29l0.99,0.34l2.02,-0.31l-1.35,0.62l-0.7,-0.27l-3.55,0.07l-2.46,0.8l-1.34,0.91l-0.82,-0.48l-0.13,-0.25l0.51,-0.54l0.82,-0.08l0.87,-0.83ZM492.22,887.65l0.26,-34.63l2.78,3.31l0.75,1.5l-0.52,-0.13l-1.18,0.58l-0.75,1.11l-0.56,1.25l0.45,1.58l1.47,0.75l2.65,0.18l1.72,4.11l8.65,8.05l5.23,2.91l4.86,3.63l2.79,1.57l5.91,2.01l4.67,-0.34l1.27,0.09l0.53,0.4l-1.76,2.89l-1.36,0.55l-5.76,0.07l-1.38,0.64l-2.74,0.36l-2.57,0.87l-4.9,-1.76l-2.46,-0.38l-8.05,-0.59l-5.18,-0.86l-4.82,0.28Z\",\n            name: \"Argentina\"\n          },\n          GY: {\n            path: \"M598.52,50.1l0.76,0.22l0.42,-0.4l0.34,0.08l5.53,3.44l4.64,4.08l3.57,4.02l0.35,0.75l-0.04,3.3l-1.23,2.39l-0.37,4.09l-0.67,1.27l0.1,0.49l0.5,0.01l0.95,-0.74l0.44,-2.3l1.71,-2.5l1.14,-0.28l3.62,1.06l4.43,3.98l0.78,1.37l2.53,0.88l1.27,1.03l0.38,0.84l0.27,2.46l-0.41,4.02l-1.38,2.79l0.47,1.07l0.8,0.3l-1.11,0.99l-0.16,0.92l-4.43,0.32l-2.29,1.47l-0.51,1.1l0.82,1.74l-1.2,3.69l-1.22,2.07l-0.06,1.16l0.35,1.38l1.48,1.73l0.85,2.07l2.18,1.95l-0.05,1.1l0.3,0.58l1.37,0.55l2.73,-0.29l0.14,2.2l0.56,0.74l0.44,3.14l1.17,1.17l2.07,4.42l2.75,4.35l2.21,0.78l-3.46,0.45l-1.99,-0.46l-1.32,-1.11l-2.68,0.63l-1.31,0.8l-1.51,2.09l-2.8,0.25l-2.26,0.62l-0.77,1.56l-0.96,0.03l-0.44,-0.37l-2.19,-0.49l-0.91,1.33l-1.28,0.56l-0.05,1.78l-1.84,0.03l-1.69,0.96l-1.63,-1.23l-3.07,-0.84l-3.57,-3.8l-1.47,-0.57l-0.22,-1.23l-0.86,-0.46l0.0,-4.44l-1.67,-1.27l-1.21,-3.79l0.26,-3.48l1.71,-4.39l-0.24,-2.7l1.89,-1.21l1.72,-3.26l-2.23,-3.51l0.45,-1.51l-0.18,-0.59l-1.8,-1.24l-3.38,-0.49l1.36,-2.28l0.33,-4.49l-0.98,-0.69l-0.77,-1.12l-1.39,-0.36l-1.34,0.67l-4.68,-0.05l-7.5,-8.41l3.02,-3.15l-0.19,-3.05l-0.61,-1.7l0.53,-0.98l2.28,-0.39l0.88,-0.66l1.99,0.14l3.81,-2.09l0.73,-0.93l0.38,-1.24l-0.19,-0.78l-1.05,-0.46l-2.1,0.14l-0.42,-0.47l0.3,-1.31l-1.33,-2.28l1.23,-1.3l1.02,-1.86l1.67,-0.24l2.39,-1.98l1.71,-0.7l0.91,-1.72l1.48,-0.8l0.2,-1.14Z\",\n            name: \"Guyana\"\n          },\n          BR: {\n            path: \"M468.22,283.24l0.06,-13.55l0.81,-1.43l-0.35,-1.23l0.59,-2.44l-0.45,-0.11l-1.19,0.51l-7.26,5.93l-4.28,0.45l-6.49,-0.01l-0.05,-1.87l-0.91,-0.74l-0.72,-2.6l-0.86,-0.74l-5.41,-1.29l-3.99,-0.01l2.34,-2.87l-0.05,-2.06l-2.76,-3.32l-1.21,-0.82l-0.54,-0.87l-0.26,-1.32l-2.07,-1.47l-1.19,-3.29l-1.52,-1.65l0.7,-1.0l-0.23,-1.04l-1.22,-0.54l-1.87,-1.82l0.4,-0.6l-0.07,-1.31l2.23,-0.42l0.71,-0.74l-1.0,-2.74l0.51,-1.93l2.98,-2.61l2.01,-1.21l1.1,-0.18l1.36,-1.31l0.09,-1.76l-1.17,-2.94l3.04,-5.5l1.02,-5.98l2.2,-0.64l4.18,-3.39l6.02,-3.36l3.84,-0.41l3.49,-0.98l3.15,-0.46l2.19,-2.16l4.48,-0.24l1.87,1.73l1.49,-0.08l1.03,0.53l0.8,-0.16l0.53,-0.59l6.88,-37.63l-0.57,-1.26l-0.0,-1.07l-1.18,-1.12l-0.82,-1.85l0.26,-1.39l-0.54,-1.66l-3.58,-2.44l-1.64,-1.93l0.19,-8.2l2.73,-0.33l3.83,-1.42l0.87,0.7l1.46,0.51l1.49,-0.13l0.5,-0.59l-0.22,-2.81l-1.11,-1.78l-0.75,-0.54l-6.33,-0.34l0.04,-6.84l3.26,-0.81l2.7,0.62l13.8,0.02l0.34,-0.62l-0.86,-1.35l0.42,-1.15l1.58,2.21l0.74,0.52l0.75,0.04l1.7,-0.65l3.03,-3.33l1.52,-0.47l0.42,0.27l2.74,4.5l0.32,0.96l-0.04,4.81l0.38,0.68l2.53,-0.39l5.23,4.7l1.68,0.92l3.18,-0.41l4.38,-2.35l1.13,0.57l0.38,0.73l-0.41,0.98l0.05,0.92l0.41,0.36l1.0,-0.04l1.64,-2.26l1.15,-0.76l1.93,-2.12l3.24,-1.69l1.19,-0.02l2.83,-2.34l2.14,-0.04l1.4,-0.97l1.23,-1.28l1.16,-3.58l1.88,-0.49l3.29,-1.72l1.35,-0.23l1.03,-1.32l0.23,-1.57l-0.52,-1.18l-6.42,-0.49l-1.17,-0.4l0.46,-1.94l-0.38,-1.66l-2.14,-4.77l-0.1,-4.77l-0.73,-0.99l-3.5,-2.84l-1.15,-1.28l-1.57,-2.57l0.98,0.35l1.19,1.25l4.64,0.17l1.34,1.77l0.9,0.65l4.37,-0.13l1.72,0.54l2.05,-0.58l4.24,4.08l1.65,0.15l1.51,-1.32l0.55,-3.91l1.13,-0.25l2.2,-1.31l3.0,0.68l4.2,-1.2l3.24,-1.1l1.03,-1.42l1.37,-0.43l0.92,-0.88l1.99,0.13l1.39,-0.41l1.29,-1.9l1.94,-1.04l1.49,-1.58l0.31,-1.39l-0.91,-2.28l2.24,0.35l1.73,-0.2l0.97,-0.61l0.95,0.19l0.73,1.07l0.86,0.61l-0.47,3.84l-1.41,2.53l0.64,0.69l3.42,0.47l1.33,0.96l-0.4,1.85l2.18,3.3l-1.48,2.63l-1.97,1.26l-0.18,0.4l0.28,2.69l-1.37,3.17l-0.62,3.96l0.04,1.08l1.26,3.94l1.62,1.19l0.03,4.46l1.02,0.73l0.25,1.3l1.5,0.54l3.61,3.84l3.24,0.94l1.47,1.26l1.01,-0.07l1.28,-0.86l2.3,-0.24l0.34,-0.87l-0.18,-1.04l0.97,-0.28l0.82,-1.3l2.14,0.88l1.36,-0.04l0.59,-0.46l0.33,-1.1l2.0,-0.61l2.5,-0.08l0.71,-0.35l2.07,-2.51l2.82,-0.81l1.09,1.04l2.18,0.52l2.72,-0.48l0.86,0.13l0.79,-0.35l5.5,1.17l0.87,-0.18l0.7,-0.72l0.08,-2.13l-1.88,-2.35l-0.64,-0.31l1.25,-1.09l0.47,-1.39l2.79,1.36l4.13,-0.41l0.68,-0.61l1.78,-0.68l1.39,-0.01l0.72,-0.46l1.26,1.55l1.84,0.14l0.32,0.95l1.78,0.82l0.52,0.62l2.7,1.11l1.95,0.39l4.41,-2.72l0.4,0.47l2.78,0.68l2.1,-0.96l1.38,1.54l3.31,0.22l3.22,-2.19l0.71,-0.87l1.15,-1.82l0.1,-0.99l1.63,-3.07l1.04,-3.24l1.98,-2.21l2.12,-4.08l1.85,-1.94l0.77,-1.5l1.44,-0.93l1.27,-2.82l0.57,-0.02l1.46,0.97l1.21,1.48l1.69,4.98l0.3,4.74l2.71,7.6l0.46,2.11l1.33,3.2l-0.34,0.58l0.29,0.66l0.96,0.24l0.38,1.2l1.44,2.08l3.49,0.67l2.54,1.38l0.84,2.68l-0.21,2.92l-4.61,3.78l-0.66,1.08l-1.48,1.43l-1.41,2.58l-2.04,2.33l-0.62,0.51l-1.84,0.54l-1.67,1.95l-2.35,0.93l-0.19,1.07l-1.22,2.49l-1.81,1.87l-1.78,2.57l-0.29,3.15l-2.23,1.78l-0.33,1.85l-0.44,0.45l-0.32,0.25l-2.58,-0.38l-5.2,2.27l-0.27,0.44l0.39,0.34l4.14,0.09l1.59,0.97l3.0,-0.64l3.73,-2.35l4.23,-2.07l4.56,-3.3l0.37,0.57l-0.91,1.23l0.88,1.37l0.69,3.11l1.29,1.88l-0.04,1.56l3.48,3.09l0.49,0.04l1.67,-1.09l2.94,-1.05l3.57,1.09l4.03,-1.91l-2.02,5.74l-0.54,2.81l-0.98,1.63l0.06,0.45l0.45,0.1l1.42,-0.76l0.9,-1.21l2.96,-7.06l2.64,-1.06l3.27,-3.98l0.96,0.01l1.6,1.44l0.62,-0.26l0.17,-0.91l0.95,-0.38l0.02,-0.74l-1.2,-0.8l-0.09,-0.64l0.74,-1.01l-0.31,-1.12l1.46,-1.08l0.05,-1.17l1.21,-1.38l0.81,-0.36l0.35,-0.79l0.54,-0.22l0.71,0.64l0.55,-0.01l1.57,-1.14l1.52,0.7l1.44,-0.57l1.61,1.05l0.51,-0.5l-0.41,-0.91l0.34,-0.24l1.37,0.2l1.81,1.22l2.11,-0.01l0.73,0.43l0.79,-0.0l2.44,2.29l2.42,0.73l2.1,0.05l0.33,0.78l1.99,0.08l0.91,0.97l2.27,0.74l1.57,1.13l2.2,0.12l1.16,2.33l0.28,1.75l0.56,0.3l0.74,-0.4l1.17,-2.19l0.89,-0.34l3.58,3.06l-0.25,0.67l1.09,0.13l0.67,-0.4l0.99,1.95l0.09,1.08l-1.32,1.88l-1.09,0.44l-0.1,0.64l1.09,1.25l0.67,-0.03l0.96,-1.65l1.2,-0.56l0.45,1.62l-1.35,0.39l-0.29,1.14l-0.82,1.19l-1.6,6.86l-0.03,0.83l0.62,0.34l1.28,-0.86l2.23,-2.34l1.61,-4.97l0.76,-0.61l0.96,0.17l-0.07,0.78l-1.34,1.87l0.39,1.07l0.62,0.09l2.96,-2.6l0.92,0.07l1.56,-0.89l3.2,-0.19l0.99,-1.51l1.64,0.11l3.44,0.93l3.1,1.48l1.06,0.89l4.15,1.58l3.13,0.2l1.53,-0.68l1.64,0.66l1.1,0.88l1.98,0.47l1.95,0.24l1.63,-0.61l3.83,-0.2l4.79,-0.88l5.98,0.77l11.37,6.33l3.96,3.18l2.53,0.79l5.16,6.0l3.02,2.25l2.17,2.35l3.79,1.42l1.75,2.48l2.61,0.29l1.03,0.33l1.44,1.04l1.89,0.57l5.27,-0.03l2.22,-0.47l5.05,0.88l0.71,0.39l0.99,0.94l1.85,3.72l1.67,7.41l1.3,2.58l0.7,4.67l0.6,1.52l0.04,1.08l0.53,0.5l0.32,2.94l-0.88,5.53l0.53,2.67l-3.86,11.56l-2.17,3.59l-4.98,5.61l-1.61,-0.11l0.35,1.33l-0.35,0.71l-2.0,2.72l-2.07,1.87l-2.04,3.06l-4.4,2.27l-2.1,1.85l-1.92,2.9l-1.17,0.43l0.02,1.32l-0.93,1.32l0.03,-0.87l-0.68,-0.27l-0.45,0.46l-1.02,1.81l0.25,1.44l-0.64,1.78l-2.62,5.41l-3.97,5.99l-2.6,3.03l-1.82,1.39l-0.67,-0.05l-0.4,-2.34l-2.08,-1.75l-0.57,0.19l-0.6,1.43l-1.02,0.36l-0.2,0.71l0.88,1.08l-0.76,1.39l-0.07,1.43l-2.28,2.6l-0.78,2.9l1.18,0.47l-0.6,1.7l-0.07,3.41l0.54,1.02l0.53,-0.05l-1.21,6.7l0.76,7.39l1.38,7.47l-2.18,7.84l-1.69,8.41l-0.15,1.8l0.7,4.67l-1.32,1.59l-1.55,0.84l-0.98,0.94l-2.09,3.47l-1.08,4.92l0.48,7.96l-0.36,2.11l-0.59,1.39l-0.67,0.87l-1.96,1.26l-1.69,2.84l-0.75,2.98l-1.2,1.24l-0.23,1.61l-0.88,1.7l-2.33,2.6l-1.51,0.75l-0.86,0.83l-0.56,1.7l-1.53,2.64l-1.12,3.38l0.58,6.14l-1.29,0.95l-5.5,2.0l-1.63,0.93l-3.42,3.61l-0.08,2.12l0.43,0.62l-0.95,1.59l-6.26,-0.06l-4.45,0.34l-1.24,-0.69l0.23,-1.57l-0.25,-0.6l-1.2,-0.22l-1.28,0.58l-0.16,0.76l0.55,1.71l-0.19,0.34l-5.02,0.85l0.16,-0.43l-0.53,-0.72l-2.18,-0.72l-2.19,0.43l-1.25,0.83l-2.61,-0.07l-3.25,0.64l-0.76,0.8l0.0,1.55l1.06,0.82l-0.7,0.4l-3.56,0.66l-3.11,2.42l-1.42,0.38l-1.18,1.09l-0.44,1.4l-2.19,-0.49l-2.15,-0.01l-1.66,0.42l-10.89,5.67l-3.31,3.32l-5.47,3.68l-3.37,2.71l-1.36,0.52l-0.11,0.63l0.78,0.52l-0.14,0.69l-2.38,2.24l-0.33,-0.59l-2.52,-0.47l-1.02,0.56l0.15,1.38l-0.28,0.25l-1.7,-0.07l-0.97,-0.8l-0.48,-0.02l-0.16,0.45l0.79,1.86l2.19,0.38l0.92,0.58l-1.53,2.47l-1.57,0.57l-0.16,0.4l0.37,0.55l0.56,-0.0l0.26,0.45l-0.47,2.86l-1.5,1.12l-0.03,0.44l1.11,1.72l-0.31,3.7l0.76,2.36l0.72,3.97l-0.47,1.03l0.26,1.31l-0.83,2.49l0.44,3.44l-0.18,3.2l-0.83,2.92l-1.23,1.69l-0.1,1.74l-5.53,3.79l-2.83,2.75l-3.0,3.82l-3.47,5.76l-3.23,8.28l-5.37,8.46l-4.82,5.43l-5.34,4.0l2.3,-2.36l2.19,-1.18l1.24,-1.96l0.17,-2.82l0.38,-0.28l1.76,-0.05l0.48,-2.47l1.91,-1.11l1.11,-1.57l-0.22,-3.55l0.57,0.38l0.83,-0.23l0.61,-1.85l-0.2,-1.03l-1.3,-0.52l-3.62,1.8l-0.68,-0.05l-0.14,-1.1l-1.79,-0.92l-0.93,-2.02l-0.58,-0.33l-0.6,0.36l0.2,2.8l1.4,1.6l-0.96,1.19l-0.49,2.72l-0.25,-0.18l-0.63,0.29l-0.2,2.13l-0.88,0.77l-0.43,1.02l0.2,1.05l-2.83,2.28l-2.5,1.25l-0.67,0.69l-0.73,2.95l-1.14,1.34l-0.89,2.55l0.01,1.3l0.69,2.51l-1.61,1.95l-0.84,1.61l-2.03,5.88l-1.7,3.48l-3.17,3.48l-5.27,4.47l-1.37,-0.72l-0.13,-0.48l0.03,-0.51l0.97,-0.6l0.2,-0.8l-0.17,-1.74l0.49,-2.41l0.56,-0.71l1.62,-0.69l1.14,-2.74l0.59,-0.39l0.68,0.11l1.17,1.27l1.4,-0.15l2.4,-3.78l0.3,-2.0l-1.17,-2.14l-0.02,-1.47l-0.4,-0.71l-0.61,0.0l-0.79,0.94l-0.41,1.7l-1.6,0.91l-0.96,1.78l-1.4,0.79l-2.15,-1.05l-2.73,-2.26l-2.11,-4.77l-1.92,-1.4l-3.56,-1.27l-1.72,-1.41l-2.78,-3.56l-3.64,-1.23l-1.63,-1.44l-0.97,0.31l-0.75,-0.34l-0.87,-0.64l-1.36,-2.39l-2.39,-2.33l-0.55,-0.33l-0.63,0.06l-0.65,0.99l-1.65,1.44l-1.86,0.49l0.2,-2.78l-0.65,-1.1l-1.63,-2.02l-7.93,-6.91l-2.7,-0.05l-1.18,0.49l-1.1,1.8l-3.72,-0.27l-0.4,-0.57l2.25,-1.8l1.06,-1.25l0.27,-1.16l0.79,-0.85l1.65,-0.89l1.86,-1.64l2.03,-2.36l1.67,-2.84l1.9,-1.42l1.0,-1.25l0.89,-1.94l1.11,-1.43l2.32,-2.07l0.52,-1.12l1.06,-0.69l0.16,-0.92l1.65,0.33l0.86,-0.32l0.18,-0.78l-0.79,-1.12l0.11,-0.29l2.93,-1.46l1.59,-1.75l1.12,-0.67l1.83,-0.49l0.69,-1.23l1.62,-0.83l0.21,-0.92l0.73,-1.09l1.87,-0.28l1.27,-0.91l2.9,-0.47l0.93,-0.68l0.94,-1.38l0.64,0.16l0.89,-0.4l2.63,-1.77l1.47,-3.13l-0.4,-1.95l0.49,-4.94l0.46,-0.74l0.03,-1.04l-1.85,-3.55l-0.82,-3.73l-0.9,-0.49l-0.62,-0.8l-2.09,-0.86l-3.5,1.27l-1.6,-0.59l0.05,-1.33l2.08,-3.99l-0.18,-0.87l1.68,-6.76l0.4,-2.89l-0.44,-2.19l0.77,-0.85l-0.03,-0.65l-2.4,-1.86l-2.28,-1.16l-5.75,2.34l-1.28,0.24l-1.89,-0.31l-0.42,-0.36l-0.47,-3.21l-0.96,-1.38l0.24,-2.08l-0.42,-1.26l-0.09,-2.06l-0.51,-0.87l-0.57,-2.57l0.35,-2.84l-1.08,-1.1l-0.42,-0.82l-0.16,-1.44l-0.59,-0.75l-0.88,-0.7l-4.55,-0.49l-1.2,-1.01l-0.47,-0.99l-0.87,-0.42l-1.36,0.47l-1.16,1.51l-3.46,0.47l-3.59,-0.95l-1.19,0.23l-2.73,-0.4l-1.84,-1.03l-1.97,0.44l-0.72,-0.26l-0.24,-0.53l0.58,-1.48l-0.15,-0.96l0.38,-1.8l-0.33,-2.62l0.82,-1.63l-0.18,-0.88l0.79,-2.1l-0.04,-1.71l-0.82,-1.54l0.05,-1.76l-0.29,-0.72l-0.78,-0.47l-0.28,-2.38l-1.47,-2.18l-0.29,-1.14l0.63,-0.26l0.76,-1.06l1.5,-0.41l0.55,-0.68l-0.07,-0.51l-3.04,-2.75l3.85,-8.01l1.06,-0.72l-0.17,-1.54l-0.5,-0.39l2.35,-7.38l0.94,-0.81l-1.1,-1.49l-2.3,-5.53l-0.17,-1.36l-0.53,-0.76l-2.07,-0.13l-4.68,-3.27l-0.97,-6.42l1.54,-2.61l0.06,-2.59l-0.75,-0.37l-1.97,0.55l-19.38,-0.72l-0.78,-9.41l-3.51,-4.3l2.75,-0.09l0.39,-0.42l-0.31,-5.79l-0.5,-0.75l-0.69,-2.85l-0.78,-0.94l-0.14,-0.77l0.82,-2.12l-0.24,-1.09l-1.19,-2.0l-6.9,-3.69l-5.38,0.59l-3.26,-0.18l-1.7,-1.35l-1.73,-1.93l-0.47,-1.18l-0.91,-0.35l-1.98,-0.01l-3.97,-1.67l-1.0,-0.0l-2.8,-2.21l-0.81,-1.79l-0.82,-0.23l-1.57,0.65l-0.94,-0.28l-2.83,-1.94l-1.42,-0.56l-1.39,-0.08l-1.7,0.69l-5.5,-1.03l-1.22,-2.33l-1.15,-0.56l-2.63,-2.12l-1.82,-0.62l-1.2,-2.78l-0.55,-0.26l-0.58,0.22l0.12,-1.08l-1.74,-2.48l-0.26,-1.53l-0.56,-0.8l0.2,-1.42l0.6,-1.23l-0.15,-1.72l-1.33,-4.54l1.56,-2.91l0.23,-1.44l-0.31,-1.56l0.16,-1.96l-0.4,-1.11l-1.0,-1.11l-1.32,0.26l-0.85,0.8l-0.68,0.1l-0.95,-0.48l-2.64,0.21l-4.09,0.49l-3.89,0.94l-1.93,0.96l-4.58,3.55l-0.85,0.46l-1.22,0.15l-1.63,0.87l-2.06,1.47l-1.61,2.04l-1.17,-0.26l-2.96,0.51l-2.98,3.37l-3.62,1.57l-1.1,0.13l-0.57,-0.88l-0.92,-0.45l-4.62,-0.68l-8.83,-0.31l-3.27,1.46l-1.32,0.21l-1.09,-0.43l-0.96,-0.92l-1.19,0.28ZM790.43,433.84l-0.02,0.0l-0.01,-0.01l0.03,0.0ZM696.21,547.6l-2.86,2.1l-1.1,1.28l0.26,-1.22l-0.22,-1.57l1.88,0.51l1.04,-0.9l1.0,-0.2ZM853.5,308.31l0.11,-0.19l0.08,-0.48l0.14,0.42l-0.34,0.25ZM849.97,314.42l-0.36,-0.63l0.15,-0.14l0.39,0.01l-0.18,0.75ZM786.3,434.46l0.48,0.39l-1.39,0.38l0.65,-0.45l0.26,-0.33ZM782.69,186.02l-0.18,-0.98l0.33,-0.72l0.05,0.32l-0.21,1.37ZM777.56,166.79l0.08,-0.36l0.35,0.04l-0.43,0.32ZM773.52,444.28l-1.38,0.1l1.31,-1.56l0.35,0.64l-0.29,0.83ZM734.68,493.07l0.06,-1.19l1.05,-1.79l-0.22,1.43l-0.89,1.54ZM721.16,153.87l2.85,-0.17l1.13,-0.57l2.22,-0.04l6.36,0.82l1.64,0.46l0.51,0.55l-1.36,3.62l-0.86,0.53l0.31,1.32l-0.32,0.92l-1.57,2.51l-1.61,1.42l0.28,1.49l-1.28,1.53l-1.1,0.32l-1.33,-1.09l-0.69,0.22l-0.54,1.9l-1.01,-0.04l-1.91,-0.98l-0.56,0.3l-0.21,1.33l-0.62,0.82l-2.43,0.84l-3.04,-1.01l-0.73,0.54l-2.6,0.09l-1.3,0.52l-0.54,-0.11l-0.97,-0.93l-1.85,-5.31l0.25,-0.95l1.68,0.09l0.21,-0.98l-0.56,-0.58l-1.24,0.05l-0.66,-0.6l-0.13,-1.07l0.27,-2.96l0.63,-0.81l0.31,-2.62l0.5,-0.96l2.06,-1.29l2.43,-0.47l7.4,1.35ZM733.71,476.03l-0.38,-0.82l1.01,-1.02l-0.24,1.09l-0.39,0.75ZM723.29,151.69l-2.97,0.35l-0.92,-0.38l1.02,-0.78l2.31,-0.76l0.97,0.25l0.2,0.4l-0.62,0.92ZM719.68,147.83l0.23,0.29l-1.47,2.18l-0.77,0.3l-0.85,0.06l-1.44,-0.74l-2.34,-0.03l-0.04,-0.67l0.66,-0.89l1.67,0.04l2.89,-0.91l1.46,0.38ZM714.69,145.63l-0.92,0.26l0.24,-1.86l1.84,-0.51l0.03,0.75l-1.2,1.37ZM712.79,127.06l-1.24,0.28l-0.51,-1.16l0.16,-0.87l1.1,-0.17l0.5,1.91ZM711.3,148.79l-0.24,1.48l-1.41,-0.49l0.11,-1.28l0.93,-0.49l1.0,-1.14l0.44,-2.79l0.2,3.38l-1.03,1.32ZM708.5,152.08l-2.92,2.09l-0.9,-0.75l0.37,-1.12l1.64,-0.59l1.72,0.06l0.09,0.32ZM694.54,167.62l-0.4,0.07l1.22,-2.23l1.43,-1.36l0.14,-2.96l1.49,-2.31l1.32,-0.91l1.73,-0.25l0.86,1.15l-1.25,3.83l-2.26,2.38l-2.01,1.52l-2.26,1.07Z\",\n            name: \"Brazil\"\n          },\n          PE: {\n            path: \"M375.3,192.04l0.75,1.03l0.88,0.05l0.64,-0.63l-0.35,-1.15l3.74,-4.3l14.18,-5.04l7.27,-5.3l6.25,-7.25l1.89,-6.98l1.43,0.29l0.66,-0.63l-0.4,-2.91l0.24,-1.86l-2.01,-1.96l-0.9,-2.03l-0.91,-0.63l0.92,0.25l1.6,-0.18l1.55,-1.21l0.69,0.08l2.31,1.64l1.68,0.22l0.6,1.11l1.65,0.85l1.75,1.71l0.52,0.69l1.02,3.28l1.1,1.49l2.41,0.8l2.37,2.04l2.28,0.58l1.63,2.33l0.26,0.83l-0.31,1.42l0.35,0.65l1.94,1.26l1.14,-0.09l0.51,0.46l0.8,2.82l-0.52,1.48l0.22,1.04l2.15,0.98l0.71,0.7l1.72,0.15l2.17,-0.63l2.66,0.89l2.35,-0.33l2.01,-0.9l0.96,-0.06l2.54,-2.0l2.14,0.79l2.16,1.38l2.5,-0.26l1.1,-0.84l1.59,-0.42l2.9,1.53l0.88,0.85l2.65,0.99l4.05,2.32l-8.02,12.69l0.24,0.6l2.55,1.04l2.21,-0.61l0.98,0.67l0.86,1.96l1.86,1.42l0.51,0.73l-0.04,0.48l-0.51,0.18l-1.08,-0.54l-1.13,0.16l-2.17,-1.81l-4.78,0.28l-2.22,2.17l-3.12,0.46l-3.39,0.96l-3.98,0.45l-6.23,3.48l-4.04,3.3l-2.31,0.7l-0.41,0.58l-0.91,5.83l-3.08,5.61l1.19,3.22l-0.02,1.21l-1.0,0.96l-1.1,0.17l-2.15,1.3l-3.17,2.79l-0.65,2.46l1.0,2.53l-2.66,0.63l-0.27,0.38l0.09,1.39l-0.47,0.99l2.2,2.25l1.16,0.51l-0.69,1.6l1.63,1.89l1.26,3.43l2.17,1.57l0.05,1.01l0.65,1.06l1.27,0.88l2.64,3.18l0.04,1.25l-2.79,3.43l0.32,0.65l4.71,-0.01l5.12,1.19l0.58,0.44l0.78,2.71l0.88,0.71l-0.09,1.76l0.38,0.41l6.96,0.03l4.52,-0.5l7.47,-6.04l-0.26,1.41l0.35,1.05l-0.81,1.46l-0.07,14.46l0.64,0.32l1.0,-0.61l1.58,1.23l0.83,0.15l1.61,-0.26l3.06,-1.4l4.29,0.27l10.53,18.52l-0.79,1.08l-0.04,1.03l-1.19,0.74l-1.45,1.8l-0.05,7.48l-1.05,2.18l1.17,3.89l1.22,2.28l-1.47,0.89l-0.22,1.5l-2.52,2.55l-0.6,1.9l-1.06,0.81l-0.14,2.32l2.33,3.1l-2.03,2.92l-3.75,-2.91l-1.85,0.58l-1.43,1.2l-0.1,0.39l1.31,2.69l-0.54,-0.27l-0.74,0.13l-0.77,0.93l-0.27,0.96l0.25,1.04l1.74,1.12l0.78,0.04l0.26,-0.33l-0.11,-0.58l2.01,1.5l2.04,0.73l-0.54,1.41l0.4,0.58l2.6,0.85l2.57,-0.4l-0.3,1.9l-0.53,1.18l0.69,0.68l0.16,0.94l-1.99,1.4l-2.93,3.94l-0.73,0.23l-1.58,1.34l-0.25,0.91l1.48,1.75l0.11,1.12l-1.86,1.58l-1.35,0.17l-0.77,0.58l0.46,3.8l-0.41,1.16l-0.96,1.29l-1.5,0.9l-1.4,0.48l-2.65,0.2l-4.66,-3.51l-1.47,-1.48l-4.73,-3.08l-0.74,-3.19l-1.7,-1.69l-3.0,-1.23l-2.33,-1.68l-1.69,-0.74l-4.29,-3.64l-3.99,-1.19l-7.35,-3.85l-3.92,-1.26l-4.97,-3.52l-2.77,-1.01l-2.2,-1.66l-6.57,-3.51l-1.96,-2.76l-1.53,-1.13l-1.61,-2.34l-4.84,-3.31l-2.85,-4.9l-1.35,-1.19l-0.09,-2.09l-0.76,-0.98l1.21,-0.7l0.91,-3.53l-0.48,-1.97l-3.38,-4.81l-0.63,-1.93l-2.47,-3.69l-0.88,-2.16l-2.05,-1.73l-0.92,-1.44l-0.88,-0.46l-0.06,-1.52l-0.81,-3.31l-1.17,-1.69l-3.75,-2.88l-0.37,-3.1l-0.89,-2.35l-5.42,-9.12l-3.13,-8.71l-2.65,-4.89l-1.06,-2.74l-0.17,-1.66l-1.94,-2.54l-1.1,-2.43l-4.35,-4.48l-2.52,-4.98l-0.39,-1.57l-4.6,-6.45l-1.49,-1.52l-8.45,-4.44l-3.84,-2.61l-0.39,-1.17l0.14,-0.58l0.58,-0.5l1.27,0.49l0.96,-0.42l0.63,-1.19l0.01,-1.5l-0.81,-2.17l-2.6,-3.58l0.62,-1.8l-2.68,-4.2l0.61,-3.99l0.55,-0.96l4.07,-4.22l1.13,-1.81l1.74,-1.12l1.77,-1.69l1.9,-1.15l0.24,0.18l0.63,2.19l-0.09,1.48l0.55,1.57l-1.27,1.15l-1.61,-0.26l-0.81,0.6l-0.24,0.97l0.34,1.3l0.42,0.48l0.76,0.15l-1.19,1.62l0.24,1.03l1.53,0.41l2.73,-1.96l3.94,2.09l2.03,-0.17l1.2,0.83l0.15,1.4l0.59,1.29l1.55,2.03l0.9,0.48l2.66,0.4l2.11,-1.91l0.1,-1.58l2.71,-1.94l0.4,-1.46l-0.31,-1.41l1.52,-3.97l1.54,-2.52l0.96,-4.49Z\",\n            name: \"Peru\"\n          },\n          UY: {\n            path: \"M649.15,535.28l2.55,2.37l1.33,2.36l1.09,0.85l1.06,0.5l0.8,-0.32l1.59,1.36l3.62,1.22l2.54,3.37l1.86,1.53l3.64,1.33l1.83,1.36l1.97,4.62l2.94,2.44l1.94,0.89l-1.36,1.08l-0.54,2.05l-1.42,0.45l-1.55,1.63l-0.37,0.89l1.1,7.23l0.32,0.56l1.21,0.7l-0.81,1.17l-0.73,2.21l-2.47,3.09l-0.54,1.78l-2.59,1.78l-1.85,2.02l-1.33,0.04l-1.08,0.86l-6.31,2.66l-2.2,-0.49l-1.68,-0.0l-1.69,-1.2l-3.65,-0.44l-2.49,0.51l-3.0,1.29l-1.43,-0.08l-1.51,-0.5l-1.04,-1.21l-4.65,-1.32l-3.99,-3.09l-4.5,-0.06l-3.34,0.38l-1.44,-2.2l-2.95,-2.67l-2.24,-2.57l-0.43,-2.45l1.01,-6.11l-0.09,-0.94l1.58,-0.63l1.66,-2.4l0.11,-1.16l-1.38,-5.53l0.87,-1.86l0.08,-1.13l-0.56,-1.02l0.07,-2.53l-0.31,-0.82l1.66,-1.82l0.72,-2.13l-0.01,-0.86l-0.72,-1.04l1.88,-3.77l0.31,-1.31l-0.33,-1.74l0.73,-0.6l0.28,-0.78l-0.07,-2.1l-0.62,-1.59l0.41,-1.05l1.42,-1.47l0.75,-1.18l0.14,-0.98l0.66,0.72l4.12,0.3l0.7,-0.47l0.74,-1.46l0.87,-0.37l2.16,-0.04l7.77,6.78l1.56,1.95l0.45,0.65l-0.22,1.96l0.21,1.32l0.98,0.24l1.15,-0.2l2.52,-1.93l0.51,-0.88Z\",\n            name: \"Uruguay\"\n          },\n          FK: {\n            path: \"M609.94,830.2l1.99,0.93l2.23,-0.32l0.75,0.2l0.23,0.72l-1.24,0.15l-0.28,0.43l0.12,0.96l0.66,0.72l2.54,1.08l0.45,0.06l0.45,-0.47l-0.63,-1.8l0.21,-0.38l3.07,-0.45l1.39,1.46l-0.92,0.3l-0.54,0.79l0.21,0.61l1.59,0.61l-0.34,0.71l-3.51,0.83l-0.97,0.98l-1.32,0.62l-4.16,1.16l-0.25,0.57l0.46,0.88l-0.06,1.06l-5.34,-1.36l-0.96,0.15l-0.26,0.6l1.29,2.11l-2.79,0.17l-0.77,1.58l-1.18,-0.83l-1.28,-1.5l-0.0,-0.64l1.27,-1.61l-0.2,-0.86l3.45,-2.81l2.42,-0.84l0.17,-0.38l-0.48,-1.56l0.03,-1.31l2.39,-2.02l-0.11,-1.3l0.21,-0.01ZM614.6,841.93l0.03,0.54l-0.38,-0.4l0.35,-0.14ZM590.03,837.03l2.86,-0.67l0.53,-0.32l0.11,-0.57l-0.69,-0.94l-1.46,-0.67l-1.0,-0.87l-0.3,-1.2l2.45,1.44l1.86,0.34l2.79,-1.46l1.59,0.91l3.43,-0.77l0.68,0.11l0.74,-0.64l0.91,0.7l-7.63,8.27l-2.3,0.34l-1.44,-0.11l-1.53,2.58l-1.79,0.78l-1.86,-0.09l-1.4,-0.61l-1.36,-1.1l1.87,-1.4l2.17,0.0l3.16,-1.86l1.26,-1.35l-0.19,-0.96l-0.69,-0.33l-2.78,0.48ZM599.15,844.3l0.46,0.33l-0.3,0.48l-0.15,-0.36l-0.01,-0.44ZM594.57,831.41l-1.18,0.0l-0.14,-1.08l0.79,-0.07l0.85,0.38l-0.31,0.77ZM584.01,838.51l1.03,0.14l-0.56,1.58l-0.59,-0.04l-0.95,-1.06l1.07,-0.62Z\",\n            name: \"Falkland Is.\"\n          }\n        },\n        height: 905.8723093907364,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"us_aea\", {\n        insets: [{\n          width: 220,\n          top: 440,\n          height: 172.39541268576795,\n          bbox: [{\n            y: -8441276.54251503,\n            x: -4774054.664881942\n          }, {\n            y: -6227982.667213126,\n            x: -1949590.5739843722\n          }],\n          left: 0\n        }, {\n          width: 80,\n          top: 460,\n          height: 151.48337407091987,\n          bbox: [{\n            y: -4196208.652471859,\n            x: -5906305.806252358\n          }, {\n            y: -3657293.3059425415,\n            x: -5621698.812337889\n          }],\n          left: 245\n        }, {\n          width: 900,\n          top: 0,\n          height: 550.1122047105795,\n          bbox: [{\n            y: -5490816.561605522,\n            x: -2029882.6485830692\n          }, {\n            y: -2690009.0242363815,\n            x: 2552322.14899711\n          }],\n          left: 0\n        }],\n        paths: {\n          \"US-VA\": {\n            path: \"M682.42,289.98l1.61,-0.93l1.65,-0.48l1.12,-0.95l3.57,-1.69l0.74,-2.33l0.82,-0.19l2.32,-1.53l0.05,-1.81l2.04,-1.86l-0.13,-1.58l0.26,-0.41l5.0,-4.09l4.76,-6.0l0.09,0.63l0.96,0.54l0.33,1.37l1.32,0.74l0.71,0.81l1.46,0.09l2.09,1.13l1.41,-0.09l0.79,-0.41l0.76,-1.22l1.17,-0.57l0.53,-1.38l2.72,1.49l1.42,-1.1l2.25,-0.99l0.76,0.06l1.08,-0.97l0.33,-0.82l-0.48,-0.96l0.23,-0.42l1.9,0.58l3.26,-2.62l0.3,-0.1l0.51,0.73l0.66,-0.07l2.38,-2.34l0.17,-0.85l-0.49,-0.51l0.99,-1.12l0.1,-0.6l-0.28,-0.51l-1.0,-0.46l0.71,-3.03l2.6,-4.8l0.55,-2.15l-0.01,-1.91l1.61,-2.55l-0.22,-0.94l0.24,-0.84l0.5,-0.48l0.39,-1.7l-0.0,-3.18l1.22,0.19l1.18,1.73l3.8,0.43l0.59,-0.28l1.05,-2.52l0.2,-2.36l0.71,-1.05l-0.04,-1.61l0.76,-2.3l1.78,0.75l0.65,-0.17l1.3,-3.3l0.57,0.05l0.59,-0.39l0.52,-1.2l0.81,-0.68l0.44,-1.8l1.38,-2.43l-0.35,-2.57l0.54,-1.76l-0.3,-2.01l9.18,4.57l0.59,-0.29l0.63,-4.0l2.6,-0.07l0.63,0.57l1.05,0.23l-0.5,1.74l0.6,0.88l1.61,0.85l2.52,-0.04l1.03,1.18l1.49,0.13l2.24,1.73l-0.0,1.31l0.44,1.27l-1.67,0.96l-0.12,0.65l-0.64,0.14l-0.27,0.45l-0.47,5.03l-0.36,0.13l-0.04,0.48l1.17,0.97l-0.29,0.11l-0.04,0.76l2.03,-0.01l2.41,-1.45l0.49,-0.72l0.34,0.74l-0.52,0.63l1.21,0.88l0.69,0.13l0.42,1.11l1.62,0.52l1.94,-0.2l0.84,0.43l0.82,-0.65l0.89,0.02l0.23,0.6l1.33,0.48l0.46,1.1l1.12,-0.05l0.02,0.3l1.18,0.42l2.84,0.65l0.4,1.01l-0.85,-0.41l-0.57,0.45l0.89,1.74l-0.35,0.57l0.62,0.79l-0.43,0.89l0.24,0.59l-1.36,-0.36l-0.59,-0.72l-0.67,0.18l-0.1,0.43l-2.44,-2.29l-0.56,0.05l-0.37,-0.56l-0.52,0.32l-1.47,-1.32l-1.19,-0.38l-0.43,-0.64l-0.9,-0.39l-0.7,-1.29l-0.77,-0.64l-1.34,-0.12l-1.11,-0.81l-1.17,0.05l-0.39,0.52l0.47,0.71l1.1,-0.01l0.63,0.68l1.33,0.07l0.59,0.42l0.38,1.52l2.73,1.56l1.86,1.88l1.95,0.61l1.59,2.1l0.98,0.24l1.35,-0.45l1.28,0.47l-0.61,0.7l0.3,0.49l2.03,0.34l0.26,0.72l0.47,0.12l0.31,1.96l-0.57,-0.83l-0.52,-0.22l-0.39,0.21l-1.13,-1.0l-0.58,0.3l0.1,0.82l-0.31,0.68l0.7,0.7l-0.18,0.59l0.51,0.28l0.43,-0.14l0.28,0.35l-1.39,0.72l-6.15,-4.74l-0.58,0.11l-0.19,0.81l0.24,0.54l2.28,1.53l2.09,2.14l2.77,1.18l1.26,-0.68l0.45,1.05l1.27,0.26l-0.44,0.67l0.29,0.56l0.93,-0.19l-0.0,1.24l-0.92,0.41l-0.57,0.73l-0.64,-0.88l-3.14,-1.26l-0.42,-1.53l-0.59,-0.59l-0.87,-0.12l-1.2,0.67l-1.71,-0.44l-0.36,-1.15l-0.71,-0.05l-0.05,1.31l-0.33,0.41l-1.42,-1.32l-0.51,0.09l-0.49,0.57l-0.64,-0.4l-0.99,0.45l-2.23,-0.1l-0.37,0.94l0.34,0.46l1.9,0.22l1.4,-0.31l0.85,0.24l0.56,-0.69l0.63,0.88l1.34,0.43l1.95,-0.31l0.82,0.72l0.84,0.12l0.51,-0.55l0.77,2.44l1.35,0.13l0.23,0.43l1.68,0.71l0.45,0.68l-0.57,1.03l0.56,0.44l1.72,-1.32l0.88,-0.02l0.83,0.65l0.8,-0.26l-0.61,-0.9l0.0,-0.82l-0.46,-0.34l3.99,0.08l0.93,-0.73l2.07,3.53l-0.4,0.7l0.65,3.09l-1.19,-0.58l-0.02,0.88l-30.94,7.83l-37.18,8.41l-19.51,3.35l-11.78,1.24l-0.82,0.62l-28.2,5.01ZM781.17,223.48l0.11,0.08l-0.08,0.06l0.0,-0.03l-0.03,-0.11ZM808.02,244.55l0.53,-1.15l-0.62,-0.62l0.58,-0.97l-0.39,-0.71l-0.03,-0.49l0.44,-0.35l-0.17,-0.73l0.62,-0.3l0.23,-0.6l0.14,-2.33l1.01,-0.39l-0.12,-0.9l0.48,-0.14l-0.26,-1.53l-0.79,-0.4l0.87,-0.57l0.1,-0.96l2.64,-1.01l0.31,2.47l-0.97,2.12l-2.32,7.36l-0.58,1.0l0.17,1.12l-0.48,0.31l-0.33,1.09l0.25,4.27l-1.1,-1.81l0.23,-0.94l-0.33,-1.57l0.28,-0.97l-0.38,-0.29Z\",\n            name: \"Virginia\"\n          },\n          \"US-PA\": {\n            path: \"M716.45,159.95l0.63,-0.19l4.3,-3.73l1.12,5.19l0.48,0.31l34.84,-7.93l34.27,-8.64l1.42,0.58l0.71,1.39l0.63,0.13l0.77,-0.33l1.24,0.59l0.14,0.85l0.81,0.41l-0.16,0.58l0.89,2.69l1.9,2.07l2.12,0.75l2.2,-0.2l0.72,0.79l-0.89,0.87l-0.73,1.48l-0.17,2.25l-1.41,3.35l-1.37,1.58l0.04,0.79l1.79,1.72l-0.31,1.65l-0.84,0.43l-0.22,0.66l0.14,1.48l1.04,2.87l0.52,0.25l1.2,-0.18l1.18,2.39l0.95,0.58l0.66,-0.26l0.6,0.9l4.23,2.75l0.12,0.41l-1.29,0.93l-3.71,4.22l-0.23,0.75l0.17,0.9l-1.36,1.13l-0.84,0.15l-1.33,1.08l-0.31,0.66l-1.72,-0.12l-2.03,0.84l-1.15,1.37l-0.41,1.39l-37.22,9.21l-39.1,8.66l-10.03,-48.2l1.92,-1.22l3.07,-3.04Z\",\n            name: \"Pennsylvania\"\n          },\n          \"US-TN\": {\n            path: \"M571.74,341.02l0.86,-0.84l0.29,-1.37l1.0,0.04l0.65,-0.79l-0.99,-4.89l1.41,-1.93l0.06,-1.32l1.18,-0.46l0.36,-0.48l-0.63,-1.31l0.57,-1.21l-0.89,-1.33l2.55,-1.57l1.09,-1.13l-0.14,-0.84l-0.85,-0.53l0.14,-0.19l0.34,-0.16l0.85,0.37l0.46,-0.33l-0.27,-1.31l-0.85,-0.9l0.06,-0.71l0.51,-1.43l1.0,-1.11l-1.35,-2.06l1.37,-0.21l0.61,-0.55l-0.13,-0.64l-1.17,-0.82l0.82,-0.15l0.58,-0.54l0.13,-0.69l-0.58,-1.38l0.02,-0.36l0.37,0.53l0.47,0.08l1.18,-1.15l23.66,-2.81l0.35,-0.41l-0.1,-1.34l-0.84,-2.39l2.98,-0.08l0.82,0.58l22.78,-3.54l7.64,-0.46l7.5,-0.86l8.82,-1.42l24.01,-3.09l1.11,-0.6l29.29,-5.2l0.73,-0.6l3.56,-0.54l-0.4,1.44l0.43,0.85l-0.4,2.0l0.36,0.82l-1.15,-0.03l-1.71,1.79l-1.21,3.89l-0.55,0.7l-0.56,0.08l-0.63,-0.74l-1.44,-0.02l-2.66,1.73l-1.42,2.73l-0.96,0.89l-0.34,-0.34l-0.13,-1.05l-0.73,-0.54l-0.53,0.15l-2.3,1.81l-0.29,1.32l-0.93,-0.24l-0.9,0.48l-0.16,0.77l0.32,0.73l-0.85,2.18l-1.28,0.06l-1.75,1.14l-1.89,2.3l-0.78,0.27l-2.28,2.46l-4.04,0.78l-2.58,1.7l-0.49,1.09l-0.88,0.55l-0.55,0.81l-0.18,2.88l-0.35,0.6l-1.65,0.52l-0.89,-0.16l-1.06,1.14l0.21,5.24l-20.21,3.32l-21.61,3.04l-25.56,2.95l-0.34,0.31l-7.39,0.9l-28.72,3.17Z\",\n            name: \"Tennessee\"\n          },\n          \"US-WV\": {\n            path: \"M693.03,248.37l3.95,-1.54l0.35,-0.71l0.12,-2.77l1.15,-0.22l0.4,-0.61l-0.57,-2.49l-0.61,-1.24l0.49,-0.64l0.36,-2.77l0.68,-1.66l0.45,-0.39l1.24,0.55l0.41,0.71l-0.14,1.13l0.71,0.46l0.78,-0.44l0.48,-1.42l0.49,0.21l0.57,-0.2l0.2,-0.44l-0.63,-2.09l-0.75,-0.55l0.81,-0.79l-0.26,-1.71l0.74,-2.0l1.65,-0.51l0.17,-1.6l1.02,-1.42l0.43,-0.08l0.65,0.79l0.67,0.19l2.28,-1.59l1.5,-1.64l0.79,-1.83l2.45,-2.67l0.37,-2.41l-0.73,-1.0l0.71,-2.33l-0.25,-0.76l0.59,-0.58l-0.27,-3.43l0.47,-3.93l0.53,-0.8l0.08,-1.11l-0.38,-1.21l-0.39,-0.33l-0.04,-2.0l-1.57,-1.9l0.44,-0.54l0.85,-0.1l0.3,-0.33l4.03,19.33l0.47,0.31l16.59,-3.55l2.17,10.68l0.5,0.37l2.06,-2.5l0.97,-0.56l0.34,-1.03l1.63,-1.99l0.25,-1.05l0.52,-0.4l1.19,0.45l0.74,-0.32l1.32,-2.6l0.6,-0.46l-0.04,-0.85l0.42,0.59l1.81,0.52l3.2,-0.57l0.78,-0.86l0.08,-1.46l2.0,-0.74l1.02,-1.69l0.67,-0.1l3.16,1.5l1.8,-0.71l-0.45,1.02l0.56,0.92l1.27,0.42l0.09,0.96l1.13,0.43l0.09,1.2l0.33,0.42l-0.58,3.64l-9.0,-4.48l-0.64,0.24l-0.31,1.14l0.38,1.61l-0.52,1.62l0.41,2.28l-1.36,2.4l-0.42,1.76l-0.72,0.53l-0.42,1.11l-0.27,0.21l-0.61,-0.23l-0.37,0.33l-1.25,3.28l-1.84,-0.78l-0.64,0.25l-0.94,2.77l0.08,1.46l-0.73,1.14l-0.19,2.33l-0.89,2.2l-3.25,-0.36l-1.44,-1.76l-1.71,-0.24l-0.5,0.41l-0.26,2.17l0.19,1.3l-0.32,1.45l-0.49,0.45l-0.31,1.04l0.23,0.92l-1.58,2.44l-0.04,2.1l-0.52,2.0l-2.58,4.73l-0.75,3.16l0.14,0.76l1.13,0.55l-1.08,1.38l0.06,0.6l0.45,0.4l-2.16,2.13l-0.55,-0.7l-0.84,0.15l-3.12,2.53l-1.03,-0.56l-1.32,0.26l-0.44,0.91l0.45,1.17l-0.91,0.91l-0.73,-0.05l-2.27,1.0l-1.21,0.96l-2.18,-1.36l-0.73,-0.01l-0.82,1.58l-1.1,0.49l-1.22,1.46l-1.08,0.08l-1.98,-1.09l-1.3,-0.01l-0.61,-0.74l-1.19,-0.6l-0.31,-1.33l-0.89,-0.55l0.36,-0.67l-0.3,-0.81l-0.85,-0.37l-0.84,0.25l-1.33,-0.17l-1.26,-1.19l-2.06,-0.79l-0.76,-1.43l-1.58,-1.24l-0.7,-1.49l-1.0,-0.6l-0.12,-1.09l-1.38,-0.95l-2.0,-2.27l0.71,-2.03l-0.25,-1.62l-0.66,-1.46Z\",\n            name: \"West Virginia\"\n          },\n          \"US-NV\": {\n            path: \"M139.46,329.14l-12.69,-16.93l-36.58,-51.09l-25.34,-34.51l13.7,-64.18l46.88,9.24l46.98,7.74l-18.71,125.81l-0.9,1.16l-0.99,2.19l-0.44,0.17l-1.34,-0.22l-0.98,-2.24l-0.7,-0.63l-1.41,0.22l-1.95,-1.02l-1.6,0.23l-1.78,0.96l-0.76,2.48l0.88,2.59l-0.6,0.97l-0.24,1.3l0.38,3.12l-0.76,2.54l0.77,3.71l-0.13,3.07l-0.3,1.07l-1.04,0.31l0.2,1.31l-0.52,0.62Z\",\n            name: \"Nevada\"\n          },\n          \"US-TX\": {\n            path: \"M276.24,412.51l33.07,1.98l32.79,1.35l0.41,-0.39l3.6,-98.69l25.86,0.61l26.29,0.22l0.05,42.08l0.44,0.4l1.02,-0.13l0.78,0.28l3.74,3.82l1.66,0.21l0.88,-0.58l2.49,0.64l0.6,-0.68l0.11,-1.05l0.6,0.76l0.92,0.22l0.38,0.93l0.77,0.78l-0.01,1.64l0.52,0.83l2.85,0.42l1.25,-0.2l1.38,0.89l2.78,0.69l1.82,-0.56l0.62,0.1l1.89,1.8l1.4,-0.11l1.25,-1.43l2.43,0.26l1.67,-0.46l0.1,2.28l0.91,0.67l1.62,0.4l-0.04,2.08l1.56,0.79l1.82,-0.66l1.57,-1.67l1.02,-0.65l0.41,0.19l0.45,1.64l2.01,0.2l0.24,1.05l0.72,0.48l1.47,-0.21l0.88,-0.93l0.39,0.33l0.59,-0.08l0.61,-0.99l0.26,0.41l-0.45,1.23l0.14,0.76l0.67,1.14l0.78,0.42l0.57,-0.04l0.6,-0.5l0.68,-2.36l0.91,-0.65l0.35,-1.54l0.57,-0.14l0.4,0.14l0.29,0.99l0.57,0.64l1.21,0.02l0.83,0.5l1.25,-0.2l0.68,-1.34l0.48,0.15l-0.13,0.7l0.49,0.69l1.21,0.45l0.49,0.72l1.52,-0.05l1.49,1.74l0.52,0.02l0.63,-0.62l0.08,-0.71l1.49,-0.1l0.93,-1.43l1.88,-0.41l1.66,-1.13l1.52,0.83l1.51,-0.22l0.29,-0.83l2.29,-0.73l0.52,-0.55l0.5,0.32l0.38,0.88l1.82,0.42l1.69,-0.06l1.86,-1.14l0.41,-1.05l1.06,0.31l2.24,1.56l1.16,0.17l1.79,2.08l2.14,0.41l1.04,0.92l0.76,-0.11l2.48,0.85l1.04,0.04l0.37,0.79l1.38,0.97l1.45,-0.12l0.39,-0.72l0.8,0.36l0.88,-0.4l0.92,0.35l0.76,-0.15l0.64,0.36l2.22,34.02l1.51,1.67l1.3,0.82l1.25,1.87l0.57,1.63l-0.1,2.64l1.0,1.21l0.85,0.4l-0.12,0.85l0.75,0.54l0.28,0.87l0.65,0.7l-0.19,1.17l1.0,1.02l0.59,1.63l0.5,0.34l0.55,-0.1l-0.16,1.71l0.81,1.22l-0.64,0.25l-0.35,0.68l0.77,1.27l-0.55,0.89l0.19,1.39l-0.75,2.69l-0.74,0.85l-0.36,1.54l-0.79,1.13l0.64,2.0l-0.83,2.28l0.17,1.07l0.83,1.2l-0.19,1.01l0.49,1.6l-0.24,1.41l-1.18,1.78l-1.18,0.4l-1.16,2.72l-0.03,2.1l1.39,1.67l-3.43,0.08l-7.37,3.78l-0.02,-0.43l-0.69,-0.24l-0.23,0.23l-0.78,-0.43l-3.38,1.13l0.65,-1.31l0.35,-2.04l-0.34,-1.36l-0.8,-0.78l-1.79,0.16l-1.18,2.58l-0.42,0.15l-0.36,-0.65l-2.38,-1.23l-0.4,0.31l-0.18,0.82l0.23,0.45l1.07,0.38l-0.3,0.82l0.54,0.81l-0.47,0.64l0.04,0.99l1.48,0.76l-0.44,0.47l0.5,1.12l0.91,0.23l0.28,0.37l-0.4,1.25l-0.45,-0.12l-0.97,0.81l-1.72,2.25l-1.18,-0.4l-0.49,0.12l0.32,1.0l0.08,2.54l-1.85,1.49l-1.91,2.11l-0.96,0.37l-4.1,2.9l-3.3,0.44l-2.54,1.07l-0.2,1.12l-0.75,-0.34l-2.04,0.89l-0.33,-0.34l-1.11,0.18l0.43,-0.87l-0.52,-0.6l-1.43,0.22l-1.22,1.08l-0.6,-0.62l-0.11,-1.2l-1.38,-0.81l-0.5,0.44l0.65,1.44l0.01,1.12l-0.71,0.09l-0.54,-0.44l-0.75,-0.0l-0.55,-1.34l-1.46,-0.37l-0.58,0.39l0.04,0.54l0.94,1.7l0.03,1.23l0.58,0.37l0.37,-0.16l1.13,0.78l-0.75,0.37l-0.12,0.9l0.7,0.23l1.08,-0.55l0.96,0.6l-4.27,2.42l-0.57,-0.13l-0.37,-1.44l-0.5,-0.19l-1.13,-1.47l-0.48,-0.03l-1.05,1.99l1.19,1.61l-0.31,1.04l0.33,0.85l-1.66,1.79l-0.37,0.2l0.37,-0.63l-0.18,-0.72l0.25,-0.73l-0.46,-0.67l-0.52,0.17l-0.71,1.1l0.26,0.72l-0.39,0.95l-0.07,-1.13l-0.52,-0.55l-1.95,1.29l-0.78,-0.33l-0.69,0.51l0.07,0.75l-0.81,0.99l0.02,0.49l1.25,0.63l0.03,0.56l0.78,0.29l0.7,-1.41l0.86,-0.41l0.01,0.62l-2.82,4.36l-1.23,-1.0l-1.36,0.39l-0.32,-0.34l-2.4,0.39l-0.46,-0.31l-0.65,0.16l-0.18,0.58l0.41,0.61l0.55,0.38l1.53,0.03l0.54,1.55l2.07,1.03l-2.7,7.63l-0.2,0.1l-0.39,-0.54l-0.33,0.1l0.18,-0.75l-0.57,-0.43l-2.35,1.95l-1.67,-2.31l-1.23,-0.97l-0.61,0.4l0.09,0.52l1.44,2.0l-0.24,0.46l0.36,0.47l-1.17,-0.21l-0.33,0.63l0.5,0.56l0.89,0.23l1.12,-0.16l0.66,0.62l1.37,0.18l1.0,-0.03l0.99,-0.62l-0.34,1.59l0.24,0.77l-0.98,0.7l0.37,1.59l-1.12,0.14l-0.43,0.41l0.4,2.11l-0.33,1.6l0.45,0.64l0.84,0.24l0.87,2.86l0.71,2.8l-0.91,0.82l0.62,0.49l-0.08,1.28l0.71,0.3l0.18,0.61l0.58,0.29l0.4,1.79l0.68,0.31l0.45,3.21l1.46,0.62l-0.52,1.1l0.31,1.08l-0.62,0.77l-0.84,-0.05l-0.54,0.44l0.09,1.3l-0.49,-0.33l-0.49,0.25l-0.39,-0.67l-1.49,-0.45l-2.92,-2.53l-2.2,-0.18l-0.81,-0.51l-4.2,0.09l-0.9,0.42l-0.79,-0.62l-1.64,0.24l-2.12,-0.89l-0.73,-0.97l-0.6,-0.14l-0.21,-0.72l-1.17,-0.49l-0.99,-0.02l-1.98,-0.87l-1.45,0.39l-0.83,-1.09l-0.6,-0.21l-1.43,-1.38l-1.96,0.01l-1.47,-0.64l-0.86,0.11l-1.62,-0.41l0.35,-0.9l-0.3,-0.97l-1.11,-0.7l0.3,-0.29l-0.26,-1.44l0.56,-1.21l-0.35,-0.67l0.88,-0.38l0.12,-0.54l-1.04,-0.54l-0.91,0.67l-0.32,-0.31l0.03,-1.09l-0.59,-0.83l0.31,-0.09l0.53,-1.43l-0.22,-0.71l-0.71,0.09l-1.03,0.96l-0.57,-0.89l-0.85,-0.28l-0.26,-1.34l-1.51,-0.77l0.29,-0.65l-0.24,-0.76l0.34,-2.18l-0.45,-0.96l-1.04,-1.01l0.65,-1.99l0.05,-1.19l-0.18,-0.7l-0.54,-0.33l-0.15,-1.81l-1.85,-1.44l-0.86,0.21l-0.3,-0.41l-0.81,-0.11l-0.74,-1.31l-2.22,-1.71l0.01,-0.69l-0.51,-0.58l0.12,-0.87l-0.97,-0.92l-0.08,-0.75l-1.12,-0.61l-1.3,-2.88l-2.66,-1.48l-0.38,-0.91l-1.13,-0.59l-0.06,-1.16l-0.82,-1.19l-0.59,-1.95l0.41,-0.22l-0.04,-0.72l-1.03,-0.49l-0.26,-1.29l-0.82,-0.58l-0.94,-1.73l-0.61,-2.38l-1.85,-2.36l-0.87,-4.24l-1.81,-1.34l0.05,-0.7l-0.75,-1.21l-4.07,-2.82l-0.29,-1.39l1.68,-0.02l0.79,-0.84l-0.29,-0.39l-0.65,-0.06l-0.09,-0.72l0.08,-0.89l0.64,-0.7l-0.11,-0.74l-0.48,0.05l-0.77,0.72l-0.45,0.69l0.01,0.66l-0.88,0.15l-0.39,1.07l-0.54,-0.04l-1.81,-1.75l0.06,-0.67l-0.41,-0.68l-0.77,-0.2l-0.64,0.29l-0.33,-0.53l-0.73,-0.13l-0.89,-2.16l-1.49,-0.8l-0.85,0.27l-0.44,-0.87l-0.61,0.1l-0.25,0.61l-1.05,0.16l-2.88,-0.47l-0.39,-0.38l-1.48,-0.03l-0.79,0.29l-0.77,-0.44l-2.66,0.27l-2.42,-1.08l-1.14,-0.89l-0.68,-0.07l-1.03,0.82l-0.64,1.61l-1.99,-0.17l-0.51,0.44l-0.49,-0.17l-2.52,0.78l-3.07,6.25l-0.18,1.77l-0.76,0.67l-0.38,1.8l0.35,0.59l-1.97,0.98l-0.75,1.32l-1.07,0.61l-0.62,0.83l-0.29,1.09l-2.91,-0.34l-1.04,-0.87l-0.54,0.3l-1.69,-1.21l-1.31,-1.63l-2.9,-0.85l-1.15,-0.95l-0.02,-0.67l-0.42,-0.4l-2.75,-0.51l-2.28,-1.03l-1.89,-1.75l-0.91,-1.53l-0.96,-0.91l-1.53,-0.29l-1.76,-1.26l-0.22,-0.56l-1.14,-0.97l-0.83,-2.9l-0.86,-1.01l-0.24,-1.1l-0.76,-1.27l-0.26,-2.34l0.52,-3.04l-3.0,-5.07l-0.06,-1.94l-1.26,-2.51l-0.99,-0.44l-0.43,-1.24l-1.43,-0.81l-2.15,-2.17l-1.02,-0.1l-2.01,-1.25l-3.18,-3.35l-0.59,-1.55l-3.13,-2.55l-1.59,-2.45l-1.19,-0.95l-0.61,-1.05l-4.42,-2.6l-2.4,-5.42l-1.37,-1.08l-1.12,-0.08l-1.76,-1.68l-0.79,-3.05ZM502.12,468.09l-0.33,0.17l0.18,-0.16l0.15,-0.02ZM498.72,470.76l-0.09,0.12l-0.04,0.02l0.13,-0.14ZM467.58,489.09l0.03,0.02l-0.02,0.02l-0.0,-0.03ZM453.97,547.08l0.76,-0.5l0.25,-0.68l0.11,1.08l-1.11,0.1Z\",\n            name: \"Texas\"\n          },\n          \"US-NH\": {\n            path: \"M829.91,105.39l0.2,-1.33l-1.43,-5.38l0.53,-1.45l-0.28,-2.22l1.0,-1.86l-0.13,-2.3l0.64,-2.28l-0.44,-0.62l0.29,-2.3l-0.93,-3.8l0.08,-0.7l0.3,-0.45l1.83,-0.8l0.7,-1.39l1.43,-1.62l0.74,-1.8l-0.25,-1.13l0.52,-0.62l-2.34,-3.49l0.87,-3.26l-0.11,-0.78l-0.81,-1.29l0.28,-0.59l-0.23,-0.7l0.48,-3.2l-0.36,-0.82l0.91,-1.49l2.44,0.33l0.65,-0.86l12.99,34.86l0.84,3.65l2.6,2.21l0.88,0.34l0.36,1.6l1.71,1.31l0.0,0.35l0.77,0.23l-0.06,0.58l-0.46,3.09l-1.57,0.24l-1.32,1.19l-0.51,0.94l-0.96,0.37l-0.5,1.68l-1.1,1.44l-17.61,4.74l-1.7,-1.43l-0.41,-0.89l-0.1,-2.0l0.54,-0.59l0.03,-0.52l-1.02,-5.18Z\",\n            name: \"New Hampshire\"\n          },\n          \"US-NY\": {\n            path: \"M821.95,168.59l-0.84,-0.72l0.83,-3.23l1.03,-0.3l0.37,-0.48l0.74,0.21l0.64,-0.32l-0.06,-0.58l0.43,-0.05l0.28,-0.66l0.72,-0.32l-0.21,-1.42l0.73,-0.47l0.35,0.56l1.04,-0.16l0.49,-0.33l0.01,-0.54l1.46,-0.18l0.24,-0.74l1.66,0.02l0.91,-0.54l0.45,-1.21l0.62,0.24l0.43,-0.5l4.32,-1.28l2.35,-1.12l2.36,-2.84l0.18,0.17l-2.53,3.41l-0.01,0.46l0.56,0.38l1.59,-0.33l0.28,0.61l-1.3,1.19l-2.05,0.53l-0.37,0.58l-1.16,0.41l0.23,0.43l-0.24,0.3l-0.68,-0.16l-0.74,0.7l-1.04,0.17l-0.37,0.55l-1.42,0.45l-0.26,0.67l-1.34,0.19l-0.44,0.7l-1.35,0.96l-2.77,1.33l-1.02,0.88l-1.04,0.09l-0.32,0.93l-0.28,0.03l-0.26,-0.68l-1.45,-0.25l-0.88,0.74l0.07,0.96l-0.94,0.56ZM844.29,155.03l0.88,-2.14l1.18,-0.48l0.6,-0.93l0.81,0.34l0.13,-0.83l0.75,0.63l-3.84,3.68l-0.51,-0.28ZM845.16,149.15l0.06,-0.06l0.18,-0.06l-0.11,0.19l-0.13,-0.07ZM722.08,155.52l3.76,-3.85l1.27,-2.19l1.75,-1.86l1.16,-0.78l1.28,-3.35l2.09,-2.13l-0.21,-1.84l-1.61,-2.42l0.42,-1.13l-0.17,-0.78l-0.83,-0.53l-2.09,-0.0l0.04,-0.99l-0.58,-2.23l4.98,-2.94l4.48,-1.79l2.38,-0.2l1.84,-0.74l5.64,-0.24l3.12,1.25l3.16,-1.68l5.49,-1.06l0.59,0.45l0.68,-0.2l0.12,-0.99l3.23,-1.85l0.69,-2.05l1.87,-1.76l0.78,-1.26l1.12,0.03l1.13,-0.52l1.07,-1.63l-0.46,-0.69l0.36,-1.2l-0.25,-0.51l-0.64,0.02l-0.17,-1.18l-0.94,-1.58l-1.01,-0.62l0.12,-0.18l0.59,0.39l0.53,-0.27l0.75,-1.43l-0.01,-0.92l0.81,-0.64l-0.01,-0.98l-0.93,-0.19l-0.6,0.7l-0.28,0.12l0.56,-1.3l-0.81,-0.63l-1.26,0.05l-0.87,0.77l-0.98,-0.7l2.05,-2.51l1.78,-1.47l1.67,-2.63l0.7,-0.56l0.89,-1.54l0.07,-0.56l-0.49,-0.94l0.78,-1.9l4.82,-7.61l4.76,-4.5l2.84,-0.51l19.65,-5.66l0.4,0.87l-0.08,2.01l1.02,1.22l0.43,3.79l2.29,3.25l-0.09,1.89l0.85,2.41l-0.59,1.07l-0.0,3.41l0.71,0.89l1.32,2.76l0.19,1.09l0.62,0.84l0.12,3.92l0.55,0.85l0.54,0.07l0.53,-0.61l0.06,-0.87l0.33,-0.07l1.05,1.12l3.87,14.48l0.11,1.59l0.62,1.09l0.33,14.92l0.6,0.62l3.57,16.23l1.26,1.34l-2.82,3.18l0.03,0.54l1.74,1.62l-1.86,3.37l0.21,1.06l-1.03,0.45l-0.24,-4.26l-0.56,-2.23l-0.74,-1.62l-1.46,-1.1l-0.17,-1.13l-0.7,-0.09l-0.42,1.33l0.8,1.45l0.94,0.69l0.95,2.79l-13.74,-4.06l-1.28,-1.47l-2.39,0.24l-0.63,-0.43l-1.06,-0.15l-1.74,-1.91l-0.75,-2.33l0.12,-0.72l-0.36,-0.63l-0.56,-0.21l0.09,-0.46l-0.35,-0.42l-1.64,-0.68l-1.08,0.32l-0.53,-1.22l-1.92,-0.93l-34.6,8.73l-34.43,7.84l-1.11,-5.15Z\",\n            name: \"New York\"\n          },\n          \"US-HI\": {\n            path: \"M293.44,610.32l-0.16,-1.33l-1.79,-3.5l-1.21,-1.37l0.23,-0.95l-0.21,-0.49l0.64,-1.68l4.55,-5.05l0.88,-5.09l0.45,-0.65l0.48,-2.22l-0.34,-2.5l0.41,-1.79l1.19,-0.79l1.55,-0.08l1.27,-0.5l1.51,0.3l2.68,-1.18l1.51,-0.07l1.15,-1.13l-0.03,-3.17l0.35,-1.25l0.99,-1.6l1.21,-0.53l2.67,2.45l-0.1,1.68l1.07,1.67l0.81,2.19l1.64,1.05l2.04,2.64l3.96,7.75l0.59,3.31l-2.1,3.31l0.14,0.54l0.73,0.44l1.2,0.23l0.29,0.68l-0.01,0.53l-0.8,1.13l-0.09,1.86l0.56,2.06l1.01,1.51l0.17,1.18l-0.37,0.44l-2.35,0.67l-1.45,-0.32l-2.49,0.4l-1.2,-0.39l-2.49,-0.11l-3.15,-1.01l-0.9,-0.94l-1.39,-0.68l-2.87,0.15l-4.73,-0.64l-1.91,0.32l-1.08,1.21l-1.89,0.33l-1.22,0.8l-1.62,0.21ZM302.97,554.35l1.47,-2.4l0.62,-1.93l-0.3,-0.8l-0.55,-0.42l-1.1,0.04l-1.49,-2.22l-0.31,-2.64l0.31,-0.99l0.92,-0.89l0.88,-0.53l1.05,-0.12l0.9,0.44l0.73,1.4l0.05,3.78l1.07,0.23l1.89,1.04l1.66,0.12l1.88,1.67l0.65,3.28l0.56,0.34l0.11,1.09l2.18,2.69l-0.14,1.17l-1.45,1.15l-0.84,-0.19l-0.81,0.3l-0.68,-0.4l-1.7,-0.23l-1.91,-1.3l-3.1,-0.5l-0.96,-1.02l-1.42,-0.79l-0.16,-1.4ZM273.53,509.24l-0.16,-0.35l0.54,-1.85l-0.3,-1.63l0.39,-1.12l-0.31,-1.61l0.83,-1.4l-0.26,-1.26l3.14,2.06l2.55,-0.17l1.08,-0.64l1.25,-0.12l0.77,0.28l0.39,1.22l-0.11,1.03l-0.4,0.54l0.01,2.42l0.41,1.21l-0.78,0.43l-0.61,1.27l0.64,2.46l0.61,0.41l0.56,-0.16l-0.24,0.78l0.3,0.88l-0.35,0.37l-0.14,1.04l0.56,1.3l-1.15,0.14l-0.29,-0.77l-2.67,-0.85l-0.05,-0.86l-0.79,-1.25l0.15,-0.76l-0.26,-0.63l-1.05,0.24l-0.45,-0.78l0.16,-0.27l1.0,0.06l0.45,-0.62l-0.42,-0.96l-0.64,-0.2l-0.35,-0.61l-0.47,0.25l-0.47,-0.55l-0.38,0.32l0.14,1.95l-2.85,-1.22ZM284.15,511.85l0.1,-0.21l-0.0,-0.01l0.1,0.09l-0.19,0.14ZM246.14,461.52l2.01,-0.42l1.12,-0.67l1.33,0.51l3.66,0.37l0.71,1.4l1.04,-0.06l1.12,1.14l0.89,0.21l0.72,0.89l0.28,1.56l-0.23,1.15l-0.51,0.62l-2.05,0.87l-1.37,1.99l-0.6,-0.19l-0.46,0.49l-2.84,0.16l-3.61,-3.83l-0.24,-1.91l-1.68,-2.24l0.05,-1.26l0.66,-0.81Z\",\n            name: \"Hawaii\"\n          },\n          \"US-VT\": {\n            path: \"M805.54,72.68l26.02,-7.96l0.89,1.85l-0.74,2.37l-0.03,1.54l2.22,2.75l-0.51,0.58l0.26,1.13l-0.67,1.6l-1.35,1.49l-0.64,1.32l-1.72,0.7l-0.62,0.92l-0.1,0.98l0.93,3.74l-0.29,2.44l0.4,0.54l-0.6,2.11l0.15,2.19l-1.0,1.87l0.27,2.36l-0.53,1.54l1.43,5.44l-0.22,1.22l1.05,5.3l-0.58,0.85l0.11,2.31l0.6,1.26l1.51,1.1l-11.72,3.08l-4.31,-16.79l-1.72,-1.59l-0.91,0.25l-0.3,1.19l-0.12,-0.26l-0.11,-3.91l-0.68,-1.0l-0.14,-0.98l-1.37,-2.85l-0.63,-0.68l0.01,-3.15l0.6,-1.15l-0.86,-2.57l0.08,-1.93l-0.39,-0.91l-1.55,-1.63l-0.38,-0.81l-0.41,-3.71l-1.03,-1.27l0.11,-1.87l-0.42,-1.0Z\",\n            name: \"Vermont\"\n          },\n          \"US-NM\": {\n            path: \"M230.94,422.8l11.82,-123.64l25.66,2.24l26.09,1.86l26.12,1.45l25.74,1.02l-0.31,10.24l-0.74,0.39l-3.59,98.67l-32.38,-1.34l-33.52,-2.02l-0.44,0.76l0.54,2.31l0.44,1.26l1.0,0.77l-30.53,-2.46l-0.43,0.36l-0.81,9.46l-14.64,-1.33Z\",\n            name: \"New Mexico\"\n          },\n          \"US-NC\": {\n            path: \"M676.72,321.71l0.92,0.17l1.52,-0.39l0.42,-0.39l0.52,-0.97l0.13,-2.7l1.34,-1.19l0.47,-1.05l2.24,-1.47l2.12,-0.52l0.76,0.18l1.32,-0.52l2.36,-2.52l0.78,-0.25l1.84,-2.29l1.48,-1.0l1.55,-0.19l1.15,-2.65l-0.28,-1.22l1.65,0.06l0.51,-1.65l0.93,-0.77l1.08,-0.77l0.51,1.52l1.07,0.33l1.34,-1.17l1.35,-2.64l2.49,-1.59l0.79,0.08l0.82,0.8l1.06,-0.21l0.84,-1.07l1.47,-4.18l1.08,-1.1l1.47,0.09l0.44,-0.31l-0.69,-1.26l0.4,-2.0l-0.42,-0.9l0.38,-1.25l7.42,-0.86l19.54,-3.36l37.21,-8.42l31.11,-7.87l0.4,1.21l3.54,3.24l1.0,1.53l-1.2,-1.0l-0.16,-0.63l-0.92,-0.41l-0.52,0.05l-0.24,0.65l0.66,0.54l0.59,1.56l-0.53,0.01l-0.91,-0.75l-2.31,-0.8l-0.4,-0.48l-0.55,0.13l-0.31,0.69l0.14,0.64l1.37,0.44l1.69,1.38l-1.1,0.66l-2.49,-1.2l-0.35,0.5l0.14,0.42l1.6,1.18l-1.84,-0.33l-2.23,-0.87l-0.46,0.14l0.01,0.48l0.6,0.7l1.7,0.83l-0.97,0.58l0.0,0.6l-0.43,0.53l-1.48,0.75l-0.89,-0.77l-0.61,0.22l-0.1,0.35l-0.2,-0.13l-1.31,-2.32l0.21,-2.63l-0.42,-0.48l-0.89,-0.22l-0.37,0.64l0.62,0.71l-0.43,0.99l-0.02,1.03l0.49,1.73l1.6,2.2l-0.31,1.28l0.48,0.29l2.97,-0.59l2.1,-1.49l0.27,0.01l0.37,0.79l0.76,-0.34l1.56,0.05l0.16,-0.72l-0.57,-0.32l1.29,-0.76l2.04,-0.46l-0.1,1.19l0.64,0.29l-0.6,0.88l0.88,1.19l-0.84,0.1l-0.19,0.66l1.38,0.46l0.26,0.94l-1.21,0.05l-0.19,0.66l0.66,0.59l1.25,-0.16l0.52,0.26l0.41,-0.38l0.18,-1.95l-0.75,-3.33l0.41,-0.48l0.56,0.43l0.94,0.06l0.28,-0.58l-0.29,-0.44l0.48,-0.57l1.71,1.84l-0.01,1.4l0.62,0.9l-0.78,0.65l0.9,1.14l-0.08,0.37l-0.42,0.55l-0.78,0.09l-0.91,-0.86l-0.32,0.34l0.13,1.26l-1.08,1.62l0.2,0.57l-0.33,0.22l-0.15,0.98l-0.74,0.55l0.1,0.91l-0.9,0.97l-1.06,0.21l-0.6,-0.37l-0.52,0.52l-0.93,-0.81l-0.86,0.1l-0.4,-0.82l-0.59,-0.21l-0.52,0.38l0.08,0.94l-0.52,0.22l-1.42,-1.24l1.31,-0.4l0.23,-0.88l-0.57,-0.42l-2.02,0.31l-1.14,1.01l0.29,0.67l0.44,0.16l-0.06,0.39l0.15,0.43l0.35,0.25l-0.03,0.12l-0.57,-0.34l-1.69,0.83l-1.12,-0.43l-1.45,0.06l-3.32,-0.7l0.42,1.08l0.97,0.45l0.36,0.64l1.51,-0.21l4.03,1.02l3.51,0.11l0.47,0.42l-0.06,0.52l-0.99,0.05l-0.25,0.72l-1.62,1.44l0.32,0.58l1.85,0.01l-2.56,3.5l-1.67,0.04l-1.6,-0.98l-0.9,-0.19l-1.21,-1.02l-1.12,0.07l0.07,0.47l1.04,1.14l2.32,2.09l2.68,0.26l1.31,0.49l1.7,-2.16l0.51,0.47l1.17,0.33l0.4,-0.57l-0.55,-0.9l0.87,0.16l0.19,0.57l0.66,0.23l1.63,-1.2l-0.18,0.61l0.29,0.57l-0.29,0.38l-0.43,-0.21l-0.41,0.37l0.03,0.9l-0.97,1.72l0.01,0.78l-0.71,-0.07l-0.06,-0.74l-1.12,-0.61l-0.42,0.47l0.27,1.45l-0.52,-1.1l-0.65,-0.15l-1.22,1.08l-0.21,0.53l0.25,0.27l-2.03,0.32l-2.75,1.84l-0.67,-1.03l-0.75,-0.3l-0.37,0.49l0.43,1.26l-0.57,-0.01l-0.09,0.82l-0.94,1.73l-0.91,0.84l-0.59,-0.26l0.49,-0.69l-0.02,-0.77l-1.06,-0.93l-0.08,-0.52l-1.69,-0.41l-0.16,0.47l0.43,1.16l0.2,0.33l0.58,0.07l0.3,0.61l-0.88,0.37l-0.08,0.71l0.65,0.64l0.77,0.18l-0.01,0.37l-2.12,1.67l-1.91,2.65l-2.0,4.31l-0.34,2.13l0.12,1.33l-0.15,-1.03l-1.0,-1.6l-0.55,-0.17l-0.3,0.48l1.17,3.95l-0.63,2.27l-3.9,0.19l-1.43,0.65l-0.35,-0.52l-0.58,-0.18l-0.54,1.07l-1.9,1.14l-0.61,-0.02l-23.25,-15.36l-1.05,-0.02l-18.68,3.49l-0.65,-2.77l-3.25,-2.84l-0.47,0.08l-1.23,1.31l-0.01,-1.29l-0.82,-0.54l-22.82,3.35l-0.64,-0.27l-0.62,0.46l-0.25,0.65l-3.98,1.92l-0.89,1.23l-1.01,0.08l-4.78,2.66l-20.95,3.93l-0.34,-4.55l0.7,-0.95ZM816.97,271.42l0.19,0.35l0.24,0.38l-0.45,-0.41l0.02,-0.32ZM807.5,290.22l0.2,0.32l-0.16,-0.09l-0.04,-0.24ZM815.28,299.09l0.16,-0.36l0.16,0.07l-0.13,0.29l-0.19,0.01ZM812.72,299.05l-0.06,-0.29l-0.03,-0.11l0.3,0.26l-0.21,0.13Z\",\n            name: \"North Carolina\"\n          },\n          \"US-ND\": {\n            path: \"M438.58,42.78l2.06,6.89l-0.73,2.53l0.57,2.36l-0.27,1.17l0.47,1.99l0.01,3.26l1.42,3.95l0.45,0.54l-0.08,0.97l0.39,1.52l0.62,0.74l1.48,3.74l-0.06,3.9l0.42,0.7l0.5,8.35l0.51,1.54l0.51,0.25l-0.47,2.64l0.36,1.63l-0.14,1.75l0.69,1.1l0.2,2.16l0.49,1.13l1.8,2.56l0.15,2.2l0.51,1.08l0.17,1.39l-0.24,1.36l0.28,1.74l-27.89,0.73l-28.38,0.19l-28.38,-0.37l-28.48,-0.93l2.75,-65.45l23.09,0.78l25.56,0.42l25.56,-0.06l24.09,-0.49Z\",\n            name: \"North Dakota\"\n          },\n          \"US-NE\": {\n            path: \"M422.62,173.98l3.92,2.71l3.93,1.9l1.33,-0.22l0.51,-0.47l0.36,-1.08l0.48,-0.2l2.49,0.34l1.32,-0.47l1.58,0.25l3.45,-0.65l2.37,1.98l1.4,0.14l1.55,0.77l1.45,0.08l0.88,1.1l1.49,0.17l-0.06,0.98l1.68,2.08l3.32,0.6l-0.02,2.55l1.13,1.94l0.01,2.29l1.15,1.07l0.34,1.72l1.73,1.46l0.07,1.88l1.5,2.11l-0.49,2.33l0.44,3.09l0.52,0.54l0.93,-0.2l-0.04,1.25l1.21,0.5l-0.41,2.36l0.21,0.44l1.12,0.4l-0.6,0.77l-0.09,1.01l0.13,0.59l0.82,0.5l0.16,1.45l-0.26,0.92l0.26,1.27l0.55,0.61l0.3,1.93l-0.22,1.33l0.23,0.72l-0.57,0.92l0.02,0.79l0.45,0.88l1.23,0.63l0.25,2.5l1.1,0.51l0.03,0.79l1.18,2.75l-0.23,0.96l1.16,0.21l0.8,0.99l1.1,0.24l-0.15,0.96l1.31,1.68l-0.21,1.12l0.51,0.91l-26.14,1.05l-27.83,0.63l-27.84,0.14l-27.88,-0.35l0.46,-21.65l-0.39,-0.41l-32.35,-1.04l1.85,-43.23l43.35,1.22l44.66,-0.04Z\",\n            name: \"Nebraska\"\n          },\n          \"US-LA\": {\n            path: \"M509.0,412.88l-1.33,-21.76l51.43,-4.07l0.34,0.83l1.48,0.65l-0.92,1.35l-0.25,2.13l0.49,0.72l1.18,0.31l-1.21,0.47l-0.45,0.78l0.45,1.36l1.04,0.84l0.08,2.15l0.46,0.54l1.51,0.74l0.45,1.05l1.42,0.44l-0.87,1.22l-0.85,2.34l-0.75,0.04l-0.52,0.51l-0.02,0.73l0.63,0.72l-0.22,1.16l-1.34,0.96l-1.08,1.89l-1.37,0.67l-0.68,0.83l-0.79,2.42l-0.25,3.52l-1.55,1.74l0.13,1.2l0.62,0.96l-0.35,2.38l-1.61,0.29l-0.6,0.57l0.28,0.97l0.64,0.59l-0.26,1.41l0.98,1.51l-1.18,1.18l-0.08,0.45l0.4,0.23l6.18,-0.55l29.23,-2.92l-0.68,3.47l-0.52,1.02l-0.2,2.24l0.69,0.98l-0.09,0.66l0.6,1.0l1.31,0.7l1.22,1.42l0.14,0.88l0.89,1.39l0.14,1.05l1.11,1.84l-1.85,0.39l-0.38,-0.08l-0.01,-0.56l-0.53,-0.57l-1.28,0.27l-1.18,-0.59l-1.51,0.17l-0.61,-0.98l-1.24,-0.86l-2.84,-0.47l-1.24,0.63l-1.39,2.3l-1.3,1.42l-0.42,0.91l0.07,1.2l0.55,0.89l0.82,0.57l4.25,0.82l3.35,-1.0l1.32,-1.19l0.68,-1.2l0.34,0.59l1.08,0.43l0.59,-0.4l0.81,0.03l0.51,-0.46l-0.76,1.21l-1.12,-0.12l-0.57,0.32l-0.38,0.62l0.0,0.83l0.76,1.22l1.48,-0.02l0.65,0.89l1.1,0.48l1.44,-0.66l0.46,-1.11l-0.02,-1.37l0.93,-0.57l0.42,-0.99l0.23,0.05l0.1,1.16l-0.24,0.25l0.19,0.57l0.42,0.15l-0.07,0.75l1.34,1.08l0.35,-0.16l-0.48,0.59l0.18,0.63l-0.24,0.17l-0.84,-0.72l-0.71,-0.08l-1.0,1.89l-0.84,0.14l-0.46,0.53l0.16,1.19l-1.59,-0.6l-0.43,0.19l0.04,0.46l1.14,1.06l-1.17,-0.14l-0.92,0.6l0.68,0.43l1.26,2.04l2.74,0.97l-0.08,1.2l0.33,0.4l2.07,-0.31l0.77,0.17l0.17,0.53l0.73,0.32l1.35,-0.34l0.53,0.78l1.08,-0.46l1.13,0.73l0.14,0.3l-0.41,0.63l1.54,0.86l-0.39,0.65l0.39,0.58l-0.18,0.62l-0.95,1.49l-1.3,-1.56l-0.68,0.34l0.1,0.66l-0.38,0.12l0.41,-1.88l-1.32,-0.76l-0.51,0.5l0.2,1.17l-0.54,0.45l-0.27,-1.02l-0.57,-0.25l-0.89,-1.27l0.03,-0.77l-0.96,-0.14l-0.47,0.5l-1.41,-0.17l-0.74,-0.77l-2.31,-0.09l0.38,-0.86l-0.13,-0.66l-0.64,-0.69l-0.91,0.04l0.1,-0.96l-0.37,-0.36l-0.91,-0.03l-0.22,0.59l-0.85,-0.38l-0.48,0.27l-2.61,-1.26l-1.24,-0.02l-0.67,-0.64l-0.61,0.18l-0.3,0.56l-0.05,1.25l1.72,0.94l1.67,0.35l-0.16,0.92l0.28,0.4l-0.34,0.34l0.23,0.68l-0.76,0.94l-0.03,0.66l0.81,0.97l-0.95,1.43l-1.33,0.94l-0.76,-1.15l0.22,-1.5l-0.35,-0.92l-0.49,-0.18l-0.4,0.36l-1.15,-1.08l-0.6,0.42l-0.76,-1.05l-0.62,-0.2l-0.64,1.33l-0.85,0.26l-0.89,-0.53l-0.85,0.53l-0.1,0.62l0.48,0.41l-0.67,0.56l-0.13,1.44l-0.46,0.13l-0.4,0.84l-0.92,0.08l-0.11,-0.68l-1.6,-0.4l-0.76,0.97l-1.92,-0.93l-0.3,-0.54l-0.99,0.01l-0.35,0.6l-1.15,-0.51l0.42,-0.4l0.0,-1.46l-0.38,-0.57l-1.9,-1.19l-0.08,-0.54l-0.83,-0.71l-0.09,-0.91l0.73,-1.15l-0.34,-1.14l-0.88,-0.19l-0.34,0.57l0.16,0.43l-0.58,0.81l0.04,0.91l-1.8,-0.4l0.07,-0.39l-0.47,-0.54l-1.97,0.76l-0.7,-2.22l-1.32,0.23l-0.18,-2.12l-1.31,-0.35l-1.89,0.3l-1.08,0.66l-0.21,-0.71l0.84,-0.26l-0.05,-0.8l-0.6,-0.58l-1.03,-0.1l-0.85,0.42l-0.94,-0.15l-0.4,0.8l-2.0,1.11l-0.63,-0.31l-1.29,0.71l0.54,1.37l0.81,0.31l1.04,1.55l-1.27,0.36l-1.82,1.06l-7.63,-0.92l-6.7,-2.31l-3.46,-0.65l-6.85,0.69l-3.41,0.8l-1.57,0.73l-0.91,-1.41l1.2,-0.46l0.79,-0.98l0.27,-2.3l-0.59,-0.84l1.15,-1.62l0.23,-1.59l-0.5,-1.83l0.07,-1.46l-0.66,-0.7l-0.21,-1.04l0.83,-2.21l-0.64,-1.95l0.76,-0.84l0.3,-1.49l0.78,-0.94l0.79,-2.83l-0.18,-1.42l0.58,-0.97l-0.75,-1.33l0.84,-0.39l0.2,-0.44l-0.89,-1.36l0.03,-2.13l-1.07,-0.23l-0.57,-1.57l-0.92,-0.84l0.28,-1.27l-0.81,-0.76l-0.33,-0.95l-0.64,-0.34l0.22,-0.98l-1.16,-0.58l-0.81,-0.93l0.16,-2.46l-0.68,-1.93l-1.33,-1.98l-2.63,-2.21ZM548.97,462.65l0.0,-0.0l0.0,0.0l-0.0,0.0ZM607.49,467.36l-0.03,-0.03l-0.08,-0.04l0.13,-0.01l-0.03,0.08ZM607.51,465.75l-0.02,-0.01l0.03,-0.01l-0.02,0.02ZM567.05,468.89l-2.0,-0.42l-0.66,-0.5l0.73,-0.43l0.35,-0.75l0.39,0.49l0.83,0.21l-0.14,0.6l0.5,0.81Z\",\n            name: \"Louisiana\"\n          },\n          \"US-SD\": {\n            path: \"M336.43,128.81l0.3,-0.53l0.75,-19.92l28.49,0.93l28.39,0.37l28.39,-0.19l27.77,-0.73l-0.18,1.71l-0.73,1.71l-2.9,2.46l-0.42,1.27l1.59,2.13l1.06,2.06l0.55,0.36l1.74,0.24l1.01,0.84l0.57,1.02l1.45,38.83l-1.84,0.09l-0.42,0.56l0.24,1.44l0.88,1.14l0.01,1.45l-0.65,0.36l0.17,1.48l0.48,0.43l1.09,0.04l0.34,1.68l-0.16,0.91l-0.62,0.83l0.02,1.73l-0.68,2.45l-0.49,0.44l-0.67,1.88l0.5,1.1l1.33,1.08l-0.16,0.62l0.64,0.66l0.35,1.15l-1.65,-0.28l-0.34,-0.94l-0.85,-0.73l0.19,-0.61l-0.28,-0.59l-1.58,-0.23l-1.03,-1.18l-1.57,-0.11l-1.51,-0.75l-1.34,-0.12l-2.38,-1.99l-3.78,0.6l-1.65,-0.25l-1.19,0.46l-2.62,-0.33l-0.98,0.48l-0.76,1.45l-0.72,0.05l-3.66,-1.82l-4.13,-2.8l-44.82,0.05l-43.33,-1.22l1.79,-43.19Z\",\n            name: \"South Dakota\"\n          },\n          \"US-DC\": {\n            path: \"M783.1,218.48l-0.45,-0.64l-1.55,-0.67l0.58,-1.01l2.03,1.26l-0.61,1.06Z\",\n            name: \"District of Columbia\"\n          },\n          \"US-DE\": {\n            path: \"M798.42,195.12l0.48,-1.56l0.92,-1.11l1.72,-0.71l1.12,0.06l-0.33,0.56l-0.08,1.38l-0.46,1.09l-0.6,0.54l-0.09,0.77l0.13,0.61l1.03,0.85l0.11,2.31l3.98,3.32l1.13,3.99l1.96,1.68l0.47,1.26l3.17,2.27l1.35,-0.08l0.48,1.21l-0.58,0.27l-0.31,0.67l0.03,0.76l0.36,0.19l-0.82,0.57l-0.08,1.21l0.66,0.21l0.85,-0.73l0.72,0.34l0.3,-0.21l0.59,1.55l-9.84,2.64l-8.37,-25.89Z\",\n            name: \"Delaware\"\n          },\n          \"US-FL\": {\n            path: \"M630.29,423.61l47.18,-6.86l1.52,1.91l0.86,2.72l1.47,1.0l48.78,-5.11l1.03,1.38l0.03,1.09l0.55,1.05l1.04,0.48l1.64,-0.28l0.85,-0.75l-0.14,-4.57l-0.98,-1.49l-0.22,-1.77l0.28,-0.74l0.62,-0.3l0.12,-0.7l5.59,0.96l4.03,-0.16l0.14,1.24l-0.75,-0.12l-0.32,0.43l0.25,1.54l2.11,1.81l0.22,1.01l0.42,0.38l0.3,1.92l5.3,11.5l1.81,3.07l7.14,10.22l0.63,0.36l6.82,7.53l-0.48,-0.02l-0.27,0.61l-1.35,-0.02l-0.34,-0.65l0.38,-1.38l-0.16,-0.56l-2.3,-0.92l-0.46,0.53l1.0,2.8l0.78,0.97l2.14,4.77l9.92,13.71l1.37,3.11l3.66,5.34l-1.38,-0.35l-0.43,0.74l0.8,0.65l0.85,0.24l0.56,-0.22l1.46,0.94l2.05,3.05l-0.5,0.34l-0.12,0.53l1.16,0.53l0.89,1.83l-0.08,1.06l0.59,0.95l0.61,2.64l-0.27,0.75l0.93,8.98l-0.31,1.07l0.46,0.67l0.5,3.1l-0.78,1.26l0.03,2.43l-0.84,0.74l-0.22,1.8l-0.48,0.85l0.21,1.47l-0.31,1.74l0.54,1.74l0.45,0.23l-1.15,1.8l-0.39,1.28l-0.94,0.24l-0.53,-0.22l-1.37,0.45l-0.35,1.06l-0.89,0.3l-0.18,0.58l-0.85,0.67l-1.44,0.14l-0.27,-0.32l-1.23,-0.1l-0.9,1.05l-3.17,1.13l-1.06,-0.59l-0.7,-1.04l0.06,-1.8l1.0,0.84l1.64,0.47l0.26,0.63l0.52,0.07l1.35,-0.72l0.2,-0.69l-0.26,-0.64l-1.58,-1.11l-2.4,-0.26l-0.91,-0.46l-0.85,-1.67l-0.89,-0.72l0.22,-0.98l-0.48,-0.28l-0.53,0.15l-1.38,-2.51l-0.44,-0.3l-0.64,0.07l-0.44,-0.61l0.22,-0.89l-0.7,-0.65l-1.21,-0.6l-1.06,-0.08l-0.75,-0.54l-0.57,0.18l-2.8,-0.59l-0.5,0.64l0.25,-0.91l-0.46,-0.42l-0.87,0.12l-0.26,-0.72l-0.88,-0.65l-0.61,-1.41l-0.55,-0.11l-0.73,-2.95l-0.77,-0.98l-0.16,-1.52l-0.44,-0.83l-0.71,-0.89l-0.49,-0.15l-0.12,0.93l-1.29,-0.26l1.07,-1.3l0.18,-1.37l0.86,-1.46l0.65,-0.34l0.28,-0.83l-0.61,-0.38l-1.42,0.93l-1.03,1.67l-0.28,1.79l-1.37,0.35l-0.2,-1.33l-0.79,-1.33l-0.27,-4.04l-0.86,-0.6l1.63,-1.33l0.22,-0.97l-0.58,-0.42l-3.05,1.92l-0.75,-0.66l-0.4,0.26l-1.27,-0.89l-0.37,0.74l1.13,1.09l0.52,0.1l1.26,2.0l-1.04,0.24l-1.43,-0.38l-0.84,-1.6l-1.13,-0.6l-1.94,-2.54l-1.04,-2.28l-1.28,-0.87l0.1,-0.87l-0.97,-1.8l-1.77,-0.98l0.09,-0.67l0.99,-0.41l-0.35,-0.49l0.44,-0.73l-0.39,-0.35l0.4,-1.21l2.47,-4.47l-1.05,-2.41l-0.68,-0.46l-0.92,0.42l-0.28,0.93l0.29,1.19l-0.24,0.03l-0.73,-2.44l-0.99,-0.28l-1.18,-0.87l-1.52,-0.31l0.29,1.94l-0.48,0.61l0.27,0.59l2.21,0.56l0.24,0.97l-0.37,2.46l-0.31,-0.58l-0.8,-0.21l-2.13,-1.53l-0.41,0.2l-0.29,-0.62l0.59,-2.11l0.07,-2.97l-0.66,-1.97l0.42,-0.51l0.48,-1.91l-0.24,-0.54l0.66,-3.04l-0.37,-5.41l-0.69,-1.56l0.35,-0.47l-0.47,-2.18l-2.1,-1.33l-0.05,-0.53l-0.55,-0.43l-0.1,-1.01l-0.92,-0.73l-0.55,-1.51l-0.64,-0.25l-1.44,0.32l-1.02,-0.2l-1.57,0.54l-1.15,-1.74l-1.5,-0.47l-0.19,-0.6l-1.35,-1.51l-3.81,-1.88l-0.51,-2.75l-3.06,-1.14l-0.65,-0.59l-0.52,-1.23l-2.15,-1.93l-2.19,-1.09l-1.45,-0.12l-3.44,-1.68l-2.85,0.98l-1.01,-0.4l-1.04,0.42l-0.36,0.68l-1.33,0.68l-0.5,0.71l0.03,0.64l-0.73,-0.22l-0.59,0.6l0.67,0.94l1.51,0.08l0.41,0.21l-3.03,0.23l-1.58,1.51l-0.91,0.45l-1.3,1.56l-1.56,1.03l-0.32,0.13l0.2,-0.48l-0.26,-0.54l-0.67,-0.04l-2.07,2.24l-2.2,0.23l-2.11,1.06l-0.78,0.03l-0.27,-2.03l-1.71,-2.23l-2.21,-1.0l-0.18,-0.41l-2.51,-1.5l2.8,1.33l1.21,-0.74l-0.0,-0.74l-1.32,-0.34l-0.35,0.55l-0.21,-1.01l-0.34,-0.1l0.12,-0.52l-0.49,-0.33l-1.4,0.61l-2.3,-0.76l0.65,-1.08l0.83,-0.1l1.03,-1.45l-0.91,-0.96l-0.46,0.13l-0.49,1.02l-0.44,-0.04l-0.81,0.56l-0.72,-0.9l-0.7,0.09l-0.17,0.38l-1.34,0.73l-0.14,0.68l0.28,0.46l-3.95,-1.35l-5.05,-0.71l0.11,-0.24l1.27,0.29l0.61,-0.53l2.1,0.39l0.23,-0.78l-0.94,-1.02l0.09,-0.69l-0.62,-0.29l-0.5,0.32l-0.28,-0.47l-1.9,0.19l-2.25,1.1l0.3,-0.64l-0.41,-0.58l-0.96,0.35l-0.58,-0.25l-0.23,0.44l0.2,0.71l-1.45,0.79l-0.4,0.64l-5.17,0.97l0.32,-0.52l-0.4,-0.52l-1.35,-0.28l-0.72,-0.53l0.69,-0.53l0.01,-0.78l-0.68,-0.13l-0.81,-0.66l-0.46,0.11l0.14,0.76l-0.42,1.77l-1.05,-1.39l-0.69,-0.45l-0.55,0.07l-0.3,0.71l0.82,1.77l-0.25,0.79l-1.39,0.99l-0.05,1.04l-0.6,0.22l-0.17,0.57l-1.48,0.55l0.28,-0.66l-0.22,-0.45l1.14,-1.03l0.07,-0.74l-0.4,-0.58l-1.18,-0.24l-0.42,-0.84l0.3,-1.7l-0.18,-1.61l-2.17,-1.12l-2.39,-2.46l0.32,-1.44l-0.15,-1.04ZM644.36,434.04l-0.94,0.26l0.4,-0.44l0.53,0.18ZM665.13,435.61l0.98,-0.28l0.35,0.31l0.08,0.72l-1.42,-0.75ZM770.53,454.92l0.42,0.56l-0.43,0.75l0.0,-1.31Z\",\n            name: \"Florida\"\n          },\n          \"US-CT\": {\n            path: \"M823.41,156.51l2.83,-3.23l-0.07,-0.54l-1.31,-1.25l-3.5,-15.89l9.81,-2.41l0.6,0.46l0.65,-0.26l0.23,-0.58l14.16,-4.0l3.2,10.18l0.47,1.96l-0.04,1.69l-1.66,0.32l-0.92,0.81l-0.69,-0.36l-0.5,0.1l-0.18,0.91l-1.14,0.07l-1.27,1.27l-0.62,-0.14l-0.56,-1.02l-0.89,-0.09l-0.21,0.67l0.75,0.64l0.08,0.54l-0.89,-0.02l-1.02,0.87l-1.65,0.07l-1.15,0.94l-1.44,0.13l-1.21,0.93l-0.65,-1.0l-0.61,0.11l-1.01,2.46l-1.06,0.61l-0.25,1.02l-0.77,-0.26l-0.96,0.56l-0.09,0.85l-1.72,0.98l-1.94,2.27l-1.19,0.46l-0.24,0.38l-1.4,-1.23Z\",\n            name: \"Connecticut\"\n          },\n          \"US-WA\": {\n            path: \"M38.51,55.06l0.37,-1.08l0.93,0.65l0.55,-0.14l0.54,-0.65l0.49,0.67l0.71,-0.01l0.17,-0.77l-0.98,-1.47l0.85,-0.83l-0.09,-1.36l0.49,-0.39l-0.1,-1.03l0.81,-0.27l0.05,0.5l0.48,0.41l0.95,-0.31l-0.09,-0.68l-1.44,-1.82l-1.84,-0.1l-0.15,0.32l-0.78,-0.82l0.26,-1.62l0.66,0.53l0.52,-0.07l0.29,-0.56l-0.17,-0.68l3.33,-0.52l0.25,-0.68l-2.59,-1.29l-0.05,-0.79l-0.67,-0.57l-1.3,-0.31l0.37,-4.73l-0.5,-1.29l0.25,-0.72l-0.52,-0.48l0.55,-3.93l0.04,-4.38l-0.56,-1.02l-0.04,-0.98l-1.56,-2.34l0.33,-4.24l-0.21,-1.29l0.78,-0.79l0.04,-0.71l0.97,-1.44l-0.6,-1.43l1.04,0.8l0.44,0.0l3.35,3.31l0.99,0.35l2.18,2.41l3.73,1.49l1.21,0.07l0.79,0.71l0.67,0.31l0.6,-0.15l1.57,1.07l1.49,0.47l1.28,0.28l1.22,-0.61l0.53,0.31l0.46,0.71l-0.05,1.24l0.55,0.74l0.8,-0.24l0.07,-0.75l0.44,0.03l0.63,1.39l-0.4,0.58l0.34,0.49l0.56,-0.04l0.73,-0.84l-0.38,-1.7l1.03,-0.24l-0.44,0.23l-0.22,0.69l1.27,4.41l-0.46,0.1l-1.67,1.72l0.22,-1.29l-0.22,-0.41l-1.31,0.31l-0.38,0.81l0.09,0.95l-1.37,1.7l-1.98,1.38l-1.06,1.41l-0.96,0.69l-1.1,1.67l-0.06,0.71l0.62,0.6l0.96,0.12l2.77,-0.48l1.22,-0.58l-0.03,-0.7l-0.64,-0.23l-2.94,0.79l-0.35,-0.3l3.23,-3.42l3.06,-0.88l0.89,-1.51l1.73,-1.54l0.53,0.57l0.54,-0.19l0.22,-1.81l-0.06,2.25l0.26,0.91l-0.98,-0.21l-0.64,0.77l-0.41,-0.73l-0.53,-0.19l-0.39,0.64l0.32,2.34l-0.21,-1.07l-0.67,-0.21l-0.46,0.69l-0.07,0.75l0.46,0.66l-0.63,0.58l-0.0,0.45l0.42,0.17l1.67,-0.57l0.25,1.09l-1.08,1.79l-0.08,1.05l-0.83,0.7l0.13,1.0l-0.85,-0.68l1.12,-1.44l-0.23,-0.96l-1.96,1.08l-0.38,0.64l-0.05,-2.11l-0.52,0.02l-1.03,1.59l-1.26,0.53l-1.14,1.87l-1.51,0.3l-0.46,0.44l-0.21,1.18l1.11,-0.03l-0.25,0.36l0.27,0.37l0.93,0.02l0.06,0.68l0.53,0.47l0.52,-0.27l0.35,-1.76l0.15,0.42l0.83,-0.15l1.11,1.48l1.31,-0.61l1.64,-1.48l0.98,-1.56l0.63,0.78l0.73,0.14l0.44,-0.23l-0.06,-0.86l1.56,-0.55l0.35,-0.94l-0.33,-1.26l0.22,-1.19l-0.18,-1.35l0.83,0.2l0.3,-0.92l-0.19,-0.75l-0.72,-0.63l0.89,-1.13l0.07,-1.75l1.24,-1.24l0.61,-1.37l1.61,-0.49l0.78,-1.15l-0.45,-0.66l-0.51,-0.02l-0.86,-1.3l0.16,-2.09l-0.26,-0.87l0.49,-0.79l0.06,-0.84l-1.15,-1.73l-0.63,-0.4l-0.17,-0.64l0.18,-0.5l0.59,0.24l0.53,-0.33l0.24,-1.8l0.79,-0.24l0.3,-1.0l-0.61,-2.32l0.44,-0.53l-0.03,-0.86l-0.96,-0.88l-0.95,0.3l-1.09,-2.65l0.93,-1.82l41.31,9.4l38.95,7.65l-10.13,55.39l1.04,3.0l0.13,2.0l-1.0,1.3l0.73,1.88l-31.18,-5.92l-1.67,0.79l-7.24,-1.02l-1.68,0.92l-4.19,-0.12l-3.18,0.45l-1.64,0.75l-0.88,-0.26l-1.2,0.3l-1.51,-0.23l-2.43,-0.94l-0.91,0.46l-3.45,0.51l-2.11,-0.71l-1.65,0.3l-0.31,-1.36l-1.09,-0.88l-4.34,-1.46l-2.32,-0.11l-1.15,-0.51l-1.27,0.21l-1.89,0.86l-4.49,0.58l-2.26,-1.01l-1.61,-1.15l-1.84,-0.51l-0.63,-0.81l0.64,-6.82l-0.46,-0.95l-0.22,-1.9l-0.98,-1.35l-1.96,-1.67l-1.59,-0.23l-1.31,0.28l-1.95,-3.24l-2.07,-0.23l-0.56,-0.3l-0.1,-0.52l-0.55,-0.47l-1.22,0.28l-0.81,-0.15l-1.0,0.52l-1.03,-1.77l-0.93,-0.23ZM61.97,39.77l0.16,0.74l-0.42,0.48l0.0,-0.91l0.26,-0.31ZM71.38,20.37l-0.61,0.87l-0.15,0.52l0.18,-1.38l0.58,-0.01ZM71.25,15.62l-0.09,-0.05l0.05,-0.04l0.04,0.1ZM70.48,15.47l-0.77,0.39l0.37,-0.68l-0.07,-0.6l0.22,-0.07l0.25,0.97ZM57.68,42.43l0.04,-0.02l-0.01,0.0l-0.03,0.01Z\",\n            name: \"Washington\"\n          },\n          \"US-KS\": {\n            path: \"M477.93,239.62l0.44,0.63l0.76,0.18l1.04,0.8l2.19,-1.08l-0.0,0.75l1.08,0.79l0.23,1.44l-0.95,-0.15l-0.6,0.31l-0.17,0.97l-1.14,1.37l-0.06,1.14l-0.79,0.5l0.04,0.64l1.56,2.1l2.0,1.49l0.2,1.13l0.42,0.86l0.74,0.56l0.32,1.11l1.89,0.91l1.54,0.26l2.67,46.81l-31.54,1.48l-31.97,0.88l-31.98,0.26l-32.04,-0.37l1.21,-65.46l27.89,0.35l27.85,-0.14l27.84,-0.64l27.67,-1.12l1.65,1.23Z\",\n            name: \"Kansas\"\n          },\n          \"US-WI\": {\n            path: \"M510.09,124.06l0.41,-0.27l0.28,-0.9l-0.45,-1.48l0.04,-1.91l0.7,-1.16l0.53,-2.25l-1.61,-2.91l-0.83,-0.36l-1.28,-0.01l-0.21,-2.31l1.67,-2.26l-0.05,-0.77l0.77,-1.55l1.95,-1.09l0.48,-0.75l0.97,-0.25l0.45,-0.75l1.16,-0.14l1.04,-1.56l-0.97,-12.11l1.03,-0.35l0.22,-1.1l0.73,-0.97l0.78,0.7l1.68,0.64l2.61,-0.56l3.27,-1.57l2.65,-0.82l2.22,-2.12l0.31,0.29l1.39,-0.11l1.25,-1.48l0.79,-0.58l1.04,-0.1l0.4,-0.52l1.07,0.99l-0.48,1.68l-0.67,1.01l0.23,1.61l-1.21,2.21l0.64,0.66l2.5,-1.09l0.72,-0.87l2.15,1.22l2.34,0.47l0.44,0.53l0.86,-0.13l1.6,0.7l2.23,3.54l15.47,2.52l4.65,1.96l1.67,-0.16l1.63,0.42l1.33,-0.59l3.17,0.71l2.18,0.09l0.85,0.41l0.56,0.89l-0.42,1.09l0.41,0.77l3.4,0.63l1.4,1.13l-0.16,0.71l0.59,1.11l-0.36,0.81l0.43,1.25l-0.78,1.25l-0.03,1.76l0.91,0.63l1.38,-0.26l1.02,-0.72l0.2,0.26l-0.79,2.44l0.04,1.31l1.32,1.46l0.84,0.35l-0.24,2.02l-2.42,1.2l-0.51,0.78l0.04,1.26l-1.61,3.49l-0.4,3.5l1.11,0.83l0.91,-0.04l0.5,-0.37l0.49,-1.37l1.82,-1.47l0.66,-2.54l1.06,-1.7l0.59,0.18l0.58,-0.71l0.87,-0.4l1.12,1.12l0.59,0.2l-0.28,2.18l-1.19,2.85l-0.57,5.58l0.23,1.11l0.8,0.93l0.07,0.52l-0.51,0.98l-1.3,1.34l-0.86,3.88l0.15,2.57l0.72,1.2l0.06,1.24l-1.07,3.23l0.12,2.11l-0.73,2.11l-0.28,2.46l0.59,2.02l-0.04,1.32l0.49,0.53l-0.21,1.7l0.92,0.78l0.54,2.44l1.2,1.54l0.08,1.69l-0.33,1.45l0.48,2.95l-44.2,4.6l-0.19,-0.79l-1.56,-2.19l-4.94,-0.84l-1.06,-1.35l-0.36,-1.68l-0.9,-1.21l-0.86,-4.89l1.04,-2.61l-0.09,-0.99l-0.71,-0.79l-1.44,-0.48l-0.71,-1.76l-0.47,-6.02l-0.7,-1.4l-0.52,-2.56l-1.15,-0.6l-1.1,-1.56l-0.93,-0.11l-1.17,-0.75l-1.71,0.09l-2.67,-1.79l-2.3,-3.5l-2.64,-2.1l-2.94,-0.53l-0.73,-1.24l-1.12,-1.0l-3.12,-0.45l-3.53,-2.74l0.45,-1.24l-0.12,-1.61l0.25,-0.81l-0.88,-3.11Z\",\n            name: \"Wisconsin\"\n          },\n          \"US-OR\": {\n            path: \"M10.81,140.09l0.63,-3.94l1.32,-2.52l0.23,-1.22l-0.01,-1.26l-0.46,-0.66l-0.14,-1.12l-0.42,-0.32l-0.11,-1.85l2.73,-3.63l2.2,-4.73l0.1,-1.09l0.42,-0.27l0.01,0.79l0.73,0.1l0.42,-1.11l0.88,-0.84l0.23,0.94l1.39,0.27l-0.51,-2.64l-0.92,0.08l2.09,-3.81l1.11,-0.76l0.8,0.4l0.55,-0.33l-0.66,-1.35l-0.6,-0.3l1.71,-4.39l0.41,-0.38l0.04,-0.96l1.74,-5.49l0.97,-1.98l0.4,0.33l0.67,-0.29l-0.12,-0.97l-0.56,-0.32l0.96,-2.74l0.81,0.17l0.23,-0.45l-0.16,-0.52l-0.52,-0.28l0.54,-2.86l1.58,-2.7l0.83,-3.02l1.14,-1.76l0.97,-3.1l-0.08,-1.04l1.21,-1.1l0.04,-0.6l-0.46,-0.65l0.14,-0.52l0.51,0.64l0.45,0.05l0.39,-0.63l0.17,-1.39l-0.74,-0.72l0.5,-1.2l1.28,-0.78l0.05,-0.46l-0.86,-0.5l-0.26,-1.11l0.86,-2.17l-0.06,-1.44l0.92,-0.59l0.4,-0.85l0.07,-3.75l0.49,0.86l0.9,0.41l-0.04,0.91l0.55,0.53l0.43,-0.82l0.39,-0.14l-0.27,-0.98l1.12,0.84l1.53,0.0l1.45,-0.68l1.44,2.36l1.99,0.78l1.39,-0.67l0.91,0.06l1.72,1.51l0.77,1.04l0.21,1.9l0.43,0.78l-0.03,2.05l-0.39,1.24l0.19,0.93l-0.43,1.74l0.26,1.45l0.79,0.85l1.94,0.56l1.44,1.05l2.4,1.1l4.98,-0.53l2.9,-1.06l1.14,0.51l2.23,0.09l4.24,1.43l0.69,0.54l0.19,1.15l0.57,0.58l1.86,-0.27l2.11,0.71l3.79,-0.55l0.69,-0.42l2.19,0.93l1.64,0.24l1.19,-0.3l0.88,0.26l1.89,-0.78l3.07,-0.43l4.16,0.13l1.61,-0.91l7.16,1.02l0.96,-0.19l0.79,-0.58l31.27,5.93l0.23,1.81l0.93,1.82l1.16,0.63l1.96,1.86l0.57,2.45l-0.16,1.0l-3.69,4.54l-0.4,1.41l-1.39,2.63l-2.21,2.42l-0.65,2.68l-1.49,1.84l-2.23,1.5l-1.92,3.35l-1.49,1.27l-0.62,2.02l-0.12,1.87l0.28,0.92l0.56,0.61l0.54,0.04l0.39,-0.35l0.63,0.76l0.89,-0.05l0.07,0.88l0.8,0.95l-0.46,1.0l-0.65,0.06l-0.33,0.4l0.21,1.8l-1.03,2.56l-1.22,1.41l-6.86,39.15l-26.21,-4.99l-28.89,-6.05l-28.8,-6.61l-28.87,-7.22l-1.54,-2.51l0.26,-2.47l-0.29,-0.87Z\",\n            name: \"Oregon\"\n          },\n          \"US-KY\": {\n            path: \"M583.03,306.53l0.35,-2.18l1.13,0.96l0.72,0.2l0.75,-0.36l0.46,-0.88l0.87,-3.55l-0.54,-1.75l0.38,-0.86l-0.1,-1.87l-1.27,-2.04l1.79,-3.21l1.24,-0.51l0.73,0.06l7.03,2.56l0.81,-0.2l0.65,-0.72l0.24,-1.93l-1.48,-2.14l-0.24,-1.44l0.2,-0.87l0.4,-0.52l1.1,-0.18l1.24,-0.83l3.0,-0.95l0.64,-0.51l0.15,-1.13l-1.53,-2.05l-0.08,-0.68l1.33,-1.97l0.14,-1.16l1.25,0.42l1.12,-1.33l-0.68,-2.0l1.92,0.9l1.72,-0.84l0.03,1.18l1.0,0.46l0.99,-0.94l0.02,-1.36l0.51,0.16l1.9,-0.96l4.41,1.52l0.64,0.94l0.86,0.18l0.59,-0.59l0.73,-2.53l1.38,-0.55l1.39,-1.34l0.86,1.29l0.77,0.42l1.16,-0.13l0.11,0.75l0.95,0.19l0.67,-0.62l0.03,-1.0l0.84,-0.38l0.26,-0.48l-0.25,-2.09l0.84,-0.4l0.34,-0.56l-0.06,-0.69l1.25,-0.56l0.34,-0.72l0.38,1.47l0.61,0.6l1.46,0.64l1.25,-0.0l1.11,0.81l0.53,-0.11l0.26,-0.55l1.1,-0.46l0.53,-0.69l0.04,-3.47l0.85,-2.18l1.02,0.18l1.55,-1.19l0.75,-3.46l1.04,-0.37l1.65,-2.23l0.0,-0.81l-1.18,-2.88l2.78,-0.59l1.54,0.81l3.85,-2.82l2.23,-0.46l-0.18,-1.07l0.36,-1.47l-0.32,-0.36l-1.22,-0.04l0.58,-1.39l-1.09,-1.54l1.65,-1.83l1.81,1.18l0.92,-0.11l1.93,-1.01l0.78,0.88l1.75,0.54l0.57,1.28l0.94,0.92l0.79,1.84l2.6,0.67l1.87,-0.57l1.63,0.27l2.18,1.85l0.96,0.43l1.28,-0.18l0.61,-1.31l0.99,-0.54l1.35,0.5l1.34,0.04l1.33,1.09l1.26,-0.69l1.41,-0.15l1.81,-2.55l1.72,-1.03l0.92,2.35l0.7,0.83l2.45,0.81l1.35,0.97l0.75,1.05l0.93,3.35l-0.37,0.45l0.09,0.72l-0.44,0.61l0.02,0.53l2.24,2.62l1.35,0.92l-0.08,0.89l1.34,0.97l0.58,1.35l1.55,1.2l0.98,1.62l2.14,0.84l1.09,1.12l2.14,0.25l-4.86,6.13l-5.06,4.15l-0.42,0.86l0.22,1.25l-2.07,1.93l0.04,1.64l-3.06,1.63l-0.8,2.38l-1.71,0.6l-2.7,1.83l-1.66,0.48l-3.39,2.42l-23.95,3.09l-8.8,1.42l-7.47,0.86l-7.68,0.46l-22.71,3.52l-0.64,-0.56l-3.63,0.09l-0.41,0.6l1.03,3.57l-22.99,2.73Z\",\n            name: \"Kentucky\"\n          },\n          \"US-ME\": {\n            path: \"M837.01,56.27l0.87,-1.15l1.42,1.7l0.84,0.04l0.39,-2.12l-0.46,-2.19l1.7,0.36l0.73,-0.42l0.21,-0.52l-0.32,-0.7l-1.18,-0.47l-0.44,-0.62l0.19,-1.42l0.86,-2.02l2.08,-2.25l0.01,-0.98l-0.52,-0.93l1.02,-1.64l0.39,-1.51l-0.22,-0.92l-1.02,-0.35l-0.07,-1.42l-0.4,-0.43l0.55,-0.96l-0.04,-0.63l-1.0,-1.26l0.13,-1.73l0.37,-0.63l-0.15,-0.97l1.22,-1.93l-0.96,-6.17l5.58,-18.87l2.25,-0.23l1.14,3.18l0.55,0.43l2.54,0.56l1.83,-1.73l1.68,-0.83l1.24,-1.72l1.25,-0.12l0.64,-0.47l0.25,-1.43l0.42,-0.3l1.36,0.04l3.68,1.41l1.14,0.96l2.36,1.05l8.38,22.7l0.64,0.65l-0.19,1.26l0.64,0.86l-0.1,1.52l-0.33,0.05l-0.24,0.66l1.72,1.13l1.79,0.22l0.82,0.41l1.88,-0.19l1.25,-0.64l0.34,0.86l-0.59,1.43l1.69,1.86l0.28,2.69l2.72,1.68l0.98,-0.1l0.47,-0.74l-0.06,-0.5l0.36,0.08l0.25,0.49l0.64,0.07l1.41,1.11l0.27,0.75l1.27,0.94l0.04,0.47l-0.52,-0.14l-0.39,0.41l0.18,0.77l-0.76,-0.15l-0.35,0.4l0.16,0.63l0.81,0.53l0.55,0.92l0.48,0.17l0.16,-0.88l0.39,-0.17l0.8,0.32l0.25,-0.83l0.34,0.41l-0.31,0.85l-0.53,0.19l-1.21,3.24l-0.63,-0.04l-0.31,0.44l-0.55,-1.05l-0.72,0.03l-0.3,0.5l-0.56,0.06l-0.02,0.49l0.58,0.85l-0.9,-0.45l-0.33,0.63l0.26,0.52l-1.2,-0.28l-0.36,0.3l-0.37,0.78l0.07,0.45l0.44,0.08l0.07,1.21l-0.37,-0.57l-0.55,-0.06l-0.39,0.45l-0.2,1.09l-0.48,-1.53l-1.14,0.01l-0.68,0.75l-0.36,1.48l0.59,0.63l-0.83,0.63l-0.69,-0.46l-0.73,1.04l0.1,0.64l0.99,0.63l-0.35,0.21l-0.1,0.82l-0.46,-0.21l-0.85,-1.82l-1.03,-0.46l-0.39,0.22l-0.45,-0.41l-0.57,0.63l-1.24,-0.19l-0.26,0.85l0.78,0.4l0.01,0.37l-0.51,-0.05l-0.56,0.4l-0.09,0.7l-0.49,-1.02l-1.17,-0.02l-0.16,0.64l0.52,0.88l-1.44,0.96l0.84,1.11l0.08,1.06l0.53,0.65l-0.97,-0.41l-0.96,0.22l-1.2,-0.42l-0.17,-0.91l0.74,-0.28l-0.08,-0.56l-0.42,-0.49l-0.67,-0.12l-0.3,0.33l-0.23,-2.37l-0.37,-0.22l-1.1,0.27l0.04,1.96l-1.85,1.92l0.02,0.49l1.25,1.47l-0.64,0.96l-0.19,3.87l0.77,1.41l-1.08,1.72l-0.8,-0.19l-0.45,0.93l-0.62,-0.06l-0.41,-1.15l-0.73,-0.21l-0.52,1.03l0.11,0.69l-0.45,0.59l0.12,2.41l-0.95,-1.01l0.14,-1.28l-0.24,-0.59l-0.82,0.29l-0.08,2.01l-0.44,-0.25l0.15,-1.54l-0.47,-0.4l-0.68,0.49l-0.76,3.04l-0.77,-1.97l0.17,-1.21l-0.4,-0.27l-0.46,0.21l-1.05,2.59l0.35,0.53l0.85,-0.15l0.95,2.08l-0.28,-0.59l-0.51,-0.23l-0.66,0.3l-0.07,0.64l-1.38,-0.1l-2.16,3.17l-0.53,1.86l0.29,0.6l-0.68,0.65l0.51,0.43l0.91,-0.21l0.37,0.92l-0.77,0.3l-0.2,0.39l-0.4,-0.04l-0.51,0.57l-0.14,1.03l0.67,1.37l-0.08,0.68l-0.79,1.29l-0.94,0.61l-0.54,1.29l0.44,1.56l-0.4,2.81l-0.8,-0.33l-0.42,0.59l-1.02,-0.76l-0.57,-1.85l-0.93,-0.37l-2.36,-1.99l-0.76,-3.45l-13.24,-35.53ZM863.91,81.24l0.08,0.26l-0.08,0.23l0.03,-0.29l-0.04,-0.2ZM865.32,81.46l0.47,0.7l-0.04,0.47l-0.32,-0.25l-0.1,-0.93ZM867.66,78.32l0.42,0.82l-0.16,0.14l-0.42,-0.19l0.16,-0.77ZM877.03,64.89l-0.14,0.2l-0.03,-0.24l0.17,0.04ZM873.08,75.23l0.01,0.02l-0.03,0.03l0.01,-0.06Z\",\n            name: \"Maine\"\n          },\n          \"US-OH\": {\n            path: \"M665.07,178.88l1.66,0.36l0.97,-0.31l1.75,1.07l2.07,0.26l1.47,1.17l1.7,0.24l-2.17,1.18l-0.12,0.47l0.42,0.24l2.45,0.19l1.39,-1.1l1.76,-0.25l3.39,0.96l0.92,-0.08l1.48,-1.3l1.73,-0.59l1.15,-0.97l1.91,-0.97l2.61,-0.03l1.09,-0.62l1.24,-0.06l1.07,-0.8l4.24,-5.46l4.53,-3.47l6.92,-4.36l5.83,28.04l-0.51,0.54l-1.28,0.43l-0.41,0.95l1.65,2.23l0.02,2.11l0.41,0.26l0.31,0.94l-0.04,0.76l-0.54,0.83l-0.5,4.08l0.18,3.21l-0.58,0.41l0.34,1.11l-0.35,1.74l-0.39,0.54l0.76,1.23l-0.25,1.87l-2.41,2.65l-0.82,1.86l-1.37,1.5l-1.24,0.67l-0.6,0.7l-0.87,-0.92l-1.18,0.14l-1.32,1.74l-0.09,1.32l-1.78,0.85l-0.78,2.25l0.28,1.58l-0.94,0.85l0.3,0.67l0.63,0.41l0.27,1.3l-0.8,0.17l-0.5,1.6l0.06,-0.93l-0.91,-1.26l-1.53,-0.55l-1.07,0.71l-0.82,1.98l-0.34,2.69l-0.53,0.82l1.22,3.58l-1.27,0.39l-0.28,0.42l-0.25,3.12l-2.66,1.2l-1.0,0.05l-0.76,-1.06l-1.51,-1.1l-2.34,-0.73l-1.16,-1.92l-0.31,-1.14l-0.42,-0.33l-0.73,0.13l-1.84,1.17l-1.1,1.28l-0.4,1.05l-1.43,0.15l-0.87,0.61l-1.11,-1.0l-3.14,-0.59l-1.37,0.72l-0.53,1.25l-0.71,0.05l-3.04,-2.26l-1.93,-0.29l-1.77,0.56l-2.14,-0.52l-0.55,-1.54l-0.96,-0.97l-0.63,-1.38l-2.03,-0.76l-1.14,-1.01l-0.97,0.26l-1.31,0.89l-0.46,0.03l-1.79,-1.23l-0.61,0.2l-0.6,0.7l-8.67,-55.57l20.65,-4.25ZM675.61,181.3l0.53,-0.79l0.67,0.41l-0.48,0.35l-0.72,0.03Z\",\n            name: \"Ohio\"\n          },\n          \"US-OK\": {\n            path: \"M399.11,359.23l-0.05,-42.02l-0.39,-0.4l-51.81,-0.82l0.31,-10.23l36.69,0.74l35.99,-0.07l35.98,-0.86l35.56,-1.62l0.6,10.68l4.55,24.34l1.41,37.87l-1.2,-0.22l-0.29,-0.36l-2.13,-0.21l-0.82,-0.79l-2.11,-0.39l-1.77,-2.05l-1.23,-0.22l-2.25,-1.56l-1.5,-0.4l-0.8,0.46l-0.23,0.88l-0.82,0.24l-0.46,0.62l-2.47,-0.14l-1.79,-1.48l-2.3,1.29l-1.16,0.2l-0.19,0.56l-0.63,0.28l-2.12,-0.77l-1.7,1.18l-2.06,0.51l-0.83,1.37l-1.48,0.06l-0.57,1.25l-1.26,-1.55l-1.7,-0.1l-0.32,-0.58l-1.21,-0.46l-0.02,-0.96l-0.44,-0.5l-1.24,-0.18l-0.73,1.38l-0.66,0.11l-0.84,-0.5l-0.97,0.07l-0.71,-1.51l-1.09,-0.35l-1.17,0.57l-0.45,1.7l-0.7,-0.08l-0.49,0.43l0.29,0.73l-0.51,1.68l-0.43,0.19l-0.86,-1.45l0.39,-1.65l-0.75,-0.86l-0.8,0.18l-0.49,0.76l-0.84,-0.18l-0.92,0.98l-1.07,0.13l-0.53,-1.36l-1.99,-0.19l-0.3,-1.48l-1.19,-0.53l-0.82,0.33l-2.12,2.15l-1.21,0.51l-0.97,-0.38l0.19,-1.25l-0.28,-1.13l-2.33,-0.67l-0.07,-2.18l-0.43,-0.55l-2.11,0.39l-2.52,-0.25l-0.64,0.26l-0.81,1.21l-0.95,0.06l-1.76,-1.77l-0.97,-0.12l-1.5,0.56l-2.68,-0.63l-1.86,-1.0l-1.05,0.25l-2.46,-0.3l-0.17,-2.12l-0.85,-0.87l-0.43,-1.02l-1.16,-0.41l-0.7,-0.83l-0.83,0.08l-0.44,1.64l-2.22,-0.68l-1.07,0.6l-0.96,-0.09l-3.79,-3.78l-1.12,-0.43l-0.8,0.08Z\",\n            name: \"Oklahoma\"\n          },\n          \"US-ID\": {\n            path: \"M132.48,121.36l-0.34,-0.44l0.08,-1.99l0.53,-1.74l1.42,-1.22l2.11,-3.59l1.68,-0.92l1.39,-1.52l1.08,-2.15l0.05,-1.22l2.21,-2.41l1.43,-2.7l0.37,-1.37l2.04,-2.26l1.89,-2.81l0.03,-1.01l-0.79,-2.95l-2.13,-1.94l-0.87,-0.36l-0.85,-1.61l-0.41,-3.02l-0.59,-1.19l0.94,-1.19l-0.12,-2.35l-1.04,-2.69l10.12,-55.42l13.39,2.35l-3.54,20.71l1.29,2.89l1.0,1.27l0.27,1.55l1.17,1.76l-0.12,0.83l0.39,1.14l-0.99,0.95l0.83,1.76l-0.83,0.11l-0.28,0.71l1.93,1.68l1.03,2.04l2.24,1.22l0.54,1.58l1.09,1.33l1.49,2.79l0.08,0.68l1.64,1.81l0.01,1.88l1.79,1.71l-0.07,1.35l0.74,0.19l0.9,-0.58l0.36,0.46l-0.36,0.55l0.07,0.54l1.11,0.96l1.61,0.15l1.81,-0.36l-0.63,2.61l-0.99,0.54l0.25,1.14l-1.83,3.73l0.06,1.72l-0.81,0.07l-0.37,0.54l0.6,1.33l-0.62,0.9l-0.03,1.16l0.96,0.93l-0.37,0.81l0.28,1.01l-1.57,0.43l-1.21,1.41l0.1,1.11l0.46,0.77l-0.13,0.73l-0.83,0.77l-0.2,1.52l1.48,0.63l1.38,1.79l0.78,0.27l1.08,-0.35l0.56,-0.8l1.85,-0.41l1.21,-1.28l0.81,-0.29l0.15,-0.76l0.78,0.81l0.23,0.71l1.05,0.64l-0.42,1.23l0.73,0.95l-0.34,1.38l0.57,1.34l-0.21,1.61l1.54,2.64l0.31,1.73l0.82,0.37l0.67,2.08l-0.18,0.98l-0.76,0.64l0.51,1.89l1.24,1.16l0.3,0.79l0.81,0.08l0.86,-0.37l1.04,0.93l1.06,2.79l-0.5,0.81l0.89,1.83l-0.28,0.6l0.11,0.98l2.29,2.41l0.97,-0.14l-0.01,-1.14l1.07,-0.89l0.93,-0.22l4.53,1.62l0.69,-0.32l0.67,-1.35l1.19,-0.39l2.25,0.93l3.3,-0.1l0.96,0.88l2.29,-0.58l3.23,0.78l0.45,-0.49l-0.67,-0.76l0.26,-1.06l0.74,-0.48l-0.07,-0.96l1.23,-0.51l0.48,0.37l1.07,2.11l0.12,1.11l1.36,1.95l0.73,0.45l-6.27,53.85l-47.47,-6.31l-46.96,-7.72l6.88,-39.16l1.12,-1.18l1.07,-2.67l-0.21,-1.74l0.74,-0.15l0.77,-1.62l-0.9,-1.27l-0.18,-1.2l-1.24,-0.08l-0.64,-0.81l-0.88,0.29Z\",\n            name: \"Idaho\"\n          },\n          \"US-WY\": {\n            path: \"M218.62,206.98l10.1,-86.59l25.45,2.74l26.79,2.4l26.83,1.91l27.84,1.46l-3.67,87.1l-27.31,-1.41l-28.2,-1.97l-29.69,-2.63l-28.14,-3.02Z\",\n            name: \"Wyoming\"\n          },\n          \"US-UT\": {\n            path: \"M220.28,185.78l-2.51,21.5l0.35,0.45l32.23,3.42l-8.32,87.13l-42.53,-4.67l-42.4,-5.77l16.08,-108.32l47.1,6.26Z\",\n            name: \"Utah\"\n          },\n          \"US-IN\": {\n            path: \"M600.87,189.59l1.42,0.87l2.1,0.15l1.52,-0.38l2.63,-1.39l2.73,-2.1l32.14,-4.8l8.96,57.41l-0.66,1.15l0.3,0.92l0.81,0.79l-0.66,1.14l0.49,0.8l1.12,0.04l-0.36,1.14l0.18,0.51l-1.81,0.29l-3.18,2.55l-0.43,0.17l-1.4,-0.81l-3.46,0.91l-0.09,0.78l1.19,3.1l-1.4,1.88l-1.18,0.49l-0.45,0.89l-0.31,2.6l-1.11,0.88l-1.06,-0.24l-0.47,0.47l-0.85,1.95l0.05,3.13l-0.39,1.0l-1.38,0.85l-0.93,-0.68l-1.24,0.01l-1.47,-0.69l-0.62,-1.84l-1.89,-0.73l-0.44,0.3l-0.04,0.5l0.83,0.68l-0.62,0.31l-0.89,-0.35l-0.36,0.29l0.5,1.42l-1.08,0.68l0.14,2.37l-1.06,0.65l-0.0,0.83l-0.16,0.37l-0.25,-1.01l-1.6,0.18l-1.4,-1.69l-0.5,-0.08l-1.67,1.5l-1.57,0.69l-1.07,2.89l-0.81,-1.07l-2.79,-0.77l-1.11,-0.61l-1.08,-0.18l-1.76,0.92l-0.64,-1.02l-0.58,-0.18l-0.53,0.56l0.64,1.86l-0.34,0.84l-0.28,0.09l-0.02,-1.18l-0.42,-0.4l-0.58,0.01l-1.46,0.79l-1.41,-0.84l-0.85,0.0l-0.48,0.95l0.71,1.55l-0.49,0.74l-1.15,-0.39l-0.07,-0.54l-0.53,-0.44l0.55,-0.63l-0.35,-3.09l0.96,-0.78l-0.07,-0.58l-0.44,-0.23l0.69,-0.46l0.25,-0.61l-1.17,-1.47l0.46,-1.16l0.32,0.19l1.39,-0.55l0.33,-1.8l0.55,-0.4l0.44,-0.92l-0.06,-0.83l1.52,-1.07l0.06,-0.69l-0.41,-0.93l0.57,-0.86l0.14,-1.29l0.87,-0.51l0.4,-1.91l-1.08,-2.54l0.06,-1.91l-0.93,-0.91l-0.61,-1.5l-1.05,-0.78l-0.04,-0.58l0.92,-1.39l-0.63,-2.25l1.27,-1.31l-6.5,-50.67Z\",\n            name: \"Indiana\"\n          },\n          \"US-IL\": {\n            path: \"M540.1,225.5l0.86,-0.35l0.37,-0.67l-0.23,-2.33l-0.73,-0.93l0.15,-0.41l0.72,-0.69l2.42,-0.98l0.71,-0.65l0.63,-1.68l0.17,-2.11l1.65,-2.47l0.27,-0.94l-0.03,-1.22l-0.59,-1.95l-2.23,-1.88l-0.11,-1.77l0.67,-2.38l0.45,-0.37l4.6,-0.85l0.81,-0.41l0.82,-1.12l2.55,-1.0l1.43,-1.56l0.39,-3.28l1.42,-1.46l0.29,-0.74l0.33,-4.37l-0.76,-2.14l-4.02,-2.47l-0.28,-1.5l-0.48,-0.82l-3.64,-2.48l44.57,-4.64l-0.01,2.65l0.57,2.59l1.38,2.49l1.3,0.95l0.76,2.6l1.26,2.71l1.42,1.85l6.6,51.47l-1.22,1.13l-0.1,0.69l0.67,1.76l-0.84,1.09l-0.03,1.11l1.19,1.09l0.56,1.41l0.89,0.82l-0.1,1.8l1.06,2.31l-0.28,1.49l-0.87,0.56l-0.21,1.47l-0.59,0.93l0.34,1.2l-1.48,1.13l-0.23,0.41l0.28,0.7l-0.93,1.17l-0.31,1.19l-1.64,0.67l-0.63,1.67l0.15,0.8l0.97,0.83l-1.27,1.15l0.42,0.76l-0.49,0.23l-0.13,0.54l0.43,2.94l-1.15,0.19l0.08,0.45l0.91,0.78l-0.48,0.17l-0.03,0.64l0.83,0.29l0.04,0.42l-1.31,1.97l-0.25,1.19l0.59,1.22l0.7,0.64l0.37,1.08l-3.31,1.22l-1.19,0.82l-1.24,0.24l-0.77,1.01l-0.18,2.04l1.7,2.81l0.07,0.54l-0.53,1.19l-0.96,0.03l-6.3,-2.43l-1.08,-0.08l-1.57,0.64l-0.68,0.72l-1.44,2.95l0.06,0.66l-1.18,-1.2l-0.79,0.14l-0.35,0.47l0.59,1.13l-1.24,-0.79l-0.01,-0.68l-1.6,-2.21l-0.4,-1.12l-0.75,-0.37l-0.05,-0.49l0.94,-1.35l0.2,-1.03l-0.32,-1.01l-1.44,-2.02l-0.47,-3.18l-2.26,-0.99l-1.55,-2.14l-1.95,-0.82l-1.72,-1.34l-1.56,-0.14l-1.82,-0.96l-2.32,-1.78l-2.34,-2.44l-0.36,-1.95l2.37,-6.85l-0.25,-2.32l0.98,-2.06l-0.38,-0.84l-2.66,-1.45l-2.59,-0.67l-1.29,0.45l-0.86,1.45l-0.9,0.15l-1.3,-1.9l-0.43,-1.52l0.16,-0.87l-0.54,-0.91l-0.29,-1.65l-0.83,-1.36l-0.94,-0.9l-4.11,-2.52l-1.01,-1.64l-4.53,-3.53l-0.73,-1.9l-1.04,-1.21l-0.04,-1.6l-0.96,-1.48l-0.75,-3.54l0.1,-2.94l0.6,-1.28ZM585.53,295.46l0.05,0.05l0.04,0.04l-0.05,-0.0l-0.04,-0.09Z\",\n            name: \"Illinois\"\n          },\n          \"US-AK\": {\n            path: \"M64.88,530.75l0.06,-0.04l0.04,0.06l-0.06,-0.01l-0.05,-0.0ZM66.64,530.24l1.13,0.16l0.11,0.52l-1.21,0.78l-0.23,-0.24l0.3,-0.47l-0.09,-0.76ZM69.51,530.52l0.7,-0.13l0.3,-0.66l2.1,-0.44l2.68,0.09l1.86,0.74l0.99,0.81l0.04,2.23l0.65,0.89l0.77,-0.37l-0.07,-0.76l0.56,0.36l-0.1,0.53l1.05,1.08l-1.24,-0.51l-0.68,0.56l-0.08,-0.76l-1.26,-0.01l-0.76,-0.43l-0.82,0.28l-1.12,-0.26l-0.44,-0.54l0.4,-0.34l0.95,0.84l0.47,-0.03l0.2,-0.5l-0.7,-1.62l-1.11,-0.6l-1.17,0.32l-0.66,0.82l-1.29,0.37l-0.52,-0.37l-0.59,0.38l-0.74,-0.26l-0.58,0.37l0.21,-2.07ZM81.1,534.87l0.81,-0.72l-0.68,-1.59l0.14,-0.29l1.83,-1.05l3.86,-0.11l2.68,0.81l0.57,-0.32l1.04,0.3l0.88,1.1l0.7,-0.06l0.9,-1.66l2.68,-0.78l1.06,0.33l1.28,-0.46l0.86,0.05l-0.14,0.54l0.5,0.59l1.15,0.33l0.6,-0.91l-0.56,-0.35l-0.31,0.15l0.28,-0.7l-0.2,-0.46l2.24,-2.37l1.05,0.07l0.63,0.82l0.66,-0.29l-0.11,-0.63l-1.04,-0.94l0.19,-0.63l0.96,-0.57l3.31,-0.22l-0.15,-0.63l0.81,-0.73l0.76,-0.04l1.14,-1.23l-0.94,-0.25l-0.69,0.62l-0.61,-0.12l-0.59,0.33l-5.45,-1.21l0.08,-1.16l-0.36,-0.69l0.61,-0.46l0.52,-0.18l0.49,0.51l-0.04,1.27l0.91,-0.05l0.15,-0.75l-0.06,-0.85l-0.98,-1.22l0.01,-0.82l-0.67,-0.19l-0.29,0.86l-0.73,0.37l-0.19,0.06l0.24,-0.27l-0.27,-0.52l-0.4,-0.11l-0.76,0.98l-0.97,0.24l-0.67,2.38l-0.33,0.05l-0.36,-0.33l0.03,-4.92l-0.66,-0.64l-1.23,0.46l0.07,-0.72l-0.68,-0.92l0.27,-0.42l-0.12,-1.01l-2.89,-0.21l-0.54,-0.39l-1.37,-0.13l-0.43,-0.56l-1.2,0.69l-0.99,-0.27l-0.29,-0.65l1.23,-0.02l-0.05,-0.92l0.46,-0.72l1.47,-0.11l-0.03,-0.81l-1.33,-0.74l0.14,-0.43l0.85,-0.72l1.34,-0.01l0.43,-0.43l0.58,-4.63l1.27,-1.41l-0.84,-0.73l1.97,-1.03l1.58,0.21l0.44,-0.55l-0.81,-0.46l-0.34,-0.75l-0.6,0.5l-0.57,-0.1l-1.3,0.72l-2.17,0.25l-0.12,0.5l0.5,0.82l-0.72,0.78l-0.48,-0.47l-2.21,-0.3l-2.19,-1.17l-1.56,-1.56l0.03,-0.37l0.7,-0.05l0.04,-0.67l-0.61,-1.28l-0.09,-1.54l0.39,-0.61l-0.72,-0.34l-0.58,-1.19l0.93,-0.28l0.14,-0.6l-1.09,-0.61l1.52,0.14l0.51,-0.46l0.88,0.03l0.05,0.6l1.07,1.2l-1.21,0.44l-0.39,0.39l0.31,0.47l1.11,-0.1l0.47,0.28l1.12,-0.22l0.18,0.15l-0.72,1.13l0.74,0.73l1.63,0.09l0.68,-0.64l-0.26,-0.92l0.44,-0.39l-0.14,-1.27l-0.59,-0.28l-1.31,0.1l-1.81,-1.44l0.01,-0.63l-0.97,-1.12l0.81,0.16l0.53,-0.4l-1.18,-1.08l0.63,-0.51l-0.14,-0.67l1.25,-0.21l0.53,0.32l0.83,-0.05l0.73,-0.46l-0.08,-0.52l-3.03,-0.29l-1.91,0.63l-0.4,0.68l-0.19,-0.22l0.72,-1.02l-0.63,-1.4l0.68,0.09l0.47,-0.54l-0.48,-1.21l0.96,0.46l0.42,-0.51l-0.63,-0.98l1.73,1.01l0.42,-1.53l0.59,-0.35l3.77,-0.6l0.5,0.35l0.25,0.85l-0.36,0.21l0.14,0.47l1.2,0.19l0.3,-0.42l-0.18,-1.0l1.6,-0.11l0.29,-0.63l-1.51,-0.29l0.59,-0.27l0.16,-0.74l0.9,-0.32l1.37,1.16l0.47,-0.57l-0.32,-0.84l0.37,-0.03l1.02,0.42l1.03,1.2l-0.04,0.6l-0.87,-0.06l-0.35,0.64l1.72,0.3l0.1,0.67l1.21,0.8l3.02,0.17l1.92,-0.37l0.11,0.59l2.89,1.88l2.0,0.37l1.83,-0.33l0.67,-0.63l0.41,-1.78l0.72,-1.29l-0.14,-1.81l0.74,0.39l1.24,-0.12l0.86,-0.71l-0.17,-1.62l0.3,-0.04l0.11,-0.44l-0.25,-0.34l-0.83,-0.45l-1.45,0.34l-0.98,-1.22l-1.22,0.1l-0.5,-0.38l-2.79,-0.15l-0.75,0.51l0.35,-0.85l-0.56,-1.94l-1.57,-0.24l-3.01,-2.71l-1.14,-0.28l-0.95,-0.93l-0.77,0.17l-3.27,-3.98l-0.31,-1.07l0.73,-0.34l0.39,-0.82l-0.53,-1.14l0.14,-0.32l0.52,0.26l1.05,-0.26l1.2,1.12l0.36,-0.78l-2.39,-3.21l-1.44,-1.39l-1.03,-2.33l0.73,0.11l1.02,0.72l1.24,-0.42l0.31,0.63l0.57,0.29l1.08,0.2l0.98,-0.22l1.81,0.53l1.37,1.81l1.19,0.53l0.56,-0.47l-0.6,-1.16l1.94,0.62l0.58,0.79l2.66,0.53l1.79,1.18l0.34,0.64l-0.69,0.11l-0.63,0.77l-1.35,-0.42l-0.12,0.69l0.75,0.66l0.19,1.01l2.13,1.87l1.3,0.71l-0.16,0.68l2.13,1.1l0.66,1.36l0.45,0.21l2.16,-0.88l0.7,1.0l-0.4,0.08l0.01,0.51l0.87,0.33l0.96,-0.71l-0.06,-1.11l-0.58,-0.85l0.4,0.0l1.01,2.11l1.88,1.12l0.85,-0.28l0.74,-1.61l-0.17,-0.25l-1.34,-0.47l-0.61,-1.11l-1.03,-0.61l-1.16,0.14l-0.44,-0.38l-0.48,-1.61l1.18,-0.54l0.78,0.4l0.37,-0.59l-0.87,-1.38l-1.35,-0.8l0.0,-1.23l-0.47,-0.25l-1.01,0.43l-3.2,-3.27l0.71,-1.39l0.04,-2.41l-2.35,-5.81l-1.25,-1.7l-0.54,-1.91l1.29,-0.66l1.24,-1.29l3.37,2.86l2.53,1.62l1.6,0.63l4.17,0.25l2.43,-1.65l1.96,0.17l1.51,-0.27l4.46,2.3l3.16,0.43l0.14,0.68l-0.34,0.08l-0.14,0.66l0.53,0.23l0.34,1.4l0.55,-0.29l0.38,-1.21l1.25,0.75l0.88,0.14l0.29,-0.35l-0.22,-0.39l-1.5,-1.03l0.05,-0.38l0.97,-0.06l0.34,0.13l0.34,1.14l0.55,0.33l0.18,-0.22l0.76,0.21l3.84,2.25l2.9,0.43l2.71,-0.19l0.31,0.85l0.85,0.61l0.02,0.66l1.47,0.88l-0.91,-0.04l-0.91,-0.49l-0.93,0.25l0.42,0.83l-0.26,0.43l0.18,0.59l0.73,-0.04l1.12,0.51l1.03,-0.39l1.07,0.65l0.92,-0.02l0.21,0.47l-0.71,0.01l-0.29,0.34l1.75,2.14l1.64,0.18l2.21,1.14l1.47,1.72l0.67,-0.07l0.41,0.37l-1.57,0.55l-0.18,0.63l2.16,1.28l-0.22,0.75l1.74,1.13l0.58,0.79l0.82,-0.05l1.56,0.52l0.51,0.45l0.14,0.61l2.14,0.56l1.96,1.16l1.82,1.63l0.39,0.96l1.19,0.37l1.05,0.92l-0.12,0.41l0.45,0.47l1.93,1.39l4.48,2.43l1.5,1.94l1.21,0.76l1.38,0.67l0.93,0.04l0.77,0.37l0.03,0.38l1.6,0.03l1.23,0.61l0.47,0.58l0.29,-0.26l1.69,1.44l1.68,2.36l1.24,0.84l0.65,1.11l1.25,0.49l-27.91,60.77l0.17,0.48l1.69,1.44l0.83,-0.19l1.44,1.5l2.05,-0.3l2.16,0.82l-0.98,1.08l-0.15,0.61l0.53,1.11l1.01,1.05l0.05,1.28l2.81,5.56l-0.47,2.71l0.54,0.33l1.98,-0.35l0.06,0.23l-1.19,0.71l0.29,0.54l0.84,-0.22l1.03,0.71l0.36,1.46l-0.28,0.03l-0.1,0.51l0.26,0.36l1.11,0.26l-0.24,0.59l0.49,0.49l-0.11,0.51l-0.36,-0.03l-0.12,-0.59l-0.85,-0.8l-0.47,-0.03l-1.0,0.68l-0.32,-0.86l-1.11,-0.57l-1.15,-1.83l0.58,-0.48l-0.09,-0.3l-0.99,-0.27l-0.56,-1.13l-0.02,-1.29l-1.34,-2.12l0.09,-0.76l-1.17,-0.46l-1.47,-1.72l-0.33,-0.8l-1.65,-1.66l1.58,-0.72l-0.4,0.98l0.71,0.53l0.48,-0.34l0.48,-1.49l0.98,0.8l0.73,-0.31l-0.53,-0.92l-0.81,-0.46l-0.73,-1.81l-0.41,-0.17l-2.16,1.02l-2.27,-0.06l-1.73,-1.01l-1.8,-1.85l0.52,-0.4l0.26,-0.96l-0.45,-1.04l-0.92,0.09l-0.12,0.64l-0.81,-0.05l-1.0,-1.05l-3.3,-2.31l-5.2,-1.56l-0.48,-1.29l0.16,-0.55l-1.83,-0.99l-0.64,-1.23l0.85,-0.63l0.26,-0.77l1.16,-0.21l0.15,-0.7l-0.98,-0.3l-2.56,1.0l-1.03,-0.01l-0.22,-0.7l-0.85,-0.75l1.1,-0.51l0.19,-0.4l-0.31,-0.45l-0.64,-0.02l-0.47,-0.8l0.14,-0.59l-0.49,-1.17l-0.45,-0.22l-0.62,0.19l-0.57,-0.49l0.25,-0.73l0.46,-0.09l1.22,0.53l0.42,-0.5l-0.16,-0.48l-1.49,-0.88l-1.82,0.34l-0.6,-0.61l-1.17,-0.28l-0.22,-0.32l0.32,-1.1l-0.72,-0.3l0.35,-0.97l-0.33,-0.29l-2.04,0.78l-0.28,-0.64l-1.38,-0.22l-0.75,0.57l0.31,0.89l-1.75,-0.34l-0.8,0.99l0.26,0.62l0.9,-0.03l-0.2,0.34l-1.52,0.34l-0.23,0.63l0.38,0.29l1.02,-0.16l0.49,0.83l-0.47,0.61l-0.59,-0.24l-0.7,0.58l0.05,0.63l-0.31,0.35l-0.27,-0.15l-0.68,0.39l-1.38,-1.05l0.03,-0.72l-1.08,-0.12l0.11,-0.8l-0.55,-0.46l-1.0,1.06l-1.09,-0.68l-0.44,0.5l-0.48,-0.1l-0.2,0.41l-0.8,-0.43l-0.29,0.55l-0.7,-0.52l-1.3,0.56l-0.16,-0.45l-0.91,-0.04l-0.56,0.81l-1.73,0.25l-1.02,-0.92l-0.6,0.32l-0.44,-0.36l-1.29,0.01l-0.44,-1.08l0.64,0.17l0.17,-0.48l0.68,0.04l0.89,0.91l0.56,-0.11l0.11,-0.54l0.9,0.16l1.67,-0.74l0.32,-0.52l-0.22,-0.4l-2.72,-0.16l-0.79,-1.25l1.54,-1.19l1.91,-0.52l0.81,-0.85l0.52,-0.09l0.76,-1.03l0.15,-1.27l1.37,0.34l3.53,-0.14l0.24,1.07l0.66,0.57l1.41,0.31l2.69,2.59l0.5,-0.37l-0.13,-0.93l-0.99,-0.67l-1.76,-2.54l1.94,-0.66l2.25,0.33l0.05,-0.75l-1.75,-0.86l-1.62,0.15l-0.71,0.63l-1.07,-0.92l-0.7,-0.18l0.17,-0.32l-0.28,-0.7l-1.24,0.32l-1.57,-0.23l-0.99,0.48l-1.49,-0.52l-1.37,0.05l-0.78,0.4l-0.2,0.55l-1.24,-0.08l-1.92,0.49l-0.59,0.81l-0.62,0.26l-0.75,-0.02l-0.97,-1.32l-1.1,-0.29l-0.3,0.28l0.16,0.51l0.44,0.07l0.66,2.11l-0.91,0.44l-2.4,-0.95l-0.46,0.21l0.03,0.68l0.78,0.42l-0.2,0.15l-0.56,0.01l-0.54,-1.57l-0.76,0.74l-0.24,-0.5l-0.88,0.16l-0.13,0.57l-0.85,-0.44l-0.36,0.28l0.3,0.67l-1.93,-0.49l-0.81,1.18l-0.83,0.28l-0.17,1.22l0.33,0.36l0.71,-0.05l1.13,0.82l0.76,1.64l-0.81,0.65l-1.11,0.16l-1.09,-0.54l-0.98,0.53l-0.75,-0.18l-0.37,0.73l-1.4,-0.13l-0.46,0.82l-0.5,-0.62l-0.4,0.44l-1.47,0.04l-1.12,-0.71l-1.09,0.61l-0.67,-0.22l-0.91,0.37l-0.64,-0.78l-0.94,0.73l-0.49,-0.21l-0.32,0.36l-0.62,-0.1l-0.41,-0.5l-0.83,0.37l-2.51,-0.14l-0.57,0.44l0.28,1.17l-0.59,0.14l-1.31,-0.59l-0.58,0.52l-0.3,-0.46l-2.04,0.38l-0.15,-0.68l-0.48,-0.37l-0.79,0.47l-0.83,0.0l-0.29,0.61l-0.03,-0.62l-0.42,-0.3l-1.95,-0.18l-0.77,0.39l-0.34,-0.37l-0.72,-0.1l-1.8,0.43l-0.28,0.75l-0.4,-0.03l-0.82,0.77l-2.9,-0.76l-0.87,-0.79l-0.66,0.16l-0.84,-0.82l-1.36,-0.26l-0.93,0.26ZM89.01,536.65l-0.02,0.01l-0.0,0.03l0.02,-0.04ZM89.06,536.61l0.02,-0.01l-0.01,0.01l-0.0,0.01ZM91.61,484.22l-0.0,0.01l-0.0,-0.01l0.01,0.0ZM87.17,484.0l-0.0,-0.0l0.01,-0.0l-0.0,0.01l-0.01,-0.0ZM186.66,475.29l-0.0,0.02l-0.01,-0.01l0.01,-0.0ZM156.69,531.75l-0.95,1.06l-0.87,0.02l-0.13,-0.28l0.69,-0.51l1.26,-0.28ZM151.45,532.97l-0.11,0.02l0.12,-0.04l-0.01,0.02ZM152.06,535.54l-0.09,-0.14l0.41,-0.11l-0.1,0.3l-0.22,-0.05ZM116.92,535.18l-0.13,0.11l-0.06,-0.02l0.04,-0.19l0.16,0.1ZM90.72,536.66l0.27,-0.19l0.07,0.3l-0.17,0.07l-0.17,-0.19ZM121.46,528.8l-0.0,-0.02l0.04,0.01l-0.03,0.01ZM186.96,558.95l-0.09,-1.09l0.4,-0.11l0.13,0.57l-0.44,0.62ZM196.09,568.76l2.06,0.17l0.88,-0.72l0.4,-0.93l0.62,0.05l0.66,-0.45l0.12,-0.56l3.59,0.11l1.22,2.1l-0.59,0.6l0.11,1.69l1.05,0.86l0.25,0.97l0.46,0.34l0.11,1.76l1.72,2.25l0.24,1.0l-1.26,-0.23l-0.94,0.69l-0.72,1.06l-0.71,-1.34l-1.02,-0.73l0.15,-0.58l-0.32,-1.25l0.48,-1.41l-0.8,-0.55l0.41,-2.32l-0.18,-1.24l0.62,-1.53l-0.66,-0.25l-0.62,0.87l-0.78,-0.09l0.03,0.58l-0.38,0.41l0.37,1.24l-0.41,0.99l0.15,1.56l-0.41,1.27l0.03,2.19l-0.37,0.45l-0.41,-0.46l0.02,-1.59l-0.29,-0.45l-0.66,0.28l-1.11,-0.29l0.47,-0.38l0.24,-0.99l-0.35,-1.47l1.14,0.14l0.45,-0.45l-0.11,-0.36l-0.86,-0.52l-0.27,0.12l-0.01,-1.01l-0.61,-0.4l-0.96,1.15l0.46,0.38l-0.33,0.4l-0.04,-0.54l-0.68,-0.29l0.29,-0.67l-0.28,-0.54l-0.39,-0.02l-0.2,-0.62l-0.47,-0.15l-0.26,0.42l-0.35,-0.7ZM209.19,578.54l0.61,1.19l-0.23,0.77l0.66,1.82l0.05,1.22l1.73,7.29l-0.66,0.56l0.03,0.64l1.0,0.69l-0.59,0.84l0.05,0.52l0.72,0.67l-0.2,1.56l0.37,0.44l1.07,0.31l1.71,2.17l1.4,0.95l0.39,0.88l0.67,0.5l0.09,0.91l1.53,1.02l-0.19,0.84l-1.17,1.01l-0.41,1.68l-0.0,2.19l-2.07,1.87l-1.09,0.57l-0.63,-0.13l-0.02,-1.13l-0.64,0.07l-0.3,1.04l-0.22,0.05l0.16,-1.54l1.09,0.23l2.31,-1.69l-0.23,-0.63l-0.64,0.13l-0.33,-0.61l-0.71,0.13l0.71,-2.09l0.22,-1.84l-0.43,-0.29l-0.4,-1.06l0.62,-0.2l0.58,-0.88l-0.43,-0.27l-1.78,0.52l-0.59,-0.36l-2.75,0.29l-0.13,0.71l0.35,0.37l-0.57,0.72l-0.64,-0.46l-0.2,1.01l-0.3,-0.39l0.1,-0.81l0.89,-0.27l0.51,-0.97l0.54,-0.2l0.43,-1.37l1.49,0.53l1.01,-0.36l-0.17,-0.59l-1.8,-0.6l0.03,-1.02l-0.82,-0.63l0.03,-0.53l-0.51,-0.72l0.35,-0.41l-0.16,-0.68l-0.59,-0.0l0.81,-0.68l0.22,-0.62l-0.41,-0.27l-0.79,0.23l-0.68,-1.21l0.4,-0.26l0.21,-1.19l-0.39,-0.3l-0.8,0.09l-0.48,-1.2l-0.52,-0.26l-0.49,0.27l-0.37,-0.39l0.13,-0.25l1.84,0.29l0.62,-0.37l-0.23,-0.67l-1.19,-0.13l0.23,-0.72l-0.6,-0.28l0.07,-0.27l0.81,-0.01l0.81,1.13l0.62,-0.14l0.04,-0.52l-1.77,-2.58l0.17,-0.56l1.59,1.01l0.37,-0.69l-0.4,-0.48l-1.89,-0.89l0.24,-0.34l-0.2,-0.47l0.54,-0.81l-0.81,-0.3l-0.88,0.87l-0.2,-0.58l0.08,-0.72l0.74,-0.62l0.17,-0.66l0.54,-0.5l0.92,-0.14ZM214.84,608.68l-0.72,0.37l-0.3,-0.26l-0.82,0.1l0.74,-0.58l1.09,0.36ZM207.55,585.56l-0.21,-0.06l0.0,-0.24l0.08,0.17l0.13,0.13ZM124.33,461.82l-0.72,-0.79l0.08,-0.62l0.61,0.33l0.02,1.08ZM96.68,478.86l-0.08,-0.01l0.0,-0.01l0.08,0.02ZM87.61,480.71l-0.14,-0.07l0.02,0.0l0.12,0.07ZM87.75,487.21l-0.01,0.0l-0.04,-0.04l0.05,0.04ZM210.21,605.25l0.95,-0.39l0.15,-0.88l1.01,-0.37l0.59,-1.12l0.76,0.04l0.47,2.53l-1.46,2.49l0.34,-0.93l-0.25,-0.46l0.16,-1.74l-0.39,-0.42l-0.42,0.19l-0.21,0.58l-0.85,0.26l-0.29,1.23l-0.57,-1.01ZM204.53,604.41l0.23,-0.52l-0.58,-0.47l0.16,-0.56l-0.41,-0.26l1.05,-0.38l0.21,-0.67l-2.13,-0.56l1.59,-0.9l0.16,-0.86l-0.36,-0.08l0.35,-1.05l0.21,0.49l1.38,0.95l0.65,1.87l-0.18,0.82l-0.68,0.31l-0.12,0.51l-0.79,0.23l-0.06,0.42l0.07,0.51l0.76,-0.09l-0.11,0.29l0.38,0.45l0.87,0.16l0.31,0.67l-0.54,-0.15l-0.4,0.8l0.23,0.39l0.85,0.22l-1.39,0.74l0.11,0.7l0.57,0.32l-0.22,0.31l0.26,0.63l-0.39,0.4l-0.4,-0.2l0.24,-0.39l-0.45,-1.27l0.19,-0.92l-0.49,-0.5l-0.25,-1.87l-0.67,0.18l-0.2,-0.66ZM204.7,605.12l-0.02,0.03l0.0,-0.0l0.02,-0.03ZM204.91,597.51l-0.15,-0.81l-1.16,-0.79l0.71,0.03l0.44,0.61l0.43,-0.21l0.17,0.98l-0.44,0.18ZM204.03,589.42l1.73,1.0l0.58,0.52l0.11,0.57l0.56,0.15l0.24,-0.39l0.54,0.65l-0.54,1.63l-0.36,-1.55l-0.5,-0.5l-0.56,0.05l-0.21,0.96l0.31,0.54l-0.25,0.39l0.51,0.85l-0.29,0.21l-0.99,-0.68l-0.46,0.33l-0.4,-0.11l0.95,-2.9l-0.98,-1.74ZM204.3,590.82l0.01,0.01l0.01,0.01l-0.01,-0.0l-0.01,-0.01ZM201.28,587.91l0.24,-0.68l0.52,-0.17l-0.03,-0.45l0.42,-0.22l0.35,0.32l0.6,-0.35l-0.0,-0.8l-0.62,-0.4l0.7,-0.07l0.24,-0.65l-1.03,-0.28l-0.02,-1.43l0.48,-2.46l0.45,-0.43l0.87,0.22l0.37,0.4l-0.69,2.23l0.41,0.23l0.08,1.49l0.51,0.53l-0.12,0.39l-0.62,-0.22l-0.31,0.8l-0.69,0.34l0.04,0.32l-0.11,0.42l-0.22,0.32l-1.81,0.61ZM204.42,586.23l0.02,0.16l-0.19,-0.27l0.07,0.06l0.09,0.05ZM203.16,578.77l0.02,-0.02l0.01,0.06l-0.01,0.0l-0.03,-0.05ZM202.08,593.81l-0.03,-0.32l0.05,-0.01l0.09,0.19l-0.11,0.14ZM202.25,593.0l-0.25,-0.54l0.16,-0.07l0.34,0.48l-0.24,0.13ZM201.87,592.45l-0.2,-0.02l-0.02,-0.03l0.04,-0.01l0.17,0.06ZM201.97,591.45l-0.19,-0.44l-0.52,-0.05l0.08,-0.24l1.42,-0.09l-0.01,0.81l-0.39,0.25l-0.38,-0.25ZM195.26,578.67l0.22,-0.17l0.78,1.25l0.56,-0.45l-0.67,-1.58l0.86,0.26l0.05,-1.05l0.36,0.52l1.18,-0.42l0.77,0.97l-0.44,0.2l-0.8,-0.21l-0.17,0.33l-0.79,0.06l0.06,0.48l1.78,2.24l-0.07,0.74l0.9,0.5l1.08,0.01l-0.34,1.59l-0.43,-0.2l-2.75,-3.68l-0.61,0.35l0.09,0.44l-0.28,0.18l0.52,0.86l-0.19,0.56l0.29,0.37l-0.52,0.14l-0.52,-1.4l0.33,-0.19l-0.16,-0.49l-1.1,-2.22ZM197.81,583.65l0.03,-0.01l-0.01,0.04l-0.02,-0.02l-0.0,-0.0ZM197.98,583.86l0.65,0.02l0.94,0.95l0.23,2.78l-0.4,2.69l-0.3,0.89l-0.47,0.37l-0.63,1.95l-0.37,-2.3l1.14,-0.59l-0.06,-0.73l-0.28,-0.06l0.01,-0.56l-0.47,-0.3l-0.19,-0.68l-0.71,-0.04l0.39,-0.63l0.81,-0.06l0.22,-0.32l-0.13,-0.54l-0.66,-0.34l0.68,-0.34l-0.35,-1.27l-0.73,-0.27l0.59,-0.15l0.09,-0.48ZM196.56,583.11l-0.06,-0.04l0.15,-0.08l-0.09,0.12ZM199.05,579.52l1.11,-0.49l0.92,0.47l0.59,0.75l-0.17,0.31l-0.56,-0.63l-0.63,-0.07l-0.13,0.57l0.35,0.67l-1.49,-1.58ZM121.86,538.8l-0.0,-0.01l0.02,0.02l-0.02,-0.01ZM122.16,539.2l0.38,0.41l0.59,-0.1l-0.04,-0.62l0.83,0.53l0.61,-1.11l0.62,0.04l-0.13,0.7l0.46,0.88l-0.67,0.48l-0.23,-0.84l-0.37,-0.03l-0.81,0.68l-0.2,-0.29l-0.67,0.31l-0.36,-1.02ZM125.68,539.91l0.02,-0.0l-0.01,0.0l-0.01,-0.0ZM126.24,540.18l-0.05,-0.09l0.07,0.07l-0.02,0.02ZM126.1,539.97l-0.36,-0.07l0.27,-0.16l0.09,0.23ZM111.97,541.9l0.13,-1.11l-0.41,-0.51l0.57,-0.47l0.58,-0.31l0.5,0.27l1.58,-0.22l0.55,0.47l-0.75,0.07l0.02,0.5l0.56,0.37l-0.31,0.99l0.56,1.75l0.45,0.16l0.28,-0.39l-0.23,-0.7l0.33,-1.09l0.38,0.2l0.37,-0.33l1.06,0.15l0.41,-0.28l0.62,0.17l0.21,0.41l0.91,-0.72l0.49,0.31l-0.22,0.73l0.26,0.4l0.49,-0.02l0.33,-0.47l1.39,0.19l-0.09,0.39l-0.85,0.24l-0.21,0.41l0.21,1.1l0.75,0.33l-0.77,0.3l-2.35,-2.03l-0.88,0.42l-0.02,0.69l-0.56,-0.49l-0.44,0.12l-0.27,0.58l-1.74,-0.5l-0.49,0.58l-0.32,-0.15l-0.13,-0.86l-0.79,-0.03l-1.07,-1.18l-1.1,-0.44ZM119.11,544.38l0.82,0.17l0.33,0.72l-0.52,-0.07l-0.2,-0.66l-0.42,-0.16ZM117.78,540.47l-0.76,-0.83l0.17,-0.28l0.83,0.02l-0.24,1.09ZM121.13,540.99l0.32,0.07l-0.59,0.51l0.31,-0.44l-0.03,-0.14ZM113.0,545.5l-0.71,0.24l-0.07,-0.11l0.36,-0.03l0.42,-0.1ZM111.68,543.33l0.69,-0.15l0.23,0.13l-0.51,0.43l-0.41,-0.41ZM76.93,452.59l0.44,-0.56l0.74,-0.21l0.04,0.98l0.81,0.62l0.81,1.25l1.59,0.48l1.11,0.77l0.29,0.97l-0.62,0.7l1.28,1.78l-0.03,0.76l0.83,0.73l0.06,0.6l-0.76,-0.35l-1.49,0.03l-0.08,-1.15l-0.71,-1.29l0.16,-0.62l-1.2,-2.9l-0.96,-0.77l-1.79,-0.42l-0.51,-1.4ZM84.52,461.74l0.69,0.18l0.56,0.73l-0.43,0.12l-0.82,-1.03ZM75.58,485.5l0.07,-0.44l1.7,1.61l0.78,-0.27l0.53,0.4l0.88,-0.0l-0.06,0.37l0.83,0.24l0.29,0.89l1.02,0.89l-0.67,0.62l-0.55,1.49l-2.66,-1.39l-0.92,-0.99l-0.64,-2.06l-0.55,-0.58l-0.06,-0.77ZM55.82,528.18l0.22,-0.57l1.29,0.26l2.05,-0.81l0.73,0.9l0.76,-0.1l1.99,0.58l0.55,0.5l0.05,0.8l-0.49,1.14l-1.03,0.31l-2.5,-1.87l-2.52,0.16l-1.15,-0.81l0.05,-0.5ZM37.73,525.86l0.44,0.13l0.4,0.44l-0.66,-0.33l-0.17,-0.24ZM43.99,527.71l-0.32,-0.33l-0.55,0.04l0.82,-0.2l0.41,-0.61l-1.11,-1.43l0.35,-0.53l1.55,0.81l-0.4,0.52l0.03,0.83l-0.39,0.13l-0.39,0.76ZM42.84,527.18l-0.0,-0.0l0.0,0.0l0.0,0.0ZM43.98,526.54l0.02,-0.01l0.01,0.01l-0.02,0.0l-0.0,-0.0ZM42.63,527.12l-0.35,0.44l-0.22,-0.21l0.3,-0.36l-0.18,-0.32l0.39,-0.07l0.05,0.51ZM42.72,526.39l-0.0,-0.06l0.01,0.01l-0.01,0.05ZM31.87,524.21l0.91,-0.8l0.8,0.02l0.72,0.69l-1.15,0.35l-1.28,-0.25ZM35.31,524.02l0.44,-0.89l0.8,-0.04l0.97,0.45l0.25,0.65l-0.43,0.37l-2.04,-0.54ZM4.9,508.63l0.28,0.1l-0.04,0.24l-0.12,0.03l-0.12,-0.37ZM6.12,508.53l-0.05,-0.66l0.53,0.07l0.12,0.71l-0.59,-0.13Z\",\n            name: \"Alaska\"\n          },\n          \"US-NJ\": {\n            path: \"M801.65,165.2l1.31,-1.55l0.48,-1.57l0.5,-0.62l0.54,-1.45l0.11,-2.05l0.67,-1.35l0.92,-0.71l14.12,4.16l-0.4,6.03l-0.35,0.55l-0.23,-0.44l-0.7,0.11l-0.26,1.18l-0.76,0.97l0.12,1.42l-0.46,0.6l0.08,1.71l0.58,0.62l1.2,0.29l1.38,-0.43l2.3,0.24l0.9,6.92l-0.56,0.39l0.18,0.66l-0.61,0.95l0.46,0.58l-0.21,0.6l0.53,1.94l-0.47,2.0l0.11,0.61l0.62,0.64l-0.39,1.13l-0.49,0.45l-0.01,0.59l-0.93,1.13l0.02,0.52l-1.07,0.1l0.09,1.21l0.64,0.83l-0.82,0.56l-0.18,1.15l1.05,0.77l-0.31,0.29l-0.17,-0.44l-0.53,-0.18l-0.5,0.22l-0.44,1.51l-1.28,0.61l-0.2,0.45l0.46,0.55l0.8,0.06l-0.66,1.26l-0.26,1.5l-0.68,0.65l0.19,0.48l0.4,0.04l-0.89,1.57l0.07,0.95l-1.65,1.72l-0.12,-1.34l0.36,-2.44l-0.11,-0.87l-0.58,-0.82l-0.89,-0.28l-1.11,0.34l-0.81,-0.35l-1.51,0.88l-0.31,-0.7l-1.62,-0.96l-1.0,0.04l-0.65,-0.71l-0.7,0.07l-3.24,-2.03l-0.06,-1.73l-1.02,-0.94l0.48,-0.68l0.0,-0.87l0.43,-0.83l-0.12,-0.73l0.51,-1.18l1.2,-1.16l2.6,-1.49l0.54,-0.86l-0.38,-0.85l0.5,-0.37l0.47,-1.44l1.24,-1.7l2.52,-2.22l0.18,-0.67l-0.47,-0.82l-4.26,-2.78l-0.75,-1.05l-0.9,0.24l-0.48,-0.33l-1.24,-2.46l-1.62,-0.02l-1.0,-3.44l1.02,-1.03l0.36,-2.23l-1.87,-1.91Z\",\n            name: \"New Jersey\"\n          },\n          \"US-CO\": {\n            path: \"M364.23,239.52l-1.22,65.86l-29.29,-0.9l-29.38,-1.43l-29.35,-1.95l-32.17,-2.75l8.32,-87.13l27.79,2.39l28.22,1.92l29.58,1.46l27.95,0.87l-0.46,21.65Z\",\n            name: \"Colorado\"\n          },\n          \"US-MD\": {\n            path: \"M740.67,219.62l-2.04,-10.06l19.85,-4.49l-0.66,1.29l-0.94,0.08l-1.54,0.81l0.16,0.7l-0.42,0.49l0.23,0.78l-1.76,0.5l-1.48,0.03l-1.14,-0.39l0.21,-0.36l-0.3,-0.49l-1.11,-0.31l-0.47,1.8l-1.63,2.84l-1.37,-0.39l-1.03,0.62l-0.41,1.26l-1.6,1.93l-0.36,1.04l-0.88,0.45l-1.3,1.87ZM760.74,204.54l36.93,-9.13l8.48,26.19l0.45,0.26l1.06,-0.21l8.18,-2.08l-0.9,0.53l0.31,0.64l0.52,0.01l0.37,0.76l0.52,-0.05l-0.38,1.96l-0.12,-0.26l-0.47,0.07l-0.73,0.86l-0.17,2.7l-0.6,0.19l-0.36,0.71l-0.02,1.66l-3.62,1.37l-0.45,0.7l-2.2,0.43l-0.56,0.65l-0.3,-1.09l0.5,-0.31l0.86,-1.84l-0.4,-0.51l-0.45,0.12l0.08,-0.5l-0.44,-0.42l-2.29,0.63l0.3,-0.6l1.15,-0.83l-0.17,-0.69l-1.36,-0.18l0.38,-2.24l-0.18,-1.02l-0.91,0.16l-0.53,1.76l-0.34,-0.68l-0.62,-0.07l-0.44,0.47l-0.5,1.39l0.53,1.02l-2.87,-2.14l-0.43,-0.19l-0.61,0.36l-0.73,-0.76l0.33,-1.67l0.76,-0.6l-0.08,-1.35l2.55,0.23l0.78,-1.5l-0.32,-1.42l-0.72,0.27l-0.28,1.29l-0.98,-0.25l-0.38,-1.07l-0.52,-0.28l-0.55,0.23l-0.22,-0.68l-0.63,0.08l1.0,-0.82l0.22,-1.04l-0.54,-0.55l-0.75,0.83l-0.21,-0.61l1.06,-0.92l-0.25,-0.65l-0.54,-0.08l-0.51,-0.75l-0.42,0.22l-0.53,-0.37l0.83,-1.03l-0.24,-1.02l0.84,-1.95l-0.07,-0.86l-0.46,0.02l-0.66,0.66l-0.56,-0.16l-0.48,0.45l-0.19,0.97l-0.95,-1.2l0.75,-3.46l0.59,-0.51l0.07,-0.74l3.89,-0.78l0.49,-0.41l-0.23,-0.67l-0.45,-0.07l-2.38,0.56l0.88,-1.55l1.42,-0.05l0.35,-0.5l-0.99,-0.67l0.44,-1.9l-0.63,-0.32l-0.48,0.39l-0.87,1.96l0.21,-2.02l-0.59,-0.34l-0.88,1.43l-1.42,0.34l-0.31,1.65l0.39,0.53l0.65,0.12l-1.45,1.92l-0.2,-1.64l-0.64,-0.42l-0.61,0.73l0.07,1.45l-0.85,-0.29l-1.16,0.64l0.02,0.71l1.01,0.27l-0.37,0.54l-0.83,0.22l-0.05,0.34l-0.44,-0.04l-0.35,0.64l1.2,1.22l-0.29,0.17l-1.52,-0.76l-1.33,0.48l0.16,0.69l0.82,0.1l1.26,1.21l1.49,0.58l0.1,0.28l-0.44,0.33l-1.37,0.5l-0.12,1.19l1.83,1.04l0.47,0.63l-0.66,-0.43l-1.05,0.29l0.2,0.64l0.92,0.48l-0.34,0.47l0.4,1.15l0.6,0.09l-0.63,1.26l0.13,0.43l0.63,0.65l1.28,4.18l2.83,2.58l-0.01,0.35l-0.38,0.54l-0.67,-1.23l-1.21,-0.22l-1.69,-0.87l-1.51,-3.64l-0.74,-0.68l-0.28,0.69l1.17,3.94l0.65,0.92l1.45,0.81l1.3,0.31l1.49,1.39l0.89,-0.33l0.37,1.32l1.47,1.47l0.1,1.07l-1.08,-0.68l-0.33,-1.23l-0.63,-0.45l-0.45,0.04l-0.13,0.44l0.27,0.78l-0.74,0.13l-0.62,-0.73l-1.16,-0.38l-1.53,0.0l-0.92,0.43l-0.55,-0.2l-1.0,-2.19l-1.26,-0.71l-0.46,0.14l0.01,0.48l1.19,2.0l-0.67,-0.12l-0.28,-0.5l-0.89,-0.4l-1.61,-2.6l-0.48,-0.14l-0.43,1.47l-0.25,-0.74l-0.62,-0.04l-0.4,0.46l0.33,0.72l-0.18,0.69l-0.64,0.59l-0.57,-0.26l-0.63,-1.86l0.25,-1.14l0.71,-0.37l0.2,-0.51l-0.37,-0.52l0.83,-0.52l0.21,-1.61l1.06,-0.35l0.07,-0.66l-0.33,-0.42l0.23,-0.42l-0.38,-0.38l-0.04,-0.7l1.27,-2.2l-0.14,-0.54l-2.72,-1.68l-0.56,0.14l-0.69,1.19l-1.81,-0.37l-1.09,-1.19l-2.96,-0.09l-1.25,-0.91l0.61,-1.35l-0.4,-0.97l-1.19,-0.3l-0.89,-0.66l-2.69,0.07l-0.36,-0.23l-0.11,-1.26l-1.04,-0.6l0.09,-1.2l-0.51,-0.29l-0.49,0.19l-0.23,-0.64l-0.52,-0.13l0.26,-0.83l-0.45,-0.58l-0.69,-0.12l-1.81,0.67l-2.24,-1.27ZM790.07,212.25l0.29,-0.0l0.93,0.21l-0.44,0.4l-0.78,-0.61ZM796.79,218.15l0.0,0.16l-0.13,-0.11l0.13,-0.06ZM803.02,225.62l-0.02,0.33l-0.21,-0.15l0.23,-0.19ZM806.99,229.08l-0.16,0.3l-0.12,0.07l0.02,-0.25l0.26,-0.12ZM797.54,220.57l-0.06,0.01l-0.09,0.03l0.12,-0.06l0.03,0.02ZM797.21,220.69l-0.26,0.57l-0.18,0.12l0.15,-0.61l0.29,-0.07ZM796.09,217.04l-0.61,0.32l-0.58,-0.42l0.02,-0.53l0.16,-0.23l0.68,0.3l0.32,0.56ZM794.46,213.09l-0.25,0.5l-0.8,0.39l0.15,-1.17l0.9,0.27Z\",\n            name: \"Maryland\"\n          },\n          \"US-MA\": {\n            path: \"M820.4,120.02l30.04,-8.0l1.53,-1.8l0.34,-1.48l0.95,-0.35l0.61,-1.04l1.17,-1.05l1.35,-0.1l-0.44,1.05l1.03,0.32l0.21,1.55l1.17,0.55l-0.06,0.32l0.39,0.28l1.31,0.19l-0.17,0.56l-2.29,1.79l-0.05,1.07l0.45,0.16l-1.11,1.41l0.23,1.08l-1.01,0.96l0.58,1.41l1.4,0.45l0.5,0.63l1.36,-0.57l0.33,-0.59l1.2,0.09l0.79,0.47l0.23,0.68l1.79,1.37l-0.07,1.25l-0.56,0.55l0.12,0.6l1.23,0.66l1.73,-0.23l0.68,1.2l0.21,1.14l0.89,0.68l1.33,0.41l1.48,-0.12l0.43,0.38l1.05,-0.23l2.92,-2.34l0.82,-1.11l0.54,0.02l0.56,1.86l-3.32,1.52l-0.94,0.82l-2.75,0.98l-0.49,1.64l-1.93,1.37l-0.82,-2.64l0.11,-1.34l-0.55,-0.31l-0.5,0.39l-0.93,-0.1l-0.3,0.51l0.25,0.92l-0.26,0.79l-0.4,0.06l-0.63,1.1l-0.6,-0.2l-0.5,0.48l0.22,1.86l-0.9,0.87l-0.63,-0.8l-0.47,0.01l-0.11,0.55l-0.26,0.03l-0.71,-2.03l-1.02,-0.35l0.44,-2.5l-0.21,-0.4l-0.78,0.4l-0.29,1.47l-0.69,0.2l-1.4,-0.64l-0.78,-2.12l-0.8,-0.22l-0.78,-2.15l-0.49,-0.24l-6.13,2.0l-0.3,-0.15l-14.84,4.19l-0.28,0.5l-0.46,-0.28l-0.86,0.17l-9.54,2.36l-0.25,-0.18l-0.32,-14.66ZM860.63,110.12l-0.02,-0.37l-0.14,-0.48l0.51,0.23l-0.35,0.62ZM876.24,122.86l-0.12,-0.42l0.25,0.35l-0.13,0.06ZM875.23,121.15l-0.78,0.0l-0.55,-1.2l0.56,0.44l0.77,0.76ZM871.43,119.57l-0.08,0.14l-0.09,-0.07l0.0,-0.0l0.17,-0.07Z\",\n            name: \"Massachusetts\"\n          },\n          \"US-AL\": {\n            path: \"M608.67,337.4l25.17,-2.91l19.4,-2.75l14.04,43.29l1.01,2.45l1.17,1.59l0.59,1.87l2.24,2.5l0.92,1.8l-0.11,2.13l1.8,1.13l-0.17,0.74l-0.63,0.1l-0.16,0.7l-0.98,0.84l-0.22,2.29l0.25,1.48l-0.76,2.3l-0.14,1.84l1.1,2.94l1.21,1.52l0.53,1.6l-0.08,5.02l-0.25,0.81l0.48,2.03l1.35,1.16l1.14,2.07l-47.64,6.92l-0.42,0.61l-0.08,2.99l2.64,2.75l2.0,0.96l-0.34,2.7l0.56,1.61l0.43,0.39l-0.94,1.69l-1.24,1.0l-1.13,-0.75l-0.34,0.49l0.66,1.46l-2.81,1.05l0.29,-0.63l-0.45,-0.86l-0.99,-0.76l-0.1,-1.11l-0.57,-0.22l-0.52,0.61l-0.32,-0.1l-0.89,-1.53l0.41,-1.67l-0.97,-2.21l-1.32,-0.65l-0.3,-0.89l-0.56,-0.17l-0.37,0.61l0.15,0.35l-0.77,3.1l-0.01,5.08l-0.59,0.0l-0.24,-0.71l-2.22,-0.44l-1.64,0.31l-5.46,-31.98l-0.99,-66.48l-0.02,-0.37l-1.07,-0.63l-0.69,-1.02Z\",\n            name: \"Alabama\"\n          },\n          \"US-MO\": {\n            path: \"M468.72,225.49l24.71,-0.73l18.94,-1.42l22.1,-2.58l0.42,0.35l0.39,0.91l2.43,1.65l0.29,0.74l1.21,0.87l-0.51,1.36l-0.1,3.21l0.78,3.65l0.95,1.44l0.03,1.59l1.11,1.37l0.46,1.55l4.96,4.1l1.06,1.69l4.93,3.31l0.7,1.15l0.27,1.62l0.5,0.82l-0.18,0.69l0.47,1.8l0.97,1.63l0.77,0.73l1.04,0.16l0.83,-0.56l0.84,-1.4l0.57,-0.19l2.41,0.61l1.68,0.76l0.84,0.77l-0.97,1.95l0.26,2.28l-2.37,6.86l0.01,1.02l0.7,1.92l4.67,4.05l1.99,1.05l1.46,0.09l1.66,1.3l1.92,0.8l1.5,2.11l2.04,0.83l0.42,2.96l1.72,2.9l-1.1,1.94l0.18,1.38l0.75,0.33l2.31,4.25l1.94,0.92l0.55,-0.32l0.0,-0.65l0.87,1.1l1.07,-0.08l0.14,1.85l-0.37,1.07l0.53,1.59l-1.07,3.86l-0.51,0.07l-1.37,-1.13l-0.65,0.13l-0.78,3.34l-0.52,0.74l0.13,-1.06l-0.56,-1.09l-0.97,-0.2l-0.74,0.63l0.02,1.05l0.53,0.66l-0.04,0.7l0.58,1.34l-0.2,0.4l-1.2,0.39l-0.17,0.41l0.15,0.55l0.86,0.84l-1.71,0.37l-0.14,0.62l1.53,1.97l-0.89,0.75l-0.63,2.13l-10.61,1.42l1.06,-2.28l0.87,-0.61l0.18,-0.87l1.43,-0.96l0.25,-0.96l0.63,-0.37l0.29,-0.59l-0.22,-2.28l-1.05,-0.75l-0.2,-0.77l-1.09,-1.18l-39.24,3.6l-37.71,2.58l-3.21,-58.18l-1.03,-0.63l-1.2,-0.02l-1.52,-0.73l-0.19,-0.93l-1.11,-1.3l-0.36,-1.55l-0.55,-0.09l-0.3,-0.56l-1.13,-0.66l-1.4,-1.84l0.73,-0.51l0.09,-1.24l1.12,-1.27l0.09,-0.79l1.01,0.16l0.56,-0.43l-0.2,-2.24l-1.02,-0.74l-0.32,-1.1l-1.17,-0.01l-1.31,0.96l-0.81,-0.7l-0.73,-0.17l-2.67,-2.35l-1.05,-0.28l0.13,-1.6l-1.32,-1.72l0.1,-1.01l-0.37,-0.36l-1.01,-0.18l-0.59,-0.85l-0.84,-0.26l0.07,-0.52l-1.24,-2.88l-0.0,-0.74l-0.4,-0.49l-0.85,-0.29l-0.05,-0.54ZM583.78,294.53l-0.1,-0.1l-0.08,-0.15l0.11,-0.01l0.07,0.26Z\",\n            name: \"Missouri\"\n          },\n          \"US-MN\": {\n            path: \"M443.67,67.68l-0.4,-1.37l0.05,-1.19l-0.48,-0.53l-1.36,-3.77l0.0,-3.22l-0.47,-1.97l0.27,-1.12l-0.57,-2.32l0.73,-2.56l-2.06,-6.89l29.55,-1.22l0.47,-0.81l-0.38,-7.12l2.84,0.15l1.24,0.82l0.38,2.69l1.73,5.31l0.13,2.3l0.52,0.86l1.46,1.05l1.3,0.49l3.23,-0.36l0.39,0.85l0.54,0.38l5.25,0.04l0.38,0.24l0.54,1.58l0.72,0.61l4.27,-0.78l0.77,-0.65l0.07,-0.69l0.69,-0.35l1.74,-0.44l3.97,-0.02l1.42,0.7l3.38,0.66l-1.01,0.79l0.0,0.82l0.51,0.45l2.91,-0.06l0.52,2.08l1.58,2.29l0.71,0.05l1.03,-0.78l-0.04,-1.73l2.67,-0.46l1.43,2.16l2.01,0.79l1.54,0.18l0.54,0.57l-0.03,0.83l0.58,0.35l1.32,0.06l0.19,0.75l0.41,0.1l1.2,-0.22l1.12,0.22l2.21,-0.85l2.78,-2.55l2.49,-1.54l1.24,2.52l0.96,0.51l2.23,-0.66l0.87,0.36l5.98,-1.3l0.56,0.18l1.32,1.64l1.24,0.59l0.62,-0.01l1.61,-0.83l1.3,0.1l-0.89,1.0l-4.69,3.07l-6.35,2.82l-3.68,2.47l-2.15,2.49l-0.96,0.57l-6.62,8.67l-0.95,0.61l-1.07,1.56l-1.96,1.97l-4.18,3.55l-0.86,1.78l-0.55,0.44l-0.14,0.96l-0.78,-0.01l-0.46,0.51l0.98,12.22l-0.79,1.2l-1.04,0.08l-0.52,0.82l-0.83,0.15l-0.61,0.83l-2.06,1.19l-0.94,1.86l0.06,0.72l-1.69,2.39l-0.01,2.06l0.38,0.91l2.15,0.39l1.42,2.49l-0.52,1.92l-0.71,1.25l-0.05,2.12l0.45,1.32l-0.71,1.23l0.91,3.14l-0.51,4.08l3.95,3.03l3.02,0.4l1.89,2.25l2.87,0.5l2.45,1.93l2.39,3.59l2.63,1.8l2.09,0.09l1.07,0.71l0.88,0.1l0.82,1.36l1.26,0.84l0.28,2.03l0.68,1.3l0.39,4.82l-40.62,3.2l-40.63,2.09l-1.46,-38.98l-1.52,-2.05l-2.57,-0.79l-0.94,-1.91l-1.46,-1.79l0.21,-0.68l2.82,-2.34l0.93,-2.03l0.43,-2.53l-0.35,-1.58l0.23,-1.86l-0.18,-1.51l-0.5,-1.03l-0.18,-2.33l-1.81,-2.59l-0.47,-1.13l-0.21,-2.16l-0.66,-0.98l0.15,-1.66l-0.35,-1.52l0.53,-2.69l-1.08,-1.85l-0.49,-8.32l-0.42,-0.79l0.06,-3.92l-1.58,-3.95l-0.53,-0.65Z\",\n            name: \"Minnesota\"\n          },\n          \"US-CA\": {\n            path: \"M3.07,175.36l0.87,-1.1l0.96,0.24l1.21,-2.15l0.92,0.12l0.64,-0.23l0.41,-0.57l-0.27,-0.82l-0.71,-0.36l1.52,-2.68l0.12,-0.78l-0.43,-0.48l0.1,-1.34l0.85,-0.88l1.17,-2.25l1.26,-3.01l0.39,-2.1l-0.28,-1.0l0.05,-3.89l-1.25,-1.24l0.92,-1.24l0.94,-2.81l32.73,8.13l32.57,7.34l-13.67,64.67l25.44,34.66l36.59,51.09l13.3,17.72l-0.19,2.73l0.73,0.94l0.21,1.71l0.85,0.63l0.81,2.56l-0.07,0.91l0.63,1.46l-0.16,1.36l3.8,3.82l0.01,0.5l-1.95,1.53l-3.11,1.26l-1.2,1.99l-1.72,1.14l-0.33,0.81l0.38,1.03l-0.51,0.51l-0.1,0.9l0.08,2.29l-0.6,0.72l-0.64,2.44l-2.02,2.47l-1.6,0.14l-0.42,0.51l0.33,0.89l-0.59,1.34l0.54,1.11l-0.01,1.19l-0.78,2.68l0.57,1.02l2.74,1.13l0.34,0.83l-0.19,2.4l-1.18,0.78l-0.42,1.37l-2.27,-0.62l-1.26,0.61l-43.36,-3.35l0.04,-0.76l0.39,-0.07l0.3,-0.56l-0.12,-1.38l-1.1,-1.65l-1.08,0.02l0.16,-1.13l-0.24,-1.11l0.35,-0.13l0.36,-0.93l0.05,-2.47l-0.39,-2.64l-2.46,-5.66l-3.47,-4.07l-1.29,-1.98l-2.42,-2.12l-2.07,-2.86l-2.01,-1.04l-1.23,0.18l-0.29,0.88l-1.56,-0.95l-0.11,-0.38l0.63,-0.52l0.22,-0.95l-0.46,-2.65l-1.0,-1.95l-0.7,-0.58l-2.17,-0.43l-1.45,-0.13l-1.11,0.3l-0.49,-0.59l-1.66,-0.65l-3.05,-1.95l-1.24,-1.35l-0.54,-2.64l-0.89,-0.66l-1.77,-2.24l-1.66,-1.3l-1.92,-0.51l-1.09,0.24l-1.1,-0.72l-1.51,-0.14l-2.0,-1.52l-2.34,-0.84l-5.72,-0.67l-0.4,-1.69l-1.01,-0.93l-0.92,-0.35l1.28,-2.62l-0.33,-1.38l0.84,-2.21l-0.65,-1.27l1.18,-2.39l0.32,-2.41l-0.99,-1.24l-1.32,-0.26l-1.34,-1.39l-0.08,-0.75l1.44,-1.4l-0.5,-2.3l-0.34,-0.54l-1.68,-0.76l-1.88,-4.27l-1.79,-1.16l-0.32,-2.63l-1.62,-2.61l-0.22,-2.75l-1.01,-0.76l-1.13,-3.38l-2.16,-2.3l-0.75,-1.6l0.04,-3.93l0.55,-1.46l-0.54,-0.6l0.52,-0.53l0.56,0.71l0.58,-0.1l0.8,-0.59l0.9,-1.64l0.83,0.01l0.08,-0.52l-0.51,-0.5l0.4,-0.88l-0.05,-0.93l-0.49,-2.22l-0.61,-1.2l-0.6,-0.44l-0.92,0.25l-2.02,-0.43l-1.45,-1.81l-0.86,-2.15l-0.53,-0.38l-0.32,-1.18l-0.46,-0.5l0.04,-1.12l0.85,-2.26l-0.21,-2.94l-0.89,-1.29l1.1,-2.74l0.21,-2.34l1.33,-0.2l0.23,1.52l-0.62,0.31l-0.1,2.71l1.73,1.17l0.7,1.42l1.0,0.72l0.4,1.01l0.89,0.41l0.85,-0.4l-0.19,-1.18l-0.68,-0.51l-0.37,-1.53l0.13,-1.99l-0.54,-1.26l-0.37,-0.02l-0.11,-0.14l0.62,-0.35l-0.0,-0.34l-1.62,-1.2l0.69,-0.67l-0.17,-1.88l-0.94,-0.36l-0.3,-0.61l1.07,-0.66l0.99,-0.01l0.96,-0.71l1.25,1.03l2.63,-0.1l5.01,2.23l0.53,-0.22l0.04,-0.59l0.61,-0.67l-0.3,0.75l0.39,0.76l0.81,-0.06l0.35,-0.49l1.35,1.6l0.7,-0.16l0.02,-0.38l-0.53,-1.14l-0.97,-0.74l-0.27,-0.8l-0.66,-0.38l-1.09,-0.07l0.27,-0.58l-0.25,-0.54l-2.48,1.29l-0.7,-0.34l-0.75,0.18l-0.18,-0.55l-1.09,-0.25l0.28,-0.66l-0.36,-0.69l-1.09,-0.17l-1.86,1.57l-0.34,-0.46l-1.36,-0.54l-0.36,-0.88l-1.36,-1.35l-2.59,0.52l0.1,0.92l-0.7,1.21l0.53,0.72l-0.88,0.92l-0.07,2.28l-0.37,-0.09l-1.52,-2.07l-1.18,-0.34l-1.16,-2.44l-1.41,-1.2l0.09,-0.69l-0.68,-0.18l0.73,-1.18l0.93,2.05l0.44,0.25l0.33,-0.38l-1.77,-5.65l-0.41,-0.59l-0.57,-0.2l0.2,-0.84l-0.53,-2.28l-2.72,-3.32l-1.0,-2.99l-3.45,-6.17l-0.03,-0.38l1.14,-1.43l0.12,-0.85l-0.51,-6.75l0.61,-1.87l1.33,-2.02l0.4,-3.04l-0.36,-1.21l0.19,-2.39l-0.7,-1.04l-1.24,-3.68l-0.57,-0.53l0.1,-0.93l-0.32,-0.88l-1.04,-0.88l-2.01,-3.32l0.52,-1.23l-0.26,-2.71l2.38,-3.44ZM33.36,240.61l0.01,-0.01l0.01,0.01l-0.02,-0.01ZM45.67,326.22l-0.02,0.03l0.02,-0.03l0.01,0.01ZM31.63,240.38l-0.09,0.14l-0.63,0.23l-0.2,-0.07l0.92,-0.3Z\",\n            name: \"California\"\n          },\n          \"US-IA\": {\n            path: \"M452.94,162.22l42.82,-2.19l40.55,-3.19l0.96,2.52l2.0,1.0l0.08,0.59l-0.9,1.8l-0.16,1.04l0.9,5.09l0.92,1.26l0.39,1.75l1.46,1.72l4.94,0.85l1.27,2.03l-0.3,1.03l0.29,0.66l3.61,2.37l0.85,2.41l3.84,2.31l0.62,1.68l-0.31,4.21l-1.64,1.98l-0.5,1.94l0.13,1.28l-1.26,1.36l-2.51,0.97l-0.89,1.18l-0.55,0.25l-4.56,0.83l-0.89,0.73l-0.61,1.71l-0.15,2.55l0.4,1.08l2.01,1.47l0.54,2.65l-1.87,3.25l-0.22,2.24l-0.52,1.42l-2.88,1.39l-1.02,1.02l-0.2,0.99l0.72,0.87l0.2,2.15l-0.58,0.23l-1.34,-0.82l-0.31,-0.76l-1.29,-0.82l-0.29,-0.51l-0.88,-0.36l-0.3,-0.82l-0.95,-0.68l-22.3,2.61l-15.12,1.17l-7.59,0.51l-20.78,0.47l-0.22,-1.06l-1.3,-0.73l-0.33,-0.67l0.58,-1.16l-0.21,-0.95l0.22,-1.39l-0.36,-2.19l-0.6,-0.73l0.07,-3.65l-1.05,-0.5l0.05,-0.91l0.71,-1.02l-0.05,-0.44l-1.31,-0.56l0.33,-2.54l-0.41,-0.45l-0.89,-0.16l0.23,-0.8l-0.3,-0.58l-0.51,-0.25l-0.74,0.23l-0.42,-2.81l0.5,-2.36l-0.2,-0.67l-1.36,-1.71l-0.08,-1.92l-1.78,-1.54l-0.36,-1.74l-1.09,-0.94l0.03,-2.18l-1.1,-1.87l0.21,-1.7l-0.27,-1.08l-1.38,-0.67l-0.87,-2.17l0.05,-0.63l-1.81,-1.82l0.56,-1.61l0.54,-0.47l0.73,-2.68l0.0,-1.68l0.55,-0.69l0.21,-1.19l-0.51,-2.24l-1.33,-0.29l-0.05,-0.73l0.45,-0.56l-0.0,-1.71l-0.95,-1.42l-0.05,-0.87Z\",\n            name: \"Iowa\"\n          },\n          \"US-MI\": {\n            path: \"M612.25,185.8l1.83,-2.17l0.7,-1.59l1.18,-4.4l1.43,-3.05l1.01,-5.05l0.09,-5.37l-0.86,-5.54l-2.4,-5.17l0.6,-0.5l0.3,-0.79l-0.57,-0.42l-1.08,0.55l-3.82,-7.03l-0.21,-1.1l1.13,-2.68l-0.01,-0.97l-0.74,-3.13l-1.29,-1.65l-0.05,-0.62l1.73,-2.73l1.22,-4.14l-0.21,-5.35l-0.77,-1.59l1.09,-1.15l0.81,-0.02l0.56,-0.47l-0.27,-3.49l1.08,-0.11l0.67,-1.43l1.18,0.47l0.66,-0.33l0.76,-2.59l0.82,-1.2l0.56,-1.68l0.55,-0.18l-0.58,0.87l0.6,1.65l-0.71,1.8l0.71,0.42l-0.48,2.61l0.88,1.43l0.73,-0.05l0.52,0.56l0.64,-0.24l0.89,-2.26l0.67,-3.51l-0.08,-2.07l-0.76,-3.42l0.58,-1.02l2.13,-1.64l2.74,-0.55l0.98,-0.63l0.28,-0.64l-0.25,-0.54l-1.76,-0.11l-0.96,-0.86l-0.52,-1.98l1.85,-2.98l-0.1,-0.73l1.72,-0.23l0.74,-0.94l4.16,2.0l0.83,0.12l1.98,-0.4l1.37,0.4l1.19,1.04l0.53,1.15l0.77,0.49l2.41,-0.29l1.7,1.01l1.92,0.09l0.8,0.64l3.27,0.45l1.1,0.77l-0.01,1.12l1.04,1.31l0.64,0.21l0.37,0.91l-0.14,0.55l-0.67,-0.25l-0.94,0.57l-0.23,1.83l0.81,1.29l1.6,0.98l0.69,1.37l0.65,2.26l-0.12,1.73l0.77,5.57l-0.14,0.59l-0.58,0.21l-0.48,0.96l-0.74,0.07l-0.8,0.81l-0.17,4.47l-1.12,0.49l-0.18,0.82l-1.86,0.43l-0.72,0.6l-0.58,2.61l0.26,0.45l-0.21,0.52l0.25,2.57l1.38,1.31l2.89,0.84l0.91,-0.08l1.08,-1.23l0.6,-1.44l0.62,0.19l0.39,-0.24l1.01,-3.59l0.6,-1.06l-0.08,-0.51l0.97,-1.45l1.39,-0.39l1.07,-0.69l0.83,-1.1l0.87,-0.44l2.06,0.59l1.13,0.7l1.0,1.09l1.21,2.16l2.01,5.91l0.82,1.6l1.03,3.71l1.49,3.63l1.29,1.74l-0.34,3.92l0.45,2.48l-0.48,2.79l-0.36,0.45l-0.57,-1.21l0.03,-0.85l-1.46,-0.52l-0.47,0.08l-1.48,1.36l-0.06,0.83l0.55,0.67l-0.82,0.57l-0.29,0.79l0.28,2.94l-0.48,0.75l-1.62,0.92l-1.06,1.85l-0.43,3.73l0.27,1.56l-0.33,0.93l-0.42,0.19l0.02,0.91l-0.64,0.3l-0.89,1.6l-0.5,1.29l-0.02,1.05l-0.52,0.91l-20.5,4.22l-0.15,-0.92l-0.45,-0.33l-31.44,4.71ZM621.47,115.84l0.0,-0.07l0.11,-0.12l-0.01,0.03l-0.11,0.16ZM621.73,114.93l-0.07,-0.16l0.07,-0.14l-0.0,0.3ZM543.5,88.02l4.87,-2.38l3.55,-3.62l5.77,-1.36l1.39,-0.84l2.36,-2.71l0.98,0.04l1.52,-0.73l1.0,-2.24l2.82,-2.85l0.23,1.72l1.85,0.59l0.05,1.44l0.67,0.14l0.51,0.6l-0.17,3.14l0.44,0.95l-0.34,0.47l0.2,0.47l0.74,-0.02l1.08,-2.21l1.08,-0.89l-0.42,1.15l0.58,0.45l0.83,-0.67l0.52,-1.22l1.0,-0.43l3.09,-0.25l1.5,0.21l1.18,0.93l1.54,0.44l0.47,1.05l2.31,2.58l1.17,0.55l0.53,1.55l0.73,0.34l1.87,0.07l0.73,-0.4l1.06,-0.06l1.4,-1.09l1.0,1.11l1.1,0.64l1.01,-0.25l0.68,-0.82l1.87,1.06l0.64,-0.34l1.65,-2.58l2.81,-1.89l1.7,-1.65l0.92,0.11l3.27,-1.21l5.17,-0.25l3.25,-2.09l2.28,-0.88l1.52,-0.11l-0.01,3.24l0.29,0.71l-0.36,1.1l0.46,0.7l0.68,0.28l0.91,-0.41l2.2,0.7l1.14,-0.43l1.03,-0.87l0.66,0.48l0.21,0.7l0.85,0.22l1.22,-0.76l0.79,-1.57l0.69,-0.28l1.06,0.23l1.35,-1.15l0.53,-0.01l0.22,0.08l-0.3,2.02l0.75,1.32l-1.11,-0.04l-0.36,0.5l0.84,1.83l-0.87,1.04l0.12,0.45l0.83,0.79l1.37,-0.42l0.6,0.47l0.62,0.04l0.18,1.19l0.98,0.87l1.53,0.51l-1.17,0.68l-4.96,-0.15l-0.53,0.3l-1.35,-0.17l-0.88,0.41l-0.66,-0.75l-1.63,-0.07l-0.59,0.47l-0.07,1.22l-0.49,0.76l0.38,2.05l-0.92,-0.22l-0.89,-0.92l-0.77,-0.13l-1.96,-1.65l-2.41,-0.6l-1.6,0.04l-1.04,-0.5l-2.89,0.47l-0.61,0.45l-1.18,2.52l-3.47,0.73l-0.57,0.77l-2.06,-0.33l-2.82,0.93l-0.68,0.83l-0.56,2.51l-0.78,0.28l-0.81,0.87l-0.65,0.28l0.16,-1.95l-0.74,-0.91l-1.02,0.34l-0.77,0.92l-0.97,-0.39l-0.68,0.17l-0.37,0.4l0.1,0.82l-0.73,2.01l-1.2,0.59l-0.1,-1.37l-0.46,-1.06l0.34,-1.69l-0.17,-0.37l-0.66,-0.17l-0.45,0.57l-0.6,2.13l-0.22,2.57l-1.12,0.91l-1.26,3.03l-0.62,2.65l-2.55,5.33l-0.69,0.73l0.12,0.91l-1.4,-1.28l0.18,-1.74l0.63,-1.69l-0.41,-0.81l-0.62,-0.31l-1.36,0.85l-1.16,0.1l0.04,-1.29l0.81,-1.45l-0.41,-1.34l0.3,-1.09l-0.58,-0.98l0.15,-0.83l-1.9,-1.55l-1.1,-0.06l-0.59,-0.44l-1.48,-0.0l0.3,-1.36l-0.94,-1.45l-1.13,-0.51l-2.23,-0.1l-3.2,-0.71l-1.55,0.59l-1.43,-0.42l-1.62,0.17l-4.56,-1.94l-15.37,-2.5l-1.99,-3.39l-1.88,-0.96l-0.76,0.26l-0.1,-0.29ZM603.39,98.63l-0.0,0.52l-0.46,0.32l-0.7,1.39l0.08,0.57l-0.65,-0.58l0.91,-2.15l0.83,-0.06ZM570.53,72.73l-0.51,-0.27l-1.16,0.06l-0.04,-1.56l1.0,-1.02l1.18,-2.09l1.83,-1.5l0.63,-0.0l0.53,-0.58l2.08,-0.89l3.34,-0.42l1.1,0.66l-0.54,0.38l-1.32,-0.12l-2.26,0.78l0.15,0.87l0.71,0.13l-1.19,0.98l-1.4,1.89l-0.69,0.28l-0.36,1.45l-1.15,1.36l-0.66,2.04l-0.67,-0.87l0.75,-0.97l0.14,-1.95l-0.84,-0.23l-0.6,0.92l-0.05,0.67Z\",\n            name: \"Michigan\"\n          },\n          \"US-GA\": {\n            path: \"M654.05,331.64l22.02,-3.57l20.65,-3.86l-0.07,0.58l-2.59,3.35l-0.41,1.73l0.11,1.23l0.82,0.78l1.84,0.8l1.03,0.12l2.7,2.03l0.84,0.24l1.9,-0.37l0.6,0.25l0.8,1.64l1.51,1.6l1.04,2.5l1.33,0.82l0.84,1.16l0.56,0.26l1.0,1.77l1.07,0.3l1.17,0.99l3.81,1.85l2.41,3.16l2.25,0.58l2.53,1.67l0.5,2.34l1.25,1.01l0.47,-0.16l0.31,0.49l-0.1,0.62l0.79,0.73l0.79,0.09l0.56,1.2l4.99,1.88l0.4,1.78l1.54,1.73l1.02,2.01l-0.07,0.8l0.48,0.69l0.11,1.24l1.04,0.79l1.16,0.17l1.25,0.62l0.28,0.53l0.57,0.23l1.12,2.56l0.76,0.57l0.08,2.68l0.77,1.48l1.38,0.9l1.52,-0.27l1.44,0.76l1.45,0.12l-0.59,0.78l-0.55,-0.35l-0.47,0.28l-0.4,0.99l0.62,0.91l-0.38,0.48l-1.38,-0.16l-0.77,-0.55l-0.65,0.44l0.26,0.71l-0.49,0.52l0.36,0.6l1.44,0.25l-0.58,1.35l-1.43,0.27l-1.08,-0.44l-0.6,0.21l0.03,0.82l1.45,0.6l-1.76,3.73l0.36,1.73l-0.48,0.97l0.85,1.48l-2.29,-0.19l-0.46,0.29l0.06,0.63l0.55,0.34l2.76,0.24l1.07,0.66l-0.02,0.34l-0.56,0.22l-0.88,1.95l-0.5,-1.41l-0.45,-0.13l-0.6,0.33l-0.15,0.84l0.34,0.96l-0.6,0.12l-0.03,0.84l-0.3,0.16l0.07,0.46l1.34,1.15l-1.09,1.03l0.32,0.47l0.77,0.08l-0.39,0.92l0.06,0.88l-0.46,0.51l1.1,1.66l0.03,0.76l-0.79,0.33l-2.64,-0.17l-4.06,-0.96l-1.31,0.35l-0.18,0.74l-0.68,0.26l-0.35,1.25l0.28,2.08l0.95,1.36l0.13,4.25l-1.97,0.4l-0.54,-0.92l-0.12,-1.3l-1.33,-1.82l-49.21,5.14l-0.72,-0.56l-0.86,-2.7l-0.94,-1.51l-0.56,-0.38l0.16,-0.68l-0.73,-1.51l-1.82,-1.81l-0.43,-1.75l0.25,-0.8l0.06,-5.18l-0.6,-1.81l-1.19,-1.47l-1.03,-2.65l0.12,-1.65l0.78,-2.36l-0.25,-1.53l0.19,-2.11l1.62,-1.33l0.46,-1.47l-0.55,-0.61l-1.42,-0.69l0.09,-2.15l-0.97,-1.87l-2.18,-2.42l-1.03,-2.81l-0.75,-0.68l-0.17,-0.96l-0.77,-1.37l-13.99,-43.11Z\",\n            name: \"Georgia\"\n          },\n          \"US-AZ\": {\n            path: \"M128.51,384.14l0.44,-1.81l1.29,-1.29l0.53,-1.12l0.48,-0.25l1.66,0.62l0.96,-0.03l0.52,-0.46l0.28,-1.17l1.31,-1.0l0.24,-2.73l-0.46,-1.24l-0.84,-0.66l-2.07,-0.66l-0.3,-0.61l0.8,-2.4l0.0,-1.39l-0.52,-1.19l0.57,-0.86l-0.2,-0.87l1.57,-0.27l2.29,-2.81l0.65,-2.43l0.65,-0.81l0.02,-3.17l0.55,-0.62l-0.29,-1.43l1.71,-1.14l1.03,-1.85l3.16,-1.29l2.03,-1.58l0.26,-0.53l-0.13,-1.04l-3.25,-3.49l-0.51,-0.22l0.22,-1.26l-0.66,-1.46l0.07,-0.91l-0.88,-2.76l-0.84,-0.56l-0.19,-1.65l-0.69,-0.8l0.19,-3.54l0.58,-0.87l-0.3,-0.86l1.03,-0.4l0.4,-1.42l0.14,-3.2l-0.76,-3.66l0.76,-2.55l-0.4,-3.0l0.85,-2.56l-0.8,-1.87l-0.03,-0.92l0.78,-1.88l2.54,-0.63l1.75,0.99l1.43,-0.19l0.96,2.24l0.79,0.71l1.54,0.14l1.01,-0.5l1.02,-2.27l0.94,-1.19l2.57,-16.94l42.42,5.78l42.56,4.67l-11.82,123.64l-36.87,-4.05l-36.33,-18.97l-28.43,-15.56Z\",\n            name: \"Arizona\"\n          },\n          \"US-MT\": {\n            path: \"M166.39,57.3l0.69,-0.1l0.33,-0.38l-0.9,-1.99l0.83,-0.96l-0.39,-1.3l0.09,-0.96l-1.24,-1.93l-0.24,-1.49l-1.03,-1.33l-1.19,-2.44l3.53,-20.64l43.67,6.71l43.04,5.23l42.75,3.84l43.13,2.53l-3.53,86.04l-28.1,-1.47l-26.82,-1.91l-26.78,-2.4l-25.83,-2.79l-0.44,0.35l-1.22,10.41l-1.51,-2.01l-0.03,-0.91l-1.18,-2.35l-1.25,-0.74l-1.8,0.92l0.03,1.05l-0.72,0.42l-0.34,1.56l-2.42,-0.41l-1.91,0.57l-0.92,-0.85l-3.36,0.09l-2.38,-0.96l-1.68,0.58l-0.84,1.49l-4.66,-1.6l-1.3,0.37l-1.12,0.9l-0.31,0.67l-1.65,-1.4l0.22,-1.43l-0.9,-1.71l0.4,-0.36l0.07,-0.62l-1.17,-3.08l-1.45,-1.25l-1.44,0.36l-0.21,-0.64l-1.08,-0.9l-0.41,-1.37l0.68,-0.61l0.2,-1.41l-0.77,-2.38l-0.77,-0.35l-0.31,-1.58l-1.51,-2.54l0.23,-1.51l-0.56,-1.26l0.34,-1.4l-0.73,-0.86l0.48,-0.98l-0.21,-0.74l-1.14,-0.75l-0.13,-0.59l-0.85,-0.91l-0.8,-0.4l-0.51,0.37l-0.07,0.74l-0.7,0.27l-1.13,1.22l-1.75,0.37l-1.21,1.07l-1.08,-0.85l-0.64,-1.01l-1.06,-0.44l0.02,-0.86l0.74,-0.63l0.24,-1.06l-0.61,-1.6l0.9,-1.09l1.07,-0.08l0.83,-0.8l-0.26,-1.14l0.38,-1.07l-0.95,-0.81l-0.04,-0.81l0.66,-1.28l-0.59,-1.07l0.74,-0.07l0.38,-0.42l-0.04,-1.77l1.83,-3.73l-0.14,-1.05l0.89,-0.62l0.6,-3.16l-0.78,-0.5l-1.8,0.37l-1.33,-0.11l-0.64,-0.55l0.37,-0.83l-0.62,-0.97l-0.66,-0.23l-0.72,0.35l-0.07,-0.95l-1.74,-1.62l0.04,-1.84l-1.68,-1.82l-0.08,-0.69l-1.55,-2.88l-1.07,-1.29l-0.57,-1.63l-2.35,-1.34l-0.95,-1.95l-1.43,-1.19Z\",\n            name: \"Montana\"\n          },\n          \"US-MS\": {\n            path: \"M555.51,431.02l0.67,-0.97l-1.05,-1.76l0.18,-1.63l-0.81,-0.87l1.69,-0.25l0.47,-0.54l0.4,-2.74l-0.77,-1.82l1.56,-1.79l0.25,-3.58l0.74,-2.26l1.89,-1.25l1.15,-1.97l1.4,-1.04l0.34,-0.78l-0.04,-0.99l-0.63,-0.96l1.14,-0.28l0.96,-2.58l0.91,-1.31l-0.16,-0.86l-1.54,-0.43l-0.35,-0.96l-1.83,-1.04l-0.07,-2.14l-0.93,-0.74l-0.45,-0.84l-0.02,-0.37l1.14,-0.29l0.46,-0.69l-0.26,-0.89l-1.41,-0.49l0.23,-1.77l0.98,-1.54l-0.77,-1.06l-1.08,-0.31l-0.15,-2.82l0.9,-0.54l0.23,-0.8l-0.62,-2.52l-1.25,-0.66l0.7,-1.33l-0.07,-2.22l-2.02,-1.52l1.13,-0.47l0.12,-1.41l-1.34,-0.89l1.58,-2.04l0.93,-0.31l0.36,-0.69l-0.52,-1.56l0.42,-1.35l-0.9,-0.89l2.84,-1.1l0.59,-0.76l-0.09,-1.07l-1.41,-0.95l1.39,-1.08l0.62,-1.77l0.94,-0.17l0.34,-0.97l-0.2,-0.77l1.48,-0.43l1.22,-1.21l0.07,-3.53l-0.46,-1.53l0.36,-1.78l0.73,0.09l0.68,-0.33l0.42,-0.87l-0.41,-1.06l2.72,-1.71l0.58,-1.06l-0.29,-1.28l36.44,-4.1l0.86,1.26l0.85,0.45l0.99,66.49l5.52,32.95l-0.73,0.69l-1.53,-0.3l-0.9,-0.94l-1.32,1.06l-1.23,0.17l-2.17,-1.26l-1.85,-0.19l-0.83,0.36l-0.34,0.44l0.32,0.41l-0.56,0.36l-3.96,1.66l-0.05,-0.5l-0.96,-0.52l-1.0,0.05l-0.58,1.0l0.76,0.61l-1.59,1.21l-0.33,1.28l-0.69,0.3l-1.33,-0.06l-1.16,-1.86l-0.08,-0.89l-0.92,-1.47l-0.21,-1.0l-1.4,-1.63l-1.16,-0.54l-0.47,-0.77l0.1,-0.62l-0.69,-0.92l0.21,-1.99l0.5,-0.93l0.66,-2.98l-0.06,-1.22l-0.43,-0.29l-34.66,3.41Z\",\n            name: \"Mississippi\"\n          },\n          \"US-SC\": {\n            path: \"M697.55,324.05l4.86,-2.69l1.02,-0.05l1.11,-1.38l3.93,-1.9l0.45,-0.88l0.63,0.22l22.71,-3.36l0.07,1.22l0.42,0.57l0.71,0.01l1.21,-1.3l2.82,2.54l0.46,2.48l0.55,0.52l19.74,-3.49l22.74,15.07l0.02,0.55l-2.48,2.18l-2.44,3.67l-2.41,5.72l-0.09,2.74l-1.08,-0.21l0.85,-2.72l-0.63,-0.23l-0.76,0.87l-0.56,1.38l-0.11,1.55l0.83,0.95l1.05,0.23l0.44,0.91l-0.75,0.08l-0.41,0.56l-0.87,0.02l-0.24,0.68l0.94,0.45l-1.1,1.13l-0.07,1.02l-1.34,0.63l-0.5,-0.61l-0.5,-0.08l-1.06,0.87l-0.56,1.77l0.43,0.87l-1.19,1.23l-0.61,1.44l-1.2,1.01l-0.9,-0.4l0.27,-0.6l-0.53,-0.74l-1.37,0.31l0.25,1.2l-0.52,0.03l0.05,0.76l2.02,1.01l-0.12,0.39l-0.88,0.94l-1.22,0.23l-0.24,0.51l0.33,0.45l-2.29,1.34l-1.42,-0.84l-0.56,0.11l-0.1,0.67l1.19,0.78l-1.54,1.57l-0.72,-0.75l-0.5,0.52l-0.0,0.74l-1.54,-0.37l-1.34,-0.84l-0.44,0.5l0.16,0.53l-1.73,0.17l-0.44,0.37l-0.06,0.78l2.07,0.05l-0.26,0.55l0.42,0.25l1.91,-0.15l0.11,0.22l-0.97,0.86l-0.32,0.78l0.57,0.49l0.94,-0.53l0.03,0.21l-1.12,1.09l-0.99,0.43l-0.21,-2.04l-0.69,-0.27l-0.22,-1.54l-0.88,-0.15l-0.3,0.58l0.86,2.69l-1.12,-0.66l-0.63,-1.0l-0.39,-1.76l-0.65,-0.21l-0.52,-0.63l-0.69,0.0l-0.27,0.6l0.84,1.02l0.01,0.68l1.11,1.83l-0.02,0.86l1.22,1.17l-0.62,0.35l0.03,0.98l-1.2,3.56l-1.51,-0.78l-1.52,0.26l-0.97,-0.68l-0.54,-1.03l-0.17,-2.93l-0.86,-0.75l-1.06,-2.47l-1.04,-0.95l-3.23,-1.33l-0.49,-2.65l-1.12,-2.17l-1.43,-1.58l-0.06,-1.07l-0.76,-1.21l-4.81,-1.69l-0.58,-1.27l-1.21,-0.37l0.02,-0.7l-0.53,-0.87l-0.87,0.0l-0.73,-0.61l0.03,-1.21l-0.66,-1.26l-2.7,-1.78l-2.16,-0.52l-2.36,-3.12l-3.93,-1.93l-1.22,-1.03l-0.83,-0.12l-1.04,-1.81l-0.51,-0.22l-0.91,-1.21l-1.18,-0.68l-0.99,-2.42l-1.54,-1.65l-1.02,-1.87l-1.06,-0.37l-1.93,0.37l-0.46,-0.16l-2.75,-2.19l-1.06,0.02l-2.23,-1.27l0.36,-2.22l2.6,-3.31l0.15,-1.07ZM750.36,375.19l0.73,-0.08l0.51,0.45l-1.23,1.9l0.28,-1.22l-0.3,-1.06Z\",\n            name: \"South Carolina\"\n          },\n          \"US-RI\": {\n            path: \"M851.1,141.46l0.22,-0.46l-0.53,-2.22l-3.14,-10.0l5.61,-1.84l0.76,2.06l0.8,0.25l0.19,0.73l0.08,0.42l-0.77,0.25l0.03,0.29l0.51,1.45l0.59,0.5l-0.75,0.28l-0.3,0.6l0.87,0.97l-0.14,1.23l0.89,1.9l0.03,1.67l-0.27,0.71l-0.9,0.16l-3.59,2.35l-0.18,-1.31ZM855.89,131.53l0.26,0.1l0.01,0.1l-0.17,-0.08l-0.1,-0.12ZM857.28,132.21l0.25,0.54l-0.05,0.32l-0.15,0.01l-0.05,-0.87Z\",\n            name: \"Rhode Island\"\n          },\n          \"US-AR\": {\n            path: \"M498.76,376.91l-1.42,-38.01l-4.48,-23.98l37.68,-2.58l39.02,-3.58l0.8,1.6l1.01,0.7l0.11,1.77l-0.77,0.57l-0.22,0.94l-1.42,0.93l-0.29,1.04l-0.83,0.54l-1.19,2.59l0.02,0.7l0.53,0.26l10.94,-1.46l0.86,0.93l-1.18,0.37l-0.52,0.96l0.25,0.49l0.84,0.41l-3.6,2.7l0.02,0.84l0.83,1.04l-0.6,1.15l0.62,0.97l-1.42,0.74l-0.11,1.44l-1.45,2.09l0.12,1.64l0.91,3.1l-0.15,0.27l-1.08,-0.01l-0.33,0.26l-0.51,1.73l-1.52,0.95l-0.04,0.51l0.79,0.91l0.05,0.65l-1.11,1.21l-2.02,1.13l-0.21,0.62l0.43,1.0l-0.19,0.27l-1.23,0.03l-0.42,0.67l-0.32,1.89l0.47,1.57l0.02,3.08l-1.27,1.09l-1.54,0.13l0.23,1.49l-0.21,0.48l-0.93,0.25l-0.59,1.77l-1.49,1.19l-0.02,0.93l1.39,0.76l-0.03,0.7l-1.23,0.3l-2.24,1.23l0.03,0.67l0.99,0.82l-0.45,1.14l0.53,1.38l-1.09,0.62l-1.9,2.57l0.52,0.7l1.0,0.49l0.01,0.58l-0.98,0.29l-0.42,0.64l0.51,0.84l1.63,1.01l0.06,1.77l-0.59,0.98l-0.09,0.84l1.34,0.79l0.5,2.17l-1.09,1.01l0.06,2.11l-51.45,4.07l-0.83,-11.53l-1.18,-0.85l-0.9,0.16l-0.83,-0.35l-0.93,0.39l-1.22,-0.33l-0.57,0.72l-0.47,0.01l-0.49,-0.48l-0.82,-0.15l-0.63,-1.0Z\",\n            name: \"Arkansas\"\n          }\n        },\n        height: 612.395412685768,\n        projection: {\n          type: \"aea\",\n          centralMeridian: -100\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"vietnam\", {\n        width: \"210\",\n        height: \"297\",\n        paths: {\n          1: {\n            name: \"An Giang\",\n            path: \"m70.81 255.70l0.57 -0.74c0.38 0.04 0.38 0.07 0.64 -0.26c0.25 -0.31 0.38 -0.03 0.51 0.01c-0.30 0.59 1.56 0.12 1.80 0.00c0.17 -0.08 -0.02 -0.34 0.04 -0.48c0.09 -0.24 0.38 -0.07 0.58 -0.14c0.12 -0.04 0.44 -0.34 0.57 -0.48l0.15 -0.14l0.00 0.00c0.00 -0.21 -0.06 -0.37 0.14 -0.51c0.20 -0.13 0.34 -0.08 0.30 -0.39c-0.02 -0.20 0.02 -0.24 0.19 -0.35c0.19 -0.11 0.17 -0.32 0.25 -0.50c0.12 -0.25 0.55 0.08 0.55 -0.43c0.05 -0.43 -0.25 -0.97 -0.58 -1.23c-0.57 -0.44 -0.78 -0.39 -1.50 -0.42c-0.60 -0.02 -0.71 -0.33 -1.19 -0.48c-0.72 -0.23 -0.60 -1.21 -0.85 -1.74c0.02 -0.19 0.33 -0.86 0.02 -0.95c-0.22 -0.06 -1.30 0.27 -0.82 -0.38c0.23 -0.31 0.30 -0.39 -0.18 -0.47c-0.50 -0.07 -0.10 -0.44 -0.48 -0.61c-0.18 -0.08 -0.35 0.02 -0.38 -0.23c-0.03 -0.27 -0.32 -0.25 -0.42 -0.48l-0.22 -0.71l0.00 0.00c-0.85 -0.11 -1.66 -0.20 -1.80 -0.43c-0.19 -0.31 0.28 -0.57 -0.32 -0.57l-0.47 0.35c0.08 0.23 0.00 0.48 -0.12 0.76c-0.24 0.55 0.24 1.62 0.69 1.92c0.18 0.12 0.27 0.32 0.33 0.53l-0.49 0.48c-0.34 0.42 -0.59 0.52 -1.02 0.74c-0.43 0.21 -1.05 0.73 -1.33 1.10c-0.61 0.49 -0.91 1.92 -1.74 1.98c-0.32 0.02 -0.66 -0.00 -1.00 -0.06l0.00 0.00l0.11 0.44l1.30 2.16l2.60 0.55l1.94 1.34l1.37 1.16l0.25 -0.35l0.00 0.00z\"\n          },\n          2: {\n            name: \"B\\xE0 R\\u1ECBa - V\\u0169ng T\\xE0u\",\n            path: \"m110.30 245.89l0.01 0.49c0.19 0.15 0.46 0.36 0.54 0.60c0.14 0.45 0.15 0.79 0.40 1.22c0.22 0.38 0.35 0.92 0.35 1.36l0.00 0.00c-0.66 0.52 -1.11 1.28 -1.52 1.28c-0.61 0.00 -1.01 0.49 -1.32 0.43c-0.51 -0.10 -0.78 0.08 -1.33 0.12c-0.36 0.03 -0.55 0.51 -0.75 0.54l-0.05 0.13c-0.40 0.10 -0.64 1.06 -1.04 0.84c-0.54 -0.30 -0.21 -0.52 -1.01 -0.21c-0.65 0.25 -1.78 1.89 -2.10 0.69c-0.15 -0.56 -0.57 -0.73 0.33 -1.03c0.00 -0.20 -0.58 -0.63 -0.76 -0.81c-0.38 -0.38 0.10 -0.87 -0.04 -1.28l0.00 0.00c0.00 -0.09 -0.13 -0.34 -0.15 -0.42c-0.02 -0.10 -0.08 -0.16 -0.11 -0.25c-0.09 -0.23 0.28 -0.37 0.18 -0.64l-0.43 -0.30l0.00 0.00c0.17 -0.59 -0.08 -0.44 0.57 -0.69c0.77 -0.30 1.54 0.20 1.76 -0.93c0.04 -0.20 -0.02 -0.79 0.28 -0.79c0.29 0.00 0.38 -0.33 0.64 -0.33c0.24 0.37 1.28 0.27 1.72 0.25c0.73 -0.04 -0.13 1.70 0.80 1.37c0.29 -0.09 0.39 -0.60 0.55 -0.86c0.11 -0.17 0.41 -0.58 0.57 -0.68c0.20 -0.12 0.41 -0.22 0.57 -0.41c0.59 -0.75 0.72 0.19 1.37 0.32l0.00 0.00z\"\n          },\n          3: {\n            name: \"B\\u1EA1c Li\\xEAu\",\n            path: \"m73.38 266.59c0.25 -0.05 0.66 -0.01 0.85 -0.16c0.02 0.02 0.54 0.08 0.57 0.08c0.04 0.13 0.64 0.19 0.79 0.19c0.38 0.00 0.66 -0.27 1.01 -0.35l0.00 0.00l-0.11 2.47c0.02 0.01 0.01 0.01 0.01 0.04c0.21 0.07 0.11 0.74 0.64 0.74c0.36 0.00 0.45 -0.24 0.77 0.08c0.29 0.29 0.35 0.05 0.63 0.18c0.22 0.10 0.35 0.39 0.62 0.43c0.25 0.04 0.38 -0.17 0.57 -0.31c0.15 -0.11 0.91 -0.19 1.04 -0.07c0.17 0.15 0.08 0.67 0.46 0.32c0.35 -0.32 0.87 -0.09 0.64 0.36c-0.09 0.19 -0.38 0.11 -0.51 0.21c-0.25 0.19 -0.07 0.29 -0.18 0.54l0.17 1.30l0.00 0.00c-1.25 0.44 -2.45 0.93 -3.65 1.62c-1.74 0.87 -2.59 1.14 -3.34 2.22l0.00 0.00c-0.24 -0.41 -0.82 -0.81 -1.32 -0.69c-0.72 0.17 -0.66 -0.40 -1.16 -0.53c-0.34 -0.09 -0.56 0.02 -0.56 -0.45l-0.01 -1.17c-0.69 -0.69 0.18 -0.93 0.61 -1.41c0.45 -0.50 -0.73 -0.68 -0.49 -1.36c0.13 -0.35 0.46 -0.46 0.68 -0.75l0.00 0.00l0.38 -0.12l-0.45 -1.05c0.00 -0.60 0.12 -0.79 0.52 -1.19c0.37 -0.37 -0.33 -0.91 -0.50 -1.24c-0.07 -0.15 -0.13 -0.78 0.14 -0.61c0.33 0.21 0.34 0.30 0.76 0.36c0.05 0.01 0.15 0.11 0.15 0.11c0.02 0.10 0.14 0.17 0.24 0.20l0.00 0.00z\"\n          },\n          4: {\n            name: \"B\\u1EAFc K\\u1EA1n\",\n            path: \"m75.98 31.35c0.00 0.03 0.02 0.17 -0.01 0.19c0.01 0.03 0.06 0.18 0.06 0.20c0.47 0.16 1.06 1.41 1.06 1.91c-0.02 0.01 -0.02 0.02 -0.02 0.05c-0.02 0.01 -0.01 -0.00 -0.01 0.02c-0.95 0.32 -0.32 1.30 -0.58 1.68c-0.16 0.23 -0.55 -0.09 -0.75 0.47c-0.10 0.29 0.02 0.58 -0.06 0.88c-0.50 0.10 -0.43 0.81 -0.51 1.15c-1.12 0.22 -0.73 0.99 -0.46 1.73c0.17 0.33 0.18 0.39 0.54 0.48c0.00 0.38 -0.35 0.61 -0.32 1.05c0.02 0.29 0.13 0.43 0.06 0.74c-0.13 0.56 0.28 0.71 0.46 1.12c0.08 0.18 0.22 0.37 0.33 0.51c0.07 0.09 0.51 0.44 0.52 0.49l0.00 0.00c0.80 -0.43 0.62 -1.05 1.57 -1.22c0.96 -0.16 0.45 -0.89 1.50 -0.05c0.60 0.48 0.67 0.01 0.67 0.95c0.00 0.74 0.21 1.20 0.07 2.04c-0.13 0.77 0.28 1.54 0.86 0.49c0.33 -0.60 0.82 -0.35 1.31 -0.72c0.49 -0.37 1.49 -1.34 1.99 -1.27c0.35 0.05 0.23 -0.53 0.74 -0.36c0.37 0.13 0.55 0.22 0.97 0.27l0.00 0.00l0.14 -0.30c0.44 -0.73 -1.05 -2.35 0.51 -2.35c0.44 0.00 1.65 -1.87 1.61 -1.98c-0.26 -0.67 0.49 -1.20 0.01 -1.67c0.03 -0.01 -0.22 -0.24 -0.30 -0.30c-0.13 -0.09 -0.28 -0.18 -0.30 -0.36c-0.04 -0.39 0.41 -0.44 0.23 -0.92l-0.50 -0.54l0.00 0.00c-0.06 -0.06 -0.29 -0.14 -0.29 -0.23c-0.36 -0.12 -0.76 0.34 -1.14 0.06c-0.30 -0.22 -0.06 -0.95 0.01 -1.23c0.12 -0.47 0.01 -1.73 -0.64 -1.84c-0.74 -0.13 -1.05 0.79 -1.76 0.79c-0.78 0.00 -0.79 0.86 -1.76 0.37c-0.17 -0.08 -0.26 -0.31 -0.46 -0.33c-0.51 -0.06 -0.53 -0.06 -0.95 -0.37c-0.33 -0.24 -0.00 -0.76 -0.49 -0.76c-0.15 -0.45 0.02 -0.40 -0.37 -0.82c-0.02 -0.03 -0.02 -0.04 -0.02 -0.07c-0.08 -0.03 0.07 -0.21 0.11 -0.24c0.11 -0.09 0.25 -0.16 0.35 -0.26c0.16 -0.16 0.23 -0.35 0.13 -0.56c-0.17 -0.34 0.09 -0.97 -0.61 -0.72c-0.32 0.12 -0.55 0.14 -0.87 0.18c-0.22 0.03 -0.95 0.58 -0.98 0.47l-0.02 0.00c-0.07 -0.29 -0.36 0.17 -0.39 0.26c-0.09 0.23 -0.02 0.29 -0.30 0.31c-0.53 0.03 -0.53 0.33 -0.91 0.58l0.00 0.00z\"\n          },\n          5: {\n            name: \"B\\u1EAFc Giang\",\n            path: \"m82.24 55.59l0.38 0.36c0.08 0.14 0.23 0.22 0.33 0.36c0.12 0.17 0.03 0.31 0.09 0.48c0.06 0.16 0.13 0.32 0.13 0.50l0.00 0.00c0.10 0.01 0.46 0.11 0.55 0.16c0.23 -0.13 0.22 -0.07 0.27 -0.38c0.06 -0.30 0.53 -0.26 0.74 -0.13c0.26 0.16 0.02 0.67 0.24 0.77c0.12 0.05 0.37 -0.15 0.58 -0.10c0.16 0.04 0.24 0.23 0.43 0.27c0.28 0.06 0.48 -0.25 0.71 -0.18c0.19 0.06 0.36 0.29 0.51 0.44c0.26 0.27 0.40 0.09 0.70 0.20c-0.00 0.01 0.13 0.27 0.13 0.27c0.10 0.45 0.54 -0.31 0.80 0.14c0.17 0.28 0.34 0.32 0.54 0.53l0.00 0.00c0.12 -0.19 0.28 -0.03 0.35 -0.39c0.04 -0.20 -0.06 -1.28 0.33 -0.86c0.29 0.31 0.42 0.41 0.74 0.06c0.17 -0.19 0.37 -0.13 0.54 -0.27c0.28 -0.24 0.27 -0.55 0.76 -0.49c0.31 0.04 0.60 -0.05 0.90 -0.05l0.00 0.00c0.58 0.02 0.43 0.63 1.17 0.67c0.25 0.01 0.35 0.21 0.55 0.31c0.33 0.17 1.15 0.05 1.57 0.12c0.72 0.12 1.37 0.31 2.12 0.31c0.51 0.00 0.27 -0.34 0.35 -0.61c0.06 -0.21 0.51 0.05 0.65 0.10c0.02 0.00 0.06 0.00 0.07 0.01c0.16 -0.04 0.25 -0.15 0.44 -0.09c0.28 0.09 0.45 0.31 0.70 -0.03c0.37 -0.51 0.68 -0.81 0.56 -1.49c-0.14 -0.77 0.53 -0.55 0.91 -0.77l0.12 -0.26l0.00 0.00c0.00 -0.14 -0.37 -0.32 -0.42 -0.51c-0.07 -0.31 -0.22 -0.37 -0.48 -0.54c-0.36 -0.37 0.49 -0.68 0.21 -1.04c-0.29 -0.37 -0.61 0.40 -1.06 0.10c-0.37 -0.25 0.00 -0.18 -0.45 -0.18c-0.13 -0.41 -0.10 -0.86 -0.61 -0.99c-0.70 -0.17 -0.62 -0.03 -0.62 -0.82c-0.35 -0.12 -0.84 -1.13 -1.35 -0.37c-0.68 1.02 -0.75 -0.22 -1.28 -0.68c-0.35 -0.31 -0.96 -0.11 -1.39 -0.23c-0.82 -0.23 -1.06 0.73 -1.39 1.25c-0.10 0.21 -0.31 0.32 -0.31 0.58c0.00 0.18 0.24 0.32 0.11 0.45c-0.25 0.25 -0.75 0.35 -0.75 0.74c0.00 0.32 -0.39 0.22 -0.56 0.16c-0.29 -0.11 -0.54 0.29 -0.56 0.51c-0.05 0.59 -0.57 0.37 -0.97 0.29c-0.62 -0.13 -0.13 -1.02 -0.88 -0.95c-0.47 -0.10 0.05 -0.66 -0.27 -0.78c-0.34 -0.12 -0.80 0.16 -1.10 -0.02c-0.30 -0.18 -0.25 -0.19 -0.63 -0.19c-0.46 0.00 -0.30 -0.51 -0.46 -0.56c0.00 -0.25 0.09 -0.45 0.07 -0.70c-0.03 -0.35 0.10 -0.37 0.27 -0.62l0.00 0.00c-0.37 -0.37 -0.86 -0.13 -1.19 -0.43c-0.46 -0.41 -0.85 0.27 -1.01 0.68c-0.44 1.11 -0.03 2.23 -0.52 3.34c-0.35 0.79 -1.25 -0.98 -1.25 0.12c0.00 0.45 -0.02 0.71 -0.51 0.55c-0.02 0.05 -0.13 0.27 -0.17 0.39c-0.07 0.20 -0.34 0.07 -0.38 0.14c-0.07 0.12 0.04 0.21 -0.05 0.37l0.00 0.00z\"\n          },\n          6: {\n            name: \"B\\u1EAFc Ninh\",\n            path: \"m86.48 61.94l0.17 -0.33c0.48 0.15 0.44 0.62 1.01 0.38c0.42 -0.18 0.70 -0.37 1.14 -0.24c0.32 0.10 0.36 -0.12 0.44 -0.34c0.05 -0.15 0.31 -0.18 0.24 -0.41c-0.12 -0.39 0.19 -0.50 0.11 -0.79c-0.06 -0.24 -0.15 -0.41 -0.20 -0.67l-0.03 -0.27l0.00 0.00c-0.20 -0.20 -0.38 -0.24 -0.54 -0.53c-0.27 -0.45 -0.71 0.31 -0.80 -0.14c0.00 0.00 -0.13 -0.26 -0.13 -0.27c-0.30 -0.11 -0.44 0.07 -0.70 -0.20c-0.14 -0.14 -0.31 -0.37 -0.51 -0.44c-0.23 -0.08 -0.43 0.24 -0.71 0.18c-0.19 -0.04 -0.27 -0.23 -0.43 -0.27c-0.21 -0.05 -0.46 0.15 -0.58 0.10c-0.22 -0.10 0.02 -0.61 -0.24 -0.77c-0.21 -0.13 -0.68 -0.17 -0.74 0.13c-0.06 0.30 -0.05 0.24 -0.27 0.38c-0.08 -0.05 -0.45 -0.14 -0.55 -0.16l0.00 0.00l-0.45 0.16c0.01 0.23 0.07 0.24 0.01 0.48c-0.03 0.13 0.10 0.20 0.17 0.30c0.16 0.23 0.05 0.56 0.11 0.82c0.08 0.35 0.13 0.96 0.54 1.12c0.21 0.08 0.50 0.03 0.74 0.10c0.28 0.09 0.31 0.35 0.40 0.58l-0.31 0.76l0.00 0.00c0.19 0.08 0.33 0.09 0.53 0.03c0.29 -0.08 0.58 0.02 0.86 -0.09c0.17 -0.06 0.54 0.23 0.71 0.39l0.00 0.00z\"\n          },\n          7: {\n            name: \"B\\u1EBFn Tre\",\n            path: \"m84.90 253.99c-0.18 0.82 -0.06 0.68 0.71 0.90c0.35 0.10 0.80 -0.08 1.13 0.25c0.25 0.25 0.30 0.57 0.52 0.81c0.31 0.34 0.76 0.44 1.10 0.78c0.34 0.34 0.54 0.55 0.79 1.04l0.35 0.44l0.00 0.00l1.62 1.48l2.23 1.53l0.64 1.19l0.00 0.00c0.43 0.22 0.50 1.38 1.22 0.42l0.31 -0.30c0.37 -0.35 0.61 -0.94 0.55 -1.47c-0.04 -0.32 -1.01 -0.79 -0.76 -0.99c0.24 -0.42 0.47 -0.36 0.68 -0.94c0.14 -0.39 0.42 -0.19 0.73 -0.21c0.40 -0.03 1.12 -1.11 1.16 -1.47c0.05 -0.52 -0.21 -0.63 -0.26 -1.07l0.00 0.00c-0.23 -0.19 -0.57 -0.46 -0.77 -0.66c-0.16 -0.16 -0.36 -0.31 -0.55 -0.43c-0.47 -0.29 -1.09 -0.32 -1.63 -0.50c-0.35 -0.11 -0.91 -0.38 -1.26 -0.29c-0.39 -0.17 -0.82 -0.19 -1.16 -0.49c-0.19 -0.17 -0.50 -0.41 -0.74 -0.50c-0.95 -0.36 -0.84 -0.11 -1.70 0.16c-0.28 0.09 -0.80 -0.09 -1.19 0.00c-0.58 0.13 -1.20 0.44 -1.79 0.62c-1.09 0.34 -1.05 -0.20 -1.91 -0.29l0.00 0.00z\"\n          },\n          8: {\n            name: \"B\\xECnh D\\u01B0\\u01A1ng\",\n            path: \"m91.88 239.48l0.39 -0.40c0.24 0.15 0.47 0.16 0.71 0.31c0.39 0.25 0.17 0.39 0.26 0.64c0.14 0.00 0.12 0.54 0.29 0.69c0.22 0.21 0.29 0.28 0.61 0.23c0.65 -0.12 0.37 0.35 0.52 0.62c0.05 0.09 0.23 0.04 0.31 0.20c0.10 0.22 0.03 0.20 0.24 0.33c0.44 0.14 0.08 0.82 0.64 1.00c0.42 0.14 0.27 0.52 0.49 0.82c0.22 0.30 0.41 -0.40 0.66 -0.08c0.15 0.19 0.21 0.47 0.44 0.16c0.24 -0.31 0.38 0.10 0.65 -0.03c0.20 -0.09 0.36 -0.34 0.55 -0.38l0.00 0.00c-0.06 -0.20 -0.92 -0.52 -1.16 -0.87c-0.24 -0.35 0.38 -0.15 0.36 -0.42c-0.03 -0.34 -0.17 -0.34 -0.08 -0.72c0.37 -0.12 0.22 -0.33 0.27 -0.62c0.17 -0.06 0.28 -0.32 0.50 -0.10c0.23 0.24 0.93 0.74 1.29 0.54c0.37 -0.21 0.20 -0.48 0.60 -0.65c0.02 -0.01 0.38 -0.89 0.38 -0.99c0.00 -0.39 -0.02 -0.63 -0.17 -1.02c-0.03 -0.26 -1.02 -0.51 -0.74 -0.92c0.13 -0.19 0.21 -0.16 0.25 -0.41c0.04 -0.21 0.08 -0.35 0.18 -0.53l0.13 -0.50l0.00 0.00c-0.19 -0.19 0.36 -0.44 0.15 -0.73c-0.13 -0.18 -0.81 0.03 -0.96 0.14c-0.13 0.09 -0.38 0.51 -0.51 0.47c-0.28 -0.08 -0.14 -0.57 -0.20 -0.78c-0.12 -0.43 -0.69 -0.32 -1.07 -0.35c-0.23 -0.02 -0.18 -0.37 -0.29 -0.54c-0.26 -0.39 1.35 -1.53 0.14 -1.39c-0.46 0.05 -0.27 0.52 -0.60 0.78c-0.40 0.30 -0.56 0.68 -1.05 0.89c-0.22 0.09 -0.12 0.45 -0.18 0.64c-0.29 0.07 -0.67 -0.27 -0.92 -0.19c-0.20 -0.04 -0.28 -0.25 -0.38 -0.28c-0.08 -0.34 -0.78 0.43 -0.97 0.01c-0.03 -0.06 0.01 -0.85 0.04 -0.93c0.07 -0.16 0.48 -0.19 0.39 -0.41c-0.16 -0.38 -0.05 -0.53 -0.53 -0.38c-0.58 0.19 -0.60 -0.33 -1.12 -0.35c-0.31 -0.01 -0.56 -0.01 -0.85 0.11l0.00 0.00l-0.36 0.47c-0.37 0.31 -0.66 0.27 -0.73 0.87c-0.05 0.36 -0.19 0.68 -0.24 1.03c-0.05 0.28 0.03 0.43 -0.06 0.72c-0.14 0.45 0.25 0.49 0.14 0.96c-0.10 0.41 0.61 0.34 0.61 0.79c0.00 0.20 -0.01 0.42 0.14 0.56c0.15 0.13 0.61 0.15 0.63 0.40c0.01 0.10 0.01 0.21 0.04 0.32c0.03 0.10 0.14 0.19 0.15 0.26l0.00 0.00z\"\n          },\n          9: {\n            name: \"B\\xECnh \\u0110\\u1ECBnh\",\n            path: \"m129.54 178.81c0.12 0.30 -0.10 0.49 0.01 0.76c0.05 0.13 0.38 1.06 -0.02 0.91c-0.14 -0.06 -0.28 -0.21 -0.34 0.00c-0.07 0.26 0.05 0.41 0.08 0.66c0.05 0.21 0.26 0.40 0.28 0.62c0.05 0.75 0.47 1.25 0.51 1.99c0.03 0.49 0.34 0.74 0.41 1.16c0.04 0.28 -0.20 0.35 -0.15 0.73c0.19 0.44 0.45 0.76 0.69 1.15c0.21 0.34 0.23 0.44 0.57 0.66c0.31 0.21 0.29 0.88 0.29 1.24c0.00 0.25 -0.04 0.38 -0.16 0.59c-0.12 0.21 -0.09 0.42 -0.13 0.64c0.18 0.34 0.40 0.77 0.69 1.06c0.29 0.29 0.17 0.59 0.36 0.85c0.36 0.48 0.51 0.70 0.54 1.37c0.02 0.44 -0.31 0.59 -0.24 1.12c0.09 0.42 0.19 0.86 0.40 1.24c0.09 0.15 0.22 0.57 0.10 0.73l0.00 0.00c0.55 0.85 1.05 0.08 1.74 0.69c0.39 0.34 1.10 -0.02 1.45 -0.27c0.27 -0.19 0.35 -0.57 0.80 -0.57c0.86 0.00 0.38 -0.83 0.66 -1.18c0.18 -0.22 0.59 -0.03 0.63 -0.41c0.05 -0.44 0.40 -0.47 0.46 -0.66c0.36 0.00 0.61 0.14 0.86 0.39l0.00 0.00c0.16 -0.31 -0.33 -1.54 0.23 -1.54c0.06 0.25 1.00 0.64 0.95 0.14c-0.03 -0.31 -0.38 -0.53 -0.41 -0.92c-0.04 -0.60 0.10 -1.01 -0.14 -1.55c-0.23 -0.53 -0.67 -0.48 -0.35 -1.34c0.07 -0.69 -0.03 -1.09 -0.48 -1.60c-0.59 -0.67 -0.25 -0.76 0.11 -1.23c-0.20 -0.27 -0.63 -0.63 -0.76 -0.93c-0.32 -0.73 0.15 -1.31 -0.41 -2.05c-0.21 -0.28 -0.55 -0.64 -0.69 -0.93c-0.19 -0.39 0.15 -1.04 0.11 -1.53c-0.25 -0.43 -1.12 -1.99 -1.02 -2.39c0.09 -0.02 0.13 -0.13 0.12 -0.28l0.00 0.00l-0.51 -0.36c0.10 -0.23 -0.21 -0.96 -0.43 -1.06l-1.40 -0.61c-0.41 -0.18 -2.98 0.46 -3.04 0.68c-0.27 1.01 0.39 1.07 -0.89 1.03c-0.49 -0.02 -0.48 0.15 -0.85 0.40l-0.61 0.58l0.00 0.00z\"\n          },\n          10: {\n            name: \"B\\xECnh Ph\\u01B0\\u1EDBc\",\n            path: \"m100.45 236.40c0.81 0.07 2.37 -1.43 2.45 -2.22c0.02 -0.21 -0.28 -0.41 0.06 -0.57c0.44 -0.20 0.48 -0.62 1.02 -0.73l1.74 -0.34l1.55 -0.24l0.00 0.00c-0.06 -0.25 -0.46 -0.36 -0.54 -0.58c-0.14 -0.39 0.12 -0.67 -0.26 -0.98c-0.28 -0.23 -0.43 -0.41 -0.20 -0.78c0.18 -0.28 0.10 -0.62 0.28 -0.90c0.26 -0.40 0.68 -0.28 0.99 -0.54l0.66 -0.14l0.00 0.00c0.09 -0.74 0.72 -0.77 0.79 -1.35c0.04 -0.36 -0.62 -1.27 -0.95 -1.49c-0.52 -0.35 -0.59 -0.64 -0.87 -1.15c-0.34 -0.61 -0.76 -0.45 -1.33 -0.70c-0.34 -0.15 -0.16 -0.62 -0.30 -0.80c0.27 -0.36 -0.12 -0.73 -0.12 -1.00l-0.33 -2.88l0.00 0.00c-0.26 0.09 -0.54 0.17 -0.84 0.25c-0.18 0.00 -0.91 1.21 -0.98 1.44c-0.01 0.04 -1.30 0.99 -1.25 1.19c-0.79 0.11 -2.27 2.00 -3.42 0.97c-1.04 -0.94 -1.53 1.95 -2.73 1.91l-2.38 -0.08c-1.64 -0.06 -2.78 -0.74 -1.64 1.31c0.26 0.47 -0.13 1.15 -0.26 1.73c-0.98 0.24 0.59 1.83 0.25 2.14l0.00 0.00l0.40 0.54c0.03 0.17 -0.00 0.31 0.14 0.44c0.48 0.44 0.45 1.06 -0.21 1.26c-0.46 0.14 -0.58 0.55 -0.58 1.00l0.00 0.00c0.28 -0.13 0.54 -0.13 0.85 -0.11c0.52 0.02 0.54 0.54 1.12 0.35c0.48 -0.16 0.37 -0.01 0.53 0.38c0.09 0.22 -0.32 0.25 -0.39 0.41c-0.03 0.07 -0.07 0.86 -0.04 0.92c0.19 0.43 0.88 -0.34 0.97 -0.01c0.10 0.03 0.18 0.24 0.38 0.28c0.25 -0.08 0.63 0.26 0.92 0.19c0.06 -0.19 -0.04 -0.54 0.18 -0.64c0.49 -0.21 0.65 -0.58 1.05 -0.89c0.33 -0.25 0.14 -0.72 0.60 -0.78c1.21 -0.14 -0.40 1.00 -0.14 1.39c0.11 0.16 0.05 0.52 0.29 0.54c0.39 0.03 0.95 -0.08 1.07 0.35c0.06 0.21 -0.09 0.70 0.20 0.78c0.13 0.04 0.38 -0.39 0.51 -0.47c0.15 -0.10 0.83 -0.32 0.96 -0.14c0.21 0.29 -0.34 0.53 -0.15 0.73l0.00 0.00z\"\n          },\n          11: {\n            name: \"B\\xECnh Thu\\u1EADn\",\n            path: \"m134.83 250.43c-0.12 -0.18 -0.22 -0.36 -0.19 -0.59c0.04 -0.38 0.51 0.20 0.56 0.30c0.06 0.10 0.16 0.27 0.17 0.38c0.01 0.16 -0.33 0.09 -0.41 0.06l-0.13 -0.14zm-24.52 -4.54l0.89 -0.58c0.50 -0.45 0.01 -0.80 -0.01 -1.28c-0.04 -0.86 -0.09 -1.90 -0.97 -2.29l-1.10 -0.48l-0.41 -0.16c-0.30 -0.12 0.06 -0.20 0.09 -0.35c0.11 -0.04 0.09 -0.18 0.13 -0.28c0.06 -0.17 0.36 -0.20 0.36 -0.42c0.00 -0.16 -0.09 -0.28 -0.18 -0.40c-0.16 -0.22 0.26 -0.30 0.32 -0.55c0.03 -0.12 0.01 -0.23 0.07 -0.35c0.09 -0.20 0.26 -0.34 0.35 -0.54c0.06 -0.21 0.09 -0.38 0.30 -0.49c0.25 -0.12 0.44 -0.36 0.38 -0.66c-0.07 -0.36 -0.26 -0.44 0.07 -0.76l0.21 -0.67l0.00 0.00c0.49 -0.30 0.32 -0.84 0.89 -0.13c0.18 0.22 0.83 0.34 1.13 0.54c0.83 0.56 1.00 -0.54 1.69 -0.69c0.66 -0.13 1.56 -0.12 2.23 -0.04c0.66 0.19 1.93 0.36 2.43 0.83c0.41 0.39 0.24 0.95 0.35 1.40c0.11 0.47 0.61 -0.29 0.80 -0.42c0.71 -0.46 1.70 -0.62 2.26 -1.19c0.36 -0.36 1.23 -1.13 1.40 -1.58c-0.35 -0.58 -0.93 -0.54 -0.49 -1.42c0.45 -0.24 1.05 -0.78 1.45 -0.17c0.21 0.32 0.66 -0.26 1.08 -0.10c0.31 0.12 0.80 -0.15 1.14 -0.14c0.68 0.02 1.45 0.70 1.45 -0.47l0.00 0.00l1.19 0.05c0.35 0.32 0.25 1.48 0.97 1.36c1.59 -0.26 0.53 0.87 1.63 1.42c0.41 0.20 1.55 0.54 1.32 1.11l0.00 0.00c-0.20 -0.05 -0.40 0.00 -0.62 0.16l-0.64 0.13c-0.26 0.05 -0.29 0.39 -0.62 0.39c-0.03 0.10 -0.16 0.27 -0.05 0.42c-0.45 0.59 -0.30 0.68 -0.49 1.36c-0.11 0.40 -1.12 -0.23 -1.23 0.11c-0.06 0.00 -0.02 0.00 -0.13 0.06c-0.33 0.00 -0.84 0.53 -0.97 0.02c-0.23 0.00 -1.57 1.24 -1.69 1.60c-0.34 1.02 -0.71 1.23 -1.75 1.06c-0.35 -0.06 -0.29 0.18 -0.58 0.32c-0.67 0.34 0.08 1.31 -0.88 0.94c-0.43 -0.17 -0.32 0.64 -0.43 0.75c-0.14 0.14 -0.19 -0.07 -0.23 -0.19c-0.19 -0.66 -2.59 -0.30 -3.05 0.02c-0.79 0.55 -0.64 1.16 -1.12 1.83c-0.83 0.83 0.37 2.96 -1.92 2.03c-1.74 -0.71 -2.33 1.29 -3.88 1.42c-0.33 0.03 -0.34 0.58 -0.75 0.61c-0.43 0.03 -0.80 0.22 -1.11 0.47l0.00 0.00c0.00 -0.44 -0.13 -0.98 -0.35 -1.36c-0.25 -0.43 -0.26 -0.77 -0.40 -1.22c-0.07 -0.24 -0.34 -0.45 -0.54 -0.60l-0.01 -0.49l0.00 0.00z\"\n          },\n          12: {\n            name: \"C\\xe0 Mau\",\n            path: \"m63.85 267.31l1.19 0.88l0.51 -1.23l0.45 0.51l0.24 -0.24l0.57 0.16l0.30 -0.31l3.80 2.39l1.22 0.67l0.00 0.00c-0.22 0.29 -0.55 0.40 -0.68 0.75c-0.24 0.68 0.94 0.86 0.49 1.36c-0.43 0.48 -1.30 0.72 -0.61 1.41l0.01 1.17c0.00 0.47 0.22 0.37 0.56 0.45c0.50 0.13 0.44 0.70 1.16 0.53c0.50 -0.12 1.08 0.28 1.32 0.69l0.00 0.00c-0.25 0.36 -0.49 0.80 -0.74 1.38c-1.06 2.39 -1.05 2.21 -3.15 3.45c-1.13 0.67 -1.53 1.82 -2.76 2.54c-1.40 0.82 -3.61 0.80 -4.92 0.32c-0.78 -0.28 -1.44 -0.86 -0.26 -0.86c0.01 -0.03 0.04 -0.04 0.05 -0.07c1.30 0.00 0.20 -1.66 0.91 -1.37c0.10 0.04 1.07 -0.33 1.29 -0.81c0.30 -0.69 -0.56 -0.31 -1.11 -0.31c-1.24 0.00 0.06 -5.60 -0.17 -6.76c0.00 -1.28 0.32 -2.50 0.32 -3.81c0.00 -0.64 -0.09 -2.02 0.02 -2.90l0.00 0.00z\"\n          },\n          13: {\n            name: \"Cao B\\u1EB1ng\",\n            path: \"m93.89 35.08c-0.22 -0.74 0.22 -0.48 0.29 -1.26c0.04 -0.44 0.24 -0.49 0.35 -0.95l0.21 -0.99c0.24 0.00 2.25 1.14 1.76 -0.21c-0.13 -0.36 0.23 -0.62 0.39 -0.93c0.15 -0.17 0.17 -0.42 0.32 -0.55c0.09 -0.08 0.39 -0.14 0.41 -0.27c0.03 -0.29 -0.17 -0.53 -0.02 -0.90c0.11 -0.28 1.53 -1.15 0.51 -1.23c-0.90 -0.07 -0.53 -0.05 -1.02 -0.55c-0.16 -0.16 -0.62 -0.01 -0.66 -0.35c-0.06 -0.49 -0.01 -0.31 -0.46 -0.42c-0.32 -0.07 -0.63 -0.10 -0.74 0.32c-0.41 0.00 -0.45 -0.51 -0.61 -0.82c-0.29 -0.59 -0.80 0.09 -1.04 -0.25c-0.76 -1.09 -0.57 0.56 -1.43 0.41c-0.23 0.03 -0.94 0.27 -1.00 0.50c-0.36 0.00 -0.70 -0.23 -0.91 0.14c-0.25 0.45 -0.49 0.12 -0.82 -0.01c-0.04 -0.02 -0.41 0.14 -0.56 0.14c-0.43 0.00 -0.38 -0.53 -0.36 -0.80c0.02 -0.25 -0.20 -0.37 -0.26 -0.60c-0.24 -0.17 -0.34 -0.55 -0.63 -0.69c-0.24 -0.12 -0.49 0.06 -0.72 -0.07c-0.55 -0.34 -0.64 0.16 -1.23 -0.20c-0.38 -0.23 -0.53 0.24 -0.95 0.10c-0.86 -0.29 -0.41 0.57 -0.62 0.74c-0.21 0.17 -0.41 0.01 -0.67 0.01c-0.09 0.00 -0.33 0.18 -0.36 0.17c-0.22 0.33 -0.38 -0.30 -0.61 -0.13c-0.29 0.22 -0.22 0.43 -0.66 0.43c-0.14 -0.57 -1.02 -1.18 -1.30 -1.59c-0.18 -0.26 -1.46 -1.06 -1.72 -0.99c-0.59 0.17 -0.92 -0.75 -1.22 -0.41c-0.12 0.14 -0.52 0.02 -0.64 0.06c-0.06 0.02 -0.05 0.16 -0.15 -0.01c-0.07 -0.13 -0.15 -0.38 -0.20 -0.62l0.00 0.00l-0.69 0.34c-0.01 0.32 -0.53 1.49 -0.82 1.67c-0.35 0.22 -2.03 0.39 -1.97 0.70c0.15 0.70 -1.05 0.65 -1.05 1.49c-0.80 0.27 -0.29 0.64 0.23 0.81c0.00 0.10 1.47 1.37 1.67 1.48c1.06 0.56 1.31 0.73 1.31 1.97l-0.01 0.51l0.00 0.00l0.73 0.08l0.00 0.00c0.37 -0.25 0.37 -0.55 0.91 -0.58c0.28 -0.02 0.21 -0.08 0.30 -0.31c0.03 -0.09 0.32 -0.55 0.39 -0.26l0.02 0.00c0.03 0.12 0.75 -0.44 0.98 -0.47c0.32 -0.04 0.55 -0.06 0.87 -0.18c0.70 -0.25 0.44 0.37 0.61 0.72c0.10 0.21 0.03 0.40 -0.13 0.56c-0.10 0.10 -0.23 0.17 -0.35 0.26c-0.04 0.03 -0.19 0.21 -0.11 0.24c0.00 0.03 0.01 0.05 0.02 0.07c0.39 0.43 0.22 0.37 0.37 0.82c0.49 0.00 0.16 0.53 0.49 0.76c0.43 0.31 0.45 0.31 0.95 0.37c0.21 0.03 0.30 0.25 0.46 0.33c0.97 0.49 0.98 -0.37 1.76 -0.37c0.71 0.00 1.02 -0.91 1.76 -0.79c0.65 0.11 0.76 1.37 0.64 1.84c-0.07 0.28 -0.31 1.01 -0.01 1.23c0.39 0.28 0.79 -0.18 1.14 -0.06c0.00 0.09 0.22 0.17 0.29 0.23l0.00 0.00l0.21 -0.62c0.06 -0.08 0.36 -0.39 0.37 -0.43c0.12 0.06 0.44 -0.39 0.66 -0.07c0.34 0.50 0.76 0.49 1.26 0.74c0.33 0.17 0.17 0.69 0.57 0.90c0.21 0.10 0.58 -0.11 0.85 -0.08c0.65 0.08 0.62 0.47 1.12 -0.18c0.41 -0.53 0.94 -0.61 1.49 -0.94l0.00 0.00z\"\n          },\n          14: {\n            name: \"C\\u1EA7n Th\\u01A1\",\n            path: \"m78.85 256.88l1.22 0.87c0.16 0.18 0.42 0.34 0.62 0.48c0.18 0.13 0.48 0.50 0.55 0.68c0.05 0.14 0.24 0.63 0.39 0.67l0.00 0.00l-0.43 0.37c-0.54 0.11 -0.63 0.04 -1.11 -0.07c-0.52 -0.12 -0.62 0.29 -1.07 0.36c-0.19 0.03 -0.46 -0.07 -0.35 -0.31c-0.48 -0.16 -0.34 0.24 -0.75 0.24c-0.17 0.00 -0.51 -0.49 -0.66 -0.63c-0.36 -0.36 -0.75 1.01 -1.01 1.17l0.00 0.00l-3.04 -2.90l-0.17 -0.54l-0.49 -0.53l-0.35 0.14l-1.41 -1.18l0.00 0.00l0.57 -0.74c0.38 0.04 0.38 0.07 0.64 -0.26c0.25 -0.31 0.38 -0.03 0.51 0.01c-0.30 0.59 1.56 0.12 1.80 0.00c0.17 -0.08 -0.02 -0.34 0.04 -0.48c0.09 -0.24 0.38 -0.07 0.58 -0.14c0.12 -0.04 0.44 -0.34 0.57 -0.48l0.15 -0.14l0.00 0.00l1.35 1.24c0.21 0.18 0.35 0.40 0.51 0.62c0.21 0.29 0.30 0.68 0.55 0.93c0.19 0.19 0.49 0.55 0.76 0.62l0.00 0.00z\"\n          },\n          15: {\n            name: \"\\u0110\\xE0 N\\u1EB5ng\",\n            path: \"m123.56 153.34c-0.65 -0.94 -1.17 -2.08 0.04 -2.22c0.68 -0.08 0.84 -0.75 0.51 -0.53c-0.49 0.34 -0.77 -0.54 -1.36 -0.32c-0.29 0.10 -0.25 0.88 -0.49 1.12c-0.50 0.51 -1.93 -0.95 -1.08 -1.25c0.64 -0.23 0.99 -1.15 0.32 -0.97c-0.20 0.06 -0.35 0.01 -0.47 -0.07l0.00 0.00c-0.43 0.16 -1.51 0.48 -1.94 0.34c-0.41 -0.13 -0.89 -0.52 -1.27 -0.33c-0.34 0.17 -0.28 0.44 -0.74 0.05c-0.36 -0.31 -0.75 -0.00 -0.81 0.42c-0.03 0.20 -0.48 1.14 -0.44 1.25c-0.12 0.12 -0.25 0.25 -0.33 0.39c-0.10 0.19 -0.00 0.40 -0.10 0.56l0.00 0.00l0.75 -0.02c0.87 0.73 0.82 -0.14 1.53 -0.14l0.01 0.01c0.00 0.41 0.21 0.55 0.32 0.91c0.20 0.66 -0.50 0.81 0.14 1.60c0.15 0.19 0.49 -0.04 0.69 -0.08c0.33 -0.06 0.47 0.06 0.77 0.12c0.23 0.05 0.37 -0.17 0.58 -0.20c0.19 -0.03 0.30 0.11 0.46 0.11c0.17 0.00 0.21 -0.24 0.36 -0.30c0.31 -0.12 0.24 0.35 0.55 -0.16c0.34 -0.55 0.46 0.70 0.84 -0.07c0.19 -0.39 0.81 -0.09 1.17 -0.21l0.00 0.00z\"\n          },\n          16: {\n            name: \"\\u0110\\u1EAFk L\\u1EAFk\",\n            path: \"m130.42 218.48c0.11 -0.60 -0.27 -1.71 0.07 -2.14c0.10 -0.13 0.23 -0.64 0.50 -0.54c0.58 0.22 0.58 -0.88 1.26 -0.19c0.25 0.25 0.83 0.41 1.16 0.50c0.77 0.21 0.26 -0.47 0.14 -0.68c-0.07 -0.12 0.21 -1.17 0.26 -1.37c0.14 -0.60 0.61 -0.47 1.18 -0.58c0.14 0.00 0.43 0.01 0.47 -0.14c0.04 -0.13 0.01 -0.28 -0.05 -0.41c-0.06 -0.14 0.16 -0.38 0.18 -0.54c0.05 -0.27 -0.11 -0.37 0.11 -0.64l0.14 -0.21l0.00 0.00c-0.31 -0.52 0.13 -1.10 -0.30 -1.72c-0.39 -0.56 -1.71 0.25 -2.00 -0.48c-0.34 -0.82 -0.32 -0.51 -1.06 -0.66c-0.10 -0.42 -0.64 -0.87 -0.83 -1.25c-0.27 -0.54 -0.96 0.07 -0.80 -0.49l-0.55 -0.64l0.00 0.00c-0.80 0.00 -1.18 -0.61 -1.82 -0.56c-1.46 0.11 -0.52 -0.75 -1.28 -1.30c-0.90 -0.65 -0.85 -2.47 -2.04 -2.77c0.00 -2.01 -2.10 -1.77 -3.53 -2.33c-0.63 -0.21 -1.17 -0.40 -1.84 -0.18c-0.56 0.18 -1.64 0.67 -2.15 0.33c-0.28 -0.18 -1.18 -0.21 -1.56 -0.29c-0.76 -0.15 -1.26 0.67 -1.92 0.67c-0.27 0.00 -0.43 -0.34 -0.69 -0.25c-0.42 0.14 -0.43 0.35 -0.74 0.62l-0.89 0.62l0.00 0.00l-1.40 3.68c-0.17 0.34 -0.43 0.77 -0.45 1.13c-0.01 0.16 0.07 0.83 -0.01 0.94c0.09 0.12 -0.64 0.89 0.05 1.12c0.00 0.59 -0.38 0.68 0.30 1.22c0.30 0.24 0.49 0.79 0.54 1.25l0.00 0.00l1.88 -0.04c1.04 0.20 1.67 0.41 2.65 0.21c0.08 -0.30 1.43 -0.69 1.01 0.07c-0.27 0.49 0.22 0.90 0.68 1.05c0.00 0.52 -0.13 0.62 0.04 1.12c0.08 0.24 0.13 0.69 0.20 0.98c0.15 0.57 -0.86 1.00 -0.33 1.30c0.24 0.14 0.61 -0.08 0.88 0.07c0.29 0.16 0.36 0.33 0.57 0.55c0.64 0.93 -0.35 0.77 -0.79 1.12c-0.65 0.53 -0.03 0.87 0.10 1.40c0.27 1.14 1.63 0.51 2.12 1.31c0.20 0.33 0.25 0.63 0.50 0.92c0.12 0.14 0.55 0.68 0.39 0.90l0.00 0.00c0.34 -0.07 0.60 -0.42 0.98 -0.23c0.29 0.14 0.84 0.49 1.17 0.38c0.30 -0.09 0.76 -1.19 1.07 -0.95c0.29 -0.21 0.69 -0.45 0.98 -0.67c0.60 0.44 0.85 -0.01 1.35 -0.29c0.18 -0.10 0.45 -0.58 0.63 -0.56c0.28 0.03 0.33 0.64 0.79 0.36c0.54 -0.33 0.86 0.19 1.35 0.04c0.43 -0.13 0.97 -0.51 1.32 -0.78l0.00 0.00z\"\n          },\n          17: {\n            name: \"\\u0110\\u1EAFk N\\xF4ng\",\n            path: \"m105.08 219.01l0.33 2.88c0.00 0.27 0.39 0.64 0.12 1.00c0.14 0.18 -0.04 0.65 0.30 0.80c0.57 0.25 1.00 0.09 1.33 0.70c0.28 0.51 0.35 0.80 0.87 1.15c0.33 0.22 0.99 1.14 0.95 1.49c-0.07 0.58 -0.70 0.61 -0.79 1.35l0.00 0.00c0.19 -0.01 0.28 0.14 0.49 0.14c0.16 0.00 0.21 -0.14 0.31 -0.14c0.01 -0.02 0.46 -0.03 0.62 -0.39c0.21 -0.48 1.10 0.13 1.42 -0.27c0.42 -0.52 0.99 -0.64 1.39 -1.07c0.24 -0.26 1.36 -1.54 1.57 -0.76c0.32 1.15 0.83 0.98 1.94 0.56c0.24 0.00 0.89 -0.11 1.04 0.13c0.12 0.19 -0.06 0.59 -0.01 0.84c0.08 0.35 0.45 0.17 0.62 0.04c0.27 -0.22 0.46 0.54 1.10 0.20c0.53 -0.28 1.61 -0.84 1.78 -1.48c0.04 -0.15 -0.62 -1.13 -0.77 -1.21c-0.14 -0.07 -0.45 -0.78 -0.58 -0.99c-0.24 -0.40 -0.01 -0.37 -0.44 -0.62c-0.92 -0.55 -0.06 -0.90 0.12 -1.37c0.30 -0.77 1.08 0.08 1.53 -0.19l0.49 -0.61l0.00 0.00c0.16 -0.22 -0.27 -0.76 -0.39 -0.90c-0.25 -0.29 -0.30 -0.59 -0.50 -0.92c-0.49 -0.80 -1.85 -0.17 -2.12 -1.31c-0.13 -0.53 -0.74 -0.87 -0.10 -1.40c0.43 -0.35 1.43 -0.19 0.79 -1.12c-0.22 -0.22 -0.28 -0.39 -0.57 -0.55c-0.27 -0.15 -0.64 0.06 -0.88 -0.07c-0.53 -0.30 0.48 -0.73 0.33 -1.30c-0.07 -0.29 -0.12 -0.74 -0.20 -0.98c-0.17 -0.50 -0.04 -0.60 -0.04 -1.12c-0.46 -0.15 -0.95 -0.56 -0.68 -1.05c0.42 -0.76 -0.94 -0.38 -1.01 -0.07c-0.97 0.20 -1.60 -0.02 -2.65 -0.21l-1.88 0.04l0.00 0.00c0.01 0.07 0.01 0.13 0.01 0.19c0.00 1.21 0.52 1.88 0.52 3.03c0.13 0.04 0.01 0.52 -0.04 0.61c0.16 0.43 -0.49 0.50 -0.24 0.95c0.37 0.67 0.07 0.11 -0.02 0.70c-0.04 0.22 0.17 0.34 0.01 0.56c-0.11 0.16 -0.49 0.53 -0.49 0.69c0.00 0.36 0.30 0.44 0.04 0.92c-0.20 0.37 -1.03 0.61 -1.10 0.87c-0.23 0.00 -1.03 2.32 -1.60 0.60c-0.30 -0.90 -1.28 -1.27 -2.09 -0.73c-0.28 0.18 -0.55 0.30 -0.83 0.40l0.00 0.00z\"\n          },\n          18: {\n            name: \"\\u0110\\u1ED3ng Nai\",\n            path: \"m101.49 248.64c0.17 -0.59 -0.08 -0.44 0.57 -0.69c0.77 -0.30 1.54 0.20 1.76 -0.93c0.04 -0.20 -0.02 -0.79 0.28 -0.79c0.29 0.00 0.38 -0.33 0.64 -0.33c0.24 0.37 1.28 0.27 1.72 0.25c0.73 -0.04 -0.13 1.70 0.80 1.37c0.29 -0.09 0.39 -0.60 0.55 -0.86c0.11 -0.17 0.41 -0.58 0.57 -0.68c0.20 -0.12 0.41 -0.22 0.57 -0.41c0.59 -0.75 0.72 0.19 1.37 0.32l0.00 0.00l0.89 -0.58c0.50 -0.45 0.01 -0.80 -0.01 -1.28c-0.04 -0.86 -0.09 -1.90 -0.97 -2.29l-1.10 -0.48l-0.41 -0.16c-0.30 -0.12 0.06 -0.20 0.09 -0.35c0.11 -0.04 0.09 -0.18 0.13 -0.28c0.06 -0.17 0.36 -0.20 0.36 -0.42c0.00 -0.16 -0.09 -0.28 -0.18 -0.40c-0.16 -0.22 0.26 -0.30 0.32 -0.55c0.03 -0.12 0.01 -0.23 0.07 -0.35c0.09 -0.20 0.26 -0.34 0.35 -0.54c0.06 -0.21 0.09 -0.38 0.30 -0.49c0.25 -0.12 0.44 -0.36 0.38 -0.66c-0.07 -0.36 -0.26 -0.44 0.07 -0.76l0.21 -0.67l0.00 0.00c-0.18 -0.18 -0.34 -0.64 -0.62 -0.70c0.01 -0.01 -0.12 -0.21 -0.13 -0.30c-0.02 -0.14 -0.06 -0.25 -0.18 -0.33c-0.18 -0.12 -0.69 -0.04 -0.69 -0.23c0.00 -0.22 0.27 -0.26 0.30 -0.43c0.26 -0.41 0.05 -0.32 -0.18 -0.60c-0.20 -0.24 -0.49 -0.17 -0.67 -0.37c-0.14 -0.15 -0.26 -0.10 -0.45 -0.02c-0.23 0.10 -0.24 -0.40 -0.27 -0.56c-0.09 -0.63 -0.39 0.24 -0.64 0.20l0.00 0.00l-1.55 0.24l-1.74 0.34c-0.54 0.11 -0.58 0.52 -1.02 0.73c-0.34 0.16 -0.04 0.36 -0.06 0.57c-0.09 0.79 -1.65 2.29 -2.45 2.22l0.00 0.00l-0.13 0.50c-0.11 0.18 -0.15 0.32 -0.18 0.53c-0.04 0.24 -0.12 0.21 -0.25 0.41c-0.28 0.41 0.71 0.66 0.74 0.92c0.15 0.39 0.17 0.63 0.17 1.02c0.00 0.10 -0.36 0.98 -0.38 0.99c-0.40 0.17 -0.23 0.44 -0.60 0.65c-0.36 0.20 -1.05 -0.31 -1.29 -0.54c-0.22 -0.22 -0.33 0.04 -0.50 0.10c-0.06 0.29 0.09 0.50 -0.27 0.62c-0.09 0.37 0.05 0.38 0.08 0.72c0.02 0.28 -0.60 0.08 -0.36 0.42c0.24 0.35 1.10 0.67 1.16 0.87l0.00 0.00l0.33 0.84c0.08 0.15 0.72 1.24 0.30 1.34c-0.01 0.04 -0.31 -0.03 -0.41 0.05c-0.38 0.30 -0.29 -0.21 -0.62 0.00c-0.42 0.27 -1.18 0.84 -0.94 1.42c0.09 0.22 0.91 0.75 1.14 0.97c0.34 0.34 0.62 -0.21 1.02 -0.16c0.27 0.03 0.35 0.35 0.52 0.52c0.14 0.14 0.72 0.38 0.94 0.51c0.29 0.17 0.57 -0.21 0.57 -0.46l0.00 0.00z\"\n          },\n          19: {\n            name: \"\\u0110\\u1ED3ng Th\\xE1p\",\n            path: \"m70.52 243.60l0.22 0.71c0.10 0.23 0.38 0.21 0.42 0.48c0.03 0.24 0.20 0.15 0.38 0.23c0.38 0.17 -0.01 0.54 0.48 0.61c0.49 0.07 0.42 0.15 0.18 0.47c-0.48 0.64 0.60 0.31 0.82 0.38c0.30 0.09 -0.00 0.76 -0.02 0.95c0.25 0.54 0.14 1.51 0.85 1.74c0.48 0.15 0.59 0.46 1.19 0.48c0.71 0.03 0.92 -0.02 1.50 0.42c0.34 0.26 0.64 0.80 0.58 1.23c0.00 0.51 -0.43 0.18 -0.55 0.43c-0.08 0.17 -0.06 0.38 -0.25 0.50c-0.18 0.10 -0.21 0.15 -0.19 0.35c0.04 0.32 -0.11 0.26 -0.30 0.39c-0.20 0.14 -0.14 0.29 -0.14 0.51l0.00 0.00l1.35 1.24c0.21 0.18 0.35 0.40 0.51 0.62c0.21 0.29 0.30 0.68 0.55 0.93c0.19 0.19 0.49 0.55 0.76 0.62l0.00 0.00l0.82 -1.21c0.24 0.10 0.35 0.06 0.46 0.30c0.10 0.20 0.23 0.16 0.38 0.05c0.25 0.19 0.40 0.46 0.79 0.60c0.39 0.14 0.48 -0.03 0.74 -0.29c0.29 -0.29 0.95 -0.11 0.95 -0.68c0.00 -0.42 -0.81 -0.65 -0.60 -0.94l0.03 -0.30l0.00 0.00c-0.02 -0.05 -0.13 -0.15 -0.17 -0.19c-0.08 -0.06 -0.22 -0.10 -0.32 -0.14c-0.13 -0.06 -0.26 -0.14 -0.37 -0.22l-0.46 -0.43l0.10 -0.72l0.47 -0.12l0.25 -0.62l0.63 -0.66l0.68 -0.79l0.04 -0.66l0.00 0.00l-0.64 -0.13l-1.42 -1.89l-0.71 -0.16l-1.72 -1.59l-1.47 -1.52l0.28 -0.10l-0.39 -1.12l-1.08 -0.07l-0.28 -0.63l0.00 0.00c-0.38 -0.02 -0.82 -0.08 -0.81 -0.07c-0.92 0.00 -0.48 -0.27 -1.31 0.48c-0.26 0.23 -0.87 1.39 -1.22 1.09c-0.35 -0.31 -1.19 -0.45 -1.99 -0.55l0.00 0.00z\"\n          },\n          20: {\n            name: \"\\u0110i\\u1EC7n Bi\\xEAn\",\n            path: \"m20.46 32.79c-0.25 0.29 -0.40 0.61 -0.61 1.02c-0.11 0.22 -0.63 0.71 -0.57 0.85c0.06 0.15 0.39 0.61 0.15 0.58l-1.68 -0.20l-0.30 0.60l0.00 0.00l0.30 0.51c0.14 0.36 0.09 0.54 0.37 0.82c0.29 0.29 -0.06 0.49 0.41 0.81c0.31 0.21 0.28 0.53 0.62 0.79c0.26 -0.20 0.60 0.11 0.66 0.35c0.24 0.91 0.44 0.10 0.83 0.58c0.09 0.11 -0.02 0.48 0.23 0.48c0.29 0.00 0.33 0.04 0.56 0.10c0.00 0.40 0.10 0.55 0.38 0.76c0.33 -0.25 0.61 0.46 0.66 0.66c0.15 0.42 0.75 0.56 0.75 0.81c1.23 0.30 -0.71 1.67 1.49 1.85c0.82 0.07 1.00 1.51 1.43 2.09c-0.17 0.23 0.35 1.18 0.04 1.60c0.14 0.19 0.21 1.58 0.39 1.60c0.71 0.08 2.56 -0.52 2.56 -1.42c0.00 -0.53 -0.37 -1.94 0.35 -2.02c0.82 -0.09 -0.51 3.08 1.02 2.39c1.01 -0.45 0.53 0.41 1.13 0.41c0.63 0.00 0.14 0.82 0.35 1.36c-0.15 0.57 0.16 0.84 -0.37 1.27c-0.12 0.10 -0.79 0.72 -0.79 0.84c-0.02 0.01 -0.02 0.03 -0.02 0.06c-0.41 0.14 -0.75 1.01 -0.60 1.47l0.05 0.00c0.15 -0.46 1.01 -0.10 0.68 -0.01c-0.02 0.09 -0.48 0.77 -0.50 0.78c0.00 0.03 0.01 0.06 -0.01 0.08c0.53 0.71 -0.80 1.75 -1.19 1.95c-0.92 0.46 0.74 0.46 0.80 0.48c0.54 0.13 0.86 0.48 0.64 1.06l0.05 0.64c0.88 0.22 0.54 0.88 0.88 1.56c0.24 0.49 0.91 -0.04 1.38 0.91c0.51 1.04 0.95 1.98 1.60 2.65l0.00 0.00l1.35 -0.40c0.19 -0.07 0.25 -0.04 0.44 -0.04c0.19 0.00 0.16 -0.19 0.24 -0.21c-0.20 -0.79 -0.14 -0.18 0.15 -0.78c0.10 -0.20 -0.01 -0.61 -0.15 -0.78c-0.22 -0.25 0.23 -0.29 0.08 -0.62c-0.06 -0.14 -0.41 -0.79 -0.01 -0.66c0.31 0.11 -0.19 -0.91 0.71 -0.45c0.36 0.18 0.46 0.55 0.98 0.55c1.35 0.00 0.24 -0.68 0.19 -1.23c-0.03 -0.28 0.35 -0.50 0.52 -0.64c0.17 -0.14 0.20 -0.97 0.20 -1.21c0.18 -0.41 0.05 -2.26 -0.74 -1.67c-0.04 -0.03 -0.59 -0.22 -0.46 -0.42c0.04 -0.06 0.65 -0.54 0.42 -0.54c-0.03 -0.13 -0.58 -0.59 -0.70 -0.76c-0.49 -0.70 1.46 -0.25 1.75 -0.47c0.43 -0.32 -0.02 -0.77 0.01 -1.23c0.04 -0.53 0.37 -0.33 0.69 -0.33c0.20 0.00 0.90 -0.90 0.86 -1.04c-0.09 -0.33 0.34 -0.47 0.32 -0.79c-0.02 -0.39 -0.25 -0.62 0.20 -0.87c0.15 -0.19 0.03 -0.29 0.31 -0.29c0.11 0.00 0.33 -0.04 0.33 -0.17c-0.02 -0.01 -0.00 -0.00 -0.02 -0.01c0.00 -0.24 -0.57 -0.46 -0.57 -0.90c0.00 -0.29 -0.26 -0.68 -0.38 -0.95c-0.21 -0.47 -0.21 -1.04 -0.58 -1.46c-0.14 -0.16 -0.24 -0.36 -0.41 -0.53c-0.37 -0.37 -0.11 -0.48 -0.11 -0.86l0.01 -0.01l0.29 -0.53l0.00 0.00c-0.42 -0.19 -0.95 -0.46 -0.77 -1.02c0.22 -0.72 -0.32 -0.66 -0.64 -1.23c-0.19 -0.34 -0.27 -0.75 -0.48 -1.07c-0.16 -0.26 -1.13 -0.14 -1.28 0.10c-0.14 0.23 -0.21 0.51 -0.49 0.62c-0.08 0.31 -0.29 0.36 -0.09 0.76c0.10 0.21 0.23 0.54 -0.20 0.48c-0.52 -0.07 -1.01 -0.59 -1.56 -0.59c-0.40 0.00 -0.57 0.13 -0.91 -0.12c-0.51 -0.58 -0.44 -0.42 -0.64 0.32c-0.05 0.17 -0.94 0.14 -1.13 0.15c-0.34 0.02 -0.56 0.42 -0.79 0.42c-0.34 0.00 -0.59 -0.63 -0.69 -0.89c-0.26 -0.70 -0.81 -0.03 -1.35 0.02c-1.14 0.12 -0.89 -0.09 -1.67 -0.78c-0.86 -0.77 0.13 -0.98 -0.17 -1.80c-0.09 -0.25 -1.14 -0.92 -1.26 -0.66c-0.12 0.27 0.24 0.75 0.24 1.06c0.00 0.77 -0.87 0.19 -1.09 -0.09c-0.28 -0.35 -0.13 -1.43 -1.05 -1.18c-0.52 0.14 -0.47 0.42 -0.93 -0.17c-0.18 -0.23 -0.66 -1.02 -0.69 -1.31c-0.30 -0.37 -0.50 -0.64 -0.88 -0.92c-0.32 -0.24 -0.45 -0.47 -0.35 -0.87c0.23 -0.91 -0.74 -0.86 -0.89 -1.67l-0.29 -0.41l0.00 0.00z\"\n          },\n          21: {\n            name: \"Gia Lai\",\n            path: \"m130.31 206.29l0.75 -0.31c0.13 -0.01 0.66 -0.11 0.57 -0.33l0.14 -0.95c0.04 -0.24 0.11 -0.69 0.25 -0.88c0.26 -0.36 0.90 0.15 1.26 -0.62c0.13 -0.27 0.49 -1.87 0.35 -2.10c-0.09 -0.14 -0.61 -0.86 -0.71 -0.91c-0.78 -0.32 -0.49 -0.40 -0.49 -1.16c0.15 -0.21 0.08 -0.48 0.08 -0.73c0.00 -0.53 -0.47 -0.14 -0.81 -0.14c-0.32 0.00 -0.56 0.01 -0.69 -0.32c-0.27 -0.67 0.48 -0.74 0.54 -1.29c0.02 -0.23 0.17 -0.43 0.42 -0.43c0.13 0.00 0.26 0.01 0.39 0.01c0.18 0.00 0.29 0.11 0.44 0.13l0.60 0.05l0.00 0.00c0.12 -0.16 -0.01 -0.58 -0.10 -0.73c-0.21 -0.38 -0.31 -0.83 -0.40 -1.24c-0.06 -0.52 0.27 -0.68 0.24 -1.12c-0.03 -0.66 -0.18 -0.89 -0.54 -1.37c-0.19 -0.26 -0.07 -0.56 -0.36 -0.85c-0.29 -0.29 -0.50 -0.72 -0.69 -1.06c0.04 -0.22 0.01 -0.44 0.13 -0.64c0.12 -0.21 0.16 -0.35 0.16 -0.59c0.00 -0.37 0.03 -1.03 -0.29 -1.24c-0.34 -0.23 -0.35 -0.32 -0.57 -0.66c-0.24 -0.39 -0.50 -0.72 -0.69 -1.15c-0.05 -0.38 0.20 -0.46 0.15 -0.73c-0.07 -0.42 -0.38 -0.67 -0.41 -1.16c-0.04 -0.74 -0.46 -1.25 -0.51 -1.99c-0.02 -0.22 -0.23 -0.41 -0.28 -0.62c-0.04 -0.25 -0.16 -0.39 -0.08 -0.66c0.06 -0.21 0.19 -0.06 0.34 0.00c0.40 0.15 0.07 -0.78 0.02 -0.91c-0.10 -0.27 0.12 -0.47 -0.01 -0.76l0.00 0.00c-0.03 0.08 -0.35 0.13 -0.43 0.12c-0.16 -0.03 -0.21 -0.22 -0.26 -0.35c-0.14 -0.35 -0.41 -0.51 -0.79 -0.54l0.00 0.00l-0.39 0.31c-0.46 0.46 -0.74 0.76 -1.32 0.23c-0.22 -0.20 -1.30 -1.30 -1.46 -0.64c-0.11 0.45 0.17 0.63 0.32 0.98c0.21 0.46 -0.22 0.78 -0.55 1.04c-0.44 0.35 -0.61 1.23 -1.07 1.52c-0.46 0.19 -0.70 -0.04 -1.11 0.07c-0.42 0.11 -0.69 0.62 -1.16 0.56c-0.27 -0.04 -0.59 0.03 -0.83 0.16c-0.27 0.14 -0.54 0.65 -0.58 0.94c-0.11 0.69 -0.65 0.40 -0.78 0.81c-0.11 0.32 -0.21 0.21 -0.46 0.22c-0.13 0.01 -0.17 0.15 -0.29 0.19c-0.74 0.07 -0.88 -0.46 -1.45 -0.81c-0.62 -0.38 -0.94 0.78 -1.33 1.01c-0.34 0.20 -0.59 -0.09 -0.95 0.21c-0.27 0.22 -0.88 -0.14 -1.19 -0.21c-0.00 -0.01 -0.00 -0.01 -0.01 -0.01c-0.11 -0.42 0.01 -0.74 -0.18 -1.19c0.00 -0.79 0.47 -0.64 0.88 -1.10c0.19 -0.21 -0.42 -1.05 -0.52 -1.29c-0.11 -0.24 0.09 -0.87 -0.36 -0.84c-0.48 0.03 -0.79 0.40 -1.22 0.48c-0.39 0.08 -0.71 -0.23 -1.05 -0.23l-1.14 -0.08l0.00 0.00c-0.08 0.49 0.24 1.35 -0.56 1.12c-0.47 -0.13 -0.20 0.46 -0.60 0.57c-0.19 0.05 -0.60 0.97 -0.55 1.19c0.07 0.29 0.20 0.43 0.20 0.79c0.00 0.98 -0.53 1.29 -0.98 2.18c-0.20 0.57 -0.08 0.66 0.33 0.90c0.28 0.16 -0.06 0.67 -0.12 0.88c-0.26 1.00 0.63 0.79 1.22 0.79c0.58 0.00 0.22 0.70 0.37 1.00c0.07 0.15 0.32 0.26 0.44 0.42c-0.10 0.13 -0.54 0.76 -0.32 0.81c0.00 0.47 -0.24 1.28 0.21 1.50c0.66 0.33 1.18 0.70 1.36 1.44c0.09 0.40 0.15 1.18 0.39 1.50l0.82 1.75l0.02 3.04l-0.23 0.62l0.00 0.00l0.89 -0.62c0.30 -0.27 0.32 -0.48 0.74 -0.62c0.26 -0.09 0.42 0.25 0.69 0.25c0.66 0.00 1.16 -0.81 1.92 -0.67c0.38 0.07 1.28 0.10 1.56 0.29c0.50 0.33 1.58 -0.15 2.15 -0.33c0.67 -0.22 1.20 -0.03 1.84 0.18c1.43 0.55 3.53 0.32 3.53 2.33c1.19 0.29 1.14 2.12 2.04 2.77c0.75 0.55 -0.18 1.41 1.28 1.30c0.64 -0.05 1.03 0.56 1.82 0.56l0.00 0.00z\"\n          },\n          22: {\n            name: \"H\\xe0 Giang\",\n            path: \"m76.59 22.29l-0.69 0.34c-0.01 0.32 -0.53 1.49 -0.82 1.67c-0.35 0.22 -2.03 0.39 -1.97 0.70c0.15 0.70 -1.05 0.65 -1.05 1.49c-0.80 0.27 -0.29 0.64 0.23 0.81c0.00 0.10 1.47 1.37 1.67 1.48c1.06 0.56 1.31 0.73 1.31 1.97l-0.01 0.51l0.00 0.00c0.07 0.02 -0.16 0.26 -0.19 0.29c-0.11 0.08 -0.22 0.14 -0.33 0.20c-0.22 0.13 -0.45 0.12 -0.69 0.06c-0.56 -0.13 -0.82 -0.51 -1.24 -0.67c-0.38 -0.14 -0.52 0.51 -0.89 0.45c-0.49 -0.08 -0.56 -0.62 -1.10 -0.78c-0.34 -0.10 -1.49 -0.63 -1.70 -0.38c-0.16 0.18 0.27 0.88 0.21 1.19c-0.07 0.40 -0.55 0.49 -0.56 0.87l-0.02 1.35l-0.04 0.12c0.22 0.52 -0.35 0.76 -0.35 1.16c0.00 0.51 0.31 0.44 -0.26 0.58c-0.07 0.34 0.19 0.90 -0.37 0.78c-0.45 -0.10 0.04 0.68 -0.08 0.98c-0.02 -0.01 -0.11 0.18 -0.14 0.23c-0.06 0.09 -0.15 0.14 -0.26 0.14c-0.23 0.02 -0.44 -0.05 -0.57 -0.23c-0.25 -0.35 -0.38 -0.56 -0.85 -0.49c-0.38 0.06 -0.43 -0.31 -0.75 -0.31c-0.11 0.32 0.15 0.46 0.17 0.75c0.02 0.36 -0.17 0.36 -0.33 0.62c-0.16 0.25 0.97 1.12 -0.11 1.46c-0.49 0.15 -0.42 -0.50 -0.93 0.17l0.00 0.00c-0.23 0.00 -1.30 0.31 -1.36 0.25c-0.34 0.17 -0.44 -1.26 -0.45 -1.41c-0.04 -0.49 -0.84 -0.52 -1.20 -0.57c-0.34 -0.05 -0.41 -0.26 -0.66 -0.32c-0.34 -0.09 -0.73 0.55 -0.92 0.78l0.00 0.00l-0.45 -0.14c-0.04 -0.21 -0.32 -0.30 -0.07 -0.47c0.23 -0.15 0.39 -0.12 0.39 -0.47c0.00 -0.18 0.05 -0.16 0.13 -0.29c0.12 -0.19 0.01 -0.46 -0.19 -0.55c-0.53 -0.24 0.02 -0.20 -0.27 -0.49c-0.14 -0.14 -0.37 -0.25 -0.55 -0.32c-0.40 -0.23 -0.41 -0.32 -0.58 -0.68c-0.11 -0.22 -0.43 -0.16 -0.51 -0.42c-0.21 -0.69 0.37 -0.75 -0.41 -1.18c-0.35 -0.20 -0.07 -0.60 -0.07 -0.90c0.41 -0.14 1.20 -0.22 0.56 -0.80c-0.50 -0.45 -0.57 -0.54 -0.87 -1.11c-0.13 -0.24 -0.79 -0.08 -1.07 -0.33l0.14 -0.42l0.00 0.00c0.14 0.20 0.31 0.34 0.61 0.21c0.55 -0.25 3.31 -3.07 3.56 -2.98l0.00 0.02c0.12 0.04 0.23 1.03 0.66 0.44c0.33 -0.46 0.53 -0.10 0.82 0.12c0.21 -0.01 0.38 -0.10 0.58 -0.10c0.14 0.00 0.23 0.18 0.37 0.18c0.12 -0.37 0.61 -1.28 0.95 -1.49c0.41 -0.25 1.24 -0.58 1.24 -1.12c-0.22 -0.07 -0.20 -0.54 -0.20 -0.73c-0.06 -0.02 -0.14 -0.18 -0.27 -0.20c-0.10 -0.42 0.21 -0.81 0.01 -1.13c-0.20 -0.32 -0.19 -0.73 -0.10 -1.03c0.37 0.00 0.88 0.09 0.88 -0.39c0.00 -0.39 0.21 -0.90 0.66 -0.90c0.06 0.18 0.39 0.29 0.58 0.29c0.08 -0.24 -0.06 -0.52 0.21 -0.60c0.35 -0.10 0.44 0.30 0.74 -0.07c0.21 -0.11 0.82 -0.57 0.95 -0.75c0.42 -0.59 0.44 -0.20 0.75 -0.20c0.01 0.05 0.24 -0.03 0.31 0.00c0.62 0.28 0.62 -0.38 1.31 -0.32c0.40 0.03 0.93 -0.17 0.93 -0.58c0.00 -0.78 0.19 -0.35 0.58 -0.66c0.31 -0.24 0.68 -1.65 1.20 -0.55l0.63 1.34c0.26 0.55 0.70 -0.28 1.01 0.12c0.33 0.42 0.54 1.14 0.82 1.60c0.27 0.44 1.29 0.34 1.29 1.22c-0.03 0.11 -0.01 0.35 0.04 0.59l0.00 0.00z\"\n          },\n          23: {\n            name: \"H\\xe0 Nam\",\n            path: \"m81.79 72.24c0.11 0.09 0.25 0.22 0.33 0.33c0.14 0.19 0.21 0.31 0.41 0.46c0.14 0.10 0.37 0.17 0.55 0.17l0.01 0.01l0.00 0.00c0.09 -0.14 -0.09 -0.35 -0.04 -0.56c0.33 0.00 0.79 -1.08 0.88 -0.40c0.08 0.70 0.68 0.24 0.86 -0.14c0.13 -0.27 0.08 -0.73 0.46 -0.82c0.26 -0.06 0.34 0.26 0.62 0.26c0.33 0.00 0.18 -0.65 0.63 -0.68c0.24 -0.02 0.25 0.46 0.63 0.46l0.46 -0.08l0.00 0.00c0.00 -0.38 -0.08 -0.74 -0.20 -1.10c-0.13 -0.40 -0.67 -0.56 -0.76 -0.88c-0.10 -0.34 -0.14 -0.43 -0.48 -0.61l0.00 0.00c-0.42 0.10 -0.65 0.49 -1.02 0.08c-0.23 -0.25 -0.37 -0.97 -0.30 -1.33l-0.55 -0.37l0.00 0.00c0.00 0.13 -0.14 0.45 -0.21 0.57c-0.08 0.14 -0.50 0.54 -0.66 0.37c-0.10 -0.10 -0.07 -0.28 -0.18 -0.38c-0.13 -0.12 -0.47 0.14 -0.60 0.19c-0.17 0.17 -0.19 0.32 -0.42 0.38c-0.14 0.04 -0.43 -0.13 -0.56 -0.20c-0.63 -0.37 -0.36 0.31 -0.54 0.56c-0.21 0.29 -0.17 0.30 -0.25 0.63c-0.08 0.35 -0.20 0.57 -0.58 0.64l0.00 0.00l0.36 0.58c0.08 0.11 0.07 0.23 0.20 0.30c0.16 0.09 0.35 0.11 0.46 0.27c0.15 0.22 0.36 0.34 0.39 0.61c0.03 0.24 0.04 0.45 0.10 0.68l0.00 0.00z\"\n          },\n          24: {\n            name: \"H\\xE0 N\\u1ED9i\",\n            path: \"m80.28 69.80c0.38 -0.07 0.50 -0.29 0.58 -0.64c0.08 -0.33 0.04 -0.34 0.25 -0.63c0.18 -0.25 -0.09 -0.92 0.54 -0.56c0.13 0.08 0.42 0.24 0.56 0.20c0.23 -0.06 0.25 -0.22 0.42 -0.38c0.13 -0.05 0.47 -0.31 0.60 -0.19c0.11 0.10 0.08 0.27 0.18 0.38c0.17 0.17 0.58 -0.23 0.66 -0.37c0.07 -0.12 0.21 -0.44 0.21 -0.57l0.00 0.00l-0.54 -0.78c0.00 -0.17 -0.07 -0.34 -0.07 -0.49c-0.05 -0.02 -0.24 -0.27 -0.36 -0.32c-0.11 -0.05 -0.29 -0.01 -0.36 -0.11c-0.13 -0.19 -0.10 -1.02 0.15 -1.10c0.00 -0.37 -0.11 -0.40 -0.43 -0.53c-0.38 -0.15 0.11 -0.46 0.18 -0.60c0.10 -0.20 -0.23 -0.32 -0.23 -0.43c-0.13 -0.04 0.22 -0.38 0.24 -0.42c0.47 0.00 0.97 0.18 0.83 -0.50l0.67 -0.17l0.00 0.00l0.31 -0.76c-0.09 -0.23 -0.12 -0.49 -0.40 -0.58c-0.24 -0.07 -0.53 -0.02 -0.74 -0.10c-0.41 -0.16 -0.46 -0.77 -0.54 -1.12c-0.06 -0.25 0.05 -0.58 -0.11 -0.82c-0.07 -0.10 -0.20 -0.17 -0.17 -0.30c0.06 -0.24 -0.00 -0.25 -0.01 -0.48l0.45 -0.16l0.00 0.00c0.00 -0.18 -0.07 -0.34 -0.13 -0.50c-0.06 -0.17 0.03 -0.31 -0.09 -0.48c-0.09 -0.14 -0.25 -0.22 -0.33 -0.36l-0.38 -0.36l0.00 0.00l-0.01 0.01c-0.22 0.00 -0.21 0.01 -0.39 -0.11c-0.06 -0.04 -0.16 -0.20 -0.18 -0.27c-0.06 -0.27 0.05 -0.47 -0.25 -0.58c-0.08 -0.03 -0.38 0.03 -0.41 -0.05c-0.44 0.00 -0.37 0.16 -0.61 0.45l0.00 0.00l-0.33 0.72c-0.36 0.60 -1.13 0.94 -0.13 1.58c0.78 0.50 0.40 1.18 0.02 1.72c-0.19 0.28 -0.31 1.10 -0.63 0.45c-0.39 -0.77 -0.95 -0.24 -1.49 -0.64c-0.83 -0.63 -1.36 0.32 -2.17 -0.08c-0.39 -0.20 -0.72 -0.48 -0.95 -0.86c-0.38 -0.62 -0.24 -0.66 -0.18 -1.36l0.00 0.00l-0.75 -0.28c-0.24 -0.05 -0.62 -0.33 -0.72 0.09c-0.11 0.47 -0.09 1.30 -0.51 1.59c-0.22 0.15 -0.44 0.20 -0.55 0.47c-0.14 0.38 0.01 0.38 0.06 0.70c0.60 0.65 -0.33 1.23 -0.01 1.89l0.21 0.50l0.00 0.00l0.55 0.04c0.40 -0.08 0.63 -0.21 1.01 -0.14c0.32 0.06 0.70 0.03 1.01 0.11c0.25 0.07 0.70 0.48 0.90 0.66c0.33 0.30 -0.24 0.95 0.17 0.92c0.20 -0.01 1.06 -0.19 0.94 0.10c-0.17 0.41 -0.86 0.59 -0.11 0.96c0.10 -0.01 0.04 0.00 0.10 0.02c0.04 0.15 0.06 0.56 0.26 0.56c0.09 0.00 0.14 -0.09 0.26 -0.06c0.08 0.02 0.11 0.13 0.21 0.13c0.15 0.00 0.38 -0.15 0.36 0.11c-0.01 0.15 -0.07 0.35 -0.02 0.50c0.10 0.28 0.23 0.21 0.15 0.63c-0.12 0.63 0.36 0.71 0.61 1.15c0.15 0.27 -0.04 0.27 -0.11 0.52c-0.02 0.08 0.23 0.35 0.20 0.57c0.00 0.16 -0.50 0.41 -0.07 0.51c0.09 0.02 0.21 -0.01 0.32 0.01c0.14 0.02 0.07 0.24 0.30 0.24c0.29 0.00 0.48 0.11 0.67 0.30c0.07 0.07 0.30 0.39 0.30 0.48l0.00 0.00z\"\n          },\n          25: {\n            name: \"H\\xE0 T\\u0129nh\",\n            path: \"m78.03 116.99l1.23 -0.45c0.14 -0.16 0.37 -0.68 0.60 -0.68c0.16 0.00 0.26 0.31 0.43 0.31c0.25 0.00 2.03 0.05 1.55 -0.58c0.42 -0.14 0.80 -1.01 1.50 -0.50c0.48 0.34 1.82 0.70 1.94 1.19c0.18 0.69 -0.50 1.43 0.88 1.43c1.04 0.00 2.60 0.73 3.43 -0.31c1.42 -1.76 1.76 0.27 2.92 -0.16l0.00 0.00c-0.12 -0.13 -0.23 -0.27 -0.30 -0.41c-0.27 -0.52 -0.35 -1.05 -0.55 -1.59c-0.21 -0.59 -1.52 -0.34 -2.06 -1.18c-0.54 -0.86 -1.09 -1.35 -2.03 -1.81c-0.60 -0.43 -0.97 -0.15 -1.49 -0.38c-1.03 -0.46 -2.96 -2.29 -2.96 -3.47c-0.02 -0.01 -0.03 -0.02 -0.04 -0.04c-0.06 0.00 -0.23 0.16 -0.29 0.20c-1.33 -1.00 -1.54 -2.82 -2.23 -4.20c-0.05 -0.26 -0.27 -1.44 -0.36 -1.44c-0.02 -0.05 -0.20 -0.05 -0.37 -0.09l0.00 0.00c-0.16 0.75 0.44 1.48 -0.34 1.78c-0.27 0.10 -0.25 0.06 -0.42 0.31c-0.19 0.29 -0.11 0.62 -0.36 0.94c-0.76 0.76 -1.18 -0.01 -1.74 0.39c-1.05 0.76 -0.74 -0.23 -1.44 -0.66c-0.36 -0.22 -0.62 0.08 -0.95 0.20c-0.70 0.27 -1.37 0.27 -2.04 -0.10c-0.82 -0.45 -0.76 -0.50 -1.58 0.10l-0.94 -0.29l0.00 0.00c-0.09 0.08 -0.22 0.13 -0.41 0.15c-0.60 0.04 -0.62 0.64 -0.62 1.06c-0.32 0.08 -0.20 0.84 -0.21 1.07c-0.05 0.65 -0.20 0.68 0.24 1.31c0.38 0.27 1.10 0.57 1.10 0.99c0.00 0.86 0.71 1.70 1.50 2.14c0.29 0.16 0.67 -0.37 0.73 -0.21c0.22 0.58 -0.23 1.17 0.52 1.55c0.27 0.13 0.88 0.64 1.00 0.27c0.36 -1.10 0.50 -1.01 1.44 -0.60c0.63 0.28 -0.45 1.48 0.68 1.48c0.14 0.57 0.17 0.46 0.66 0.51c0.27 0.03 0.00 1.27 0.82 1.48c0.30 0.08 0.46 0.17 0.54 0.27l0.00 0.00z\"\n          },\n          26: {\n            name: \"H\\u1EA3i D\\u01B0\\u01A1ng\",\n            path: \"m86.48 61.94l0.17 -0.33c0.48 0.15 0.44 0.62 1.01 0.38c0.42 -0.18 0.70 -0.37 1.14 -0.24c0.32 0.10 0.36 -0.12 0.44 -0.34c0.05 -0.15 0.31 -0.18 0.24 -0.41c-0.12 -0.39 0.19 -0.50 0.11 -0.79c-0.06 -0.24 -0.15 -0.41 -0.20 -0.67l-0.03 -0.27l0.00 0.00c0.12 -0.19 0.28 -0.03 0.35 -0.39c0.04 -0.20 -0.06 -1.28 0.33 -0.86c0.29 0.31 0.42 0.41 0.74 0.06c0.17 -0.19 0.37 -0.13 0.54 -0.27c0.28 -0.24 0.27 -0.55 0.76 -0.49c0.31 0.04 0.60 -0.05 0.90 -0.05l0.00 0.00l-0.23 0.88c-0.03 0.26 0.03 0.69 -0.13 0.92c-0.07 0.11 -0.78 0.56 -0.53 0.62c0.00 0.01 0.00 0.01 0.01 0.01c0.11 0.42 -0.11 0.69 0.49 0.56c0.31 -0.07 0.37 0.25 0.68 0.23c0.37 -0.03 0.84 -0.22 1.17 -0.01c0.25 0.16 0.32 0.39 0.48 0.61l0.00 0.00l-0.41 0.12c-1.17 0.00 0.18 0.84 -0.09 1.28c-0.13 0.21 -0.36 0.13 -0.53 0.21c-0.26 0.12 0.05 0.63 -0.08 0.84c0.00 0.35 0.10 0.50 -0.32 0.57c-0.16 0.03 -0.65 -0.25 -0.67 0.10c-0.01 0.16 0.19 0.23 0.14 0.36c-0.09 0.25 0.07 0.18 0.21 0.36c0.19 0.24 -0.43 0.26 -0.21 0.65c0.30 0.56 -0.46 0.43 -0.58 0.68c-0.03 0.06 0.01 0.58 -0.24 0.33c-0.10 -0.10 -0.07 0.07 -0.14 0.07c-0.11 0.00 -0.18 -0.11 -0.28 -0.15l-0.42 0.10l0.00 0.00c-0.02 0.00 -0.04 0.02 -0.05 0.04c-0.10 0.02 -0.39 0.27 -0.51 0.33c-0.28 0.14 -0.51 0.03 -0.78 0.07c-0.13 0.02 -0.24 0.12 -0.36 0.17c-0.22 0.10 -0.29 -0.20 -0.46 -0.18c-0.17 0.01 -0.20 0.18 -0.34 0.20l0.00 0.00c-0.10 -0.18 -0.27 -0.43 -0.45 -0.48c0.00 -1.21 -2.36 -0.89 -1.49 -2.63c0.20 -0.41 -0.37 -0.58 0.04 -0.99c0.20 -0.20 0.06 -0.40 0.01 -0.63l-0.43 -0.55l0.00 0.00z\"\n          },\n          27: {\n            name: \"H\\u1EA3i Ph\\xF2ng\",\n            path: \"m103.43 68.81c0.00 -0.27 -0.00 -1.17 0.48 -0.72c0.19 0.18 0.56 0.29 0.82 0.32c0.25 0.03 0.57 0.05 0.69 0.32c0.07 0.17 -0.02 0.32 -0.21 0.32c-0.37 0.00 -1.47 0.45 -1.72 0.10l-0.06 -0.33zm-2.11 -4.51c-0.18 0.00 -0.35 0.12 -0.48 0.24c-0.28 0.25 -0.93 0.02 -0.91 0.54c0.02 0.40 0.57 0.37 0.79 0.62c0.11 0.13 0.00 0.65 0.19 0.64c0.42 -0.03 0.82 0.12 1.19 0.38c0.11 0.08 0.30 0.27 0.41 0.08c0.07 -0.13 -0.52 -0.83 -0.08 -0.83c0.24 0.00 0.39 -0.10 0.44 -0.34c0.07 -0.36 -0.38 -0.42 -0.63 -0.57c-0.22 -0.14 -0.01 -0.86 -0.48 -0.70l-0.43 -0.06zm-10.02 2.30l0.42 -0.10c0.10 0.04 0.17 0.15 0.28 0.15c0.08 0.00 0.04 -0.17 0.14 -0.07c0.26 0.26 0.21 -0.27 0.24 -0.33c0.12 -0.25 0.89 -0.12 0.58 -0.68c-0.21 -0.39 0.41 -0.41 0.21 -0.65c-0.14 -0.18 -0.30 -0.11 -0.21 -0.36c0.05 -0.13 -0.15 -0.21 -0.14 -0.36c0.02 -0.35 0.50 -0.07 0.67 -0.10c0.42 -0.07 0.32 -0.22 0.32 -0.57c0.13 -0.21 -0.18 -0.72 0.08 -0.84c0.17 -0.08 0.40 -0.00 0.53 -0.21c0.27 -0.44 -1.09 -1.28 0.09 -1.28l0.41 -0.12l0.00 0.00c0.19 0.22 0.24 0.20 0.49 0.09c0.31 -0.14 0.67 0.21 0.98 0.27c0.53 0.11 1.10 -0.06 1.30 0.60c0.08 0.26 0.07 0.48 0.07 0.75c0.00 0.27 -0.23 0.49 -0.23 0.76c0.12 0.16 0.04 0.41 0.22 0.58c0.36 0.36 1.06 0.63 1.06 1.26l0.00 0.00c-0.19 -0.06 -0.38 -0.24 -0.38 -0.53c-0.12 -0.03 -0.65 -0.04 -0.69 -0.07c-0.16 -0.10 -0.35 -0.50 -0.55 -0.30c-0.19 0.19 0.09 1.17 0.23 1.36c-0.24 0.32 0.18 0.88 0.29 1.17c0.27 0.74 -0.46 -0.22 -0.69 0.14c-0.19 0.30 -0.36 0.38 -0.71 0.38c-0.12 0.49 -0.15 1.02 -0.61 1.21l0.00 0.00c-0.17 -0.17 -0.68 -0.43 -0.92 -0.51c-0.13 -0.05 -0.31 0.08 -0.42 0.13c-0.26 0.12 -0.77 0.49 -1.05 0.35c-0.41 -0.19 -0.27 -0.19 -0.69 0.01c-0.19 0.09 -0.48 -0.50 -0.55 -0.66c-0.11 -0.27 -0.68 -0.76 -0.63 -0.98c0.08 -0.34 0.20 -0.31 -0.14 -0.53l0.00 0.00z\"\n          },\n          28: {\n            name: \"H\\xf2a B\\xecnh\",\n            path: \"m76.44 73.20c0.36 0.15 0.40 -0.02 0.73 0.05c0.59 0.14 0.96 0.66 1.43 1.00c0.31 0.23 0.51 -0.09 0.80 -0.26c0.39 -0.23 -0.30 -0.97 -0.37 -1.27c-0.25 -1.06 0.98 0.35 1.01 0.38c0.03 -0.02 0.14 -0.01 0.15 -0.07c0.07 -0.02 -0.04 -0.28 -0.06 -0.33c-0.07 -0.19 -0.15 -0.51 -0.07 -0.72c0.01 -0.03 0.55 -0.33 0.61 -0.33c0.33 0.03 0.29 0.60 0.66 0.65l0.48 -0.07l0.00 0.00c-0.05 -0.23 -0.07 -0.44 -0.10 -0.68c-0.03 -0.27 -0.24 -0.39 -0.39 -0.61c-0.11 -0.16 -0.30 -0.18 -0.46 -0.27c-0.13 -0.07 -0.11 -0.19 -0.20 -0.30l-0.36 -0.58l0.00 0.00c0.00 -0.09 -0.23 -0.40 -0.30 -0.48c-0.19 -0.19 -0.39 -0.30 -0.67 -0.30c-0.23 0.00 -0.16 -0.22 -0.30 -0.24c-0.10 -0.02 -0.22 0.02 -0.32 -0.01c-0.42 -0.10 0.07 -0.35 0.07 -0.51c0.03 -0.21 -0.23 -0.48 -0.20 -0.57c0.07 -0.25 0.26 -0.25 0.11 -0.52c-0.25 -0.44 -0.73 -0.51 -0.61 -1.15c0.08 -0.42 -0.05 -0.35 -0.15 -0.63c-0.05 -0.15 0.00 -0.34 0.02 -0.50c0.02 -0.26 -0.21 -0.11 -0.36 -0.11c-0.10 0.00 -0.13 -0.10 -0.21 -0.13c-0.11 -0.03 -0.17 0.06 -0.26 0.06c-0.20 0.00 -0.22 -0.41 -0.26 -0.56c-0.06 -0.01 -0.01 -0.02 -0.10 -0.02c-0.75 -0.37 -0.06 -0.55 0.11 -0.96c0.12 -0.29 -0.75 -0.11 -0.94 -0.10c-0.41 0.03 0.16 -0.63 -0.17 -0.92c-0.20 -0.18 -0.65 -0.59 -0.90 -0.66c-0.31 -0.08 -0.69 -0.05 -1.01 -0.11c-0.38 -0.07 -0.61 0.06 -1.01 0.14l-0.55 -0.04l0.00 0.00c0.08 0.33 0.75 0.91 0.60 1.19c-0.32 0.58 -1.18 0.27 -1.60 0.18c-0.42 -0.10 -0.52 0.36 -0.86 0.36c-0.07 -0.22 -0.30 -0.60 -0.46 -0.73c-0.08 0.05 -1.00 0.41 -1.05 0.25c-0.25 0.00 -0.91 -1.00 -1.23 -1.19c-0.48 -0.30 -1.04 -0.68 -1.57 -0.82c-0.59 -0.16 -0.71 0.11 -0.71 -0.54l-0.20 -0.48l0.00 0.00l-0.66 0.23c-0.03 0.12 -0.29 0.44 -0.26 0.49c-0.11 0.03 0.19 0.44 0.23 0.51c0.28 0.58 1.08 1.96 1.63 2.30c0.61 0.38 0.20 1.62 0.56 1.80c0.97 0.48 -0.11 0.51 -0.02 1.03c0.06 0.34 0.37 0.74 -0.33 0.50c-0.45 -0.15 -1.26 -0.46 -1.74 -0.33c-1.08 0.28 -0.29 0.75 -0.48 1.18l-0.25 0.80l0.00 0.00l0.91 -0.38c0.64 -0.21 0.87 -0.13 1.47 0.31c0.27 0.19 0.36 0.83 0.52 1.10c0.03 0.05 0.78 0.40 0.86 0.38c0.26 -0.07 0.56 -0.34 0.83 -0.34c0.20 0.00 0.82 0.33 1.01 0.45c0.45 0.28 0.20 0.72 0.82 0.72c0.63 0.06 1.15 0.50 1.30 1.15c0.17 0.75 1.87 1.34 2.58 1.34c0.68 0.00 0.70 0.01 1.32 0.25c0.28 0.11 0.82 -0.19 0.97 -0.04l0.00 0.00z\"\n          },\n          29: {\n            name: \"H\\u1EADu Giang\",\n            path: \"m82.60 260.37l-0.97 -0.80l0.00 0.00l-0.43 0.37c-0.54 0.11 -0.63 0.04 -1.11 -0.07c-0.52 -0.12 -0.62 0.29 -1.07 0.36c-0.19 0.03 -0.46 -0.07 -0.35 -0.31c-0.48 -0.16 -0.34 0.24 -0.75 0.24c-0.17 0.00 -0.51 -0.49 -0.66 -0.63c-0.36 -0.36 -0.75 1.01 -1.01 1.17l0.00 0.00c0.32 0.82 -0.35 1.23 -0.97 1.54c-0.18 0.09 -0.56 0.03 -0.67 0.24c-0.09 0.17 0.10 0.36 -0.08 0.55c-0.13 0.13 -0.38 0.09 -0.45 0.24c-0.06 0.12 0.07 0.19 -0.04 0.36c-0.20 0.33 -1.28 0.63 -1.28 1.05c0.00 0.33 0.44 0.35 0.68 0.42c0.38 0.11 0.35 0.27 0.54 0.53c-0.11 0.15 -0.23 0.44 -0.46 0.50c-0.03 0.15 -0.14 0.30 -0.14 0.48l0.00 0.00c0.25 -0.05 0.66 -0.01 0.85 -0.16c0.02 0.02 0.54 0.08 0.57 0.08c0.04 0.13 0.64 0.19 0.79 0.19c0.38 0.00 0.66 -0.27 1.01 -0.35l0.00 0.00l0.69 -0.26c0.57 -0.22 1.76 -0.40 2.16 -0.90c0.58 -0.72 1.92 -0.95 2.22 -1.85c0.15 -0.44 0.55 -2.86 0.93 -2.98l0.00 0.00z\"\n          },\n          30: {\n            name: \"H\\u01B0ng Y\\xEAn\",\n            path: \"m84.28 67.05l0.55 0.37c-0.07 0.36 0.08 1.08 0.30 1.33c0.37 0.42 0.60 0.02 1.02 -0.08l0.00 0.00c0.07 -0.08 0.29 -0.08 0.29 -0.16c-0.04 -0.01 -0.06 -0.23 -0.04 -0.27c0.07 -0.18 0.30 -0.38 0.47 -0.24c0.19 0.15 0.20 0.17 0.42 0.05c0.30 -0.17 0.50 0.19 0.76 0.13c0.21 -0.05 0.48 -0.40 0.66 -0.55l0.09 -0.41l0.00 0.00c-0.10 -0.18 -0.27 -0.43 -0.45 -0.48c0.00 -1.21 -2.36 -0.89 -1.49 -2.63c0.20 -0.41 -0.37 -0.58 0.04 -0.99c0.20 -0.20 0.06 -0.40 0.01 -0.63l-0.43 -0.55l0.00 0.00c-0.17 -0.16 -0.54 -0.45 -0.71 -0.39c-0.29 0.11 -0.57 0.01 -0.86 0.09c-0.20 0.06 -0.34 0.05 -0.53 -0.03l0.00 0.00l-0.67 0.17c0.13 0.68 -0.37 0.50 -0.83 0.50c-0.01 0.04 -0.37 0.37 -0.24 0.42c0.00 0.11 0.32 0.23 0.23 0.43c-0.07 0.14 -0.55 0.45 -0.18 0.60c0.32 0.12 0.43 0.15 0.43 0.53c-0.25 0.08 -0.29 0.91 -0.15 1.10c0.07 0.10 0.25 0.05 0.36 0.11c0.11 0.06 0.31 0.31 0.36 0.32c0.00 0.15 0.07 0.32 0.07 0.49l0.54 0.78l0.00 0.00z\"\n          },\n          31: {\n            name: \"TP. H\\u1ED3 Ch\\xED Minh\",\n            path: \"m101.49 248.64l0.43 0.30c0.11 0.28 -0.27 0.41 -0.18 0.64c0.03 0.09 0.09 0.15 0.11 0.25c0.02 0.09 0.15 0.33 0.15 0.42l0.00 0.00c-0.49 0.00 -0.66 0.85 -1.23 1.04c-0.81 0.26 0.95 0.78 0.04 1.16c-0.38 0.15 -0.62 0.04 -0.98 0.35c-0.81 0.69 -0.47 -0.29 -0.91 -0.29c-0.24 0.70 -1.04 -0.72 -1.25 -0.50l0.00 0.00l-0.85 -1.24l0.00 0.00c0.28 -0.38 0.27 -1.07 0.16 -1.48c0.00 -0.33 -0.54 -0.25 -0.30 -0.69c0.24 -0.45 0.02 -0.32 -0.28 -0.60c-0.59 -0.54 -0.84 0.82 -1.52 -0.01c-0.30 -0.37 -0.95 0.21 -1.12 -0.30c-0.14 -0.42 -0.32 -0.98 -0.76 -0.98c-0.41 0.00 -0.41 -0.54 -0.75 -0.63c0.00 -0.13 0.35 -0.35 0.44 -0.45c0.21 -0.23 0.14 -0.46 0.27 -0.69c0.12 -0.33 0.15 -0.70 0.24 -1.03c0.08 -0.29 0.17 -0.47 -0.14 -0.59c-0.44 -0.17 -1.14 -0.51 -1.51 -0.84c-0.45 -0.39 -0.89 -0.01 -1.10 -0.60l0.00 0.00c0.10 -0.04 0.17 -0.11 0.28 -0.13c0.53 -0.09 0.63 -0.10 0.63 -0.68c0.00 -0.36 0.28 -0.80 0.43 -1.13l0.07 -0.47l0.00 0.00l0.39 -0.40c0.24 0.15 0.47 0.16 0.71 0.31c0.39 0.25 0.17 0.39 0.26 0.64c0.14 0.00 0.12 0.54 0.29 0.69c0.22 0.21 0.29 0.28 0.61 0.23c0.65 -0.12 0.37 0.35 0.52 0.62c0.05 0.09 0.23 0.04 0.31 0.20c0.10 0.22 0.03 0.20 0.24 0.33c0.44 0.14 0.08 0.82 0.64 1.00c0.42 0.14 0.27 0.52 0.49 0.82c0.22 0.30 0.41 -0.40 0.66 -0.08c0.15 0.19 0.21 0.47 0.44 0.16c0.24 -0.31 0.38 0.10 0.65 -0.03c0.20 -0.09 0.36 -0.34 0.55 -0.38l0.00 0.00l0.33 0.84c0.08 0.15 0.72 1.24 0.30 1.34c-0.01 0.04 -0.31 -0.03 -0.41 0.05c-0.38 0.30 -0.29 -0.21 -0.62 0.00c-0.42 0.27 -1.18 0.84 -0.94 1.42c0.09 0.22 0.91 0.75 1.14 0.97c0.34 0.34 0.62 -0.21 1.02 -0.16c0.27 0.03 0.35 0.35 0.52 0.52c0.14 0.14 0.72 0.38 0.94 0.51c0.29 0.17 0.57 -0.21 0.57 -0.46l0.00 0.00z\"\n          },\n          32: {\n            name: \"Kh\\xe1nh H\\xf2a\",\n            path: \"m142.53 213.35c-0.26 -0.20 -0.72 -0.47 -1.02 -0.17c-0.22 0.22 -0.10 0.50 0.15 0.57c0.36 0.11 0.64 0.40 0.94 0.58c0.07 0.04 0.30 0.19 0.36 0.06c0.09 -0.20 -0.17 -0.47 -0.31 -0.61l-0.12 -0.44zm-1.99 7.39c-0.17 -0.09 -0.40 -0.35 -0.08 -0.39c0.09 -0.01 0.19 0.00 0.28 -0.03c0.07 -0.02 0.14 -0.07 0.21 -0.01c0.15 0.13 0.30 -0.02 0.47 -0.02c0.23 0.00 0.37 0.35 0.13 0.46c-0.11 0.05 -0.22 0.12 -0.34 0.16c-0.16 0.06 -0.32 -0.01 -0.48 0.00l-0.18 -0.16zm-9.40 0.69l0.64 0.01c0.13 -0.03 0.43 -0.03 0.53 -0.10c0.07 0.20 -0.13 0.50 -0.05 0.76c0.07 0.25 0.24 1.08 0.35 1.26c0.17 0.25 0.73 0.29 0.89 0.61c0.12 0.24 -0.21 0.59 0.20 0.76c0.29 0.12 1.09 0.37 1.27 0.56c0.43 0.43 0.89 0.13 1.36 0.37c0.37 0.21 0.70 0.70 0.84 1.12c0.17 0.51 0.32 0.67 0.76 0.88c0.15 0.08 0.30 0.17 0.48 0.16c0.27 -0.02 0.66 -0.38 0.89 -0.42l0.00 0.00c-0.12 -0.43 0.07 -1.02 -0.21 -0.60c-0.13 0.19 -0.43 0.81 -0.74 0.69c-0.22 -0.09 -0.50 -0.29 -0.32 -0.54c0.21 -0.29 0.13 -0.35 0.13 -0.68c0.00 -0.30 0.38 -0.22 0.56 -0.33c0.14 -0.09 0.62 -1.12 0.82 -0.84c0.49 0.70 -0.61 1.06 0.88 1.48c0.43 0.12 0.42 -0.24 0.25 -0.51c-0.37 -0.60 0.04 -0.71 -0.44 -1.37c-0.39 -0.55 -0.60 -1.23 -0.88 -1.86c-0.21 -0.47 -0.08 -0.69 0.36 -0.88c0.50 -0.22 -0.15 -0.60 -0.15 -0.80c-0.05 -0.28 -0.14 -0.79 -0.01 -1.01c0.22 -0.37 -0.19 -0.62 -0.08 -0.91c0.09 -0.22 0.61 -0.06 0.50 -0.54c-0.10 -0.44 -1.31 -1.98 -1.16 -2.18c0.45 -0.57 0.95 0.23 1.23 0.57c0.21 0.26 0.89 0.56 1.19 0.79c0.13 -0.20 0.57 -0.45 0.37 -0.81c-0.18 -0.33 -0.54 -0.35 -0.77 -0.58c-0.24 -0.24 0.18 -0.72 -0.32 -1.17c-0.32 -0.29 -0.63 -0.29 -0.63 -0.76c0.00 -0.14 0.30 -0.82 -0.04 -0.55c-0.52 0.41 -0.78 -0.23 -0.44 -0.69c0.19 -0.26 0.21 -0.29 0.18 -0.58c-0.04 -0.38 0.23 -0.42 0.41 -0.73c0.43 -0.29 0.74 -0.68 1.13 -0.97c0.33 -0.24 0.57 -0.55 0.85 -0.84c0.22 -0.22 0.11 0.49 0.15 0.64c0.26 0.93 0.23 0.70 -0.35 1.50c-0.47 0.66 0.94 -0.28 0.98 0.07c0.04 0.38 -0.23 0.79 -0.02 0.97c0.26 0.23 0.34 0.54 0.55 0.78c0.08 0.09 0.30 0.09 0.30 -0.07c0.00 -0.42 -0.62 -0.84 -0.12 -1.24c0.34 -0.27 -0.47 -1.00 -0.71 -1.30c-0.17 -0.21 -0.66 -1.45 -0.50 -1.77c0.13 -0.27 0.38 -0.44 0.62 -0.65l0.00 0.00c-0.02 -0.10 -0.21 -0.44 -0.31 -0.44c-0.08 -0.24 -0.55 0.08 -0.62 0.18c-0.29 0.41 -0.57 0.27 -0.99 0.37c-0.89 0.21 -1.37 -0.20 -2.00 0.56c-0.30 0.37 -0.79 0.28 -1.17 0.36c-0.08 0.41 -0.28 0.74 -0.73 0.74c-0.55 0.00 -0.72 0.51 -1.18 0.64l0.00 0.00l-0.14 0.21c-0.21 0.27 -0.06 0.37 -0.11 0.64c-0.03 0.17 -0.25 0.40 -0.18 0.54c0.06 0.13 0.08 0.27 0.05 0.41c-0.04 0.16 -0.33 0.14 -0.47 0.14c-0.57 0.11 -1.04 -0.01 -1.18 0.58c-0.05 0.20 -0.33 1.25 -0.26 1.37c0.12 0.21 0.62 0.89 -0.14 0.68c-0.33 -0.09 -0.91 -0.25 -1.16 -0.50c-0.68 -0.69 -0.68 0.42 -1.26 0.19c-0.27 -0.10 -0.40 0.41 -0.50 0.54c-0.34 0.42 0.03 1.53 -0.07 2.14l0.00 0.00c0.16 0.22 0.42 0.39 0.50 0.67c0.04 0.14 -0.10 0.50 -0.02 0.61c-0.02 0.02 0.00 0.06 0.00 0.10c0.09 0.03 0.18 0.63 0.23 0.75c0.06 0.19 -0.08 0.69 0.01 0.82l0.00 0.00z\"\n          },\n          33: {\n            name: \"Ki\\xean Giang\",\n            path: \"m49.16 257.52c-0.21 -0.94 -0.28 -2.23 -1.07 -2.84c-0.64 -0.49 -1.56 -0.60 -1.26 -1.83c0.49 0.00 0.97 0.41 1.45 0.02c0.58 -0.46 0.87 -1.77 1.51 -0.81c0.24 0.36 0.67 0.37 0.87 0.78c0.30 0.60 0.24 1.79 0.24 2.48c0.00 0.59 -0.50 0.93 -0.61 1.48c-0.11 0.59 -0.18 1.32 -0.18 1.91c0.00 0.24 0.07 0.61 -0.30 0.58c-0.51 -0.04 -0.31 -0.77 -0.56 -1.01l-0.10 -0.76zm10.91 5.43c0.09 -0.12 0.23 -0.24 0.38 -0.28c0.11 -0.03 0.25 -0.01 0.35 0.05c0.20 0.14 -0.07 0.27 -0.19 0.29c-0.10 0.02 -0.18 0.07 -0.28 0.10c-0.13 0.05 -0.20 0.01 -0.32 -0.02l0.07 -0.15zm3.17 -12.55c-0.65 -0.10 -1.31 -0.30 -1.90 -0.41c-0.38 -0.07 -0.77 0.25 -1.07 0.02c-0.13 0.10 -0.87 0.60 -1.00 0.60c-0.00 0.01 -0.05 0.05 -0.06 0.06c0.00 0.02 0.01 0.02 -0.01 0.02c0.00 0.30 -0.22 0.56 -0.29 0.76c-0.03 0.00 -0.05 -0.00 -0.06 0.02c-0.19 0.00 -0.65 0.58 -0.70 0.75c-0.15 0.00 -0.30 -0.21 -0.42 -0.31l-0.65 0.10l0.00 0.00c0.11 0.24 0.13 0.50 0.40 0.72c0.51 0.41 0.87 0.88 1.07 1.49c0.19 0.58 1.11 0.42 1.11 1.25c0.07 0.74 0.00 1.80 0.99 1.55c0.00 -0.60 1.77 -1.55 2.35 -1.21c0.85 0.50 0.86 1.35 1.49 1.98c0.39 0.39 0.39 1.00 0.85 0.37c1.14 -1.58 3.37 1.58 3.15 2.49c-0.54 0.00 -0.76 -0.34 -1.29 0.13c-0.60 0.53 -0.80 1.49 -1.80 1.35c-0.72 -0.10 -0.86 1.32 -1.17 1.87c0.05 0.56 -0.56 2.28 -0.24 2.71c-0.06 0.14 -0.10 0.33 -0.13 0.56l0.00 0.00l1.19 0.88l0.51 -1.23l0.45 0.51l0.24 -0.24l0.57 0.16l0.30 -0.31l3.80 2.39l1.22 0.67l0.00 0.00l0.38 -0.12l-0.45 -1.05c0.00 -0.60 0.12 -0.79 0.52 -1.19c0.37 -0.37 -0.33 -0.91 -0.50 -1.24c-0.07 -0.15 -0.13 -0.78 0.14 -0.61c0.33 0.21 0.34 0.30 0.76 0.36c0.05 0.01 0.15 0.11 0.15 0.11c0.02 0.10 0.14 0.17 0.24 0.20l0.00 0.00c0.00 -0.17 0.11 -0.33 0.14 -0.48c0.24 -0.06 0.35 -0.35 0.46 -0.50c-0.19 -0.25 -0.15 -0.42 -0.54 -0.53c-0.24 -0.07 -0.68 -0.09 -0.68 -0.42c0.00 -0.42 1.07 -0.72 1.28 -1.05c0.10 -0.17 -0.02 -0.24 0.04 -0.36c0.08 -0.15 0.32 -0.11 0.45 -0.24c0.18 -0.18 -0.00 -0.38 0.08 -0.55c0.10 -0.21 0.49 -0.15 0.67 -0.24c0.62 -0.31 1.28 -0.71 0.97 -1.54l0.00 0.00l-3.04 -2.90l-0.17 -0.54l-0.49 -0.53l-0.35 0.14l-1.41 -1.18l0.00 0.00l-0.25 0.35l-1.37 -1.16l-1.94 -1.34l-2.60 -0.55l-1.30 -2.16l-0.11 -0.44l0.00 0.00z\"\n          },\n          34: {\n            name: \"Kon Tum\",\n            path: \"m109.85 180.33l1.14 0.08c0.34 0.00 0.66 0.31 1.05 0.23c0.42 -0.09 0.73 -0.45 1.22 -0.48c0.45 -0.03 0.26 0.60 0.36 0.84c0.11 0.25 0.71 1.08 0.52 1.29c-0.41 0.46 -0.88 0.31 -0.88 1.10c0.19 0.45 0.07 0.77 0.18 1.19c0.01 0.00 0.01 0.00 0.01 0.01c0.30 0.08 0.91 0.44 1.19 0.21c0.36 -0.30 0.62 -0.01 0.95 -0.21c0.39 -0.23 0.72 -1.39 1.33 -1.01c0.57 0.35 0.71 0.88 1.45 0.81c0.12 -0.03 0.16 -0.18 0.29 -0.18c0.26 -0.01 0.36 0.10 0.46 -0.22c0.13 -0.41 0.67 -0.12 0.78 -0.81c0.05 -0.28 0.32 -0.80 0.58 -0.94c0.24 -0.13 0.56 -0.19 0.83 -0.16c0.48 0.06 0.74 -0.44 1.16 -0.56c0.41 -0.11 0.65 0.13 1.11 -0.07c0.46 -0.28 0.64 -1.16 1.07 -1.52c0.33 -0.27 0.76 -0.59 0.55 -1.04c-0.16 -0.35 -0.43 -0.53 -0.32 -0.98c0.15 -0.66 1.24 0.44 1.46 0.64c0.57 0.53 0.86 0.23 1.32 -0.23l0.39 -0.31l0.00 0.00c0.00 -0.41 -0.26 -0.62 -0.66 -0.62c-0.68 0.00 0.04 -0.79 0.11 -0.97c0.10 -0.25 -0.29 -0.42 -0.18 -0.62c0.25 -0.44 0.29 -0.34 0.12 -0.90c-0.30 -0.97 -0.44 -0.24 -1.07 -0.63c-0.87 -0.54 -0.80 -0.69 -1.30 -1.48c-0.06 -0.09 -0.45 -0.32 -0.44 -0.35l-1.28 -1.42l-0.42 -0.91l0.00 0.00c-0.66 0.17 -0.78 -0.37 -1.30 -0.37c-0.91 0.00 -0.20 1.04 -0.39 1.48c-0.14 0.33 -0.84 0.10 -1.12 0.10c-0.54 0.00 -0.56 -0.71 -1.29 -0.64c-0.41 0.00 -0.92 -0.49 -0.86 -0.91c0.07 -0.49 0.50 -0.68 0.69 -1.10c0.29 -0.66 -0.73 -1.66 -1.35 -1.62c-0.86 0.05 -1.27 -0.26 -2.01 -0.35c-1.49 -0.18 -0.65 -0.73 -1.36 -1.43c-0.37 -0.37 -0.60 -0.02 -0.89 -0.67c-0.12 -0.27 -0.24 -1.52 -0.79 -1.15l-0.66 0.58l0.00 0.00c0.50 0.55 1.21 1.46 1.32 1.70c0.34 0.72 0.02 0.87 0.18 1.49c0.09 0.36 -0.28 0.27 -0.46 0.32c-0.47 0.12 -0.05 0.35 -0.15 0.49c0.10 0.14 -0.02 0.39 -0.08 0.55c-0.19 0.38 -0.64 0.36 -0.46 0.88c0.08 0.24 0.21 0.51 -0.14 0.55c-0.63 0.07 -0.07 0.29 -0.85 0.01c-0.30 -0.11 -0.48 0.17 -0.68 0.32c-0.11 -0.08 -0.71 0.08 -0.77 0.24c-0.18 0.47 0.85 1.30 1.11 1.50c0.35 0.27 0.53 0.55 0.98 0.82c0.29 0.18 -0.83 0.95 -1.01 1.22c-0.14 0.20 -0.60 0.54 -0.18 0.78c0.45 0.25 -0.14 0.69 0.06 0.69c0.00 0.01 0.12 0.14 0.14 0.18l0.07 0.45l0.00 0.00c0.56 0.00 0.03 1.58 -0.39 1.83c0.01 0.02 0.02 0.79 0.08 1.01c0.08 0.30 -0.22 0.76 -0.43 0.99c-0.05 0.06 -0.08 0.14 -0.09 0.23l0.00 0.00z\"\n          },\n          35: {\n            name: \"Lai Ch\\xe2u\",\n            path: \"m47.66 48.82c0.04 -0.21 -0.12 -0.63 0.04 -0.74c0.34 -0.24 1.04 -0.14 0.77 -0.82c-0.19 -0.50 -0.81 -1.05 -1.11 -1.53c-0.20 -0.31 -0.31 -0.84 -0.13 -1.21c0.16 -0.31 0.52 -0.08 0.79 -0.08c0.08 0.25 0.53 -0.28 0.58 -0.32l0.26 -0.41l0.00 0.00c-0.03 -0.17 -0.20 -0.63 -0.39 -0.68c-0.07 -0.34 0.02 -0.43 0.02 -0.74c0.00 -0.33 -0.28 -0.41 -0.38 -0.67c-0.20 -0.48 0.24 -1.05 -0.27 -1.46c-0.24 -0.19 -0.79 -0.23 -0.93 -0.42c0.16 -0.22 -0.20 -0.51 -0.20 -0.68c-0.03 -0.01 -0.09 -0.13 -0.10 -0.14c-0.21 -0.37 -0.25 -0.91 -0.58 -1.13c-0.22 -0.15 -0.85 -0.24 -0.88 -0.50c-0.04 -0.34 0.35 -0.53 0.35 -0.75c0.00 -1.71 -2.08 -0.95 -2.97 -0.95c-0.09 -0.28 -0.28 -0.87 -0.61 -0.97c-0.44 -0.14 -0.37 -0.52 -0.11 -0.81c0.70 -0.79 0.40 -0.94 -0.29 -1.64l-0.56 -0.46l0.00 0.00c-0.03 -0.08 -0.39 -0.42 -0.49 -0.42c-0.00 -0.01 -0.09 -0.09 -0.10 -0.10c0.00 -0.09 -0.08 -0.19 -0.08 -0.27c-0.02 -0.01 -0.02 -0.03 -0.02 -0.06c-0.02 -0.01 -0.38 -0.70 -0.50 -0.81c-0.36 -0.36 -0.07 -0.37 0.02 -0.79c0.10 -0.45 -1.21 -0.99 -1.54 -1.12c-0.07 -0.03 -0.39 -0.21 -0.41 -0.17l-0.02 0.00l-0.50 1.78c-0.31 1.08 -1.46 0.90 -2.11 1.50c-0.85 0.85 0.64 1.08 -0.26 1.64c-0.39 0.24 -1.53 0.75 -1.42 1.28c0.09 0.43 -0.22 1.00 -0.70 0.63c-0.08 0.05 -0.65 -0.06 -0.68 -0.18c-0.04 -0.01 -0.20 -0.36 -0.21 -0.42c-0.03 -0.01 -0.03 -0.03 -0.06 -0.04c-0.09 -0.37 -1.06 0.35 -1.16 -0.61c-0.03 -0.25 -0.19 -0.30 -0.33 -0.48c-0.16 -1.27 -0.71 -1.62 -1.92 -1.62c-0.10 -0.39 -1.59 -1.53 -1.89 -1.46c-0.34 0.09 -0.55 0.23 -0.76 -0.20c-0.28 -0.56 -0.43 -0.32 -0.77 0.02c-0.31 0.31 -0.97 -0.80 -1.08 -1.05c-0.43 -0.97 -1.26 0.60 -1.38 1.00c-0.21 0.69 -0.81 0.49 -0.92 0.68c-0.11 0.19 0.10 0.42 0.18 0.63c0.00 0.27 -0.76 1.18 -1.00 1.36c-0.15 0.11 -0.27 0.22 -0.38 0.34l0.00 0.00l0.29 0.41c0.16 0.81 1.12 0.76 0.89 1.67c-0.10 0.40 0.03 0.63 0.35 0.87c0.39 0.29 0.58 0.55 0.88 0.92c0.03 0.29 0.51 1.07 0.69 1.31c0.46 0.59 0.41 0.31 0.93 0.17c0.92 -0.25 0.78 0.82 1.05 1.18c0.22 0.28 1.09 0.86 1.09 0.09c0.00 -0.31 -0.37 -0.79 -0.24 -1.06c0.11 -0.26 1.17 0.40 1.26 0.66c0.29 0.81 -0.69 1.02 0.17 1.80c0.79 0.69 0.53 0.90 1.67 0.78c0.54 -0.06 1.08 -0.72 1.35 -0.02c0.10 0.26 0.34 0.89 0.69 0.89c0.22 0.00 0.44 -0.40 0.79 -0.42c0.20 -0.01 1.09 0.02 1.13 -0.15c0.20 -0.75 0.13 -0.91 0.64 -0.32c0.33 0.25 0.51 0.12 0.91 0.12c0.55 0.00 1.04 0.52 1.56 0.59c0.43 0.06 0.30 -0.27 0.20 -0.48c-0.20 -0.41 0.01 -0.46 0.09 -0.76c0.28 -0.11 0.34 -0.39 0.49 -0.62c0.15 -0.24 1.11 -0.36 1.28 -0.10c0.20 0.32 0.29 0.74 0.48 1.07c0.32 0.57 0.86 0.51 0.64 1.23c-0.17 0.56 0.35 0.83 0.77 1.02l0.00 0.00c0.43 -0.60 0.49 -1.61 1.43 -0.84c0.30 0.25 0.75 0.25 1.04 0.48c0.15 0.12 0.28 0.19 0.43 0.36c0.04 0.04 0.05 0.19 0.06 0.26c0.01 0.06 0.08 0.27 0.06 0.27c0.17 0.14 0.80 1.22 0.73 1.47c-0.22 0.73 -0.57 0.97 0.32 1.18c0.38 0.09 0.40 0.35 0.57 0.62c0.35 0.54 0.89 0.33 1.23 1.13c0.37 0.88 0.75 0.27 1.30 0.27l0.00 0.00z\"\n          },\n          36: {\n            name: \"L\\xe0o Cai\",\n            path: \"m48.86 43.72l0.25 0.43c-0.06 0.58 1.17 0.87 1.48 0.70c0.53 -0.30 1.13 0.14 1.66 0.35c1.53 0.59 -0.15 -1.71 1.24 -0.79c0.10 0.06 0.95 0.10 1.13 0.14c0.27 0.06 0.42 0.86 0.67 0.86c0.06 0.17 0.35 -0.24 0.38 -0.27c0.06 -0.09 0.37 -0.38 0.38 -0.44c1.72 -0.34 -0.35 -2.87 -0.15 -3.31c0.14 -0.31 0.38 -0.37 0.25 -0.78c-0.17 -0.52 -0.16 -0.88 0.37 -1.07c0.58 -0.21 0.93 0.62 1.26 0.95c0.21 0.16 0.57 0.33 0.71 0.54c0.08 0.11 0.29 0.36 0.43 0.36c0.01 0.02 0.07 0.02 0.10 0.02c0.04 0.12 0.32 -0.35 0.32 -0.50c0.00 -0.32 -0.19 -0.97 0.29 -1.00c0.43 -0.03 0.60 -0.22 0.60 -0.68c-0.41 -0.14 -0.94 0.04 -0.94 -0.69l0.00 0.00l-0.45 -0.14c-0.04 -0.21 -0.32 -0.30 -0.07 -0.47c0.23 -0.15 0.39 -0.12 0.39 -0.47c0.00 -0.18 0.05 -0.16 0.13 -0.29c0.12 -0.19 0.01 -0.46 -0.19 -0.55c-0.53 -0.24 0.02 -0.20 -0.27 -0.49c-0.14 -0.14 -0.37 -0.25 -0.55 -0.32c-0.40 -0.23 -0.41 -0.32 -0.58 -0.68c-0.11 -0.22 -0.43 -0.16 -0.51 -0.42c-0.21 -0.69 0.37 -0.75 -0.41 -1.18c-0.35 -0.20 -0.07 -0.60 -0.07 -0.90c0.41 -0.14 1.20 -0.22 0.56 -0.80c-0.50 -0.45 -0.57 -0.54 -0.87 -1.11c-0.13 -0.24 -0.79 -0.08 -1.07 -0.33l0.14 -0.42l0.00 0.00c-0.16 -0.23 -0.26 -0.54 -0.45 -0.63c-1.04 -0.52 -0.99 -0.06 -0.80 -1.52c0.10 -0.75 -1.84 0.16 -2.31 0.16c-0.86 0.00 -0.66 0.67 -1.20 1.04c-0.13 0.08 -0.65 0.55 -0.56 0.68c-0.52 0.52 -0.30 2.88 -0.54 3.70l-0.94 0.33c-0.89 -1.02 -1.73 -2.12 -2.75 -2.90c-0.98 -0.74 -1.83 -1.65 -2.65 -2.55l-0.45 0.45c-0.27 0.34 -0.16 0.69 -0.58 0.95c-0.25 0.16 -0.09 0.56 -0.11 0.81c-0.04 0.72 -0.42 1.21 -1.14 1.21l0.00 0.00l0.56 0.46c0.69 0.70 0.99 0.85 0.29 1.64c-0.26 0.29 -0.34 0.68 0.11 0.81c0.33 0.10 0.52 0.69 0.61 0.97c0.89 0.00 2.97 -0.76 2.97 0.95c0.00 0.23 -0.38 0.41 -0.35 0.75c0.03 0.27 0.66 0.35 0.88 0.50c0.34 0.23 0.37 0.77 0.58 1.13c0.01 0.01 0.06 0.13 0.10 0.14c0.00 0.17 0.37 0.46 0.20 0.68c0.14 0.19 0.68 0.22 0.93 0.42c0.51 0.41 0.08 0.97 0.27 1.46c0.10 0.25 0.38 0.34 0.38 0.67c0.00 0.31 -0.09 0.40 -0.02 0.74c0.19 0.05 0.36 0.51 0.39 0.68l0.00 0.00z\"\n          },\n          37: {\n            name: \"L\\u1EA1ng S\\u01A1n\",\n            path: \"m85.96 44.18l0.49 0.31c-0.12 0.32 -0.10 0.35 -0.30 0.61c-0.18 0.24 0.35 0.54 0.10 0.87c-0.14 0.18 -0.38 0.76 -0.14 0.99c-0.02 0.01 0.15 0.12 0.18 0.14c0.26 0.21 0.54 0.62 0.80 0.78c0.20 0.13 1.55 0.39 1.13 0.81c-0.38 0.38 -0.34 0.86 -0.54 1.32l-0.35 0.41l0.00 0.00c-0.18 0.25 -0.31 0.27 -0.27 0.62c0.02 0.25 -0.07 0.45 -0.07 0.70c0.16 0.05 0.01 0.56 0.46 0.56c0.38 0.00 0.34 0.01 0.63 0.19c0.30 0.18 0.76 -0.09 1.10 0.02c0.32 0.11 -0.19 0.68 0.27 0.78c0.75 -0.07 0.26 0.83 0.88 0.95c0.39 0.08 0.92 0.30 0.97 -0.29c0.02 -0.22 0.27 -0.62 0.56 -0.51c0.17 0.06 0.56 0.17 0.56 -0.16c0.00 -0.39 0.50 -0.49 0.75 -0.74c0.13 -0.13 -0.11 -0.28 -0.11 -0.45c0.00 -0.26 0.21 -0.37 0.31 -0.58c0.33 -0.52 0.57 -1.48 1.39 -1.25c0.43 0.12 1.04 -0.08 1.39 0.23c0.52 0.46 0.60 1.70 1.28 0.68c0.51 -0.76 0.99 0.25 1.35 0.37c0.00 0.79 -0.08 0.65 0.62 0.82c0.50 0.13 0.47 0.58 0.61 0.99c0.46 0.00 0.08 -0.07 0.45 0.18c0.46 0.30 0.78 -0.47 1.06 -0.10c0.27 0.36 -0.58 0.67 -0.21 1.04c0.25 0.17 0.41 0.23 0.48 0.54c0.04 0.19 0.42 0.37 0.42 0.51l0.00 0.00c0.08 -0.10 0.33 -0.51 0.48 -0.51c0.01 -0.02 0.44 -0.09 0.55 -0.36c0.26 -0.67 0.68 0.07 0.99 -0.02c0.23 -0.07 0.30 -0.27 0.57 -0.27c0.27 0.00 0.36 0.08 0.57 0.12c0.06 0.24 0.56 -0.09 0.63 -0.21c0.12 -0.22 -0.00 -0.58 -0.07 -0.80c-0.14 -0.44 -0.30 -0.77 -0.17 -1.28c-0.00 -0.03 -0.01 -0.19 -0.06 -0.20c0.00 -0.12 -0.22 -0.36 -0.26 -0.50c-0.16 -0.53 0.30 -0.35 0.55 -0.39c0.34 -0.05 0.34 -0.53 0.66 -0.53c0.02 -0.05 0.22 -0.02 0.27 -0.02c0.14 0.00 0.61 -0.19 0.75 -0.19l0.00 0.00c-0.13 -0.25 -0.18 -0.75 -0.27 -1.22c-0.69 -0.17 -0.04 -1.40 -1.26 -0.99c-0.48 0.16 -1.31 0.74 -1.53 -0.13c-0.73 -0.19 -0.77 -0.71 -1.28 -1.07c-0.43 -0.31 -1.43 -0.27 -1.51 -0.78c0.00 -0.28 -0.30 -0.44 0.01 -0.67c0.29 -0.21 0.44 -0.30 0.56 -0.62c0.15 -0.40 -0.84 -0.61 -0.92 -0.85l-0.07 0.00c-0.41 1.25 -1.14 -0.00 -1.47 -0.25c-0.56 -0.43 -1.58 -0.16 -2.23 -0.26c-0.41 -0.06 -1.13 -0.58 -1.39 0.20c-0.72 0.00 0.33 -2.77 -0.23 -3.38c-0.52 -0.57 0.14 -0.93 0.10 -1.38c-0.03 -0.15 -0.21 -0.81 -0.27 -0.94c-0.22 -0.45 -0.47 -0.05 -0.42 -0.74c0.07 -0.95 -1.36 -0.21 -1.57 -0.75c-0.14 -0.37 0.17 -0.90 0.02 -1.32c-0.01 -0.04 -0.03 -0.08 -0.04 -0.12l0.00 0.00c-0.55 0.33 -1.08 0.41 -1.49 0.94c-0.50 0.64 -0.47 0.26 -1.12 0.18c-0.27 -0.03 -0.64 0.19 -0.85 0.08c-0.40 -0.20 -0.24 -0.73 -0.57 -0.90c-0.50 -0.25 -0.92 -0.24 -1.26 -0.74c-0.22 -0.32 -0.53 0.13 -0.66 0.07c-0.01 0.04 -0.31 0.35 -0.37 0.43l-0.21 0.62l0.00 0.00l0.50 0.54c0.18 0.48 -0.27 0.53 -0.23 0.92c0.02 0.18 0.16 0.27 0.30 0.36c0.08 0.06 0.33 0.28 0.30 0.30c0.47 0.47 -0.27 1.00 -0.01 1.67c0.04 0.11 -1.17 1.98 -1.61 1.98c-1.56 0.00 -0.08 1.62 -0.51 2.35l-0.14 0.30l0.00 0.00z\"\n          },\n          38: {\n            name: \"L\\xE2m \\u0110\\u1ED3ng\",\n            path: \"m130.42 218.48c0.16 0.22 0.42 0.39 0.50 0.67c0.04 0.14 -0.10 0.50 -0.02 0.61c-0.02 0.02 0.00 0.06 0.00 0.10c0.09 0.03 0.18 0.63 0.23 0.75c0.06 0.19 -0.08 0.69 0.01 0.82l0.00 0.00l-0.30 0.05c-0.12 -0.03 -0.24 0.22 -0.26 0.32c-0.03 0.17 0.07 0.28 0.10 0.42c0.06 0.02 0.17 0.32 0.19 0.39c0.04 0.14 0.02 0.34 -0.04 0.47c-0.15 0.56 -0.64 1.09 -0.70 1.62c-0.07 0.61 -0.11 1.17 -0.11 1.80c0.00 0.60 -0.22 0.35 -0.48 0.79c-0.21 0.35 0.59 0.58 0.64 0.79c0.09 0.32 0.04 1.22 0.46 1.32c0.00 1.41 -2.89 0.16 -2.24 2.01l0.22 0.68l0.00 0.00c0.00 1.17 -0.78 0.49 -1.45 0.47c-0.35 -0.01 -0.84 0.25 -1.14 0.14c-0.42 -0.16 -0.87 0.42 -1.08 0.10c-0.40 -0.61 -1.00 -0.08 -1.45 0.17c-0.44 0.89 0.14 0.84 0.49 1.42c-0.17 0.44 -1.04 1.21 -1.40 1.58c-0.57 0.57 -1.56 0.72 -2.26 1.19c-0.20 0.13 -0.70 0.89 -0.80 0.42c-0.10 -0.46 0.06 -1.02 -0.35 -1.40c-0.50 -0.47 -1.77 -0.64 -2.43 -0.83c-0.67 -0.07 -1.57 -0.09 -2.23 0.04c-0.69 0.14 -0.87 1.25 -1.69 0.69c-0.30 -0.20 -0.95 -0.31 -1.13 -0.54c-0.57 -0.72 -0.40 -0.18 -0.89 0.13l0.00 0.00c-0.18 -0.18 -0.34 -0.64 -0.62 -0.70c0.01 -0.01 -0.12 -0.21 -0.13 -0.30c-0.02 -0.14 -0.06 -0.25 -0.18 -0.33c-0.18 -0.12 -0.69 -0.04 -0.69 -0.23c0.00 -0.22 0.27 -0.26 0.30 -0.43c0.26 -0.41 0.05 -0.32 -0.18 -0.60c-0.20 -0.24 -0.49 -0.17 -0.67 -0.37c-0.14 -0.15 -0.26 -0.10 -0.45 -0.02c-0.23 0.10 -0.24 -0.40 -0.27 -0.56c-0.09 -0.63 -0.39 0.24 -0.64 0.20l0.00 0.00c-0.06 -0.25 -0.46 -0.36 -0.54 -0.58c-0.14 -0.39 0.12 -0.67 -0.26 -0.98c-0.28 -0.23 -0.43 -0.41 -0.20 -0.78c0.18 -0.28 0.10 -0.62 0.28 -0.90c0.26 -0.40 0.68 -0.28 0.99 -0.54l0.66 -0.14l0.00 0.00c0.19 -0.01 0.28 0.14 0.49 0.14c0.16 0.00 0.21 -0.14 0.31 -0.14c0.01 -0.02 0.46 -0.03 0.62 -0.39c0.22 -0.48 1.10 0.13 1.42 -0.27c0.42 -0.52 0.99 -0.64 1.39 -1.07c0.24 -0.26 1.36 -1.54 1.57 -0.76c0.32 1.15 0.83 0.98 1.94 0.56c0.24 0.00 0.89 -0.11 1.04 0.13c0.12 0.19 -0.06 0.59 -0.01 0.84c0.08 0.35 0.45 0.17 0.62 0.04c0.27 -0.22 0.46 0.54 1.10 0.20c0.53 -0.28 1.61 -0.84 1.78 -1.48c0.04 -0.15 -0.62 -1.13 -0.77 -1.21c-0.14 -0.07 -0.45 -0.78 -0.58 -0.99c-0.24 -0.40 -0.01 -0.37 -0.44 -0.62c-0.92 -0.55 -0.06 -0.90 0.12 -1.37c0.30 -0.77 1.08 0.08 1.53 -0.19l0.49 -0.61l0.00 0.00c0.34 -0.07 0.60 -0.42 0.98 -0.23c0.29 0.14 0.84 0.49 1.17 0.38c0.30 -0.09 0.76 -1.19 1.07 -0.95c0.29 -0.21 0.69 -0.45 0.98 -0.67c0.60 0.44 0.85 -0.01 1.35 -0.29c0.18 -0.10 0.45 -0.58 0.63 -0.56c0.28 0.03 0.33 0.64 0.79 0.36c0.54 -0.33 0.86 0.19 1.35 0.04c0.43 -0.13 0.97 -0.51 1.32 -0.78l0.00 0.00z\"\n          },\n          39: {\n            name: \"Long An\",\n            path: \"m75.84 242.66l0.28 0.63l1.08 0.07l0.39 1.12l-0.28 0.10l1.47 1.52l1.72 1.59l0.71 0.16l1.42 1.89l0.64 0.13l0.00 0.00l1.97 0.21c0.38 -0.02 0.79 0.01 0.70 -0.44c-0.12 -0.57 0.27 -0.38 0.66 -0.41l2.49 -0.18c0.86 -0.06 1.32 1.88 2.08 1.94c1.65 0.12 -0.31 0.93 0.49 1.10c0.28 0.06 0.86 0.36 0.95 0.07c0.40 -0.40 0.56 -0.36 1.07 -0.17c0.59 0.22 0.39 0.08 0.80 -0.26c0.22 -0.18 0.48 -0.10 0.66 -0.38c0.38 -0.62 0.37 0.05 0.57 0.39c0.19 0.31 0.71 -0.64 0.88 -0.72c0.10 -0.05 0.18 -0.12 0.24 -0.21l0.00 0.00c0.28 -0.38 0.27 -1.07 0.16 -1.48c0.00 -0.33 -0.54 -0.25 -0.30 -0.69c0.24 -0.45 0.02 -0.32 -0.28 -0.60c-0.59 -0.54 -0.84 0.82 -1.52 -0.01c-0.30 -0.37 -0.95 0.21 -1.12 -0.30c-0.14 -0.42 -0.32 -0.98 -0.76 -0.98c-0.41 0.00 -0.41 -0.54 -0.75 -0.63c0.00 -0.13 0.35 -0.35 0.44 -0.45c0.21 -0.23 0.14 -0.46 0.27 -0.69c0.12 -0.33 0.15 -0.70 0.24 -1.03c0.08 -0.29 0.17 -0.47 -0.14 -0.59c-0.44 -0.17 -1.14 -0.51 -1.51 -0.84c-0.45 -0.39 -0.89 -0.01 -1.10 -0.60l0.00 0.00c-0.05 0.01 -0.09 -0.02 -0.13 -0.05c0.01 -0.04 -0.25 -0.15 -0.30 -0.17c-0.13 -0.08 -0.24 -0.17 -0.36 -0.26c-0.25 -0.18 -0.54 -0.10 -0.72 0.14c-0.12 0.17 0.15 0.35 0.06 0.47c-0.13 0.18 -0.47 0.09 -0.67 0.15l-0.89 0.13l0.00 0.00c-0.38 0.09 -0.79 -0.34 -0.75 0.21c0.03 0.39 -0.34 0.68 -0.07 1.03c0.24 0.31 1.43 1.60 0.66 1.60c-0.46 0.00 -0.97 -0.01 -1.41 0.08c-0.75 0.16 -1.26 -0.40 -1.78 -0.92l-0.91 -0.91c-0.16 -0.16 -0.14 1.18 -0.46 1.18c-0.04 0.16 -0.44 -0.11 -0.51 -0.14c-0.19 -0.09 -0.57 -0.03 -0.70 -0.16c-0.28 -0.25 0.24 -0.78 -0.31 -1.30c-0.33 -0.41 -0.66 -0.90 -0.82 -1.38c-0.04 -0.11 -0.16 -0.20 -0.17 -0.23c-0.34 0.09 -0.67 0.19 -1.02 0.23c-0.09 0.01 -1.03 0.53 -1.04 0.55c-0.55 0.00 -1.34 0.37 -1.88 0.50c-0.10 0.02 -0.27 0.02 -0.45 0.01l0.00 0.00z\"\n          },\n          40: {\n            name: \"Nam \\u0110\\u1ECBnh\",\n            path: \"m83.09 73.21c0.13 0.18 0.45 0.26 0.21 0.50c-0.33 0.33 0.59 0.49 0.67 0.90c0.13 0.64 0.16 0.48 0.80 0.52c0.40 0.02 0.04 0.63 0.30 0.80c0.27 0.18 0.48 -0.30 0.65 -0.44c0.38 -0.30 0.10 0.58 0.63 0.36c0.49 -0.21 0.40 0.06 0.63 0.34c-0.04 0.47 0.13 0.95 0.01 1.47c-0.07 0.30 -0.20 0.56 -0.27 0.88c-0.06 0.26 -0.20 0.37 -0.36 0.55c-0.24 0.25 -0.14 0.64 -0.32 0.91c-0.16 0.24 -0.06 0.68 0.04 0.93l-0.25 0.69l0.00 0.00c0.07 0.08 0.12 0.24 0.18 0.46c0.48 0.00 1.53 -2.03 2.00 -2.36c0.44 -1.04 1.82 -2.33 2.78 -2.92c0.52 -0.32 1.77 -0.81 2.36 -0.81c0.43 0.00 0.25 0.79 1.10 0.23c0.14 -0.09 0.16 -0.68 0.14 -1.23l0.00 0.00c-0.30 -0.23 -0.75 -0.48 -1.05 -0.72c-0.39 -0.32 -0.88 0.40 -1.26 0.39c-0.31 -0.01 -0.56 -0.40 -0.69 -0.64c-0.14 -0.03 -0.24 -0.36 -0.46 -0.42c-0.18 -0.04 -0.48 -0.09 -0.57 -0.28c-0.26 -0.53 -0.90 0.37 -1.32 0.46c-0.44 0.10 -0.47 -0.29 -0.29 -0.60c0.15 -0.25 0.86 -0.75 0.04 -0.78c-0.84 -0.04 -1.05 0.07 -0.78 -0.79c0.13 -0.41 -0.21 -0.29 -0.41 -0.35l0.00 0.00l-0.46 0.08c-0.38 0.00 -0.39 -0.48 -0.63 -0.46c-0.45 0.03 -0.30 0.68 -0.63 0.68c-0.28 0.00 -0.36 -0.32 -0.62 -0.26c-0.38 0.10 -0.33 0.55 -0.46 0.82c-0.18 0.37 -0.77 0.84 -0.86 0.14c-0.08 -0.68 -0.54 0.40 -0.88 0.40c-0.05 0.21 0.13 0.41 0.04 0.56l0.00 0.00z\"\n          },\n          41: {\n            name: \"Ngh\\u1EC7 An\",\n            path: \"m70.04 105.50l0.94 0.29c0.83 -0.60 0.77 -0.55 1.58 -0.10c0.67 0.37 1.33 0.36 2.04 0.10c0.33 -0.13 0.60 -0.42 0.95 -0.20c0.70 0.43 0.39 1.41 1.44 0.66c0.56 -0.40 0.98 0.37 1.74 -0.39c0.25 -0.32 0.17 -0.66 0.36 -0.94c0.17 -0.26 0.15 -0.21 0.42 -0.31c0.79 -0.30 0.18 -1.04 0.34 -1.78l0.00 0.00c-0.14 -0.03 -0.27 -0.08 -0.32 -0.20c-0.20 -0.45 -0.32 -0.97 -0.49 -1.46c-0.28 -0.78 -1.20 -0.22 -1.31 -1.54c-0.07 -0.80 -0.37 -1.71 0.19 -2.41c0.27 -0.36 0.78 -0.44 1.20 -0.44c0.49 0.00 0.59 -0.01 0.29 -0.47c-0.22 -0.33 -0.08 -1.28 0.14 -1.64c0.15 -0.25 0.05 -0.55 0.38 -0.67c0.31 -0.11 0.41 -0.17 0.56 -0.43c-0.10 -0.13 0.33 -0.39 0.49 -0.67l0.00 0.00c-0.46 0.00 -0.96 -0.30 -1.46 -0.30c-0.74 0.00 -0.56 0.32 -1.01 -0.49c-0.56 -1.00 -1.19 -0.33 -1.76 -1.62c-0.45 -1.01 -0.74 -0.53 -1.55 -0.33c-0.40 0.10 -1.68 -0.52 -1.81 -0.94c-0.13 -0.42 -0.05 -1.14 -0.62 -0.73c-0.31 0.23 -0.71 1.76 -0.95 0.62c-0.11 -0.52 0.10 -1.29 -0.06 -1.74c-0.36 -1.05 0.20 -0.74 -0.88 -1.04c-0.36 -0.10 -0.41 -0.57 -0.83 -0.66c-0.17 -0.24 -0.43 -0.21 -0.27 -0.60c0.07 -0.18 0.22 -0.43 -0.02 -0.55c-0.52 -0.26 -0.48 -0.47 -0.48 -1.11c0.00 -0.33 0.25 -0.51 0.25 -0.78c0.14 -0.04 0.51 -0.33 0.77 -0.39c0.00 -0.21 0.01 -0.82 -0.33 -0.85c-0.42 -0.03 -0.76 -0.31 -1.08 -0.33c-0.21 -0.02 -0.45 0.02 -0.68 0.02c-0.33 0.00 -0.58 -0.19 -0.87 -0.20l-1.12 -0.73l0.00 0.00c-0.10 0.14 -0.32 0.19 -0.71 0.06c-0.38 -0.13 -1.53 0.82 -1.91 1.21c-1.36 1.36 -0.46 0.63 0.36 1.46c-0.42 0.83 0.40 1.18 -1.11 1.18l-0.27 0.67c-1.18 0.00 -0.66 0.17 -1.73 0.99c0.33 0.61 -0.23 0.46 -0.07 0.92c0.08 0.24 -0.17 0.49 -0.41 0.38c-0.58 -0.26 -0.51 -0.04 -0.97 0.19c-0.33 0.17 -0.95 -0.14 -0.99 -0.12c-0.18 -0.24 -0.25 -0.60 -0.57 -0.51c-0.70 0.19 -0.79 -0.35 -1.08 -0.84c-0.26 -0.42 -1.06 0.10 -1.28 0.31l-0.43 0.22c0.00 -0.09 -0.00 -0.19 -0.01 -0.29c-0.00 -0.02 -0.08 -0.11 -0.08 -0.11c-0.42 -0.00 -1.00 -0.33 -1.35 -0.20c-0.18 0.07 -0.34 0.23 -0.55 0.23c-0.41 0.00 -0.61 -0.29 -0.85 0.30c-0.24 0.58 -1.12 -0.13 -1.44 -0.29c-0.24 -0.12 -0.42 -0.04 -0.60 0.13c-0.07 0.07 -0.17 0.11 -0.27 0.12l0.21 0.51c-0.20 1.05 1.26 1.22 1.26 1.62c0.00 0.22 0.15 0.92 0.12 0.99c-0.07 0.20 -0.41 0.38 -0.51 0.78c-0.51 0.00 -0.18 0.31 -0.36 0.63c-0.11 0.20 -0.26 0.10 -0.42 0.02c-0.22 -0.11 -0.17 0.15 -0.31 0.19c0.00 0.18 -0.50 0.19 -0.66 0.19c-0.51 0.00 -0.83 1.43 -1.58 1.43c-0.01 0.04 -0.62 0.54 0.02 0.49c0.47 -0.04 0.95 0.36 1.18 0.73c0.75 1.19 1.73 -0.37 2.23 0.55c0.08 0.14 0.85 0.69 0.95 0.66c0.70 -0.24 0.56 0.08 0.91 0.54c0.57 0.62 0.06 1.03 1.28 0.90c0.15 -0.02 2.11 1.17 2.20 1.42c0.12 0.31 0.49 0.81 0.88 0.81c0.22 0.00 0.49 -0.25 0.63 -0.20c0.21 0.07 0.15 0.39 0.41 0.39l0.75 1.01c0.68 0.93 2.74 1.36 3.00 2.15c0.42 0.00 0.42 0.19 0.95 0.19c0.55 0.00 1.07 0.56 1.75 0.32c1.17 -0.41 0.63 1.22 1.60 0.74c0.48 0.12 0.55 -0.20 0.87 0.29c0.15 0.23 0.43 0.09 0.67 0.36c0.22 0.25 1.26 -0.30 1.26 0.08c0.00 0.59 0.14 0.39 0.58 0.70c0.38 0.28 0.47 0.64 0.24 0.85l0.00 0.00z\"\n          },\n          42: {\n            name: \"Ninh B\\xecnh\",\n            path: \"m84.60 81.10c0.28 0.05 0.27 0.48 0.58 0.72c0.34 -0.26 0.51 -0.32 0.63 -0.19l0.00 0.00l0.25 -0.69c-0.09 -0.25 -0.19 -0.69 -0.04 -0.93c0.18 -0.27 0.09 -0.66 0.32 -0.91c0.16 -0.18 0.30 -0.29 0.36 -0.55c0.07 -0.32 0.20 -0.58 0.27 -0.88c0.12 -0.52 -0.06 -1.01 -0.01 -1.47c-0.22 -0.28 -0.13 -0.55 -0.63 -0.34c-0.53 0.22 -0.25 -0.66 -0.63 -0.36c-0.17 0.14 -0.38 0.61 -0.65 0.44c-0.25 -0.17 0.10 -0.78 -0.30 -0.80c-0.64 -0.04 -0.67 0.12 -0.80 -0.52c-0.08 -0.41 -1.00 -0.57 -0.67 -0.90c0.24 -0.24 -0.08 -0.32 -0.21 -0.50l0.00 0.00l-0.01 -0.01c-0.18 0.00 -0.41 -0.07 -0.55 -0.17c-0.21 -0.15 -0.27 -0.27 -0.41 -0.46c-0.08 -0.12 -0.22 -0.24 -0.33 -0.33l0.00 0.00l-0.48 0.07c-0.36 -0.05 -0.32 -0.62 -0.66 -0.65c-0.06 -0.01 -0.60 0.30 -0.61 0.33c-0.08 0.20 0.00 0.52 0.07 0.72c0.02 0.05 0.13 0.32 0.06 0.33c-0.01 0.06 -0.12 0.05 -0.15 0.07c-0.03 -0.02 -1.26 -1.44 -1.01 -0.38c0.07 0.29 0.76 1.03 0.37 1.27c-0.29 0.17 -0.48 0.48 -0.80 0.26c-0.47 -0.34 -0.84 -0.86 -1.43 -1.00c-0.32 -0.08 -0.37 0.09 -0.73 -0.05l0.00 0.00l-0.07 0.39c0.10 0.54 0.50 0.52 0.91 0.71c0.32 0.15 0.59 0.48 0.88 0.66c0.50 0.06 0.94 1.12 1.44 1.39c0.63 0.35 1.23 0.36 1.81 0.94c0.31 0.31 0.97 0.24 1.13 0.72c0.43 0.31 0.97 0.74 1.51 0.77c0.52 0.03 0.98 -0.08 1.45 -0.08c0.11 0.33 -0.06 0.65 -0.22 0.98c-0.15 0.33 -0.46 0.45 -0.55 0.79l-0.11 0.63l0.00 0.00z\"\n          },\n          43: {\n            name: \"Ninh Thu\\u1EADn\",\n            path: \"m128.63 232.09l-0.22 -0.68c-0.65 -1.85 2.24 -0.60 2.24 -2.01c-0.42 -0.11 -0.38 -1.01 -0.46 -1.32c-0.06 -0.21 -0.85 -0.44 -0.64 -0.79c0.26 -0.44 0.48 -0.19 0.48 -0.79c0.00 -0.63 0.04 -1.19 0.11 -1.80c0.06 -0.53 0.55 -1.06 0.70 -1.62c0.06 -0.12 0.07 -0.32 0.04 -0.47c-0.02 -0.07 -0.13 -0.38 -0.19 -0.39c-0.02 -0.14 -0.13 -0.25 -0.10 -0.42c0.02 -0.11 0.14 -0.35 0.26 -0.32l0.30 -0.05l0.00 0.00l0.64 0.01c0.13 -0.03 0.43 -0.03 0.53 -0.10c0.07 0.20 -0.13 0.50 -0.05 0.76c0.07 0.25 0.24 1.08 0.35 1.26c0.17 0.25 0.73 0.29 0.89 0.61c0.12 0.24 -0.21 0.59 0.20 0.76c0.29 0.12 1.09 0.37 1.27 0.55c0.43 0.43 0.89 0.13 1.36 0.37c0.37 0.21 0.70 0.70 0.84 1.12c0.17 0.51 0.32 0.67 0.76 0.88c0.15 0.08 0.30 0.17 0.48 0.16c0.27 -0.02 0.66 -0.38 0.89 -0.42l0.00 0.00c0.04 0.14 0.11 0.27 0.25 0.34c0.59 0.29 0.68 1.36 -0.08 1.55c0.00 0.14 -0.07 0.39 -0.17 0.51c-0.29 0.29 -0.38 0.75 -0.38 1.13c-0.73 0.24 -0.26 1.08 -0.99 0.90c-0.33 -0.09 -1.49 -0.72 -1.49 0.10c0.00 1.28 -0.70 2.74 -0.18 3.68c0.13 0.23 -1.58 1.21 -2.12 0.67c-0.13 -0.13 -0.26 -0.21 -0.39 -0.25l0.00 0.00c0.23 -0.57 -0.92 -0.91 -1.32 -1.11c-1.10 -0.55 -0.05 -1.68 -1.63 -1.42c-0.73 0.12 -0.62 -1.04 -0.97 -1.36l-1.19 -0.05l0.00 0.00z\"\n          },\n          44: {\n            name: \"Ph\\xFA Th\\u1ECD\",\n            path: \"m74.53 56.56l-0.75 -0.28c-0.24 -0.05 -0.62 -0.33 -0.72 0.09c-0.11 0.47 -0.09 1.30 -0.51 1.59c-0.22 0.15 -0.44 0.20 -0.55 0.47c-0.14 0.38 0.01 0.38 0.06 0.70c0.60 0.65 -0.33 1.23 -0.01 1.89l0.21 0.50l0.00 0.00c0.08 0.33 0.75 0.91 0.60 1.19c-0.32 0.58 -1.18 0.27 -1.60 0.18c-0.42 -0.10 -0.52 0.36 -0.86 0.36c-0.07 -0.22 -0.30 -0.60 -0.46 -0.73c-0.08 0.05 -1.00 0.41 -1.05 0.25c-0.25 0.00 -0.91 -1.00 -1.23 -1.19c-0.48 -0.30 -1.04 -0.68 -1.57 -0.82c-0.59 -0.16 -0.71 0.11 -0.71 -0.54l-0.20 -0.48l0.00 0.00c0.00 -0.12 -0.27 -0.23 -0.30 -0.36c-0.01 -0.04 -0.38 -0.25 -0.37 -0.27c-0.12 -0.03 -0.22 -0.30 -0.31 -0.39c-0.16 -0.16 0.11 -0.44 0.06 -0.66c-0.11 -0.49 -0.18 -0.95 -0.18 -1.48c0.00 -0.40 -0.32 -0.61 -0.55 -0.91l0.00 0.00l0.27 -0.20c0.54 0.41 0.29 -0.49 0.55 -0.39c0.16 0.06 0.49 0.41 0.60 0.14c0.04 -0.10 -0.31 -0.54 -0.36 -0.68c-0.03 -0.08 0.42 -0.44 0.43 -0.74l0.01 -0.61c0.00 -0.20 -0.12 -0.36 -0.12 -0.55c0.00 -0.39 -0.78 -0.99 -0.31 -1.27c0.44 -0.26 0.17 -1.15 0.45 -1.21c0.02 -0.09 0.48 -0.29 0.55 -0.24c0.05 -0.03 0.09 -0.04 0.14 -0.08c-0.12 -0.25 0.74 -0.37 0.82 -0.41c0.34 -0.15 0.21 -0.81 0.91 -0.49c0.11 0.05 0.46 0.22 0.57 0.12c0.09 -0.08 0.17 -0.53 0.11 -0.62l0.00 0.00c0.63 -0.06 0.97 0.48 1.63 0.57c0.29 0.04 0.86 0.40 1.08 0.56c0.31 0.22 -0.37 0.56 -0.01 0.78c0.56 0.33 0.28 0.85 0.73 1.19c0.50 0.39 0.28 0.76 1.08 0.76l0.00 0.00c-0.08 0.42 -0.17 0.86 -0.05 1.29c0.15 0.53 0.55 -0.02 0.97 0.36c0.24 0.22 0.08 0.82 0.08 1.09c0.09 0.02 0.51 0.53 0.64 0.66c0.21 0.21 0.39 0.55 0.21 0.86l0.00 0.00z\"\n          },\n          45: {\n            name: \"Ph\\xfa Y\\xean\",\n            path: \"m135.85 211.53c0.46 -0.13 0.63 -0.64 1.18 -0.64c0.45 0.00 0.65 -0.33 0.73 -0.74c0.38 -0.08 0.86 0.01 1.17 -0.36c0.63 -0.77 1.11 -0.35 2.00 -0.56c0.42 -0.10 0.70 0.04 0.99 -0.37c0.07 -0.10 0.54 -0.42 0.62 -0.18c0.10 0.00 0.29 0.34 0.31 0.44l0.00 0.00c0.08 -0.07 0.16 -0.14 0.24 -0.21c0.06 -0.06 0.52 -0.42 0.49 -0.18c-0.02 0.20 -0.25 0.34 -0.20 0.51c1.24 0.00 0.30 -1.19 -0.06 -1.77c0.03 -0.43 -0.77 -1.38 -1.02 -1.79c-0.47 -0.77 -0.49 -0.29 -1.04 -0.69c-0.22 -0.16 0.14 -0.73 0.14 -0.97c0.00 -0.43 -0.50 -0.81 -0.31 -1.31c0.04 -0.11 0.54 -1.13 0.15 -1.13c-0.03 -0.09 -0.21 0.15 -0.24 0.20c-0.05 0.09 -0.12 0.26 -0.24 0.26c-0.06 -0.19 -0.18 -0.40 -0.24 -0.62c-0.06 -0.20 0.77 -0.01 0.41 -0.42c-0.43 -0.48 -0.05 -0.30 -0.05 -0.72c-0.01 -0.00 -0.04 -0.04 -0.05 -0.05c-0.25 0.00 -0.92 -0.05 -0.75 -0.49c0.22 -0.57 -0.30 -0.85 -0.12 -1.55c0.10 -0.40 0.46 -0.33 0.69 -0.02c0.39 0.52 -0.29 0.42 -0.29 0.76c1.05 0.35 1.09 0.39 0.80 -0.78c0.07 -0.37 -0.18 -0.51 -0.31 -0.80c-0.22 -0.50 0.45 -0.55 -0.26 -1.21c-0.67 -0.62 -1.03 -0.99 -0.60 -1.86l0.00 0.00c-0.25 -0.25 -0.50 -0.39 -0.86 -0.39c-0.06 0.19 -0.42 0.21 -0.46 0.66c-0.04 0.37 -0.45 0.18 -0.63 0.41c-0.28 0.35 0.20 1.18 -0.66 1.18c-0.44 0.00 -0.53 0.38 -0.80 0.57c-0.35 0.25 -1.07 0.62 -1.45 0.27c-0.69 -0.61 -1.19 0.15 -1.74 -0.69l0.00 0.00l-0.60 -0.05c-0.15 -0.02 -0.26 -0.13 -0.44 -0.13c-0.13 0.00 -0.26 -0.01 -0.39 -0.01c-0.25 0.00 -0.39 0.20 -0.42 0.43c-0.06 0.55 -0.81 0.62 -0.54 1.29c0.13 0.33 0.37 0.32 0.69 0.32c0.34 0.00 0.81 -0.39 0.81 0.14c0.00 0.25 0.07 0.52 -0.08 0.73c0.00 0.76 -0.29 0.84 0.49 1.16c0.10 0.04 0.63 0.77 0.71 0.91c0.15 0.23 -0.22 1.83 -0.35 2.10c-0.36 0.77 -1.00 0.26 -1.26 0.62c-0.14 0.20 -0.21 0.64 -0.25 0.88l-0.14 0.95c0.09 0.22 -0.45 0.32 -0.57 0.33l-0.75 0.31l0.00 0.00l0.55 0.64c-0.16 0.56 0.53 -0.05 0.80 0.49c0.19 0.38 0.73 0.84 0.83 1.25c0.74 0.15 0.72 -0.17 1.06 0.66c0.30 0.72 1.61 -0.09 2.00 0.48c0.43 0.62 -0.01 1.20 0.30 1.72l0.00 0.00z\"\n          },\n          46: {\n            name: \"Qu\\u1EA3ng B\\xECnh\",\n            path: \"m93.62 134.98l0.86 0.16c0.33 1.63 1.03 0.20 1.70 0.50c0.38 0.17 1.05 1.03 1.37 0.25c0.10 -0.25 0.09 -0.50 0.29 -0.69c0.14 -0.14 0.31 -0.12 0.44 -0.29c0.18 -0.23 -0.15 -0.87 0.43 -0.87c0.70 0.00 0.28 -0.75 0.99 -0.88c0.35 -0.07 1.43 -0.86 1.51 -1.21l0.00 0.00c-0.31 -0.26 -0.60 -0.52 -0.84 -0.78c-0.83 -0.92 -2.45 -1.35 -3.11 -2.41c0.00 -0.31 -1.38 -1.69 -1.73 -1.86c-0.79 -0.38 -1.12 -2.26 -1.62 -2.98c-0.17 -0.24 -0.48 -0.27 -0.64 -0.47c-0.48 -0.58 -0.99 -2.26 -1.24 -3.06c-0.17 -0.40 -0.17 -0.82 -0.17 -1.25c0.00 -0.39 0.55 -0.47 0.55 -0.86c0.80 -0.26 0.44 -0.64 0.10 -1.04l0.00 0.00c-1.16 0.43 -1.50 -1.60 -2.92 0.16c-0.83 1.04 -2.40 0.31 -3.43 0.31c-1.38 0.00 -0.71 -0.74 -0.88 -1.43c-0.13 -0.50 -1.47 -0.85 -1.94 -1.19c-0.70 -0.51 -1.08 0.36 -1.50 0.50c0.48 0.64 -1.29 0.58 -1.55 0.58c-0.17 0.00 -0.27 -0.31 -0.43 -0.31c-0.22 0.00 -0.46 0.52 -0.60 0.68l-1.23 0.45l0.00 0.00c0.25 0.33 -0.43 0.77 -0.48 1.14c-0.15 0.57 0.02 0.56 0.12 0.98c0.86 0.22 0.92 1.39 1.62 2.10c0.31 0.31 0.38 0.82 0.58 1.22c0.36 0.70 0.32 0.29 0.97 0.45c0.01 0.03 0.02 0.03 0.05 0.04c0.07 0.29 1.48 1.62 1.75 1.97l2.20 2.84l3.44 2.70c0.11 -0.05 0.33 -0.14 0.45 -0.14c0.06 -0.19 0.13 -0.36 0.13 -0.58c0.02 -0.01 0.01 -0.02 0.01 -0.05c0.55 -0.18 0.54 -0.31 0.54 0.26c0.00 0.44 0.48 0.48 0.48 0.81c-1.03 0.34 0.23 1.04 0.44 1.31c0.14 0.18 0.09 0.40 0.15 0.60c0.12 0.36 0.57 0.36 0.68 0.84c0.12 0.51 0.24 1.25 0.73 1.60c0.80 0.58 0.95 -0.10 1.72 -0.10l0.01 0.01z\"\n          },\n          47: {\n            name: \"Qu\\u1EA3ng Nam\",\n            path: \"m127.36 153.78c-0.06 -0.07 -0.21 -0.41 -0.04 -0.41c0.21 0.00 0.38 0.30 0.49 0.46c0.04 0.07 0.17 0.22 0.14 0.30c-0.05 0.16 -0.35 -0.06 -0.42 -0.09l-0.17 -0.27zm-4.41 16.38c-0.03 -0.28 -0.25 -0.54 -0.12 -0.84c0.32 -0.73 0.99 -1.25 0.99 -2.08c-0.04 -0.01 -0.11 -0.19 -0.15 -0.20c0.00 -0.15 0.24 -0.20 0.35 -0.32c0.00 -0.00 -0.48 -0.21 -0.17 -0.57c0.32 -0.37 0.40 -0.94 1.18 -0.68c0.67 0.22 0.86 -0.35 1.45 -0.35c1.18 0.00 1.78 -0.51 2.87 -0.72c0.93 -0.18 1.33 -0.10 2.08 -0.86l0.00 0.00c-0.18 -0.08 -0.36 -0.19 -0.47 -0.30c-0.30 -0.30 -0.02 -0.86 -0.33 -1.18c-0.85 -0.36 -1.22 -0.13 -1.87 -1.03c-0.74 -1.02 -1.51 -1.86 -2.07 -2.97c-0.24 -0.48 -0.40 -1.04 -0.70 -1.47c-0.15 -0.21 -0.31 -0.55 -0.31 -0.81c0.00 -0.12 0.20 -0.72 0.06 -0.76l-1.24 -0.50c-0.16 -0.19 -0.56 -0.65 -0.92 -1.18l0.00 0.00c-0.36 0.12 -0.98 -0.17 -1.17 0.21c-0.39 0.77 -0.50 -0.48 -0.84 0.07c-0.31 0.51 -0.24 0.04 -0.55 0.16c-0.15 0.06 -0.20 0.30 -0.36 0.30c-0.16 0.00 -0.27 -0.14 -0.46 -0.11c-0.21 0.03 -0.35 0.25 -0.58 0.20c-0.30 -0.06 -0.44 -0.18 -0.77 -0.12c-0.19 0.03 -0.54 0.26 -0.69 0.08c-0.63 -0.79 0.07 -0.94 -0.14 -1.60c-0.11 -0.35 -0.32 -0.50 -0.32 -0.91l-0.01 -0.01c-0.71 0.00 -0.66 0.87 -1.53 0.14l-0.75 0.02l0.00 0.00c-0.18 0.00 -0.32 0.07 -0.51 0.02c-0.25 -0.07 -0.33 0.02 -0.49 0.20c-0.52 0.19 -0.69 1.02 -1.01 1.02c-0.41 0.00 -0.66 -0.54 -1.11 -0.67c-0.37 -0.11 -0.08 -0.64 -0.48 -0.54c-0.27 0.07 -1.02 0.20 -1.02 0.52c0.00 0.85 -0.74 -0.09 -0.99 -0.10l-0.54 0.25l0.00 0.00c-0.05 0.61 -0.63 1.99 -0.79 2.25c-0.21 0.33 -0.65 0.08 -0.94 0.06c-0.35 -0.03 -0.48 0.35 -0.62 0.57c-0.08 0.13 -0.55 0.04 -0.72 0.04c-0.25 0.00 -0.25 0.19 -0.39 0.33c-0.14 0.14 -0.88 -0.20 -0.63 0.49c0.21 0.59 -0.38 1.21 -0.05 1.59c0.16 0.19 1.74 0.08 0.86 0.95c0.21 1.08 0.65 0.31 1.20 0.93c0.25 0.28 0.25 0.68 0.37 1.03c0.46 1.34 1.59 1.36 2.78 1.60c0.15 0.61 0.01 1.32 0.86 1.32c0.06 0.00 0.24 0.17 0.46 0.42l0.00 0.00l0.66 -0.58c0.55 -0.37 0.67 0.88 0.79 1.15c0.29 0.65 0.52 0.29 0.89 0.67c0.71 0.71 -0.13 1.25 1.36 1.43c0.74 0.09 1.16 0.39 2.01 0.35c0.62 -0.04 1.64 0.96 1.35 1.62c-0.19 0.42 -0.62 0.61 -0.69 1.10c-0.06 0.42 0.45 0.91 0.86 0.91c0.72 -0.07 0.75 0.64 1.29 0.64c0.28 0.00 0.98 0.23 1.12 -0.10c0.19 -0.44 -0.51 -1.48 0.39 -1.48c0.52 0.00 0.64 0.54 1.30 0.37l0.00 0.00z\"\n          },\n          48: {\n            name: \"Qu\\u1EA3ng Ng\\xE3i\",\n            path: \"m137.18 163.18c-0.03 -0.07 -0.07 -0.36 0.05 -0.36c0.05 0.00 0.09 0.02 0.14 0.02c0.12 0.01 0.24 -0.02 0.36 -0.02c0.15 0.01 0.09 0.23 0.05 0.31c-0.10 0.17 -0.34 0.20 -0.52 0.20l-0.09 -0.16zm0.89 1.06c-0.01 0.00 -0.05 0.02 -0.05 0.02c-0.13 0.00 -0.58 -0.05 -0.52 -0.28c0.07 -0.25 0.76 -0.31 0.97 -0.27c0.12 0.03 0.34 0.18 0.42 0.27c0.16 0.16 -0.41 0.21 -0.48 0.23l-0.34 0.03zm-8.53 14.58l0.61 -0.58c0.36 -0.25 0.36 -0.42 0.85 -0.40c1.28 0.05 0.62 -0.02 0.89 -1.03c0.06 -0.22 2.63 -0.86 3.04 -0.68l1.40 0.61c0.23 0.10 0.53 0.83 0.43 1.06l0.51 0.36l0.00 0.00c-0.00 -0.34 -0.20 -0.90 -0.20 -1.07c0.00 -0.44 0.25 -0.71 -0.06 -1.15c-0.42 -0.58 -0.75 -1.16 -1.10 -1.79c-0.42 -0.76 -0.39 -1.59 -0.76 -2.34c0.07 -0.70 -0.67 -1.65 -0.73 -2.48c-0.04 -0.52 -0.27 -1.00 -0.30 -1.54c-0.03 -0.49 0.73 -0.56 0.73 -1.00c-0.01 -0.00 -0.11 -0.08 -0.12 -0.10c-0.51 -0.10 -1.01 -0.70 -1.01 -1.21c0.00 -0.56 -0.19 -0.55 -0.62 -0.93c-0.25 -0.22 -0.06 -0.85 -0.36 -0.98c-0.24 -0.11 -0.53 0.22 -0.79 0.16c-0.15 -0.04 -0.35 -0.10 -0.53 -0.19l0.00 0.00c-0.76 0.76 -1.15 0.68 -2.08 0.86c-1.09 0.21 -1.69 0.72 -2.87 0.72c-0.60 0.00 -0.78 0.57 -1.45 0.35c-0.78 -0.26 -0.86 0.31 -1.18 0.68c-0.31 0.37 0.17 0.57 0.17 0.57c-0.10 0.12 -0.35 0.17 -0.35 0.32c0.04 0.01 0.12 0.19 0.15 0.20c0.00 0.83 -0.67 1.35 -0.99 2.08c-0.13 0.30 0.09 0.55 0.12 0.84l0.00 0.00l0.42 0.91l1.28 1.42c-0.01 0.02 0.39 0.26 0.44 0.35c0.50 0.79 0.43 0.94 1.30 1.48c0.64 0.39 0.77 -0.34 1.07 0.63c0.17 0.55 0.13 0.46 -0.12 0.90c-0.11 0.20 0.28 0.37 0.18 0.62c-0.07 0.17 -0.79 0.97 -0.11 0.97c0.40 0.00 0.66 0.21 0.66 0.62l0.00 0.00c0.38 0.03 0.64 0.19 0.79 0.54c0.05 0.13 0.10 0.32 0.26 0.35c0.08 0.01 0.40 -0.03 0.43 -0.12l0.00 0.00z\"\n          },\n          49: {\n            name: \"Qu\\u1EA3ng Ninh\",\n            path: \"m114.37 55.63c0.22 -0.07 0.80 -0.61 0.99 -0.54c0.00 0.21 -0.61 0.61 -0.79 0.70c-0.13 0.07 -0.24 0.18 -0.39 0.24c-0.27 0.10 -0.16 -0.04 -0.09 -0.23l0.27 -0.17zm2.66 -0.66c-0.20 0.12 -0.77 0.32 -0.92 0.07c-0.20 -0.33 0.60 -0.35 0.77 -0.38c0.33 -0.05 0.69 -0.17 1.02 -0.24c0.11 -0.03 0.53 -0.20 0.61 -0.10c0.15 0.18 -0.39 0.37 -0.49 0.41c-0.09 0.03 -0.21 0.14 -0.29 0.21c-0.07 0.07 -0.30 0.04 -0.41 0.08l-0.30 -0.04zm-9.27 7.48c-0.18 0.23 -0.24 0.10 -0.47 0.10c-0.41 0.00 -0.55 0.78 0.13 0.39c0.17 -0.09 0.38 -0.08 0.52 -0.19c0.16 -0.12 0.21 -0.21 -0.01 -0.30l-0.17 -0.01zm0.80 2.93c-0.14 -0.26 -0.34 -0.01 -0.31 0.20c0.01 0.10 0.10 0.24 0.20 0.26c0.10 0.02 0.18 -0.13 0.18 -0.20l-0.07 -0.26zm-0.96 -0.53c-0.06 -0.04 -0.10 -0.10 -0.17 -0.12c-0.14 -0.03 -0.35 0.08 -0.26 0.24c0.05 0.08 0.18 0.13 0.26 0.20c0.08 0.07 0.21 0.26 0.33 0.22c0.12 -0.04 0.12 -0.28 0.06 -0.36l-0.22 -0.17zm0.01 -1.07c-0.13 -0.06 -0.43 -0.14 -0.56 -0.07c-0.06 0.04 0.15 0.30 0.18 0.35c0.07 0.09 0.16 0.08 0.26 0.06c0.05 -0.01 0.16 0.05 0.21 0.06c0.10 0.03 0.27 0.03 0.35 -0.05c0.11 -0.09 0.09 -0.27 -0.07 -0.29l-0.39 -0.07zm3.12 -0.94c-0.10 0.21 -0.15 0.39 -0.32 0.58c-0.30 0.34 -0.61 0.36 -0.64 0.91c-0.01 0.11 -0.02 0.28 -0.06 0.38c-0.20 0.48 -0.08 0.41 0.14 0.02c0.14 -0.25 0.23 -0.53 0.41 -0.76c0.19 -0.25 0.37 -0.55 0.57 -0.80c0.06 -0.08 0.24 -0.45 0.02 -0.42l-0.11 0.08zm-1.42 0.08c0.42 -0.50 0.73 -1.10 1.17 -1.58c0.52 -0.56 0.28 0.44 0.24 0.69c-0.04 0.26 -0.05 0.63 -0.22 0.85c-0.13 0.16 -0.65 0.23 -0.87 0.32c-0.09 0.04 -0.98 0.44 -0.61 -0.02l0.29 -0.25zm1.37 -2.87c0.09 -0.20 0.28 -0.38 0.47 -0.50c0.13 -0.08 0.24 -0.07 0.22 0.10c-0.02 0.22 -0.20 0.45 -0.33 0.63c-0.10 0.13 -0.39 0.31 -0.39 0.03l0.02 -0.26zm0.70 1.21c0.06 -0.24 0.02 -0.64 0.14 -0.85c0.09 -0.16 0.38 -0.83 0.57 -0.83l0.01 0.01c0.00 0.29 -0.18 0.67 -0.24 0.97c-0.08 0.38 -0.29 0.75 -0.39 1.12c-0.04 0.14 -0.07 0.38 -0.18 0.47c-0.21 0.19 -0.00 -0.43 -0.01 -0.49l0.11 -0.39zm-3.32 -0.89c0.00 -0.68 0.60 -0.82 0.71 -1.32c0.03 -0.14 -0.08 -0.44 0.01 -0.53c0.26 -0.26 0.34 -0.53 0.43 -0.88c0.05 -0.17 0.15 -0.91 0.33 -0.90c0.40 0.03 0.68 1.33 1.23 1.33c0.33 0.00 1.14 -0.59 1.00 -0.01c-0.11 0.44 -1.80 1.43 -2.23 1.71c-0.31 0.20 -1.04 1.18 -1.39 0.97l-0.08 -0.39zm0.53 -2.83c0.27 -0.39 -0.35 -0.72 -0.29 -0.14c0.02 0.20 -0.03 0.27 -0.11 0.45c-0.03 0.06 -0.08 0.16 -0.08 0.23c0.00 0.08 0.04 0.11 0.06 0.17c0.12 0.03 0.35 -0.28 0.41 -0.40l0.02 -0.30zm6.85 4.02c0.03 -0.14 0.31 -0.47 0.43 -0.54c0.13 -0.07 0.36 -0.09 0.26 0.13c-0.07 0.16 -0.20 0.31 -0.31 0.44c-0.10 0.12 -0.15 0.31 -0.27 0.41c-0.05 0.04 -0.17 0.15 -0.24 0.12c-0.07 -0.04 0.01 -0.14 0.01 -0.20l0.11 -0.36zm-1.11 0.41c-0.08 -0.02 -0.41 -0.63 -0.23 -0.63c0.10 0.00 0.17 0.14 0.25 0.19c0.20 0.12 0.48 -0.02 0.48 0.33c0.00 0.33 -0.11 0.56 -0.30 0.81c-0.07 0.09 -0.33 0.14 -0.26 -0.01c0.06 -0.13 0.26 -0.29 0.12 -0.43l-0.05 -0.26zm-14.25 1.05c-0.03 -0.12 -0.17 -0.22 -0.29 -0.18c-0.13 0.03 -0.12 0.12 -0.14 0.23c-0.01 0.10 0.19 0.24 0.24 0.32c0.09 0.13 0.32 0.15 0.32 -0.05l-0.13 -0.32zm-7.07 -5.76c0.58 0.02 0.43 0.63 1.17 0.67c0.25 0.01 0.35 0.21 0.55 0.31c0.33 0.17 1.15 0.05 1.57 0.12c0.72 0.12 1.37 0.31 2.12 0.31c0.51 0.00 0.27 -0.34 0.35 -0.61c0.06 -0.21 0.51 0.05 0.65 0.10c0.02 0.00 0.06 0.00 0.07 0.01c0.16 -0.04 0.25 -0.15 0.44 -0.09c0.28 0.09 0.45 0.31 0.70 -0.03c0.37 -0.51 0.68 -0.81 0.56 -1.49c-0.14 -0.77 0.53 -0.55 0.91 -0.77l0.12 -0.26l0.00 0.00c0.08 -0.10 0.33 -0.51 0.48 -0.51c0.01 -0.02 0.44 -0.09 0.55 -0.36c0.26 -0.67 0.68 0.07 0.99 -0.02c0.23 -0.07 0.30 -0.27 0.57 -0.27c0.27 0.00 0.36 0.08 0.57 0.12c0.06 0.24 0.56 -0.09 0.63 -0.21c0.12 -0.22 -0.00 -0.58 -0.07 -0.80c-0.14 -0.44 -0.30 -0.77 -0.17 -1.28c-0.00 -0.03 -0.01 -0.19 -0.06 -0.20c0.00 -0.12 -0.22 -0.36 -0.26 -0.50c-0.16 -0.53 0.30 -0.35 0.55 -0.39c0.34 -0.05 0.34 -0.53 0.66 -0.53c0.02 -0.05 0.22 -0.02 0.27 -0.02c0.14 0.00 0.61 -0.19 0.75 -0.19l0.00 0.00c0.14 0.26 0.39 0.23 0.89 -0.43c1.07 -1.40 1.16 -0.04 1.35 0.72c0.20 0.05 0.82 0.35 0.91 0.10c0.05 -0.15 0.57 -0.97 0.70 -0.45c0.32 0.08 0.40 0.28 0.85 0.23c0.67 -0.06 2.89 -1.33 3.32 -0.73c0.40 0.55 0.81 -0.65 1.00 0.60c0.08 0.52 0.91 0.37 0.91 0.80c0.03 0.01 0.05 0.40 0.23 0.49c0.28 0.14 0.86 -0.19 1.17 -0.19c0.48 0.00 0.75 0.66 1.07 0.73l0.00 0.00c-0.56 0.22 -1.12 0.49 -1.38 0.41c-0.81 -0.26 -0.53 0.03 -0.87 0.55c-0.06 0.09 -0.37 0.63 -0.45 0.38c-0.04 -0.10 -0.03 -0.60 -0.12 -0.63c1.09 -1.47 -1.21 -0.68 -1.78 -0.60c-0.21 0.03 -0.67 -0.29 -0.75 0.01c-0.13 0.45 0.31 0.59 -0.04 1.11c-0.54 0.81 -0.69 0.91 -1.56 0.91c-0.34 0.00 -0.44 0.59 -0.77 0.78c-0.29 0.29 -0.17 0.67 -0.41 0.93c-0.24 0.27 -0.50 0.09 -0.70 0.32c-0.59 0.67 -0.42 -0.75 -1.07 -0.50c-0.37 0.14 -0.89 0.91 -1.28 0.82c-0.28 -0.06 -0.40 -0.17 -0.68 0.02c-0.43 0.30 -0.10 0.53 -0.10 0.87c0.00 0.39 -0.42 0.37 -0.20 0.80c0.14 0.28 0.49 0.38 0.29 0.75c-0.22 0.41 -0.09 0.65 -0.38 1.09c-0.23 0.35 -0.07 0.84 -0.15 1.29c-0.65 0.65 -0.92 0.15 -1.58 0.23c-0.73 0.08 -0.46 0.85 -1.00 1.18c-0.51 0.32 -0.52 0.02 -0.97 0.02c-0.19 0.00 -0.44 0.18 -0.61 0.12c-0.68 -0.24 -0.64 -0.67 -0.64 -1.30c0.00 -0.21 -0.72 -0.02 -0.83 0.06c-0.21 0.14 0.07 0.79 -0.25 0.64c-0.21 -0.09 -0.76 -0.30 -0.95 -0.20c-0.43 0.22 -0.64 0.60 -1.16 0.21c-0.07 0.21 -0.30 0.19 -0.30 0.66c0.07 0.15 0.03 0.18 0.00 0.29c-0.32 0.00 -0.63 -0.34 -0.50 0.35c0.04 0.19 0.12 0.82 0.20 0.93c0.46 0.59 0.11 0.81 -0.22 0.71l0.00 0.00c0.00 -0.63 -0.70 -0.90 -1.06 -1.26c-0.18 -0.18 -0.10 -0.42 -0.22 -0.58c0.00 -0.27 0.23 -0.49 0.23 -0.76c0.00 -0.26 0.01 -0.49 -0.07 -0.75c-0.20 -0.66 -0.76 -0.50 -1.30 -0.60c-0.31 -0.06 -0.67 -0.41 -0.98 -0.27c-0.25 0.11 -0.30 0.13 -0.49 -0.09l0.00 0.00c-0.16 -0.22 -0.22 -0.45 -0.48 -0.61c-0.32 -0.21 -0.80 -0.01 -1.17 0.01c-0.31 0.02 -0.37 -0.30 -0.68 -0.23c-0.60 0.13 -0.38 -0.14 -0.49 -0.56c-0.01 -0.00 -0.01 -0.00 -0.01 -0.01c-0.25 -0.06 0.46 -0.51 0.53 -0.62c0.15 -0.23 0.09 -0.66 0.13 -0.92l0.23 -0.88l0.00 0.00z\"\n          },\n          50: {\n            name: \"Qu\\u1EA3ng Tr\\u1ECB\",\n            path: \"m102.02 147.43l0.02 -0.86c0.52 -0.57 0.40 -0.58 0.51 -1.31c0.06 -0.43 0.62 -0.18 0.86 -0.20c0.92 -0.07 -0.79 -1.31 -0.73 -1.58c0.07 -0.28 0.37 -0.42 0.62 -0.33c0.43 0.15 0.94 -0.70 1.55 -0.70c0.69 0.00 1.90 0.66 2.20 -0.43c0.12 -0.44 -0.32 -0.64 0.02 -1.18c0.15 -0.24 0.62 -1.06 0.80 -1.24l0.00 0.00c-1.02 -0.94 -1.78 -2.13 -2.90 -2.83c-0.45 -0.63 -1.04 -1.08 -1.47 -1.69c-0.33 -0.47 0.30 -1.59 -0.27 -1.84c-0.64 -0.28 -1.40 -0.76 -2.04 -1.28l0.00 0.00c-0.09 0.35 -1.17 1.14 -1.51 1.21c-0.71 0.14 -0.29 0.88 -0.99 0.88c-0.58 0.00 -0.25 0.65 -0.43 0.87c-0.13 0.17 -0.30 0.14 -0.44 0.29c-0.20 0.20 -0.18 0.44 -0.29 0.69c-0.32 0.78 -0.99 -0.08 -1.37 -0.25c-0.68 -0.30 -1.37 1.13 -1.70 -0.50l-0.86 -0.16l-0.01 -0.01l0.01 0.01l-0.05 5.37c0.22 0.83 0.92 1.50 1.62 1.84c0.84 0.41 0.09 0.72 0.00 1.12c-0.10 0.43 0.75 1.37 0.97 1.69c0.70 1.06 1.41 -0.44 1.87 -0.56c0.00 -0.36 0.45 -1.76 0.87 -1.16c0.14 0.20 0.54 0.22 0.54 0.53c0.00 0.17 -0.35 0.43 -0.32 0.54c0.11 0.42 0.45 1.78 1.04 1.93c0.74 0.19 0.80 1.95 1.69 1.06c0.06 0.04 0.12 0.06 0.18 0.09l0.00 0.00z\"\n          },\n          51: {\n            name: \"S\\xF3c Tr\\u0103ng\",\n            path: \"m94.07 283.03c-0.01 -0.01 -0.03 -0.02 -0.04 -0.04c-0.11 -0.05 -0.15 -0.48 -0.09 -0.58c0.10 -0.15 0.28 -0.26 0.39 -0.41c0.24 -0.32 0.51 -0.76 0.97 -0.76c0.45 0.00 0.00 0.42 -0.10 0.52c-0.20 0.20 -0.13 0.21 -0.06 0.42c0.05 0.16 -0.49 0.22 -0.54 0.46c-0.05 0.25 0.15 0.49 -0.33 0.49l-0.21 -0.10zm-12.69 -10.38c0.85 -0.30 1.73 -0.58 2.64 -0.87l2.72 -0.88c0.21 -0.07 1.18 -0.57 0.75 -0.84c-0.32 -0.20 -0.78 -0.47 -0.24 -0.86c0.43 -0.22 0.31 -0.65 0.62 -0.82c0.42 -0.23 1.11 0.00 1.11 -0.91c0.00 -0.44 0.27 -0.67 0.56 -0.64l0.00 0.00c-0.09 -0.35 -1.20 -1.16 -1.48 -1.34c-0.65 -0.40 -1.07 -1.16 -1.79 -1.60c-0.46 -0.29 -1.03 -1.07 -1.38 -1.53l-1.01 -1.22l0.00 0.00l-1.28 -0.78l0.00 0.00c-0.38 0.13 -0.78 2.54 -0.93 2.98c-0.30 0.90 -1.64 1.13 -2.22 1.85c-0.40 0.50 -1.58 0.68 -2.16 0.90l-0.69 0.26l0.00 0.00l-0.11 2.47c0.02 0.01 0.01 0.01 0.01 0.04c0.21 0.07 0.11 0.74 0.64 0.74c0.36 0.00 0.45 -0.24 0.77 0.08c0.29 0.29 0.35 0.05 0.63 0.18c0.22 0.10 0.35 0.39 0.62 0.43c0.25 0.04 0.38 -0.17 0.57 -0.31c0.15 -0.11 0.91 -0.19 1.04 -0.07c0.17 0.15 0.08 0.67 0.46 0.32c0.35 -0.32 0.87 -0.09 0.64 0.36c-0.09 0.19 -0.38 0.11 -0.51 0.21c-0.25 0.19 -0.07 0.29 -0.18 0.54l0.17 1.30l0.00 0.00z\"\n          },\n          52: {\n            name: \"S\\u01A1n La\",\n            path: \"m65.17 59.73l-0.66 0.23c-0.03 0.12 -0.29 0.44 -0.26 0.49c-0.11 0.03 0.19 0.44 0.23 0.51c0.28 0.58 1.08 1.96 1.63 2.30c0.61 0.38 0.20 1.62 0.56 1.80c0.97 0.48 -0.11 0.51 -0.02 1.03c0.06 0.34 0.37 0.74 -0.33 0.50c-0.45 -0.15 -1.26 -0.46 -1.74 -0.33c-1.08 0.28 -0.29 0.75 -0.48 1.18l-0.25 0.80l0.00 0.00l-0.39 0.21c-0.28 0.22 -0.30 0.49 -0.32 0.81c-0.02 0.19 -0.24 0.30 -0.41 0.30c-0.10 0.00 -0.18 -0.04 -0.27 -0.05c-0.07 -0.01 -0.48 -0.11 -0.49 -0.16c-0.13 0.00 -0.41 -0.22 -0.54 -0.29c-0.54 -0.30 -0.71 -0.58 -1.04 -1.09l0.00 0.00c0.00 -0.05 0.01 -0.09 0.01 -0.12l-0.01 -0.01c-0.07 0.00 -0.19 -0.03 -0.25 -0.06c-0.03 -0.02 -0.22 -0.03 -0.23 -0.05c-0.50 0.00 -1.73 -1.01 -1.89 -1.52c-0.15 -0.59 -1.14 -0.06 -1.47 -0.42c-0.51 -0.57 0.11 -0.79 -0.82 -1.05c-0.64 -0.18 -0.70 -2.21 -1.99 -1.23c-0.39 -0.30 -0.71 -1.17 -1.54 -0.95c-0.75 0.19 -0.70 -1.17 -1.70 -0.04c-0.14 0.16 -0.06 0.47 -0.26 0.67c-0.40 0.41 -1.05 0.00 -1.61 0.32c-0.50 0.50 -0.64 0.03 -1.10 0.25c-0.11 0.06 -0.71 1.31 -0.89 0.57c-0.16 0.00 -0.33 0.04 -0.48 0.04c-0.06 0.22 0.07 0.56 -0.14 0.72c-0.31 0.22 -0.30 0.23 -0.26 0.62c0.10 1.04 -0.83 0.62 -0.92 1.05c-0.06 0.28 0.36 0.89 -0.06 1.05c-0.78 0.30 -0.71 0.11 -1.10 -0.51c-0.22 -0.35 -0.42 -0.32 -0.75 -0.47c-0.45 -0.20 -0.06 -0.46 -0.81 -0.38c-0.51 0.00 -1.18 0.03 -1.38 -0.58c-0.11 -0.32 -0.66 -1.71 -0.98 -0.53c-0.22 0.82 -2.04 -0.45 -2.57 -0.45c-1.22 0.00 -2.01 -0.39 -2.62 -1.02l0.00 0.00l1.35 -0.40c0.19 -0.07 0.25 -0.04 0.44 -0.04c0.19 0.00 0.16 -0.19 0.24 -0.21c-0.20 -0.79 -0.14 -0.18 0.15 -0.78c0.10 -0.20 -0.01 -0.61 -0.15 -0.78c-0.22 -0.25 0.23 -0.29 0.08 -0.62c-0.06 -0.14 -0.41 -0.79 -0.01 -0.66c0.31 0.11 -0.19 -0.91 0.71 -0.45c0.36 0.18 0.46 0.55 0.98 0.55c1.35 0.00 0.24 -0.68 0.19 -1.23c-0.03 -0.28 0.35 -0.50 0.52 -0.64c0.17 -0.14 0.20 -0.97 0.20 -1.21c0.18 -0.41 0.05 -2.26 -0.74 -1.67c-0.04 -0.03 -0.59 -0.22 -0.46 -0.42c0.04 -0.06 0.65 -0.54 0.42 -0.54c-0.03 -0.13 -0.58 -0.59 -0.70 -0.76c-0.49 -0.70 1.46 -0.25 1.75 -0.47c0.43 -0.32 -0.02 -0.77 0.01 -1.23c0.04 -0.53 0.37 -0.33 0.69 -0.33c0.20 0.00 0.90 -0.90 0.86 -1.04c-0.09 -0.33 0.34 -0.47 0.32 -0.79c-0.02 -0.39 -0.25 -0.62 0.20 -0.87c0.15 -0.19 0.03 -0.29 0.31 -0.29c0.11 0.00 0.33 -0.04 0.33 -0.17c-0.02 -0.01 -0.00 -0.00 -0.02 -0.01c0.00 -0.24 -0.57 -0.46 -0.57 -0.90c0.00 -0.29 -0.26 -0.68 -0.38 -0.95c-0.21 -0.47 -0.21 -1.04 -0.58 -1.46c-0.14 -0.16 -0.24 -0.36 -0.41 -0.53c-0.37 -0.37 -0.11 -0.48 -0.11 -0.86l0.01 -0.01l0.29 -0.53l0.00 0.00c0.43 -0.60 0.49 -1.61 1.43 -0.84c0.30 0.25 0.75 0.25 1.04 0.48c0.15 0.12 0.28 0.19 0.43 0.36c0.04 0.04 0.05 0.19 0.06 0.26c0.01 0.06 0.08 0.27 0.06 0.27c0.17 0.14 0.80 1.22 0.73 1.47c-0.22 0.73 -0.57 0.97 0.32 1.18c0.38 0.09 0.40 0.35 0.57 0.62c0.35 0.54 0.89 0.33 1.23 1.13c0.37 0.88 0.75 0.27 1.30 0.27l0.00 0.00c0.37 0.05 0.33 0.36 0.62 0.48c0.42 0.17 0.88 -0.20 1.37 0.10c0.33 0.20 0.47 0.29 0.86 0.37c0.33 0.07 0.64 -0.03 0.95 -0.13c0.22 -0.07 0.46 0.01 0.69 0.10c0.27 0.10 0.61 -0.17 0.87 -0.27c0.34 -0.14 0.55 0.00 0.88 0.00c0.31 -0.04 1.22 0.05 1.22 0.42c-0.84 0.27 -0.77 0.70 -0.77 1.25c-0.63 0.21 0.09 2.03 0.27 2.45c0.29 0.66 0.48 0.48 1.06 0.61c0.80 0.18 0.99 1.34 1.86 0.95c0.55 -0.24 0.76 -1.23 1.41 -0.97c0.43 0.18 0.76 -0.27 1.20 0.13c0.97 0.87 1.19 -0.50 1.75 0.06c0.24 0.24 0.46 1.28 0.86 1.28c0.04 0.12 0.67 0.02 0.77 0.02l0.00 0.00c0.23 0.30 0.55 0.50 0.55 0.91c0.00 0.53 0.07 0.99 0.18 1.48c0.05 0.22 -0.22 0.50 -0.06 0.66c0.09 0.09 0.19 0.36 0.31 0.39c-0.01 0.02 0.36 0.24 0.37 0.27c0.03 0.12 0.30 0.24 0.30 0.36l0.00 0.00z\"\n          },\n          53: {\n            name: \"T\\xe2y Ninh\",\n            path: \"m87.47 242.30l0.89 -0.13c0.20 -0.06 0.54 0.03 0.67 -0.15c0.09 -0.13 -0.18 -0.30 -0.06 -0.47c0.18 -0.24 0.47 -0.33 0.72 -0.14c0.12 0.09 0.23 0.19 0.36 0.26c0.05 0.03 0.31 0.14 0.30 0.17c0.04 0.03 0.08 0.06 0.13 0.05l0.00 0.00c0.10 -0.04 0.17 -0.11 0.28 -0.13c0.53 -0.09 0.63 -0.10 0.63 -0.68c0.00 -0.36 0.28 -0.80 0.43 -1.13l0.07 -0.47l0.00 0.00c-0.02 -0.07 -0.13 -0.16 -0.15 -0.26c-0.03 -0.10 -0.04 -0.21 -0.04 -0.32c-0.01 -0.25 -0.48 -0.27 -0.63 -0.40c-0.15 -0.14 -0.14 -0.36 -0.14 -0.56c0.00 -0.45 -0.71 -0.38 -0.61 -0.79c0.11 -0.47 -0.28 -0.51 -0.14 -0.96c0.09 -0.29 0.01 -0.44 0.06 -0.72c0.06 -0.34 0.20 -0.67 0.24 -1.03c0.08 -0.59 0.36 -0.56 0.73 -0.87l0.36 -0.47l0.00 0.00c0.00 -0.45 0.12 -0.85 0.58 -1.00c0.66 -0.20 0.70 -0.82 0.21 -1.26c-0.14 -0.13 -0.10 -0.26 -0.14 -0.44l-0.40 -0.54l0.00 0.00c-0.45 0.40 -1.37 -0.40 -2.05 -0.16c-0.92 0.33 -0.58 -0.09 -1.13 -0.43c-0.32 -0.20 -1.42 -0.60 -1.74 -0.49c-0.48 0.17 -0.78 0.05 -1.12 -0.29c-0.20 -0.20 -0.98 -0.67 -1.22 -0.29c-0.63 1.03 -0.65 2.63 -2.17 1.96c-0.58 -0.26 -1.26 0.38 -1.45 0.85c0.17 0.12 -0.12 0.66 0.25 0.84c0.18 0.09 0.53 0.10 0.63 0.31c0.17 0.35 0.07 1.57 0.25 1.60c0.75 0.11 0.09 0.48 -0.07 0.81c-0.28 0.57 0.01 0.95 -0.12 1.60c0.00 0.30 -0.37 0.90 0.20 0.95c0.35 0.04 0.50 -0.01 0.50 0.42c0.00 0.69 0.91 0.88 1.41 0.88c0.60 0.00 0.98 2.49 2.42 1.95c0.78 -0.30 1.06 1.26 1.06 1.91l0.00 0.00z\"\n          },\n          54: {\n            name: \"Th\\xe1i B\\xecnh\",\n            path: \"m87.58 71.26c0.20 0.06 0.54 -0.06 0.41 0.35c-0.27 0.86 -0.06 0.76 0.78 0.79c0.82 0.04 0.11 0.53 -0.04 0.78c-0.18 0.30 -0.15 0.70 0.29 0.60c0.42 -0.09 1.06 -0.99 1.32 -0.46c0.09 0.19 0.40 0.24 0.57 0.28c0.22 0.06 0.32 0.38 0.46 0.42c0.13 0.24 0.38 0.63 0.69 0.64c0.39 0.02 0.87 -0.71 1.26 -0.39c0.29 0.24 0.75 0.49 1.05 0.72l0.00 0.00c-0.02 -0.40 -0.06 -0.78 -0.11 -0.92c-0.11 -0.36 -0.05 -0.79 -0.14 -1.17c-0.11 -0.43 0.40 -0.57 0.32 -0.88c-0.31 0.00 0.02 -0.60 -0.06 -0.76c-0.24 -0.47 -0.44 -0.52 -0.14 -1.18c0.35 -0.31 0.74 -1.18 1.17 -1.22c0.12 -0.01 0.22 -0.04 0.30 -0.07l0.00 0.00c-0.17 -0.17 -0.68 -0.43 -0.92 -0.51c-0.13 -0.05 -0.31 0.08 -0.42 0.13c-0.26 0.12 -0.77 0.49 -1.05 0.35c-0.41 -0.19 -0.27 -0.19 -0.69 0.01c-0.19 0.09 -0.48 -0.50 -0.55 -0.66c-0.11 -0.27 -0.68 -0.76 -0.63 -0.98c0.08 -0.34 0.20 -0.31 -0.14 -0.53l0.00 0.00c-0.02 0.00 -0.04 0.02 -0.05 0.04c-0.10 0.02 -0.39 0.27 -0.51 0.33c-0.28 0.14 -0.51 0.03 -0.78 0.07c-0.13 0.02 -0.24 0.12 -0.36 0.17c-0.22 0.10 -0.29 -0.20 -0.46 -0.18c-0.17 0.01 -0.20 0.18 -0.34 0.20l0.00 0.00l-0.09 0.41c-0.18 0.14 -0.45 0.50 -0.66 0.55c-0.26 0.07 -0.46 -0.29 -0.76 -0.13c-0.22 0.12 -0.23 0.10 -0.42 -0.05c-0.17 -0.14 -0.40 0.06 -0.47 0.24c-0.02 0.05 -0.01 0.26 0.04 0.27c0.00 0.07 -0.22 0.08 -0.29 0.16l0.00 0.00c0.33 0.18 0.38 0.27 0.48 0.61c0.09 0.31 0.63 0.48 0.76 0.88c0.12 0.36 0.20 0.72 0.20 1.10l0.00 0.00z\"\n          },\n          55: {\n            name: \"Th\\xe1i Nguy\\xean\",\n            path: \"m82.24 55.59c0.09 -0.16 -0.02 -0.25 0.05 -0.37c0.04 -0.08 0.31 0.06 0.38 -0.14c0.04 -0.12 0.15 -0.34 0.17 -0.39c0.49 0.16 0.51 -0.10 0.51 -0.55c0.00 -1.10 0.90 0.67 1.25 -0.12c0.49 -1.11 0.09 -2.23 0.52 -3.34c0.16 -0.41 0.55 -1.09 1.01 -0.68c0.34 0.30 0.82 0.06 1.19 0.43l0.00 0.00l0.35 -0.41c0.20 -0.47 0.15 -0.94 0.54 -1.32c0.42 -0.42 -0.93 -0.69 -1.13 -0.81c-0.26 -0.16 -0.53 -0.57 -0.80 -0.78c-0.03 -0.02 -0.20 -0.13 -0.18 -0.14c-0.23 -0.23 0.00 -0.81 0.14 -0.99c0.25 -0.33 -0.28 -0.63 -0.10 -0.87c0.20 -0.26 0.17 -0.29 0.30 -0.61l-0.49 -0.31l0.00 0.00c-0.42 -0.06 -0.60 -0.15 -0.97 -0.27c-0.51 -0.18 -0.39 0.41 -0.74 0.36c-0.50 -0.08 -1.50 0.90 -1.99 1.27c-0.50 0.37 -0.98 0.12 -1.31 0.72c-0.58 1.05 -0.99 0.28 -0.86 -0.49c0.14 -0.84 -0.07 -1.30 -0.07 -2.04c0.00 -0.94 -0.07 -0.48 -0.67 -0.95c-1.05 -0.84 -0.54 -0.12 -1.50 0.05c-0.96 0.16 -0.77 0.79 -1.57 1.22l0.00 0.00c0.32 1.01 -0.62 0.95 -0.43 1.64c0.17 0.60 -0.55 0.24 -0.55 0.95c0.00 0.66 0.64 0.51 0.64 0.90c0.00 0.26 -0.54 1.11 -0.66 1.43c-0.21 0.59 0.25 1.25 0.55 1.73l0.46 0.43l0.00 0.00c0.04 0.00 1.17 0.89 1.22 0.97c0.23 0.43 0.24 0.84 0.76 1.05c0.24 0.10 0.54 0.14 0.73 0.35c0.15 0.17 0.10 0.55 0.39 0.58c1.03 0.11 0.44 0.35 0.99 0.99l0.00 0.00c0.23 -0.30 0.17 -0.45 0.61 -0.45c0.03 0.08 0.33 0.02 0.41 0.05c0.30 0.11 0.19 0.32 0.25 0.58c0.02 0.08 0.12 0.24 0.18 0.27c0.18 0.11 0.18 0.11 0.39 0.11l0.01 -0.01l0.00 0.00z\"\n          },\n          56: {\n            name: \"Thanh H\\xf3a\",\n            path: \"m82.67 91.85c-0.06 -0.13 -0.04 -0.53 0.19 -0.38c0.08 0.06 0.17 0.21 0.18 0.31c0.03 0.14 -0.17 0.20 -0.27 0.21l-0.11 -0.14zm-16.46 -11.69l1.12 0.73c0.29 0.01 0.54 0.20 0.87 0.20c0.23 0.00 0.47 -0.04 0.68 -0.02c0.32 0.03 0.67 0.30 1.08 0.33c0.35 0.03 0.33 0.64 0.33 0.85c-0.26 0.07 -0.63 0.36 -0.77 0.39c0.00 0.27 -0.25 0.45 -0.25 0.78c0.00 0.64 -0.04 0.85 0.48 1.11c0.24 0.12 0.10 0.37 0.02 0.55c-0.16 0.38 0.10 0.35 0.27 0.60c0.42 0.08 0.48 0.56 0.83 0.66c1.08 0.30 0.52 -0.01 0.88 1.04c0.16 0.46 -0.05 1.22 0.06 1.74c0.25 1.14 0.64 -0.39 0.95 -0.62c0.57 -0.41 0.49 0.31 0.62 0.73c0.13 0.42 1.41 1.04 1.81 0.94c0.81 -0.19 1.10 -0.68 1.55 0.33c0.57 1.30 1.21 0.62 1.76 1.62c0.45 0.81 0.27 0.49 1.01 0.49c0.50 0.00 1.00 0.30 1.46 0.30l0.00 0.00c0.11 -0.18 0.11 -0.36 -0.21 -0.51c-0.44 -0.22 -0.54 -1.56 -0.46 -1.58c0.02 -0.10 0.56 -0.00 0.56 -0.26c0.00 -0.77 -0.46 -1.30 -0.12 -2.22c0.18 -0.43 0.98 -2.88 1.24 -2.97c0.50 -0.18 0.31 -0.94 0.74 -1.37c0.34 -0.34 -0.04 -0.70 0.15 -1.05c0.18 -0.33 0.48 -0.41 0.48 -0.84c0.00 -0.93 0.24 -0.65 0.92 -0.94c0.14 -0.06 0.24 -0.08 0.31 -0.06l0.00 0.00l0.11 -0.63c0.10 -0.34 0.40 -0.46 0.55 -0.79c0.16 -0.34 0.33 -0.66 0.22 -0.98c-0.47 0.00 -0.93 0.11 -1.45 0.08c-0.53 -0.03 -1.08 -0.46 -1.51 -0.77c-0.15 -0.48 -0.82 -0.41 -1.13 -0.72c-0.58 -0.58 -1.18 -0.59 -1.81 -0.94c-0.50 -0.27 -0.93 -1.33 -1.44 -1.39c-0.29 -0.17 -0.56 -0.50 -0.88 -0.66c-0.40 -0.19 -0.80 -0.17 -0.91 -0.71l0.07 -0.39l0.00 0.00c-0.15 -0.15 -0.69 0.14 -0.97 0.04c-0.62 -0.24 -0.64 -0.25 -1.32 -0.25c-0.71 0.00 -2.41 -0.59 -2.58 -1.34c-0.14 -0.65 -0.67 -1.10 -1.30 -1.15c-0.62 0.00 -0.36 -0.44 -0.82 -0.72c-0.19 -0.12 -0.80 -0.45 -1.01 -0.45c-0.27 0.00 -0.57 0.27 -0.83 0.34c-0.08 0.02 -0.83 -0.33 -0.86 -0.38c-0.17 -0.27 -0.26 -0.91 -0.52 -1.10c-0.60 -0.44 -0.83 -0.52 -1.47 -0.31l-0.91 0.38l0.00 0.00l-0.39 0.21c-0.28 0.22 -0.30 0.49 -0.32 0.81c-0.02 0.19 -0.24 0.30 -0.41 0.30c-0.10 0.00 -0.18 -0.04 -0.27 -0.05c-0.07 -0.01 -0.48 -0.11 -0.49 -0.16c-0.13 0.00 -0.41 -0.22 -0.54 -0.29c-0.54 -0.30 -0.71 -0.58 -1.04 -1.09l0.00 0.00c-0.02 0.21 -0.07 0.58 -0.16 0.61c0.00 0.44 -0.69 0.41 -0.69 0.95c0.00 0.41 -0.72 1.08 -1.17 0.95c-0.21 -0.06 -0.74 -0.33 -0.88 -0.19c-0.22 0.22 -0.20 0.45 -0.61 0.45c-0.01 0.04 -0.04 0.05 -0.04 0.12c-0.07 0.02 -0.09 0.23 -0.32 0.23c-0.01 0.04 -0.14 0.05 -0.19 0.05c-0.01 0.02 -0.00 0.00 -0.01 0.02l-0.02 0.00c-0.13 0.39 -0.64 0.73 0.15 0.94c0.61 0.16 1.60 0.84 2.22 0.60c0.80 -0.32 1.51 -0.48 1.80 0.41l1.02 0.53c0.45 0.23 0.36 0.59 0.24 0.95c-0.57 0.00 -0.43 0.22 -0.66 0.60l0.00 0.82c0.44 0.15 0.94 0.56 1.41 0.61c0.31 0.03 0.61 -0.67 1.29 -0.67c0.01 0.04 0.07 0.01 0.08 0.05c0.15 0.00 1.15 0.59 1.19 0.72c1.07 0.00 0.45 0.43 0.45 0.91c0.24 0.08 0.63 0.77 0.93 0.87c0.00 0.26 -0.52 0.19 -0.33 0.61c0.18 0.40 0.27 0.82 0.12 1.03l0.00 0.00z\"\n          },\n          57: {\n            name: \"Th\\u1EEBa Thi\\xEAn - Hu\\u1EBF\",\n            path: \"m115.40 151.78c0.09 -0.16 -0.01 -0.37 0.10 -0.56c0.08 -0.14 0.22 -0.28 0.33 -0.39c-0.04 -0.10 0.41 -1.05 0.44 -1.25c0.06 -0.42 0.45 -0.73 0.81 -0.42c0.45 0.39 0.40 0.12 0.74 -0.05c0.38 -0.19 0.86 0.20 1.27 0.33c0.44 0.13 1.51 -0.18 1.94 -0.34l0.00 0.00c-0.23 -0.15 -0.37 -0.43 -0.62 -0.35c-0.25 0.09 -0.60 0.34 -0.83 0.08c-0.62 -0.69 0.35 0.05 0.07 -0.74c-0.11 -0.32 -0.41 -1.08 -0.66 -1.27c-1.34 1.60 -5.05 -4.14 -6.74 -4.14c0.00 0.17 1.73 1.51 1.99 1.71c0.54 0.40 0.93 1.31 1.47 1.78c0.44 0.39 1.33 0.42 1.47 1.06c0.18 0.86 -0.70 0.08 -1.02 0.27c-0.38 0.24 -1.15 -0.29 -0.54 -0.79c0.41 -0.33 -2.00 -2.61 -2.41 -2.94c-0.33 -0.27 -0.59 0.35 -0.64 -0.43c-0.05 -0.82 -1.78 -0.98 -2.50 -1.18c-0.18 -0.32 -1.31 -0.59 -1.18 -1.10c0.04 -0.14 0.48 0.16 0.54 0.19l1.49 0.90c0.15 0.09 1.30 0.32 1.31 0.41c0.12 -0.09 -0.67 -0.48 -0.80 -0.57c-0.44 -0.32 -1.05 -0.66 -1.42 -1.04c-0.38 -0.38 -0.88 -0.45 -1.32 -0.74c-0.28 -0.19 -0.55 -0.40 -0.79 -0.63l0.00 0.00c-0.18 0.18 -0.65 1.00 -0.80 1.24c-0.34 0.54 0.10 0.74 -0.02 1.18c-0.30 1.09 -1.51 0.43 -2.20 0.43c-0.61 0.00 -1.12 0.85 -1.55 0.70c-0.25 -0.09 -0.55 0.06 -0.62 0.33c-0.06 0.26 1.64 1.51 0.73 1.58c-0.24 0.02 -0.79 -0.22 -0.86 0.20c-0.11 0.73 0.01 0.75 -0.51 1.31l-0.02 0.86l0.00 0.00c0.90 0.35 2.22 -0.27 1.99 1.59c-0.20 0.59 0.40 1.62 1.04 1.15c0.25 0.19 0.68 -0.01 1.11 0.48c0.30 0.35 0.94 1.36 1.43 1.16c0.54 -0.22 0.37 -0.10 0.80 -0.10c0.23 0.00 0.46 -0.39 0.79 -0.39c0.01 0.02 -0.00 0.01 0.02 0.01c0.09 0.26 -0.04 0.58 -0.04 0.87c0.07 0.02 0.09 0.13 0.08 0.28l0.00 0.00l0.54 -0.25c0.25 0.01 0.99 0.94 0.99 0.10c0.00 -0.31 0.76 -0.45 1.02 -0.52c0.40 -0.10 0.11 0.43 0.48 0.54c0.45 0.14 0.70 0.67 1.11 0.67c0.33 0.00 0.50 -0.83 1.01 -1.02c0.16 -0.18 0.24 -0.27 0.49 -0.20c0.19 0.05 0.33 -0.02 0.51 -0.02l0.00 0.00z\"\n          },\n          58: {\n            name: \"Ti\\u1EC1n Giang\",\n            path: \"m83.28 249.85l-0.04 0.66l-0.68 0.79l-0.63 0.66l-0.25 0.62l-0.47 0.12l-0.10 0.72l0.46 0.43c0.11 0.09 0.24 0.16 0.37 0.22c0.10 0.04 0.24 0.08 0.32 0.14c0.05 0.04 0.16 0.13 0.17 0.19l0.00 0.00c0.24 -0.05 0.42 -0.01 0.64 -0.15c0.24 -0.15 0.45 -0.41 0.69 -0.56c0.12 -0.07 0.61 -0.14 0.67 0.02c0.07 0.00 0.40 0.21 0.46 0.27l0.00 0.00c0.86 0.08 0.82 0.62 1.91 0.29c0.59 -0.18 1.20 -0.49 1.79 -0.62c0.39 -0.09 0.91 0.09 1.19 0.00c0.86 -0.27 0.76 -0.52 1.70 -0.16c0.24 0.09 0.55 0.33 0.74 0.50c0.33 0.30 0.77 0.32 1.16 0.49c0.35 -0.09 0.91 0.17 1.26 0.29c0.54 0.18 1.17 0.21 1.63 0.50c0.19 0.12 0.39 0.27 0.55 0.43c0.20 0.20 0.54 0.47 0.77 0.66l0.00 0.00c-0.03 -0.26 0.74 -0.21 0.46 -0.61c-0.33 -0.48 -0.72 -0.20 -0.44 -0.98c0.18 -0.51 -0.07 -1.13 0.12 -1.64c0.10 -0.35 -0.11 -0.58 -0.11 -0.90c0.00 -0.13 0.02 -0.20 0.05 -0.23l0.00 0.00l-0.85 -1.24l0.00 0.00c-0.06 0.09 -0.15 0.16 -0.24 0.21c-0.17 0.08 -0.70 1.04 -0.88 0.72c-0.20 -0.34 -0.19 -1.00 -0.57 -0.39c-0.17 0.28 -0.44 0.20 -0.66 0.38c-0.41 0.34 -0.22 0.48 -0.80 0.26c-0.51 -0.19 -0.67 -0.23 -1.07 0.17c-0.09 0.30 -0.67 -0.01 -0.95 -0.07c-0.81 -0.17 1.16 -0.98 -0.49 -1.10c-0.76 -0.05 -1.21 -2.00 -2.08 -1.94l-2.49 0.18c-0.39 0.03 -0.78 -0.17 -0.66 0.41c0.09 0.45 -0.32 0.42 -0.70 0.44l-1.97 -0.21l0.00 0.00z\"\n          },\n          59: {\n            name: \"Tr\\xe0 Vinh\",\n            path: \"m89.50 258.20l1.62 1.48l2.23 1.53l0.64 1.19l0.00 0.00c-0.57 -0.29 -1.05 0.97 -0.23 1.48c0.39 0.24 0.31 0.56 0.36 1.03c0.21 1.89 -3.00 4.04 -4.10 2.26c-0.13 -0.21 -0.31 -0.32 -0.48 -0.33l0.00 0.00c-0.09 -0.35 -1.20 -1.16 -1.48 -1.34c-0.65 -0.40 -1.07 -1.16 -1.79 -1.60c-0.46 -0.29 -1.03 -1.07 -1.38 -1.53l-1.01 -1.22l0.00 0.00c0.28 -0.18 0.70 -0.18 0.91 -0.47c0.28 -0.39 0.31 -0.20 0.68 -0.30c0.20 -0.05 0.32 -0.32 0.52 -0.35c0.50 -0.06 0.55 0.50 0.77 -0.23c0.10 -0.32 0.09 -0.68 0.37 -0.90c0.30 -0.23 0.65 0.15 1.07 0.11c0.17 -0.02 0.17 -0.42 0.25 -0.55c0.11 -0.19 0.42 -0.34 0.43 -0.36c0.13 0.10 0.45 0.10 0.62 0.08l0.00 0.00z\"\n          },\n          60: {\n            name: \"Tuy\\xean Quang\",\n            path: \"m72.67 52.31c0.37 -0.22 0.55 -0.51 0.97 -0.14c0.18 0.16 0.46 0.21 0.68 0.07c0.28 -0.17 0.35 -0.21 0.66 -0.29c0.30 -0.08 0.58 0.10 0.82 -0.20c0.10 -0.13 0.51 -0.48 0.51 -0.64l0.00 0.00l-0.46 -0.43c-0.30 -0.48 -0.76 -1.15 -0.55 -1.73c0.11 -0.32 0.66 -1.18 0.66 -1.43c0.00 -0.39 -0.64 -0.24 -0.64 -0.90c0.00 -0.71 0.72 -0.35 0.55 -0.95c-0.19 -0.69 0.75 -0.63 0.43 -1.64l0.00 0.00c-0.01 -0.05 -0.45 -0.40 -0.52 -0.49c-0.12 -0.15 -0.25 -0.33 -0.33 -0.51c-0.19 -0.41 -0.60 -0.56 -0.46 -1.12c0.07 -0.31 -0.04 -0.45 -0.06 -0.74c-0.03 -0.44 0.32 -0.67 0.32 -1.05c-0.35 -0.09 -0.37 -0.15 -0.54 -0.48c-0.27 -0.74 -0.66 -1.51 0.46 -1.73c0.08 -0.34 0.01 -1.05 0.51 -1.15c0.08 -0.30 -0.04 -0.59 0.06 -0.88c0.20 -0.55 0.59 -0.23 0.75 -0.47c0.26 -0.38 -0.37 -1.37 0.58 -1.68c0.00 -0.02 -0.01 -0.02 0.01 -0.02c0.00 -0.02 0.00 -0.04 0.02 -0.05c0.00 -0.50 -0.59 -1.75 -1.06 -1.91c0.00 -0.03 -0.05 -0.17 -0.06 -0.20c0.03 -0.02 0.02 -0.16 0.01 -0.19l-0.73 -0.08c0.07 0.02 -0.16 0.26 -0.19 0.29c-0.11 0.08 -0.22 0.14 -0.33 0.20c-0.22 0.13 -0.45 0.12 -0.69 0.06c-0.56 -0.13 -0.82 -0.51 -1.24 -0.67c-0.38 -0.14 -0.52 0.51 -0.89 0.45c-0.49 -0.08 -0.56 -0.62 -1.10 -0.78c-0.34 -0.10 -1.49 -0.63 -1.70 -0.38c-0.16 0.18 0.27 0.88 0.21 1.19c-0.07 0.40 -0.55 0.49 -0.56 0.87l-0.02 1.35l-0.04 0.12c0.22 0.52 -0.35 0.76 -0.35 1.16c0.00 0.51 0.31 0.44 -0.26 0.58c-0.07 0.34 0.19 0.90 -0.37 0.78c-0.45 -0.10 0.04 0.68 -0.08 0.98c-0.02 -0.01 -0.11 0.18 -0.14 0.23c-0.06 0.09 -0.15 0.14 -0.26 0.14c-0.23 0.02 -0.44 -0.05 -0.57 -0.23c-0.25 -0.35 -0.38 -0.56 -0.85 -0.49c-0.38 0.06 -0.43 -0.31 -0.75 -0.31c-0.11 0.32 0.15 0.46 0.17 0.75c0.02 0.36 -0.17 0.36 -0.33 0.62c-0.16 0.25 0.97 1.12 -0.11 1.46c-0.49 0.15 -0.42 -0.50 -0.93 0.17l0.00 0.00c0.51 0.27 0.42 2.02 1.00 2.02c0.41 0.00 0.51 0.32 0.70 0.63c0.20 0.33 0.61 -0.09 0.93 -0.01c0.00 0.28 0.06 0.63 0.11 0.91c0.04 0.25 -0.20 1.23 0.07 1.07c0.69 -0.39 0.29 0.73 0.51 0.73c0.10 0.21 0.24 0.29 0.37 0.45c0.19 0.24 0.09 0.58 0.29 0.80c0.19 0.21 0.79 0.51 0.48 0.87c-0.25 0.28 -0.42 0.41 -0.42 0.81l0.25 0.35l0.00 0.00c0.63 -0.06 0.97 0.48 1.63 0.57c0.29 0.04 0.86 0.40 1.08 0.56c0.31 0.22 -0.37 0.56 -0.01 0.78c0.56 0.33 0.28 0.85 0.73 1.19c0.50 0.39 0.28 0.76 1.08 0.76l0.00 0.00z\"\n          },\n          61: {\n            name: \"V\\u0129nh Long\",\n            path: \"m82.60 260.37l-0.97 -0.80l0.00 0.00c-0.16 -0.04 -0.34 -0.53 -0.39 -0.67c-0.07 -0.18 -0.37 -0.55 -0.55 -0.68c-0.20 -0.14 -0.46 -0.30 -0.62 -0.48l-1.22 -0.87l0.00 0.00l0.82 -1.21c0.24 0.10 0.35 0.06 0.46 0.30c0.10 0.20 0.23 0.16 0.38 0.05c0.25 0.19 0.40 0.46 0.79 0.60c0.39 0.14 0.48 -0.03 0.74 -0.29c0.29 -0.29 0.95 -0.11 0.95 -0.68c0.00 -0.42 -0.81 -0.65 -0.60 -0.94l0.03 -0.30l0.00 0.00c0.24 -0.05 0.42 -0.01 0.64 -0.15c0.24 -0.15 0.45 -0.41 0.69 -0.56c0.12 -0.07 0.61 -0.14 0.67 0.02c0.07 0.00 0.40 0.21 0.46 0.27l0.00 0.00c-0.18 0.82 -0.06 0.68 0.71 0.90c0.35 0.10 0.80 -0.08 1.13 0.25c0.25 0.25 0.30 0.57 0.52 0.81c0.31 0.34 0.76 0.44 1.10 0.78c0.34 0.34 0.54 0.55 0.79 1.04l0.35 0.44l0.00 0.00c-0.17 0.02 -0.49 0.01 -0.62 -0.08c-0.01 0.02 -0.32 0.17 -0.43 0.36c-0.08 0.13 -0.08 0.53 -0.25 0.55c-0.42 0.05 -0.77 -0.34 -1.07 -0.11c-0.28 0.21 -0.27 0.58 -0.37 0.90c-0.23 0.72 -0.28 0.17 -0.77 0.23c-0.20 0.02 -0.32 0.29 -0.52 0.35c-0.37 0.09 -0.40 -0.09 -0.68 0.30c-0.21 0.29 -0.62 0.29 -0.91 0.47l0.00 0.00l-1.28 -0.78l0.00 0.00z\"\n          },\n          62: {\n            name: \"V\\u0129nh Ph\\xFAc\",\n            path: \"m74.53 56.56c-0.06 0.70 -0.20 0.75 0.18 1.36c0.23 0.38 0.56 0.66 0.95 0.86c0.81 0.41 1.34 -0.54 2.17 0.08c0.54 0.41 1.10 -0.13 1.49 0.64c0.32 0.65 0.44 -0.18 0.63 -0.45c0.38 -0.54 0.75 -1.22 -0.02 -1.72c-0.99 -0.64 -0.23 -0.97 0.13 -1.58l0.33 -0.72l0.00 0.00c-0.55 -0.64 0.04 -0.88 -0.99 -0.99c-0.30 -0.03 -0.24 -0.42 -0.39 -0.58c-0.19 -0.21 -0.48 -0.25 -0.73 -0.35c-0.52 -0.21 -0.53 -0.62 -0.76 -1.05c-0.04 -0.08 -1.17 -0.97 -1.22 -0.97l0.00 0.00c0.00 0.16 -0.41 0.52 -0.51 0.64c-0.24 0.30 -0.52 0.13 -0.82 0.20c-0.30 0.08 -0.38 0.12 -0.66 0.29c-0.22 0.14 -0.50 0.09 -0.68 -0.07c-0.41 -0.37 -0.60 -0.07 -0.97 0.14l0.00 0.00c-0.08 0.42 -0.17 0.86 -0.05 1.29c0.15 0.53 0.55 -0.02 0.97 0.36c0.24 0.22 0.08 0.82 0.08 1.09c0.09 0.02 0.51 0.53 0.64 0.66c0.21 0.21 0.39 0.55 0.21 0.86l0.00 0.00z\"\n          },\n          63: {\n            name: \"Y\\xean B\\xe1i\",\n            path: \"m59.28 38.54c0.19 -0.22 0.58 -0.86 0.92 -0.78c0.25 0.06 0.32 0.27 0.66 0.32c0.36 0.06 1.17 0.08 1.20 0.57c0.01 0.15 0.11 1.58 0.45 1.41c0.06 0.06 1.13 -0.25 1.36 -0.25l0.00 0.00c0.51 0.27 0.42 2.02 1.00 2.02c0.41 0.00 0.51 0.32 0.70 0.63c0.20 0.33 0.61 -0.09 0.93 -0.01c0.00 0.28 0.06 0.63 0.11 0.91c0.04 0.25 -0.20 1.23 0.07 1.07c0.69 -0.39 0.29 0.73 0.51 0.73c0.10 0.21 0.24 0.29 0.37 0.45c0.19 0.24 0.09 0.58 0.29 0.80c0.19 0.21 0.79 0.51 0.48 0.87c-0.25 0.28 -0.42 0.41 -0.42 0.81l0.25 0.35l0.00 0.00c0.07 0.09 -0.01 0.54 -0.11 0.62c-0.11 0.10 -0.47 -0.07 -0.57 -0.12c-0.70 -0.32 -0.56 0.34 -0.91 0.49c-0.09 0.04 -0.95 0.16 -0.82 0.41c-0.05 0.05 -0.09 0.05 -0.14 0.08c-0.07 -0.05 -0.53 0.15 -0.55 0.24c-0.28 0.06 -0.01 0.94 -0.45 1.21c-0.47 0.28 0.31 0.87 0.31 1.27c0.00 0.19 0.12 0.35 0.12 0.55l-0.01 0.61c-0.01 0.30 -0.46 0.66 -0.43 0.74c0.05 0.14 0.40 0.58 0.36 0.68c-0.10 0.26 -0.44 -0.08 -0.60 -0.14c-0.26 -0.10 -0.00 0.80 -0.55 0.39l-0.27 0.20l0.00 0.00c-0.11 0.00 -0.74 0.09 -0.77 -0.02c-0.40 0.00 -0.62 -1.04 -0.86 -1.28c-0.56 -0.56 -0.78 0.81 -1.75 -0.06c-0.44 -0.40 -0.77 0.05 -1.20 -0.13c-0.64 -0.26 -0.86 0.73 -1.41 0.97c-0.87 0.38 -1.06 -0.78 -1.86 -0.95c-0.59 -0.13 -0.77 0.05 -1.06 -0.61c-0.19 -0.42 -0.91 -2.23 -0.27 -2.45c0.00 -0.56 -0.06 -0.98 0.77 -1.25c0.00 -0.37 -0.91 -0.46 -1.22 -0.42c-0.33 0.00 -0.54 -0.14 -0.88 0.00c-0.26 0.10 -0.60 0.38 -0.87 0.27c-0.23 -0.08 -0.47 -0.17 -0.69 -0.10c-0.31 0.10 -0.62 0.20 -0.95 0.13c-0.38 -0.08 -0.53 -0.17 -0.86 -0.37c-0.49 -0.30 -0.95 0.08 -1.37 -0.10c-0.29 -0.12 -0.25 -0.43 -0.62 -0.48l0.00 0.00c0.04 -0.21 -0.12 -0.63 0.04 -0.74c0.34 -0.24 1.04 -0.14 0.77 -0.82c-0.19 -0.50 -0.81 -1.05 -1.11 -1.53c-0.20 -0.31 -0.31 -0.84 -0.13 -1.21c0.16 -0.31 0.52 -0.08 0.79 -0.08c0.08 0.25 0.53 -0.28 0.58 -0.32l0.26 -0.41l0.00 0.00l0.25 0.43c-0.06 0.58 1.17 0.87 1.48 0.70c0.53 -0.30 1.13 0.14 1.66 0.35c1.53 0.59 -0.15 -1.71 1.24 -0.79c0.10 0.06 0.95 0.10 1.13 0.14c0.27 0.06 0.42 0.86 0.67 0.86c0.06 0.17 0.35 -0.24 0.38 -0.27c0.06 -0.09 0.37 -0.38 0.38 -0.44c1.72 -0.34 -0.35 -2.87 -0.15 -3.31c0.14 -0.31 0.38 -0.37 0.25 -0.78c-0.17 -0.52 -0.16 -0.88 0.37 -1.07c0.58 -0.21 0.93 0.62 1.26 0.95c0.21 0.16 0.57 0.33 0.71 0.54c0.08 0.11 0.29 0.36 0.43 0.36c0.01 0.02 0.07 0.02 0.10 0.02c0.04 0.12 0.32 -0.35 0.32 -0.50c0.00 -0.32 -0.19 -0.97 0.29 -1.00c0.43 -0.03 0.60 -0.22 0.60 -0.68c-0.41 -0.14 -0.94 0.04 -0.94 -0.69l0.00 0.00z\"\n          }\n        }\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"world_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 440.7063107441331,\n          bbox: [{\n            y: -12671671.123330014,\n            x: -20004297.151525836\n          }, {\n            y: 6930392.025135122,\n            x: 20026572.394749384\n          }],\n          left: 0\n        }],\n        paths: {\n          BD: {\n            path: \"M651.84,230.21l-0.6,-2.0l-1.36,-1.71l-2.31,-0.11l-0.41,0.48l0.2,0.94l-0.53,0.99l-0.72,-0.36l-0.68,0.35l-1.2,-0.36l-0.37,-2.0l-0.81,-1.86l0.39,-1.46l-0.22,-0.47l-1.14,-0.53l0.29,-0.5l1.48,-0.94l0.03,-0.65l-1.55,-1.22l0.55,-1.14l1.61,0.94l1.04,0.15l0.18,1.54l0.34,0.35l5.64,0.63l-0.84,1.64l-1.22,0.34l-0.77,1.51l0.07,0.47l1.37,1.37l0.67,-0.19l0.42,-1.39l1.21,3.84l-0.03,1.21l-0.33,-0.15l-0.4,0.28Z\",\n            name: \"Bangladesh\"\n          },\n          BE: {\n            path: \"M429.29,144.05l1.91,0.24l2.1,-0.63l2.63,1.99l-0.21,1.66l-0.69,0.4l-0.18,1.2l-1.66,-1.13l-1.39,0.15l-2.73,-2.7l-1.17,-0.18l-0.16,-0.52l1.54,-0.5Z\",\n            name: \"Belgium\"\n          },\n          BF: {\n            path: \"M421.42,247.64l-0.11,0.95l0.34,1.16l1.4,1.71l0.07,1.1l0.32,0.37l2.55,0.51l-0.04,1.28l-0.38,0.53l-1.07,0.21l-0.72,1.18l-0.63,0.21l-3.22,-0.25l-0.94,0.39l-5.4,-0.05l-0.39,0.38l0.16,2.73l-1.23,-0.43l-1.17,0.1l-0.89,0.57l-2.27,-1.72l-0.13,-1.11l0.61,-0.96l0.02,-0.93l1.87,-1.98l0.44,-1.81l0.43,-0.39l1.28,0.26l1.05,-0.52l0.47,-0.73l1.84,-1.09l0.55,-0.83l2.2,-1.0l1.15,-0.3l0.72,0.45l1.13,-0.01Z\",\n            name: \"Burkina Faso\"\n          },\n          BG: {\n            path: \"M491.65,168.18l-0.86,0.88l-0.91,2.17l0.48,1.34l-1.6,-0.24l-2.55,0.95l-0.28,1.51l-1.8,0.22l-2.0,-1.0l-1.92,0.79l-1.42,-0.07l-0.15,-1.63l-1.05,-0.97l0.0,-0.8l1.2,-1.57l0.01,-0.56l-1.14,-1.23l-0.05,-0.94l0.88,0.97l0.88,-0.2l1.91,0.47l3.68,0.16l1.42,-0.81l2.72,-0.66l2.55,1.24Z\",\n            name: \"Bulgaria\"\n          },\n          BA: {\n            path: \"M463.49,163.65l2.1,0.5l1.72,-0.03l1.52,0.68l-0.36,0.78l0.08,0.45l1.04,1.02l-0.25,0.98l-1.81,1.15l-0.38,1.38l-1.67,-0.87l-0.89,-1.2l-2.11,-1.83l-1.63,-2.22l0.23,-0.57l0.48,0.38l0.55,-0.06l0.43,-0.51l0.94,-0.06Z\",\n            name: \"Bosnia and Herz.\"\n          },\n          BN: {\n            path: \"M707.48,273.58l0.68,-0.65l1.41,-0.91l-0.15,1.63l-0.81,-0.05l-0.61,0.58l-0.53,-0.6Z\",\n            name: \"Brunei\"\n          },\n          BO: {\n            path: \"M263.83,340.69l-3.09,-0.23l-0.38,0.23l-0.7,1.52l-1.31,-1.53l-3.28,-0.64l-2.37,2.4l-1.31,0.26l-0.88,-3.26l-1.3,-2.86l0.74,-2.37l-0.13,-0.43l-1.2,-1.01l-0.37,-1.89l-1.08,-1.55l1.45,-2.56l-0.96,-2.33l0.47,-1.06l-0.34,-0.73l0.91,-1.32l0.16,-3.84l0.5,-1.18l-1.81,-3.41l2.46,0.07l0.8,-0.85l3.4,-1.91l2.66,-0.35l-0.19,1.38l0.3,1.07l-0.05,1.97l2.72,2.27l2.88,0.49l0.89,0.86l1.79,0.58l0.98,0.7l1.71,0.05l1.17,0.61l0.6,2.7l-0.7,0.54l0.96,2.99l0.37,0.28l4.3,0.1l-0.25,1.2l0.27,1.02l1.43,0.9l0.5,1.35l-0.41,1.86l-0.65,1.08l0.12,1.35l-2.69,-1.65l-2.4,-0.03l-4.36,0.76l-1.49,2.5l-0.11,1.52l-0.75,2.37Z\",\n            name: \"Bolivia\"\n          },\n          JP: {\n            path: \"M781.12,166.87l1.81,0.68l1.62,-0.97l0.39,2.42l-3.35,0.75l-2.23,2.88l-3.63,-1.9l-0.56,0.2l-1.26,3.05l-2.16,0.03l-0.29,-2.51l1.08,-2.03l2.45,-0.16l0.37,-0.33l1.25,-5.94l2.47,2.71l2.03,1.12ZM773.56,187.34l-0.91,2.22l0.37,1.52l-1.14,1.75l-3.02,1.26l-4.58,0.27l-3.34,3.01l-1.25,-0.8l-0.09,-1.9l-0.46,-0.38l-4.35,0.62l-3.0,1.32l-2.85,0.05l-0.37,0.27l0.13,0.44l2.32,1.89l-1.54,4.34l-1.26,0.9l-0.79,-0.7l0.56,-2.27l-0.21,-0.45l-1.47,-0.75l-0.74,-1.4l2.12,-0.84l1.26,-1.7l2.45,-1.42l1.83,-1.91l4.78,-0.81l2.6,0.57l0.44,-0.21l2.39,-4.66l1.29,1.06l0.5,0.01l5.1,-4.02l1.69,-3.73l-0.38,-3.4l0.9,-1.61l2.14,-0.44l1.23,3.72l-0.07,2.18l-2.23,2.84l-0.04,3.16ZM757.78,196.26l0.19,0.56l-1.01,1.21l-1.16,-0.68l-1.28,0.65l-0.69,1.45l-1.02,-0.5l0.01,-0.93l1.14,-1.38l1.57,0.14l0.85,-0.98l1.4,0.46Z\",\n            name: \"Japan\"\n          },\n          BI: {\n            path: \"M495.45,295.49l-1.08,-2.99l1.14,-0.11l0.64,-1.19l0.76,0.09l0.65,1.83l-2.1,2.36Z\",\n            name: \"Burundi\"\n          },\n          BJ: {\n            path: \"M429.57,255.75l-0.05,0.8l0.5,1.34l-0.42,0.86l0.17,0.79l-1.81,2.12l-0.57,1.76l-0.08,5.42l-1.41,0.2l-0.48,-1.36l0.11,-5.71l-0.52,-0.7l-0.2,-1.35l-1.48,-1.48l0.21,-0.9l0.89,-0.43l0.42,-0.92l1.27,-0.36l1.22,-1.34l0.61,-0.0l1.62,1.24Z\",\n            name: \"Benin\"\n          },\n          BT: {\n            path: \"M650.32,213.86l0.84,0.71l-0.12,1.1l-3.76,-0.11l-1.57,0.4l-1.93,-0.87l1.48,-1.96l1.13,-0.57l1.63,0.57l1.33,0.08l0.99,0.65Z\",\n            name: \"Bhutan\"\n          },\n          JM: {\n            path: \"M228.38,239.28l-0.8,0.4l-2.26,-1.06l0.84,-0.23l2.14,0.3l1.17,0.56l-1.08,0.03Z\",\n            name: \"Jamaica\"\n          },\n          BW: {\n            path: \"M483.92,330.07l2.27,4.01l2.83,2.86l0.96,0.31l0.78,2.43l2.13,0.61l1.02,0.76l-3.0,1.64l-2.32,2.02l-1.54,2.69l-1.52,0.45l-0.64,1.94l-1.34,0.52l-1.85,-0.12l-1.21,-0.74l-1.35,-0.3l-1.22,0.62l-0.75,1.37l-2.31,1.9l-1.4,0.21l-0.35,-0.59l0.16,-1.75l-1.48,-2.54l-0.62,-0.43l-0.0,-7.1l2.08,-0.08l0.39,-0.4l0.07,-8.9l5.19,-0.93l0.8,0.89l0.51,0.07l1.5,-0.95l2.21,-0.49Z\",\n            name: \"Botswana\"\n          },\n          BR: {\n            path: \"M259.98,275.05l3.24,0.7l0.65,-0.53l4.55,-1.32l1.08,-1.06l-0.02,-0.63l0.55,-0.05l0.28,0.28l-0.26,0.87l0.22,0.48l0.73,0.32l0.4,0.81l-0.62,0.86l-0.4,2.13l0.82,2.56l1.69,1.43l1.43,0.2l3.17,-1.68l3.18,0.3l0.65,-0.75l-0.27,-0.92l1.9,-0.09l2.39,0.99l1.06,-0.61l0.84,0.78l1.2,-0.18l1.18,-1.06l0.84,-1.94l1.36,-2.11l0.37,-0.05l1.89,5.45l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l1.02,0.87l4.07,0.36l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.72l2.12,0.12l0.71,0.62l1.21,4.51l-0.95,3.98l-4.72,5.06l-1.64,2.92l-1.72,2.05l-0.8,0.3l-0.72,2.03l0.18,4.75l-0.94,5.53l-0.81,1.13l-0.43,3.36l-2.55,3.5l-0.4,2.51l-1.86,1.04l-0.67,1.53l-2.54,0.01l-3.94,1.01l-1.83,1.2l-2.87,0.82l-3.03,2.19l-2.2,2.83l-0.36,2.0l0.4,1.58l-0.44,2.6l-0.51,1.2l-1.77,1.54l-2.75,4.78l-3.83,3.42l-1.24,2.74l-1.18,1.15l-0.36,-0.83l0.95,-1.14l0.01,-0.5l-1.52,-1.97l-4.56,-3.32l-1.03,-0.0l-2.38,-2.02l-0.81,-0.0l5.34,-5.45l3.77,-2.58l0.22,-2.46l-1.35,-1.81l-0.91,0.07l0.58,-2.33l0.01,-1.54l-1.11,-0.83l-1.75,0.3l-0.44,-3.11l-0.52,-0.95l-1.88,-0.88l-1.24,0.47l-2.17,-0.41l0.15,-3.21l-0.62,-1.34l0.66,-0.73l-0.22,-1.34l0.66,-1.13l0.44,-2.04l-0.61,-1.83l-1.4,-0.86l-0.2,-0.75l0.34,-1.39l-0.38,-0.5l-4.52,-0.1l-0.72,-2.22l0.59,-0.42l-0.03,-1.1l-0.5,-0.87l-0.32,-1.7l-1.45,-0.76l-1.63,-0.02l-1.05,-0.72l-1.6,-0.48l-1.13,-0.99l-2.69,-0.4l-2.47,-2.06l0.13,-4.35l-0.45,-0.45l-3.46,0.5l-3.44,1.94l-0.6,0.74l-2.9,-0.17l-1.47,0.42l-0.72,-0.18l0.15,-3.52l-0.63,-0.34l-1.94,1.41l-1.87,-0.06l-0.83,-1.18l-1.37,-0.26l0.21,-1.01l-1.35,-1.49l-0.88,-1.91l0.56,-0.6l-0.0,-0.81l1.29,-0.62l0.22,-0.43l-0.22,-1.19l0.61,-0.91l0.15,-0.99l2.65,-1.58l1.99,-0.47l0.42,-0.36l2.06,0.11l0.42,-0.33l1.19,-8.0l-0.41,-1.56l-1.1,-1.0l0.01,-1.33l1.91,-0.42l0.08,-0.96l-0.33,-0.43l-1.14,-0.2l-0.02,-0.83l4.47,0.05l0.82,-0.67l0.82,1.81l0.8,0.07l1.15,1.1l2.26,-0.05l0.71,-0.83l2.78,-0.96l0.48,-1.13l1.6,-0.64l0.24,-0.47l-0.48,-0.82l-1.83,-0.19l-0.36,-3.22Z\",\n            name: \"Brazil\"\n          },\n          BS: {\n            path: \"M226.4,223.87l-0.48,-1.15l-0.84,-0.75l0.36,-1.11l0.95,1.95l0.01,1.06ZM225.56,216.43l-1.87,0.29l-0.04,-0.22l0.74,-0.14l1.17,0.06Z\",\n            name: \"Bahamas\"\n          },\n          BY: {\n            path: \"M493.84,128.32l0.29,0.7l0.49,0.23l1.19,-0.38l2.09,0.72l0.19,1.26l-0.45,1.24l1.57,2.26l0.89,0.59l0.17,0.81l1.58,0.56l0.4,0.5l-0.53,0.41l-1.87,-0.11l-0.73,0.38l-0.13,0.52l1.04,2.74l-1.91,0.26l-0.89,0.99l-0.11,1.18l-2.73,-0.04l-0.53,-0.62l-0.52,-0.08l-0.75,0.46l-0.91,-0.42l-1.92,-0.07l-2.75,-0.79l-2.6,-0.28l-2.0,0.07l-1.5,0.92l-0.67,0.07l-0.08,-1.22l-0.59,-1.19l1.36,-0.88l0.01,-1.35l-0.7,-1.41l-0.07,-1.0l2.16,-0.02l2.72,-1.3l0.75,-2.04l1.91,-1.04l0.2,-0.41l-0.19,-1.25l3.8,-1.78l2.3,0.77Z\",\n            name: \"Belarus\"\n          },\n          BZ: {\n            path: \"M198.03,244.38l0.1,-4.49l0.69,-0.06l0.74,-1.3l0.34,0.28l-0.4,1.3l0.17,0.58l-0.34,2.25l-1.3,1.42Z\",\n            name: \"Belize\"\n          },\n          RU: {\n            path: \"M491.55,115.25l2.55,-1.85l-0.01,-0.65l-2.2,-1.5l7.32,-6.76l1.03,-2.11l-0.13,-0.49l-3.46,-2.52l0.86,-2.7l-2.11,-2.81l1.56,-3.67l-2.77,-4.52l2.15,-2.99l-0.08,-0.55l-3.65,-2.73l0.3,-2.54l1.81,-0.37l4.26,-1.77l2.42,-1.45l4.06,2.61l6.79,1.04l9.34,4.85l1.78,1.88l0.14,2.46l-2.55,2.02l-3.9,1.06l-11.07,-3.14l-2.06,0.53l-0.13,0.7l3.94,2.94l0.31,5.86l0.26,0.36l5.14,2.24l0.58,-0.29l0.32,-1.94l-1.35,-1.78l1.13,-1.09l6.13,2.42l2.11,-0.98l0.18,-0.56l-1.51,-2.67l5.41,-3.76l2.07,0.22l2.26,1.41l0.57,-0.16l1.46,-2.87l-0.05,-0.44l-1.92,-2.32l1.12,-2.32l-1.32,-2.27l5.87,1.16l1.04,1.75l-2.59,0.43l-0.33,0.4l0.02,2.36l2.46,1.83l3.87,-0.91l0.86,-2.8l13.69,-5.65l0.99,0.11l-1.92,2.06l0.23,0.67l3.11,0.45l2.0,-1.48l4.56,-0.12l3.64,-1.73l2.65,2.44l0.56,-0.01l2.85,-2.88l-0.01,-0.57l-2.35,-2.29l0.9,-1.01l7.14,1.3l3.41,1.36l9.05,4.97l0.51,-0.11l1.67,-2.27l-0.05,-0.53l-2.43,-2.21l-0.06,-0.78l-0.34,-0.36l-2.52,-0.36l0.64,-1.93l-1.32,-3.46l-0.06,-1.21l4.48,-4.06l1.69,-4.29l1.6,-0.81l6.23,1.18l0.44,2.21l-2.29,3.64l0.06,0.5l1.47,1.39l0.76,3.0l-0.56,6.03l2.69,2.82l-0.96,2.57l-4.86,5.95l0.23,0.64l2.86,0.61l0.42,-0.17l0.93,-1.4l2.64,-1.03l0.87,-2.24l2.09,-1.96l0.07,-0.5l-1.36,-2.28l1.09,-2.69l-0.32,-0.55l-2.47,-0.33l-0.5,-2.06l1.94,-4.38l-0.06,-0.42l-2.96,-3.4l4.12,-2.88l0.16,-0.4l-0.51,-2.93l0.54,-0.05l1.13,2.25l-0.96,4.35l0.27,0.47l2.68,0.84l0.5,-0.51l-1.02,-2.99l3.79,-1.66l5.01,-0.24l4.53,2.61l0.48,-0.06l0.07,-0.48l-2.18,-3.82l-0.23,-4.67l3.98,-0.9l5.97,0.21l5.49,-0.64l0.27,-0.65l-1.83,-2.31l2.56,-2.9l2.87,-0.17l4.8,-2.47l6.54,-0.67l1.03,-1.42l6.25,-0.45l2.32,1.11l5.53,-2.7l4.5,0.08l0.39,-0.28l0.66,-2.15l2.26,-2.12l5.69,-2.11l3.21,1.29l-2.46,0.94l-0.25,0.42l0.34,0.35l5.41,0.77l0.61,2.33l0.58,0.25l2.2,-1.22l7.13,0.07l5.51,2.47l1.79,1.72l-0.53,2.24l-9.16,4.15l-1.97,1.52l0.16,0.71l6.77,1.91l2.16,-0.78l1.13,2.74l0.67,0.11l1.01,-1.15l3.81,-0.73l7.7,0.77l0.54,1.99l0.36,0.29l10.47,0.71l0.43,-0.38l0.13,-3.23l4.87,0.78l3.95,-0.02l3.83,2.4l1.03,2.71l-1.35,1.79l0.02,0.5l3.15,3.64l4.07,1.96l0.53,-0.18l2.23,-4.47l3.95,1.93l4.16,-1.21l4.73,1.39l2.05,-1.26l3.94,0.62l0.43,-0.55l-1.68,-4.02l2.89,-1.8l22.31,3.03l2.16,2.75l6.55,3.51l10.29,-0.81l4.82,0.73l1.85,1.66l-0.29,3.08l0.25,0.41l3.08,1.26l3.56,-0.88l4.35,-0.11l4.8,0.87l4.57,-0.47l4.23,3.79l0.43,0.07l3.1,-1.4l0.16,-0.6l-1.88,-2.62l0.85,-1.52l7.71,1.21l5.22,-0.26l7.09,2.09l9.59,5.22l6.35,4.11l-0.2,2.38l1.88,1.41l0.6,-0.42l-0.48,-2.53l6.15,0.57l4.4,3.51l-1.97,1.43l-4.0,0.41l-0.36,0.39l-0.06,3.79l-0.74,0.62l-2.07,-0.11l-1.91,-1.39l-3.14,-1.11l-0.78,-1.85l-2.72,-0.68l-2.63,0.49l-1.04,-1.1l0.46,-1.31l-0.5,-0.51l-3.0,0.98l-0.22,0.58l0.99,1.7l-1.21,1.48l-3.04,1.68l-3.12,-0.28l-0.4,0.23l0.09,0.46l2.2,2.09l1.46,3.2l1.15,1.1l0.24,1.33l-0.42,0.67l-4.63,-0.77l-6.96,2.9l-2.19,0.44l-7.6,5.06l-0.84,1.45l-3.61,-2.37l-6.24,2.82l-0.94,-1.15l-0.53,-0.08l-2.28,1.52l-3.2,-0.49l-0.44,0.27l-0.78,2.37l-3.05,3.78l0.09,1.47l0.29,0.36l2.54,0.72l-0.29,4.53l-1.97,0.11l-0.35,0.26l-1.07,2.94l0.8,1.45l-3.91,1.58l-1.05,3.95l-3.48,0.77l-0.3,0.3l-0.72,3.29l-3.09,2.65l-0.7,-1.74l-2.44,-12.44l1.16,-4.71l2.04,-2.06l0.22,-1.64l3.8,-0.86l4.46,-4.61l4.28,-3.81l4.48,-3.01l2.17,-5.63l-0.42,-0.54l-3.04,0.33l-1.77,3.31l-5.86,3.86l-1.86,-4.25l-0.45,-0.23l-6.46,1.3l-6.47,6.44l-0.01,0.55l1.58,1.74l-8.24,1.17l0.15,-2.2l-0.34,-0.42l-3.89,-0.56l-3.25,1.81l-7.62,-0.62l-8.45,1.19l-17.71,15.41l0.22,0.7l3.74,0.41l1.36,2.17l2.43,0.76l1.88,-1.68l2.4,0.2l3.4,3.54l0.08,2.6l-1.95,3.42l-0.21,3.9l-1.1,5.06l-3.71,4.54l-0.87,2.21l-8.29,8.89l-3.19,1.7l-1.32,0.03l-1.45,-1.36l-0.49,-0.04l-2.27,1.5l0.41,-3.65l-0.59,-2.47l1.75,-0.89l2.91,0.53l0.42,-0.2l1.68,-3.03l0.87,-3.46l0.97,-1.18l1.32,-2.88l-0.45,-0.56l-4.14,0.95l-2.19,1.25l-3.41,-0.0l-1.06,-2.93l-2.97,-2.3l-4.28,-1.06l-1.75,-5.07l-2.66,-5.01l-2.29,-1.29l-3.75,-1.01l-3.44,0.08l-3.18,0.62l-2.24,1.77l0.05,0.66l1.18,0.69l0.02,1.43l-1.33,1.05l-2.26,3.51l-0.04,1.43l-3.16,1.84l-2.82,-1.16l-3.01,0.23l-1.35,-1.07l-1.5,-0.35l-3.9,2.31l-3.22,0.52l-2.27,0.79l-3.05,-0.51l-2.21,0.03l-1.48,-1.6l-2.6,-1.63l-2.63,-0.43l-5.46,1.01l-3.23,-1.25l-0.72,-2.57l-5.2,-1.24l-2.75,-1.36l-0.5,0.12l-2.59,3.45l0.84,2.1l-2.06,1.93l-3.41,-0.77l-2.42,-0.12l-1.83,-1.54l-2.53,-0.05l-2.42,-0.98l-3.86,1.57l-4.72,2.78l-3.3,0.75l-1.55,-1.92l-3.0,0.41l-1.11,-1.33l-1.62,-0.59l-1.31,-1.94l-1.38,-0.6l-3.7,0.79l-3.31,-1.83l-0.51,0.11l-0.99,1.29l-5.29,-8.05l-2.96,-2.48l0.65,-0.77l0.01,-0.51l-0.5,-0.11l-6.2,3.21l-1.84,0.15l0.15,-1.39l-0.26,-0.42l-3.22,-1.17l-2.46,0.7l-0.69,-3.16l-0.32,-0.31l-4.5,-0.75l-2.47,1.47l-6.19,1.27l-1.29,0.86l-9.51,1.3l-1.15,1.17l-0.03,0.53l1.47,1.9l-1.89,0.69l-0.22,0.56l0.31,0.6l-2.11,1.44l0.03,0.68l3.75,2.12l-0.39,0.98l-3.23,-0.13l-0.86,0.86l-3.09,-1.59l-3.97,0.07l-2.66,1.35l-8.32,-3.56l-4.07,0.06l-5.39,3.68l-0.39,2.0l-2.03,-1.5l-0.59,0.13l-2.0,3.59l0.57,0.93l-1.28,2.16l0.06,0.48l2.13,2.17l1.95,0.04l1.37,1.82l-0.23,1.46l0.25,0.43l0.83,0.33l-0.8,1.31l-2.49,0.62l-2.49,3.2l0.0,0.49l2.17,2.78l-0.15,2.18l2.5,3.24l-1.58,1.59l-0.7,-0.13l-1.63,-1.72l-2.29,-0.84l-0.94,-1.31l-2.34,-0.63l-1.48,0.4l-0.43,-0.47l-3.51,-1.48l-5.76,-1.01l-0.45,0.19l-2.89,-2.34l-2.9,-1.2l-1.53,-1.29l1.29,-0.43l2.08,-2.61l-0.05,-0.55l-0.89,-0.79l3.05,-1.06l0.27,-0.42l-0.07,-0.69l-0.49,-0.35l-1.73,0.39l0.04,-0.68l1.04,-0.72l2.66,-0.48l0.4,-1.32l-0.5,-1.6l0.92,-1.54l0.03,-1.17l-0.29,-0.37l-3.69,-1.06l-1.41,0.02l-1.42,-1.41l-2.19,0.38l-2.77,-1.01l-0.03,-0.59l-0.89,-1.43l-2.0,-0.32l-0.11,-0.54l0.49,-0.53l0.01,-0.53l-1.6,-1.9l-3.58,0.02l-0.88,0.73l-0.46,-0.07l-1.0,-2.79l2.22,-0.02l0.97,-0.74l0.07,-0.57l-0.9,-1.04l-1.35,-0.48l-0.11,-0.7l-0.95,-0.58l-1.38,-1.99l0.46,-0.98l-0.51,-1.96l-2.45,-0.84l-1.21,0.3l-0.46,-0.76l-2.46,-0.83l-0.72,-1.87l-0.21,-1.69l-0.99,-0.85l0.85,-1.17l-0.7,-3.21l1.66,-1.97l-0.16,-0.79ZM749.2,170.72l-0.6,0.4l-0.13,0.16l-0.01,-0.51l0.74,-0.05ZM871.88,65.81l2.17,-0.13l3.19,1.16l-2.39,1.09l-5.63,0.48l-0.26,-0.84l2.92,-1.76ZM797.39,48.49l-2.0,1.36l-3.8,-0.42l-4.25,-1.8l0.35,-0.97l9.69,1.83ZM783.67,46.12l-1.63,3.09l-8.98,-0.13l-4.09,1.14l-4.54,-2.97l1.16,-3.01l3.05,-0.89l6.5,0.22l8.54,2.56ZM778.2,134.98l-0.56,-0.9l0.27,-0.12l0.29,1.01ZM778.34,135.48l0.94,3.53l-0.05,3.38l1.05,3.39l2.18,5.0l-2.89,-0.83l-0.49,0.26l-1.54,4.65l2.42,3.5l-0.04,1.13l-1.24,-1.24l-0.61,0.06l-1.09,1.61l-0.28,-1.61l0.27,-3.1l-0.28,-3.4l0.58,-2.47l0.11,-4.39l-1.46,-3.36l0.21,-4.32l2.15,-1.46l0.07,-0.34ZM771.95,56.61l1.76,-1.42l2.89,-0.42l3.28,1.71l0.14,0.6l-3.27,0.03l-4.81,-0.5ZM683.76,31.09l-13.01,1.93l4.03,-6.35l1.82,-0.56l1.73,0.34l5.99,2.98l-0.56,1.66ZM670.85,27.93l-5.08,0.64l-6.86,-1.57l-3.99,-2.05l-2.1,-4.16l-2.6,-0.87l5.72,-3.5l5.2,-1.28l4.69,2.85l5.59,5.4l-0.56,4.53ZM564.15,68.94l-0.64,0.17l-7.85,-0.57l-0.86,-2.04l-4.28,-1.17l-0.28,-1.94l2.27,-0.89l0.25,-0.39l-0.08,-2.38l4.81,-3.97l-0.15,-0.7l-1.47,-0.38l5.3,-3.81l0.15,-0.44l-0.58,-1.94l5.28,-2.51l8.21,-3.27l8.28,-0.96l4.35,-1.94l4.6,-0.64l1.36,1.61l-1.34,1.28l-16.43,4.94l-7.97,4.88l-7.74,9.63l0.66,4.14l4.16,3.27ZM548.81,18.48l-5.5,1.18l-0.58,1.02l-2.59,0.84l-2.13,-1.07l1.12,-1.42l-0.3,-0.65l-2.33,-0.07l1.68,-0.36l3.47,-0.06l0.42,1.29l0.66,0.16l1.38,-1.34l2.15,-0.88l2.94,1.01l-0.39,0.36ZM477.37,133.15l-4.08,0.05l-2.56,-0.32l0.33,-0.87l3.17,-1.03l3.24,0.96l-0.09,1.23Z\",\n            name: \"Russia\"\n          },\n          RW: {\n            path: \"M497.0,288.25l0.71,1.01l-0.11,1.09l-1.63,0.03l-1.04,1.39l-0.83,-0.11l0.51,-1.2l0.08,-1.34l0.42,-0.41l0.7,0.14l1.19,-0.61Z\",\n            name: \"Rwanda\"\n          },\n          RS: {\n            path: \"M469.4,163.99l0.42,-0.5l-0.01,-0.52l-1.15,-1.63l1.43,-0.62l1.33,0.12l1.17,1.06l0.46,1.13l1.34,0.64l0.35,1.35l1.46,0.9l0.76,-0.29l0.2,0.69l-0.48,0.78l0.22,1.12l1.05,1.22l-0.77,0.8l-0.37,1.52l-1.21,0.08l0.24,-0.64l-0.39,-0.54l-2.08,-1.64l-0.9,0.05l-0.48,0.94l-2.12,-1.37l0.53,-1.6l-1.11,-1.37l0.51,-1.1l-0.41,-0.57Z\",\n            name: \"Serbia\"\n          },\n          TL: {\n            path: \"M734.55,307.93l-0.1,-0.97l4.5,-0.86l-2.82,1.28l-1.59,0.55Z\",\n            name: \"Timor-Leste\"\n          },\n          TM: {\n            path: \"M553.03,173.76l-0.04,0.34l-0.09,-0.22l0.13,-0.12ZM555.87,172.66l0.45,-0.1l1.48,0.74l2.06,2.43l4.07,-0.18l0.38,-0.51l-0.32,-1.19l1.92,-0.94l1.91,-1.59l2.94,1.39l0.43,2.47l1.19,0.67l2.58,-0.13l0.62,0.4l1.32,3.12l4.54,3.44l2.67,1.45l3.06,1.14l-0.04,1.05l-1.33,-0.75l-0.59,0.19l-0.32,0.84l-2.2,0.81l-0.46,2.13l-1.21,0.74l-1.91,0.42l-0.73,1.33l-1.56,0.31l-2.22,-0.94l-0.2,-2.17l-0.38,-0.36l-1.73,-0.09l-2.76,-2.46l-2.14,-0.4l-2.84,-1.48l-1.78,-0.27l-1.24,0.53l-1.57,-0.08l-2.0,1.69l-1.7,0.43l-0.36,-1.58l0.36,-2.98l-0.22,-0.4l-1.65,-0.84l0.54,-1.69l-0.34,-0.52l-1.22,-0.13l0.36,-1.64l2.22,0.59l2.2,-0.95l0.12,-0.65l-1.77,-1.74l-0.66,-1.57Z\",\n            name: \"Turkmenistan\"\n          },\n          TJ: {\n            path: \"M597.75,178.82l-2.54,-0.44l-0.47,0.34l-0.24,1.7l0.43,0.45l2.64,-0.22l3.18,0.95l4.39,-0.41l0.56,2.37l0.52,0.29l0.67,-0.24l1.11,0.49l0.21,2.13l-3.76,-0.21l-1.8,1.32l-1.76,0.74l-0.61,-0.58l0.21,-2.23l-0.64,-0.49l-0.07,-0.93l-1.36,-0.66l-0.45,0.07l-1.08,1.01l-0.55,1.48l-1.31,-0.05l-0.95,1.16l-0.9,-0.35l-1.86,0.74l1.26,-2.83l-0.54,-2.17l-1.67,-0.82l0.33,-0.66l2.18,-0.04l1.19,-1.63l0.76,-1.79l2.43,-0.5l-0.26,1.0l0.73,1.05Z\",\n            name: \"Tajikistan\"\n          },\n          RO: {\n            path: \"M487.53,154.23l0.6,0.24l2.87,3.98l-0.17,2.69l0.45,1.42l1.32,0.81l1.35,-0.42l0.76,0.36l0.02,0.31l-0.83,0.45l-0.59,-0.22l-0.54,0.3l-0.62,3.3l-1.0,-0.22l-2.07,-1.13l-2.95,0.71l-1.25,0.76l-3.51,-0.15l-1.89,-0.47l-0.87,0.16l-0.82,-1.3l0.29,-0.26l-0.06,-0.64l-1.09,-0.34l-0.56,0.5l-1.05,-0.64l-0.39,-1.39l-1.36,-0.65l-0.35,-1.0l-0.83,-0.75l1.54,-0.54l2.66,-4.21l2.4,-1.24l2.96,0.34l1.48,0.73l0.79,-0.45l1.78,-0.3l0.75,-0.74l0.79,0.0Z\",\n            name: \"Romania\"\n          },\n          GW: {\n            path: \"M386.23,253.6l-0.29,0.84l0.15,0.6l-2.21,0.59l-0.86,0.96l-1.04,-0.83l-1.09,-0.23l-0.54,-1.06l-0.66,-0.49l2.41,-0.48l4.13,0.1Z\",\n            name: \"Guinea-Bissau\"\n          },\n          GT: {\n            path: \"M195.08,249.77l-2.48,-0.37l-1.03,-0.45l-1.14,-0.89l0.3,-0.99l-0.24,-0.68l0.96,-1.66l2.98,-0.01l0.4,-0.37l-0.19,-1.28l-1.67,-1.4l0.51,-0.4l0.0,-1.05l3.85,0.02l-0.21,4.53l0.4,0.43l1.46,0.38l-1.48,0.98l-0.35,0.7l0.12,0.57l-2.2,1.96Z\",\n            name: \"Guatemala\"\n          },\n          GR: {\n            path: \"M487.07,174.59l-0.59,1.43l-0.37,0.21l-2.84,-0.35l-3.03,0.77l-0.18,0.68l1.28,1.23l-0.61,0.23l-1.14,0.0l-1.2,-1.39l-0.63,0.03l-0.53,1.01l0.56,1.76l1.03,1.19l-0.56,0.38l-0.05,0.62l2.52,2.12l0.02,0.87l-1.78,-0.59l-0.48,0.56l0.5,1.0l-1.07,0.2l-0.3,0.53l0.75,2.01l-0.98,0.02l-1.84,-1.12l-1.37,-4.2l-2.21,-2.95l-0.11,-0.56l1.04,-1.28l0.2,-0.95l0.85,-0.66l0.03,-0.46l1.32,-0.21l1.01,-0.64l1.22,0.05l0.65,-0.56l2.26,-0.0l1.82,-0.75l1.85,1.0l2.28,-0.28l0.35,-0.39l0.01,-0.77l0.34,0.22ZM480.49,192.16l0.58,0.4l-0.68,-0.12l0.11,-0.28ZM482.52,192.82l2.51,0.06l0.24,0.32l-1.99,0.13l-0.77,-0.51Z\",\n            name: \"Greece\"\n          },\n          GQ: {\n            path: \"M448.79,279.62l0.02,2.22l-4.09,0.0l0.69,-2.27l3.38,0.05Z\",\n            name: \"Eq. Guinea\"\n          },\n          GY: {\n            path: \"M277.42,270.07l-0.32,1.83l-1.32,0.57l-0.23,0.46l-0.28,2.0l1.11,1.82l0.83,0.19l0.32,1.25l1.13,1.62l-1.21,-0.19l-1.08,0.71l-1.77,0.5l-0.44,0.46l-0.86,-0.09l-1.32,-1.01l-0.77,-2.27l0.36,-1.9l0.68,-1.23l-0.57,-1.17l-0.74,-0.43l0.12,-1.16l-0.9,-0.69l-1.1,0.09l-1.31,-1.48l0.53,-0.72l-0.04,-0.84l1.99,-0.86l0.05,-0.59l-0.71,-0.78l0.14,-0.57l1.66,-1.24l1.36,0.77l1.41,1.49l0.06,1.15l0.37,0.38l0.8,0.05l2.06,1.86Z\",\n            name: \"Guyana\"\n          },\n          GE: {\n            path: \"M521.71,168.93l5.29,0.89l4.07,2.01l1.41,-0.44l2.07,0.56l0.68,1.1l1.07,0.55l-0.12,0.59l0.98,1.29l-1.01,-0.13l-1.81,-0.83l-0.94,0.47l-3.23,0.43l-2.29,-1.39l-2.33,0.05l0.21,-0.97l-0.76,-2.26l-1.45,-1.12l-1.43,-0.39l-0.41,-0.42Z\",\n            name: \"Georgia\"\n          },\n          GB: {\n            path: \"M412.61,118.72l-2.19,3.22l-0.0,0.45l5.13,-0.3l-0.53,2.37l-2.2,3.12l0.29,0.63l2.37,0.21l2.33,4.3l1.76,0.69l2.2,5.12l2.94,0.77l-0.23,1.62l-1.15,0.88l-0.1,0.52l0.82,1.42l-1.86,1.43l-3.3,-0.02l-4.12,0.87l-1.04,-0.58l-0.47,0.06l-1.51,1.41l-2.12,-0.34l-1.86,1.18l-0.6,-0.29l3.19,-3.0l2.16,-0.69l0.28,-0.41l-0.34,-0.36l-3.73,-0.53l-0.4,-0.76l2.2,-0.87l0.17,-0.61l-1.26,-1.67l0.36,-1.7l3.38,0.28l0.43,-0.33l0.37,-1.99l-1.79,-2.49l-3.11,-0.72l-0.38,-0.59l0.79,-1.35l-0.04,-0.46l-0.82,-0.97l-0.61,0.01l-0.68,0.84l-0.1,-2.34l-1.23,-1.88l0.85,-3.47l1.77,-2.68l1.85,0.26l2.17,-0.22ZM406.26,132.86l-1.01,1.77l-1.57,-0.59l-1.16,0.01l0.37,-1.54l-0.39,-1.39l1.45,-0.1l2.3,1.84Z\",\n            name: \"United Kingdom\"\n          },\n          GA: {\n            path: \"M453.24,279.52l-0.08,0.98l0.7,1.29l2.36,0.24l-0.98,2.63l1.18,1.79l0.25,1.78l-0.29,1.52l-0.6,0.93l-1.84,-0.09l-1.23,-1.11l-0.66,0.23l-0.15,0.84l-1.42,0.26l-1.02,0.7l-0.11,0.52l0.77,1.35l-1.34,0.97l-3.94,-4.3l-1.44,-2.45l0.06,-0.6l0.54,-0.81l1.05,-3.46l4.17,-0.07l0.4,-0.4l-0.02,-2.66l2.39,0.21l1.25,-0.27Z\",\n            name: \"Gabon\"\n          },\n          GN: {\n            path: \"M391.8,254.11l0.47,0.8l1.11,-0.32l0.98,0.7l1.07,0.2l2.26,-1.22l0.64,0.44l1.13,1.56l-0.48,1.4l0.8,0.3l-0.08,0.48l0.46,0.68l-0.35,1.36l1.05,2.61l-1.0,0.69l0.03,1.41l-0.72,-0.06l-1.08,1.0l-0.24,-0.27l0.07,-1.11l-1.05,-1.54l-1.79,0.21l-0.35,-2.01l-1.6,-2.18l-2.0,-0.0l-1.31,0.54l-1.95,2.18l-1.86,-2.19l-1.2,-0.78l-0.3,-1.11l-0.8,-0.85l0.65,-0.72l0.81,-0.03l1.64,-0.8l0.23,-1.87l2.67,0.64l0.89,-0.3l1.21,0.15Z\",\n            name: \"Guinea\"\n          },\n          GM: {\n            path: \"M379.31,251.39l0.1,-0.35l2.43,-0.07l0.74,-0.61l0.51,-0.03l0.77,0.49l-1.03,-0.3l-1.87,0.9l-1.65,-0.04ZM384.03,250.91l0.91,0.05l0.75,-0.24l-0.59,0.31l-1.08,-0.13Z\",\n            name: \"Gambia\"\n          },\n          GL: {\n            path: \"M353.02,1.2l14.69,4.67l-3.68,1.89l-22.97,0.86l-0.36,0.27l0.12,0.43l1.55,1.18l8.79,-0.66l7.48,2.07l4.86,-1.77l1.66,1.73l-2.53,3.19l-0.01,0.48l0.46,0.15l6.35,-2.2l12.06,-2.31l7.24,1.13l1.09,1.99l-9.79,4.01l-1.44,1.32l-7.87,0.98l-0.35,0.41l0.38,0.38l5.07,0.24l-2.53,3.58l-2.07,3.81l0.08,6.05l2.57,3.11l-3.22,0.2l-4.12,1.66l-0.05,0.72l4.45,2.65l0.51,3.75l-2.3,0.4l-0.25,0.64l2.79,3.69l-4.82,0.31l-0.36,0.29l0.16,0.44l2.62,1.8l-0.59,1.22l-3.3,0.7l-3.45,0.01l-0.29,0.68l3.03,3.12l0.02,1.34l-4.4,-1.73l-1.72,1.35l0.15,0.66l3.31,1.15l3.13,2.71l0.81,3.16l-3.85,0.75l-4.89,-4.26l-0.47,-0.03l-0.17,0.44l0.79,2.86l-2.71,2.21l-0.13,0.44l0.37,0.27l8.73,0.34l-12.32,6.64l-7.24,1.48l-2.94,0.08l-2.69,1.75l-3.43,4.41l-5.24,2.84l-1.73,0.18l-7.12,2.1l-2.15,2.52l-0.13,2.99l-1.19,2.45l-4.01,3.09l-0.14,0.44l0.97,2.9l-2.28,6.48l-3.1,0.2l-3.83,-3.07l-4.86,-0.02l-2.25,-1.93l-1.7,-3.79l-4.3,-4.84l-1.21,-2.49l-0.44,-3.8l-3.32,-3.63l0.84,-2.86l-1.56,-1.7l2.28,-4.6l3.83,-1.74l1.03,-1.96l0.52,-3.47l-0.59,-0.41l-4.17,2.21l-2.07,0.58l-2.72,-1.28l-0.15,-2.71l0.85,-2.09l2.01,-0.06l5.06,1.2l0.46,-0.23l-0.14,-0.49l-6.54,-4.47l-2.67,0.55l-1.58,-0.86l2.56,-4.01l-0.03,-0.48l-1.5,-1.74l-4.98,-8.5l-3.13,-1.96l0.03,-1.88l-0.24,-0.37l-6.85,-3.02l-5.36,-0.38l-12.7,0.58l-2.78,-1.57l-3.66,-2.77l5.73,-1.45l5.0,-0.28l0.38,-0.38l-0.35,-0.41l-10.67,-1.38l-5.3,-2.06l0.25,-1.54l18.41,-5.26l1.22,-2.27l-0.25,-0.55l-6.14,-1.86l1.68,-1.77l8.55,-4.03l3.59,-0.63l0.3,-0.54l-0.88,-2.27l5.47,-1.47l7.65,-0.95l7.55,-0.05l3.04,1.85l6.48,-3.27l5.81,2.22l3.56,0.5l5.16,1.94l0.5,-0.21l-0.17,-0.52l-5.71,-3.13l0.28,-2.13l8.12,-3.6l8.7,0.28l3.35,-2.34l8.71,-0.6l19.93,0.8Z\",\n            name: \"Greenland\"\n          },\n          GH: {\n            path: \"M420.53,257.51l-0.01,0.72l0.96,1.2l0.24,3.73l0.59,0.95l-0.51,2.1l0.19,1.41l1.02,2.21l-6.97,2.84l-1.8,-0.57l0.04,-0.89l-1.02,-2.04l0.61,-2.65l1.07,-2.32l-0.96,-6.47l5.01,0.07l0.94,-0.39l0.61,0.11Z\",\n            name: \"Ghana\"\n          },\n          OM: {\n            path: \"M568.09,230.93l-0.91,1.67l-1.22,0.04l-0.6,0.76l-0.41,1.51l0.27,1.58l-1.16,0.05l-1.56,0.97l-0.76,1.74l-1.62,0.05l-0.98,0.65l-0.17,1.15l-0.89,0.52l-1.49,-0.18l-2.4,0.94l-2.47,-5.4l7.35,-2.71l1.67,-5.23l-1.12,-2.09l0.05,-0.83l0.67,-1.0l0.07,-1.05l0.9,-0.42l-0.05,-2.07l0.7,-0.01l1.0,1.62l1.51,1.08l3.3,0.84l1.73,2.29l0.81,0.37l-1.23,2.35l-0.99,0.79Z\",\n            name: \"Oman\"\n          },\n          TN: {\n            path: \"M448.1,188.24l-1.0,1.27l-0.02,1.32l0.84,0.88l-0.28,2.09l-1.53,1.32l-0.12,0.42l0.48,1.54l1.42,0.32l0.53,1.11l0.9,0.52l-0.11,1.67l-3.54,2.64l-0.1,2.38l-0.58,0.3l-0.96,-4.45l-1.54,-1.25l-0.16,-0.78l-1.92,-1.56l-0.18,-1.76l1.51,-1.62l0.59,-2.34l-0.38,-2.78l0.42,-1.21l2.45,-1.05l1.29,0.26l-0.06,1.11l0.58,0.38l1.47,-0.73Z\",\n            name: \"Tunisia\"\n          },\n          JO: {\n            path: \"M518.64,201.38l-5.14,1.56l-0.19,0.65l2.16,2.39l-0.89,1.14l-1.71,0.34l-1.71,1.8l-2.34,-0.37l1.21,-4.32l0.56,-4.07l2.8,0.94l4.46,-2.71l0.79,2.66Z\",\n            name: \"Jordan\"\n          },\n          HR: {\n            path: \"M455.59,162.84l1.09,0.07l-0.82,0.94l-0.27,-1.01ZM456.96,162.92l0.62,-0.41l1.73,0.45l0.42,-0.4l-0.01,-0.59l0.86,-0.52l0.2,-1.05l1.63,-0.68l2.57,1.68l2.07,0.6l0.87,-0.31l1.05,1.57l-0.52,0.63l-1.05,-0.56l-1.68,0.04l-2.1,-0.5l-1.29,0.06l-0.57,0.49l-0.59,-0.47l-0.62,0.16l-0.46,1.7l1.79,2.42l2.79,2.75l-1.18,-0.87l-2.21,-0.87l-1.67,-1.78l0.13,-0.63l-1.05,-1.19l-0.32,-1.27l-1.42,-0.43Z\",\n            name: \"Croatia\"\n          },\n          HT: {\n            path: \"M237.05,238.38l-1.16,0.43l-0.91,-0.55l0.05,-0.2l2.02,0.31ZM237.53,238.43l1.06,0.12l-0.05,0.01l-1.01,-0.12ZM239.25,238.45l0.79,-0.51l0.06,-0.62l-1.02,-1.0l0.02,-0.82l-0.3,-0.4l-0.93,-0.32l3.16,0.45l0.02,1.84l-0.48,0.34l-0.08,0.58l0.54,0.72l-1.78,-0.26Z\",\n            name: \"Haiti\"\n          },\n          HU: {\n            path: \"M462.08,157.89l0.65,-1.59l-0.09,-0.44l0.64,-0.0l0.39,-0.34l0.1,-0.69l1.75,0.87l2.32,-0.37l0.43,-0.66l3.49,-0.78l0.69,-0.78l0.57,-0.14l2.57,0.93l0.67,-0.23l1.03,0.65l0.08,0.37l-1.42,0.71l-2.59,4.14l-1.8,0.53l-1.68,-0.1l-2.74,1.23l-1.85,-0.54l-2.54,-1.66l-0.66,-1.1Z\",\n            name: \"Hungary\"\n          },\n          HN: {\n            path: \"M199.6,249.52l-1.7,-1.21l0.06,-0.94l3.04,-2.14l2.37,0.28l1.27,-0.09l1.1,-0.52l1.3,0.28l1.14,-0.25l1.38,0.37l2.23,1.37l-2.36,0.93l-1.23,-0.39l-0.88,1.3l-1.28,0.99l-0.98,-0.22l-0.42,0.52l-0.96,0.05l-0.36,0.41l0.04,0.88l-0.52,0.6l-0.3,0.04l-0.3,-0.55l-0.66,-0.31l0.11,-0.67l-0.48,-0.65l-0.87,-0.26l-0.73,0.2Z\",\n            name: \"Honduras\"\n          },\n          PR: {\n            path: \"M256.17,238.73l-0.26,0.27l-2.83,0.05l-0.07,-0.55l1.95,-0.1l1.22,0.33Z\",\n            name: \"Puerto Rico\"\n          },\n          PS: {\n            path: \"M509.21,203.07l0.1,-0.06l-0.02,0.03l-0.09,0.03ZM509.36,202.91l-0.02,-0.63l-0.33,-0.16l0.31,-1.09l0.24,0.1l-0.2,1.78Z\",\n            name: \"Palestine\"\n          },\n          PT: {\n            path: \"M401.84,187.38l-0.64,0.47l-1.13,-0.35l-0.91,0.17l0.28,-1.78l-0.24,-1.78l-1.25,-0.56l-0.45,-0.84l0.17,-1.66l1.01,-1.18l0.69,-2.92l-0.04,-1.39l-0.59,-1.9l1.3,-0.85l0.84,1.35l3.1,-0.3l0.46,0.99l-1.05,0.94l-0.03,2.16l-0.41,0.57l-0.08,1.1l-0.79,0.18l-0.26,0.59l0.91,1.6l-0.63,1.75l0.76,1.09l-1.1,1.52l0.07,1.05Z\",\n            name: \"Portugal\"\n          },\n          PY: {\n            path: \"M274.9,336.12l0.74,1.52l-0.16,3.45l0.32,0.41l2.64,0.5l1.11,-0.47l1.4,0.59l0.36,0.6l0.53,3.42l1.27,0.4l0.98,-0.38l0.51,0.27l-0.0,1.18l-1.21,5.32l-2.09,1.9l-1.8,0.4l-4.71,-0.98l2.2,-3.63l-0.32,-1.5l-2.78,-1.28l-3.03,-1.94l-2.07,-0.44l-4.34,-4.06l0.91,-2.9l0.08,-1.42l1.07,-2.04l4.13,-0.72l2.18,0.03l2.05,1.17l0.03,0.59Z\",\n            name: \"Paraguay\"\n          },\n          PA: {\n            path: \"M213.8,263.68l0.26,-1.52l-0.36,-0.26l-0.01,-0.49l0.44,-0.1l0.93,1.4l1.26,0.03l0.77,0.49l1.38,-0.23l2.51,-1.11l0.86,-0.72l3.45,0.85l1.4,1.18l0.41,1.74l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-0.47,-0.13l-0.54,-0.84l-1.5,-0.75l-1.1,0.16l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-2.59,-0.46Z\",\n            name: \"Panama\"\n          },\n          PG: {\n            path: \"M808.58,298.86l2.54,2.56l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.16ZM801.41,293.04l0.5,0.29l0.26,0.27l-0.49,-0.35l-0.27,-0.21ZM803.17,294.58l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,298.41l0.52,0.75l1.43,-0.19l2.27,-1.81l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,303.55l2.31,1.8l1.59,2.61l1.34,0.13l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.65l2.25,1.05l-1.22,0.13l-0.72,-0.63l-4.56,-0.65l-3.22,-2.87l-1.49,-2.34l-3.27,-1.1l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.55l-1.55,0.68l-1.36,-0.4l-2.21,-0.09l-0.08,-15.41l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.49l0.31,0.68l-1.76,0.21l-0.33,0.52l0.55,1.68Z\",\n            name: \"Papua New Guinea\"\n          },\n          PE: {\n            path: \"M244.96,295.21l-1.26,-0.07l-0.57,0.42l-1.93,0.45l-2.98,1.75l-0.36,1.36l-0.58,0.8l0.12,1.37l-1.24,0.59l-0.22,1.22l-0.62,0.84l1.04,2.27l1.28,1.44l-0.41,0.84l0.32,0.57l1.48,0.13l1.16,1.37l2.21,0.07l1.63,-1.08l-0.13,3.02l0.3,0.4l1.14,0.29l1.31,-0.34l1.9,3.59l-0.48,0.85l-0.17,3.85l-0.94,1.59l0.35,0.75l-0.47,1.07l0.98,1.97l-2.1,3.82l-0.98,0.5l-2.17,-1.28l-0.39,-1.16l-4.95,-2.58l-4.46,-2.79l-1.84,-1.51l-0.91,-1.84l0.3,-0.96l-2.11,-3.33l-4.82,-9.68l-1.04,-1.2l-0.87,-1.94l-3.4,-2.48l0.58,-1.18l-1.13,-2.23l0.66,-1.49l1.45,-1.15l-0.6,0.98l0.07,0.92l0.47,0.36l1.74,0.03l0.97,1.17l0.54,0.07l1.42,-1.03l0.6,-1.84l1.42,-2.02l3.04,-1.04l2.73,-2.62l0.86,-1.74l-0.1,-1.87l1.44,1.02l0.9,1.25l1.06,0.59l1.7,2.73l1.86,0.31l1.45,-0.61l0.96,0.39l1.36,-0.19l1.45,0.89l-1.4,2.21l0.31,0.61l0.59,0.05l0.47,0.5Z\",\n            name: \"Peru\"\n          },\n          PK: {\n            path: \"M615.09,192.34l-1.83,1.81l-2.6,0.39l-3.73,-0.68l-1.58,1.33l-0.09,0.42l1.77,4.39l1.7,1.23l-1.69,1.27l-0.12,2.14l-2.33,2.64l-1.6,2.8l-2.46,2.67l-3.03,-0.07l-2.76,2.83l0.05,0.6l1.5,1.11l0.26,1.9l1.44,1.5l0.37,1.68l-5.01,-0.01l-1.78,1.7l-1.42,-0.52l-0.76,-1.87l-2.27,-2.15l-11.61,0.86l0.71,-2.34l3.43,-1.32l0.25,-0.44l-0.21,-1.24l-1.2,-0.65l-0.28,-2.46l-2.29,-1.14l-1.28,-1.94l2.82,0.94l2.62,-0.38l1.42,0.33l0.76,-0.56l1.71,0.19l3.25,-1.14l0.27,-0.36l0.08,-2.19l1.18,-1.32l1.68,0.0l0.58,-0.82l1.6,-0.3l1.19,0.16l0.98,-0.78l0.02,-1.88l0.93,-1.47l1.48,-0.66l0.19,-0.55l-0.66,-1.25l2.04,-0.11l0.69,-1.01l-0.02,-1.16l1.11,-1.06l-0.17,-1.78l-0.49,-1.03l1.15,-0.98l5.42,-0.91l2.6,-0.82l1.6,1.16l0.97,2.34l3.45,0.97Z\",\n            name: \"Pakistan\"\n          },\n          PH: {\n            path: \"M737.01,263.84l0.39,2.97l-0.44,1.18l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.09l-0.42,0.69l-2.48,-1.23l-0.57,-1.49l0.65,-1.03l-0.1,-0.54l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.8l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.11l1.5,-0.06l0.38,-0.43l-0.09,-1.19l1.21,0.71l0.36,2.02ZM733.59,256.58l0.05,0.75l0.08,0.26l-0.8,-0.42l-0.18,-0.71l0.85,0.12ZM734.08,256.1l-0.12,-1.12l-1.0,-1.27l1.36,0.03l0.53,0.73l0.51,2.04l-1.27,-0.4ZM733.76,257.68l0.38,0.98l-0.32,0.15l-0.07,-1.13ZM724.65,238.43l1.46,0.7l0.72,-0.31l-0.32,1.17l0.79,1.71l-0.57,1.84l-1.53,1.04l-0.39,2.25l0.56,2.04l1.63,0.57l1.16,-0.27l2.71,1.23l-0.19,1.08l0.76,0.84l-0.08,0.36l-1.4,-0.9l-0.88,-1.27l-0.66,0.0l-0.38,0.55l-1.6,-1.31l-2.15,0.36l-0.87,-0.39l0.07,-0.61l0.66,-0.55l-0.01,-0.62l-0.75,-0.59l-0.72,0.44l-0.74,-0.87l-0.39,-2.49l0.32,0.27l0.66,-0.28l0.26,-3.97l0.7,-2.02l1.14,0.0ZM731.03,258.87l-0.88,0.85l-1.19,1.94l-1.05,-1.19l0.93,-1.1l0.32,-1.47l0.52,-0.06l-0.27,1.15l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.85ZM726.83,255.78l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.4l0.03,-2.26ZM724.81,252.09l-0.38,1.27l-1.42,-1.95l1.2,0.05l0.6,0.63ZM716.55,261.82l1.1,-0.95l0.03,-0.03l-0.28,0.36l-0.85,0.61ZM719.22,259.06l0.04,-0.06l0.8,-1.53l0.16,0.75l-1.0,0.84Z\",\n            name: \"Philippines\"\n          },\n          PL: {\n            path: \"M468.44,149.42l-1.11,-1.54l-1.86,-0.33l-0.48,-1.05l-1.72,-0.37l-0.65,0.69l-0.72,-0.36l0.11,-0.61l-0.33,-0.46l-1.75,-0.27l-1.04,-0.93l-0.94,-1.94l0.16,-1.22l-0.62,-1.8l-0.78,-1.07l0.57,-1.04l-0.48,-1.43l1.41,-0.83l6.91,-2.71l2.14,0.5l0.52,0.91l5.51,0.44l4.55,-0.05l1.07,0.31l0.48,0.84l0.15,1.58l0.65,1.2l-0.01,0.99l-1.27,0.58l-0.19,0.54l0.73,1.48l0.08,1.55l1.2,2.76l-0.17,0.58l-1.23,0.44l-2.27,2.72l0.18,0.95l-1.97,-1.03l-1.98,0.4l-1.36,-0.28l-1.24,0.58l-1.07,-0.97l-1.16,0.24Z\",\n            name: \"Poland\"\n          },\n          ZM: {\n            path: \"M481.47,313.3l0.39,0.31l2.52,0.14l0.99,1.17l2.01,0.35l1.4,-0.64l0.69,1.17l1.78,0.33l1.84,2.35l2.23,0.18l0.4,-0.43l-0.21,-2.74l-0.62,-0.3l-0.48,0.32l-1.98,-1.17l0.72,-5.29l-0.51,-1.18l0.57,-1.3l3.68,-0.62l0.26,0.63l1.21,0.63l0.9,-0.22l2.16,0.67l1.33,0.71l1.07,1.02l0.56,1.87l-0.88,2.7l0.43,2.09l-0.73,0.87l-0.76,2.37l0.59,0.68l-6.6,1.83l-0.29,0.44l0.19,1.45l-1.68,0.35l-1.43,1.02l-0.38,0.87l-0.87,0.26l-3.48,3.69l-4.16,-0.53l-1.52,-1.0l-1.77,-0.13l-1.83,0.52l-3.04,-3.4l0.11,-7.59l4.82,0.03l0.39,-0.49l-0.18,-0.76l0.33,-0.83l-0.4,-1.36l0.24,-1.05Z\",\n            name: \"Zambia\"\n          },\n          EH: {\n            path: \"M384.42,230.28l0.25,-0.79l1.06,-1.29l0.8,-3.51l3.38,-2.78l0.7,-1.81l0.06,4.84l-1.98,0.2l-0.94,1.59l0.39,3.56l-3.7,-0.01ZM392.01,218.1l0.7,-1.8l1.77,-0.24l2.09,0.34l0.95,-0.62l1.28,-0.07l-0.0,2.51l-6.79,-0.12Z\",\n            name: \"W. Sahara\"\n          },\n          EE: {\n            path: \"M485.71,115.04l2.64,0.6l2.56,0.11l-1.6,1.91l0.61,3.54l-0.81,0.87l-1.78,-0.01l-3.22,-1.76l-1.8,0.45l0.21,-1.53l-0.58,-0.41l-0.69,0.34l-1.26,-1.03l-0.17,-1.63l2.83,-0.92l3.05,-0.52Z\",\n            name: \"Estonia\"\n          },\n          EG: {\n            path: \"M492.06,205.03l1.46,0.42l2.95,-1.64l2.04,-0.21l1.53,0.3l0.59,1.19l0.69,0.04l0.41,-0.64l1.81,0.58l1.95,0.16l1.04,-0.51l1.42,4.08l-2.03,4.54l-1.66,-1.77l-1.76,-3.85l-0.64,-0.12l-0.36,0.67l1.04,2.88l3.44,6.95l1.78,3.04l2.03,2.65l-0.36,0.53l0.23,2.01l2.7,2.19l-28.41,0.0l0.0,-18.96l-0.73,-2.2l0.59,-1.56l-0.32,-1.26l0.68,-0.99l3.06,-0.04l4.82,1.52Z\",\n            name: \"Egypt\"\n          },\n          ZA: {\n            path: \"M467.14,373.21l-0.13,-1.96l-0.68,-1.56l0.7,-0.68l-0.13,-2.33l-4.56,-8.19l0.77,-0.86l0.6,0.45l0.69,1.31l2.83,0.72l1.5,-0.26l2.24,-1.39l0.19,-9.55l1.35,2.3l-0.21,1.5l0.61,1.2l0.4,0.19l1.79,-0.27l2.6,-2.07l0.69,-1.32l0.96,-0.48l2.19,1.04l2.04,0.13l1.77,-0.65l0.85,-2.12l1.38,-0.33l1.59,-2.76l2.15,-1.89l3.41,-1.87l2.0,0.45l1.02,-0.28l0.99,0.2l1.75,5.29l-0.38,3.25l-0.81,-0.23l-1.0,0.46l-0.87,1.68l-0.05,1.16l1.97,1.84l1.47,-0.29l0.69,-1.18l1.09,0.01l-0.76,3.69l-0.58,1.09l-2.2,1.79l-3.17,4.76l-2.8,2.83l-3.57,2.88l-2.53,1.05l-1.22,0.14l-0.51,0.7l-1.18,-0.32l-1.39,0.5l-2.59,-0.52l-1.61,0.33l-1.18,-0.11l-2.55,1.1l-2.1,0.44l-1.6,1.07l-0.85,0.05l-0.93,-0.89l-0.93,-0.15l-0.97,-1.13l-0.25,0.05ZM491.45,364.19l0.62,-0.93l1.48,-0.59l1.18,-2.19l-0.07,-0.49l-1.99,-1.69l-1.66,0.56l-1.43,1.14l-1.34,1.73l0.02,0.51l1.88,2.11l1.31,-0.16Z\",\n            name: \"South Africa\"\n          },\n          EC: {\n            path: \"M231.86,285.53l0.29,1.59l-0.69,1.45l-2.61,2.51l-3.13,1.11l-1.53,2.18l-0.49,1.68l-1.0,0.73l-1.02,-1.11l-1.78,-0.16l0.67,-1.15l-0.24,-0.86l1.25,-2.13l-0.54,-1.09l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.65,-1.33l2.75,1.35l0.77,1.05l2.12,0.35l0.76,-0.32l1.96,1.21Z\",\n            name: \"Ecuador\"\n          },\n          IT: {\n            path: \"M451.59,158.63l3.48,0.94l-0.21,1.17l0.3,0.83l-1.49,-0.24l-2.04,1.1l-0.21,0.39l0.13,1.45l-0.25,1.12l0.82,1.57l2.39,1.63l1.31,2.54l2.79,2.43l2.05,0.08l0.21,0.23l-0.39,0.33l0.09,0.67l4.05,1.97l2.17,1.76l-0.16,0.36l-1.17,-1.08l-2.18,-0.49l-0.44,0.2l-1.05,1.91l0.14,0.54l1.57,0.95l-0.19,0.98l-1.06,0.33l-1.25,2.34l-0.37,0.08l0.0,-0.33l1.0,-2.45l-1.73,-3.17l-1.12,-0.51l-0.88,-1.33l-1.51,-0.51l-1.27,-1.25l-1.75,-0.18l-4.12,-3.21l-1.62,-1.65l-1.03,-3.19l-3.53,-1.36l-1.3,0.51l-1.69,1.41l0.16,-0.72l-0.28,-0.47l-1.14,-0.33l-0.53,-1.96l0.72,-0.78l0.04,-0.48l-0.65,-1.17l0.8,0.39l1.4,-0.23l1.11,-0.84l0.52,0.35l1.19,-0.1l0.75,-1.2l1.53,0.33l1.36,-0.56l0.35,-1.14l1.08,0.32l0.68,-0.64l1.98,-0.44l0.42,0.82ZM459.19,184.75l-0.65,1.65l0.32,1.05l-0.31,0.89l-1.5,-0.85l-4.5,-1.67l0.19,-0.82l2.67,0.23l3.78,-0.48ZM443.93,176.05l1.18,1.66l-0.3,3.32l-1.06,-0.01l-0.77,0.73l-0.53,-0.44l-0.1,-3.37l-0.39,-1.22l1.04,0.01l0.92,-0.68Z\",\n            name: \"Italy\"\n          },\n          VN: {\n            path: \"M690.56,230.25l-2.7,1.82l-2.09,2.46l-0.63,1.95l4.31,6.45l2.32,1.65l1.43,1.94l1.11,4.59l-0.32,4.24l-1.93,1.54l-2.84,1.61l-2.11,2.15l-2.73,2.06l-0.59,-1.05l0.63,-1.53l-0.13,-0.47l-1.34,-1.04l1.51,-0.71l2.55,-0.18l0.3,-0.63l-0.82,-1.14l4.0,-2.07l0.31,-3.05l-0.57,-1.77l0.42,-2.66l-0.73,-1.97l-1.86,-1.76l-3.63,-5.29l-2.72,-1.46l0.36,-0.47l1.5,-0.64l0.21,-0.52l-0.97,-2.27l-0.37,-0.24l-2.83,-0.02l-2.24,-3.9l0.83,-0.4l4.39,-0.29l2.06,-1.31l1.15,0.89l1.88,0.4l-0.17,1.51l1.35,1.16l1.67,0.45Z\",\n            name: \"Vietnam\"\n          },\n          SB: {\n            path: \"M826.69,311.6l-0.61,0.09l-0.2,-0.33l0.37,0.15l0.44,0.09ZM824.18,307.38l-0.26,-0.3l-0.31,-0.91l0.03,0.0l0.54,1.21ZM823.04,309.33l-1.66,-0.22l-0.2,-0.52l1.16,0.28l0.69,0.46ZM819.28,304.68l1.14,0.65l0.02,0.03l-0.81,-0.44l-0.35,-0.23Z\",\n            name: \"Solomon Is.\"\n          },\n          ET: {\n            path: \"M516.04,247.79l1.1,0.84l1.63,-0.45l0.68,0.47l1.63,0.03l2.01,0.94l1.73,1.66l1.64,2.07l-1.52,2.04l0.16,1.72l0.39,0.38l2.05,0.0l-0.36,1.03l2.86,3.58l8.32,3.08l1.31,0.02l-6.32,6.75l-3.1,0.11l-2.36,1.77l-1.47,0.04l-0.86,0.79l-1.38,-0.0l-1.32,-0.81l-2.29,1.05l-0.76,0.98l-3.29,-0.41l-3.07,-2.07l-1.8,-0.07l-0.62,-0.6l0.0,-1.24l-0.28,-0.38l-1.15,-0.37l-1.4,-2.59l-1.19,-0.68l-0.47,-1.0l-1.27,-1.23l-1.16,-0.22l0.43,-0.72l1.45,-0.28l0.41,-0.95l-0.03,-2.21l0.68,-2.44l1.05,-0.63l1.43,-3.06l1.57,-1.37l1.02,-2.51l0.35,-1.88l2.52,0.46l0.44,-0.24l0.58,-1.43Z\",\n            name: \"Ethiopia\"\n          },\n          SO: {\n            path: \"M525.13,288.48l-1.13,-1.57l-0.03,-8.86l2.66,-3.38l1.67,-0.13l2.13,-1.69l3.41,-0.23l7.08,-7.55l2.91,-3.69l0.08,-4.82l2.98,-0.67l1.24,-0.86l0.45,-0.0l-0.2,3.0l-1.21,3.62l-2.73,5.97l-2.13,3.65l-5.03,6.16l-8.56,6.4l-2.78,3.08l-0.8,1.56Z\",\n            name: \"Somalia\"\n          },\n          ZW: {\n            path: \"M498.91,341.09l-1.11,-0.22l-0.92,0.28l-2.09,-0.44l-1.5,-1.11l-1.89,-0.43l-0.62,-1.4l-0.01,-0.84l-0.3,-0.38l-0.97,-0.25l-2.71,-2.74l-1.92,-3.32l3.83,0.45l3.73,-3.82l1.08,-0.44l0.26,-0.77l1.25,-0.9l1.41,-0.26l0.5,0.89l1.99,-0.05l1.72,1.17l1.11,0.17l1.05,0.66l0.01,2.99l-0.59,3.76l0.38,0.86l-0.23,1.23l-0.39,0.35l-0.63,1.81l-2.43,2.75Z\",\n            name: \"Zimbabwe\"\n          },\n          ES: {\n            path: \"M416.0,169.21l1.07,1.17l4.61,1.38l1.06,-0.57l2.6,1.26l2.71,-0.3l0.09,1.12l-2.14,1.8l-3.11,0.61l-0.31,0.31l-0.2,0.89l-1.54,1.69l-0.97,2.4l0.84,1.74l-1.32,1.27l-0.48,1.68l-1.88,0.65l-1.66,2.07l-5.36,-0.01l-1.79,1.08l-0.89,0.98l-0.88,-0.17l-0.79,-0.82l-0.68,-1.59l-2.37,-0.63l-0.11,-0.5l1.21,-1.82l-0.77,-1.13l0.61,-1.68l-0.76,-1.62l0.87,-0.49l0.09,-1.25l0.42,-0.6l0.03,-2.11l0.99,-0.69l0.13,-0.5l-1.03,-1.73l-1.46,-0.11l-0.61,0.38l-1.06,0.0l-0.52,-1.23l-0.53,-0.21l-1.32,0.67l-0.01,-1.49l-0.75,-0.96l3.03,-1.88l2.99,0.53l3.32,-0.02l2.63,0.51l6.01,-0.06Z\",\n            name: \"Spain\"\n          },\n          ER: {\n            path: \"M520.38,246.23l3.42,2.43l3.5,3.77l0.84,0.54l-0.95,-0.01l-3.51,-3.89l-2.33,-1.15l-1.73,-0.07l-0.91,-0.51l-1.26,0.51l-1.34,-1.02l-0.61,0.17l-0.66,1.61l-2.35,-0.43l-0.17,-0.67l1.29,-5.29l0.61,-0.61l1.95,-0.53l0.87,-1.01l1.17,2.41l0.68,2.33l1.49,1.43Z\",\n            name: \"Eritrea\"\n          },\n          ME: {\n            path: \"M468.91,172.53l-1.22,-1.02l0.47,-1.81l0.89,-0.72l2.26,1.51l-0.5,0.57l-0.75,-0.27l-1.14,1.73Z\",\n            name: \"Montenegro\"\n          },\n          MD: {\n            path: \"M488.41,153.73l1.4,-0.27l1.72,0.93l1.07,0.15l0.85,0.65l-0.14,0.84l0.96,0.85l1.12,2.47l-1.15,-0.07l-0.66,-0.41l-0.52,0.25l-0.09,0.86l-1.08,1.89l-0.27,-0.86l0.25,-1.34l-0.16,-1.6l-3.29,-4.34Z\",\n            name: \"Moldova\"\n          },\n          MG: {\n            path: \"M545.91,319.14l0.4,3.03l0.62,1.21l-0.21,1.02l-0.57,-0.8l-0.69,-0.01l-0.47,0.76l0.41,2.12l-0.18,0.87l-0.73,0.78l-0.15,2.14l-4.71,15.2l-1.06,2.88l-3.92,1.64l-3.12,-1.49l-0.6,-1.21l-0.19,-2.4l-0.86,-2.05l-0.21,-1.77l0.38,-1.62l1.21,-0.75l0.01,-0.76l1.19,-2.04l0.23,-1.66l-1.06,-2.99l-0.19,-2.21l0.81,-1.33l0.32,-1.46l4.63,-1.22l3.44,-3.0l0.85,-1.4l-0.08,-0.7l0.78,-0.04l1.38,-1.77l0.13,-1.64l0.45,-0.61l1.16,1.69l0.59,1.6Z\",\n            name: \"Madagascar\"\n          },\n          MA: {\n            path: \"M378.78,230.02l0.06,-0.59l0.92,-0.73l0.82,-1.37l-0.09,-1.04l0.79,-1.7l1.31,-1.58l0.96,-0.59l0.66,-1.55l0.09,-1.47l0.81,-1.48l1.72,-1.07l1.55,-2.69l1.16,-0.96l2.44,-0.39l1.94,-1.82l1.31,-0.78l2.09,-2.28l-0.51,-3.65l1.24,-3.7l1.5,-1.75l4.46,-2.57l2.37,-4.47l1.44,0.01l1.68,1.21l2.32,-0.19l3.47,0.65l0.8,1.54l0.16,1.71l0.86,2.96l0.56,0.59l-0.26,0.61l-3.05,0.44l-1.26,1.05l-1.33,0.22l-0.33,0.37l-0.09,1.78l-2.68,1.0l-1.07,1.42l-4.47,1.13l-4.04,2.01l-0.54,4.64l-1.15,0.06l-0.92,0.61l-1.96,-0.35l-2.42,0.54l-0.74,1.9l-0.86,0.4l-1.14,3.26l-3.53,3.01l-0.8,3.55l-0.96,1.1l-0.29,0.82l-4.95,0.18Z\",\n            name: \"Morocco\"\n          },\n          UZ: {\n            path: \"M598.64,172.75l-1.63,1.52l0.06,0.64l1.85,1.12l1.97,-0.64l2.21,1.17l-2.52,1.68l-2.59,-0.22l-0.18,-0.41l0.46,-1.23l-0.45,-0.53l-3.35,0.69l-2.1,3.51l-1.87,-0.12l-1.03,1.51l0.22,0.55l1.64,0.62l0.46,1.83l-1.19,2.49l-2.66,-0.53l0.05,-1.36l-0.26,-0.39l-3.3,-1.23l-2.56,-1.4l-4.4,-3.34l-1.34,-3.14l-1.08,-0.6l-2.58,0.13l-0.69,-0.44l-0.47,-2.52l-3.37,-1.6l-0.43,0.05l-2.07,1.72l-2.1,1.01l-0.21,0.47l0.28,1.01l-1.91,0.03l-0.09,-10.5l5.99,-1.7l6.19,3.54l2.71,2.84l7.05,-0.67l2.71,2.01l-0.17,2.81l0.39,0.42l0.9,0.02l0.44,2.14l0.38,0.32l2.94,0.09l0.95,1.42l1.28,-0.24l1.05,-2.04l4.43,-2.5Z\",\n            name: \"Uzbekistan\"\n          },\n          MM: {\n            path: \"M673.9,230.21l-1.97,1.57l-0.57,0.96l-1.4,0.6l-1.36,1.05l-1.99,0.36l-1.08,2.66l-0.91,0.4l-0.19,0.55l1.21,2.27l2.52,3.43l-0.79,1.91l-0.74,0.41l-0.17,0.52l0.65,1.37l1.61,1.95l0.25,2.58l0.9,2.13l-1.92,3.57l0.68,-2.25l-0.81,-1.74l0.19,-2.65l-1.05,-1.53l-1.24,-6.17l-1.12,-2.26l-0.6,-0.13l-4.34,3.02l-2.39,-0.65l0.77,-2.84l-0.52,-2.61l-1.91,-2.96l0.25,-0.75l-0.29,-0.51l-1.33,-0.3l-1.61,-1.93l-0.1,-1.3l0.82,-0.24l0.04,-1.64l1.02,-0.52l0.21,-0.45l-0.23,-0.95l0.54,-0.96l0.08,-2.22l1.46,0.45l0.47,-0.2l1.12,-2.19l0.16,-1.35l1.33,-2.16l-0.0,-1.52l2.89,-1.66l1.63,0.44l0.5,-0.44l-0.17,-1.4l0.64,-0.36l0.08,-1.04l0.77,-0.11l0.71,1.35l1.06,0.69l-0.03,3.86l-2.38,2.37l-0.3,3.15l0.46,0.43l2.28,-0.38l0.51,2.08l1.47,0.67l-0.6,1.8l0.19,0.48l2.97,1.48l1.64,-0.55l0.02,0.32Z\",\n            name: \"Myanmar\"\n          },\n          ML: {\n            path: \"M392.61,254.08l-0.19,-2.37l-0.99,-0.87l-0.44,-1.3l-0.09,-1.28l0.81,-0.58l0.35,-1.24l2.37,0.65l1.31,-0.47l0.86,0.15l0.66,-0.56l9.83,-0.04l0.38,-0.28l0.56,-1.8l-0.44,-0.65l-2.35,-21.95l3.27,-0.04l16.7,11.38l0.74,1.31l2.5,1.09l0.02,1.38l0.44,0.39l2.34,-0.21l0.01,5.38l-1.28,1.61l-0.26,1.49l-5.31,0.57l-1.07,0.92l-2.9,0.1l-0.86,-0.48l-1.38,0.36l-2.4,1.08l-0.6,0.87l-1.85,1.09l-0.43,0.7l-0.79,0.39l-1.44,-0.21l-0.81,0.84l-0.34,1.64l-1.91,2.02l-0.06,1.03l-0.67,1.22l0.13,1.16l-0.97,0.39l-0.23,-0.64l-0.52,-0.24l-1.35,0.4l-0.34,0.55l-2.69,-0.28l-0.37,-0.35l-0.02,-0.9l-0.65,-0.35l0.45,-0.64l-0.03,-0.53l-2.12,-2.44l-0.76,-0.01l-2.0,1.16l-0.78,-0.15l-0.8,-0.67l-1.21,0.23Z\",\n            name: \"Mali\"\n          },\n          MN: {\n            path: \"M676.61,146.48l3.81,1.68l5.67,-1.0l2.37,0.41l2.34,1.5l1.79,1.75l2.29,-0.03l3.12,0.52l2.47,-0.81l3.41,-0.59l3.53,-2.21l1.25,0.29l1.53,1.13l2.27,-0.21l-2.66,5.01l0.64,1.68l0.47,0.21l1.32,-0.38l2.38,0.48l2.02,-1.11l1.76,0.89l2.06,2.02l-0.13,0.53l-1.72,-0.29l-3.77,0.46l-1.88,0.99l-1.76,1.99l-3.71,1.17l-2.45,1.6l-3.83,-0.87l-0.41,0.17l-1.31,1.99l1.04,2.24l-1.52,0.9l-1.74,1.57l-2.79,1.02l-3.78,0.13l-4.05,1.05l-2.77,1.52l-1.16,-0.85l-2.94,0.0l-3.62,-1.79l-2.58,-0.49l-3.4,0.41l-5.12,-0.67l-2.63,0.06l-1.31,-1.6l-1.4,-3.0l-1.48,-0.33l-3.13,-1.94l-6.16,-0.93l-0.71,-1.06l0.86,-3.82l-1.93,-2.71l-3.5,-1.18l-1.95,-1.58l-0.5,-1.72l2.34,-0.52l4.75,-2.8l3.62,-1.47l2.18,0.97l2.46,0.05l1.81,1.53l2.46,0.12l3.95,0.71l2.43,-2.28l0.08,-0.48l-0.9,-1.72l2.24,-2.98l2.62,1.27l4.94,1.17l0.43,2.24Z\",\n            name: \"Mongolia\"\n          },\n          MK: {\n            path: \"M472.8,173.98l0.49,-0.71l3.57,-0.71l1.0,0.77l0.13,1.45l-0.65,0.53l-1.15,-0.05l-1.12,0.67l-1.39,0.22l-0.79,-0.55l-0.29,-1.03l0.19,-0.6Z\",\n            name: \"Macedonia\"\n          },\n          MW: {\n            path: \"M505.5,309.31l0.85,1.95l0.15,2.86l-0.69,1.65l0.71,1.8l0.06,1.28l0.49,0.64l0.07,1.06l0.4,0.55l0.8,-0.23l0.55,0.61l0.69,-0.21l0.34,0.6l0.19,2.94l-1.04,0.62l-0.54,1.25l-1.11,-1.08l-0.16,-1.56l0.51,-1.31l-0.32,-1.3l-0.99,-0.65l-0.82,0.12l-2.36,-1.64l0.63,-1.96l0.82,-1.18l-0.46,-2.01l0.9,-2.86l-0.94,-2.51l0.96,0.18l0.29,0.4Z\",\n            name: \"Malawi\"\n          },\n          MR: {\n            path: \"M407.36,220.66l-2.58,0.03l-0.39,0.44l2.42,22.56l0.36,0.43l-0.39,1.24l-9.75,0.04l-0.56,0.53l-0.91,-0.11l-1.27,0.45l-1.61,-0.66l-0.97,0.03l-0.36,0.29l-0.38,1.35l-0.42,0.23l-2.93,-3.4l-2.96,-1.52l-1.62,-0.03l-1.27,0.54l-1.12,-0.2l-0.65,0.4l-0.08,-0.49l0.68,-1.29l0.31,-2.43l-0.57,-3.91l0.23,-1.21l-0.69,-1.5l-1.15,-1.02l0.25,-0.39l9.58,0.02l0.4,-0.45l-0.46,-3.68l0.47,-1.04l2.12,-0.21l0.36,-0.4l-0.08,-6.4l7.81,0.13l0.41,-0.4l0.01,-3.31l7.76,5.35Z\",\n            name: \"Mauritania\"\n          },\n          UG: {\n            path: \"M498.55,276.32l0.7,-0.46l1.65,0.5l1.96,-0.57l1.7,0.01l1.45,-0.98l0.91,1.33l1.33,3.95l-2.57,4.03l-1.46,-0.4l-2.54,0.91l-1.37,1.61l-0.01,0.81l-2.42,-0.01l-2.26,1.01l-0.17,-1.59l0.58,-1.04l0.14,-1.94l1.37,-2.28l1.78,-1.58l-0.17,-0.65l-0.72,-0.24l0.13,-2.43Z\",\n            name: \"Uganda\"\n          },\n          MY: {\n            path: \"M717.47,273.46l-1.39,0.65l-2.12,-0.41l-2.88,-0.0l-0.38,0.28l-0.84,2.75l-0.99,0.96l-1.21,3.29l-1.73,0.45l-2.45,-0.68l-1.39,0.31l-1.33,1.15l-1.59,-0.14l-1.41,0.44l-1.44,-1.19l-0.18,-0.73l1.34,0.53l1.93,-0.47l0.75,-2.22l4.02,-1.03l2.75,-3.21l0.82,0.94l0.64,-0.05l0.4,-0.65l0.96,0.06l0.42,-0.36l0.24,-2.68l1.81,-1.64l1.21,-1.86l0.63,-0.01l1.07,1.05l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88ZM673.68,269.59l0.17,1.09l0.47,0.33l1.65,-0.3l0.87,-0.94l1.61,1.52l0.98,1.56l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.67l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.46,-1.05l1.63,0.84Z\",\n            name: \"Malaysia\"\n          },\n          MX: {\n            path: \"M133.12,200.41l0.2,0.47l9.63,3.33l6.96,-0.02l0.4,-0.4l0.0,-0.74l3.77,0.0l3.55,2.93l1.39,2.83l1.52,1.04l2.08,0.82l0.47,-0.14l1.46,-2.0l1.73,-0.04l1.59,0.98l2.05,3.35l1.47,1.56l1.26,3.14l2.18,1.02l2.26,0.58l-1.18,3.72l-0.42,5.04l1.79,4.89l1.62,1.89l0.61,1.52l1.2,1.42l2.55,0.66l1.37,1.1l7.54,-1.89l1.86,-1.3l1.14,-4.3l4.1,-1.21l3.57,-0.11l0.32,0.3l-0.06,0.94l-1.26,1.45l-0.67,1.71l0.38,0.7l-0.72,2.27l-0.49,-0.3l-1.0,0.08l-1.0,1.39l-0.47,-0.11l-0.53,0.47l-4.26,-0.02l-0.4,0.4l-0.0,1.06l-1.1,0.26l0.1,0.44l1.82,1.44l0.56,0.91l-3.19,0.21l-1.21,2.09l0.24,0.72l-0.2,0.44l-2.24,-2.18l-1.45,-0.93l-2.22,-0.69l-1.52,0.22l-3.07,1.16l-10.55,-3.85l-2.86,-1.96l-3.78,-0.92l-1.08,-1.19l-2.62,-1.43l-1.18,-1.54l-0.38,-0.81l0.66,-0.63l-0.18,-0.53l0.52,-0.76l0.01,-0.91l-2.0,-3.82l-2.21,-2.63l-2.53,-2.09l-1.19,-1.62l-2.2,-1.17l-0.3,-0.43l0.34,-1.48l-0.21,-0.45l-1.23,-0.6l-1.36,-1.2l-0.59,-1.78l-1.54,-0.47l-2.44,-2.55l-0.16,-0.9l-1.33,-2.03l-0.84,-1.99l-0.16,-1.33l-1.81,-1.1l-0.97,0.05l-1.31,-0.7l-0.57,0.22l-0.4,1.12l0.72,3.77l3.51,3.89l0.28,0.78l0.53,0.26l0.41,1.43l1.33,1.73l1.58,1.41l0.8,2.39l1.43,2.41l0.13,1.32l0.37,0.36l1.04,0.08l1.67,2.28l-0.85,0.76l-0.66,-1.51l-1.68,-1.54l-2.91,-1.87l0.06,-1.82l-0.54,-1.68l-2.91,-2.03l-0.55,0.09l-1.95,-1.1l-0.88,-0.94l0.68,-0.08l0.93,-1.01l0.08,-1.78l-1.93,-1.94l-1.46,-0.77l-3.75,-7.56l4.88,-0.42Z\",\n            name: \"Mexico\"\n          },\n          IL: {\n            path: \"M507.76,203.05l0.4,-0.78l0.18,0.4l-0.33,1.03l0.52,0.44l0.68,-0.22l-0.86,3.6l-1.16,-3.32l0.59,-0.74l-0.03,-0.41ZM508.73,200.34l0.37,-1.02l0.64,0.0l0.52,-0.51l-0.49,1.53l-0.56,-0.24l-0.48,0.23Z\",\n            name: \"Israel\"\n          },\n          FR: {\n            path: \"M444.48,172.62l-0.64,1.78l-0.58,-0.31l-0.49,-1.72l0.4,-0.89l1.0,-0.72l0.3,1.85ZM429.64,147.1l1.78,1.58l1.46,-0.13l2.1,1.42l1.35,0.27l1.23,0.83l3.04,0.5l-1.03,1.85l-0.3,2.12l-0.41,0.32l-0.95,-0.24l-0.5,0.43l0.06,0.61l-1.81,1.92l-0.04,1.42l0.55,0.38l0.88,-0.36l0.61,0.97l-0.03,1.0l0.57,0.91l-0.75,1.09l0.65,2.39l1.27,0.57l-0.18,0.82l-2.01,1.53l-4.77,-0.8l-3.82,1.0l-0.53,1.85l-2.49,0.34l-2.71,-1.31l-1.16,0.57l-4.31,-1.29l-0.72,-0.86l1.19,-1.78l0.39,-6.45l-2.58,-3.3l-1.9,-1.66l-3.72,-1.23l-0.19,-1.72l2.81,-0.61l4.12,0.81l0.47,-0.48l-0.6,-2.77l1.94,0.95l5.83,-2.54l0.92,-2.74l1.6,-0.49l0.24,0.78l1.36,0.33l1.05,1.19ZM289.01,278.39l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z\",\n            name: \"France\"\n          },\n          XS: {\n            path: \"M531.15,258.94l1.51,0.12l5.13,-0.95l5.3,-1.48l-0.01,4.4l-2.67,3.39l-1.85,0.01l-8.04,-2.94l-2.55,-3.17l1.12,-1.71l2.04,2.34Z\",\n            name: \"Somaliland\"\n          },\n          FI: {\n            path: \"M492.17,76.39l-0.23,3.5l3.52,2.63l-2.08,2.88l-0.02,0.44l2.8,4.56l-1.59,3.31l2.16,3.24l-0.94,2.39l0.14,0.47l3.44,2.51l-0.77,1.62l-7.52,6.95l-4.5,0.31l-4.38,1.37l-3.8,0.74l-1.44,-1.96l-2.17,-1.11l0.5,-3.66l-1.16,-3.33l1.09,-2.08l2.21,-2.42l5.67,-4.32l1.64,-0.83l0.21,-0.42l-0.46,-2.02l-3.38,-1.89l-0.75,-1.43l-0.22,-6.74l-6.79,-4.8l0.8,-0.62l2.54,2.12l3.46,-0.12l3.0,0.96l2.51,-2.11l1.17,-3.08l3.55,-1.38l2.76,1.53l-0.95,2.79Z\",\n            name: \"Finland\"\n          },\n          FJ: {\n            path: \"M869.95,326.98l-1.21,0.41l-0.08,-0.23l2.97,-1.21l-0.14,0.42l-1.54,0.61ZM867.58,329.25l0.43,0.37l-0.27,0.88l-1.24,0.28l-1.04,-0.24l-0.14,-0.66l0.63,-0.58l0.92,0.26l0.7,-0.31Z\",\n            name: \"Fiji\"\n          },\n          FK: {\n            path: \"M274.36,425.85l1.44,1.08l-0.47,0.73l-3.0,0.89l-0.96,-1.0l-0.52,-0.05l-1.83,1.29l-0.73,-0.88l2.46,-1.64l1.93,0.76l1.67,-1.19Z\",\n            name: \"Falkland Is.\"\n          },\n          NI: {\n            path: \"M202.33,252.67l0.81,-0.18l1.03,-1.02l-0.04,-0.88l0.68,-0.0l0.63,-0.54l0.97,0.22l1.53,-1.26l0.58,-0.99l1.17,0.34l2.41,-0.94l0.13,1.32l-0.81,1.94l0.1,2.74l-0.36,0.37l-0.11,1.75l-0.47,0.81l0.18,1.14l-1.73,-0.85l-0.71,0.27l-1.47,-0.6l-0.52,0.16l-4.01,-3.81Z\",\n            name: \"Nicaragua\"\n          },\n          NL: {\n            path: \"M430.31,143.39l0.6,-0.5l2.13,-4.8l3.2,-1.33l1.74,0.08l0.33,0.8l-0.59,2.92l-0.5,0.99l-1.26,0.0l-0.4,0.45l0.33,2.7l-2.2,-1.78l-2.62,0.58l-0.75,-0.11Z\",\n            name: \"Netherlands\"\n          },\n          NO: {\n            path: \"M491.44,67.41l6.8,2.89l-2.29,0.86l-0.15,0.65l2.33,2.38l-4.98,1.79l0.84,-2.45l-0.18,-0.48l-3.55,-1.8l-3.89,1.52l-1.42,3.38l-2.12,1.72l-2.64,-1.0l-3.11,0.21l-2.66,-2.22l-0.5,-0.01l-1.41,1.1l-1.44,0.17l-0.35,0.35l-0.32,2.47l-4.32,-0.64l-0.44,0.29l-0.58,2.11l-2.45,0.2l-4.15,7.68l-3.88,5.76l0.78,1.62l-0.64,1.16l-2.24,-0.06l-0.38,0.24l-1.66,3.89l0.15,5.17l1.57,2.04l-0.78,4.16l-2.02,2.48l-0.85,1.63l-1.3,-1.75l-0.58,-0.07l-4.87,4.19l-3.1,0.79l-3.16,-1.7l-0.85,-3.77l-0.77,-8.55l2.14,-2.31l6.55,-3.27l5.02,-4.17l10.63,-13.84l10.98,-8.7l5.35,-1.91l4.34,0.12l3.69,-3.64l4.49,0.19l4.37,-0.89ZM484.55,20.04l4.26,1.75l-3.1,2.55l-7.1,0.65l-7.08,-0.9l-0.37,-1.31l-0.37,-0.29l-3.44,-0.1l-2.08,-2.0l6.87,-1.44l3.9,1.31l2.39,-1.64l6.13,1.4ZM481.69,33.93l-4.45,1.74l-3.54,-0.99l1.12,-0.9l0.05,-0.58l-1.06,-1.22l4.22,-0.89l1.09,1.97l2.57,0.87ZM466.44,24.04l7.43,3.77l-5.41,1.86l-1.58,4.08l-2.26,1.2l-1.12,4.11l-2.61,0.18l-4.79,-2.86l1.84,-1.54l-0.1,-0.68l-3.69,-1.53l-4.77,-4.51l-1.73,-3.89l6.11,-1.82l1.54,1.92l3.57,-0.08l1.2,-1.96l3.32,-0.18l3.05,1.92Z\",\n            name: \"Norway\"\n          },\n          NA: {\n            path: \"M474.26,330.66l-0.97,0.04l-0.38,0.4l-0.07,8.9l-2.09,0.08l-0.39,0.4l-0.0,17.42l-1.98,1.23l-1.17,0.17l-2.44,-0.66l-0.48,-1.13l-0.99,-0.74l-0.54,0.05l-0.9,1.01l-1.53,-1.68l-0.93,-1.88l-1.99,-8.56l-0.06,-3.12l-0.33,-1.52l-2.3,-3.34l-1.91,-4.83l-1.96,-2.43l-0.12,-1.57l2.33,-0.79l1.43,0.07l1.81,1.13l10.23,-0.25l1.84,1.23l5.87,0.35ZM474.66,330.64l6.51,-1.6l1.9,0.39l-1.69,0.4l-1.31,0.83l-1.12,-0.94l-4.29,0.92Z\",\n            name: \"Namibia\"\n          },\n          VU: {\n            path: \"M839.04,322.8l0.22,1.14l-0.44,0.03l-0.2,-1.45l0.42,0.27Z\",\n            name: \"Vanuatu\"\n          },\n          NC: {\n            path: \"M838.78,341.24l-0.33,0.22l-2.9,-1.75l-3.26,-3.37l1.65,0.83l4.85,4.07Z\",\n            name: \"New Caledonia\"\n          },\n          NE: {\n            path: \"M454.75,226.53l1.33,1.37l0.48,0.07l1.27,-0.7l0.53,3.52l0.94,0.83l0.17,0.92l0.81,0.69l-0.44,0.95l-0.96,5.26l-0.13,3.22l-3.04,2.31l-1.22,3.57l1.02,1.24l-0.0,1.46l0.39,0.4l1.13,0.04l-0.9,1.25l-1.47,-2.42l-0.86,-0.29l-2.09,1.37l-1.74,-0.67l-1.45,-0.17l-0.85,0.35l-1.36,-0.07l-1.64,1.09l-1.06,0.05l-2.94,-1.28l-1.44,0.59l-1.01,-0.03l-0.97,-0.94l-2.7,-0.98l-2.69,0.3l-0.87,0.64l-0.47,1.6l-0.75,1.16l-0.12,1.53l-1.57,-1.1l-1.31,0.24l0.03,-0.81l-0.32,-0.41l-2.59,-0.52l-0.15,-1.16l-1.35,-1.6l-0.29,-1.0l0.13,-0.84l1.29,-0.08l1.08,-0.92l3.31,-0.22l2.22,-0.41l0.32,-0.34l0.2,-1.47l1.39,-1.88l-0.01,-5.66l3.36,-1.12l7.24,-5.12l8.42,-4.92l3.69,1.06Z\",\n            name: \"Niger\"\n          },\n          NG: {\n            path: \"M456.32,253.89l0.64,0.65l-0.28,1.04l-2.11,2.01l-2.03,5.18l-1.37,1.16l-1.15,3.18l-1.33,0.66l-1.46,-0.97l-1.21,0.16l-1.38,1.36l-0.91,0.24l-1.79,4.06l-2.33,0.81l-1.11,-0.07l-0.86,0.5l-1.71,-0.05l-1.19,-1.39l-0.89,-1.89l-1.77,-1.66l-3.95,-0.08l0.07,-5.21l0.42,-1.43l1.95,-2.3l-0.14,-0.91l0.43,-1.18l-0.53,-1.41l0.25,-2.92l0.72,-1.07l0.32,-1.34l0.46,-0.39l2.47,-0.28l2.34,0.89l1.15,1.02l1.28,0.04l1.22,-0.58l3.03,1.27l1.49,-0.14l1.36,-1.0l1.33,0.07l0.82,-0.35l3.45,0.8l1.82,-1.32l1.84,2.67l0.66,0.16Z\",\n            name: \"Nigeria\"\n          },\n          NZ: {\n            path: \"M857.8,379.65l1.86,3.12l0.44,0.18l0.3,-0.38l0.03,-1.23l0.38,0.27l0.57,2.31l2.02,0.94l1.81,0.27l1.57,-1.06l0.7,0.18l-1.15,3.59l-1.98,0.11l-0.74,1.2l0.2,1.11l-2.42,3.98l-1.49,0.92l-1.04,-0.85l1.21,-2.05l-0.81,-2.01l-2.63,-1.25l0.04,-0.57l1.82,-1.19l0.43,-2.34l-0.16,-2.03l-0.95,-1.82l-0.06,-0.72l-3.11,-3.64l-0.79,-1.52l1.56,1.45l1.76,0.66l0.65,2.34ZM853.83,393.59l0.57,1.24l0.59,0.16l1.42,-0.97l0.46,0.79l0.0,1.03l-2.47,3.48l-1.26,1.2l-0.06,0.5l0.55,0.87l-1.41,0.07l-2.33,1.38l-2.03,5.02l-3.02,2.16l-2.06,-0.06l-1.71,-1.04l-2.47,-0.2l-0.27,-0.73l1.22,-2.1l3.05,-2.94l1.62,-0.59l4.02,-2.82l1.57,-1.67l1.07,-2.16l0.88,-0.7l0.48,-1.75l1.24,-0.97l0.35,0.79Z\",\n            name: \"New Zealand\"\n          },\n          NP: {\n            path: \"M641.14,213.62l0.01,3.19l-1.74,0.04l-4.8,-0.86l-1.58,-1.39l-3.37,-0.34l-7.65,-3.7l0.8,-2.09l2.33,-1.7l1.77,0.75l2.49,1.76l1.38,0.41l0.99,1.35l1.9,0.52l1.99,1.17l5.49,0.9Z\",\n            name: \"Nepal\"\n          },\n          XK: {\n            path: \"M472.77,172.64l-1.08,-1.29l0.96,-0.77l0.29,-0.83l1.98,1.64l-0.36,0.67l-1.79,0.58Z\",\n            name: \"Kosovo\"\n          },\n          CI: {\n            path: \"M407.4,259.27l0.86,0.42l0.56,0.9l1.13,0.53l1.19,-0.61l0.97,-0.08l1.42,0.54l0.6,3.24l-1.03,2.08l-0.65,2.84l1.06,2.33l-0.06,0.53l-2.54,-0.47l-1.66,0.03l-3.06,0.46l-4.11,1.6l0.32,-3.06l-1.18,-1.31l-1.32,-0.66l0.42,-0.85l-0.2,-1.4l0.5,-0.67l0.01,-1.59l0.84,-0.32l0.26,-0.5l-1.15,-3.01l0.12,-0.5l0.51,-0.25l0.66,0.31l1.93,0.02l0.67,-0.71l0.71,-0.14l0.25,0.69l0.57,0.22l1.4,-0.61Z\",\n            name: \"C\\xf4te d'Ivoire\"\n          },\n          CH: {\n            path: \"M444.62,156.35l-0.29,0.87l0.18,0.53l1.13,0.58l1.0,0.1l-0.1,0.65l-0.79,0.38l-1.72,-0.37l-0.45,0.23l-0.45,1.04l-0.75,0.06l-0.84,-0.4l-1.32,1.0l-0.96,0.12l-0.88,-0.55l-0.81,-1.3l-0.49,-0.16l-0.63,0.26l0.02,-0.65l1.71,-1.66l0.1,-0.56l0.93,0.08l0.58,-0.46l1.99,0.02l0.66,-0.61l2.19,0.79Z\",\n            name: \"Switzerland\"\n          },\n          CO: {\n            path: \"M242.07,254.93l-1.7,0.59l-0.59,1.18l-1.7,1.69l-0.38,1.93l-0.67,1.43l0.31,0.57l1.03,0.13l0.25,0.9l0.57,0.64l-0.04,2.34l1.64,1.42l3.16,-0.24l1.26,0.28l1.67,2.06l0.41,0.13l4.09,-0.39l0.45,0.22l-0.92,1.95l-0.2,1.8l0.52,1.83l0.75,1.05l-1.12,1.1l0.07,0.63l0.84,0.51l0.74,1.29l-0.39,-0.45l-0.59,-0.01l-0.71,0.74l-4.71,-0.05l-0.4,0.41l0.03,1.57l0.33,0.39l1.11,0.2l-1.68,0.4l-0.29,0.38l-0.01,1.82l1.16,1.14l0.34,1.25l-1.05,7.05l-1.04,-0.87l1.26,-1.99l-0.13,-0.56l-2.18,-1.23l-1.38,0.2l-1.14,-0.38l-1.27,0.61l-1.55,-0.26l-1.38,-2.46l-1.23,-0.75l-0.85,-1.2l-1.67,-1.19l-0.86,0.13l-2.11,-1.32l-1.01,0.31l-1.8,-0.29l-0.52,-0.91l-3.09,-1.68l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.66,-0.43l0.39,-1.38l-0.52,-2.1l0.49,-0.83l-0.4,-2.13l-0.97,-1.35l0.17,-0.66l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.69l0.93,-0.24l0.3,-0.38l0.45,-2.76l1.22,-1.0l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.84l1.15,-1.14l0.91,0.46l-0.25,0.45Z\",\n            name: \"Colombia\"\n          },\n          CN: {\n            path: \"M740.23,148.97l4.57,1.3l2.8,2.17l0.98,2.9l0.38,0.27l3.8,0.0l2.32,-1.28l3.29,-0.75l-0.96,2.09l-1.02,1.28l-0.85,3.4l-1.52,2.73l-2.76,-0.5l-2.4,1.13l-0.21,0.45l0.64,2.57l-0.32,3.2l-0.94,0.06l-0.37,0.89l-0.91,-1.01l-0.64,0.07l-0.92,1.57l-3.73,1.25l-0.26,0.48l0.26,1.06l-1.5,-0.08l-1.09,-0.86l-0.56,0.06l-1.67,2.06l-2.7,1.56l-2.03,1.88l-3.4,0.83l-1.93,1.4l-1.15,0.34l0.33,-0.7l-0.41,-0.89l1.79,-1.79l0.02,-0.54l-1.32,-1.56l-0.48,-0.1l-2.24,1.09l-2.83,2.06l-1.51,1.83l-2.28,0.13l-1.55,1.49l-0.04,0.5l1.32,1.97l2.0,0.58l0.31,1.35l1.98,0.84l3.0,-1.96l2.0,1.02l1.49,0.11l0.22,0.83l-3.37,0.86l-1.12,1.48l-2.5,1.52l-1.29,1.99l0.14,0.56l2.57,1.48l0.97,2.7l3.17,4.63l-0.03,1.66l-1.35,0.65l-0.2,0.51l0.6,1.47l1.4,0.91l-0.89,3.82l-1.43,0.38l-3.85,6.44l-2.27,3.11l-6.78,4.57l-2.73,0.29l-1.45,1.04l-0.62,-0.61l-0.55,-0.01l-1.36,1.25l-3.39,1.27l-2.61,0.4l-1.1,2.79l-0.81,0.09l-0.49,-1.42l0.5,-0.85l-0.25,-0.59l-3.36,-0.84l-1.3,0.4l-2.31,-0.62l-0.94,-0.84l0.33,-1.28l-0.3,-0.49l-2.19,-0.46l-1.13,-0.93l-0.47,-0.02l-2.06,1.36l-4.29,0.28l-2.76,1.05l-0.28,0.43l0.32,2.53l-0.59,-0.03l-0.19,-1.34l-0.55,-0.34l-1.68,0.7l-2.46,-1.23l0.62,-1.87l-0.26,-0.51l-1.37,-0.44l-0.54,-2.22l-0.45,-0.3l-2.13,0.35l0.24,-2.48l2.39,-2.4l0.03,-4.31l-1.19,-0.92l-0.78,-1.49l-0.41,-0.21l-1.41,0.19l-1.98,-0.3l0.46,-1.07l-1.17,-1.7l-0.55,-0.11l-1.63,1.05l-2.25,-0.57l-2.89,1.73l-2.25,1.98l-1.75,0.29l-1.17,-0.71l-3.31,-0.65l-1.48,0.79l-1.04,1.27l-0.12,-1.17l-0.54,-0.34l-1.44,0.54l-5.55,-0.86l-1.98,-1.16l-1.89,-0.54l-0.99,-1.35l-1.34,-0.37l-2.55,-1.79l-2.01,-0.84l-1.21,0.56l-5.57,-3.45l-0.53,-2.31l1.19,0.25l0.48,-0.37l0.08,-1.42l-0.98,-1.56l0.15,-2.44l-2.69,-3.32l-4.12,-1.23l-0.67,-2.0l-1.92,-1.48l-0.38,-0.7l-0.51,-3.01l-1.52,-0.66l-0.7,0.13l-0.48,-2.05l0.55,-0.51l-0.09,-0.82l2.03,-1.19l1.6,-0.54l2.56,0.38l0.42,-0.22l0.85,-1.7l3.0,-0.33l1.1,-1.26l4.05,-1.77l0.39,-0.91l-0.17,-1.44l1.45,-0.67l0.2,-0.52l-2.07,-4.9l4.51,-1.12l1.37,-0.73l1.89,-5.51l4.98,0.86l1.51,-1.7l0.11,-2.87l1.99,-0.38l1.83,-2.06l0.49,-0.13l0.68,2.08l2.23,1.77l3.44,1.16l1.55,2.29l-0.92,3.49l0.96,1.67l6.54,1.13l2.95,1.87l1.47,0.35l1.06,2.62l1.53,1.91l3.05,0.08l5.14,0.67l3.37,-0.41l2.36,0.43l3.65,1.8l3.06,0.04l1.45,0.88l2.87,-1.59l3.95,-1.02l3.83,-0.14l3.06,-1.14l1.77,-1.6l1.72,-1.01l0.17,-0.49l-1.1,-2.05l1.02,-1.54l4.02,0.8l2.45,-1.61l3.76,-1.19l1.96,-2.13l1.63,-0.83l3.51,-0.4l1.92,0.34l0.46,-0.3l0.17,-1.5l-2.27,-2.22l-2.11,-1.09l-2.18,1.11l-2.32,-0.47l-1.29,0.32l-0.4,-0.82l2.73,-5.16l3.02,1.06l3.53,-2.06l0.18,-1.68l2.16,-3.35l1.49,-1.35l-0.03,-1.85l-1.07,-0.85l1.54,-1.26l2.98,-0.59l3.23,-0.09l3.64,0.99l2.04,1.16l3.29,6.71l0.92,3.19ZM696.92,237.31l-1.87,1.08l-1.63,-0.64l-0.06,-1.79l1.03,-0.98l2.58,-0.69l1.16,0.05l0.3,0.54l-0.98,1.06l-0.53,1.37Z\",\n            name: \"China\"\n          },\n          CM: {\n            path: \"M457.92,257.49l1.05,1.91l-1.4,0.16l-1.05,-0.23l-0.45,0.22l-0.54,1.19l0.08,0.45l1.48,1.47l1.05,0.45l1.01,2.46l-1.52,2.99l-0.68,0.68l-0.13,3.69l2.38,3.84l1.09,0.8l0.24,2.48l-3.67,-1.14l-11.27,-0.13l0.23,-1.79l-0.98,-1.66l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l1.71,-4.27l0.75,-0.13l1.38,-1.36l0.65,-0.03l1.71,0.99l1.93,-1.12l1.14,-3.18l1.38,-1.17l2.0,-5.14l2.17,-2.13l0.3,-1.64l-0.86,-0.88l0.03,-0.33l0.94,1.28l0.07,3.22Z\",\n            name: \"Cameroon\"\n          },\n          CL: {\n            path: \"M246.5,429.18l-3.14,1.83l-0.57,3.16l-0.64,0.05l-2.68,-1.06l-2.82,-2.33l-3.04,-1.89l-0.69,-1.85l0.63,-2.14l-1.21,-2.11l-0.31,-5.37l1.01,-2.91l2.57,-2.38l-0.18,-0.68l-3.16,-0.77l2.05,-2.47l0.77,-4.65l2.32,0.9l0.54,-0.29l1.31,-6.31l-0.22,-0.44l-1.68,-0.8l-0.56,0.28l-0.7,3.36l-0.81,-0.22l1.56,-9.41l1.15,-2.24l-0.71,-2.82l-0.18,-2.84l1.01,-0.33l3.26,-9.14l1.07,-4.22l-0.56,-4.21l0.74,-2.34l-0.29,-3.27l1.46,-3.34l2.04,-16.59l-0.66,-7.76l1.03,-0.53l0.54,-0.9l0.79,1.14l0.32,1.78l1.25,1.16l-0.69,2.55l1.33,2.9l0.97,3.59l0.46,0.29l1.5,-0.3l0.11,0.23l-0.76,2.44l-2.57,1.23l-0.23,0.37l0.08,4.33l-0.46,0.77l0.56,1.21l-1.58,1.51l-1.68,2.62l-0.89,2.47l0.2,2.7l-1.48,2.73l1.12,5.09l0.64,0.61l-0.01,2.29l-1.38,2.68l0.01,2.4l-1.89,2.04l0.02,2.75l0.69,2.57l-1.43,1.13l-1.26,5.68l0.39,3.51l-0.97,0.89l0.58,3.5l1.02,1.14l-0.65,1.02l0.15,0.57l1.0,0.53l0.16,0.69l-1.03,0.85l0.26,1.75l-0.89,4.03l-1.31,2.66l0.24,1.75l-0.71,1.83l-1.99,1.7l0.3,3.67l0.88,1.19l1.58,0.01l0.01,2.21l1.04,1.95l5.98,0.63ZM248.69,430.79l0.0,7.33l0.4,0.4l3.52,0.05l-0.44,0.75l-1.94,0.98l-2.49,-0.37l-1.88,-1.06l-2.55,-0.49l-5.59,-3.71l-2.38,-2.63l4.1,2.48l3.32,1.23l0.45,-0.12l1.29,-1.57l0.83,-2.32l2.05,-1.24l1.31,0.29Z\",\n            name: \"Chile\"\n          },\n          XC: {\n            path: \"M504.91,192.87l0.34,0.01l0.27,-0.07l-0.29,0.26l-0.31,-0.2Z\",\n            name: \"N. Cyprus\"\n          },\n          CA: {\n            path: \"M280.06,145.6l-1.67,2.88l0.07,0.49l0.5,0.04l1.46,-0.98l1.0,0.42l-0.56,0.72l0.17,0.62l2.22,0.89l1.35,-0.71l1.95,0.78l-0.66,2.01l0.5,0.51l1.32,-0.42l0.98,3.17l-0.91,2.41l-0.8,0.08l-1.23,-0.45l0.47,-2.25l-0.89,-0.83l-0.48,0.06l-2.78,2.63l-0.34,-0.02l1.02,-0.85l-0.14,-0.69l-2.4,-0.77l-7.4,0.08l-0.17,-0.41l1.3,-0.94l0.02,-0.64l-0.73,-0.58l1.85,-1.74l2.57,-5.16l1.47,-1.79l1.99,-1.05l0.46,0.06l-1.53,2.45ZM68.32,74.16l4.13,0.95l4.02,2.14l2.61,0.4l2.47,-1.89l2.88,-1.31l3.85,0.48l3.71,-1.94l3.82,-1.04l1.56,1.68l0.49,0.08l1.87,-1.04l0.65,-1.98l1.24,0.35l4.16,3.94l0.54,0.01l2.75,-2.49l0.26,2.59l0.49,0.35l3.08,-0.73l1.04,-1.27l2.73,0.23l3.83,1.86l5.86,1.61l3.47,0.75l2.44,-0.26l2.73,1.78l-2.98,1.81l-0.19,0.41l0.31,0.32l4.53,0.92l6.87,-0.5l2.0,-0.69l2.49,2.39l0.53,0.02l2.72,-2.16l-0.02,-0.64l-2.16,-1.54l1.15,-1.06l4.83,-0.61l1.84,0.95l2.48,2.31l3.01,-0.23l4.55,1.92l3.85,-0.67l3.61,0.1l0.41,-0.44l-0.25,-2.36l1.79,-0.61l3.49,1.32l-0.01,3.77l0.31,0.39l0.45,-0.22l1.48,-3.16l1.74,0.1l0.41,-0.3l1.13,-4.37l-2.78,-3.11l-2.8,-1.74l0.19,-4.64l2.71,-3.07l2.98,0.67l2.41,1.95l3.19,4.8l-1.99,1.97l0.21,0.68l4.33,0.84l-0.01,4.15l0.25,0.37l0.44,-0.09l3.07,-3.15l2.54,2.39l-0.61,3.33l2.42,2.88l0.61,0.0l2.61,-3.08l1.88,-3.82l0.17,-4.58l6.72,0.94l3.13,2.04l0.13,1.82l-1.76,2.19l-0.01,0.49l1.66,2.16l-0.26,1.71l-4.68,2.8l-3.28,0.61l-2.47,-1.2l-0.55,0.23l-0.73,2.04l-2.38,3.43l-0.74,1.77l-2.74,2.57l-3.44,0.25l-2.21,1.78l-0.28,2.53l-2.82,0.55l-3.12,3.22l-2.72,4.31l-1.03,3.17l-0.14,4.31l0.33,0.41l3.44,0.57l2.24,5.95l0.45,0.23l3.4,-0.69l4.52,1.51l2.43,1.31l1.91,1.73l3.1,0.96l2.62,1.46l6.6,0.54l-0.35,2.74l0.81,3.53l1.81,3.78l3.83,3.3l0.45,0.04l2.1,-1.28l1.37,-3.69l-1.31,-5.38l-1.45,-1.58l3.57,-1.47l2.84,-2.46l1.52,-2.8l-0.25,-2.55l-1.7,-3.07l-2.85,-2.61l2.8,-3.95l-1.08,-3.37l-0.79,-5.67l1.36,-0.7l6.76,1.41l2.12,-0.96l5.12,3.36l1.05,1.61l4.08,0.26l-0.06,2.87l0.83,4.7l0.3,0.32l2.16,0.54l1.73,2.06l0.5,0.09l3.63,-2.03l2.52,-4.19l1.26,-1.32l7.6,11.72l-0.92,2.04l0.16,0.51l3.3,1.97l2.22,1.98l4.1,0.98l1.43,0.99l0.95,2.79l2.1,0.68l0.84,1.08l0.17,3.45l-3.37,2.26l-4.22,1.24l-3.06,2.63l-4.06,0.51l-5.35,-0.69l-6.39,0.2l-2.3,2.41l-3.26,1.51l-6.47,7.15l-0.06,0.48l0.44,0.19l2.13,-0.52l4.17,-4.24l5.12,-2.62l3.52,-0.3l1.69,1.21l-2.12,2.21l0.81,3.47l1.02,2.61l3.47,1.6l4.14,-0.45l2.15,-2.8l0.26,1.48l1.14,0.8l-2.56,1.69l-5.5,1.82l-2.54,1.27l-2.74,2.15l-1.4,-0.16l-0.07,-2.01l4.14,-2.44l0.18,-0.45l-0.39,-0.29l-6.63,0.45l-1.39,-1.49l-0.14,-4.43l-1.11,-0.91l-1.82,0.39l-0.66,-0.66l-0.6,0.03l-1.91,2.39l-0.82,2.52l-0.8,1.27l-1.67,0.56l-0.46,0.76l-8.31,0.07l-1.21,0.62l-2.35,1.97l-0.71,-0.14l-1.37,0.96l-1.12,-0.48l-4.74,1.26l-0.9,1.17l0.21,0.62l1.73,0.3l-1.81,0.31l-1.85,0.81l-2.11,-0.13l-2.95,1.78l-0.69,-0.09l1.39,-2.1l1.73,-1.21l0.1,-2.29l1.16,-1.99l0.49,0.53l2.03,0.42l1.2,-1.16l0.02,-0.47l-2.66,-3.51l-2.28,-0.61l-5.64,-0.71l-0.4,-0.57l-0.79,0.13l0.2,-0.41l-0.22,-0.55l-0.68,-0.26l0.19,-1.26l-0.78,-0.73l0.31,-0.64l-0.29,-0.57l-2.6,-0.44l-0.75,-1.63l-0.94,-0.66l-4.31,-0.65l-1.13,1.19l-1.48,0.59l-0.85,1.06l-2.83,-0.76l-2.09,0.39l-2.39,-0.97l-4.24,-0.7l-0.57,-0.4l-0.41,-1.63l-0.4,-0.3l-0.85,0.02l-0.39,0.4l-0.01,0.85l-69.13,-0.01l-6.51,-4.52l-4.5,-1.38l-1.26,-2.66l0.33,-1.93l-0.23,-0.43l-3.01,-1.35l-0.55,-2.77l-2.89,-2.38l-0.04,-1.45l1.39,-1.83l-0.28,-2.55l-4.16,-2.2l-4.07,-6.6l-4.02,-3.22l-1.3,-1.88l-0.5,-0.13l-2.51,1.21l-2.23,1.87l-3.85,-3.88l-2.44,-1.04l-2.22,-0.13l0.03,-37.49ZM260.37,148.65l3.04,0.76l2.26,1.2l-3.78,-0.95l-1.53,-1.01ZM249.4,3.81l6.68,0.49l5.32,0.79l4.26,1.57l-0.07,1.1l-5.85,2.53l-6.02,1.21l-2.39,1.39l-0.18,0.45l0.39,0.29l4.01,-0.02l-4.65,2.82l-4.2,1.74l-4.19,4.59l-5.03,0.92l-1.67,1.15l-7.47,0.59l-0.37,0.37l0.32,0.42l2.41,0.49l-0.81,0.47l-0.12,0.59l1.83,2.41l-2.02,1.59l-3.81,1.51l-1.32,2.16l-3.38,1.53l-0.22,0.48l0.35,1.19l0.4,0.29l3.88,-0.18l0.03,0.61l-6.33,2.95l-6.41,-1.4l-7.43,0.79l-3.72,-0.62l-4.4,-0.25l-0.23,-1.83l4.29,-1.11l0.28,-0.51l-1.1,-3.45l1.0,-0.25l6.58,2.28l0.47,-0.16l-0.05,-0.49l-3.41,-3.45l-3.58,-0.98l1.48,-1.55l4.34,-1.29l0.97,-2.19l-0.16,-0.48l-3.42,-2.13l-0.81,-2.26l6.2,0.22l2.24,0.58l3.91,-2.1l0.2,-0.43l-0.35,-0.32l-5.64,-0.67l-8.73,0.36l-4.26,-1.9l-2.12,-2.4l-2.78,-1.66l-0.41,-1.52l3.31,-1.03l2.93,-0.2l4.91,-0.99l3.7,-2.27l2.87,0.3l2.62,1.67l0.56,-0.14l1.82,-3.2l3.13,-0.94l4.44,-0.69l7.53,-0.26l1.48,0.67l7.19,-1.06l10.8,0.79ZM203.85,57.54l0.01,0.42l1.97,2.97l0.68,-0.02l2.24,-3.72l5.95,-1.86l4.01,4.64l-0.35,2.91l0.5,0.43l4.95,-1.36l2.32,-1.8l5.31,2.28l3.27,2.11l0.3,1.84l0.48,0.33l4.42,-0.99l2.64,2.87l5.97,1.77l2.06,1.72l2.11,3.71l-4.19,1.86l-0.01,0.73l5.9,2.83l3.94,0.94l3.78,3.95l3.46,0.25l-0.63,2.37l-4.11,4.47l-2.76,-1.56l-3.9,-3.94l-3.59,0.41l-0.33,0.34l-0.19,2.72l2.63,2.38l3.42,1.89l0.94,0.97l1.55,3.75l-0.7,2.29l-2.74,-0.92l-6.25,-3.15l-0.51,0.13l0.05,0.52l6.07,5.69l0.18,0.59l-6.09,-1.39l-5.31,-2.24l-2.63,-1.66l0.6,-0.77l-0.12,-0.6l-7.39,-4.01l-0.59,0.37l0.03,0.79l-6.73,0.6l-1.69,-1.1l1.36,-2.46l4.51,-0.07l5.15,-0.52l0.31,-0.6l-0.74,-1.3l0.78,-1.84l3.21,-4.05l-0.67,-2.35l-1.11,-1.6l-3.84,-2.1l-4.35,-1.28l0.91,-0.63l0.06,-0.61l-2.65,-2.75l-2.34,-0.36l-1.89,-1.46l-0.53,0.03l-1.24,1.23l-4.36,0.55l-9.04,-0.99l-9.26,-1.98l-1.6,-1.22l2.22,-1.77l0.13,-0.44l-0.38,-0.27l-3.22,-0.02l-0.72,-4.25l1.83,-4.04l2.42,-1.85l5.5,-1.1l-1.39,2.35ZM261.19,159.33l2.07,0.61l1.44,-0.04l-1.15,0.63l-2.94,-1.23l-0.4,-0.68l0.36,-0.37l0.61,1.07ZM230.83,84.39l-2.37,0.18l-0.49,-1.63l0.93,-2.09l1.94,-0.51l1.62,0.99l0.02,1.52l-1.66,1.54ZM229.43,58.25l0.11,0.65l-4.87,-0.21l-2.72,0.62l-3.1,-2.57l0.08,-1.26l0.86,-0.23l5.57,0.51l4.08,2.5ZM222.0,105.02l-0.72,1.49l-0.63,-0.19l-0.48,-0.84l0.81,-0.99l0.65,0.05l0.37,0.46ZM183.74,38.32l2.9,1.7l4.79,-0.01l1.84,1.46l-0.49,1.68l0.23,0.48l2.82,1.14l1.76,1.26l7.01,0.65l4.1,-1.1l5.03,-0.43l3.93,0.35l2.48,1.77l0.46,1.7l-1.3,1.1l-3.56,1.01l-3.23,-0.59l-7.17,0.76l-5.09,0.09l-3.99,-0.6l-6.42,-1.54l-0.79,-2.51l-0.3,-2.49l-2.64,-2.5l-5.32,-0.72l-2.52,-1.4l0.68,-1.57l4.78,0.31ZM207.38,91.35l0.4,1.56l0.56,0.26l1.06,-0.52l1.32,0.96l5.42,2.57l0.2,1.68l0.46,0.35l1.68,-0.28l1.15,0.85l-1.55,0.87l-3.61,-0.88l-1.32,-1.69l-0.57,-0.06l-2.45,2.1l-3.12,1.79l-0.7,-1.87l-0.42,-0.26l-2.16,0.24l1.39,-1.39l0.32,-3.14l0.76,-3.35l1.18,0.22ZM215.49,102.6l-2.67,1.95l-1.4,-0.07l-0.3,-0.58l1.53,-1.48l2.84,0.18ZM202.7,24.12l2.53,1.59l-2.87,1.4l-4.53,4.05l-4.25,0.38l-5.03,-0.68l-2.45,-2.04l0.03,-1.62l1.82,-1.37l0.14,-0.45l-0.38,-0.27l-4.45,0.04l-2.59,-1.76l-1.41,-2.29l1.57,-2.32l1.62,-1.66l2.44,-0.39l0.25,-0.65l-0.6,-0.74l4.86,-0.25l3.24,3.11l8.16,2.3l1.9,3.61ZM187.47,59.2l-2.76,3.49l-2.38,-0.15l-1.44,-3.84l0.04,-2.2l1.19,-1.88l2.3,-1.23l5.07,0.17l4.11,1.02l-3.24,3.72l-2.88,0.89ZM186.07,48.79l-1.08,1.53l-3.34,-0.34l-2.56,-1.1l1.03,-1.75l3.25,-1.23l1.95,1.58l0.75,1.3ZM185.71,35.32l-5.3,-0.2l-0.32,-0.71l4.31,0.07l1.3,0.84ZM180.68,32.48l-3.34,1.0l-1.79,-1.1l-0.98,-1.87l-0.15,-1.73l4.1,0.53l2.67,1.7l-0.51,1.47ZM180.9,76.31l-1.1,1.08l-3.13,-1.23l-2.12,0.43l-2.71,-1.57l1.72,-1.09l1.55,-1.72l3.81,1.9l1.98,2.2ZM169.74,54.87l2.96,0.97l4.17,-0.57l0.41,0.88l-2.14,2.11l0.09,0.64l3.55,1.92l-0.4,3.72l-3.79,1.65l-2.17,-0.35l-1.72,-1.74l-6.02,-3.5l0.03,-0.85l4.68,0.54l0.4,-0.21l-0.05,-0.45l-2.48,-2.81l2.46,-1.95ZM174.45,40.74l1.37,1.73l0.07,2.44l-1.05,3.45l-3.79,0.47l-2.32,-0.69l0.05,-2.64l-0.44,-0.41l-3.68,0.35l-0.12,-3.1l2.45,0.1l3.67,-1.73l3.41,0.29l0.37,-0.26ZM170.05,31.55l0.67,1.56l-3.33,-0.49l-4.22,-1.77l-4.35,-0.16l1.4,-0.94l-0.06,-0.7l-2.81,-1.23l-0.12,-1.39l4.39,0.68l6.62,1.98l1.81,2.47ZM134.5,58.13l-1.02,1.82l0.45,0.58l5.4,-1.39l3.33,2.29l0.49,-0.03l2.6,-2.23l1.94,1.32l2.0,4.5l0.7,0.06l1.3,-2.29l-1.63,-4.46l1.69,-0.54l2.31,0.71l2.65,1.81l2.49,7.92l8.48,4.27l-0.19,1.35l-3.79,0.33l-0.26,0.67l1.4,1.49l-0.58,1.1l-4.23,-0.64l-4.43,-1.19l-3.0,0.28l-4.66,1.47l-10.52,1.04l-1.43,-2.02l-3.42,-1.2l-2.21,0.43l-2.51,-2.86l4.84,-1.05l3.6,0.19l3.27,-0.78l0.31,-0.39l-0.31,-0.39l-4.84,-1.06l-8.79,0.27l-0.85,-1.07l5.26,-1.66l0.27,-0.45l-0.4,-0.34l-3.8,0.06l-3.81,-1.06l1.81,-3.01l1.66,-1.79l6.48,-2.81l1.97,0.71ZM158.7,56.61l-1.7,2.44l-3.2,-2.75l0.37,-0.3l3.11,-0.18l1.42,0.79ZM149.61,42.73l1.01,1.89l0.5,0.18l2.14,-0.82l2.23,0.19l0.36,2.04l-1.33,2.09l-8.28,0.76l-6.35,2.15l-3.41,0.1l-0.19,-0.96l4.9,-2.08l0.23,-0.46l-0.41,-0.31l-11.25,0.59l-2.89,-0.74l3.04,-4.44l2.14,-1.32l6.81,1.69l4.58,3.06l4.37,0.39l0.36,-0.63l-3.36,-4.6l1.85,-1.53l2.18,0.51l0.77,2.26ZM144.76,34.41l-4.36,1.44l-3.0,-1.4l1.46,-1.24l3.47,-0.52l2.96,0.71l-0.52,1.01ZM145.13,29.83l-1.9,0.66l-3.67,-0.0l2.27,-1.61l3.3,0.95ZM118.92,65.79l-6.03,2.02l-1.33,-1.9l-5.38,-2.28l2.59,-5.05l2.16,-3.14l-0.02,-0.48l-1.97,-2.41l7.64,-0.7l3.6,1.02l6.3,0.27l4.42,2.95l-2.53,0.98l-6.24,3.43l-3.1,3.28l-0.11,2.01ZM129.54,35.53l-0.28,3.37l-1.72,1.62l-2.33,0.28l-4.61,2.19l-3.86,0.76l-2.64,-0.87l3.72,-3.4l5.01,-3.34l3.72,0.07l3.0,-0.67ZM111.09,152.69l-0.67,0.24l-3.85,-1.37l-0.83,-1.17l-2.12,-1.07l-0.66,-1.02l-2.4,-0.55l-0.74,-1.71l6.02,1.45l2.0,2.55l2.52,1.39l0.73,1.27ZM87.8,134.64l0.89,0.29l1.86,-0.21l-0.65,3.34l1.69,2.33l-1.31,-1.33l-0.99,-1.62l-1.17,-0.98l-0.33,-1.82Z\",\n            name: \"Canada\"\n          },\n          CG: {\n            path: \"M466.72,276.48l-0.1,1.03l-1.25,2.97l-0.19,3.62l-0.46,1.78l-0.23,0.63l-1.61,1.19l-1.21,1.39l-1.09,2.43l0.04,2.09l-3.25,3.24l-0.5,-0.24l-0.5,-0.83l-1.36,-0.02l-0.98,0.89l-1.68,-0.99l-1.54,1.24l-1.52,-1.96l1.57,-1.14l0.11,-0.52l-0.77,-1.35l2.1,-0.66l0.39,-0.73l1.05,0.82l2.21,0.11l1.12,-1.37l0.37,-1.81l-0.27,-2.09l-1.13,-1.5l1.0,-2.69l-0.13,-0.45l-0.92,-0.58l-1.6,0.17l-0.51,-0.94l0.1,-0.61l2.75,0.09l3.97,1.24l0.51,-0.33l0.17,-1.28l1.24,-2.21l1.28,-1.14l2.76,0.49Z\",\n            name: \"Congo\"\n          },\n          CF: {\n            path: \"M461.16,278.2l-0.26,-1.19l-1.09,-0.77l-0.84,-1.17l-0.29,-1.0l-1.04,-1.15l0.08,-3.43l0.58,-0.49l1.16,-2.35l1.85,-0.17l0.61,-0.62l0.97,0.58l3.15,-0.96l2.48,-1.92l0.02,-0.96l2.81,0.02l2.36,-1.17l1.93,-2.85l1.16,-0.93l1.11,-0.3l0.27,0.86l1.34,1.47l-0.39,2.01l0.3,1.01l4.01,2.75l0.17,0.93l2.63,2.31l0.6,1.44l2.08,1.4l-3.84,-0.21l-1.94,0.88l-1.23,-0.49l-2.67,1.2l-1.29,-0.18l-0.51,0.36l-0.6,1.22l-3.35,-0.65l-1.57,-0.91l-2.42,-0.83l-1.45,0.91l-0.97,1.27l-0.26,1.56l-3.22,-0.43l-1.49,1.33l-0.94,1.62Z\",\n            name: \"Central African Rep.\"\n          },\n          CD: {\n            path: \"M487.01,272.38l2.34,-0.14l1.35,1.84l1.34,0.45l0.86,-0.39l1.21,0.12l1.07,-0.41l0.54,0.89l2.04,1.54l-0.14,2.72l0.7,0.54l-1.38,1.13l-1.53,2.54l-0.17,2.05l-0.59,1.08l-0.02,1.72l-0.72,0.84l-0.66,3.01l0.63,1.32l-0.44,4.26l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.41l0.3,1.26l0.44,0.5l-4.08,0.75l-0.92,1.81l0.51,1.34l-0.74,5.43l0.17,0.38l2.45,1.46l0.54,-0.1l0.12,1.62l-1.28,-0.01l-1.85,-2.35l-1.94,-0.45l-0.48,-1.13l-0.55,-0.2l-1.41,0.74l-1.71,-0.3l-1.01,-1.18l-2.49,-0.19l-0.44,-0.77l-1.98,-0.21l-2.88,0.36l0.11,-2.41l-0.85,-1.13l-0.16,-1.36l0.32,-1.73l-0.46,-0.89l-0.04,-1.49l-0.4,-0.39l-2.53,0.02l0.1,-0.41l-0.39,-0.49l-1.28,0.01l-0.43,0.45l-1.62,0.32l-0.83,1.79l-1.09,-0.28l-2.4,0.52l-1.37,-1.91l-1.3,-3.3l-0.38,-0.27l-7.39,-0.03l-2.46,0.42l0.5,-0.45l0.37,-1.47l0.66,-0.38l0.92,0.08l0.73,-0.82l0.87,0.02l0.31,0.68l1.4,0.36l3.59,-3.63l0.01,-2.23l1.02,-2.29l2.69,-2.39l0.43,-0.99l0.49,-1.96l0.17,-3.51l1.25,-2.95l0.36,-3.14l0.86,-1.13l1.1,-0.66l3.57,1.73l3.65,0.73l0.46,-0.21l0.8,-1.46l1.24,0.19l2.61,-1.17l0.81,0.44l1.04,-0.03l0.59,-0.66l0.7,-0.16l1.81,0.25Z\",\n            name: \"Dem. Rep. Congo\"\n          },\n          CZ: {\n            path: \"M458.46,144.88l1.22,1.01l1.47,0.23l0.13,0.93l1.36,0.68l0.54,-0.2l0.24,-0.55l1.15,0.25l0.53,1.09l1.68,0.18l0.6,0.84l-1.04,0.73l-0.96,1.28l-1.6,0.17l-0.55,0.56l-1.04,-0.46l-1.05,0.15l-2.12,-0.96l-1.05,0.34l-1.2,1.12l-1.56,-0.87l-2.57,-2.1l-0.53,-1.88l4.7,-2.52l0.71,0.26l0.9,-0.28Z\",\n            name: \"Czech Rep.\"\n          },\n          CY: {\n            path: \"M504.36,193.47l0.43,0.28l-1.28,0.57l-0.92,-0.28l-0.24,-0.46l2.01,-0.13Z\",\n            name: \"Cyprus\"\n          },\n          CR: {\n            path: \"M211.34,258.05l0.48,0.99l1.6,1.6l-0.54,0.45l0.29,1.42l-0.25,1.19l-1.09,-0.59l-0.05,-1.25l-2.46,-1.42l-0.28,-0.77l-0.66,-0.45l-0.45,-0.0l-0.11,1.04l-1.32,-0.95l0.31,-1.3l-0.36,-0.6l0.31,-0.27l1.42,0.58l1.29,-0.14l0.56,0.56l0.74,0.17l0.55,-0.27Z\",\n            name: \"Costa Rica\"\n          },\n          CU: {\n            path: \"M221.21,227.25l1.27,1.02l2.19,-0.28l4.43,3.33l2.08,0.43l-0.1,0.38l0.36,0.5l1.75,0.1l1.48,0.84l-3.11,0.51l-4.15,-0.03l0.77,-0.67l-0.04,-0.64l-1.2,-0.74l-1.49,-0.16l-0.7,-0.61l-0.56,-1.4l-0.4,-0.25l-1.34,0.1l-2.2,-0.66l-0.88,-0.58l-3.18,-0.4l-0.27,-0.16l0.58,-0.74l-0.36,-0.29l-2.72,-0.05l-1.7,1.29l-0.91,0.03l-0.61,0.69l-1.01,0.22l1.11,-1.29l1.01,-0.52l3.69,-1.01l3.98,0.21l2.21,0.84Z\",\n            name: \"Cuba\"\n          },\n          SZ: {\n            path: \"M500.35,351.36l0.5,2.04l-0.38,0.89l-1.05,0.21l-1.23,-1.2l-0.02,-0.64l0.83,-1.57l1.34,0.27Z\",\n            name: \"Swaziland\"\n          },\n          SY: {\n            path: \"M511.0,199.79l0.05,-1.33l0.54,-1.36l1.28,-0.99l0.13,-0.45l-0.41,-1.11l-1.14,-0.36l-0.19,-1.74l0.52,-1.0l1.29,-1.21l0.2,-1.18l0.59,0.23l2.62,-0.76l1.36,0.52l2.06,-0.01l2.95,-1.08l3.25,-0.26l-0.67,0.94l-1.28,0.66l-0.21,0.4l0.23,2.01l-0.88,3.19l-10.15,5.73l-2.15,-0.85Z\",\n            name: \"Syria\"\n          },\n          KG: {\n            path: \"M621.35,172.32l-3.87,1.69l-0.96,1.18l-3.04,0.34l-1.13,1.86l-2.36,-0.35l-1.99,0.63l-2.39,1.4l0.06,0.95l-0.4,0.37l-4.52,0.43l-3.02,-0.93l-2.37,0.17l0.11,-0.79l2.32,0.42l1.13,-0.88l1.99,0.2l3.21,-2.14l-0.03,-0.69l-2.97,-1.57l-1.94,0.65l-1.22,-0.74l1.71,-1.58l-0.12,-0.67l-0.36,-0.15l0.32,-0.77l1.36,-0.35l4.02,1.02l0.49,-0.3l0.35,-1.59l1.09,-0.48l3.42,1.22l1.11,-0.31l7.64,0.39l1.16,1.0l1.23,0.39Z\",\n            name: \"Kyrgyzstan\"\n          },\n          KE: {\n            path: \"M506.26,284.69l1.87,-2.56l0.93,-2.15l-1.38,-4.08l-1.06,-1.6l2.82,-2.75l0.79,0.26l0.12,1.41l0.86,0.83l1.9,0.11l3.28,2.13l3.57,0.44l1.05,-1.12l1.96,-0.9l0.82,0.68l1.16,0.09l-1.78,2.45l0.03,9.12l1.3,1.94l-1.37,0.78l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-0.68,0.56l-3.2,-2.23l-0.35,-1.58l-8.86,-4.98l0.14,-1.6l-0.57,-1.04Z\",\n            name: \"Kenya\"\n          },\n          SS: {\n            path: \"M481.71,263.34l1.07,-0.72l1.2,-3.18l1.36,-0.26l1.61,1.99l0.87,0.34l1.1,-0.41l1.5,0.07l0.57,0.53l2.49,0.0l0.44,-0.63l1.07,-0.4l0.45,-0.84l0.59,-0.33l1.9,1.33l1.6,-0.2l2.83,-3.33l-0.32,-2.21l1.59,-0.52l-0.24,1.6l0.3,1.83l1.35,1.18l0.2,1.87l0.35,0.41l0.02,1.53l-0.23,0.47l-1.42,0.25l-0.85,1.44l0.3,0.6l1.4,0.16l1.11,1.08l0.59,1.13l1.03,0.53l1.28,2.36l-4.41,3.98l-1.74,0.01l-1.89,0.55l-1.47,-0.52l-1.15,0.57l-2.96,-2.62l-1.3,0.49l-1.06,-0.15l-0.79,0.39l-0.82,-0.22l-1.8,-2.7l-1.91,-1.1l-0.66,-1.5l-2.62,-2.32l-0.18,-0.94l-2.37,-1.6Z\",\n            name: \"S. Sudan\"\n          },\n          SR: {\n            path: \"M283.12,270.19l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-0.59,2.03l-0.43,0.71l-1.12,-0.42l-1.32,0.22l-0.93,-0.2l-0.46,0.26l-0.25,0.73l0.33,0.7l-0.89,-0.13l-1.39,-1.97l-0.31,-1.34l-0.97,-0.31l-0.89,-1.47l0.35,-1.61l1.45,-0.82l0.33,-1.87l2.61,0.44l0.57,-0.47l1.75,-0.16Z\",\n            name: \"Suriname\"\n          },\n          KH: {\n            path: \"M689.52,249.39l0.49,1.45l-0.28,2.74l-4.0,1.86l-0.16,0.6l0.68,0.95l-2.06,0.17l-2.05,0.97l-1.82,-0.32l-2.12,-3.7l-0.55,-2.85l1.4,-1.85l3.02,-0.45l2.23,0.35l2.01,0.98l0.51,-0.14l0.95,-1.48l1.74,0.74Z\",\n            name: \"Cambodia\"\n          },\n          SV: {\n            path: \"M195.8,250.13l1.4,-1.19l2.24,1.45l0.98,-0.27l0.44,0.2l-0.27,1.05l-1.14,-0.03l-3.64,-1.21Z\",\n            name: \"El Salvador\"\n          },\n          SK: {\n            path: \"M476.82,151.17l-1.14,1.9l-2.73,-0.92l-0.82,0.2l-0.74,0.8l-3.46,0.73l-0.47,0.69l-1.76,0.33l-1.88,-1.0l-0.18,-0.81l0.38,-0.75l1.87,-0.32l1.74,-1.89l0.83,0.16l0.79,-0.34l1.51,1.04l1.34,-0.63l1.25,0.3l1.65,-0.42l1.81,0.95Z\",\n            name: \"Slovakia\"\n          },\n          KR: {\n            path: \"M737.51,185.84l0.98,-0.1l0.87,-1.17l2.69,-0.32l0.33,-0.29l1.76,2.79l0.58,1.76l0.02,3.12l-0.8,1.32l-2.21,0.55l-1.93,1.13l-1.8,0.19l-0.2,-1.1l0.43,-2.28l-0.95,-2.56l1.43,-0.37l0.23,-0.62l-1.43,-2.06Z\",\n            name: \"Korea\"\n          },\n          SI: {\n            path: \"M456.18,162.07l-0.51,-1.32l0.18,-1.05l1.69,0.2l1.42,-0.71l2.09,-0.07l0.62,-0.51l0.21,0.47l-1.61,0.67l-0.44,1.34l-0.66,0.24l-0.26,0.82l-1.22,-0.49l-0.84,0.46l-0.69,-0.04Z\",\n            name: \"Slovenia\"\n          },\n          KP: {\n            path: \"M736.77,185.16l-0.92,-0.42l-0.88,0.62l-1.21,-0.88l0.96,-1.15l0.59,-2.59l-0.46,-0.74l-2.09,-0.77l1.64,-1.52l2.72,-1.58l1.58,-1.91l1.11,0.78l2.17,0.11l0.41,-0.5l-0.3,-1.22l3.52,-1.18l0.94,-1.4l0.98,1.08l-2.19,2.18l0.01,2.14l-1.06,0.54l-1.41,1.4l-1.7,0.52l-1.25,1.09l-0.14,1.98l0.94,0.45l1.15,1.04l-0.13,0.26l-2.6,0.29l-1.13,1.29l-1.22,0.08Z\",\n            name: \"Dem. Rep. Korea\"\n          },\n          KW: {\n            path: \"M540.81,207.91l0.37,0.86l-0.17,0.76l0.6,1.53l-0.95,0.04l-0.82,-1.28l-1.57,-0.18l1.31,-1.88l1.22,0.17Z\",\n            name: \"Kuwait\"\n          },\n          SN: {\n            path: \"M390.09,248.21l0.12,1.55l0.49,1.46l0.96,0.82l0.05,1.28l-1.26,-0.19l-0.75,0.33l-1.84,-0.61l-5.84,-0.13l-2.54,0.51l-0.22,-1.03l1.77,0.04l2.01,-0.91l1.03,0.48l1.09,0.04l1.29,-0.62l0.14,-0.58l-0.51,-0.74l-1.81,0.25l-1.13,-0.63l-0.79,0.04l-0.72,0.61l-2.31,0.06l-0.92,-1.77l-0.81,-0.64l0.64,-0.35l2.46,-3.74l1.04,0.19l1.38,-0.56l1.19,-0.02l2.72,1.37l3.03,3.48Z\",\n            name: \"Senegal\"\n          },\n          SL: {\n            path: \"M394.46,264.11l-1.73,1.98l-0.58,1.33l-2.07,-1.06l-1.22,-1.26l-0.65,-2.39l1.16,-0.96l0.67,-1.17l1.21,-0.52l1.66,0.0l1.03,1.64l0.52,2.41Z\",\n            name: \"Sierra Leone\"\n          },\n          KZ: {\n            path: \"M552.8,172.89l0.46,-1.27l-0.48,-1.05l-2.96,-1.19l-1.06,-2.58l-1.37,-0.87l-0.03,-0.3l1.95,0.23l0.45,-0.38l0.08,-1.96l1.75,-0.41l2.1,0.45l0.48,-0.33l0.45,-3.04l-0.45,-2.09l-0.41,-0.31l-2.42,0.15l-2.36,-0.73l-2.87,1.37l-2.17,0.61l-0.85,-0.34l0.13,-1.61l-1.6,-2.12l-2.02,-0.08l-1.78,-1.82l1.29,-2.18l-0.57,-0.95l1.62,-2.91l2.21,1.63l0.63,-0.27l0.29,-2.22l4.92,-3.43l3.71,-0.08l8.4,3.6l2.92,-1.36l3.77,-0.06l3.11,1.66l0.51,-0.11l0.6,-0.81l3.31,0.13l0.39,-0.25l0.63,-1.57l-0.17,-0.5l-3.5,-1.98l1.87,-1.27l-0.13,-1.03l1.98,-0.72l0.18,-0.62l-1.59,-2.06l0.81,-0.82l9.23,-1.18l1.33,-0.88l6.18,-1.26l2.26,-1.42l4.08,0.68l0.73,3.33l0.51,0.3l2.48,-0.8l2.79,1.02l-0.17,1.56l0.43,0.44l2.55,-0.24l4.89,-2.53l0.03,0.32l3.15,2.61l5.56,8.47l0.65,0.02l1.12,-1.46l3.15,1.74l3.76,-0.78l1.15,0.49l1.14,1.8l1.84,0.76l0.99,1.29l3.35,-0.25l1.02,1.52l-1.6,1.81l-1.93,0.28l-0.34,0.38l-0.11,3.05l-1.13,1.16l-4.75,-1.0l-0.46,0.27l-1.76,5.47l-1.1,0.59l-4.91,1.23l-0.27,0.54l2.1,4.97l-1.37,0.63l-0.23,0.41l0.13,1.13l-0.88,-0.25l-1.42,-1.13l-7.89,-0.4l-0.92,0.31l-3.73,-1.22l-1.42,0.63l-0.53,1.66l-3.72,-0.94l-1.85,0.43l-0.76,1.4l-4.65,2.62l-1.13,2.08l-0.44,0.01l-0.92,-1.4l-2.87,-0.09l-0.45,-2.14l-0.38,-0.32l-0.8,-0.01l0.0,-2.96l-3.0,-2.22l-7.31,0.58l-2.35,-2.68l-6.71,-3.69l-6.45,1.83l-0.29,0.39l0.1,10.85l-0.7,0.08l-1.62,-2.17l-1.83,-0.96l-3.11,0.59l-0.64,0.51Z\",\n            name: \"Kazakhstan\"\n          },\n          SA: {\n            path: \"M537.53,210.34l2.0,0.24l0.9,1.32l1.49,-0.06l0.87,2.08l1.29,0.76l0.51,0.99l1.56,1.03l-0.1,1.9l0.32,0.9l1.58,2.47l0.76,0.53l0.7,-0.04l1.68,4.23l7.53,1.33l0.51,-0.29l0.77,1.25l-1.55,4.87l-7.29,2.52l-7.3,1.03l-2.34,1.17l-1.88,2.74l-0.76,0.28l-0.82,-0.78l-0.91,0.12l-2.88,-0.51l-3.51,0.25l-0.86,-0.56l-0.57,0.15l-0.66,1.27l0.16,1.11l-0.43,0.32l-0.93,-1.4l-0.33,-1.16l-1.23,-0.88l-1.27,-2.06l-0.78,-2.22l-1.73,-1.79l-1.14,-0.48l-1.54,-2.31l-0.21,-3.41l-1.44,-2.93l-1.27,-1.16l-1.33,-0.57l-1.31,-3.37l-0.77,-0.67l-0.97,-1.97l-2.8,-4.03l-1.06,-0.17l0.37,-1.96l0.2,-0.72l2.74,0.3l1.08,-0.84l0.6,-0.94l1.74,-0.35l0.65,-1.03l0.71,-0.4l0.1,-0.62l-2.06,-2.28l4.39,-1.22l0.48,-0.37l2.77,0.69l3.66,1.9l7.03,5.5l4.87,0.3Z\",\n            name: \"Saudi Arabia\"\n          },\n          SE: {\n            path: \"M480.22,89.3l-4.03,1.17l-2.43,2.86l0.26,2.57l-8.77,6.64l-1.78,5.79l1.78,2.68l2.22,1.96l-2.07,3.77l-2.72,1.13l-0.95,6.04l-1.29,3.01l-2.74,-0.31l-0.4,0.22l-1.31,2.59l-2.34,0.13l-0.75,-3.09l-2.08,-4.03l-1.83,-4.96l1.0,-1.93l2.14,-2.7l0.83,-4.45l-1.6,-2.17l-0.15,-4.94l1.48,-3.39l2.58,-0.15l0.87,-1.59l-0.78,-1.57l3.76,-5.59l4.04,-7.48l2.17,0.01l0.39,-0.29l0.57,-2.07l4.37,0.64l0.46,-0.34l0.33,-2.56l1.1,-0.13l6.94,4.87l0.06,6.32l0.66,1.36Z\",\n            name: \"Sweden\"\n          },\n          SD: {\n            path: \"M505.98,259.4l-0.34,-0.77l-1.17,-0.9l-0.26,-1.61l0.29,-1.81l-0.34,-0.46l-1.16,-0.17l-0.54,0.59l-1.23,0.11l-0.28,0.65l0.53,0.65l0.17,1.22l-2.44,3.0l-0.96,0.19l-2.39,-1.4l-0.95,0.52l-0.38,0.78l-1.11,0.41l-0.29,0.5l-1.94,0.0l-0.54,-0.52l-1.81,-0.09l-0.95,0.4l-2.45,-2.35l-2.07,0.54l-0.73,1.26l-0.6,2.1l-1.25,0.58l-0.75,-0.62l0.27,-2.65l-1.48,-1.78l-0.22,-1.48l-0.92,-0.96l-0.02,-1.29l-0.57,-1.16l-0.68,-0.16l0.69,-1.29l-0.18,-1.14l0.65,-0.62l0.03,-0.55l-0.36,-0.41l1.55,-2.97l1.91,0.16l0.43,-0.4l-0.1,-10.94l2.49,-0.01l0.4,-0.4l-0.0,-4.82l29.02,0.0l0.64,2.04l-0.49,0.66l0.36,2.69l0.93,3.16l2.12,1.55l-0.89,1.04l-1.72,0.39l-0.98,0.9l-1.43,5.65l0.24,1.15l-0.38,2.06l-0.96,2.38l-1.53,1.31l-1.32,2.91l-1.22,0.86l-0.37,1.34Z\",\n            name: \"Sudan\"\n          },\n          DO: {\n            path: \"M241.8,239.2l0.05,-0.65l-0.46,-0.73l0.42,-0.44l0.19,-1.0l-0.09,-1.53l1.66,0.01l1.99,0.63l0.33,0.67l1.28,0.19l0.33,0.76l1.0,0.08l0.8,0.62l-0.45,0.51l-1.13,-0.47l-1.88,-0.01l-1.27,0.59l-0.75,-0.55l-1.01,0.54l-0.79,1.4l-0.23,-0.61Z\",\n            name: \"Dominican Rep.\"\n          },\n          DJ: {\n            path: \"M528.43,256.18l-0.45,0.66l-0.58,-0.25l-1.51,0.13l-0.18,-1.01l1.45,-1.95l0.83,0.17l0.77,-0.44l0.2,1.0l-1.2,0.51l-0.06,0.7l0.73,0.47Z\",\n            name: \"Djibouti\"\n          },\n          DK: {\n            path: \"M452.28,129.07l-1.19,2.24l-2.13,-1.6l-0.23,-0.95l2.98,-0.95l0.57,1.26ZM447.74,126.31l-0.26,0.57l-0.88,-0.07l-1.8,2.53l0.48,1.69l-1.09,0.36l-1.61,-0.39l-0.89,-1.69l-0.07,-3.43l0.96,-1.73l2.02,-0.2l1.09,-1.07l1.33,-0.67l-0.05,1.06l-0.73,1.41l0.3,1.0l1.2,0.64Z\",\n            name: \"Denmark\"\n          },\n          DE: {\n            path: \"M453.14,155.55l-0.55,-0.36l-1.2,-0.1l-1.87,0.57l-2.13,-0.13l-0.56,0.63l-0.86,-0.6l-0.96,0.09l-2.57,-0.93l-0.85,0.67l-1.47,-0.02l0.24,-1.75l1.23,-2.14l-0.28,-0.59l-3.52,-0.58l-0.92,-0.66l0.12,-1.2l-0.48,-0.88l0.27,-2.17l-0.37,-3.03l1.41,-0.22l0.63,-1.26l0.66,-3.19l-0.41,-1.18l0.26,-0.39l1.66,-0.15l0.33,0.54l0.62,0.07l1.7,-1.69l-0.54,-3.02l1.37,0.33l1.31,-0.37l0.31,1.18l2.25,0.71l-0.02,0.92l0.5,0.4l2.55,-0.65l1.34,-0.87l2.57,1.24l1.06,0.98l0.48,1.44l-0.57,0.74l-0.0,0.48l0.87,1.15l0.57,1.64l-0.14,1.29l0.82,1.7l-1.5,-0.07l-0.56,0.57l-4.47,2.15l-0.22,0.54l0.68,2.26l2.58,2.16l-0.66,1.11l-0.79,0.36l-0.23,0.43l0.32,1.87Z\",\n            name: \"Germany\"\n          },\n          YE: {\n            path: \"M528.27,246.72l0.26,-0.42l-0.22,-1.01l0.19,-1.5l0.92,-0.69l-0.07,-1.35l0.39,-0.75l1.01,0.47l3.34,-0.27l3.76,0.41l0.95,0.81l1.36,-0.58l1.74,-2.62l2.18,-1.09l6.86,-0.94l2.48,5.41l-1.64,0.76l-0.56,1.9l-6.23,2.16l-2.29,1.8l-1.93,0.05l-1.41,1.02l-4.24,0.74l-1.72,1.49l-3.28,0.19l-0.52,-1.18l0.02,-1.51l-1.34,-3.29Z\",\n            name: \"Yemen\"\n          },\n          DZ: {\n            path: \"M441.46,188.44l-0.32,1.07l0.39,2.64l-0.54,2.16l-1.58,1.82l0.37,2.39l1.91,1.55l0.18,0.8l1.42,1.03l1.84,7.23l0.12,1.16l-0.57,5.0l0.2,1.51l-0.87,0.99l-0.02,0.51l1.41,1.86l0.14,1.2l0.89,1.48l0.5,0.16l0.98,-0.41l1.73,1.08l0.82,1.23l-8.22,4.81l-7.23,5.11l-3.43,1.13l-2.3,0.21l-0.28,-1.59l-2.56,-1.09l-0.67,-1.25l-26.12,-17.86l0.01,-3.47l3.77,-1.88l2.44,-0.41l2.12,-0.75l1.08,-1.42l2.81,-1.05l0.35,-2.08l1.33,-0.29l1.04,-0.94l3.47,-0.69l0.46,-1.08l-0.1,-0.45l-0.58,-0.52l-0.82,-2.81l-0.19,-1.83l-0.78,-1.49l2.03,-1.31l2.63,-0.48l1.7,-1.22l2.31,-0.84l8.24,-0.73l1.49,0.38l2.28,-1.1l2.46,-0.02l0.92,0.6l1.35,-0.05Z\",\n            name: \"Algeria\"\n          },\n          US: {\n            path: \"M892.72,99.2l1.31,0.53l1.41,-0.37l1.89,0.98l1.89,0.42l-1.32,0.58l-2.9,-1.53l-2.08,0.22l-0.26,-0.15l0.07,-0.67ZM183.22,150.47l0.37,1.47l1.12,0.85l4.23,0.7l2.39,0.98l2.17,-0.38l1.85,0.5l-1.55,0.65l-3.49,2.61l-0.16,0.77l0.5,0.39l2.33,-0.61l1.77,1.02l5.15,-2.4l-0.31,0.65l0.25,0.56l1.36,0.38l1.71,1.16l4.7,-0.88l0.67,0.85l1.31,0.21l0.58,0.58l-1.34,0.17l-2.18,-0.32l-3.6,0.89l-2.71,3.25l0.35,0.9l0.59,-0.0l0.55,-0.6l-1.36,4.65l0.29,3.09l0.67,1.58l0.61,0.45l1.77,-0.44l1.6,-1.96l0.14,-2.21l-0.82,-1.96l0.11,-1.13l1.19,-2.37l0.44,-0.33l0.48,0.75l0.4,-0.29l0.4,-1.37l0.6,-0.47l0.24,-0.8l1.69,0.49l1.65,1.08l-0.03,2.37l-1.27,1.13l-0.0,1.13l0.87,0.36l1.66,-1.29l0.5,0.17l0.5,2.6l-2.49,3.75l0.17,0.61l1.54,0.62l1.48,0.17l1.92,-0.44l4.72,-2.15l2.16,-1.8l-0.05,-1.24l0.75,-0.22l3.92,0.36l2.12,-1.05l0.21,-0.4l-0.28,-1.48l3.27,-2.4l8.32,-0.02l0.56,-0.82l1.9,-0.77l0.93,-1.51l0.74,-2.37l1.58,-1.98l0.92,0.62l1.47,-0.47l0.8,0.66l-0.0,4.09l1.96,2.6l-2.34,1.31l-5.37,2.09l-1.83,2.72l0.02,1.79l0.83,1.59l0.54,0.23l-6.19,0.94l-2.2,0.89l-0.23,0.48l0.45,0.29l2.99,-0.46l-2.19,0.56l-1.13,0.0l-0.15,-0.32l-0.48,0.08l-0.76,0.82l0.22,0.67l0.32,0.06l-0.41,1.62l-1.27,1.58l-1.48,-1.07l-0.49,-0.04l-0.16,0.46l0.52,1.58l0.61,0.59l0.03,0.79l-0.95,1.38l-1.21,-1.22l-0.27,-2.27l-0.35,-0.35l-0.42,0.25l-0.48,1.27l0.33,1.41l-0.97,-0.27l-0.48,0.24l0.18,0.5l1.52,0.83l0.1,2.52l0.79,0.51l0.52,3.42l-1.42,1.88l-2.47,0.8l-1.71,1.66l-1.31,0.25l-1.27,1.03l-0.43,0.99l-2.69,1.78l-2.64,3.03l-0.45,2.12l0.45,2.08l0.85,2.38l1.09,1.9l0.04,1.2l1.16,3.06l-0.18,2.69l-0.55,1.43l-0.47,0.21l-0.89,-0.23l-0.49,-1.18l-0.87,-0.56l-2.75,-5.16l0.48,-1.68l-0.72,-1.78l-2.01,-2.38l-1.12,-0.53l-2.72,1.18l-1.47,-1.35l-1.57,-0.68l-2.99,0.31l-2.17,-0.3l-2.0,0.19l-1.15,0.46l-0.19,0.58l0.39,0.63l0.14,1.34l-0.84,-0.2l-0.84,0.46l-1.58,-0.07l-2.08,-1.44l-2.09,0.33l-1.91,-0.62l-3.73,0.84l-2.39,2.07l-2.54,1.22l-1.45,1.41l-0.61,1.38l0.34,3.71l-0.29,0.02l-3.5,-1.33l-1.25,-3.11l-1.44,-1.5l-2.24,-3.56l-1.76,-1.09l-2.27,-0.01l-1.71,2.07l-1.76,-0.69l-1.16,-0.74l-1.52,-2.98l-3.93,-3.16l-4.34,-0.0l-0.4,0.4l-0.0,0.74l-6.5,0.02l-9.02,-3.14l-0.34,-0.71l-5.7,0.49l-0.43,-1.29l-1.62,-1.61l-1.14,-0.38l-0.55,-0.88l-1.28,-0.13l-1.01,-0.77l-2.22,-0.27l-0.43,-0.3l-0.36,-1.58l-2.4,-2.83l-2.01,-3.85l-0.06,-0.9l-2.92,-3.26l-0.33,-2.29l-1.3,-1.66l0.52,-2.37l-0.09,-2.57l-0.78,-2.3l0.95,-2.82l0.61,-5.68l-0.47,-4.27l-1.46,-4.08l3.19,0.79l1.26,2.83l0.69,0.08l0.69,-1.14l-1.1,-4.79l68.76,-0.0l0.4,-0.4l0.14,-0.86ZM32.44,67.52l1.73,1.97l0.55,0.05l0.99,-0.79l3.65,0.24l-0.09,0.62l0.32,0.45l3.83,0.77l2.61,-0.43l5.19,1.4l4.84,0.43l1.89,0.57l3.42,-0.7l6.14,1.87l-0.03,38.06l0.38,0.4l2.39,0.11l2.31,0.98l3.9,3.99l0.55,0.04l2.4,-2.03l2.16,-1.04l1.2,1.71l3.95,3.14l4.09,6.63l4.2,2.29l0.06,1.83l-1.02,1.23l-1.16,-1.08l-2.04,-1.03l-0.67,-2.89l-3.28,-3.03l-1.65,-3.57l-6.35,-0.32l-2.82,-1.01l-5.26,-3.85l-6.77,-2.04l-3.53,0.3l-4.81,-1.69l-3.25,-1.63l-2.78,0.8l-0.28,0.46l0.44,2.21l-3.91,0.96l-2.26,1.27l-2.3,0.65l-0.27,-1.65l1.05,-3.42l2.49,-1.09l0.16,-0.6l-0.69,-0.96l-0.55,-0.1l-3.19,2.12l-1.78,2.56l-3.55,2.61l-0.04,0.61l1.56,1.52l-2.07,2.29l-5.11,2.57l-0.77,1.66l-3.76,1.77l-0.92,1.73l-2.69,1.38l-1.81,-0.22l-6.95,3.32l-3.97,0.91l4.85,-2.5l2.59,-1.86l3.26,-0.52l1.19,-1.4l3.42,-2.1l2.59,-2.27l0.42,-2.68l1.23,-2.1l-0.04,-0.46l-0.45,-0.11l-2.68,1.03l-0.63,-0.49l-0.53,0.03l-1.05,1.04l-1.36,-1.54l-0.66,0.08l-0.32,0.62l-0.58,-1.14l-0.56,-0.16l-2.41,1.42l-1.07,-0.0l-0.17,-1.75l0.3,-1.71l-1.61,-1.33l-3.41,0.59l-1.96,-1.63l-1.57,-0.84l-0.15,-2.21l-1.7,-1.43l0.82,-1.88l1.99,-2.12l0.88,-1.92l1.71,-0.24l2.04,0.51l1.87,-1.77l1.91,0.25l1.91,-1.23l0.17,-0.43l-0.47,-1.82l-1.07,-0.7l1.39,-1.17l0.12,-0.45l-0.39,-0.26l-1.65,0.07l-2.66,0.88l-0.75,0.78l-1.92,-0.8l-3.46,0.44l-3.44,-0.91l-1.06,-1.61l-2.65,-1.99l2.91,-1.43l5.5,-2.0l1.52,0.0l-0.26,1.62l0.41,0.46l5.29,-0.16l0.3,-0.65l-2.03,-2.59l-3.14,-1.68l-1.79,-2.12l-2.4,-1.83l-3.09,-1.24l1.04,-1.69l4.23,-0.14l3.36,-2.07l0.73,-2.27l2.39,-1.99l2.42,-0.52l4.65,-1.97l2.46,0.23l3.71,-2.35l3.5,0.89ZM37.6,123.41l-2.25,1.23l-0.95,-0.69l-0.29,-1.24l3.21,-1.63l1.42,0.21l0.67,0.7l-1.8,1.42ZM31.06,234.03l0.98,0.47l0.74,0.87l-1.77,1.07l-0.44,-1.53l0.49,-0.89ZM29.34,232.07l0.18,0.05l0.08,0.05l-0.16,0.03l-0.11,-0.14ZM25.16,230.17l0.05,-0.03l0.18,0.22l-0.13,-0.01l-0.1,-0.18ZM5.89,113.26l-1.08,0.41l-2.21,-1.12l1.53,-0.4l1.62,0.28l0.14,0.83Z\",\n            name: \"United States\"\n          },\n          UY: {\n            path: \"M286.85,372.74l-0.92,1.5l-2.59,1.44l-1.69,-0.52l-1.42,0.26l-2.39,-1.19l-1.52,0.08l-1.27,-1.3l0.16,-1.5l0.56,-0.79l-0.02,-2.73l1.21,-4.74l1.19,-0.21l2.37,2.0l1.08,0.03l4.36,3.17l1.22,1.6l-0.96,1.5l0.61,1.4Z\",\n            name: \"Uruguay\"\n          },\n          LB: {\n            path: \"M510.37,198.01l-0.88,0.51l1.82,-3.54l0.62,0.08l0.22,0.61l-1.13,0.88l-0.65,1.47Z\",\n            name: \"Lebanon\"\n          },\n          LA: {\n            path: \"M689.54,248.53l-1.76,-0.74l-0.49,0.15l-0.94,1.46l-1.32,-0.64l0.62,-0.98l0.11,-2.17l-2.04,-2.42l-0.25,-2.65l-1.9,-2.1l-2.15,-0.31l-0.78,0.91l-1.12,0.06l-1.05,-0.4l-2.06,1.2l-0.04,-1.59l0.61,-2.68l-0.36,-0.49l-1.35,-0.1l-0.11,-1.23l-0.96,-0.88l1.96,-1.89l0.39,0.36l1.33,0.07l0.42,-0.45l-0.34,-2.66l0.7,-0.21l1.28,1.81l1.11,2.35l0.36,0.23l2.82,0.02l0.71,1.67l-1.39,0.65l-0.72,0.93l0.13,0.6l2.91,1.51l3.6,5.25l1.88,1.78l0.56,1.62l-0.35,1.96Z\",\n            name: \"Lao PDR\"\n          },\n          TW: {\n            path: \"M724.01,226.68l-0.74,1.48l-0.9,-1.52l-0.25,-1.74l1.38,-2.44l1.73,-1.74l0.64,0.44l-1.85,5.52Z\",\n            name: \"Taiwan\"\n          },\n          TT: {\n            path: \"M266.64,259.32l0.28,-1.16l1.13,-0.22l-0.06,1.2l-1.35,0.18Z\",\n            name: \"Trinidad and Tobago\"\n          },\n          TR: {\n            path: \"M513.21,175.47l3.64,1.17l3.05,-0.44l2.1,0.26l3.11,-1.56l2.46,-0.13l2.19,1.33l0.33,0.82l-0.22,1.33l0.25,0.44l2.28,1.13l-1.17,0.57l-0.21,0.45l0.75,3.2l-0.41,1.16l1.13,1.92l-0.55,0.22l-0.9,-0.67l-2.91,-0.37l-1.24,0.46l-4.23,0.41l-2.81,1.05l-1.91,0.01l-1.52,-0.53l-2.58,0.75l-0.66,-0.45l-0.62,0.3l-0.12,1.45l-0.89,0.84l-0.47,-0.67l0.79,-1.3l-0.41,-0.2l-1.43,0.23l-2.0,-0.63l-2.02,1.65l-3.51,0.3l-2.13,-1.53l-2.7,-0.1l-0.86,1.24l-1.38,0.27l-2.29,-1.44l-2.71,-0.01l-1.37,-2.65l-1.68,-1.52l1.07,-1.99l-0.09,-0.49l-1.27,-1.12l2.37,-2.41l3.7,-0.11l1.28,-2.24l4.49,0.37l3.21,-1.97l2.81,-0.82l3.99,-0.06l4.29,2.07ZM488.79,176.72l-1.72,1.31l-0.5,-0.88l1.37,-2.57l-0.7,-0.85l1.7,-0.63l1.8,0.34l0.46,1.17l1.76,0.78l-2.87,0.32l-1.3,1.01Z\",\n            name: \"Turkey\"\n          },\n          LK: {\n            path: \"M624.16,268.99l-1.82,0.48l-0.99,-1.67l-0.42,-3.46l0.95,-3.43l1.21,0.98l2.26,4.19l-0.34,2.33l-0.85,0.58Z\",\n            name: \"Sri Lanka\"\n          },\n          LV: {\n            path: \"M489.16,122.85l0.96,0.66l0.22,1.65l0.68,1.76l-3.65,1.7l-2.23,-1.58l-1.29,-0.26l-0.68,-0.77l-2.42,0.34l-4.16,-0.23l-2.47,0.9l0.06,-1.98l1.13,-2.06l1.95,-1.02l2.12,2.58l2.01,-0.07l0.38,-0.33l0.44,-2.52l1.76,-0.53l3.06,1.7l2.15,0.07Z\",\n            name: \"Latvia\"\n          },\n          LT: {\n            path: \"M486.93,129.3l0.17,1.12l-1.81,0.98l-0.72,2.02l-2.47,1.18l-2.1,-0.02l-0.73,-1.05l-1.06,-0.3l-0.09,-1.87l-3.56,-1.13l-0.43,-2.36l2.48,-0.94l4.12,0.22l2.25,-0.31l0.52,0.69l1.24,0.21l2.19,1.56Z\",\n            name: \"Lithuania\"\n          },\n          LU: {\n            path: \"M436.08,149.45l-0.48,-0.07l0.3,-1.28l0.27,0.4l-0.09,0.96Z\",\n            name: \"Luxembourg\"\n          },\n          LR: {\n            path: \"M399.36,265.97l0.18,1.54l-0.48,0.99l0.08,0.47l2.47,1.8l-0.33,2.8l-2.65,-1.13l-5.78,-4.61l0.58,-1.32l2.1,-2.33l0.86,-0.22l0.77,1.14l-0.14,0.85l0.59,0.87l1.0,0.14l0.76,-0.99Z\",\n            name: \"Liberia\"\n          },\n          LS: {\n            path: \"M491.06,363.48l-0.49,0.15l-1.49,-1.67l1.1,-1.43l2.19,-1.44l1.51,1.27l-0.98,1.82l-1.23,0.38l-0.62,0.93Z\",\n            name: \"Lesotho\"\n          },\n          TH: {\n            path: \"M670.27,255.86l-1.41,3.87l0.15,2.0l0.38,0.36l1.38,0.07l0.9,2.04l0.55,2.34l1.4,1.44l1.61,0.38l0.96,0.97l-0.5,0.64l-1.1,0.2l-0.34,-1.18l-2.04,-1.1l-0.63,0.23l-0.63,-0.62l-0.48,-1.3l-2.56,-2.63l-0.73,0.41l0.95,-3.89l2.16,-4.22ZM670.67,254.77l-0.92,-2.18l-0.26,-2.61l-2.14,-3.06l0.71,-0.49l0.89,-2.59l-3.61,-5.45l0.87,-0.51l1.05,-2.58l1.74,-0.18l2.6,-1.59l0.76,0.56l0.13,1.39l0.37,0.36l1.23,0.09l-0.51,2.28l0.05,2.42l0.6,0.34l2.43,-1.42l0.77,0.39l1.47,-0.07l0.71,-0.88l1.48,0.14l1.71,1.88l0.25,2.65l1.92,2.11l-0.1,1.89l-0.61,0.86l-2.22,-0.33l-3.5,0.64l-1.6,2.12l0.36,2.58l-1.51,-0.79l-1.84,-0.01l0.28,-1.52l-0.4,-0.47l-2.21,0.01l-0.4,0.37l-0.19,2.74l-0.34,0.93Z\",\n            name: \"Thailand\"\n          },\n          TF: {\n            path: \"M596.68,420.38l-3.2,0.18l-0.05,-1.26l0.39,-1.41l1.3,0.78l2.08,0.35l-0.52,1.36Z\",\n            name: \"Fr. S. Antarctic Lands\"\n          },\n          TG: {\n            path: \"M422.7,257.63l-0.09,1.23l1.53,1.52l0.08,1.09l0.5,0.65l-0.11,5.62l0.49,1.47l-1.31,0.35l-1.02,-2.13l-0.18,-1.12l0.53,-2.19l-0.63,-1.16l-0.22,-3.68l-1.01,-1.4l0.07,-0.28l1.37,0.03Z\",\n            name: \"Togo\"\n          },\n          TD: {\n            path: \"M480.25,235.49l0.12,9.57l-2.1,0.05l-1.14,1.89l-0.69,1.63l0.34,0.73l-0.66,0.91l0.24,0.89l-0.86,1.95l0.45,0.5l0.6,-0.1l0.34,0.64l0.03,1.38l0.9,1.04l-1.45,0.43l-1.27,1.03l-1.83,2.76l-2.16,1.07l-2.31,-0.15l-0.86,0.25l-0.26,0.49l0.17,0.61l-2.11,1.68l-2.85,0.87l-1.09,-0.57l-0.73,0.66l-1.12,0.1l-1.1,-3.12l-1.25,-0.64l-1.22,-1.22l0.29,-0.64l3.01,0.04l0.35,-0.6l-1.3,-2.2l-0.08,-3.31l-0.97,-1.66l0.22,-1.04l-0.38,-0.48l-1.22,-0.04l0.0,-1.25l-0.98,-1.07l0.96,-3.01l3.25,-2.65l0.13,-3.33l0.95,-5.18l0.52,-1.07l-0.1,-0.48l-0.91,-0.78l-0.2,-0.96l-0.8,-0.58l-0.55,-3.65l2.1,-1.2l19.57,9.83Z\",\n            name: \"Chad\"\n          },\n          LY: {\n            path: \"M483.48,203.15l-0.75,1.1l0.29,1.39l-0.6,1.83l0.73,2.14l0.0,24.12l-2.48,0.01l-0.41,0.85l-19.41,-9.76l-4.41,2.28l-1.37,-1.33l-3.82,-1.1l-1.14,-1.65l-1.98,-1.23l-1.22,0.32l-0.66,-1.11l-0.17,-1.26l-1.28,-1.69l0.87,-1.19l-0.07,-4.34l0.43,-2.27l-0.86,-3.45l1.13,-0.76l0.22,-1.16l-0.2,-1.03l3.48,-2.61l0.29,-1.94l2.45,0.8l1.18,-0.21l1.98,0.44l3.15,1.18l1.37,2.54l5.72,1.67l2.64,1.35l1.61,-0.72l1.29,-1.34l-0.44,-2.34l0.66,-1.13l1.67,-1.21l1.57,-0.35l3.14,0.53l1.08,1.28l3.99,0.78l0.36,0.54Z\",\n            name: \"Libya\"\n          },\n          AE: {\n            path: \"M550.76,223.97l1.88,-0.4l3.84,0.02l4.78,-4.75l0.19,0.36l0.26,1.58l-0.81,0.01l-0.39,0.35l-0.08,2.04l-0.81,0.63l-0.01,0.96l-0.66,0.99l-0.39,1.41l-7.08,-1.25l-0.7,-1.96Z\",\n            name: \"United Arab Emirates\"\n          },\n          VE: {\n            path: \"M240.68,256.69l0.53,0.75l-0.02,1.06l-1.07,1.78l0.95,2.0l0.42,0.22l1.4,-0.44l0.56,-1.83l-0.77,-1.17l-0.1,-1.47l2.82,-0.93l0.26,-0.49l-0.28,-0.96l0.3,-0.28l0.66,1.31l1.96,0.26l1.4,1.22l0.08,0.68l0.39,0.35l4.81,-0.22l1.49,1.11l1.92,0.31l1.67,-0.84l0.22,-0.6l3.44,-0.14l-0.17,0.55l0.86,1.19l2.19,0.35l1.67,1.1l0.37,1.86l0.41,0.32l1.55,0.17l-1.66,1.35l-0.22,0.92l0.65,0.97l-1.67,0.54l-0.3,0.4l0.04,0.99l-0.56,0.57l-0.01,0.55l1.85,2.27l-0.66,0.69l-4.47,1.29l-0.72,0.54l-3.69,-0.9l-0.71,0.27l-0.02,0.7l0.91,0.53l-0.08,1.54l0.35,1.58l0.35,0.31l1.66,0.17l-1.3,0.52l-0.48,1.13l-2.68,0.91l-0.6,0.77l-1.57,0.13l-1.17,-1.13l-0.8,-2.52l-1.25,-1.26l1.02,-1.23l-1.29,-2.95l0.18,-1.62l1.0,-2.21l-0.2,-0.49l-1.14,-0.46l-4.02,0.36l-1.82,-2.1l-1.57,-0.33l-2.99,0.22l-1.06,-0.97l0.25,-1.23l-0.2,-1.01l-0.59,-0.69l-0.29,-1.06l-1.08,-0.39l0.78,-2.79l1.9,-2.11Z\",\n            name: \"Venezuela\"\n          },\n          AF: {\n            path: \"M600.7,188.88l-1.57,1.3l-0.1,0.48l0.8,2.31l-1.09,1.04l-0.03,1.27l-0.48,0.71l-2.16,-0.08l-0.37,0.59l0.78,1.48l-1.38,0.69l-1.06,1.69l0.06,1.7l-0.65,0.52l-0.91,-0.21l-1.91,0.36l-0.48,0.77l-1.88,0.13l-1.4,1.56l-0.18,2.32l-2.91,1.02l-1.65,-0.23l-0.71,0.55l-1.41,-0.3l-2.41,0.39l-3.52,-1.17l1.96,-2.35l-0.21,-1.78l-0.3,-0.34l-1.63,-0.4l-0.19,-1.58l-0.75,-2.03l0.95,-1.36l-0.19,-0.6l-0.73,-0.28l1.47,-4.8l2.14,0.9l2.12,-0.36l0.74,-1.34l1.77,-0.39l1.54,-0.92l0.63,-2.31l1.87,-0.5l0.49,-0.81l0.94,0.56l2.13,0.11l2.55,0.92l1.95,-0.83l0.65,0.43l0.56,-0.13l0.69,-1.12l1.57,-0.08l0.72,-1.66l0.79,-0.74l0.8,0.39l-0.17,0.56l0.71,0.58l-0.08,2.39l1.11,0.95ZM601.37,188.71l1.73,-0.71l1.43,-1.18l4.03,0.35l-2.23,0.74l-4.95,0.8Z\",\n            name: \"Afghanistan\"\n          },\n          IQ: {\n            path: \"M530.82,187.47l0.79,0.66l1.26,-0.28l1.46,3.08l1.63,0.94l0.14,1.23l-1.22,1.05l-0.53,2.52l1.73,2.67l3.12,1.62l1.15,1.88l-0.38,1.85l0.39,0.48l0.41,-0.0l0.02,1.07l0.76,0.94l-2.47,-0.1l-1.71,2.44l-4.31,-0.2l-7.02,-5.48l-3.73,-1.94l-2.88,-0.73l-0.85,-2.87l5.45,-3.02l0.95,-3.43l-0.19,-1.96l1.27,-0.7l1.22,-1.7l0.87,-0.36l2.69,0.34Z\",\n            name: \"Iraq\"\n          },\n          IS: {\n            path: \"M384.14,88.06l-0.37,2.61l2.54,2.51l-2.9,2.75l-9.19,3.4l-9.25,-1.66l1.7,-1.22l-0.1,-0.7l-4.05,-1.47l2.96,-0.53l0.33,-0.43l-0.11,-1.2l-0.33,-0.36l-4.67,-0.85l1.28,-2.04l3.45,-0.56l3.77,2.72l0.44,0.02l3.64,-2.16l3.3,1.08l3.98,-2.16l3.58,0.26Z\",\n            name: \"Iceland\"\n          },\n          IR: {\n            path: \"M533.43,187.16l-1.27,-2.15l0.42,-0.98l-0.71,-3.04l1.03,-0.5l0.33,0.83l1.26,1.35l2.05,0.51l1.11,-0.16l2.89,-2.11l0.62,-0.14l0.39,0.46l-0.72,1.2l0.06,0.49l1.56,1.53l0.65,0.04l0.67,1.81l2.56,0.83l1.87,1.48l3.69,0.49l3.91,-0.76l0.47,-0.73l2.17,-0.6l1.66,-1.54l1.51,0.08l1.18,-0.53l1.59,0.24l2.83,1.48l1.88,0.3l2.77,2.47l1.77,0.18l0.18,1.99l-1.68,5.49l0.24,0.5l0.61,0.23l-0.82,1.48l0.8,2.18l0.19,1.71l0.3,0.34l1.63,0.4l0.15,1.32l-2.15,2.35l-0.01,0.53l2.21,3.03l2.34,1.24l0.06,2.14l1.24,0.72l0.11,0.69l-3.31,1.27l-1.08,3.03l-9.68,-1.68l-0.99,-3.05l-1.43,-0.73l-2.17,0.46l-2.47,1.26l-2.83,-0.82l-2.46,-2.02l-2.41,-0.8l-3.42,-6.06l-0.48,-0.2l-1.18,0.39l-1.44,-0.82l-0.5,0.08l-0.65,0.74l-0.97,-1.01l-0.02,-1.31l-0.71,-0.39l0.26,-1.81l-1.29,-2.11l-3.13,-1.63l-1.58,-2.43l0.5,-1.9l1.31,-1.26l-0.19,-1.66l-1.74,-1.1l-1.57,-3.3Z\",\n            name: \"Iran\"\n          },\n          AM: {\n            path: \"M536.99,182.33l-0.28,0.03l-1.23,-2.13l-0.93,0.01l-0.62,-0.66l-0.69,-0.07l-0.96,-0.81l-1.56,-0.62l0.19,-1.12l-0.26,-0.79l2.72,-0.36l1.09,1.01l-0.17,0.92l1.02,0.78l-0.47,0.62l0.08,0.56l2.04,1.23l0.04,1.4Z\",\n            name: \"Armenia\"\n          },\n          AL: {\n            path: \"M470.32,171.8l0.74,0.03l0.92,0.89l-0.17,1.95l0.36,1.28l1.01,0.82l-1.82,2.83l-0.19,-0.61l-1.25,-0.89l-0.18,-1.2l0.53,-2.82l-0.54,-1.47l0.6,-0.83Z\",\n            name: \"Albania\"\n          },\n          AO: {\n            path: \"M461.55,300.03l1.26,3.15l1.94,2.36l2.47,-0.53l1.25,0.32l0.44,-0.18l0.93,-1.92l1.31,-0.08l0.41,-0.44l0.47,-0.0l-0.1,0.41l0.39,0.49l2.65,-0.02l0.03,1.19l0.48,1.01l-0.34,1.52l0.18,1.55l0.83,1.04l-0.13,2.85l0.54,0.39l3.96,-0.41l-0.1,1.79l0.39,1.05l-0.24,1.43l-4.7,-0.03l-0.4,0.39l-0.12,8.13l2.92,3.49l-3.83,0.88l-5.89,-0.36l-1.88,-1.24l-10.47,0.22l-1.3,-1.01l-1.85,-0.16l-2.4,0.77l-0.15,-1.06l0.33,-2.16l1.0,-3.45l1.35,-3.2l2.24,-2.8l0.33,-2.06l-0.13,-1.53l-0.8,-1.08l-1.21,-2.87l0.87,-1.62l-1.27,-4.12l-1.17,-1.53l2.47,-0.63l7.03,0.03ZM451.71,298.87l-0.47,-1.25l1.25,-1.11l0.32,0.3l-0.99,1.03l-0.12,1.03Z\",\n            name: \"Angola\"\n          },\n          AR: {\n            path: \"M249.29,428.93l-2.33,-0.52l-5.83,-0.43l-0.89,-1.66l0.05,-2.37l-0.45,-0.4l-1.43,0.18l-0.67,-0.91l-0.2,-3.13l1.88,-1.47l0.79,-2.04l-0.25,-1.7l1.3,-2.68l0.91,-4.15l-0.22,-1.69l0.85,-0.45l0.2,-0.44l-0.27,-1.16l-0.98,-0.68l0.59,-0.92l-0.05,-0.5l-1.04,-1.07l-0.52,-3.1l0.97,-0.86l-0.42,-3.58l1.2,-5.43l1.38,-0.98l0.16,-0.43l-0.75,-2.79l-0.01,-2.43l1.78,-1.75l0.06,-2.57l1.43,-2.85l0.01,-2.58l-0.69,-0.74l-1.09,-4.52l1.47,-2.7l-0.18,-2.79l0.85,-2.35l1.59,-2.46l1.73,-1.64l0.05,-0.52l-0.6,-0.84l0.44,-0.85l-0.07,-4.19l2.7,-1.44l0.86,-2.75l-0.21,-0.71l1.76,-2.01l2.9,0.57l1.38,1.78l0.68,-0.08l0.87,-1.87l2.39,0.09l4.95,4.77l2.17,0.49l3.0,1.92l2.47,1.0l0.25,0.82l-2.37,3.93l0.23,0.59l5.39,1.16l2.12,-0.44l2.45,-2.16l0.5,-2.38l0.76,-0.31l0.98,1.2l-0.04,1.8l-3.67,2.51l-2.85,2.66l-3.43,3.88l-1.3,5.07l0.01,2.72l-0.54,0.73l-0.36,3.28l3.14,2.64l-0.16,2.11l1.4,1.11l-0.1,1.09l-2.29,3.52l-3.55,1.49l-4.92,0.6l-2.71,-0.29l-0.43,0.51l0.5,1.65l-0.49,2.1l0.38,1.42l-1.19,0.83l-2.36,0.38l-2.3,-1.04l-1.38,0.83l0.41,3.64l1.69,0.91l1.4,-0.71l0.36,0.76l-2.04,0.86l-2.01,1.89l-0.97,4.63l-2.34,0.1l-2.09,1.78l-0.61,2.75l2.46,2.31l2.17,0.63l-0.7,2.32l-2.83,1.73l-1.73,3.86l-2.17,1.22l-1.16,1.67l0.75,3.76l1.04,1.28ZM256.71,438.88l-2.0,0.15l-1.4,-1.22l-3.82,-0.1l-0.0,-5.83l1.6,3.05l3.26,2.07l3.08,0.78l-0.71,1.1Z\",\n            name: \"Argentina\"\n          },\n          AU: {\n            path: \"M705.8,353.26l0.26,0.04l0.17,-0.47l-0.48,-1.42l0.92,1.11l0.45,0.15l0.27,-0.39l-0.1,-1.56l-1.98,-3.63l1.09,-3.31l-0.24,-1.57l0.34,-0.62l0.38,1.06l0.43,-0.19l0.99,-1.7l1.91,-0.83l1.29,-1.15l1.81,-0.91l0.96,-0.17l0.92,0.26l1.92,-0.95l1.47,-0.28l1.03,-0.8l1.43,0.04l2.78,-0.84l1.36,-1.15l0.71,-1.45l1.41,-1.26l0.3,-2.58l1.27,-1.59l0.78,1.65l0.54,0.19l1.07,-0.51l0.15,-0.6l-0.73,-1.0l0.45,-0.71l0.78,0.39l0.58,-0.3l0.28,-1.82l1.87,-2.14l1.12,-0.39l0.28,-0.58l0.62,0.17l0.53,-0.73l1.87,-0.57l1.65,1.05l1.35,1.48l3.39,0.38l0.43,-0.54l-0.46,-1.23l1.05,-1.79l1.04,-0.61l0.14,-0.55l-0.25,-0.41l0.88,-1.17l1.31,-0.77l1.3,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.3l-0.92,-0.77l1.48,0.56l1.41,1.07l2.11,0.65l0.81,-0.2l1.4,0.7l1.69,-0.66l0.8,0.19l0.64,-0.33l0.71,0.77l-1.33,1.94l-0.71,0.07l-0.35,0.51l0.24,0.86l-1.52,2.35l0.12,1.05l2.15,1.65l1.97,0.85l3.04,2.36l1.97,0.65l0.55,0.88l2.72,0.85l1.84,-1.1l2.07,-5.97l-0.42,-3.59l0.3,-1.73l0.47,-0.87l-0.31,-0.68l1.09,-3.28l0.46,-0.47l0.4,0.71l0.16,1.51l0.65,0.52l0.16,1.04l0.85,1.21l0.12,2.38l0.9,2.0l0.57,0.18l1.3,-0.78l1.69,1.7l-0.2,1.08l0.53,2.2l0.39,1.3l0.68,0.48l0.6,1.95l-0.19,1.48l0.81,1.76l6.01,3.69l-0.11,0.76l1.38,1.58l0.95,2.77l0.58,0.22l0.72,-0.41l0.8,0.9l0.61,0.01l0.46,2.41l4.81,4.71l0.66,2.02l-0.07,3.31l1.14,2.2l-0.13,2.24l-1.1,3.68l0.03,1.64l-0.47,1.89l-1.05,2.4l-1.9,1.47l-1.72,3.51l-2.38,6.09l-0.24,2.82l-1.14,0.8l-2.85,0.15l-2.31,1.19l-2.51,2.25l-3.09,-1.57l0.3,-1.15l-0.54,-0.47l-1.5,0.63l-2.01,1.94l-7.12,-2.18l-1.48,-1.63l-1.14,-3.74l-1.45,-1.26l-1.81,-0.26l0.56,-1.18l-0.61,-2.1l-0.72,-0.1l-1.14,1.82l-0.9,0.21l0.63,-0.82l0.36,-1.55l0.92,-1.31l-0.13,-2.34l-0.7,-0.22l-2.0,2.34l-1.51,0.93l-0.94,2.01l-1.35,-0.81l-0.02,-1.52l-1.57,-2.04l-1.09,-0.88l0.24,-0.33l-0.14,-0.59l-3.21,-1.69l-1.83,-0.12l-2.54,-1.35l-4.58,0.28l-6.02,1.9l-2.53,-0.13l-2.62,1.41l-2.13,0.63l-1.49,2.6l-3.49,0.31l-2.29,-0.5l-3.48,0.43l-1.6,1.47l-0.81,-0.04l-2.37,1.63l-3.26,-0.1l-3.72,-2.21l0.04,-1.05l1.19,-0.46l0.49,-0.89l0.21,-2.97l-0.28,-1.64l-1.34,-2.86l-0.38,-1.47l0.05,-1.72l-0.95,-1.7l-0.18,-0.97l-1.01,-0.99l-0.29,-1.98l-1.13,-1.75ZM784.92,393.44l2.65,1.02l3.23,-0.96l1.09,0.14l0.15,3.06l-0.85,1.13l-0.17,1.63l-0.87,-0.24l-1.57,1.91l-1.68,-0.18l-1.4,-2.36l-0.37,-2.04l-1.39,-2.51l0.04,-0.8l1.15,0.18Z\",\n            name: \"Australia\"\n          },\n          AT: {\n            path: \"M462.89,152.8l0.04,2.25l-1.07,0.0l-0.33,0.63l0.36,0.51l-1.04,2.13l-2.02,0.07l-1.33,0.7l-5.29,-0.99l-0.47,-0.93l-0.44,-0.21l-2.47,0.55l-0.42,0.51l-3.18,-0.81l0.43,-0.91l1.12,0.78l0.6,-0.17l0.25,-0.58l1.93,0.12l1.86,-0.56l1.0,0.08l0.68,0.57l0.62,-0.15l0.26,-0.77l-0.3,-1.78l0.8,-0.44l0.68,-1.15l1.52,0.85l0.47,-0.06l1.34,-1.25l0.64,-0.17l1.81,0.92l1.28,-0.11l0.7,0.37Z\",\n            name: \"Austria\"\n          },\n          IN: {\n            path: \"M623.34,207.03l-1.24,1.04l-0.97,2.55l0.22,0.51l8.04,3.87l3.42,0.37l1.57,1.38l4.92,0.88l2.18,-0.04l0.38,-0.3l0.29,-1.24l-0.32,-1.64l0.14,-0.87l0.82,-0.31l0.45,2.48l2.28,1.02l1.77,-0.38l4.14,0.1l0.38,-0.36l0.18,-1.66l-0.5,-0.65l1.37,-0.29l2.25,-1.99l2.7,-1.62l1.93,0.62l1.8,-0.98l0.79,1.14l-0.68,0.91l0.26,0.63l2.42,0.36l0.09,0.47l-0.83,0.75l0.13,1.07l-1.52,-0.29l-3.24,1.86l-0.13,1.78l-1.32,2.14l-0.18,1.39l-0.93,1.82l-1.64,-0.5l-0.52,0.37l-0.09,2.63l-0.56,1.11l0.19,0.81l-0.53,0.27l-1.18,-3.73l-1.08,-0.27l-0.38,0.31l-0.24,1.0l-0.66,-0.66l0.54,-1.06l1.22,-0.34l1.15,-2.25l-0.24,-0.56l-1.57,-0.47l-4.34,-0.28l-0.18,-1.56l-0.35,-0.35l-1.11,-0.12l-1.91,-1.12l-0.56,0.17l-0.88,1.82l0.11,0.49l1.36,1.07l-1.09,0.69l-0.69,1.11l0.18,0.56l1.24,0.57l-0.32,1.54l0.85,1.94l0.36,2.01l-0.22,0.59l-4.58,0.52l-0.33,0.42l0.13,1.8l-1.17,1.36l-3.65,1.81l-2.79,3.03l-4.32,3.28l-0.18,1.27l-4.65,1.79l-0.77,2.16l0.64,5.3l-1.06,2.49l-0.01,3.94l-1.24,0.28l-1.14,1.93l0.39,0.84l-1.68,0.53l-1.04,1.83l-0.65,0.47l-2.06,-2.05l-2.1,-6.02l-2.2,-3.64l-1.05,-4.75l-2.29,-3.57l-1.76,-8.2l0.01,-3.11l-0.49,-2.53l-0.55,-0.29l-3.53,1.52l-1.53,-0.27l-2.86,-2.77l0.85,-0.67l0.08,-0.55l-0.74,-1.03l-2.67,-2.06l1.24,-1.32l5.34,0.01l0.39,-0.49l-0.5,-2.29l-1.42,-1.46l-0.27,-1.93l-1.43,-1.2l2.31,-2.37l3.05,0.06l2.62,-2.85l1.6,-2.81l2.4,-2.73l0.07,-2.04l1.97,-1.48l-0.02,-0.65l-1.93,-1.31l-0.82,-1.78l-0.8,-2.21l0.9,-0.89l3.59,0.65l2.92,-0.42l2.33,-2.19l2.31,2.85l-0.24,2.13l0.99,1.59l-0.05,0.82l-1.34,-0.28l-0.47,0.48l0.7,3.06l2.62,1.99l2.99,1.65Z\",\n            name: \"India\"\n          },\n          TZ: {\n            path: \"M495.56,296.42l2.8,-3.12l-0.02,-0.81l-0.64,-1.3l0.68,-0.52l0.14,-1.47l-0.76,-1.25l0.31,-0.11l2.26,0.03l-0.51,2.76l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.57,-1.7l8.65,4.86l0.32,1.53l3.34,2.33l-1.05,2.8l0.13,1.61l1.63,1.12l-0.6,1.76l-0.01,2.33l1.89,4.03l0.57,0.43l-1.46,1.08l-2.61,0.94l-1.43,-0.04l-1.06,0.77l-2.29,0.36l-2.87,-0.68l-0.83,0.07l-0.63,-0.75l-0.31,-2.78l-1.32,-1.35l-3.25,-0.77l-3.96,-1.58l-1.18,-2.41l-0.32,-1.75l-1.76,-1.49l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.06,-0.56Z\",\n            name: \"Tanzania\"\n          },\n          AZ: {\n            path: \"M539.29,175.73l1.33,0.32l1.94,-1.8l2.3,3.34l1.43,0.43l-1.26,0.15l-0.35,0.32l-0.8,3.14l-0.99,0.96l0.05,1.11l-1.26,-1.13l0.7,-1.18l-0.04,-0.47l-0.74,-0.86l-1.48,0.15l-2.34,1.71l-0.03,-1.27l-2.03,-1.35l0.47,-0.62l-0.08,-0.56l-1.03,-0.79l0.29,-0.43l-0.14,-0.58l-1.13,-0.86l1.89,0.68l1.69,0.06l0.37,-0.87l-0.81,-1.37l0.42,0.06l1.63,1.72ZM533.78,180.57l0.61,0.46l0.69,-0.0l0.59,1.15l-0.68,-0.15l-1.21,-1.45Z\",\n            name: \"Azerbaijan\"\n          },\n          IE: {\n            path: \"M405.08,135.42l0.35,2.06l-1.75,2.78l-4.22,1.88l-2.84,-0.4l1.73,-3.0l-1.18,-3.53l4.6,-3.74l0.32,1.15l-0.49,1.74l0.4,0.51l1.47,-0.04l1.6,0.6Z\",\n            name: \"Ireland\"\n          },\n          ID: {\n            path: \"M756.47,287.89l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.12l-1.75,-1.54l-2.54,-0.51l-0.88,0.71l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.21l-5.04,-2.29l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.6l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM757.91,300.34l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,292.98l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,285.25l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,293.5l-0.5,0.44l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM721.45,284.51l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.74l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.23l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.17l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,296.27l0.38,0.49l-0.02,1.28l-0.88,0.49l-0.53,-0.47l1.04,-1.79ZM729.04,286.98l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,284.05l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM730.55,310.47l1.11,-1.93l2.03,-0.82l0.08,0.62l-1.45,1.67l-1.77,0.46ZM728.12,305.88l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM722.9,310.24l-0.64,0.03l-2.26,-1.2l1.11,-0.24l1.78,1.41ZM716.26,305.77l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.39,-0.67l1.15,-0.02l0.75,-0.73ZM711.66,293.84l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l0.9,-1.01l0.37,1.15l2.09,1.49l1.53,-0.48l1.82,0.08l1.38,-1.19l1.0,-0.18l2.28,0.67l2.26,-0.53l1.52,-3.64l1.01,-0.99l0.78,-2.57l4.1,0.3l-1.11,1.77l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM692.58,302.03l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.68l3.69,0.45l2.13,1.04l-1.8,0.6l-2.77,-0.99l-4.8,-0.12l-5.24,-1.41l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.65l2.74,0.13l2.87,1.13l0.26,0.68ZM685.53,299.17l-2.22,0.04l-2.06,-2.03l-3.15,-2.01l-2.93,-3.51l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.5Z\",\n            name: \"Indonesia\"\n          },\n          UA: {\n            path: \"M492.5,162.44l1.28,-2.49l1.82,0.19l0.66,-0.23l0.09,-0.71l-0.25,-0.75l-0.79,-0.72l-0.33,-1.21l-0.86,-0.62l-0.02,-1.19l-1.13,-0.86l-1.15,-0.19l-2.04,-1.0l-1.66,0.32l-0.66,0.47l-0.92,-0.0l-0.84,0.78l-2.48,0.7l-1.18,-0.71l-3.07,-0.36l-0.89,0.43l-0.24,-0.55l-1.11,-0.7l0.35,-0.93l1.26,-1.02l-0.54,-1.23l2.04,-2.43l1.4,-0.62l0.25,-1.19l-1.04,-2.39l0.83,-0.13l1.28,-0.84l1.8,-0.07l2.47,0.26l2.86,0.81l1.88,0.06l0.86,0.44l1.04,-0.41l0.77,0.66l2.18,-0.15l0.92,0.3l0.52,-0.34l0.15,-1.53l0.56,-0.54l2.85,-0.05l0.84,-0.72l3.04,-0.18l1.23,1.46l-0.48,0.77l0.21,1.03l0.36,0.32l1.8,0.14l0.93,2.08l3.18,1.15l1.94,-0.45l1.67,1.49l1.4,-0.03l3.35,0.96l0.02,0.54l-0.96,1.59l0.47,1.97l-0.26,0.7l-2.36,0.28l-1.29,0.89l-0.23,1.38l-1.83,0.27l-1.58,0.97l-2.41,0.21l-2.16,1.17l-0.21,0.38l0.34,2.26l1.23,0.75l2.13,-0.08l-0.14,0.31l-2.65,0.53l-3.23,1.69l-0.87,-0.39l0.42,-1.1l-0.25,-0.52l-2.21,-0.73l2.35,-1.06l0.12,-0.65l-0.93,-0.82l-3.62,-0.74l-0.13,-0.89l-0.46,-0.34l-2.61,0.59l-0.91,1.69l-1.71,2.04l-0.86,-0.4l-1.62,0.27Z\",\n            name: \"Ukraine\"\n          },\n          QA: {\n            path: \"M549.33,221.64l-0.76,-0.23l-0.14,-1.64l0.84,-1.29l0.47,0.52l0.04,1.34l-0.45,1.3Z\",\n            name: \"Qatar\"\n          },\n          MZ: {\n            path: \"M508.58,318.75l-0.34,-2.57l0.51,-2.05l3.55,0.63l2.5,-0.38l1.02,-0.76l1.49,0.01l2.74,-0.98l1.66,-1.2l0.5,9.24l0.41,1.23l-0.68,1.67l-0.93,1.71l-1.5,1.5l-5.16,2.28l-2.78,2.73l-1.02,0.53l-1.71,1.8l-0.98,0.57l-0.35,2.41l1.16,1.94l0.49,2.17l0.43,0.31l-0.06,2.06l-0.39,1.17l0.5,0.72l-0.25,0.73l-0.92,0.83l-5.12,2.39l-1.22,1.36l0.21,1.13l0.58,0.39l-0.11,0.72l-1.22,-0.01l-0.73,-2.97l0.42,-3.09l-1.78,-5.37l2.49,-2.81l0.69,-1.89l0.44,-0.43l0.28,-1.53l-0.39,-0.93l0.59,-3.65l-0.01,-3.26l-1.49,-1.16l-1.2,-0.22l-1.74,-1.17l-1.92,0.01l-0.29,-2.08l7.06,-1.96l1.28,1.09l0.89,-0.1l0.67,0.44l0.1,0.73l-0.51,1.29l0.19,1.81l1.75,1.83l0.65,-0.13l0.71,-1.65l1.17,-0.86l-0.26,-3.47l-1.05,-1.85l-1.04,-0.94Z\",\n            name: \"Mozambique\"\n          }\n        },\n        height: 440.7063107441331,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 11.5\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    t(0), t(26), l.exports = t(27);\n  }, function (l, e, t) {\n    (function (n, a) {\n      var c, i, r;\n      !function (l) {\n        var e = {\n          set: {\n            colors: 1,\n            values: 1,\n            backgroundColor: 1,\n            scaleColors: 1,\n            normalizeFunction: 1,\n            focus: 1\n          },\n          get: {\n            selectedRegions: 1,\n            selectedMarkers: 1,\n            mapObject: 1,\n            regionName: 1\n          }\n        };\n\n        l.fn.vectorMap = function (l) {\n          var t,\n              n,\n              t = this.children(\".jvectormap-container\").data(\"mapObject\");\n          if (\"addMap\" === l) o.Map.maps[arguments[1]] = arguments[2];else {\n            if ((\"set\" === l || \"get\" === l) && e[l][arguments[1]]) return n = arguments[1].charAt(0).toUpperCase() + arguments[1].substr(1), t[l + n].apply(t, Array.prototype.slice.call(arguments, 2));\n            l = l || {}, l.container = this, t = new o.Map(l);\n          }\n          return this;\n        };\n      }(n), function (n) {\n        i = [t(0)], c = n, void 0 !== (r = \"function\" === typeof c ? c.apply(e, i) : c) && (l.exports = r);\n      }(function (l) {\n        function e(e) {\n          var i = e || window.event,\n              r = o.call(arguments, 1),\n              s = 0,\n              h = 0,\n              p = 0,\n              u = 0;\n\n          if (e = l.event.fix(i), e.type = \"mousewheel\", \"detail\" in i && (p = -1 * i.detail), \"wheelDelta\" in i && (p = i.wheelDelta), \"wheelDeltaY\" in i && (p = i.wheelDeltaY), \"wheelDeltaX\" in i && (h = -1 * i.wheelDeltaX), \"axis\" in i && i.axis === i.HORIZONTAL_AXIS && (h = -1 * p, p = 0), s = 0 === p ? h : p, \"deltaY\" in i && (p = -1 * i.deltaY, s = p), \"deltaX\" in i && (h = i.deltaX, 0 === p && (s = -1 * h)), 0 !== p || 0 !== h) {\n            if (1 === i.deltaMode) {\n              var M = l.data(this, \"mousewheel-line-height\");\n              s *= M, p *= M, h *= M;\n            } else if (2 === i.deltaMode) {\n              var m = l.data(this, \"mousewheel-page-height\");\n              s *= m, p *= m, h *= m;\n            }\n\n            return u = Math.max(Math.abs(p), Math.abs(h)), (!c || c > u) && (c = u, n(i, u) && (c /= 40)), n(i, u) && (s /= 40, h /= 40, p /= 40), s = Math[s >= 1 ? \"floor\" : \"ceil\"](s / c), h = Math[h >= 1 ? \"floor\" : \"ceil\"](h / c), p = Math[p >= 1 ? \"floor\" : \"ceil\"](p / c), e.deltaX = h, e.deltaY = p, e.deltaFactor = c, e.deltaMode = 0, r.unshift(e, s, h, p), a && clearTimeout(a), a = setTimeout(t, 200), (l.event.dispatch || l.event.handle).apply(this, r);\n          }\n        }\n\n        function t() {\n          c = null;\n        }\n\n        function n(l, e) {\n          return h.settings.adjustOldDeltas && \"mousewheel\" === l.type && e % 120 === 0;\n        }\n\n        var a,\n            c,\n            i = [\"wheel\", \"mousewheel\", \"DOMMouseScroll\", \"MozMousePixelScroll\"],\n            r = \"onwheel\" in document || document.documentMode >= 9 ? [\"wheel\"] : [\"mousewheel\", \"DomMouseScroll\", \"MozMousePixelScroll\"],\n            o = Array.prototype.slice;\n        if (l.event.fixHooks) for (var s = i.length; s;) {\n          l.event.fixHooks[i[--s]] = l.event.mouseHooks;\n        }\n        var h = l.event.special.mousewheel = {\n          version: \"3.1.9\",\n          setup: function setup() {\n            if (this.addEventListener) for (var t = r.length; t;) {\n              this.addEventListener(r[--t], e, !1);\n            } else this.onmousewheel = e;\n            l.data(this, \"mousewheel-line-height\", h.getLineHeight(this)), l.data(this, \"mousewheel-page-height\", h.getPageHeight(this));\n          },\n          teardown: function teardown() {\n            if (this.removeEventListener) for (var l = r.length; l;) {\n              this.removeEventListener(r[--l], e, !1);\n            } else this.onmousewheel = null;\n          },\n          getLineHeight: function getLineHeight(e) {\n            return parseInt(l(e)[\"offsetParent\" in l.fn ? \"offsetParent\" : \"parent\"]().css(\"fontSize\"), 10);\n          },\n          getPageHeight: function getPageHeight(e) {\n            return l(e).height();\n          },\n          settings: {\n            adjustOldDeltas: !0\n          }\n        };\n        l.fn.extend({\n          mousewheel: function mousewheel(l) {\n            return l ? this.bind(\"mousewheel\", l) : this.trigger(\"mousewheel\");\n          },\n          unmousewheel: function unmousewheel(l) {\n            return this.unbind(\"mousewheel\", l);\n          }\n        });\n      });\n      var o = {\n        inherits: function inherits(l, e) {\n          function t() {}\n\n          t.prototype = e.prototype, l.prototype = new t(), l.prototype.constructor = l, l.parentClass = e;\n        },\n        mixin: function mixin(l, e) {\n          var t;\n\n          for (t in e.prototype) {\n            e.prototype.hasOwnProperty(t) && (l.prototype[t] = e.prototype[t]);\n          }\n        },\n        min: function min(l) {\n          var e,\n              t = Number.MAX_VALUE;\n          if (l instanceof Array) for (e = 0; e < l.length; e++) {\n            l[e] < t && (t = l[e]);\n          } else for (e in l) {\n            l[e] < t && (t = l[e]);\n          }\n          return t;\n        },\n        max: function max(l) {\n          var e,\n              t = Number.MIN_VALUE;\n          if (l instanceof Array) for (e = 0; e < l.length; e++) {\n            l[e] > t && (t = l[e]);\n          } else for (e in l) {\n            l[e] > t && (t = l[e]);\n          }\n          return t;\n        },\n        keys: function keys(l) {\n          var e,\n              t = [];\n\n          for (e in l) {\n            t.push(e);\n          }\n\n          return t;\n        },\n        values: function values(l) {\n          var e,\n              t,\n              n = [];\n\n          for (t = 0; t < arguments.length; t++) {\n            l = arguments[t];\n\n            for (e in l) {\n              n.push(l[e]);\n            }\n          }\n\n          return n;\n        },\n        whenImageLoaded: function whenImageLoaded(l) {\n          var e = new o.$.Deferred(),\n              t = o.$(\"<img/>\");\n          return t.error(function () {\n            e.reject();\n          }).load(function () {\n            e.resolve(t);\n          }), t.attr(\"src\", l), e;\n        },\n        isImageUrl: function isImageUrl(l) {\n          return /\\.\\w{3,4}$/.test(l);\n        }\n      };\n      o.$ = n, Array.prototype.indexOf || (Array.prototype.indexOf = function (l, e) {\n        var t;\n        if (null == this) throw new TypeError('\"this\" is null or not defined');\n        var n = Object(this),\n            a = n.length >>> 0;\n        if (0 === a) return -1;\n        var c = +e || 0;\n        if (Math.abs(c) === 1 / 0 && (c = 0), c >= a) return -1;\n\n        for (t = Math.max(c >= 0 ? c : a - Math.abs(c), 0); a > t;) {\n          if (t in n && n[t] === l) return t;\n          t++;\n        }\n\n        return -1;\n      }), o.AbstractElement = function (l, e) {\n        this.node = this.createElement(l), this.name = l, this.properties = {}, e && this.set(e);\n      }, o.AbstractElement.prototype.set = function (l, e) {\n        var t;\n        if (\"object\" == typeof l) for (t in l) {\n          this.properties[t] = l[t], this.applyAttr(t, l[t]);\n        } else this.properties[l] = e, this.applyAttr(l, e);\n      }, o.AbstractElement.prototype.get = function (l) {\n        return this.properties[l];\n      }, o.AbstractElement.prototype.applyAttr = function (l, e) {\n        this.node.setAttribute(l, e);\n      }, o.AbstractElement.prototype.remove = function () {\n        o.$(this.node).remove();\n      }, o.AbstractCanvasElement = function (l, e, t) {\n        this.container = l, this.setSize(e, t), this.rootElement = new o[this.classPrefix + \"GroupElement\"](), this.node.appendChild(this.rootElement.node), this.container.appendChild(this.node);\n      }, o.AbstractCanvasElement.prototype.add = function (l, e) {\n        e = e || this.rootElement, e.add(l), l.canvas = this;\n      }, o.AbstractCanvasElement.prototype.addPath = function (l, e, t) {\n        var n = new o[this.classPrefix + \"PathElement\"](l, e);\n        return this.add(n, t), n;\n      }, o.AbstractCanvasElement.prototype.addCircle = function (l, e, t) {\n        var n = new o[this.classPrefix + \"CircleElement\"](l, e);\n        return this.add(n, t), n;\n      }, o.AbstractCanvasElement.prototype.addImage = function (l, e, t) {\n        var n = new o[this.classPrefix + \"ImageElement\"](l, e);\n        return this.add(n, t), n;\n      }, o.AbstractCanvasElement.prototype.addText = function (l, e, t) {\n        var n = new o[this.classPrefix + \"TextElement\"](l, e);\n        return this.add(n, t), n;\n      }, o.AbstractCanvasElement.prototype.addGroup = function (l) {\n        var e = new o[this.classPrefix + \"GroupElement\"]();\n        return l ? l.node.appendChild(e.node) : this.node.appendChild(e.node), e.canvas = this, e;\n      }, o.AbstractShapeElement = function (l, e, t) {\n        this.style = t || {}, this.style.current = this.style.current || {}, this.isHovered = !1, this.isSelected = !1, this.updateStyle();\n      }, o.AbstractShapeElement.prototype.setStyle = function (l, e) {\n        var t = {};\n        \"object\" == typeof l ? t = l : t[l] = e, o.$.extend(this.style.current, t), this.updateStyle();\n      }, o.AbstractShapeElement.prototype.updateStyle = function () {\n        var l = {};\n        o.AbstractShapeElement.mergeStyles(l, this.style.initial), o.AbstractShapeElement.mergeStyles(l, this.style.current), this.isHovered && o.AbstractShapeElement.mergeStyles(l, this.style.hover), this.isSelected && (o.AbstractShapeElement.mergeStyles(l, this.style.selected), this.isHovered && o.AbstractShapeElement.mergeStyles(l, this.style.selectedHover)), this.set(l);\n      }, o.AbstractShapeElement.mergeStyles = function (l, e) {\n        var t;\n        e = e || {};\n\n        for (t in e) {\n          null === e[t] ? delete l[t] : l[t] = e[t];\n        }\n      }, o.SVGElement = function () {\n        o.SVGElement.parentClass.apply(this, arguments);\n      }, o.inherits(o.SVGElement, o.AbstractElement), o.SVGElement.svgns = \"http://www.w3.org/2000/svg\", o.SVGElement.prototype.createElement = function (l) {\n        return document.createElementNS(o.SVGElement.svgns, l);\n      }, o.SVGElement.prototype.addClass = function (l) {\n        this.node.setAttribute(\"class\", l);\n      }, o.SVGElement.prototype.getElementCtr = function (l) {\n        return o[\"SVG\" + l];\n      }, o.SVGElement.prototype.getBBox = function () {\n        return this.node.getBBox();\n      }, o.SVGGroupElement = function () {\n        o.SVGGroupElement.parentClass.call(this, \"g\");\n      }, o.inherits(o.SVGGroupElement, o.SVGElement), o.SVGGroupElement.prototype.add = function (l) {\n        this.node.appendChild(l.node);\n      }, o.SVGCanvasElement = function () {\n        this.classPrefix = \"SVG\", o.SVGCanvasElement.parentClass.call(this, \"svg\"), this.defsElement = new o.SVGElement(\"defs\"), this.node.appendChild(this.defsElement.node), o.AbstractCanvasElement.apply(this, arguments);\n      }, o.inherits(o.SVGCanvasElement, o.SVGElement), o.mixin(o.SVGCanvasElement, o.AbstractCanvasElement), o.SVGCanvasElement.prototype.setSize = function (l, e) {\n        this.width = l, this.height = e, this.node.setAttribute(\"width\", l), this.node.setAttribute(\"height\", e);\n      }, o.SVGCanvasElement.prototype.applyTransformParams = function (l, e, t) {\n        this.scale = l, this.transX = e, this.transY = t, this.rootElement.node.setAttribute(\"transform\", \"scale(\" + l + \") translate(\" + e + \", \" + t + \")\");\n      }, o.SVGShapeElement = function (l, e) {\n        o.SVGShapeElement.parentClass.call(this, l, e), o.AbstractShapeElement.apply(this, arguments);\n      }, o.inherits(o.SVGShapeElement, o.SVGElement), o.mixin(o.SVGShapeElement, o.AbstractShapeElement), o.SVGShapeElement.prototype.applyAttr = function (l, e) {\n        var t,\n            n,\n            a = this;\n        \"fill\" === l && o.isImageUrl(e) ? o.SVGShapeElement.images[e] ? this.applyAttr(\"fill\", \"url(#image\" + o.SVGShapeElement.images[e] + \")\") : o.whenImageLoaded(e).then(function (l) {\n          n = new o.SVGElement(\"image\"), n.node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", e), n.applyAttr(\"x\", \"0\"), n.applyAttr(\"y\", \"0\"), n.applyAttr(\"width\", l[0].width), n.applyAttr(\"height\", l[0].height), t = new o.SVGElement(\"pattern\"), t.applyAttr(\"id\", \"image\" + o.SVGShapeElement.imageCounter), t.applyAttr(\"x\", 0), t.applyAttr(\"y\", 0), t.applyAttr(\"width\", l[0].width / 2), t.applyAttr(\"height\", l[0].height / 2), t.applyAttr(\"viewBox\", \"0 0 \" + l[0].width + \" \" + l[0].height), t.applyAttr(\"patternUnits\", \"userSpaceOnUse\"), t.node.appendChild(n.node), a.canvas.defsElement.node.appendChild(t.node), o.SVGShapeElement.images[e] = o.SVGShapeElement.imageCounter++, a.applyAttr(\"fill\", \"url(#image\" + o.SVGShapeElement.images[e] + \")\");\n        }) : o.SVGShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);\n      }, o.SVGShapeElement.imageCounter = 1, o.SVGShapeElement.images = {}, o.SVGPathElement = function (l, e) {\n        o.SVGPathElement.parentClass.call(this, \"path\", l, e), this.node.setAttribute(\"fill-rule\", \"evenodd\");\n      }, o.inherits(o.SVGPathElement, o.SVGShapeElement), o.SVGCircleElement = function (l, e) {\n        o.SVGCircleElement.parentClass.call(this, \"circle\", l, e);\n      }, o.inherits(o.SVGCircleElement, o.SVGShapeElement), o.SVGImageElement = function (l, e) {\n        o.SVGImageElement.parentClass.call(this, \"image\", l, e);\n      }, o.inherits(o.SVGImageElement, o.SVGShapeElement), o.SVGImageElement.prototype.applyAttr = function (l, e) {\n        var t = this;\n        \"image\" == l ? o.whenImageLoaded(e).then(function (l) {\n          t.node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", e), t.width = l[0].width, t.height = l[0].height, t.applyAttr(\"width\", t.width), t.applyAttr(\"height\", t.height), t.applyAttr(\"x\", t.cx - t.width / 2), t.applyAttr(\"y\", t.cy - t.height / 2), o.$(t.node).trigger(\"imageloaded\", [l]);\n        }) : \"cx\" == l ? (this.cx = e, this.width && this.applyAttr(\"x\", e - this.width / 2)) : \"cy\" == l ? (this.cy = e, this.height && this.applyAttr(\"y\", e - this.height / 2)) : o.SVGImageElement.parentClass.prototype.applyAttr.apply(this, arguments);\n      }, o.SVGTextElement = function (l, e) {\n        o.SVGTextElement.parentClass.call(this, \"text\", l, e);\n      }, o.inherits(o.SVGTextElement, o.SVGShapeElement), o.SVGTextElement.prototype.applyAttr = function (l, e) {\n        \"text\" === l ? this.node.textContent = e : o.SVGTextElement.parentClass.prototype.applyAttr.apply(this, arguments);\n      }, o.VMLElement = function () {\n        o.VMLElement.VMLInitialized || o.VMLElement.initializeVML(), o.VMLElement.parentClass.apply(this, arguments);\n      }, o.inherits(o.VMLElement, o.AbstractElement), o.VMLElement.VMLInitialized = !1, o.VMLElement.initializeVML = function () {\n        try {\n          document.namespaces.rvml || document.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\"), o.VMLElement.prototype.createElement = function (l) {\n            return document.createElement(\"<rvml:\" + l + ' class=\"rvml\">');\n          };\n        } catch (l) {\n          o.VMLElement.prototype.createElement = function (l) {\n            return document.createElement(\"<\" + l + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n          };\n        }\n\n        document.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\"), o.VMLElement.VMLInitialized = !0;\n      }, o.VMLElement.prototype.getElementCtr = function (l) {\n        return o[\"VML\" + l];\n      }, o.VMLElement.prototype.addClass = function (l) {\n        o.$(this.node).addClass(l);\n      }, o.VMLElement.prototype.applyAttr = function (l, e) {\n        this.node[l] = e;\n      }, o.VMLElement.prototype.getBBox = function () {\n        var l = o.$(this.node);\n        return {\n          x: l.position().left / this.canvas.scale,\n          y: l.position().top / this.canvas.scale,\n          width: l.width() / this.canvas.scale,\n          height: l.height() / this.canvas.scale\n        };\n      }, o.VMLGroupElement = function () {\n        o.VMLGroupElement.parentClass.call(this, \"group\"), this.node.style.left = \"0px\", this.node.style.top = \"0px\", this.node.coordorigin = \"0 0\";\n      }, o.inherits(o.VMLGroupElement, o.VMLElement), o.VMLGroupElement.prototype.add = function (l) {\n        this.node.appendChild(l.node);\n      }, o.VMLCanvasElement = function () {\n        this.classPrefix = \"VML\", o.VMLCanvasElement.parentClass.call(this, \"group\"), o.AbstractCanvasElement.apply(this, arguments), this.node.style.position = \"absolute\";\n      }, o.inherits(o.VMLCanvasElement, o.VMLElement), o.mixin(o.VMLCanvasElement, o.AbstractCanvasElement), o.VMLCanvasElement.prototype.setSize = function (l, e) {\n        var t, n, a, c;\n\n        if (this.width = l, this.height = e, this.node.style.width = l + \"px\", this.node.style.height = e + \"px\", this.node.coordsize = l + \" \" + e, this.node.coordorigin = \"0 0\", this.rootElement) {\n          for (t = this.rootElement.node.getElementsByTagName(\"shape\"), a = 0, c = t.length; c > a; a++) {\n            t[a].coordsize = l + \" \" + e, t[a].style.width = l + \"px\", t[a].style.height = e + \"px\";\n          }\n\n          for (n = this.node.getElementsByTagName(\"group\"), a = 0, c = n.length; c > a; a++) {\n            n[a].coordsize = l + \" \" + e, n[a].style.width = l + \"px\", n[a].style.height = e + \"px\";\n          }\n        }\n      }, o.VMLCanvasElement.prototype.applyTransformParams = function (l, e, t) {\n        this.scale = l, this.transX = e, this.transY = t, this.rootElement.node.coordorigin = this.width - e - this.width / 100 + \",\" + (this.height - t - this.height / 100), this.rootElement.node.coordsize = this.width / l + \",\" + this.height / l;\n      }, o.VMLShapeElement = function (l, e) {\n        o.VMLShapeElement.parentClass.call(this, l, e), this.fillElement = new o.VMLElement(\"fill\"), this.strokeElement = new o.VMLElement(\"stroke\"), this.node.appendChild(this.fillElement.node), this.node.appendChild(this.strokeElement.node), this.node.stroked = !1, o.AbstractShapeElement.apply(this, arguments);\n      }, o.inherits(o.VMLShapeElement, o.VMLElement), o.mixin(o.VMLShapeElement, o.AbstractShapeElement), o.VMLShapeElement.prototype.applyAttr = function (l, e) {\n        switch (l) {\n          case \"fill\":\n            this.node.fillcolor = e;\n            break;\n\n          case \"fill-opacity\":\n            this.fillElement.node.opacity = Math.round(100 * e) + \"%\";\n            break;\n\n          case \"stroke\":\n            this.node.stroked = \"none\" !== e, this.node.strokecolor = e;\n            break;\n\n          case \"stroke-opacity\":\n            this.strokeElement.node.opacity = Math.round(100 * e) + \"%\";\n            break;\n\n          case \"stroke-width\":\n            this.node.stroked = 0 !== parseInt(e, 10), this.node.strokeweight = e;\n            break;\n\n          case \"d\":\n            this.node.path = o.VMLPathElement.pathSvgToVml(e);\n            break;\n\n          default:\n            o.VMLShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);\n        }\n      }, o.VMLPathElement = function (l, e) {\n        var t = new o.VMLElement(\"skew\");\n        o.VMLPathElement.parentClass.call(this, \"shape\", l, e), this.node.coordorigin = \"0 0\", t.node.on = !0, t.node.matrix = \"0.01,0,0,0.01,0,0\", t.node.offset = \"0,0\", this.node.appendChild(t.node);\n      }, o.inherits(o.VMLPathElement, o.VMLShapeElement), o.VMLPathElement.prototype.applyAttr = function (l, e) {\n        \"d\" === l ? this.node.path = o.VMLPathElement.pathSvgToVml(e) : o.VMLShapeElement.prototype.applyAttr.call(this, l, e);\n      }, o.VMLPathElement.pathSvgToVml = function (l) {\n        var e,\n            t,\n            n = 0,\n            a = 0;\n        return l = l.replace(/(-?\\d+)e(-?\\d+)/g, \"0\"), l.replace(/([MmLlHhVvCcSs])\\s*((?:-?\\d*(?:\\.\\d+)?\\s*,?\\s*)+)/g, function (l, c, i) {\n          i = i.replace(/(\\d)-/g, \"$1,-\").replace(/^\\s+/g, \"\").replace(/\\s+$/g, \"\").replace(/\\s+/g, \",\").split(\",\"), i[0] || i.shift();\n\n          for (var r = 0, o = i.length; o > r; r++) {\n            i[r] = Math.round(100 * i[r]);\n          }\n\n          switch (c) {\n            case \"m\":\n              return n += i[0], a += i[1], \"t\" + i.join(\",\");\n\n            case \"M\":\n              return n = i[0], a = i[1], \"m\" + i.join(\",\");\n\n            case \"l\":\n              return n += i[0], a += i[1], \"r\" + i.join(\",\");\n\n            case \"L\":\n              return n = i[0], a = i[1], \"l\" + i.join(\",\");\n\n            case \"h\":\n              return n += i[0], \"r\" + i[0] + \",0\";\n\n            case \"H\":\n              return \"l\" + (n = i[0]) + \",\" + a;\n\n            case \"v\":\n              return a += i[0], \"r0,\" + i[0];\n\n            case \"V\":\n              return a = i[0], \"l\" + n + \",\" + a;\n\n            case \"c\":\n              return e = n + i[i.length - 4], t = a + i[i.length - 3], n += i[i.length - 2], a += i[i.length - 1], \"v\" + i.join(\",\");\n\n            case \"C\":\n              return e = i[i.length - 4], t = i[i.length - 3], n = i[i.length - 2], a = i[i.length - 1], \"c\" + i.join(\",\");\n\n            case \"s\":\n              return i.unshift(a - t), i.unshift(n - e), e = n + i[i.length - 4], t = a + i[i.length - 3], n += i[i.length - 2], a += i[i.length - 1], \"v\" + i.join(\",\");\n\n            case \"S\":\n              return i.unshift(a + a - t), i.unshift(n + n - e), e = i[i.length - 4], t = i[i.length - 3], n = i[i.length - 2], a = i[i.length - 1], \"c\" + i.join(\",\");\n          }\n\n          return \"\";\n        }).replace(/z/g, \"e\");\n      }, o.VMLCircleElement = function (l, e) {\n        o.VMLCircleElement.parentClass.call(this, \"oval\", l, e);\n      }, o.inherits(o.VMLCircleElement, o.VMLShapeElement), o.VMLCircleElement.prototype.applyAttr = function (l, e) {\n        switch (l) {\n          case \"r\":\n            this.node.style.width = 2 * e + \"px\", this.node.style.height = 2 * e + \"px\", this.applyAttr(\"cx\", this.get(\"cx\") || 0), this.applyAttr(\"cy\", this.get(\"cy\") || 0);\n            break;\n\n          case \"cx\":\n            if (!e) return;\n            this.node.style.left = e - (this.get(\"r\") || 0) + \"px\";\n            break;\n\n          case \"cy\":\n            if (!e) return;\n            this.node.style.top = e - (this.get(\"r\") || 0) + \"px\";\n            break;\n\n          default:\n            o.VMLCircleElement.parentClass.prototype.applyAttr.call(this, l, e);\n        }\n      }, o.VectorCanvas = function (l, e, t) {\n        return this.mode = window.SVGAngle ? \"svg\" : \"vml\", this.impl = \"svg\" == this.mode ? new o.SVGCanvasElement(l, e, t) : new o.VMLCanvasElement(l, e, t), this.impl.mode = this.mode, this.impl;\n      }, o.SimpleScale = function (l) {\n        this.scale = l;\n      }, o.SimpleScale.prototype.getValue = function (l) {\n        return l;\n      }, o.OrdinalScale = function (l) {\n        this.scale = l;\n      }, o.OrdinalScale.prototype.getValue = function (l) {\n        return this.scale[l];\n      }, o.OrdinalScale.prototype.getTicks = function () {\n        var l,\n            e = [];\n\n        for (l in this.scale) {\n          e.push({\n            label: l,\n            value: this.scale[l]\n          });\n        }\n\n        return e;\n      }, o.NumericScale = function (l, e, t, n) {\n        this.scale = [], e = e || \"linear\", l && this.setScale(l), e && this.setNormalizeFunction(e), \"undefined\" != typeof t && this.setMin(t), \"undefined\" != typeof n && this.setMax(n);\n      }, o.NumericScale.prototype = {\n        setMin: function setMin(l) {\n          this.clearMinValue = l, this.minValue = \"function\" == typeof this.normalize ? this.normalize(l) : l;\n        },\n        setMax: function setMax(l) {\n          this.clearMaxValue = l, this.maxValue = \"function\" == typeof this.normalize ? this.normalize(l) : l;\n        },\n        setScale: function setScale(l) {\n          var e;\n\n          for (this.scale = [], e = 0; e < l.length; e++) {\n            this.scale[e] = [l[e]];\n          }\n        },\n        setNormalizeFunction: function setNormalizeFunction(l) {\n          \"polynomial\" === l ? this.normalize = function (l) {\n            return Math.pow(l, .2);\n          } : \"linear\" === l ? delete this.normalize : this.normalize = l, this.setMin(this.clearMinValue), this.setMax(this.clearMaxValue);\n        },\n        getValue: function getValue(l) {\n          var e,\n              t,\n              n = [],\n              a = 0,\n              c = 0;\n\n          for (\"function\" == typeof this.normalize && (l = this.normalize(l)), c = 0; c < this.scale.length - 1; c++) {\n            e = this.vectorLength(this.vectorSubtract(this.scale[c + 1], this.scale[c])), n.push(e), a += e;\n          }\n\n          for (t = (this.maxValue - this.minValue) / a, c = 0; c < n.length; c++) {\n            n[c] *= t;\n          }\n\n          for (c = 0, l -= this.minValue; l - n[c] >= 0;) {\n            l -= n[c], c++;\n          }\n\n          return l = this.vectorToNum(c == this.scale.length - 1 ? this.scale[c] : this.vectorAdd(this.scale[c], this.vectorMult(this.vectorSubtract(this.scale[c + 1], this.scale[c]), l / n[c])));\n        },\n        vectorToNum: function vectorToNum(l) {\n          var e,\n              t = 0;\n\n          for (e = 0; e < l.length; e++) {\n            t += Math.round(l[e]) * Math.pow(256, l.length - e - 1);\n          }\n\n          return t;\n        },\n        vectorSubtract: function vectorSubtract(l, e) {\n          var t,\n              n = [];\n\n          for (t = 0; t < l.length; t++) {\n            n[t] = l[t] - e[t];\n          }\n\n          return n;\n        },\n        vectorAdd: function vectorAdd(l, e) {\n          var t,\n              n = [];\n\n          for (t = 0; t < l.length; t++) {\n            n[t] = l[t] + e[t];\n          }\n\n          return n;\n        },\n        vectorMult: function vectorMult(l, e) {\n          var t,\n              n = [];\n\n          for (t = 0; t < l.length; t++) {\n            n[t] = l[t] * e;\n          }\n\n          return n;\n        },\n        vectorLength: function vectorLength(l) {\n          var e,\n              t = 0;\n\n          for (e = 0; e < l.length; e++) {\n            t += l[e] * l[e];\n          }\n\n          return Math.sqrt(t);\n        },\n        getTicks: function getTicks() {\n          var l,\n              e,\n              t = [this.clearMinValue, this.clearMaxValue],\n              n = t[1] - t[0],\n              a = Math.pow(10, Math.floor(Math.log(n / 5) / Math.LN10)),\n              c = 5 / n * a,\n              i = [];\n\n          for (.15 >= c ? a *= 10 : .35 >= c ? a *= 5 : .75 >= c && (a *= 2), t[0] = Math.floor(t[0] / a) * a, t[1] = Math.ceil(t[1] / a) * a, l = t[0]; l <= t[1];) {\n            e = l == t[0] ? this.clearMinValue : l == t[1] ? this.clearMaxValue : l, i.push({\n              label: l,\n              value: this.getValue(e)\n            }), l += a;\n          }\n\n          return i;\n        }\n      }, o.ColorScale = function () {\n        o.ColorScale.parentClass.apply(this, arguments);\n      }, o.inherits(o.ColorScale, o.NumericScale), o.ColorScale.prototype.setScale = function (l) {\n        var e;\n\n        for (e = 0; e < l.length; e++) {\n          this.scale[e] = o.ColorScale.rgbToArray(l[e]);\n        }\n      }, o.ColorScale.prototype.getValue = function (l) {\n        return o.ColorScale.numToRgb(o.ColorScale.parentClass.prototype.getValue.call(this, l));\n      }, o.ColorScale.arrayToRgb = function (l) {\n        var e,\n            t,\n            n = \"#\";\n\n        for (t = 0; t < l.length; t++) {\n          e = l[t].toString(16), n += 1 == e.length ? \"0\" + e : e;\n        }\n\n        return n;\n      }, o.ColorScale.numToRgb = function (l) {\n        for (l = l.toString(16); l.length < 6;) {\n          l = \"0\" + l;\n        }\n\n        return \"#\" + l;\n      }, o.ColorScale.rgbToArray = function (l) {\n        return l = l.substr(1), [parseInt(l.substr(0, 2), 16), parseInt(l.substr(2, 2), 16), parseInt(l.substr(4, 2), 16)];\n      }, o.Legend = function (l) {\n        this.params = l || {}, this.map = this.params.map, this.series = this.params.series, this.body = o.$(\"<div/>\"), this.body.addClass(\"jvectormap-legend\"), this.params.cssClass && this.body.addClass(this.params.cssClass), l.vertical ? this.map.legendCntVertical.append(this.body) : this.map.legendCntHorizontal.append(this.body), this.render();\n      }, o.Legend.prototype.render = function () {\n        var l,\n            e,\n            t,\n            n,\n            a = this.series.scale.getTicks(),\n            c = o.$(\"<div/>\").addClass(\"jvectormap-legend-inner\");\n\n        for (this.body.html(\"\"), this.params.title && this.body.append(o.$(\"<div/>\").addClass(\"jvectormap-legend-title\").html(this.params.title)), this.body.append(c), l = 0; l < a.length; l++) {\n          switch (e = o.$(\"<div/>\").addClass(\"jvectormap-legend-tick\"), t = o.$(\"<div/>\").addClass(\"jvectormap-legend-tick-sample\"), this.series.params.attribute) {\n            case \"fill\":\n              o.isImageUrl(a[l].value) ? t.css(\"background\", \"url(\" + a[l].value + \")\") : t.css(\"background\", a[l].value);\n              break;\n\n            case \"stroke\":\n              t.css(\"background\", a[l].value);\n              break;\n\n            case \"image\":\n              t.css(\"background\", \"url(\" + a[l].value + \") no-repeat center center\");\n              break;\n\n            case \"r\":\n              o.$(\"<div/>\").css({\n                \"border-radius\": a[l].value,\n                border: this.map.params.markerStyle.initial[\"stroke-width\"] + \"px \" + this.map.params.markerStyle.initial.stroke + \" solid\",\n                width: 2 * a[l].value + \"px\",\n                height: 2 * a[l].value + \"px\",\n                background: this.map.params.markerStyle.initial.fill\n              }).appendTo(t);\n          }\n\n          e.append(t), n = a[l].label, this.params.labelRender && (n = this.params.labelRender(n)), e.append(o.$(\"<div>\" + n + \" </div>\").addClass(\"jvectormap-legend-tick-text\")), c.append(e);\n        }\n\n        c.append(o.$(\"<div/>\").css(\"clear\", \"both\"));\n      }, o.DataSeries = function (l, e, t) {\n        var n;\n        l = l || {}, l.attribute = l.attribute || \"fill\", this.elements = e, this.params = l, this.map = t, l.attributes && this.setAttributes(l.attributes), o.$.isArray(l.scale) ? (n = \"fill\" === l.attribute || \"stroke\" === l.attribute ? o.ColorScale : o.NumericScale, this.scale = new n(l.scale, l.normalizeFunction, l.min, l.max)) : this.scale = l.scale ? new o.OrdinalScale(l.scale) : new o.SimpleScale(l.scale), this.values = l.values || {}, this.setValues(this.values), this.params.legend && (this.legend = new o.Legend(a.extend({\n          map: this.map,\n          series: this\n        }, this.params.legend)));\n      }, o.DataSeries.prototype = {\n        setAttributes: function setAttributes(l, e) {\n          var t,\n              n = l;\n          if (\"string\" == typeof l) this.elements[l] && this.elements[l].setStyle(this.params.attribute, e);else for (t in n) {\n            this.elements[t] && this.elements[t].element.setStyle(this.params.attribute, n[t]);\n          }\n        },\n        setValues: function setValues(l) {\n          var e,\n              t,\n              n = -Number.MAX_VALUE,\n              a = Number.MAX_VALUE,\n              c = {};\n          if (this.scale instanceof o.OrdinalScale || this.scale instanceof o.SimpleScale) for (t in l) {\n            c[t] = l[t] ? this.scale.getValue(l[t]) : this.elements[t].element.style.initial[this.params.attribute];\n          } else {\n            if (\"undefined\" == typeof this.params.min || \"undefined\" == typeof this.params.max) for (t in l) {\n              e = parseFloat(l[t]), e > n && (n = e), a > e && (a = e);\n            }\n            \"undefined\" == typeof this.params.min ? (this.scale.setMin(a), this.params.min = a) : this.scale.setMin(this.params.min), \"undefined\" == typeof this.params.max ? (this.scale.setMax(n), this.params.max = n) : this.scale.setMax(this.params.max);\n\n            for (t in l) {\n              \"indexOf\" != t && (e = parseFloat(l[t]), c[t] = isNaN(e) ? this.elements[t].element.style.initial[this.params.attribute] : this.scale.getValue(e));\n            }\n          }\n          this.setAttributes(c), o.$.extend(this.values, l);\n        },\n        clear: function clear() {\n          var l,\n              e = {};\n\n          for (l in this.values) {\n            this.elements[l] && (e[l] = this.elements[l].element.shape.style.initial[this.params.attribute]);\n          }\n\n          this.setAttributes(e), this.values = {};\n        },\n        setScale: function setScale(l) {\n          this.scale.setScale(l), this.values && this.setValues(this.values);\n        },\n        setNormalizeFunction: function setNormalizeFunction(l) {\n          this.scale.setNormalizeFunction(l), this.values && this.setValues(this.values);\n        }\n      }, o.Proj = {\n        degRad: 180 / Math.PI,\n        radDeg: Math.PI / 180,\n        radius: 6381372,\n        sgn: function sgn(l) {\n          return l > 0 ? 1 : 0 > l ? -1 : l;\n        },\n        mill: function mill(l, e, t) {\n          return {\n            x: this.radius * (e - t) * this.radDeg,\n            y: -this.radius * Math.log(Math.tan((45 + .4 * l) * this.radDeg)) / .8\n          };\n        },\n        mill_inv: function mill_inv(l, e, t) {\n          return {\n            lat: (2.5 * Math.atan(Math.exp(.8 * e / this.radius)) - 5 * Math.PI / 8) * this.degRad,\n            lng: (t * this.radDeg + l / this.radius) * this.degRad\n          };\n        },\n        merc: function merc(l, e, t) {\n          return {\n            x: this.radius * (e - t) * this.radDeg,\n            y: -this.radius * Math.log(Math.tan(Math.PI / 4 + l * Math.PI / 360))\n          };\n        },\n        merc_inv: function merc_inv(l, e, t) {\n          return {\n            lat: (2 * Math.atan(Math.exp(e / this.radius)) - Math.PI / 2) * this.degRad,\n            lng: (t * this.radDeg + l / this.radius) * this.degRad\n          };\n        },\n        aea: function aea(l, e, t) {\n          var n = t * this.radDeg,\n              a = 29.5 * this.radDeg,\n              c = 45.5 * this.radDeg,\n              i = l * this.radDeg,\n              r = e * this.radDeg,\n              o = (Math.sin(a) + Math.sin(c)) / 2,\n              s = Math.cos(a) * Math.cos(a) + 2 * o * Math.sin(a),\n              h = o * (r - n),\n              p = Math.sqrt(s - 2 * o * Math.sin(i)) / o,\n              u = Math.sqrt(s - 2 * o * Math.sin(0)) / o;\n          return {\n            x: p * Math.sin(h) * this.radius,\n            y: -(u - p * Math.cos(h)) * this.radius\n          };\n        },\n        aea_inv: function aea_inv(l, e, t) {\n          var n = l / this.radius,\n              a = e / this.radius,\n              c = t * this.radDeg,\n              i = 29.5 * this.radDeg,\n              r = 45.5 * this.radDeg,\n              o = (Math.sin(i) + Math.sin(r)) / 2,\n              s = Math.cos(i) * Math.cos(i) + 2 * o * Math.sin(i),\n              h = Math.sqrt(s - 2 * o * Math.sin(0)) / o,\n              p = Math.sqrt(n * n + (h - a) * (h - a)),\n              u = Math.atan(n / (h - a));\n          return {\n            lat: Math.asin((s - p * p * o * o) / (2 * o)) * this.degRad,\n            lng: (c + u / o) * this.degRad\n          };\n        },\n        lcc: function lcc(l, e, t) {\n          var n = t * this.radDeg,\n              a = e * this.radDeg,\n              c = 33 * this.radDeg,\n              i = 45 * this.radDeg,\n              r = l * this.radDeg,\n              o = Math.log(Math.cos(c) * (1 / Math.cos(i))) / Math.log(Math.tan(Math.PI / 4 + i / 2) * (1 / Math.tan(Math.PI / 4 + c / 2))),\n              s = Math.cos(c) * Math.pow(Math.tan(Math.PI / 4 + c / 2), o) / o,\n              h = s * Math.pow(1 / Math.tan(Math.PI / 4 + r / 2), o),\n              p = s * Math.pow(1 / Math.tan(Math.PI / 4 + 0), o);\n          return {\n            x: h * Math.sin(o * (a - n)) * this.radius,\n            y: -(p - h * Math.cos(o * (a - n))) * this.radius\n          };\n        },\n        lcc_inv: function lcc_inv(l, e, t) {\n          var n = l / this.radius,\n              a = e / this.radius,\n              c = t * this.radDeg,\n              i = 33 * this.radDeg,\n              r = 45 * this.radDeg,\n              o = Math.log(Math.cos(i) * (1 / Math.cos(r))) / Math.log(Math.tan(Math.PI / 4 + r / 2) * (1 / Math.tan(Math.PI / 4 + i / 2))),\n              s = Math.cos(i) * Math.pow(Math.tan(Math.PI / 4 + i / 2), o) / o,\n              h = s * Math.pow(1 / Math.tan(Math.PI / 4 + 0), o),\n              p = this.sgn(o) * Math.sqrt(n * n + (h - a) * (h - a)),\n              u = Math.atan(n / (h - a));\n          return {\n            lat: (2 * Math.atan(Math.pow(s / p, 1 / o)) - Math.PI / 2) * this.degRad,\n            lng: (c + u / o) * this.degRad\n          };\n        }\n      }, o.MapObject = function () {}, o.MapObject.prototype.getLabelText = function (l) {\n        return this.config.label ? \"function\" == typeof this.config.label.render ? this.config.label.render(l) : l : null;\n      }, o.MapObject.prototype.getLabelOffsets = function (l) {\n        var e;\n        return this.config.label && (\"function\" == typeof this.config.label.offsets ? e = this.config.label.offsets(l) : \"object\" == typeof this.config.label.offsets && (e = this.config.label.offsets[l])), e || [0, 0];\n      }, o.MapObject.prototype.setHovered = function (l) {\n        this.isHovered !== l && (this.isHovered = l, this.shape.isHovered = l, this.shape.updateStyle(), this.label && (this.label.isHovered = l, this.label.updateStyle()));\n      }, o.MapObject.prototype.setSelected = function (l) {\n        this.isSelected !== l && (this.isSelected = l, this.shape.isSelected = l, this.shape.updateStyle(), this.label && (this.label.isSelected = l, this.label.updateStyle()), o.$(this.shape).trigger(\"selected\", [l]));\n      }, o.MapObject.prototype.setStyle = function () {\n        this.shape.setStyle.apply(this.shape, arguments);\n      }, o.MapObject.prototype.remove = function () {\n        this.shape.remove(), this.label && this.label.remove();\n      }, o.Region = function (l) {\n        var e, t, n, a;\n        this.config = l, this.map = this.config.map, a = l.canvas.addGroup(l.canvas.rootElement), this.shape = l.canvas.addPath({\n          d: l.path\n        }, l.style, a), l.canvas.addPath({\n          d: l.path,\n          \"data-code\": l.code\n        }, {\n          initial: {\n            fill: \"transparent\",\n            stroke: \"transparent\",\n            \"stroke-width\": l.margin\n          }\n        }, a).addClass(\"jvectormap-region jvectormap-element\"), e = this.shape.getBBox(), t = this.getLabelText(l.code), this.config.label && t && (n = this.getLabelOffsets(l.code), this.labelX = e.x + e.width / 2 + n[0], this.labelY = e.y + e.height / 2 + n[1], this.label = l.canvas.addText({\n          text: t,\n          \"text-anchor\": \"middle\",\n          \"alignment-baseline\": \"central\",\n          x: this.labelX,\n          y: this.labelY,\n          \"data-code\": l.code\n        }, l.labelStyle, l.labelsGroup), this.label.addClass(\"jvectormap-region jvectormap-element\"));\n      }, o.inherits(o.Region, o.MapObject), o.Region.prototype.updateLabelPosition = function () {\n        this.label && this.label.set({\n          x: this.labelX * this.map.scale + this.map.transX * this.map.scale,\n          y: this.labelY * this.map.scale + this.map.transY * this.map.scale\n        });\n      }, o.Marker = function (l) {\n        var e;\n        this.config = l, this.map = this.config.map, this.isImage = !!this.config.style.initial.image, this.createShape(), e = this.getLabelText(l.index), this.config.label && e && (this.offsets = this.getLabelOffsets(l.index), this.labelX = l.cx / this.map.scale - this.map.transX, this.labelY = l.cy / this.map.scale - this.map.transY, this.label = l.canvas.addText({\n          text: e,\n          \"data-index\": l.index,\n          dy: \"0.6ex\",\n          x: this.labelX,\n          y: this.labelY\n        }, l.labelStyle, l.labelsGroup), this.label.addClass(\"jvectormap-marker jvectormap-element\"));\n      }, o.inherits(o.Marker, o.MapObject), o.Marker.prototype.createShape = function () {\n        var l = this;\n        this.shape && this.shape.remove(), this.shape = this.config.canvas[this.isImage ? \"addImage\" : \"addCircle\"]({\n          \"data-index\": this.config.index,\n          cx: this.config.cx,\n          cy: this.config.cy\n        }, this.config.style, this.config.group), this.shape.addClass(\"jvectormap-marker jvectormap-element\"), this.isImage && o.$(this.shape.node).on(\"imageloaded\", function () {\n          l.updateLabelPosition();\n        });\n      }, o.Marker.prototype.updateLabelPosition = function () {\n        this.label && this.label.set({\n          x: this.labelX * this.map.scale + this.offsets[0] + this.map.transX * this.map.scale + 5 + (this.isImage ? (this.shape.width || 0) / 2 : this.shape.properties.r),\n          y: this.labelY * this.map.scale + this.map.transY * this.map.scale + this.offsets[1]\n        });\n      }, o.Marker.prototype.setStyle = function (l) {\n        var e;\n        o.Marker.parentClass.prototype.setStyle.apply(this, arguments), \"r\" === l && this.updateLabelPosition(), (e = !!this.shape.get(\"image\")) != this.isImage && (this.isImage = e, this.config.style = o.$.extend(!0, {}, this.shape.style), this.createShape());\n      }, o.Map = function (l) {\n        var e,\n            t = this;\n        if (this.params = o.$.extend(!0, {}, o.Map.defaultParams, l), !o.Map.maps[this.params.map]) throw new Error(\"Attempt to use map which was not loaded: \" + this.params.map);\n        this.mapData = o.Map.maps[this.params.map], this.markers = {}, this.regions = {}, this.regionsColors = {}, this.regionsData = {}, this.container = o.$(\"<div>\").addClass(\"jvectormap-container\"), this.params.container && this.params.container.append(this.container), this.container.data(\"mapObject\", this), this.defaultWidth = this.mapData.width, this.defaultHeight = this.mapData.height, this.setBackgroundColor(this.params.backgroundColor), this.onResize = function () {\n          t.updateSize();\n        }, o.$(window).resize(this.onResize);\n\n        for (e in o.Map.apiEvents) {\n          this.params[e] && this.container.bind(o.Map.apiEvents[e] + \".jvectormap\", this.params[e]);\n        }\n\n        this.canvas = new o.VectorCanvas(this.container[0], this.width, this.height), this.params.bindTouchEvents && (\"ontouchstart\" in window || window.DocumentTouch && document instanceof DocumentTouch ? this.bindContainerTouchEvents() : window.MSGesture && this.bindContainerPointerEvents()), this.bindContainerEvents(), this.bindElementEvents(), this.createTip(), this.params.zoomButtons && this.bindZoomButtons(), this.createRegions(), this.createMarkers(this.params.markers || {}), this.updateSize(), this.params.focusOn && (\"string\" == typeof this.params.focusOn ? this.params.focusOn = {\n          region: this.params.focusOn\n        } : o.$.isArray(this.params.focusOn) && (this.params.focusOn = {\n          regions: this.params.focusOn\n        }), this.setFocus(this.params.focusOn)), this.params.selectedRegions && this.setSelectedRegions(this.params.selectedRegions), this.params.selectedMarkers && this.setSelectedMarkers(this.params.selectedMarkers), this.legendCntHorizontal = o.$(\"<div/>\").addClass(\"jvectormap-legend-cnt jvectormap-legend-cnt-h\"), this.legendCntVertical = o.$(\"<div/>\").addClass(\"jvectormap-legend-cnt jvectormap-legend-cnt-v\"), this.container.append(this.legendCntHorizontal), this.container.append(this.legendCntVertical), this.params.series && this.createSeries();\n      }, o.Map.prototype = {\n        transX: 0,\n        transY: 0,\n        scale: 1,\n        baseTransX: 0,\n        baseTransY: 0,\n        baseScale: 1,\n        width: 0,\n        height: 0,\n        setBackgroundColor: function setBackgroundColor(l) {\n          this.container.css(\"background-color\", l);\n        },\n        resize: function resize() {\n          var l = this.baseScale;\n          this.width / this.height > this.defaultWidth / this.defaultHeight ? (this.baseScale = this.height / this.defaultHeight, this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale)) : (this.baseScale = this.width / this.defaultWidth, this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale)), this.scale *= this.baseScale / l, this.transX *= this.baseScale / l, this.transY *= this.baseScale / l;\n        },\n        updateSize: function updateSize() {\n          this.width = this.container.width(), this.height = this.container.height(), this.resize(), this.canvas.setSize(this.width, this.height), this.applyTransform();\n        },\n        reset: function reset() {\n          var l, e;\n\n          for (l in this.series) {\n            for (e = 0; e < this.series[l].length; e++) {\n              this.series[l][e].clear();\n            }\n          }\n\n          this.scale = this.baseScale, this.transX = this.baseTransX, this.transY = this.baseTransY, this.applyTransform();\n        },\n        applyTransform: function applyTransform() {\n          var l, e, t, n;\n          this.defaultWidth * this.scale <= this.width ? (l = (this.width - this.defaultWidth * this.scale) / (2 * this.scale), t = (this.width - this.defaultWidth * this.scale) / (2 * this.scale)) : (l = 0, t = (this.width - this.defaultWidth * this.scale) / this.scale), this.defaultHeight * this.scale <= this.height ? (e = (this.height - this.defaultHeight * this.scale) / (2 * this.scale), n = (this.height - this.defaultHeight * this.scale) / (2 * this.scale)) : (e = 0, n = (this.height - this.defaultHeight * this.scale) / this.scale), this.transY > e ? this.transY = e : this.transY < n && (this.transY = n), this.transX > l ? this.transX = l : this.transX < t && (this.transX = t), this.canvas.applyTransformParams(this.scale, this.transX, this.transY), this.markers && this.repositionMarkers(), this.repositionLabels(), this.container.trigger(\"viewportChange\", [this.scale / this.baseScale, this.transX, this.transY]);\n        },\n        bindContainerEvents: function bindContainerEvents() {\n          var l,\n              e,\n              t = !1,\n              n = this;\n          this.params.panOnDrag && (this.container.mousemove(function (a) {\n            return t && (n.transX -= (l - a.pageX) / n.scale, n.transY -= (e - a.pageY) / n.scale, n.applyTransform(), l = a.pageX, e = a.pageY), !1;\n          }).mousedown(function (n) {\n            return t = !0, l = n.pageX, e = n.pageY, !1;\n          }), this.onContainerMouseUp = function () {\n            t = !1;\n          }, o.$(\"body\").mouseup(this.onContainerMouseUp)), this.params.zoomOnScroll && this.container.mousewheel(function (l) {\n            var e = o.$(n.container).offset(),\n                t = l.pageX - e.left,\n                a = l.pageY - e.top,\n                c = Math.pow(1 + n.params.zoomOnScrollSpeed / 1e3, l.deltaFactor * l.deltaY);\n            n.tip.hide(), n.setScale(n.scale * c, t, a), l.preventDefault();\n          });\n        },\n        bindContainerTouchEvents: function bindContainerTouchEvents() {\n          var l,\n              e,\n              t,\n              n,\n              a,\n              c,\n              i,\n              r = this,\n              s = function s(_s) {\n            var h,\n                p,\n                u,\n                M,\n                m = _s.originalEvent.touches;\n            \"touchstart\" == _s.type && (i = 0), 1 == m.length ? (1 == i && (u = r.transX, M = r.transY, r.transX -= (t - m[0].pageX) / r.scale, r.transY -= (n - m[0].pageY) / r.scale, r.applyTransform(), r.tip.hide(), (u != r.transX || M != r.transY) && _s.preventDefault()), t = m[0].pageX, n = m[0].pageY) : 2 == m.length && (2 == i ? (p = Math.sqrt(Math.pow(m[0].pageX - m[1].pageX, 2) + Math.pow(m[0].pageY - m[1].pageY, 2)) / e, r.setScale(l * p, a, c), r.tip.hide(), _s.preventDefault()) : (h = o.$(r.container).offset(), a = m[0].pageX > m[1].pageX ? m[1].pageX + (m[0].pageX - m[1].pageX) / 2 : m[0].pageX + (m[1].pageX - m[0].pageX) / 2, c = m[0].pageY > m[1].pageY ? m[1].pageY + (m[0].pageY - m[1].pageY) / 2 : m[0].pageY + (m[1].pageY - m[0].pageY) / 2, a -= h.left, c -= h.top, l = r.scale, e = Math.sqrt(Math.pow(m[0].pageX - m[1].pageX, 2) + Math.pow(m[0].pageY - m[1].pageY, 2)))), i = m.length;\n          };\n\n          o.$(this.container).bind(\"touchstart\", s), o.$(this.container).bind(\"touchmove\", s);\n        },\n        bindContainerPointerEvents: function bindContainerPointerEvents() {\n          var l = this,\n              e = new MSGesture(),\n              t = this.container[0],\n              n = function n(l) {\n            e.addPointer(l.pointerId);\n          },\n              a = function a(e) {\n            var t, n;\n            (0 != e.translationX || 0 != e.translationY) && (t = l.transX, n = l.transY, l.transX += e.translationX / l.scale, l.transY += e.translationY / l.scale, l.applyTransform(), l.tip.hide(), (t != l.transX || n != l.transY) && e.preventDefault()), 1 != e.scale && (l.setScale(l.scale * e.scale, e.offsetX, e.offsetY), l.tip.hide(), e.preventDefault());\n          };\n\n          e.target = t, t.addEventListener(\"MSGestureChange\", a, !1), t.addEventListener(\"pointerdown\", n, !1);\n        },\n        bindElementEvents: function bindElementEvents() {\n          var l,\n              e,\n              t,\n              n = this;\n          this.container.mousemove(function (n) {\n            Math.abs(l - n.pageX) + Math.abs(e - n.pageY) > 2 && (t = !0);\n          }), this.container.delegate(\"[class~='jvectormap-element']\", \"mouseover mouseout\", function (l) {\n            var e = o.$(this).attr(\"class\").baseVal || o.$(this).attr(\"class\"),\n                t = -1 === e.indexOf(\"jvectormap-region\") ? \"marker\" : \"region\",\n                a = o.$(this).attr(\"region\" == t ? \"data-code\" : \"data-index\"),\n                c = \"region\" == t ? n.regions[a].element : n.markers[a].element,\n                i = \"region\" == t ? n.mapData.paths[a].name : n.markers[a].config.name || \"\",\n                r = o.$.Event(t + \"TipShow.jvectormap\"),\n                s = o.$.Event(t + \"Over.jvectormap\");\n            \"mouseover\" == l.type ? (n.container.trigger(s, [a]), s.isDefaultPrevented() || c.setHovered(!0), n.tip.text(i), n.container.trigger(r, [n.tip, a]), r.isDefaultPrevented() || (n.tip.show(), n.tipWidth = n.tip.width(), n.tipHeight = n.tip.height())) : (c.setHovered(!1), n.tip.hide(), n.container.trigger(t + \"Out.jvectormap\", [a]));\n          }), this.container.delegate(\"[class~='jvectormap-element']\", \"mousedown\", function (n) {\n            l = n.pageX, e = n.pageY, t = !1;\n          }), this.container.delegate(\"[class~='jvectormap-element']\", \"mouseup\", function () {\n            var l = o.$(this).attr(\"class\").baseVal ? o.$(this).attr(\"class\").baseVal : o.$(this).attr(\"class\"),\n                e = -1 === l.indexOf(\"jvectormap-region\") ? \"marker\" : \"region\",\n                a = o.$(this).attr(\"region\" == e ? \"data-code\" : \"data-index\"),\n                c = o.$.Event(e + \"Click.jvectormap\"),\n                i = \"region\" == e ? n.regions[a].element : n.markers[a].element;\n            t || (n.container.trigger(c, [a]), (\"region\" === e && n.params.regionsSelectable || \"marker\" === e && n.params.markersSelectable) && (c.isDefaultPrevented() || (n.params[e + \"sSelectableOne\"] && n.clearSelected(e + \"s\"), i.setSelected(!i.isSelected))));\n          });\n        },\n        bindZoomButtons: function bindZoomButtons() {\n          var l = this;\n          o.$(\"<div/>\").addClass(\"jvectormap-zoomin\").text(\"+\").appendTo(this.container), o.$(\"<div/>\").addClass(\"jvectormap-zoomout\").html(\"&#x2212;\").appendTo(this.container), this.container.find(\".jvectormap-zoomin\").click(function () {\n            l.setScale(l.scale * l.params.zoomStep, l.width / 2, l.height / 2, !1, l.params.zoomAnimate);\n          }), this.container.find(\".jvectormap-zoomout\").click(function () {\n            l.setScale(l.scale / l.params.zoomStep, l.width / 2, l.height / 2, !1, l.params.zoomAnimate);\n          });\n        },\n        createTip: function createTip() {\n          var l = this;\n          this.tip = o.$(\"<div/>\").addClass(\"jvectormap-tip\").appendTo(o.$(\"body\")), this.container.mousemove(function (e) {\n            var t = e.pageX - 15 - l.tipWidth,\n                n = e.pageY - 15 - l.tipHeight;\n            5 > t && (t = e.pageX + 15), 5 > n && (n = e.pageY + 15), l.tip.css({\n              left: t,\n              top: n\n            });\n          });\n        },\n        setScale: function setScale(l, e, t, n, a) {\n          var c,\n              i,\n              r,\n              s,\n              h,\n              p,\n              u,\n              M,\n              m,\n              f = o.$.Event(\"zoom.jvectormap\"),\n              d = this,\n              Z = 0,\n              g = Math.abs(Math.round(60 * (l - this.scale) / Math.max(l, this.scale))),\n              y = new o.$.Deferred();\n          return l > this.params.zoomMax * this.baseScale ? l = this.params.zoomMax * this.baseScale : l < this.params.zoomMin * this.baseScale && (l = this.params.zoomMin * this.baseScale), \"undefined\" != typeof e && \"undefined\" != typeof t && (zoomStep = l / this.scale, n ? (M = e + this.defaultWidth * (this.width / (this.defaultWidth * l)) / 2, m = t + this.defaultHeight * (this.height / (this.defaultHeight * l)) / 2) : (M = this.transX - (zoomStep - 1) / l * e, m = this.transY - (zoomStep - 1) / l * t)), a && g > 0 ? (i = this.scale, r = (l - i) / g, s = this.transX * this.scale, p = this.transY * this.scale, h = (M * l - s) / g, u = (m * l - p) / g, c = setInterval(function () {\n            Z += 1, d.scale = i + r * Z, d.transX = (s + h * Z) / d.scale, d.transY = (p + u * Z) / d.scale, d.applyTransform(), Z == g && (clearInterval(c), d.container.trigger(f, [l / d.baseScale]), y.resolve());\n          }, 10)) : (this.transX = M, this.transY = m, this.scale = l, this.applyTransform(), this.container.trigger(f, [l / this.baseScale]), y.resolve()), y;\n        },\n        setFocus: function setFocus(l) {\n          var e, t, n, a, c, i;\n\n          if (l = l || {}, l.region ? a = [l.region] : l.regions && (a = l.regions), a) {\n            for (c = 0; c < a.length; c++) {\n              this.regions[a[c]] && (t = this.regions[a[c]].element.shape.getBBox()) && (\"undefined\" == typeof e ? e = t : (n = {\n                x: Math.min(e.x, t.x),\n                y: Math.min(e.y, t.y),\n                width: Math.max(e.x + e.width, t.x + t.width) - Math.min(e.x, t.x),\n                height: Math.max(e.y + e.height, t.y + t.height) - Math.min(e.y, t.y)\n              }, e = n));\n            }\n\n            return this.setScale(Math.min(this.width / e.width, this.height / e.height), -(e.x + e.width / 2), -(e.y + e.height / 2), !0, l.animate);\n          }\n\n          return l.lat && l.lng ? (i = this.latLngToPoint(l.lat, l.lng), l.x = this.transX - i.x / this.scale, l.y = this.transY - i.y / this.scale) : l.x && l.y && (l.x *= -this.defaultWidth, l.y *= -this.defaultHeight), this.setScale(l.scale * this.baseScale, l.x, l.y, !0, l.animate);\n        },\n        getSelected: function getSelected(l) {\n          var e,\n              t = [];\n\n          for (e in this[l]) {\n            this[l][e].element.isSelected && t.push(e);\n          }\n\n          return t;\n        },\n        getSelectedRegions: function getSelectedRegions() {\n          return this.getSelected(\"regions\");\n        },\n        getSelectedMarkers: function getSelectedMarkers() {\n          return this.getSelected(\"markers\");\n        },\n        setSelected: function setSelected(l, e) {\n          var t;\n          if (\"object\" != typeof e && (e = [e]), o.$.isArray(e)) for (t = 0; t < e.length; t++) {\n            this[l][e[t]].element.setSelected(!0);\n          } else for (t in e) {\n            this[l][t].element.setSelected(!!e[t]);\n          }\n        },\n        setSelectedRegions: function setSelectedRegions(l) {\n          this.setSelected(\"regions\", l);\n        },\n        setSelectedMarkers: function setSelectedMarkers(l) {\n          this.setSelected(\"markers\", l);\n        },\n        clearSelected: function clearSelected(l) {\n          var e,\n              t = {},\n              n = this.getSelected(l);\n\n          for (e = 0; e < n.length; e++) {\n            t[n[e]] = !1;\n          }\n\n          this.setSelected(l, t);\n        },\n        clearSelectedRegions: function clearSelectedRegions() {\n          this.clearSelected(\"regions\");\n        },\n        clearSelectedMarkers: function clearSelectedMarkers() {\n          this.clearSelected(\"markers\");\n        },\n        getMapObject: function getMapObject() {\n          return this;\n        },\n        getRegionName: function getRegionName(l) {\n          return this.mapData.paths[l].name;\n        },\n        createRegions: function createRegions() {\n          var l,\n              e,\n              t = this;\n          this.regionLabelsGroup = this.regionLabelsGroup || this.canvas.addGroup();\n\n          for (l in this.mapData.paths) {\n            e = new o.Region({\n              map: this,\n              path: this.mapData.paths[l].path,\n              code: l,\n              style: o.$.extend(!0, {}, this.params.regionStyle),\n              margin: this.params.regionMargin,\n              labelStyle: o.$.extend(!0, {}, this.params.regionLabelStyle),\n              canvas: this.canvas,\n              labelsGroup: this.regionLabelsGroup,\n              label: \"vml\" != this.canvas.mode ? this.params.labels && this.params.labels.regions : null\n            }), o.$(e.shape).bind(\"selected\", function (l, e) {\n              t.container.trigger(\"regionSelected.jvectormap\", [o.$(this.node).attr(\"data-code\"), e, t.getSelectedRegions()]);\n            }), this.regions[l] = {\n              element: e,\n              config: this.mapData.paths[l]\n            };\n          }\n        },\n        createMarkers: function createMarkers(l) {\n          var e,\n              t,\n              n,\n              a,\n              c,\n              i = this;\n          if (this.markersGroup = this.markersGroup || this.canvas.addGroup(), this.markerLabelsGroup = this.markerLabelsGroup || this.canvas.addGroup(), o.$.isArray(l)) for (c = l.slice(), l = {}, e = 0; e < c.length; e++) {\n            l[e] = c[e];\n          }\n\n          for (e in l) {\n            a = l[e] instanceof Array ? {\n              latLng: l[e]\n            } : l[e], !1 !== (n = this.getMarkerPosition(a)) && (t = new o.Marker({\n              map: this,\n              style: o.$.extend(!0, {}, this.params.markerStyle, {\n                initial: a.style || {}\n              }),\n              labelStyle: o.$.extend(!0, {}, this.params.markerLabelStyle),\n              index: e,\n              cx: n.x,\n              cy: n.y,\n              group: this.markersGroup,\n              canvas: this.canvas,\n              labelsGroup: this.markerLabelsGroup,\n              label: \"vml\" != this.canvas.mode ? this.params.labels && this.params.labels.markers : null\n            }), o.$(t.shape).bind(\"selected\", function (l, e) {\n              i.container.trigger(\"markerSelected.jvectormap\", [o.$(this.node).attr(\"data-index\"), e, i.getSelectedMarkers()]);\n            }), this.markers[e] && this.removeMarkers([e]), this.markers[e] = {\n              element: t,\n              config: a\n            });\n          }\n        },\n        repositionMarkers: function repositionMarkers() {\n          var l, e;\n\n          for (l in this.markers) {\n            !1 !== (e = this.getMarkerPosition(this.markers[l].config)) && this.markers[l].element.setStyle({\n              cx: e.x,\n              cy: e.y\n            });\n          }\n        },\n        repositionLabels: function repositionLabels() {\n          var l;\n\n          for (l in this.regions) {\n            this.regions[l].element.updateLabelPosition();\n          }\n\n          for (l in this.markers) {\n            this.markers[l].element.updateLabelPosition();\n          }\n        },\n        getMarkerPosition: function getMarkerPosition(l) {\n          return o.Map.maps[this.params.map].projection ? this.latLngToPoint.apply(this, l.latLng || [0, 0]) : {\n            x: l.coords[0] * this.scale + this.transX * this.scale,\n            y: l.coords[1] * this.scale + this.transY * this.scale\n          };\n        },\n        addMarker: function addMarker(l, e, t) {\n          var n,\n              a,\n              c = {},\n              i = [],\n              t = t || [];\n\n          for (c[l] = e, a = 0; a < t.length; a++) {\n            n = {}, \"undefined\" != typeof t[a] && (n[l] = t[a]), i.push(n);\n          }\n\n          this.addMarkers(c, i);\n        },\n        addMarkers: function addMarkers(l, e) {\n          var t;\n\n          for (e = e || [], this.createMarkers(l), t = 0; t < e.length; t++) {\n            this.series.markers[t].setValues(e[t] || {});\n          }\n        },\n        removeMarkers: function removeMarkers(l) {\n          var e;\n\n          for (e = 0; e < l.length; e++) {\n            this.markers[l[e]].element.remove(), delete this.markers[l[e]];\n          }\n        },\n        removeAllMarkers: function removeAllMarkers() {\n          var l,\n              e = [];\n\n          for (l in this.markers) {\n            e.push(l);\n          }\n\n          this.removeMarkers(e);\n        },\n        latLngToPoint: function latLngToPoint(l, e) {\n          var t,\n              n,\n              a,\n              c = o.Map.maps[this.params.map].projection,\n              i = c.centralMeridian;\n          return -180 + i > e && (e += 360), t = o.Proj[c.type](l, e, i), !!(n = this.getInsetForPoint(t.x, t.y)) && (a = n.bbox, t.x = (t.x - a[0].x) / (a[1].x - a[0].x) * n.width * this.scale, t.y = (t.y - a[0].y) / (a[1].y - a[0].y) * n.height * this.scale, {\n            x: t.x + this.transX * this.scale + n.left * this.scale,\n            y: t.y + this.transY * this.scale + n.top * this.scale\n          });\n        },\n        pointToLatLng: function pointToLatLng(l, e) {\n          var t,\n              n,\n              a,\n              c,\n              i,\n              r = o.Map.maps[this.params.map].projection,\n              s = r.centralMeridian,\n              h = o.Map.maps[this.params.map].insets;\n\n          for (t = 0; t < h.length; t++) {\n            if (n = h[t], a = n.bbox, c = l - (this.transX * this.scale + n.left * this.scale), i = e - (this.transY * this.scale + n.top * this.scale), c = c / (n.width * this.scale) * (a[1].x - a[0].x) + a[0].x, i = i / (n.height * this.scale) * (a[1].y - a[0].y) + a[0].y, c > a[0].x && c < a[1].x && i > a[0].y && i < a[1].y) return o.Proj[r.type + \"_inv\"](c, -i, s);\n          }\n\n          return !1;\n        },\n        getInsetForPoint: function getInsetForPoint(l, e) {\n          var t,\n              n,\n              a = o.Map.maps[this.params.map].insets;\n\n          for (t = 0; t < a.length; t++) {\n            if (n = a[t].bbox, l > n[0].x && l < n[1].x && e > n[0].y && e < n[1].y) return a[t];\n          }\n        },\n        createSeries: function createSeries() {\n          var l, e;\n          this.series = {\n            markers: [],\n            regions: []\n          };\n\n          for (e in this.params.series) {\n            for (l = 0; l < this.params.series[e].length; l++) {\n              this.series[e][l] = new o.DataSeries(this.params.series[e][l], this[e], this);\n            }\n          }\n        },\n        remove: function remove() {\n          this.tip.remove(), this.container.remove(), o.$(window).unbind(\"resize\", this.onResize), o.$(\"body\").unbind(\"mouseup\", this.onContainerMouseUp);\n        }\n      }, o.Map.maps = {}, o.Map.defaultParams = {\n        map: \"world_mill_en\",\n        backgroundColor: \"#505050\",\n        zoomButtons: !0,\n        zoomOnScroll: !0,\n        zoomOnScrollSpeed: 3,\n        panOnDrag: !0,\n        zoomMax: 8,\n        zoomMin: 1,\n        zoomStep: 1.6,\n        zoomAnimate: !0,\n        regionsSelectable: !1,\n        markersSelectable: !1,\n        bindTouchEvents: !0,\n        regionStyle: {\n          initial: {\n            fill: \"white\",\n            \"fill-opacity\": 1,\n            stroke: \"none\",\n            \"stroke-width\": 0,\n            \"stroke-opacity\": 1\n          },\n          hover: {\n            \"fill-opacity\": .8,\n            cursor: \"pointer\"\n          },\n          selected: {\n            fill: \"yellow\"\n          },\n          selectedHover: {}\n        },\n        regionMargin: 0,\n        regionLabelStyle: {\n          initial: {\n            \"font-family\": \"Verdana\",\n            \"font-size\": \"12\",\n            \"font-weight\": \"bold\",\n            cursor: \"default\",\n            fill: \"black\"\n          },\n          hover: {\n            cursor: \"pointer\"\n          }\n        },\n        markerStyle: {\n          initial: {\n            fill: \"grey\",\n            stroke: \"#505050\",\n            \"fill-opacity\": 1,\n            \"stroke-width\": 1,\n            \"stroke-opacity\": 1,\n            r: 5\n          },\n          hover: {\n            stroke: \"black\",\n            \"stroke-width\": 2,\n            cursor: \"pointer\"\n          },\n          selected: {\n            fill: \"blue\"\n          },\n          selectedHover: {}\n        },\n        markerLabelStyle: {\n          initial: {\n            \"font-family\": \"Verdana\",\n            \"font-size\": \"12\",\n            \"font-weight\": \"bold\",\n            cursor: \"default\",\n            fill: \"black\"\n          },\n          hover: {\n            cursor: \"pointer\"\n          }\n        }\n      }, o.Map.apiEvents = {\n        onRegionTipShow: \"regionTipShow\",\n        onRegionOver: \"regionOver\",\n        onRegionOut: \"regionOut\",\n        onRegionClick: \"regionClick\",\n        onRegionSelected: \"regionSelected\",\n        onMarkerTipShow: \"markerTipShow\",\n        onMarkerOver: \"markerOver\",\n        onMarkerOut: \"markerOut\",\n        onMarkerClick: \"markerClick\",\n        onMarkerSelected: \"markerSelected\",\n        onViewportChange: \"viewportChange\"\n      }, o.MultiMap = function (l) {\n        var e = this;\n        this.maps = {}, this.params = o.$.extend(!0, {}, o.MultiMap.defaultParams, l), this.params.maxLevel = this.params.maxLevel || Number.MAX_VALUE, this.params.main = this.params.main || {}, this.params.main.multiMapLevel = 0, this.history = [this.addMap(this.params.main.map, this.params.main)], this.defaultProjection = this.history[0].mapData.projection.type, this.mapsLoaded = {}, this.params.container.css({\n          position: \"relative\"\n        }), this.backButton = o.$(\"<div/>\").addClass(\"jvectormap-goback\").text(\"Back\").appendTo(this.params.container), this.backButton.hide(), this.backButton.click(function () {\n          e.goBack();\n        }), this.spinner = o.$(\"<div/>\").addClass(\"jvectormap-spinner\").appendTo(this.params.container), this.spinner.hide();\n      }, o.MultiMap.prototype = {\n        addMap: function addMap(l, e) {\n          var t = o.$(\"<div/>\").css({\n            width: \"100%\",\n            height: \"100%\"\n          });\n          return this.params.container.append(t), this.maps[l] = new o.Map(o.$.extend(e, {\n            container: t\n          })), this.params.maxLevel > e.multiMapLevel && this.maps[l].container.on(\"regionClick.jvectormap\", {\n            scope: this\n          }, function (l, e) {\n            var t = l.data.scope,\n                n = t.params.mapNameByCode(e, t);\n            t.drillDownPromise && \"pending\" === t.drillDownPromise.state() || t.drillDown(n, e);\n          }), this.maps[l];\n        },\n        downloadMap: function downloadMap(l) {\n          var e = this,\n              t = o.$.Deferred();\n          return this.mapsLoaded[l] ? t.resolve() : o.$.get(this.params.mapUrlByCode(l, this)).then(function () {\n            e.mapsLoaded[l] = !0, t.resolve();\n          }, function () {\n            t.reject();\n          }), t;\n        },\n        drillDown: function drillDown(l, e) {\n          var t = this.history[this.history.length - 1],\n              n = this,\n              a = t.setFocus({\n            region: e,\n            animate: !0\n          }),\n              c = this.downloadMap(e);\n          a.then(function () {\n            \"pending\" === c.state() && n.spinner.show();\n          }), c.always(function () {\n            n.spinner.hide();\n          }), this.drillDownPromise = o.$.when(c, a), this.drillDownPromise.then(function () {\n            t.params.container.hide(), n.maps[l] ? n.maps[l].params.container.show() : n.addMap(l, {\n              map: l,\n              multiMapLevel: t.params.multiMapLevel + 1\n            }), n.history.push(n.maps[l]), n.backButton.show();\n          });\n        },\n        goBack: function goBack() {\n          var l = this.history.pop(),\n              e = this.history[this.history.length - 1],\n              t = this;\n          l.setFocus({\n            scale: 1,\n            x: .5,\n            y: .5,\n            animate: !0\n          }).then(function () {\n            l.params.container.hide(), e.params.container.show(), e.updateSize(), 1 === t.history.length && t.backButton.hide(), e.setFocus({\n              scale: 1,\n              x: .5,\n              y: .5,\n              animate: !0\n            });\n          });\n        }\n      }, o.MultiMap.defaultParams = {\n        mapNameByCode: function mapNameByCode(l, e) {\n          return l.toLowerCase() + \"_\" + e.defaultProjection + \"_en\";\n        },\n        mapUrlByCode: function mapUrlByCode(l, e) {\n          return \"jquery-jvectormap-data-\" + l.toLowerCase() + \"-\" + e.defaultProjection + \"-en.js\";\n        }\n      };\n    }).call(e, t(0), t(0));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var n = t(28);\n    t.d(e, \"VectorMap\", function () {\n      return n.a;\n    });\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (l) {\n      function n(l, e) {\n        if (!(l instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n      }\n\n      function a(l, e) {\n        if (!l) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        return !e || \"object\" !== typeof e && \"function\" !== typeof e ? l : e;\n      }\n\n      function c(l, e) {\n        if (\"function\" !== typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n        l.prototype = Object.create(e && e.prototype, {\n          constructor: {\n            value: l,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(l, e) : l.__proto__ = e);\n      }\n\n      var i = t(29),\n          r = t.n(i),\n          o = t(30),\n          s = (t.n(o), t(35)),\n          h = t.n(s),\n          p = t(2),\n          u = function () {\n        function l(l, e) {\n          for (var t = 0; t < e.length; t++) {\n            var n = e[t];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(l, n.key, n);\n          }\n        }\n\n        return function (e, t, n) {\n          return t && l(e.prototype, t), n && l(e, n), e;\n        };\n      }(),\n          M = l,\n          m = function (l) {\n        function e(l) {\n          n(this, e);\n          var t = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, l));\n          return t.$node = null, t.$mapObject = null, t;\n        }\n\n        return c(e, l), u(e, [{\n          key: \"componentWillMount\",\n          value: function value() {\n            var l = this.props.map;\n            if (!l || -1 === p.default.indexOf(l)) throw new Error(\"No such map, please select one of the following: \" + p.default.join());\n            t(40)(\"./\" + l);\n          }\n        }, {\n          key: \"componentDidMount\",\n          value: function value() {\n            var l = this.props.map;\n            this.$node = M(this.refs.map), l && (this.$node.vectorMap(Object.assign({}, this.props)), this.$mapObject = this.$node.vectorMap(\"get\", \"mapObject\"));\n          }\n        }, {\n          key: \"componentDidUpdate\",\n          value: function value() {\n            var l = this.props.map;\n            this.$node = M(this.refs.map), this.$node.empty(), l && (this.$node.vectorMap(Object.assign({}, this.props)), this.$mapObject = this.$node.vectorMap(\"get\", \"mapObject\"));\n          }\n        }, {\n          key: \"setBackgroundColor\",\n          value: function value(l) {\n            this.$mapObject.setBackgroundColor(l);\n          }\n        }, {\n          key: \"getMapObject\",\n          value: function value() {\n            return this.$mapObject;\n          }\n        }, {\n          key: \"render\",\n          value: function value() {\n            var l = {},\n                e = this.props,\n                t = e.containerStyle,\n                n = e.containerClassName;\n            return t && (l.style = t), n && (l.className = n), r.a.createElement(\"div\", Object.assign({\n              ref: \"map\"\n            }, l));\n          }\n        }]), e;\n      }(r.a.PureComponent);\n\n      m.propTypes = {\n        containerStyle: h.a.object,\n        containerClassName: h.a.string,\n        map: h.a.oneOf(p.default).isRequired,\n        backgroundColor: h.a.string,\n        zoomOnScroll: h.a.bool,\n        zoomOnScrollSpeed: h.a.bool,\n        panOnDrag: h.a.bool,\n        zoomMax: h.a.number,\n        zoomMin: h.a.number,\n        zoomStep: h.a.number,\n        zoomAnimate: h.a.bool,\n        regionsSelectable: h.a.bool,\n        regionsSelectableOne: h.a.bool,\n        markersSelectable: h.a.bool,\n        markersSelectableOne: h.a.bool,\n        regionStyle: h.a.object,\n        regionLabelStyle: h.a.object,\n        markerStyle: h.a.object,\n        markerLabelStyle: h.a.object,\n        markers: h.a.oneOfType([h.a.object, h.a.array]),\n        series: h.a.object,\n        focusOn: h.a.oneOfType([h.a.string, h.a.object]),\n        labels: h.a.object,\n        selectedRegions: h.a.oneOfType([h.a.array, h.a.object, h.a.string]),\n        selectedMarkers: h.a.oneOfType([h.a.array, h.a.object, h.a.string]),\n        onRegionTipShow: h.a.func,\n        onRegionOver: h.a.func,\n        onRegionOut: h.a.func,\n        onRegionClick: h.a.func,\n        onRegionSelected: h.a.func,\n        onMarkerTipShow: h.a.func,\n        onMarkerOver: h.a.func,\n        onMarkerOut: h.a.func,\n        onMarkerClick: h.a.func,\n        onMarkerSelected: h.a.func,\n        onViewportChange: h.a.func,\n        zoomButtons: h.a.bool\n      }, e.a = m;\n    }).call(e, t(0));\n  }, function (e, t) {\n    e.exports = l;\n  }, function (l, e, t) {\n    var n = t(31);\n    \"string\" === typeof n && (n = [[l.i, n, \"\"]]);\n    var a = {};\n    a.transform = void 0;\n    t(33)(n, a);\n    n.locals && (l.exports = n.locals);\n  }, function (l, e, t) {\n    e = l.exports = t(32)(!1), e.push([l.i, \".SecondExample {\\n  text-align: center;\\n  width: 100%; }\\n\\n.SecondExample-text {\\n  color: #4b5658;\\n  font-size: 20px; }\\n\\n.SecondExample-link {\\n  color: #4b5658;\\n  text-decoration: none; }\\n  .SecondExample-link:hover {\\n    border-bottom: 1px solid #4b5658; }\\n\\n.SecondExample-github-link {\\n  color: #3079ab;\\n  font-size: 22px;\\n  text-decoration: none; }\\n  .SecondExample-github-link:hover {\\n    border-bottom: 1px solid #3079ab; }\\n\", \"\"]);\n  }, function (l, e, t) {\n    \"use strict\";\n\n    function n(l, e) {\n      var t = l[1] || \"\",\n          n = l[3];\n      if (!n) return t;\n\n      if (e && \"function\" === typeof btoa) {\n        var c = a(n);\n        return [t].concat(n.sources.map(function (l) {\n          return \"/*# sourceURL=\" + n.sourceRoot + l + \" */\";\n        })).concat([c]).join(\"\\n\");\n      }\n\n      return [t].join(\"\\n\");\n    }\n\n    function a(l) {\n      return \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(l)))) + \" */\";\n    }\n\n    l.exports = function (l) {\n      var e = [];\n      return e.toString = function () {\n        return this.map(function (e) {\n          var t = n(e, l);\n          return e[2] ? \"@media \" + e[2] + \"{\" + t + \"}\" : t;\n        }).join(\"\");\n      }, e.i = function (l, t) {\n        \"string\" === typeof l && (l = [[null, l, \"\"]]);\n\n        for (var n = {}, a = 0; a < this.length; a++) {\n          var c = this[a][0];\n          null != c && (n[c] = !0);\n        }\n\n        for (a = 0; a < l.length; a++) {\n          var i = l[a];\n          null != i[0] && n[i[0]] || (t && !i[2] ? i[2] = t : t && (i[2] = \"(\" + i[2] + \") and (\" + t + \")\"), e.push(i));\n        }\n      }, e;\n    };\n  }, function (l, e, t) {\n    function n(l, e) {\n      for (var t = 0; t < l.length; t++) {\n        var n = l[t],\n            a = m[n.id];\n\n        if (a) {\n          a.refs++;\n\n          for (var c = 0; c < a.parts.length; c++) {\n            a.parts[c](n.parts[c]);\n          }\n\n          for (; c < n.parts.length; c++) {\n            a.parts.push(h(n.parts[c], e));\n          }\n        } else {\n          for (var i = [], c = 0; c < n.parts.length; c++) {\n            i.push(h(n.parts[c], e));\n          }\n\n          m[n.id] = {\n            id: n.id,\n            refs: 1,\n            parts: i\n          };\n        }\n      }\n    }\n\n    function a(l, e) {\n      for (var t = [], n = {}, a = 0; a < l.length; a++) {\n        var c = l[a],\n            i = e.base ? c[0] + e.base : c[0],\n            r = c[1],\n            o = c[2],\n            s = c[3],\n            h = {\n          css: r,\n          media: o,\n          sourceMap: s\n        };\n        n[i] ? n[i].parts.push(h) : t.push(n[i] = {\n          id: i,\n          parts: [h]\n        });\n      }\n\n      return t;\n    }\n\n    function c(l, e) {\n      var t = d(l.insertInto);\n      if (!t) throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n      var n = y[y.length - 1];\n      if (\"top\" === l.insertAt) n ? n.nextSibling ? t.insertBefore(e, n.nextSibling) : t.appendChild(e) : t.insertBefore(e, t.firstChild), y.push(e);else {\n        if (\"bottom\" !== l.insertAt) throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n        t.appendChild(e);\n      }\n    }\n\n    function i(l) {\n      if (null === l.parentNode) return !1;\n      l.parentNode.removeChild(l);\n      var e = y.indexOf(l);\n      e >= 0 && y.splice(e, 1);\n    }\n\n    function r(l) {\n      var e = document.createElement(\"style\");\n      return l.attrs.type = \"text/css\", s(e, l.attrs), c(l, e), e;\n    }\n\n    function o(l) {\n      var e = document.createElement(\"link\");\n      return l.attrs.type = \"text/css\", l.attrs.rel = \"stylesheet\", s(e, l.attrs), c(l, e), e;\n    }\n\n    function s(l, e) {\n      Object.keys(e).forEach(function (t) {\n        l.setAttribute(t, e[t]);\n      });\n    }\n\n    function h(l, e) {\n      var t, n, a, c;\n\n      if (e.transform && l.css) {\n        if (!(c = e.transform(l.css))) return function () {};\n        l.css = c;\n      }\n\n      if (e.singleton) {\n        var s = g++;\n        t = Z || (Z = r(e)), n = p.bind(null, t, s, !1), a = p.bind(null, t, s, !0);\n      } else l.sourceMap && \"function\" === typeof URL && \"function\" === typeof URL.createObjectURL && \"function\" === typeof URL.revokeObjectURL && \"function\" === typeof Blob && \"function\" === typeof btoa ? (t = o(e), n = M.bind(null, t, e), a = function a() {\n        i(t), t.href && URL.revokeObjectURL(t.href);\n      }) : (t = r(e), n = u.bind(null, t), a = function a() {\n        i(t);\n      });\n\n      return n(l), function (e) {\n        if (e) {\n          if (e.css === l.css && e.media === l.media && e.sourceMap === l.sourceMap) return;\n          n(l = e);\n        } else a();\n      };\n    }\n\n    function p(l, e, t, n) {\n      var a = t ? \"\" : n.css;\n      if (l.styleSheet) l.styleSheet.cssText = b(e, a);else {\n        var c = document.createTextNode(a),\n            i = l.childNodes;\n        i[e] && l.removeChild(i[e]), i.length ? l.insertBefore(c, i[e]) : l.appendChild(c);\n      }\n    }\n\n    function u(l, e) {\n      var t = e.css,\n          n = e.media;\n      if (n && l.setAttribute(\"media\", n), l.styleSheet) l.styleSheet.cssText = t;else {\n        for (; l.firstChild;) {\n          l.removeChild(l.firstChild);\n        }\n\n        l.appendChild(document.createTextNode(t));\n      }\n    }\n\n    function M(l, e, t) {\n      var n = t.css,\n          a = t.sourceMap,\n          c = void 0 === e.convertToAbsoluteUrls && a;\n      (e.convertToAbsoluteUrls || c) && (n = v(n)), a && (n += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(a)))) + \" */\");\n      var i = new Blob([n], {\n        type: \"text/css\"\n      }),\n          r = l.href;\n      l.href = URL.createObjectURL(i), r && URL.revokeObjectURL(r);\n    }\n\n    var m = {},\n        f = function (l) {\n      var e;\n      return function () {\n        return \"undefined\" === typeof e && (e = l.apply(this, arguments)), e;\n      };\n    }(function () {\n      return window && document && document.all && !window.atob;\n    }),\n        d = function (l) {\n      var e = {};\n      return function (t) {\n        return \"undefined\" === typeof e[t] && (e[t] = l.call(this, t)), e[t];\n      };\n    }(function (l) {\n      return document.querySelector(l);\n    }),\n        Z = null,\n        g = 0,\n        y = [],\n        v = t(34);\n\n    l.exports = function (l, e) {\n      if (\"undefined\" !== typeof DEBUG && DEBUG && \"object\" !== typeof document) throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n      e = e || {}, e.attrs = \"object\" === typeof e.attrs ? e.attrs : {}, e.singleton || (e.singleton = f()), e.insertInto || (e.insertInto = \"head\"), e.insertAt || (e.insertAt = \"bottom\");\n      var t = a(l, e);\n      return n(t, e), function (l) {\n        for (var c = [], i = 0; i < t.length; i++) {\n          var r = t[i],\n              o = m[r.id];\n          o.refs--, c.push(o);\n        }\n\n        if (l) {\n          n(a(l, e), e);\n        }\n\n        for (var i = 0; i < c.length; i++) {\n          var o = c[i];\n\n          if (0 === o.refs) {\n            for (var s = 0; s < o.parts.length; s++) {\n              o.parts[s]();\n            }\n\n            delete m[o.id];\n          }\n        }\n      };\n    };\n\n    var b = function () {\n      var l = [];\n      return function (e, t) {\n        return l[e] = t, l.filter(Boolean).join(\"\\n\");\n      };\n    }();\n  }, function (l, e) {\n    l.exports = function (l) {\n      var e = \"undefined\" !== typeof window && window.location;\n      if (!e) throw new Error(\"fixUrls requires window.location\");\n      if (!l || \"string\" !== typeof l) return l;\n      var t = e.protocol + \"//\" + e.host,\n          n = t + e.pathname.replace(/\\/[^\\/]*$/, \"/\");\n      return l.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (l, e) {\n        var a = e.trim().replace(/^\"(.*)\"$/, function (l, e) {\n          return e;\n        }).replace(/^'(.*)'$/, function (l, e) {\n          return e;\n        });\n        if (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(a)) return l;\n        var c;\n        return c = 0 === a.indexOf(\"//\") ? a : 0 === a.indexOf(\"/\") ? t + a : n + a.replace(/^\\.\\//, \"\"), \"url(\" + JSON.stringify(c) + \")\";\n      });\n    };\n  }, function (l, e, t) {\n    (function (e) {\n      if (\"production\" !== e.env.NODE_ENV) {\n        var n = \"function\" === typeof Symbol && Symbol.for && Symbol.for(\"react.element\") || 60103,\n            a = function a(l) {\n          return \"object\" === typeof l && null !== l && l.$$typeof === n;\n        };\n\n        l.exports = t(36)(a, !0);\n      } else l.exports = t(39)();\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (e) {\n      var n = t(3),\n          a = t(4),\n          c = t(6),\n          i = t(37),\n          r = t(5),\n          o = t(38);\n\n      l.exports = function (l, t) {\n        function s(l) {\n          var e = l && (z && l[z] || l[T]);\n          if (\"function\" === typeof e) return e;\n        }\n\n        function h(l, e) {\n          return l === e ? 0 !== l || 1 / l === 1 / e : l !== l && e !== e;\n        }\n\n        function p(l) {\n          this.message = l, this.stack = \"\";\n        }\n\n        function u(l) {\n          function n(n, s, h, u, M, m, f) {\n            if (u = u || A, m = m || h, f !== r) if (t) a(!1, \"Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types\");else if (\"production\" !== e.env.NODE_ENV && \"undefined\" !== typeof console) {\n              var d = u + \":\" + h;\n              !i[d] && o < 3 && (c(!1, \"You are manually calling a React.PropTypes validation function for the `%s` prop on `%s`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.\", m, u), i[d] = !0, o++);\n            }\n            return null == s[h] ? n ? new p(null === s[h] ? \"The \" + M + \" `\" + m + \"` is marked as required in `\" + u + \"`, but its value is `null`.\" : \"The \" + M + \" `\" + m + \"` is marked as required in `\" + u + \"`, but its value is `undefined`.\") : null : l(s, h, u, M, m);\n          }\n\n          if (\"production\" !== e.env.NODE_ENV) var i = {},\n              o = 0;\n          var s = n.bind(null, !1);\n          return s.isRequired = n.bind(null, !0), s;\n        }\n\n        function M(l) {\n          function e(e, t, n, a, c, i) {\n            var r = e[t];\n            if (x(r) !== l) return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + w(r) + \"` supplied to `\" + n + \"`, expected `\" + l + \"`.\");\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function m(l) {\n          function e(e, t, n, a, c) {\n            if (\"function\" !== typeof l) return new p(\"Property `\" + c + \"` of component `\" + n + \"` has invalid PropType notation inside arrayOf.\");\n            var i = e[t];\n\n            if (!Array.isArray(i)) {\n              return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + x(i) + \"` supplied to `\" + n + \"`, expected an array.\");\n            }\n\n            for (var o = 0; o < i.length; o++) {\n              var s = l(i, o, n, a, c + \"[\" + o + \"]\", r);\n              if (s instanceof Error) return s;\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function f(l) {\n          function e(e, t, n, a, c) {\n            if (!(e[t] instanceof l)) {\n              var i = l.name || A;\n              return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + C(e[t]) + \"` supplied to `\" + n + \"`, expected instance of `\" + i + \"`.\");\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function d(l) {\n          function t(e, t, n, a, c) {\n            for (var i = e[t], r = 0; r < l.length; r++) {\n              if (h(i, l[r])) return null;\n            }\n\n            return new p(\"Invalid \" + a + \" `\" + c + \"` of value `\" + i + \"` supplied to `\" + n + \"`, expected one of \" + JSON.stringify(l) + \".\");\n          }\n\n          return Array.isArray(l) ? u(t) : (\"production\" !== e.env.NODE_ENV && c(!1, \"Invalid argument supplied to oneOf, expected an instance of array.\"), n.thatReturnsNull);\n        }\n\n        function Z(l) {\n          function e(e, t, n, a, c) {\n            if (\"function\" !== typeof l) return new p(\"Property `\" + c + \"` of component `\" + n + \"` has invalid PropType notation inside objectOf.\");\n            var i = e[t],\n                o = x(i);\n            if (\"object\" !== o) return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + o + \"` supplied to `\" + n + \"`, expected an object.\");\n\n            for (var s in i) {\n              if (i.hasOwnProperty(s)) {\n                var h = l(i, s, n, a, c + \".\" + s, r);\n                if (h instanceof Error) return h;\n              }\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function g(l) {\n          function t(e, t, n, a, c) {\n            for (var i = 0; i < l.length; i++) {\n              if (null == (0, l[i])(e, t, n, a, c, r)) return null;\n            }\n\n            return new p(\"Invalid \" + a + \" `\" + c + \"` supplied to `\" + n + \"`.\");\n          }\n\n          if (!Array.isArray(l)) return \"production\" !== e.env.NODE_ENV && c(!1, \"Invalid argument supplied to oneOfType, expected an instance of array.\"), n.thatReturnsNull;\n\n          for (var a = 0; a < l.length; a++) {\n            var i = l[a];\n            if (\"function\" !== typeof i) return c(!1, \"Invalid argument supplied to oneOfType. Expected an array of check functions, but received %s at index %s.\", E(i), a), n.thatReturnsNull;\n          }\n\n          return u(t);\n        }\n\n        function y(l) {\n          function e(e, t, n, a, c) {\n            var i = e[t],\n                o = x(i);\n            if (\"object\" !== o) return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + o + \"` supplied to `\" + n + \"`, expected `object`.\");\n\n            for (var s in l) {\n              var h = l[s];\n\n              if (h) {\n                var u = h(i, s, n, a, c + \".\" + s, r);\n                if (u) return u;\n              }\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function v(l) {\n          function e(e, t, n, a, c) {\n            var o = e[t],\n                s = x(o);\n            if (\"object\" !== s) return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + s + \"` supplied to `\" + n + \"`, expected `object`.\");\n            var h = i({}, e[t], l);\n\n            for (var u in h) {\n              var M = l[u];\n              if (!M) return new p(\"Invalid \" + a + \" `\" + c + \"` key `\" + u + \"` supplied to `\" + n + \"`.\\nBad object: \" + JSON.stringify(e[t], null, \"  \") + \"\\nValid keys: \" + JSON.stringify(Object.keys(l), null, \"  \"));\n              var m = M(o, u, n, a, c + \".\" + u, r);\n              if (m) return m;\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function b(e) {\n          switch (typeof e) {\n            case \"number\":\n            case \"string\":\n            case \"undefined\":\n              return !0;\n\n            case \"boolean\":\n              return !e;\n\n            case \"object\":\n              if (Array.isArray(e)) return e.every(b);\n              if (null === e || l(e)) return !0;\n              var t = s(e);\n              if (!t) return !1;\n              var n,\n                  a = t.call(e);\n\n              if (t !== e.entries) {\n                for (; !(n = a.next()).done;) {\n                  if (!b(n.value)) return !1;\n                }\n              } else for (; !(n = a.next()).done;) {\n                var c = n.value;\n                if (c && !b(c[1])) return !1;\n              }\n\n              return !0;\n\n            default:\n              return !1;\n          }\n        }\n\n        function S(l, e) {\n          return \"symbol\" === l || \"Symbol\" === e[\"@@toStringTag\"] || \"function\" === typeof Symbol && e instanceof Symbol;\n        }\n\n        function x(l) {\n          var e = typeof l;\n          return Array.isArray(l) ? \"array\" : l instanceof RegExp ? \"object\" : S(e, l) ? \"symbol\" : e;\n        }\n\n        function w(l) {\n          if (\"undefined\" === typeof l || null === l) return \"\" + l;\n          var e = x(l);\n\n          if (\"object\" === e) {\n            if (l instanceof Date) return \"date\";\n            if (l instanceof RegExp) return \"regexp\";\n          }\n\n          return e;\n        }\n\n        function E(l) {\n          var e = w(l);\n\n          switch (e) {\n            case \"array\":\n            case \"object\":\n              return \"an \" + e;\n\n            case \"boolean\":\n            case \"date\":\n            case \"regexp\":\n              return \"a \" + e;\n\n            default:\n              return e;\n          }\n        }\n\n        function C(l) {\n          return l.constructor && l.constructor.name ? l.constructor.name : A;\n        }\n\n        var z = \"function\" === typeof Symbol && Symbol.iterator,\n            T = \"@@iterator\",\n            A = \"<<anonymous>>\",\n            k = {\n          array: M(\"array\"),\n          bool: M(\"boolean\"),\n          func: M(\"function\"),\n          number: M(\"number\"),\n          object: M(\"object\"),\n          string: M(\"string\"),\n          symbol: M(\"symbol\"),\n          any: function () {\n            return u(n.thatReturnsNull);\n          }(),\n          arrayOf: m,\n          element: function () {\n            function e(e, t, n, a, c) {\n              var i = e[t];\n\n              if (!l(i)) {\n                return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + x(i) + \"` supplied to `\" + n + \"`, expected a single ReactElement.\");\n              }\n\n              return null;\n            }\n\n            return u(e);\n          }(),\n          instanceOf: f,\n          node: function () {\n            function l(l, e, t, n, a) {\n              return b(l[e]) ? null : new p(\"Invalid \" + n + \" `\" + a + \"` supplied to `\" + t + \"`, expected a ReactNode.\");\n            }\n\n            return u(l);\n          }(),\n          objectOf: Z,\n          oneOf: d,\n          oneOfType: g,\n          shape: y,\n          exact: v\n        };\n        return p.prototype = Error.prototype, k.checkPropTypes = o, k.PropTypes = k, k;\n      };\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    function n(l) {\n      if (null === l || void 0 === l) throw new TypeError(\"Object.assign cannot be called with null or undefined\");\n      return Object(l);\n    }\n\n    var a = Object.getOwnPropertySymbols,\n        c = Object.prototype.hasOwnProperty,\n        i = Object.prototype.propertyIsEnumerable;\n    l.exports = function () {\n      try {\n        if (!Object.assign) return !1;\n        var l = new String(\"abc\");\n        if (l[5] = \"de\", \"5\" === Object.getOwnPropertyNames(l)[0]) return !1;\n\n        for (var e = {}, t = 0; t < 10; t++) {\n          e[\"_\" + String.fromCharCode(t)] = t;\n        }\n\n        if (\"0123456789\" !== Object.getOwnPropertyNames(e).map(function (l) {\n          return e[l];\n        }).join(\"\")) return !1;\n        var n = {};\n        return \"abcdefghijklmnopqrst\".split(\"\").forEach(function (l) {\n          n[l] = l;\n        }), \"abcdefghijklmnopqrst\" === Object.keys(Object.assign({}, n)).join(\"\");\n      } catch (l) {\n        return !1;\n      }\n    }() ? Object.assign : function (l, e) {\n      for (var t, r, o = n(l), s = 1; s < arguments.length; s++) {\n        t = Object(arguments[s]);\n\n        for (var h in t) {\n          c.call(t, h) && (o[h] = t[h]);\n        }\n\n        if (a) {\n          r = a(t);\n\n          for (var p = 0; p < r.length; p++) {\n            i.call(t, r[p]) && (o[r[p]] = t[r[p]]);\n          }\n        }\n      }\n\n      return o;\n    };\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (e) {\n      function n(l, t, n, o, s) {\n        if (\"production\" !== e.env.NODE_ENV) for (var h in l) {\n          if (l.hasOwnProperty(h)) {\n            var p;\n\n            try {\n              a(\"function\" === typeof l[h], \"%s: %s type `%s` is invalid; it must be a function, usually from the `prop-types` package, but received `%s`.\", o || \"React class\", n, h, typeof l[h]), p = l[h](t, h, o, n, null, i);\n            } catch (l) {\n              p = l;\n            }\n\n            if (c(!p || p instanceof Error, \"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", o || \"React class\", n, h, typeof p), p instanceof Error && !(p.message in r)) {\n              r[p.message] = !0;\n              var u = s ? s() : \"\";\n              c(!1, \"Failed %s type: %s%s\", n, p.message, null != u ? u : \"\");\n            }\n          }\n        }\n      }\n\n      if (\"production\" !== e.env.NODE_ENV) var a = t(4),\n          c = t(6),\n          i = t(5),\n          r = {};\n      l.exports = n;\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    var n = t(3),\n        a = t(4),\n        c = t(5);\n\n    l.exports = function () {\n      function l(l, e, t, n, i, r) {\n        r !== c && a(!1, \"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");\n      }\n\n      function e() {\n        return l;\n      }\n\n      l.isRequired = l;\n      var t = {\n        array: l,\n        bool: l,\n        func: l,\n        number: l,\n        object: l,\n        string: l,\n        symbol: l,\n        any: l,\n        arrayOf: e,\n        element: l,\n        instanceOf: e,\n        node: l,\n        objectOf: e,\n        oneOf: e,\n        oneOfType: e,\n        shape: e,\n        exact: e\n      };\n      return t.checkPropTypes = n, t.PropTypes = t, t;\n    };\n  }, function (l, e, t) {\n    function n(l) {\n      return t(a(l));\n    }\n\n    function a(l) {\n      var e = c[l];\n      if (!(e + 1)) throw new Error(\"Cannot find module '\" + l + \"'.\");\n      return e;\n    }\n\n    var c = {\n      \"./\": 2,\n      \"./africa_mill\": 7,\n      \"./africa_mill.js\": 7,\n      \"./ar_mill\": 8,\n      \"./ar_mill.js\": 8,\n      \"./asia_mill\": 9,\n      \"./asia_mill.js\": 9,\n      \"./brazil\": 10,\n      \"./brazil.js\": 10,\n      \"./ca_lcc\": 11,\n      \"./ca_lcc.js\": 11,\n      \"./ch_mill\": 12,\n      \"./ch_mill.js\": 12,\n      \"./continents_mill\": 13,\n      \"./continents_mill.js\": 13,\n      \"./es_mill\": 14,\n      \"./es_mill.js\": 14,\n      \"./europe_mill\": 15,\n      \"./europe_mill.js\": 15,\n      \"./fr_mill\": 16,\n      \"./fr_mill.js\": 16,\n      \"./index\": 2,\n      \"./index.js\": 2,\n      \"./indonesia\": 17,\n      \"./indonesia.js\": 17,\n      \"./north_america_mill\": 18,\n      \"./north_america_mill.js\": 18,\n      \"./oceania_mill\": 19,\n      \"./oceania_mill.js\": 19,\n      \"./se_mill\": 20,\n      \"./se_mill.js\": 20,\n      \"./south_america_mill\": 21,\n      \"./south_america_mill.js\": 21,\n      \"./us_aea\": 22,\n      \"./us_aea.js\": 22,\n      \"./vietnam\": 23,\n      \"./vietnam.js\": 23,\n      \"./world_mill\": 24,\n      \"./world_mill.js\": 24\n    };\n    n.keys = function () {\n      return Object.keys(c);\n    }, n.resolve = a, l.exports = n, n.id = 40;\n  }]);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"className\", \"type\", \"tooltip\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nvar Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'valid' : _ref$type,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? false : _ref$tooltip,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type + \"-\" + (tooltip ? 'tooltip' : 'feedback'))\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import React from 'react'; // TODO\n\nvar FormContext = /*#__PURE__*/React.createContext({\n  controlId: undefined\n});\nexport default FormContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"className\", \"type\", \"isValid\", \"isInvalid\", \"isStatic\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheckInput = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'checkbox' : _ref$type,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      isStatic = _ref.isStatic,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  var _ref2 = custom ? [bsCustomPrefix, 'custom-control-input'] : [bsPrefix, 'form-check-input'],\n      prefix = _ref2[0],\n      defaultPrefix = _ref2[1];\n\n  bsPrefix = useBootstrapPrefix(prefix, defaultPrefix);\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid', isStatic && 'position-static')\n  }));\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"bsCustomPrefix\", \"className\", \"htmlFor\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheckLabel = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  var _ref2 = custom ? [bsCustomPrefix, 'custom-control-label'] : [bsPrefix, 'form-check-label'],\n      prefix = _ref2[0],\n      defaultPrefix = _ref2[1];\n\n  bsPrefix = useBootstrapPrefix(prefix, defaultPrefix);\n  return /*#__PURE__*/React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"inline\", \"disabled\", \"isValid\", \"isInvalid\", \"feedbackTooltip\", \"feedback\", \"className\", \"style\", \"title\", \"type\", \"label\", \"children\", \"custom\", \"as\"];\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheck = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      _ref$feedbackTooltip = _ref.feedbackTooltip,\n      feedbackTooltip = _ref$feedbackTooltip === void 0 ? false : _ref$feedbackTooltip,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'checkbox' : _ref$type,\n      label = _ref.label,\n      children = _ref.children,\n      propCustom = _ref.custom,\n      _ref$as = _ref.as,\n      as = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var custom = type === 'switch' ? true : propCustom;\n\n  var _ref2 = custom ? [bsCustomPrefix, 'custom-control'] : [bsPrefix, 'form-check'],\n      prefix = _ref2[0],\n      defaultPrefix = _ref2[1];\n\n  bsPrefix = useBootstrapPrefix(prefix, defaultPrefix);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId,\n      custom: custom\n    };\n  }, [controlId, custom, id]);\n  var hasLabel = custom || label != null && label !== false && !children;\n  var input = /*#__PURE__*/React.createElement(FormCheckInput, _extends({}, props, {\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    isStatic: !hasLabel,\n    disabled: disabled,\n    as: as\n  }));\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    className: classNames(className, bsPrefix, custom && \"custom-\" + type, inline && bsPrefix + \"-inline\")\n  }, children || /*#__PURE__*/React.createElement(React.Fragment, null, input, hasLabel && /*#__PURE__*/React.createElement(FormCheckLabel, {\n    title: title\n  }, label), (isValid || isInvalid) && /*#__PURE__*/React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid',\n    tooltip: feedbackTooltip\n  }, feedback))));\n});\nFormCheck.displayName = 'FormCheck';\nFormCheck.Input = FormCheckInput;\nFormCheck.Label = FormCheckLabel;\nexport default FormCheck;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"className\", \"isValid\", \"isInvalid\", \"lang\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormFileInput = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      lang = _ref.lang,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  var type = 'file';\n\n  var _ref2 = custom ? [bsCustomPrefix, 'custom-file-input'] : [bsPrefix, 'form-control-file'],\n      prefix = _ref2[0],\n      defaultPrefix = _ref2[1];\n\n  bsPrefix = useBootstrapPrefix(prefix, defaultPrefix);\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    id: id || controlId,\n    type: type,\n    lang: lang,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  }));\n});\nFormFileInput.displayName = 'FormFileInput';\nexport default FormFileInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"bsCustomPrefix\", \"className\", \"htmlFor\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormFileLabel = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  var _ref2 = custom ? [bsCustomPrefix, 'custom-file-label'] : [bsPrefix, 'form-file-label'],\n      prefix = _ref2[0],\n      defaultPrefix = _ref2[1];\n\n  bsPrefix = useBootstrapPrefix(prefix, defaultPrefix);\n  return /*#__PURE__*/React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix),\n    \"data-browse\": props['data-browse']\n  }));\n});\nFormFileLabel.displayName = 'FormFileLabel';\nexport default FormFileLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"disabled\", \"isValid\", \"isInvalid\", \"feedbackTooltip\", \"feedback\", \"className\", \"style\", \"label\", \"children\", \"custom\", \"lang\", \"data-browse\", \"as\", \"inputAs\"];\nimport classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport all from 'prop-types-extra/lib/all';\nimport Feedback from './Feedback';\nimport FormFileInput from './FormFileInput';\nimport FormFileLabel from './FormFileLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormFile = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      _ref$feedbackTooltip = _ref.feedbackTooltip,\n      feedbackTooltip = _ref$feedbackTooltip === void 0 ? false : _ref$feedbackTooltip,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      label = _ref.label,\n      children = _ref.children,\n      custom = _ref.custom,\n      lang = _ref.lang,\n      dataBrowse = _ref['data-browse'],\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      _ref$inputAs = _ref.inputAs,\n      inputAs = _ref$inputAs === void 0 ? 'input' : _ref$inputAs,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _ref2 = custom ? [bsCustomPrefix, 'custom'] : [bsPrefix, 'form-file'],\n      prefix = _ref2[0],\n      defaultPrefix = _ref2[1];\n\n  bsPrefix = useBootstrapPrefix(prefix, defaultPrefix);\n  var type = 'file';\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId,\n      custom: custom\n    };\n  }, [controlId, custom, id]);\n  var hasLabel = label != null && label !== false && !children;\n  var input = /*#__PURE__*/React.createElement(FormFileInput, _extends({}, props, {\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: inputAs,\n    lang: lang\n  }));\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, /*#__PURE__*/React.createElement(Component, {\n    style: style,\n    className: classNames(className, bsPrefix, custom && \"custom-\" + type)\n  }, children || /*#__PURE__*/React.createElement(React.Fragment, null, custom ? /*#__PURE__*/React.createElement(React.Fragment, null, input, hasLabel && /*#__PURE__*/React.createElement(FormFileLabel, {\n    \"data-browse\": dataBrowse\n  }, label)) : /*#__PURE__*/React.createElement(React.Fragment, null, hasLabel && /*#__PURE__*/React.createElement(FormFileLabel, null, label), input), (isValid || isInvalid) && /*#__PURE__*/React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid',\n    tooltip: feedbackTooltip\n  }, feedback))));\n});\nFormFile.displayName = 'FormFile';\nFormFile.Input = FormFileInput;\nFormFile.Label = FormFileLabel;\nexport default FormFile;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"bsCustomPrefix\", \"type\", \"size\", \"htmlSize\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"custom\", \"as\"];\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormControl = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      type = _ref.type,\n      size = _ref.size,\n      htmlSize = _ref.htmlSize,\n      id = _ref.id,\n      className = _ref.className,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      plaintext = _ref.plaintext,\n      readOnly = _ref.readOnly,\n      custom = _ref.custom,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var _ref2 = custom ? [bsCustomPrefix, 'custom'] : [bsPrefix, 'form-control'],\n      prefix = _ref2[0],\n      defaultPrefix = _ref2[1];\n\n  bsPrefix = useBootstrapPrefix(prefix, defaultPrefix);\n  var classes;\n\n  if (plaintext) {\n    var _classes;\n\n    classes = (_classes = {}, _classes[bsPrefix + \"-plaintext\"] = true, _classes);\n  } else if (type === 'file') {\n    var _classes2;\n\n    classes = (_classes2 = {}, _classes2[bsPrefix + \"-file\"] = true, _classes2);\n  } else if (type === 'range') {\n    var _classes3;\n\n    classes = (_classes3 = {}, _classes3[bsPrefix + \"-range\"] = true, _classes3);\n  } else if (Component === 'select' && custom) {\n    var _classes4;\n\n    classes = (_classes4 = {}, _classes4[bsPrefix + \"-select\"] = true, _classes4[bsPrefix + \"-select-\" + size] = size, _classes4);\n  } else {\n    var _classes5;\n\n    classes = (_classes5 = {}, _classes5[bsPrefix] = true, _classes5[bsPrefix + \"-\" + size] = size, _classes5);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\")\n  }));\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback: Feedback\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"controlId\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      controlId = _ref.controlId,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-group');\n  var context = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }), children));\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"bsPrefix\", \"column\", \"srOnly\", \"className\", \"htmlFor\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  column: false,\n  srOnly: false\n};\nvar FormLabel = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'label' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      column = _ref.column,\n      srOnly = _ref.srOnly,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  var columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = columnClass + \" \" + columnClass + \"-\" + column;\n  var classes = classNames(className, bsPrefix, srOnly && 'sr-only', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/React.createElement(Col, _extends({\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor\n  }, props));\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    React.createElement(Component, _extends({\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor\n    }, props))\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\", \"muted\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'small' : _ref$as,\n      muted = _ref.muted,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  }));\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport FormCheck from './FormCheck';\nvar Switch = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(FormCheck, _extends({}, props, {\n    ref: ref,\n    type: \"switch\"\n  }));\n});\nSwitch.displayName = 'Switch';\nSwitch.Input = FormCheck.Input;\nSwitch.Label = FormCheck.Label;\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"inline\", \"className\", \"validated\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport FormCheck from './FormCheck';\nimport FormFile from './FormFile';\nimport FormControl from './FormControl';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar FormRow = createWithBsPrefix('form-row');\nvar defaultProps = {\n  inline: false\n};\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      inline = _ref.inline,\n      className = _ref.className,\n      validated = _ref.validated,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'form' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated', inline && bsPrefix + \"-inline\")\n  }));\n});\nFormImpl.displayName = 'Form';\nFormImpl.defaultProps = defaultProps;\nFormImpl.Row = FormRow;\nFormImpl.Group = FormGroup;\nFormImpl.Control = FormControl;\nFormImpl.Check = FormCheck;\nFormImpl.File = FormFile;\nFormImpl.Switch = Switch;\nFormImpl.Label = FormLabel;\nFormImpl.Text = FormText;\nexport default FormImpl;"],"sourceRoot":""}